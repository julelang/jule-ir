// Auto generated by JuleC.
// JuleC version: jule0.1.1 @master
// Date: 28/10/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include <winsock2.h>
#include <ws2ipdef.h>
#include <fcntl.h>
#include <io.h>
#include <windows.h>
#include <cstdio>
#include <sys/stat.h>
#include <time.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _1aa94d8d6_Char;
struct _1aa94de8b_Wchar;
struct _1aa94e541_SignedChar;
struct _1aa94eae6_UnsignedChar;
struct _1aa95019b_Short;
struct _1aa95070c_ShortInt;
struct _1aa950c18_SignedShort;
struct _1aa9512bd_SignedShortInt;
struct _1aa951961_UnsignedShort;
struct _1aa956d51_UnsignedShortInt;
struct _1aa957428_Int;
struct _1aa957989_Signed;
struct _1aa957e95_SignedInt;
struct _1aa958638_Unsigned;
struct _1aa958b99_UnsignedInt;
struct _1aa959293_Long;
struct _1aa959804_LongInt;
struct _1aa959d10_SignedLong;
struct _1aa95a3b5_SignedLongInt;
struct _1aa95aa58_UnsignedLong;
struct _1aa95b0b9_UnsignedLongInt;
struct _1aa95b63b_LongLong;
struct _1aa95bc24_LongLongInt;
struct _1aa95c230_SignedLongLong;
struct _1aa95c7d5_SignedLongLongInt;
struct _1aa95ce78_UnsignedLongLong;
struct _1aa95d4d9_UnsignedLongLongInt;
struct _1aa95dad3_Float;
struct _1aa95e188_Double;
struct _1aa95e73d_LongDouble;
struct _1aa95ece3_Bool;
struct _1aa9785ae_Errno;
struct _1aa9793c3_secType;
struct _1aa9797be_usecType;
struct _1aa97a23c_WsaData;
struct _1aa97c6a1_SysStat;
struct _1aa97d0b9_Win32FindData;
struct _1aa97d6b3_Handle;
struct _1aa97e3d9_Timeval;
struct _1aa97ebae_Sockaddr;
struct _1aa980eac_SockaddrIn;
struct _1aa982211_SockaddrIn6;
struct _1aa982981_Fd;
struct _1d78abc24_acceptRange;
struct _1bbdc0e24_LittleEndian;
struct _1a93e64a1__DWORD;
struct _1bbddab42_u128;
struct _1acc44c1e_group;
struct _1ba98328a_group;
struct _1acc42b62__Map;
struct _1ba981398__Map;
struct _1acc4d3dc_mapIterator;
struct _1ba989abb_mapIterator;
struct _1a93e699b_metadata;
struct _1bc0a106b_Builder;
struct _1bd4258b7_foldPair;
struct _1bd425db2_CaseRange;
struct _1bd426368_Range16;
struct _1bd426896_Range32;
struct _1bd426d19_RangeTable;
struct _1aaae7783_d;
struct _1bd435014_lazyBuff;
struct _1bc28335d_cmdAttrs;
struct _1bc288220_File;
struct _1bc28a7c7_Stat;
struct _1bc0b03aa_Log;
struct _1a49dae96_floatInfo;
struct _1a49dbae0_decimalSlice;
struct _1a49edb68_leftCheat;
struct _1a49ee680_decimal;
struct _1bd46ba62_AnsiEscape;
struct _1a4a04d17_Logger;
struct _1a79633b0_Token;
struct _1a7968e65_Fileset;
struct _1a796b286_kindPair;
struct _1a7972226_lex;
struct _1a7976deb_AST;
struct _1a7977ca9_Node;
struct _1a79781c7_Directive;
struct _1a7978caa_TypeDecl;
struct _1a79793b5_IdentTypeDecl;
struct _1a797967e_SubIdentTypeDecl;
struct _1a7979a58_NamespaceTypeDecl;
struct _1a7979d55_SptrTypeDecl;
struct _1a797a1da_SlcTypeDecl;
struct _1a797a4d7_TupleTypeDecl;
struct _1a797a7d4_PtrTypeDecl;
struct _1a797b076_ArrTypeDecl;
struct _1a797b7c4_MapTypeDecl;
struct _1a797bb9d_RetTypeDecl;
struct _1a797d0de_Expr;
struct _1a797d3a8_RangeExpr;
struct _1a797d9b3_UseExpr;
struct _1a797dbd3_TupleExpr;
struct _1a797e079_LitExpr;
struct _1a797e453_UnsafeExpr;
struct _1a797e909_IdentExpr;
struct _1a798019b_UnaryExpr;
struct _1a7980575_VariadicExpr;
struct _1a798094e_CastExpr;
struct _1a7980d28_NamespaceExpr;
struct _1a7981202_SubIdentExpr;
struct _1a79816a8_BinaryExpr;
struct _1a7981d18_FnCallExpr;
struct _1a798280d_FieldExprPair;
struct _1a7983138_StructLit;
struct _1a79835de_BraceLit;
struct _1a7983e19_KeyValPair;
struct _1a7984645_SliceExpr;
struct _1a79850a2_IndexingExpr;
struct _1a7985712_SlicingExpr;
struct _1a7985a0e_Constraint;
struct _1a7985eb5_GenericDecl;
struct _1a798638e_LabelSt;
struct _1a7986768_GotoSt;
struct _1a7986a65_FallSt;
struct _1a79871c5_AssignLeft;
struct _1a7987758_AssignSt;
struct _1a7988748_Stmt;
struct _1a7988da8_ScopeTree;
struct _1a79895e5_ParamDecl;
struct _1a798aa47_FnDecl;
struct _1a798bc02_VarDecl;
struct _1a798c0cb_RetSt;
struct _1a798c84b_Iter;
struct _1a798d176_WhileKind;
struct _1a798da7d_RangeKind;
struct _1a798de57_BreakSt;
struct _1a798e331_ContSt;
struct _1a798e7d7_If;
struct _1a798ebb1_Else;
struct _1a7990167_Conditional;
struct _1a7990981_TypeAliasDecl;
struct _1a7990e37_Case;
struct _1a7991751_MatchCase;
struct _1a7991cd4_UseDecl;
struct _1a799228a_EnumItemDecl;
struct _1a7992d4b_EnumDecl;
struct _1a7993676_TypeEnumItemDecl;
struct _1a7993cd6_TypeEnumDecl;
struct _1a79940a0_FieldDecl;
struct _1a7994996_StructDecl;
struct _1a79951d3_TraitDecl;
struct _1a7995843_Impl;
struct _1a79ea9a8_Const;
struct _1a7996800_Field;
struct _1a7997adc_Struct;
struct _1a7999d53_FieldIns;
struct _1a799a97a_StructIns;
struct _1a7a633b1_OperandExpr;
struct _1a7a638ab_BinaryExpr;
struct _1a7a63c85_UnaryExpr;
struct _1a7a642b3_StructArgExpr;
struct _1a7a64659_StructLitExpr;
struct _1a7a64956_AllocStructLitExpr;
struct _1a7a64ed9_CastingExpr;
struct _1a7a6588b_FnCallExpr;
struct _1a7a65c65_SliceExpr;
struct _1a7a6621b_IndexingExpr;
struct _1a7a666c2_AnonFnExpr;
struct _1a7a66a9b_KeyValPairExpr;
struct _1a7a66e75_MapExpr;
struct _1a7a67508_SlicingExpr;
struct _1a7a67a8b_TraitSubIdentExpr;
struct _1a7a6842c_StructSubIdentExpr;
struct _1a7a687c3_StructStaticIdentExpr;
struct _1a7a68b9c_ArrayExpr;
struct _1a7a68e99_TupleExpr;
struct _1a7a69296_BuiltinPrintCallExpr;
struct _1a7a69593_BuiltinPrintlnCallExpr;
struct _1a7a6996c_BuiltinNewCallExpr;
struct _1a7a69d46_BuiltinPanicCallExpr;
struct _1a7a6a2ec_BuiltinMakeCallExpr;
struct _1a7a6a6c6_BuiltinAppendCallExpr;
struct _1a7a6a9c3_BuiltinLenCallExpr;
struct _1a7a6acc0_BuiltinCapCallExpr;
struct _1a7a6b199_BuiltinDeleteCallExpr;
struct _1a7a6b573_BuiltinCopyCallExpr;
struct _1a7a6b94c_BuiltinErrorCallExpr;
struct _1a7a6bc49_SizeofExpr;
struct _1a7a6c3ed_AlignofExpr;
struct _1a7a6c5da_RuneExpr;
struct _1a7a6c95e_BackendEmitExpr;
struct _1a7a6cc5b_FreeExpr;
struct _1a7a6d9e8_RetType;
struct _1a7a6e0ae_Param;
struct _1a7a70a83_Fn;
struct _1a7a729db_ParamIns;
struct _1a7a73b41_FnIns;
struct _1a7a76d86_SymTab;
struct _1a7a7b297_Trait;
struct _1a7a7cde2_EnumItem;
struct _1a7a7d94d_Enum;
struct _1a7a7ea81_TypeEnumItem;
struct _1a7a80158_TypeEnum;
struct _1a7b00e65_comptimeRange;
struct _1a7b019c1_comptimeStructField;
struct _1a7b03264_comptimeStructFields;
struct _1a7b04be4_comptimeStatic;
struct _1a7b06498_comptimeStatics;
struct _1a7b07e17_comptimeEnumField;
struct _1a7b09226_comptimeEnumFields;
struct _1a7b0ac2d_comptimeParam;
struct _1a7b0ca87_comptimeParams;
struct _1a7b0e3e6_comptimeTypeInfos;
struct _1a7b10d65_comptimeTypeInfo;
struct _1a7b16e6a_comptimeValue;
struct _1a7b19bc6_comptimeFiles;
struct _1a7b1b645_comptimeFile;
struct _1a7b1d26d_comptimeDecls;
struct _1a7b2055b_comptimeDecl;
struct _1a7b26e47_constraintChecker;
struct _1a7b29246_Impl;
struct _1a7b2b9a7_exprPart;
struct _1a7b2c238_Scope;
struct _1a7b2c612_If;
struct _1a7b2c986_Else;
struct _1a7b2cd2c_Conditional;
struct _1a7b2d129_InfIter;
struct _1a7b2d5d0_WhileIter;
struct _1a7b2e0b4_RangeIter;
struct _1a7b2e3b1_ContSt;
struct _1a7b2e78a_BreakSt;
struct _1a7b2ec41_Label;
struct _1a7b303a1_GotoSt;
struct _1a7b3077a_Postfix;
struct _1a7b30c31_Assign;
struct _1a7b312b4_MultiAssign;
struct _1a7b31c32_Match;
struct _1a7b32529_Case;
struct _1a7b32c22_FallSt;
struct _1a7b330b8_RetSt;
struct _1a7b3356e_scopeLabel;
struct _1a7b33948_result;
struct _1a7b34938_scopeChecker;
struct _1a7b49e7b_directiveChecker;
struct _1a7b4c786_ReferenceStack;
struct _1a7b4dcd7_Pass;
struct _1a7b5378c_symBuilder;
struct _1a7b5e80e_ImportInfo;
struct _1a7b62081_Package;
struct _1a7b7b034_commonSemaMeta;
struct _1a7b7c0bd_sema;
struct _1a7ba14cc_missingRetChecker;
struct _1a7ba4eb4_Var;
struct _1a7ba5d3e_FuncPattern;
struct _1a7bd9900_typeCompatibilityChecker;
struct _1a7bdb77b_assignTypeChecker;
struct _1a7bdd151_dynamicTypeAnnotation;
struct _1a7be2ead_fnCallArgChecker;
struct _1a7be5de5_structLitChecker;
struct _1a7be7bc7_rangeChecker;
struct _1a7bea5e2_retTypeChecker;
struct _1a7bed89d_Data;
struct _1a7beea25_Value;
struct _1a7beedee_target;
struct _1a7c0086c_eval;
struct _1a7c20969_unaryEval;
struct _1a7c22905_binaryEval;
struct _1a7c30b77_InsGeneric;
struct _1a7c31848_TypeAlias;
struct _1a7c3255d_Type;
struct _1a7c3a962_TypeSym;
struct _1a7c3b369_Prim;
struct _1a7c3ed95_Sptr;
struct _1a7c40868_Slc;
struct _1a7c4145c_Tuple;
struct _1a7c4200c_Map;
struct _1a7c42b89_Arr;
struct _1a7c4365c_Ptr;
struct _1a7c4465d_referencer;
struct _1a7c4564d_typeChecker;
struct _1a7c4d711_identTypeLookup;
struct _1a855e939_FileInfo;
struct _1a85ae4c2_stmt;
struct _1a85aed63_scopeParser;
struct _1a85bc788_exprBuilder;
struct _1a85c9d7d_assignInfo;
struct _1a85cd06d_parser;
struct _1a85de227_typeBuilder;
struct _1a7d61637_CompileInfo;
struct _1a7d62d75_directiveEval;
struct _1a85e332a_Importer;
struct _1a7cb4ec5_anyData;
struct _1a85e9441_ExprInspector;
struct _1a8601a0e_MetaStrBuilder;
struct _1a86026d0_MetaRuntime;
struct _1a86031a3_MetaMathCmplx;
struct _1a86037ad_Meta;
struct _1a8604c87_OrderedDefines;
struct _1ad6c8bd0_xorshift;
struct _1a92032e1_liveTable;
struct _1a92036a9_ObjectDeadCode;
struct _1a92077ce_scopeDeadCode;
struct _1a920bd66_exprDeadCode;
struct _1a69a1ba2_StrFromBytes;
struct _1a69a1e7c_ExceptionalForwardingExpr;
struct _1a69a2213_FnCallIgnoreExceptionalExpr;
struct _1a69a2587_StrConcatExpr;
struct _1a69a292d_SwapExpr;
struct _1a69a2d07_EmptyCompareExpr;
struct _1a69a3104_RefExpr;
struct _1a69a3643_StrCompExpr;
struct _1a69a3bc6_MutSlicingExpr;
struct _1a69a3ec3_UnsafeBinaryExpr;
struct _1a69a42c0_UnsafeIndexingExpr;
struct _1a69a4699_PushToSliceExpr;
struct _1a69a4a73_AppendToSliceExpr;
struct _1a69a4e4c_StrRuneIter;
struct _1a69a5249_UnsafeDerefExpr;
struct _1a69a5777_UnsafeCastingExpr;
struct _1a69a62d3_nilVar;
struct _1a69a6624_nils;
struct _1a910e384_scopeOptimizer;
struct _1a9116c82_exprOptimizer;
struct _1a911e63b_dynamicVar;
struct _1a911e97c_dynamic;
struct _1a91220ab_dataCheckpoint;
struct _1a91225a6_data;
struct _1a9124520_boundaryVar;
struct _1a9124861_boundary;
struct _1a920ce88_Optimizer;
struct _1aa889822_AbsTime;
struct _1aa889ee8_Time;
struct _1acbe91e0_UnixTime;
struct _1acbe970c_TimeData;
struct _1acbe9dd3_DurInt;
struct _1a92120ad_scopeCoder;
struct _1a921d20c_exprCoder;
struct _1a92308d4_TestCoder;
struct _1a9233530_identCoder;
struct _1aa894c8e_SerializationInfo;
struct _1aa8951ac_traitCast;
struct _1aa895586_anonHash;
struct _1aa8959a4_traitHash;
struct _1aa895ca1_metadata;
struct _1aa897544_ObjectCoder;
struct _1aa8a6564_customType;
struct _1aa8a717a_typeCoder;
struct _1aa8aec65_resultCoder;
struct _1baaa1e8b_Flag;
struct _1baaa5214_Flag;
struct _1baaa8459_Flag;
struct _1baaab6e3_Flag;
struct _1baaae938_Flag;
struct _1aa924d63_FlagSet;
struct _1aa927827_argParser;
struct _1a85e5c78_IR;
struct _1bc2584ba_Dir;
struct _1bc259059_Cmd;
struct _1aa94d8d6_Char {
};
inline jule::Bool _1aa94d8d6_Char_eq(_1aa94d8d6_Char *_self_, _1aa94d8d6_Char _other_);


struct _1aa94de8b_Wchar {
};
inline jule::Bool _1aa94de8b_Wchar_eq(_1aa94de8b_Wchar *_self_, _1aa94de8b_Wchar _other_);


struct _1aa94e541_SignedChar {
};
inline jule::Bool _1aa94e541_SignedChar_eq(_1aa94e541_SignedChar *_self_, _1aa94e541_SignedChar _other_);


struct _1aa94eae6_UnsignedChar {
};
inline jule::Bool _1aa94eae6_UnsignedChar_eq(_1aa94eae6_UnsignedChar *_self_, _1aa94eae6_UnsignedChar _other_);


struct _1aa95019b_Short {
};
inline jule::Bool _1aa95019b_Short_eq(_1aa95019b_Short *_self_, _1aa95019b_Short _other_);


struct _1aa95070c_ShortInt {
};
inline jule::Bool _1aa95070c_ShortInt_eq(_1aa95070c_ShortInt *_self_, _1aa95070c_ShortInt _other_);


struct _1aa950c18_SignedShort {
};
inline jule::Bool _1aa950c18_SignedShort_eq(_1aa950c18_SignedShort *_self_, _1aa950c18_SignedShort _other_);


struct _1aa9512bd_SignedShortInt {
};
inline jule::Bool _1aa9512bd_SignedShortInt_eq(_1aa9512bd_SignedShortInt *_self_, _1aa9512bd_SignedShortInt _other_);


struct _1aa951961_UnsignedShort {
};
inline jule::Bool _1aa951961_UnsignedShort_eq(_1aa951961_UnsignedShort *_self_, _1aa951961_UnsignedShort _other_);


struct _1aa956d51_UnsignedShortInt {
};
inline jule::Bool _1aa956d51_UnsignedShortInt_eq(_1aa956d51_UnsignedShortInt *_self_, _1aa956d51_UnsignedShortInt _other_);


struct _1aa957428_Int {
};
inline jule::Bool _1aa957428_Int_eq(_1aa957428_Int *_self_, _1aa957428_Int _other_);


struct _1aa957989_Signed {
};
inline jule::Bool _1aa957989_Signed_eq(_1aa957989_Signed *_self_, _1aa957989_Signed _other_);


struct _1aa957e95_SignedInt {
};
inline jule::Bool _1aa957e95_SignedInt_eq(_1aa957e95_SignedInt *_self_, _1aa957e95_SignedInt _other_);


struct _1aa958638_Unsigned {
};
inline jule::Bool _1aa958638_Unsigned_eq(_1aa958638_Unsigned *_self_, _1aa958638_Unsigned _other_);


struct _1aa958b99_UnsignedInt {
};
inline jule::Bool _1aa958b99_UnsignedInt_eq(_1aa958b99_UnsignedInt *_self_, _1aa958b99_UnsignedInt _other_);


struct _1aa959293_Long {
};
inline jule::Bool _1aa959293_Long_eq(_1aa959293_Long *_self_, _1aa959293_Long _other_);


struct _1aa959804_LongInt {
};
inline jule::Bool _1aa959804_LongInt_eq(_1aa959804_LongInt *_self_, _1aa959804_LongInt _other_);


struct _1aa959d10_SignedLong {
};
inline jule::Bool _1aa959d10_SignedLong_eq(_1aa959d10_SignedLong *_self_, _1aa959d10_SignedLong _other_);


struct _1aa95a3b5_SignedLongInt {
};
inline jule::Bool _1aa95a3b5_SignedLongInt_eq(_1aa95a3b5_SignedLongInt *_self_, _1aa95a3b5_SignedLongInt _other_);


struct _1aa95aa58_UnsignedLong {
};
inline jule::Bool _1aa95aa58_UnsignedLong_eq(_1aa95aa58_UnsignedLong *_self_, _1aa95aa58_UnsignedLong _other_);


struct _1aa95b0b9_UnsignedLongInt {
};
inline jule::Bool _1aa95b0b9_UnsignedLongInt_eq(_1aa95b0b9_UnsignedLongInt *_self_, _1aa95b0b9_UnsignedLongInt _other_);


struct _1aa95b63b_LongLong {
};
inline jule::Bool _1aa95b63b_LongLong_eq(_1aa95b63b_LongLong *_self_, _1aa95b63b_LongLong _other_);


struct _1aa95bc24_LongLongInt {
};
inline jule::Bool _1aa95bc24_LongLongInt_eq(_1aa95bc24_LongLongInt *_self_, _1aa95bc24_LongLongInt _other_);


struct _1aa95c230_SignedLongLong {
};
inline jule::Bool _1aa95c230_SignedLongLong_eq(_1aa95c230_SignedLongLong *_self_, _1aa95c230_SignedLongLong _other_);


struct _1aa95c7d5_SignedLongLongInt {
};
inline jule::Bool _1aa95c7d5_SignedLongLongInt_eq(_1aa95c7d5_SignedLongLongInt *_self_, _1aa95c7d5_SignedLongLongInt _other_);


struct _1aa95ce78_UnsignedLongLong {
};
inline jule::Bool _1aa95ce78_UnsignedLongLong_eq(_1aa95ce78_UnsignedLongLong *_self_, _1aa95ce78_UnsignedLongLong _other_);


struct _1aa95d4d9_UnsignedLongLongInt {
};
inline jule::Bool _1aa95d4d9_UnsignedLongLongInt_eq(_1aa95d4d9_UnsignedLongLongInt *_self_, _1aa95d4d9_UnsignedLongLongInt _other_);


struct _1aa95dad3_Float {
};
inline jule::Bool _1aa95dad3_Float_eq(_1aa95dad3_Float *_self_, _1aa95dad3_Float _other_);


struct _1aa95e188_Double {
};
inline jule::Bool _1aa95e188_Double_eq(_1aa95e188_Double *_self_, _1aa95e188_Double _other_);


struct _1aa95e73d_LongDouble {
};
inline jule::Bool _1aa95e73d_LongDouble_eq(_1aa95e73d_LongDouble *_self_, _1aa95e73d_LongDouble _other_);


struct _1aa95ece3_Bool {
};
inline jule::Bool _1aa95ece3_Bool_eq(_1aa95ece3_Bool *_self_, _1aa95ece3_Bool _other_);


struct _1aa9785ae_Errno {
};
inline jule::Bool _1aa9785ae_Errno_eq(_1aa9785ae_Errno *_self_, _1aa9785ae_Errno _other_);


struct _1aa9793c3_secType {
};
inline jule::Bool _1aa9793c3_secType_eq(_1aa9793c3_secType *_self_, _1aa9793c3_secType _other_);


struct _1aa9797be_usecType {
};
inline jule::Bool _1aa9797be_usecType_eq(_1aa9797be_usecType *_self_, _1aa9797be_usecType _other_);


struct _1aa97a23c_WsaData {
};
inline jule::Bool _1aa97a23c_WsaData_eq(_1aa97a23c_WsaData *_self_, _1aa97a23c_WsaData _other_);


struct _1aa97c6a1_SysStat {
};
inline jule::Bool _1aa97c6a1_SysStat_eq(_1aa97c6a1_SysStat *_self_, _1aa97c6a1_SysStat _other_);


struct _1aa97d0b9_Win32FindData {
};
inline jule::Bool _1aa97d0b9_Win32FindData_eq(_1aa97d0b9_Win32FindData *_self_, _1aa97d0b9_Win32FindData _other_);


struct _1aa97d6b3_Handle {
};
inline jule::Bool _1aa97d6b3_Handle_eq(_1aa97d6b3_Handle *_self_, _1aa97d6b3_Handle _other_);


struct _1aa97e3d9_Timeval {
};
inline jule::Bool _1aa97e3d9_Timeval_eq(_1aa97e3d9_Timeval *_self_, _1aa97e3d9_Timeval _other_);


struct _1aa97ebae_Sockaddr {
};
inline jule::Bool _1aa97ebae_Sockaddr_eq(_1aa97ebae_Sockaddr *_self_, _1aa97ebae_Sockaddr _other_);


struct _1aa980eac_SockaddrIn {
};
inline jule::Bool _1aa980eac_SockaddrIn_eq(_1aa980eac_SockaddrIn *_self_, _1aa980eac_SockaddrIn _other_);


struct _1aa982211_SockaddrIn6 {
};
inline jule::Bool _1aa982211_SockaddrIn6_eq(_1aa982211_SockaddrIn6 *_self_, _1aa982211_SockaddrIn6 _other_);


struct _1aa982981_Fd {
};
inline jule::Bool _1aa982981_Fd_eq(_1aa982981_Fd *_self_, _1aa982981_Fd _other_);


struct _1d78abc24_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
};
inline jule::Bool _1d78abc24_acceptRange_eq(_1d78abc24_acceptRange *_self_, _1d78abc24_acceptRange _other_);


struct _1bbdc0e24_LittleEndian {
};
inline jule::Bool _1bbdc0e24_LittleEndian_eq(_1bbdc0e24_LittleEndian *_self_, _1bbdc0e24_LittleEndian _other_);


struct _1a93e64a1__DWORD {
};
inline jule::Bool _1a93e64a1__DWORD_eq(_1a93e64a1__DWORD *_self_, _1a93e64a1__DWORD _other_);


struct _1bbddab42_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
};
inline jule::Bool _1bbddab42_u128_eq(_1bbddab42_u128 *_self_, _1bbddab42_u128 _other_);


struct _1acc44c1e_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
};
inline jule::Bool _1acc44c1e_group_eq(_1acc44c1e_group *_self_, _1acc44c1e_group _other_);

struct _1ba98328a_group {
	jule::Array<jule::Ptr<_1a7a73b41_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
};
struct _1acc42b62__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1acc44c1e_group> _field_groups;
	jule::I32 _field_resident;
	jule::I32 _field_dead;
	jule::I32 _field_limit;
};struct _1ba981398__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1ba98328a_group> _field_groups;
	jule::I32 _field_resident;
	jule::I32 _field_dead;
	jule::I32 _field_limit;
};
struct _1acc4d3dc_mapIterator {
	jule::Ptr<_1acc42b62__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1acc44c1e_group> _field_groups;
	jule::I32 _field_n;
	jule::I32 _field_g;
	jule::I32 _field_s;
};struct _1ba989abb_mapIterator {
	jule::Ptr<_1ba981398__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1ba98328a_group> _field_groups;
	jule::I32 _field_n;
	jule::I32 _field_g;
	jule::I32 _field_s;
};
struct _1a93e699b_metadata {
};
inline jule::Bool _1a93e699b_metadata_eq(_1a93e699b_metadata *_self_, _1a93e699b_metadata _other_);


struct _1bc0a106b_Builder {
	jule::Slice<jule::U8> _field_buf;
};
struct _1bd4258b7_foldPair {
	jule::U16 _field_from;
	jule::U16 _field_to;
};
inline jule::Bool _1bd4258b7_foldPair_eq(_1bd4258b7_foldPair *_self_, _1bd4258b7_foldPair _other_);


struct _1bd425db2_CaseRange {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::Array<jule::I32,3> _field_Delta;
};
inline jule::Bool _1bd425db2_CaseRange_eq(_1bd425db2_CaseRange *_self_, _1bd425db2_CaseRange _other_);


struct _1bd426368_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
};
inline jule::Bool _1bd426368_Range16_eq(_1bd426368_Range16 *_self_, _1bd426368_Range16 _other_);


struct _1bd426896_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
};
inline jule::Bool _1bd426896_Range32_eq(_1bd426896_Range32 *_self_, _1bd426896_Range32 _other_);


struct _1bd426d19_RangeTable {
	jule::Slice<_1bd426368_Range16> _field_R16;
	jule::Slice<_1bd426896_Range32> _field_R32;
	jule::I32 _field_LatinOffset;
};
struct _1aaae7783_d {
};
inline jule::Bool _1aaae7783_d_eq(_1aaae7783_d *_self_, _1aaae7783_d _other_);


struct _1bd435014_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen;
};
struct _1bc28335d_cmdAttrs {
	HANDLE _field_hProcess;
	HANDLE _field_hThread;
};
inline jule::Bool _1bc28335d_cmdAttrs_eq(_1bc28335d_cmdAttrs *_self_, _1bc28335d_cmdAttrs _other_);


struct _1bc288220_File {
	jule::Uintptr _field_handle;
};
inline jule::Bool _1bc288220_File_eq(_1bc288220_File *_self_, _1bc288220_File _other_);


struct _1bc28a7c7_Stat {
	jule::I32 _field_mode;
	jule::U32 _field_size;
};
inline jule::Bool _1bc28a7c7_Stat_eq(_1bc28a7c7_Stat *_self_, _1bc28a7c7_Stat _other_);


struct _1bc0b03aa_Log {
	jule::I32 _field_Kind;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
};
inline jule::Bool _1bc0b03aa_Log_eq(_1bc0b03aa_Log *_self_, _1bc0b03aa_Log _other_);


struct _1a49dae96_floatInfo {
	jule::U32 _field_mantbits;
	jule::U32 _field_expbits;
	jule::I32 _field_bias;
};
inline jule::Bool _1a49dae96_floatInfo_eq(_1a49dae96_floatInfo *_self_, _1a49dae96_floatInfo _other_);


struct _1a49dbae0_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
};
struct _1a49edb68_leftCheat {
	jule::I32 _field_delta;
	jule::Str _field_cutoff;
};
inline jule::Bool _1a49edb68_leftCheat_eq(_1a49edb68_leftCheat *_self_, _1a49edb68_leftCheat _other_);


struct _1a49ee680_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
};
inline jule::Bool _1a49ee680_decimal_eq(_1a49ee680_decimal *_self_, _1a49ee680_decimal _other_);


struct _1bd46ba62_AnsiEscape {
};
inline jule::Bool _1bd46ba62_AnsiEscape_eq(_1bd46ba62_AnsiEscape *_self_, _1bd46ba62_AnsiEscape _other_);


struct _1a4a04d17_Logger {
};
inline jule::Bool _1a4a04d17_Logger_eq(_1a4a04d17_Logger *_self_, _1a4a04d17_Logger _other_);


struct _1a79633b0_Token {
	jule::Ptr<_1a7968e65_Fileset> _field_File;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Kind;
	jule::U32 _field_Id;
};
inline jule::Bool _1a79633b0_Token_eq(_1a79633b0_Token *_self_, _1a79633b0_Token _other_);


struct _1a7968e65_Fileset {
	jule::Slice<jule::U8> _field_data;
	jule::Str _field_Path;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _field_Tokens;
};
struct _1a796b286_kindPair {
	jule::Str _field_kind;
	jule::U32 _field_id;
};
inline jule::Bool _1a796b286_kindPair_eq(_1a796b286_kindPair *_self_, _1a796b286_kindPair _other_);


struct _1a7972226_lex {
	jule::I32 _field_mode;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _field_tokens;
	jule::Ptr<_1a7968e65_Fileset> _field_file;
	jule::I32 _field_pos;
	jule::I32 _field_column;
	jule::I32 _field_row;
	jule::Slice<_1bc0b03aa_Log> _field_errors;
};
struct _1a7976deb_AST {
	jule::Ptr<_1a7968e65_Fileset> _field_File;
	jule::Slice<jule::Ptr<_1a79781c7_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1a7991cd4_UseDecl>> _field_UseDecls;
	jule::Slice<_1a7977ca9_Node> _field_Nodes;
};
struct _1a7977ca9_Node {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Any _field_Data;
};
inline jule::Bool _1a7977ca9_Node_eq(_1a7977ca9_Node *_self_, _1a7977ca9_Node _other_);


struct _1a79781c7_Directive {
	jule::Ptr<_1a79633b0_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _field_Args;
};
struct _1a7978caa_TypeDecl {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Any _field_Kind;
};
inline jule::Bool _1a7978caa_TypeDecl_eq(_1a7978caa_TypeDecl *_self_, _1a7978caa_TypeDecl _other_);


struct _1a79793b5_IdentTypeDecl {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> _field_Generics;
};
struct _1a797967e_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1a79793b5_IdentTypeDecl>> _field_Idents;
};
struct _1a7979a58_NamespaceTypeDecl {
	jule::Ptr<_1a79633b0_Token> _field_Namespace;
	jule::Ptr<_1a7978caa_TypeDecl> _field_Kind;
};
inline jule::Bool _1a7979a58_NamespaceTypeDecl_eq(_1a7979a58_NamespaceTypeDecl *_self_, _1a7979a58_NamespaceTypeDecl _other_);


struct _1a7979d55_SptrTypeDecl {
	jule::Ptr<_1a7978caa_TypeDecl> _field_Elem;
};
inline jule::Bool _1a7979d55_SptrTypeDecl_eq(_1a7979d55_SptrTypeDecl *_self_, _1a7979d55_SptrTypeDecl _other_);


struct _1a797a1da_SlcTypeDecl {
	jule::Ptr<_1a7978caa_TypeDecl> _field_Elem;
};
inline jule::Bool _1a797a1da_SlcTypeDecl_eq(_1a797a1da_SlcTypeDecl *_self_, _1a797a1da_SlcTypeDecl _other_);


struct _1a797a4d7_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> _field_Types;
};
struct _1a797a7d4_PtrTypeDecl {
	jule::Ptr<_1a7978caa_TypeDecl> _field_Elem;
};
inline jule::Bool _1a797a7d4_PtrTypeDecl_eq(_1a797a7d4_PtrTypeDecl *_self_, _1a797a7d4_PtrTypeDecl _other_);


struct _1a797b076_ArrTypeDecl {
	jule::Ptr<_1a7978caa_TypeDecl> _field_Elem;
	jule::Ptr<_1a797d0de_Expr> _field_Size;
};
inline jule::Bool _1a797b076_ArrTypeDecl_eq(_1a797b076_ArrTypeDecl *_self_, _1a797b076_ArrTypeDecl _other_);


struct _1a797b7c4_MapTypeDecl {
	jule::Ptr<_1a7978caa_TypeDecl> _field_Key;
	jule::Ptr<_1a7978caa_TypeDecl> _field_Val;
};
inline jule::Bool _1a797b7c4_MapTypeDecl_eq(_1a797b7c4_MapTypeDecl *_self_, _1a797b7c4_MapTypeDecl _other_);


struct _1a797bb9d_RetTypeDecl {
	jule::Ptr<_1a7978caa_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _field_Idents;
};
struct _1a797d0de_Expr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_End;
	jule::Any _field_Kind;
};
inline jule::Bool _1a797d0de_Expr_eq(_1a797d0de_Expr *_self_, _1a797d0de_Expr _other_);


struct _1a797d3a8_RangeExpr {
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
};
inline jule::Bool _1a797d3a8_RangeExpr_eq(_1a797d3a8_RangeExpr *_self_, _1a797d3a8_RangeExpr _other_);


struct _1a797d9b3_UseExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
};
inline jule::Bool _1a797d9b3_UseExpr_eq(_1a797d9b3_UseExpr *_self_, _1a797d9b3_UseExpr _other_);


struct _1a797dbd3_TupleExpr {
	jule::Slice<jule::Ptr<_1a797d0de_Expr>> _field_Expr;
};
struct _1a797e079_LitExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Value;
};
inline jule::Bool _1a797e079_LitExpr_eq(_1a797e079_LitExpr *_self_, _1a797e079_LitExpr _other_);


struct _1a797e453_UnsafeExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
};
inline jule::Bool _1a797e453_UnsafeExpr_eq(_1a797e453_UnsafeExpr *_self_, _1a797e453_UnsafeExpr _other_);


struct _1a797e909_IdentExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
};
inline jule::Bool _1a797e909_IdentExpr_eq(_1a797e909_IdentExpr *_self_, _1a797e909_IdentExpr _other_);


struct _1a798019b_UnaryExpr {
	jule::Ptr<_1a79633b0_Token> _field_Op;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
};
inline jule::Bool _1a798019b_UnaryExpr_eq(_1a798019b_UnaryExpr *_self_, _1a798019b_UnaryExpr _other_);


struct _1a7980575_VariadicExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
};
inline jule::Bool _1a7980575_VariadicExpr_eq(_1a7980575_VariadicExpr *_self_, _1a7980575_VariadicExpr _other_);


struct _1a798094e_CastExpr {
	jule::Ptr<_1a7978caa_TypeDecl> _field_Kind;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
};
inline jule::Bool _1a798094e_CastExpr_eq(_1a798094e_CastExpr *_self_, _1a798094e_CastExpr _other_);


struct _1a7980d28_NamespaceExpr {
	jule::Ptr<_1a79633b0_Token> _field_Namespace;
	jule::Ptr<_1a79633b0_Token> _field_Ident;
};
inline jule::Bool _1a7980d28_NamespaceExpr_eq(_1a7980d28_NamespaceExpr *_self_, _1a7980d28_NamespaceExpr _other_);


struct _1a7981202_SubIdentExpr {
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
	jule::Ptr<_1a79633b0_Token> _field_Ident;
};
inline jule::Bool _1a7981202_SubIdentExpr_eq(_1a7981202_SubIdentExpr *_self_, _1a7981202_SubIdentExpr _other_);


struct _1a79816a8_BinaryExpr {
	jule::Ptr<_1a797d0de_Expr> _field_Left;
	jule::Ptr<_1a797d0de_Expr> _field_Right;
	jule::Ptr<_1a79633b0_Token> _field_Op;
};
inline jule::Bool _1a79816a8_BinaryExpr_eq(_1a79816a8_BinaryExpr *_self_, _1a79816a8_BinaryExpr _other_);


struct _1a7981d18_FnCallExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a797d0de_Expr>> _field_Args;
	jule::Ptr<_1a7988da8_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
};
struct _1a798280d_FieldExprPair {
	jule::Ptr<_1a79633b0_Token> _field_Field;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
};
inline jule::Bool _1a798280d_FieldExprPair_eq(_1a798280d_FieldExprPair *_self_, _1a798280d_FieldExprPair _other_);


struct _1a7983138_StructLit {
	jule::Ptr<_1a79633b0_Token> _field_End;
	jule::Ptr<_1a7978caa_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a797d0de_Expr>> _field_Exprs;
};
struct _1a79835de_BraceLit {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_End;
	jule::Slice<jule::Ptr<_1a797d0de_Expr>> _field_Exprs;
};
struct _1a7983e19_KeyValPair {
	jule::Ptr<_1a797d0de_Expr> _field_Key;
	jule::Ptr<_1a797d0de_Expr> _field_Val;
	jule::Ptr<_1a79633b0_Token> _field_Colon;
};
inline jule::Bool _1a7983e19_KeyValPair_eq(_1a7983e19_KeyValPair *_self_, _1a7983e19_KeyValPair _other_);


struct _1a7984645_SliceExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_End;
	jule::Slice<jule::Ptr<_1a797d0de_Expr>> _field_Exprs;
};
struct _1a79850a2_IndexingExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_End;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
	jule::Ptr<_1a797d0de_Expr> _field_Index;
};
inline jule::Bool _1a79850a2_IndexingExpr_eq(_1a79850a2_IndexingExpr *_self_, _1a79850a2_IndexingExpr _other_);


struct _1a7985712_SlicingExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_End;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
	jule::Ptr<_1a797d0de_Expr> _field_Start;
	jule::Ptr<_1a797d0de_Expr> _field_To;
};
inline jule::Bool _1a7985712_SlicingExpr_eq(_1a7985712_SlicingExpr *_self_, _1a7985712_SlicingExpr _other_);


struct _1a7985a0e_Constraint {
	jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> _field_Mask;
};
struct _1a7985eb5_GenericDecl {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7985a0e_Constraint> _field_Constraint;
};
inline jule::Bool _1a7985eb5_GenericDecl_eq(_1a7985eb5_GenericDecl *_self_, _1a7985eb5_GenericDecl _other_);


struct _1a798638e_LabelSt {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Ident;
};
inline jule::Bool _1a798638e_LabelSt_eq(_1a798638e_LabelSt *_self_, _1a798638e_LabelSt _other_);


struct _1a7986768_GotoSt {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_Label;
};
inline jule::Bool _1a7986768_GotoSt_eq(_1a7986768_GotoSt *_self_, _1a7986768_GotoSt _other_);


struct _1a7986a65_FallSt {
	jule::Ptr<_1a79633b0_Token> _field_Token;
};
inline jule::Bool _1a7986a65_FallSt_eq(_1a7986a65_FallSt *_self_, _1a7986a65_FallSt _other_);


struct _1a79871c5_AssignLeft {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
};
inline jule::Bool _1a79871c5_AssignLeft_eq(_1a79871c5_AssignLeft *_self_, _1a79871c5_AssignLeft _other_);


struct _1a7987758_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1a79633b0_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1a79871c5_AssignLeft>> _field_Left;
	jule::Ptr<_1a797d0de_Expr> _field_Right;
};
struct _1a7988748_Stmt {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_End;
	jule::Any _field_Data;
};
inline jule::Bool _1a7988748_Stmt_eq(_1a7988748_Stmt *_self_, _1a7988748_Stmt _other_);


struct _1a7988da8_ScopeTree {
	jule::Ptr<_1a7988da8_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1a7988748_Stmt> _field_Stmts;
	jule::Ptr<_1a79633b0_Token> _field_End;
};
struct _1a79895e5_ParamDecl {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1a7978caa_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
};
inline jule::Bool _1a79895e5_ParamDecl_eq(_1a79895e5_ParamDecl *_self_, _1a79895e5_ParamDecl _other_);


struct _1a798aa47_FnDecl {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a79781c7_Directive>> _field_Directives;
	jule::Ptr<_1a7988da8_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>> _field_Generics;
	jule::Ptr<_1a797bb9d_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1a79895e5_ParamDecl>> _field_Params;
};
struct _1a798bc02_VarDecl {
	jule::Ptr<_1a7988da8_ScopeTree> _field_Scope;
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1a79781c7_Directive>> _field_Directives;
	jule::Ptr<_1a7978caa_TypeDecl> _field_Kind;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
};
struct _1a798c0cb_RetSt {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
};
inline jule::Bool _1a798c0cb_RetSt_eq(_1a798c0cb_RetSt *_self_, _1a798c0cb_RetSt _other_);


struct _1a798c84b_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1a7988da8_ScopeTree> _field_Scope;
};
inline jule::Bool _1a798c84b_Iter_eq(_1a798c84b_Iter *_self_, _1a798c84b_Iter _other_);


struct _1a798d176_WhileKind {
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1a79633b0_Token> _field_NextToken;
};
inline jule::Bool _1a798d176_WhileKind_eq(_1a798d176_WhileKind *_self_, _1a798d176_WhileKind _other_);


struct _1a798da7d_RangeKind {
	jule::Ptr<_1a79633b0_Token> _field_InToken;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
	jule::Ptr<_1a798bc02_VarDecl> _field_KeyA;
	jule::Ptr<_1a798bc02_VarDecl> _field_KeyB;
};
inline jule::Bool _1a798da7d_RangeKind_eq(_1a798da7d_RangeKind *_self_, _1a798da7d_RangeKind _other_);


struct _1a798de57_BreakSt {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_Label;
};
inline jule::Bool _1a798de57_BreakSt_eq(_1a798de57_BreakSt *_self_, _1a798de57_BreakSt _other_);


struct _1a798e331_ContSt {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_Label;
};
inline jule::Bool _1a798e331_ContSt_eq(_1a798e331_ContSt *_self_, _1a798e331_ContSt _other_);


struct _1a798e7d7_If {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
	jule::Ptr<_1a7988da8_ScopeTree> _field_Scope;
};
inline jule::Bool _1a798e7d7_If_eq(_1a798e7d7_If *_self_, _1a798e7d7_If _other_);


struct _1a798ebb1_Else {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a7988da8_ScopeTree> _field_Scope;
};
inline jule::Bool _1a798ebb1_Else_eq(_1a798ebb1_Else *_self_, _1a798ebb1_Else _other_);


struct _1a7990167_Conditional {
	jule::Ptr<_1a798e7d7_If> _field_Head;
	jule::Slice<jule::Ptr<_1a798e7d7_If>> _field_Tail;
	jule::Ptr<_1a798ebb1_Else> _field_Default;
};
struct _1a7990981_TypeAliasDecl {
	jule::Ptr<_1a7988da8_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Strict;
	jule::Ptr<_1a7978caa_TypeDecl> _field_Kind;
};
inline jule::Bool _1a7990981_TypeAliasDecl_eq(_1a7990981_TypeAliasDecl *_self_, _1a7990981_TypeAliasDecl _other_);


struct _1a7990e37_Case {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a7988da8_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a797d0de_Expr>> _field_Exprs;
};
struct _1a7991751_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a7990e37_Case>> _field_Cases;
	jule::Ptr<_1a798ebb1_Else> _field_Default;
};
struct _1a7991cd4_UseDecl {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_Path;
	jule::Ptr<_1a79633b0_Token> _field_Alias;
	jule::Bool _field_Binded;
};
inline jule::Bool _1a7991cd4_UseDecl_eq(_1a7991cd4_UseDecl *_self_, _1a7991cd4_UseDecl _other_);


struct _1a799228a_EnumItemDecl {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
};
inline jule::Bool _1a799228a_EnumItemDecl_eq(_1a799228a_EnumItemDecl *_self_, _1a799228a_EnumItemDecl _other_);


struct _1a7992d4b_EnumDecl {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1a7978caa_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a799228a_EnumItemDecl>> _field_Items;
	jule::Ptr<_1a79633b0_Token> _field_End;
};
struct _1a7993676_TypeEnumItemDecl {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7978caa_TypeDecl> _field_Kind;
};
inline jule::Bool _1a7993676_TypeEnumItemDecl_eq(_1a7993676_TypeEnumItemDecl *_self_, _1a7993676_TypeEnumItemDecl _other_);


struct _1a7993cd6_TypeEnumDecl {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a7993676_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1a79633b0_Token> _field_End;
};
struct _1a79940a0_FieldDecl {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1a7978caa_TypeDecl> _field_Kind;
	jule::Ptr<_1a797d0de_Expr> _field_Default;
};
inline jule::Bool _1a79940a0_FieldDecl_eq(_1a79940a0_FieldDecl *_self_, _1a79940a0_FieldDecl _other_);


struct _1a7994996_StructDecl {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a79940a0_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1a79781c7_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>> _field_Generics;
};
struct _1a79951d3_TraitDecl {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a79633b0_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a798aa47_FnDecl>> _field_Methods;
};
struct _1a7995843_Impl {
	jule::Ptr<_1a79633b0_Token> _field_End;
	jule::Ptr<_1a7978caa_TypeDecl> _field_Base;
	jule::Ptr<_1a7978caa_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a798aa47_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1a798bc02_VarDecl>> _field_Statics;
};
struct _1a79ea9a8_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
};
inline jule::Bool _1a79ea9a8_Const_eq(_1a79ea9a8_Const *_self_, _1a79ea9a8_Const _other_);


struct _1a7996800_Field {
	jule::Ptr<_1a7997adc_Struct> _field_Owner;
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1a7c3a962_TypeSym> _field_TypeSym;
	jule::Ptr<_1a797d0de_Expr> _field_Default;
};
inline jule::Bool _1a7996800_Field_eq(_1a7996800_Field *_self_, _1a7996800_Field _other_);


struct _1a7997adc_Struct {
	jule::Ptr<_1a7b7c0bd_sema> _field_sema;
	jule::Slice<jule::Ptr<_1a7997adc_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1a7997adc_Struct>> _field_Uses;
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a7996800_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1a7a70a83_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1a79781c7_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1a7a7b297_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1a799a97a_StructIns>> _field_Instances;
};
struct _1a7999d53_FieldIns {
	jule::Ptr<_1a799a97a_StructIns> _field_Owner;
	jule::Ptr<_1a7996800_Field> _field_Decl;
	jule::Ptr<_1a7c3255d_Type> _field_Type;
	jule::Ptr<_1a7bed89d_Data> _field_Default;
};
inline jule::Bool _1a7999d53_FieldIns_eq(_1a7999d53_FieldIns *_self_, _1a7999d53_FieldIns _other_);


struct _1a799a97a_StructIns {
	jule::Ptr<_1a7c3255d_Type> _field_Source;
	jule::Bool _field_Checked;
	jule::Ptr<_1a7997adc_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a7999d53_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1a7a70a83_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1a7b4c786_ReferenceStack> _field_Refers;
};
struct _1a7a633b1_OperandExpr {
	jule::Ptr<_1a7c3255d_Type> _field_Type;
	jule::Any _field_Model;
};
inline jule::Bool _1a7a633b1_OperandExpr_eq(_1a7a633b1_OperandExpr *_self_, _1a7a633b1_OperandExpr _other_);


struct _1a7a638ab_BinaryExpr {
	jule::Ptr<_1a7a633b1_OperandExpr> _field_Left;
	jule::Ptr<_1a7a633b1_OperandExpr> _field_Right;
	jule::Ptr<_1a79633b0_Token> _field_Op;
};
inline jule::Bool _1a7a638ab_BinaryExpr_eq(_1a7a638ab_BinaryExpr *_self_, _1a7a638ab_BinaryExpr _other_);


struct _1a7a63c85_UnaryExpr {
	jule::Ptr<_1a7bed89d_Data> _field_Expr;
	jule::Ptr<_1a79633b0_Token> _field_Op;
};
inline jule::Bool _1a7a63c85_UnaryExpr_eq(_1a7a63c85_UnaryExpr *_self_, _1a7a63c85_UnaryExpr _other_);


struct _1a7a642b3_StructArgExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a7999d53_FieldIns> _field_Field;
	jule::Ptr<_1a7bed89d_Data> _field_Expr;
};
inline jule::Bool _1a7a642b3_StructArgExpr_eq(_1a7a642b3_StructArgExpr *_self_, _1a7a642b3_StructArgExpr _other_);


struct _1a7a64659_StructLitExpr {
	jule::Ptr<_1a799a97a_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1a7a642b3_StructArgExpr>> _field_Args;
};
struct _1a7a64956_AllocStructLitExpr {
	jule::Ptr<_1a7a64659_StructLitExpr> _field_Lit;
};
inline jule::Bool _1a7a64956_AllocStructLitExpr_eq(_1a7a64956_AllocStructLitExpr *_self_, _1a7a64956_AllocStructLitExpr _other_);


struct _1a7a64ed9_CastingExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a7bed89d_Data> _field_Expr;
	jule::Ptr<_1a7c3255d_Type> _field_Type;
	jule::Ptr<_1a7c3255d_Type> _field_ExprType;
};
inline jule::Bool _1a7a64ed9_CastingExpr_eq(_1a7a64ed9_CastingExpr *_self_, _1a7a64ed9_CastingExpr _other_);


struct _1a7a6588b_FnCallExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a7a73b41_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1a7b2c238_Scope> _field_Except;
	jule::Bool _field_Assigned;
};
struct _1a7a65c65_SliceExpr {
	jule::Ptr<_1a7c3255d_Type> _field_ElemType;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1a7a6621b_IndexingExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a7bed89d_Data> _field_Expr;
	jule::Ptr<_1a7bed89d_Data> _field_Index;
};
inline jule::Bool _1a7a6621b_IndexingExpr_eq(_1a7a6621b_IndexingExpr *_self_, _1a7a6621b_IndexingExpr _other_);


struct _1a7a666c2_AnonFnExpr {
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _field_Captured;
	jule::Ptr<_1a7a73b41_FnIns> _field_Func;
	jule::Bool _field_Global;
};
struct _1a7a66a9b_KeyValPairExpr {
	jule::Any _field_Key;
	jule::Any _field_Val;
};
inline jule::Bool _1a7a66a9b_KeyValPairExpr_eq(_1a7a66a9b_KeyValPairExpr *_self_, _1a7a66a9b_KeyValPairExpr _other_);


struct _1a7a66e75_MapExpr {
	jule::Ptr<_1a7c4200c_Map> _field_Kind;
	jule::Slice<jule::Ptr<_1a7a66a9b_KeyValPairExpr>> _field_Entries;
};
struct _1a7a67508_SlicingExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1a7a67508_SlicingExpr_eq(_1a7a67508_SlicingExpr *_self_, _1a7a67508_SlicingExpr _other_);


struct _1a7a67a8b_TraitSubIdentExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1a7a70a83_Fn> _field_Method;
	jule::Ptr<_1a7a7b297_Trait> _field_Trt;
};
inline jule::Bool _1a7a67a8b_TraitSubIdentExpr_eq(_1a7a67a8b_TraitSubIdentExpr *_self_, _1a7a67a8b_TraitSubIdentExpr _other_);


struct _1a7a6842c_StructSubIdentExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a7bed89d_Data> _field_Expr;
	jule::Ptr<_1a7a73b41_FnIns> _field_Method;
	jule::Ptr<_1a7999d53_FieldIns> _field_Field;
	jule::Ptr<_1a799a97a_StructIns> _field_Owner;
};
inline jule::Bool _1a7a6842c_StructSubIdentExpr_eq(_1a7a6842c_StructSubIdentExpr *_self_, _1a7a6842c_StructSubIdentExpr _other_);


struct _1a7a687c3_StructStaticIdentExpr {
	jule::Ptr<_1a799a97a_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1a7a73b41_FnIns> _field_Method;
};
inline jule::Bool _1a7a687c3_StructStaticIdentExpr_eq(_1a7a687c3_StructStaticIdentExpr *_self_, _1a7a687c3_StructStaticIdentExpr _other_);


struct _1a7a68b9c_ArrayExpr {
	jule::Ptr<_1a7c42b89_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1a7a68e99_TupleExpr {
	jule::Slice<jule::Ptr<_1a7bed89d_Data>> _field_Datas;
};
struct _1a7a69296_BuiltinPrintCallExpr {
	jule::Ptr<_1a7bed89d_Data> _field_Expr;
};
inline jule::Bool _1a7a69296_BuiltinPrintCallExpr_eq(_1a7a69296_BuiltinPrintCallExpr *_self_, _1a7a69296_BuiltinPrintCallExpr _other_);


struct _1a7a69593_BuiltinPrintlnCallExpr {
	jule::Ptr<_1a7bed89d_Data> _field_Expr;
};
inline jule::Bool _1a7a69593_BuiltinPrintlnCallExpr_eq(_1a7a69593_BuiltinPrintlnCallExpr *_self_, _1a7a69593_BuiltinPrintlnCallExpr _other_);


struct _1a7a6996c_BuiltinNewCallExpr {
	jule::Ptr<_1a7c3255d_Type> _field_Type;
	jule::Any _field_Init;
};
inline jule::Bool _1a7a6996c_BuiltinNewCallExpr_eq(_1a7a6996c_BuiltinNewCallExpr *_self_, _1a7a6996c_BuiltinNewCallExpr _other_);


struct _1a7a69d46_BuiltinPanicCallExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Any _field_Expr;
};
inline jule::Bool _1a7a69d46_BuiltinPanicCallExpr_eq(_1a7a69d46_BuiltinPanicCallExpr *_self_, _1a7a69d46_BuiltinPanicCallExpr _other_);


struct _1a7a6a2ec_BuiltinMakeCallExpr {
	jule::Ptr<_1a7c3255d_Type> _field_Type;
	jule::Any _field_Len;
	jule::Any _field_Cap;
};
inline jule::Bool _1a7a6a2ec_BuiltinMakeCallExpr_eq(_1a7a6a2ec_BuiltinMakeCallExpr *_self_, _1a7a6a2ec_BuiltinMakeCallExpr _other_);


struct _1a7a6a6c6_BuiltinAppendCallExpr {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
};
inline jule::Bool _1a7a6a6c6_BuiltinAppendCallExpr_eq(_1a7a6a6c6_BuiltinAppendCallExpr *_self_, _1a7a6a6c6_BuiltinAppendCallExpr _other_);


struct _1a7a6a9c3_BuiltinLenCallExpr {
	jule::Ptr<_1a7bed89d_Data> _field_Expr;
};
inline jule::Bool _1a7a6a9c3_BuiltinLenCallExpr_eq(_1a7a6a9c3_BuiltinLenCallExpr *_self_, _1a7a6a9c3_BuiltinLenCallExpr _other_);


struct _1a7a6acc0_BuiltinCapCallExpr {
	jule::Ptr<_1a7bed89d_Data> _field_Expr;
};
inline jule::Bool _1a7a6acc0_BuiltinCapCallExpr_eq(_1a7a6acc0_BuiltinCapCallExpr *_self_, _1a7a6acc0_BuiltinCapCallExpr _other_);


struct _1a7a6b199_BuiltinDeleteCallExpr {
	jule::Ptr<_1a7bed89d_Data> _field_Dest;
	jule::Ptr<_1a7bed89d_Data> _field_Key;
};
inline jule::Bool _1a7a6b199_BuiltinDeleteCallExpr_eq(_1a7a6b199_BuiltinDeleteCallExpr *_self_, _1a7a6b199_BuiltinDeleteCallExpr _other_);


struct _1a7a6b573_BuiltinCopyCallExpr {
	jule::Ptr<_1a7bed89d_Data> _field_Dest;
	jule::Ptr<_1a7bed89d_Data> _field_Src;
};
inline jule::Bool _1a7a6b573_BuiltinCopyCallExpr_eq(_1a7a6b573_BuiltinCopyCallExpr *_self_, _1a7a6b573_BuiltinCopyCallExpr _other_);


struct _1a7a6b94c_BuiltinErrorCallExpr {
	jule::Ptr<_1a7a73b41_FnIns> _field_Func;
	jule::Ptr<_1a7bed89d_Data> _field_Err;
};
inline jule::Bool _1a7a6b94c_BuiltinErrorCallExpr_eq(_1a7a6b94c_BuiltinErrorCallExpr *_self_, _1a7a6b94c_BuiltinErrorCallExpr _other_);


struct _1a7a6bc49_SizeofExpr {
	jule::Any _field_Expr;
};
inline jule::Bool _1a7a6bc49_SizeofExpr_eq(_1a7a6bc49_SizeofExpr *_self_, _1a7a6bc49_SizeofExpr _other_);


struct _1a7a6c3ed_AlignofExpr {
	jule::Any _field_Expr;
};
inline jule::Bool _1a7a6c3ed_AlignofExpr_eq(_1a7a6c3ed_AlignofExpr *_self_, _1a7a6c3ed_AlignofExpr _other_);


struct _1a7a6c5da_RuneExpr {
	jule::I32 _field_Code;
};
inline jule::Bool _1a7a6c5da_RuneExpr_eq(_1a7a6c5da_RuneExpr *_self_, _1a7a6c5da_RuneExpr _other_);


struct _1a7a6c95e_BackendEmitExpr {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
};
struct _1a7a6cc5b_FreeExpr {
	jule::Any _field_Expr;
};
inline jule::Bool _1a7a6cc5b_FreeExpr_eq(_1a7a6cc5b_FreeExpr *_self_, _1a7a6cc5b_FreeExpr _other_);


struct _1a7a6d9e8_RetType {
	jule::Ptr<_1a7c3a962_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _field_Idents;
};
struct _1a7a6e0ae_Param {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1a7c3a962_TypeSym> _field_TypeSym;
	jule::Str _field_Ident;
};
inline jule::Bool _1a7a6e0ae_Param_eq(_1a7a6e0ae_Param *_self_, _1a7a6e0ae_Param _other_);


struct _1a7a70a83_Fn {
	jule::Ptr<_1a7b7c0bd_sema> _field_sema;
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a79781c7_Directive>> _field_Directives;
	jule::Ptr<_1a7988da8_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>> _field_Generics;
	jule::Ptr<_1a7a6d9e8_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1a7a6e0ae_Param>> _field_Params;
	jule::Ptr<_1a7997adc_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1a7a73b41_FnIns>> _field_Instances;
};
struct _1a7a729db_ParamIns {
	jule::Ptr<_1a7a6e0ae_Param> _field_Decl;
	jule::Ptr<_1a7c3255d_Type> _field_Type;
};
inline jule::Bool _1a7a729db_ParamIns_eq(_1a7a729db_ParamIns *_self_, _1a7a729db_ParamIns _other_);


struct _1a7a73b41_FnIns {
	jule::Ptr<_1a799a97a_StructIns> _field_Owner;
	jule::Ptr<_1a7a70a83_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a7a729db_ParamIns>> _field_Params;
	jule::Ptr<_1a7c3255d_Type> _field_Result;
	jule::Ptr<_1a7b2c238_Scope> _field_Scope;
	jule::Ptr<_1a7b4c786_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Bool _field_CalledCo;
	jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*> _field_caller;
	jule::Bool _field_reloaded;
};
struct _1a7a76d86_SymTab {
	jule::Ptr<_1a7968e65_Fileset> _field_File;
	jule::Slice<_1a7b4dcd7_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1a7997adc_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a7a70a83_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1a7a7b297_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1a7a7d94d_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1a7a80158_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1a7b29246_Impl>> _field_Impls;
};
struct _1a7a7b297_Trait {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1a7c3a962_TypeSym>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a7a70a83_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a7997adc_Struct>> _field_Implemented;
};
struct _1a7a7cde2_EnumItem {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7beea25_Value> _field_Value;
};
inline jule::Bool _1a7a7cde2_EnumItem_eq(_1a7a7cde2_EnumItem *_self_, _1a7a7cde2_EnumItem _other_);


struct _1a7a7d94d_Enum {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1a7c3a962_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1a7a7cde2_EnumItem>> _field_Items;
};
struct _1a7a7ea81_TypeEnumItem {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7c3a962_TypeSym> _field_TypeSym;
};
inline jule::Bool _1a7a7ea81_TypeEnumItem_eq(_1a7a7ea81_TypeEnumItem *_self_, _1a7a7ea81_TypeEnumItem _other_);


struct _1a7a80158_TypeEnum {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a7a7ea81_TypeEnumItem>> _field_Items;
};
struct _1a7b00e65_comptimeRange {
	jule::Trait _field_kind;
};
inline jule::Bool _1a7b00e65_comptimeRange_eq(_1a7b00e65_comptimeRange *_self_, _1a7b00e65_comptimeRange _other_);


struct _1a7b019c1_comptimeStructField {
	jule::Ptr<_1a7999d53_FieldIns> _field_field;
};
inline jule::Bool _1a7b019c1_comptimeStructField_eq(_1a7b019c1_comptimeStructField *_self_, _1a7b019c1_comptimeStructField _other_);


struct _1a7b03264_comptimeStructFields {
	jule::Slice<jule::Ptr<_1a7999d53_FieldIns>> _field_fields;
};
struct _1a7b04be4_comptimeStatic {
	jule::Ptr<_1a7ba4eb4_Var> _field_field;
};
inline jule::Bool _1a7b04be4_comptimeStatic_eq(_1a7b04be4_comptimeStatic *_self_, _1a7b04be4_comptimeStatic _other_);


struct _1a7b06498_comptimeStatics {
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _field_fields;
};
struct _1a7b07e17_comptimeEnumField {
	jule::Ptr<_1a7a7cde2_EnumItem> _field_field;
};
inline jule::Bool _1a7b07e17_comptimeEnumField_eq(_1a7b07e17_comptimeEnumField *_self_, _1a7b07e17_comptimeEnumField _other_);


struct _1a7b09226_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1a7a7cde2_EnumItem>> _field_fields;
};
struct _1a7b0ac2d_comptimeParam {
	jule::Ptr<_1a7a729db_ParamIns> _field_param;
};
inline jule::Bool _1a7b0ac2d_comptimeParam_eq(_1a7b0ac2d_comptimeParam *_self_, _1a7b0ac2d_comptimeParam _other_);


struct _1a7b0ca87_comptimeParams {
	jule::Slice<jule::Ptr<_1a7a729db_ParamIns>> _field_params;
};
struct _1a7b0e3e6_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1a7b10d65_comptimeTypeInfo>> _field_types;
};
struct _1a7b10d65_comptimeTypeInfo {
	jule::Ptr<_1a7c3255d_Type> _field_base;
};
inline jule::Bool _1a7b10d65_comptimeTypeInfo_eq(_1a7b10d65_comptimeTypeInfo *_self_, _1a7b10d65_comptimeTypeInfo _other_);


struct _1a7b16e6a_comptimeValue {
	jule::Ptr<_1a7bed89d_Data> _field_data;
};
inline jule::Bool _1a7b16e6a_comptimeValue_eq(_1a7b16e6a_comptimeValue *_self_, _1a7b16e6a_comptimeValue _other_);


struct _1a7b19bc6_comptimeFiles {
	jule::Slice<jule::Ptr<_1a7a76d86_SymTab>> _field_files;
};
struct _1a7b1b645_comptimeFile {
	jule::Ptr<_1a7a76d86_SymTab> _field_file;
};
inline jule::Bool _1a7b1b645_comptimeFile_eq(_1a7b1b645_comptimeFile *_self_, _1a7b1b645_comptimeFile _other_);


struct _1a7b1d26d_comptimeDecls {
	jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>> _field_decls;
};
struct _1a7b2055b_comptimeDecl {
	jule::Any _field_decl;
};
inline jule::Bool _1a7b2055b_comptimeDecl_eq(_1a7b2055b_comptimeDecl *_self_, _1a7b2055b_comptimeDecl _other_);


struct _1a7b26e47_constraintChecker {
	jule::Ptr<_1a7b7c0bd_sema> _field_s;
	jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _field_genericsA;
	jule::Ptr<_1a7a73b41_FnIns> _field_fi;
	jule::Ptr<_1a799a97a_StructIns> _field_si;
	jule::Ptr<_1a79633b0_Token> _field_et;
	jule::Bool _field_uniq;
};
struct _1a7b29246_Impl {
	jule::Ptr<_1a7978caa_TypeDecl> _field_Base;
	jule::Ptr<_1a7978caa_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a7a70a83_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _field_Statics;
};
struct _1a7b2b9a7_exprPart {
	jule::Ptr<_1a7bed89d_Data> _field_data;
	jule::Ptr<_1a797d0de_Expr> _field_expr;
};
inline jule::Bool _1a7b2b9a7_exprPart_eq(_1a7b2b9a7_exprPart *_self_, _1a7b2b9a7_exprPart _other_);


struct _1a7b2c238_Scope {
	jule::Ptr<_1a7b2c238_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I32 _field_ChildIndex;
	jule::I32 _field_StmtIndex;
};
struct _1a7b2c612_If {
	jule::Any _field_Expr;
	jule::Ptr<_1a7b2c238_Scope> _field_Scope;
};
inline jule::Bool _1a7b2c612_If_eq(_1a7b2c612_If *_self_, _1a7b2c612_If _other_);


struct _1a7b2c986_Else {
	jule::Ptr<_1a7b2c238_Scope> _field_Scope;
};
inline jule::Bool _1a7b2c986_Else_eq(_1a7b2c986_Else *_self_, _1a7b2c986_Else _other_);


struct _1a7b2cd2c_Conditional {
	jule::Slice<jule::Ptr<_1a7b2c612_If>> _field_Elifs;
	jule::Ptr<_1a7b2c986_Else> _field_Default;
};
struct _1a7b2d129_InfIter {
	jule::Ptr<_1a7b2c238_Scope> _field_Scope;
};
inline jule::Bool _1a7b2d129_InfIter_eq(_1a7b2d129_InfIter *_self_, _1a7b2d129_InfIter _other_);


struct _1a7b2d5d0_WhileIter {
	jule::Ptr<_1a7b2c238_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
};
inline jule::Bool _1a7b2d5d0_WhileIter_eq(_1a7b2d5d0_WhileIter *_self_, _1a7b2d5d0_WhileIter _other_);


struct _1a7b2e0b4_RangeIter {
	jule::Ptr<_1a7b2c238_Scope> _field_Scope;
	jule::Ptr<_1a7bed89d_Data> _field_Expr;
	jule::Ptr<_1a7ba4eb4_Var> _field_KeyA;
	jule::Ptr<_1a7ba4eb4_Var> _field_KeyB;
};
inline jule::Bool _1a7b2e0b4_RangeIter_eq(_1a7b2e0b4_RangeIter *_self_, _1a7b2e0b4_RangeIter _other_);


struct _1a7b2e3b1_ContSt {
	jule::Uintptr _field_It;
};
inline jule::Bool _1a7b2e3b1_ContSt_eq(_1a7b2e3b1_ContSt *_self_, _1a7b2e3b1_ContSt _other_);


struct _1a7b2e78a_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
};
inline jule::Bool _1a7b2e78a_BreakSt_eq(_1a7b2e78a_BreakSt *_self_, _1a7b2e78a_BreakSt _other_);


struct _1a7b2ec41_Label {
	jule::Str _field_Ident;
	jule::Ptr<_1a7b2c238_Scope> _field_Scope;
	jule::I32 _field_Index;
};
inline jule::Bool _1a7b2ec41_Label_eq(_1a7b2ec41_Label *_self_, _1a7b2ec41_Label _other_);


struct _1a7b303a1_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Ptr<_1a7b2ec41_Label> _field_Label;
	jule::Ptr<_1a7b2c238_Scope> _field_Scope;
	jule::I32 _field_Index;
};
inline jule::Bool _1a7b303a1_GotoSt_eq(_1a7b303a1_GotoSt *_self_, _1a7b303a1_GotoSt _other_);


struct _1a7b3077a_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
};
inline jule::Bool _1a7b3077a_Postfix_eq(_1a7b3077a_Postfix *_self_, _1a7b3077a_Postfix _other_);


struct _1a7b30c31_Assign {
	jule::Ptr<_1a7a633b1_OperandExpr> _field_Left;
	jule::Ptr<_1a7a633b1_OperandExpr> _field_Right;
	jule::Ptr<_1a79633b0_Token> _field_Op;
};
inline jule::Bool _1a7b30c31_Assign_eq(_1a7b30c31_Assign *_self_, _1a7b30c31_Assign _other_);


struct _1a7b312b4_MultiAssign {
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1a7bed89d_Data>> _field_Left;
	jule::Any _field_Right;
	jule::Ptr<_1a79633b0_Token> _field_Op;
};
struct _1a7b31c32_Match {
	jule::Ptr<_1a7b2c238_Scope> _field_Scope;
	jule::Ptr<_1a7bed89d_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1a7b32529_Case>> _field_Cases;
	jule::Ptr<_1a7b32529_Case> _field_Default;
};
struct _1a7b32529_Case {
	jule::Ptr<_1a7b31c32_Match> _field_Owner;
	jule::Ptr<_1a7b2c238_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1a7bed89d_Data>> _field_Exprs;
	jule::Ptr<_1a7b32529_Case> _field_Next;
};
struct _1a7b32c22_FallSt {
	jule::Uintptr _field_DestCase;
};
inline jule::Bool _1a7b32c22_FallSt_eq(_1a7b32c22_FallSt *_self_, _1a7b32c22_FallSt _other_);


struct _1a7b330b8_RetSt {
	jule::Ptr<_1a7a73b41_FnIns> _field_Func;
	jule::Any _field_Expr;
};
inline jule::Bool _1a7b330b8_RetSt_eq(_1a7b330b8_RetSt *_self_, _1a7b330b8_RetSt _other_);


struct _1a7b3356e_scopeLabel {
	jule::Ptr<_1a79633b0_Token> _field_token;
	jule::Ptr<_1a7b2ec41_Label> _field_node;
	jule::Bool _field_used;
};
inline jule::Bool _1a7b3356e_scopeLabel_eq(_1a7b3356e_scopeLabel *_self_, _1a7b3356e_scopeLabel _other_);


struct _1a7b33948_result {
	jule::Ptr<_1a7a73b41_FnIns> _field_func;
	jule::Bool _field_mutable;
};
inline jule::Bool _1a7b33948_result_eq(_1a7b33948_result *_self_, _1a7b33948_result _other_);


struct _1a7b34938_scopeChecker {
	jule::Ptr<_1a79633b0_Token> _field_calledFrom;
	jule::Ptr<_1a7b7c0bd_sema> _field_s;
	jule::Ptr<_1a7a73b41_FnIns> _field_owner;
	jule::Ptr<_1a7b34938_scopeChecker> _field_parent;
	jule::I32 _field_childIndex;
	jule::Ptr<_1a7a76d86_SymTab> _field_table;
	jule::Ptr<_1a7b2c238_Scope> _field_scope;
	jule::Ptr<_1a7988da8_ScopeTree> _field_tree;
	jule::Ptr<_1a7b33948_result> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1a7b3356e_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a7b303a1_GotoSt>>> _field_gotos;
	jule::I32 _field_i;
};
inline jule::Bool _1a7b34938_scopeChecker_eq(_1a7b34938_scopeChecker *_self_, _1a7b34938_scopeChecker _other_);


struct _1a7b49e7b_directiveChecker {
	jule::Ptr<_1a7b7c0bd_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1a79781c7_Directive>>> _field_d;
	jule::Any _field_o;
};
inline jule::Bool _1a7b49e7b_directiveChecker_eq(_1a7b49e7b_directiveChecker *_self_, _1a7b49e7b_directiveChecker _other_);


struct _1a7b4c786_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
};
struct _1a7b4dcd7_Pass {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Text;
};
inline jule::Bool _1a7b4dcd7_Pass_eq(_1a7b4dcd7_Pass *_self_, _1a7b4dcd7_Pass _other_);


struct _1a7b5378c_symBuilder {
	jule::Ptr<_1a7b5378c_symBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1bc0b03aa_Log> _field_errors;
	jule::Ptr<_1a7976deb_AST> _field_ast;
	jule::Ptr<_1a7a76d86_SymTab> _field_table;
};
struct _1a7b5e80e_ImportInfo {
	jule::Ptr<_1a7991cd4_UseDecl> _field_Decl;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Ptr<_1a7b62081_Package> _field_Package;
	jule::I32 _field_ModId;
};
inline jule::Bool _1a7b5e80e_ImportInfo_eq(_1a7b5e80e_ImportInfo *_self_, _1a7b5e80e_ImportInfo _other_);


struct _1a7b62081_Package {
	jule::Slice<jule::Ptr<_1a7a76d86_SymTab>> _field_Files;
};
struct _1a7b7b034_commonSemaMeta {
	jule::Slice<jule::Ptr<_1a7b10d65_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1a7b5e80e_ImportInfo> _field_runtime;
};
struct _1a7b7c0bd_sema {
	jule::Slice<_1bc0b03aa_Log> _field_errors;
	jule::Slice<jule::Ptr<_1a7a76d86_SymTab>> _field_files;
	jule::Ptr<_1a7a76d86_SymTab> _field_file;
	jule::I32 _field_flags;
	jule::Ptr<_1a7b7b034_commonSemaMeta> _field_meta;
	jule::I32 _field_step;
};
struct _1a7ba14cc_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
};
struct _1a7ba4eb4_Var {
	jule::Ptr<_1a7b2c238_Scope> _field_Scope;
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1a7c3a962_TypeSym> _field_TypeSym;
	jule::Ptr<_1a7beea25_Value> _field_Value;
	jule::Ptr<_1a7b4c786_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1a79781c7_Directive>> _field_Directives;
	jule::I32 _field_RetOrder;
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _field_Depends;
};
struct _1a7ba5d3e_FuncPattern {
};
inline jule::Bool _1a7ba5d3e_FuncPattern_eq(_1a7ba5d3e_FuncPattern *_self_, _1a7ba5d3e_FuncPattern _other_);


struct _1a7bd9900_typeCompatibilityChecker {
	jule::Ptr<_1a7b7c0bd_sema> _field_s;
	jule::Ptr<_1a7c3255d_Type> _field_dest;
	jule::Ptr<_1a7c3255d_Type> _field_src;
	jule::Ptr<_1a79633b0_Token> _field_errorToken;
};
inline jule::Bool _1a7bd9900_typeCompatibilityChecker_eq(_1a7bd9900_typeCompatibilityChecker *_self_, _1a7bd9900_typeCompatibilityChecker _other_);


struct _1a7bdb77b_assignTypeChecker {
	jule::Ptr<_1a7b7c0bd_sema> _field_s;
	jule::Ptr<_1a7c3255d_Type> _field_dest;
	jule::Ptr<_1a7bed89d_Data> _field_d;
	jule::Ptr<_1a79633b0_Token> _field_errorToken;
	jule::Ptr<_1a7b4c786_ReferenceStack> _field_refers;
};
inline jule::Bool _1a7bdb77b_assignTypeChecker_eq(_1a7bdb77b_assignTypeChecker *_self_, _1a7bdb77b_assignTypeChecker _other_);


struct _1a7bdd151_dynamicTypeAnnotation {
	jule::Ptr<_1a7c0086c_eval> _field_e;
	jule::Ptr<_1a7a73b41_FnIns> _field_f;
	jule::Ptr<_1a7a729db_ParamIns> _field_p;
	jule::Ptr<_1a7bed89d_Data> _field_a;
	jule::Ptr<_1a79633b0_Token> _field_errorToken;
	jule::Ptr<_1a7c3255d_Type>* _field_k;
	jule::Ptr<_1a7978caa_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1a7c3255d_Type>> _field_ignored;
};
struct _1a7be2ead_fnCallArgChecker {
	jule::Ptr<_1a7c0086c_eval> _field_e;
	jule::Slice<jule::Ptr<_1a797d0de_Expr>> _field_args;
	jule::Ptr<_1a79633b0_Token> _field_errorToken;
	jule::Ptr<_1a7a73b41_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1a7c3255d_Type>> _field_ignored;
};
struct _1a7be5de5_structLitChecker {
	jule::Ptr<_1a7c0086c_eval> _field_e;
	jule::Ptr<_1a79633b0_Token> _field_errorToken;
	jule::Ptr<_1a799a97a_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1a7a642b3_StructArgExpr>> _field_args;
};
struct _1a7be7bc7_rangeChecker {
	jule::Ptr<_1a7b34938_scopeChecker> _field_sc;
	jule::Ptr<_1a798da7d_RangeKind> _field_rang;
	jule::Ptr<_1a7b2e0b4_RangeIter> _field_Kind;
	jule::Ptr<_1a7bed89d_Data> _field_d;
};
inline jule::Bool _1a7be7bc7_rangeChecker_eq(_1a7be7bc7_rangeChecker *_self_, _1a7be7bc7_rangeChecker _other_);


struct _1a7bea5e2_retTypeChecker {
	jule::Ptr<_1a7b34938_scopeChecker> _field_sc;
	jule::Ptr<_1a7a73b41_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1a7c3255d_Type>> _field_types;
	jule::Slice<jule::Ptr<_1a7bed89d_Data>> _field_exprs;
	jule::Slice<jule::Ptr<_1a797d0de_Expr>> _field_exprDecls;
	jule::Ptr<_1a79633b0_Token> _field_errorToken;
	jule::Any _field_model;
	jule::Bool _field_mutable;
};
struct _1a7bed89d_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1a7c3255d_Type> _field_Type;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1a79ea9a8_Const> _field_Constant;
};
inline jule::Bool _1a7bed89d_Data_eq(_1a7bed89d_Data *_self_, _1a7bed89d_Data _other_);


struct _1a7beea25_Value {
	jule::Ptr<_1a797d0de_Expr> _field_Expr;
	jule::Ptr<_1a7bed89d_Data> _field_Data;
};
inline jule::Bool _1a7beea25_Value_eq(_1a7beea25_Value *_self_, _1a7beea25_Value _other_);


struct _1a7beedee_target {
	jule::Bool _field_ignored;
	jule::Bool _field_mutable;
};
inline jule::Bool _1a7beedee_target_eq(_1a7beedee_target *_self_, _1a7beedee_target _other_);


struct _1a7c0086c_eval {
	jule::Ptr<_1a7b7c0bd_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1a7c3255d_Type> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1a7ba4eb4_Var> _field_owner;
	jule::Ptr<_1a7999d53_FieldIns> _field_field;
	_1a7beedee_target _field_target;
};
inline jule::Bool _1a7c0086c_eval_eq(_1a7c0086c_eval *_self_, _1a7c0086c_eval _other_);


struct _1a7c20969_unaryEval {
	jule::Ptr<_1a7c0086c_eval> _field_e;
	jule::Ptr<_1a7bed89d_Data> _field_d;
	jule::Ptr<_1a798019b_UnaryExpr> _field_u;
};
inline jule::Bool _1a7c20969_unaryEval_eq(_1a7c20969_unaryEval *_self_, _1a7c20969_unaryEval _other_);


struct _1a7c22905_binaryEval {
	jule::Ptr<_1a7c0086c_eval> _field_e;
	jule::Ptr<_1a7bed89d_Data> _field_l;
	jule::Ptr<_1a7bed89d_Data> _field_r;
	jule::Ptr<_1a79633b0_Token> _field_op;
};
inline jule::Bool _1a7c22905_binaryEval_eq(_1a7c22905_binaryEval *_self_, _1a7c22905_binaryEval _other_);


struct _1a7c30b77_InsGeneric {
	jule::Ptr<_1a7c3255d_Type> _field_Type;
	jule::Slice<jule::Ptr<_1a7c3255d_Type>> _field_Constraint;
};
struct _1a7c31848_TypeAlias {
	jule::Ptr<_1a7988da8_ScopeTree> _field_Scope;
	jule::Bool _field_Strict;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7c3a962_TypeSym> _field_TypeSym;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _field_Generics;
};
struct _1a7c3255d_Type {
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
};
inline jule::Bool _1a7c3255d_Type_eq(_1a7c3255d_Type *_self_, _1a7c3255d_Type _other_);


struct _1a7c3a962_TypeSym {
	jule::Ptr<_1a7978caa_TypeDecl> _field_Decl;
	jule::Ptr<_1a7c3255d_Type> _field_Type;
};
inline jule::Bool _1a7c3a962_TypeSym_eq(_1a7c3a962_TypeSym *_self_, _1a7c3a962_TypeSym _other_);


struct _1a7c3b369_Prim {
	jule::Str _field_Kind;
};
inline jule::Bool _1a7c3b369_Prim_eq(_1a7c3b369_Prim *_self_, _1a7c3b369_Prim _other_);


struct _1a7c3ed95_Sptr {
	jule::Ptr<_1a7c3255d_Type> _field_Elem;
};
inline jule::Bool _1a7c3ed95_Sptr_eq(_1a7c3ed95_Sptr *_self_, _1a7c3ed95_Sptr _other_);


struct _1a7c40868_Slc {
	jule::Ptr<_1a7c3255d_Type> _field_Elem;
};
inline jule::Bool _1a7c40868_Slc_eq(_1a7c40868_Slc *_self_, _1a7c40868_Slc _other_);


struct _1a7c4145c_Tuple {
	jule::Slice<jule::Ptr<_1a7c3255d_Type>> _field_Types;
};
struct _1a7c4200c_Map {
	jule::Ptr<_1a7c3255d_Type> _field_Key;
	jule::Ptr<_1a7c3255d_Type> _field_Val;
};
inline jule::Bool _1a7c4200c_Map_eq(_1a7c4200c_Map *_self_, _1a7c4200c_Map _other_);


struct _1a7c42b89_Arr {
	jule::Bool _field_Auto;
	jule::I32 _field_N;
	jule::Ptr<_1a7c3255d_Type> _field_Elem;
};
inline jule::Bool _1a7c42b89_Arr_eq(_1a7c42b89_Arr *_self_, _1a7c42b89_Arr _other_);


struct _1a7c4365c_Ptr {
	jule::Ptr<_1a7c3255d_Type> _field_Elem;
};
inline jule::Bool _1a7c4365c_Ptr_eq(_1a7c4365c_Ptr *_self_, _1a7c4365c_Ptr _other_);


struct _1a7c4465d_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
};
inline jule::Bool _1a7c4465d_referencer_eq(_1a7c4465d_referencer *_self_, _1a7c4465d_referencer _other_);


struct _1a7c4564d_typeChecker {
	jule::Ptr<_1a7b7c0bd_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1a7c4465d_referencer> _field_referencer;
	jule::Ptr<_1a7b4c786_ReferenceStack> _field_refers;
	jule::Ptr<_1a79633b0_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1a7c3255d_Type>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1a7c31848_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
};
struct _1a7c4d711_identTypeLookup {
};
inline jule::Bool _1a7c4d711_identTypeLookup_eq(_1a7c4d711_identTypeLookup *_self_, _1a7c4d711_identTypeLookup _other_);


struct _1a855e939_FileInfo {
	jule::Ptr<_1a7976deb_AST> _field_Ast;
	jule::Slice<_1bc0b03aa_Log> _field_Errors;
};
struct _1a85ae4c2_stmt {
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _field_tokens;
	jule::Bool _field_terminated;
};
struct _1a85aed63_scopeParser {
	jule::Ptr<_1a85cd06d_parser> _field_p;
	jule::Ptr<_1a7988da8_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1a85ae4c2_stmt>> _field_stmts;
	jule::I32 _field_pos;
};
struct _1a85bc788_exprBuilder {
	jule::Ptr<_1a85cd06d_parser> _field_p;
};
inline jule::Bool _1a85bc788_exprBuilder_eq(_1a85bc788_exprBuilder *_self_, _1a85bc788_exprBuilder _other_);


struct _1a85c9d7d_assignInfo {
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _field_l;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _field_r;
	jule::Ptr<_1a79633b0_Token> _field_setter;
	jule::Bool _field_ok;
};
struct _1a85cd06d_parser {
	jule::Ptr<_1a7976deb_AST> _field_ast;
	jule::Slice<jule::Ptr<_1a79781c7_Directive>> _field_directives;
	jule::Slice<_1bc0b03aa_Log> _field_errors;
	jule::Ptr<_1a85bc788_exprBuilder> _field_ep;
};
struct _1a85de227_typeBuilder {
	jule::Ptr<_1a85cd06d_parser> _field_p;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _field_tokens;
	jule::I32* _field_i;
	jule::Bool _field_err;
};
struct _1a7d61637_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
};
inline jule::Bool _1a7d61637_CompileInfo_eq(_1a7d61637_CompileInfo *_self_, _1a7d61637_CompileInfo _other_);


struct _1a7d62d75_directiveEval {
	jule::Slice<_1bc0b03aa_Log> _field_logs;
	jule::Ptr<_1a79781c7_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
};
struct _1a85e332a_Importer {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
};
struct _1a7cb4ec5_anyData {
	jule::Ptr<jule::U32> _field_dataPtr;
	void* _field_typePtr;
};
inline jule::Bool _1a7cb4ec5_anyData_eq(_1a7cb4ec5_anyData *_self_, _1a7cb4ec5_anyData _other_);


struct _1a85e9441_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
};
struct _1a8601a0e_MetaStrBuilder {
	jule::Ptr<_1a7a73b41_FnIns> _field_Write;
	jule::Ptr<_1a7a73b41_FnIns> _field_WriteByte;
	jule::Ptr<_1a7a73b41_FnIns> _field_WriteRune;
	jule::Ptr<_1a7a73b41_FnIns> _field_WriteStr;
};
inline jule::Bool _1a8601a0e_MetaStrBuilder_eq(_1a8601a0e_MetaStrBuilder *_self_, _1a8601a0e_MetaStrBuilder _other_);


struct _1a86026d0_MetaRuntime {
	jule::Ptr<_1a7a70a83_Fn> _field_ToStr;
	jule::Ptr<_1a7a70a83_Fn> _field_ArrayCmp;
	jule::Ptr<_1a7a73b41_FnIns> _field_RCAdd;
	jule::Ptr<_1a7a73b41_FnIns> _field_RCLoad;
	jule::Ptr<_1a7a73b41_FnIns> _field_RCDrop;
	jule::Ptr<_1a7a73b41_FnIns> _field_RCAddAtomic;
	jule::Ptr<_1a7a73b41_FnIns> _field_RCLoadAtomic;
	jule::Ptr<_1a7a73b41_FnIns> _field_RCDropAtomic;
	jule::Ptr<_1a7a73b41_FnIns> _field_RuneCount;
	jule::Ptr<_1a7997adc_Struct> _field_Map;
	jule::Ptr<_1a7997adc_Struct> _field_MapIterator;
};
inline jule::Bool _1a86026d0_MetaRuntime_eq(_1a86026d0_MetaRuntime *_self_, _1a86026d0_MetaRuntime _other_);


struct _1a86031a3_MetaMathCmplx {
	jule::Ptr<_1a799a97a_StructIns> _field_Cmplx;
	jule::Ptr<_1a7a73b41_FnIns> _field_CmplxAdd;
	jule::Ptr<_1a7a73b41_FnIns> _field_CmplxSub;
	jule::Ptr<_1a7a73b41_FnIns> _field_CmplxMul;
	jule::Ptr<_1a7a73b41_FnIns> _field_CmplxDiv;
	jule::Ptr<_1a7a73b41_FnIns> _field_CmplxAddZ;
	jule::Ptr<_1a7a73b41_FnIns> _field_CmplxSubZ;
	jule::Ptr<_1a7a73b41_FnIns> _field_CmplxMulZ;
	jule::Ptr<_1a7a73b41_FnIns> _field_CmplxDivZ;
};
inline jule::Bool _1a86031a3_MetaMathCmplx_eq(_1a86031a3_MetaMathCmplx *_self_, _1a86031a3_MetaMathCmplx _other_);


struct _1a86037ad_Meta {
	jule::Ptr<_1a86026d0_MetaRuntime> _field_Runtime;
	jule::Ptr<_1a8601a0e_MetaStrBuilder> _field_StrBuilder;
	jule::Ptr<_1a86031a3_MetaMathCmplx> _field_MathCmplx;
	jule::Ptr<_1a7a70a83_Fn> _field_EntryPoint;
};
inline jule::Bool _1a86037ad_Meta_eq(_1a86037ad_Meta *_self_, _1a86037ad_Meta _other_);


struct _1a8604c87_OrderedDefines {
	jule::Slice<jule::Ptr<_1a7997adc_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _field_Globals;
};
struct _1ad6c8bd0_xorshift {
};
inline jule::Bool _1ad6c8bd0_xorshift_eq(_1ad6c8bd0_xorshift *_self_, _1ad6c8bd0_xorshift _other_);


struct _1a92032e1_liveTable {
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1a7a73b41_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1a799a97a_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1a7a7b297_Trait>> _field_traits;
};
struct _1a92036a9_ObjectDeadCode {
	_1a92032e1_liveTable _field_live;
	jule::Ptr<_1a85e5c78_IR> _field_ir;
};
struct _1a92077ce_scopeDeadCode {
	jule::Ptr<_1a92077ce_scopeDeadCode> _field_parent;
	jule::Ptr<_1a7b2c238_Scope> _field_s;
	jule::I32 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1a7b2ec41_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a7b303a1_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
};
inline jule::Bool _1a92077ce_scopeDeadCode_eq(_1a92077ce_scopeDeadCode *_self_, _1a92077ce_scopeDeadCode _other_);


struct _1a920bd66_exprDeadCode {
	jule::Ptr<_1a92077ce_scopeDeadCode> _field_s;
};
inline jule::Bool _1a920bd66_exprDeadCode_eq(_1a920bd66_exprDeadCode *_self_, _1a920bd66_exprDeadCode _other_);


struct _1a69a1ba2_StrFromBytes {
	jule::Any _field_Expr;
};
inline jule::Bool _1a69a1ba2_StrFromBytes_eq(_1a69a1ba2_StrFromBytes *_self_, _1a69a1ba2_StrFromBytes _other_);


struct _1a69a1e7c_ExceptionalForwardingExpr {
	jule::Ptr<_1a7a6588b_FnCallExpr> _field_Expr;
};
inline jule::Bool _1a69a1e7c_ExceptionalForwardingExpr_eq(_1a69a1e7c_ExceptionalForwardingExpr *_self_, _1a69a1e7c_ExceptionalForwardingExpr _other_);


struct _1a69a2213_FnCallIgnoreExceptionalExpr {
	jule::Ptr<_1a7a6588b_FnCallExpr> _field_Base;
};
inline jule::Bool _1a69a2213_FnCallIgnoreExceptionalExpr_eq(_1a69a2213_FnCallIgnoreExceptionalExpr *_self_, _1a69a2213_FnCallIgnoreExceptionalExpr _other_);


struct _1a69a2587_StrConcatExpr {
	jule::Slice<jule::Any> _field_Parts;
};
struct _1a69a292d_SwapExpr {
	jule::Ptr<_1a7bed89d_Data> _field_Left;
	jule::Ptr<_1a7bed89d_Data> _field_Right;
};
inline jule::Bool _1a69a292d_SwapExpr_eq(_1a69a292d_SwapExpr *_self_, _1a69a292d_SwapExpr _other_);


struct _1a69a2d07_EmptyCompareExpr {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
};
inline jule::Bool _1a69a2d07_EmptyCompareExpr_eq(_1a69a2d07_EmptyCompareExpr *_self_, _1a69a2d07_EmptyCompareExpr _other_);


struct _1a69a3104_RefExpr {
	jule::Ptr<_1a7ba4eb4_Var> _field_Var;
};
inline jule::Bool _1a69a3104_RefExpr_eq(_1a69a3104_RefExpr *_self_, _1a69a3104_RefExpr _other_);


struct _1a69a3643_StrCompExpr {
	jule::Any _field_Left;
	jule::Ptr<_1a79ea9a8_Const> _field_Right;
	jule::Bool _field_NotEq;
};
inline jule::Bool _1a69a3643_StrCompExpr_eq(_1a69a3643_StrCompExpr *_self_, _1a69a3643_StrCompExpr _other_);


struct _1a69a3bc6_MutSlicingExpr {
	jule::Ptr<_1a79633b0_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1a69a3bc6_MutSlicingExpr_eq(_1a69a3bc6_MutSlicingExpr *_self_, _1a69a3bc6_MutSlicingExpr _other_);


struct _1a69a3ec3_UnsafeBinaryExpr {
	jule::Ptr<_1a7a638ab_BinaryExpr> _field_Node;
};
inline jule::Bool _1a69a3ec3_UnsafeBinaryExpr_eq(_1a69a3ec3_UnsafeBinaryExpr *_self_, _1a69a3ec3_UnsafeBinaryExpr _other_);


struct _1a69a42c0_UnsafeIndexingExpr {
	jule::Ptr<_1a7a6621b_IndexingExpr> _field_Node;
};
inline jule::Bool _1a69a42c0_UnsafeIndexingExpr_eq(_1a69a42c0_UnsafeIndexingExpr *_self_, _1a69a42c0_UnsafeIndexingExpr _other_);


struct _1a69a4699_PushToSliceExpr {
	jule::Any _field_Dest;
	jule::Ptr<_1a7a65c65_SliceExpr> _field_Elems;
};
inline jule::Bool _1a69a4699_PushToSliceExpr_eq(_1a69a4699_PushToSliceExpr *_self_, _1a69a4699_PushToSliceExpr _other_);


struct _1a69a4a73_AppendToSliceExpr {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
};
inline jule::Bool _1a69a4a73_AppendToSliceExpr_eq(_1a69a4a73_AppendToSliceExpr *_self_, _1a69a4a73_AppendToSliceExpr _other_);


struct _1a69a4e4c_StrRuneIter {
	jule::Ptr<_1a7bed89d_Data> _field_Expr;
	jule::Ptr<_1a7b2e0b4_RangeIter> _field_Base;
};
inline jule::Bool _1a69a4e4c_StrRuneIter_eq(_1a69a4e4c_StrRuneIter *_self_, _1a69a4e4c_StrRuneIter _other_);


struct _1a69a5249_UnsafeDerefExpr {
	jule::Ptr<_1a7a63c85_UnaryExpr> _field_Base;
};
inline jule::Bool _1a69a5249_UnsafeDerefExpr_eq(_1a69a5249_UnsafeDerefExpr *_self_, _1a69a5249_UnsafeDerefExpr _other_);


struct _1a69a5777_UnsafeCastingExpr {
	jule::Ptr<_1a7a64ed9_CastingExpr> _field_Base;
};
inline jule::Bool _1a69a5777_UnsafeCastingExpr_eq(_1a69a5777_UnsafeCastingExpr *_self_, _1a69a5777_UnsafeCastingExpr _other_);


struct _1a69a62d3_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
};
inline jule::Bool _1a69a62d3_nilVar_eq(_1a69a62d3_nilVar *_self_, _1a69a62d3_nilVar _other_);


struct _1a69a6624_nils {
	jule::Slice<_1a69a62d3_nilVar> _field_vars;
};
struct _1a910e384_scopeOptimizer {
	jule::Ptr<_1a910e384_scopeOptimizer> _field_parent;
	jule::I32 _field_i;
	jule::Ptr<_1a7b2c238_Scope> _field_scope;
	jule::Ptr<_1a91225a6_data> _field_data;
};
inline jule::Bool _1a910e384_scopeOptimizer_eq(_1a910e384_scopeOptimizer *_self_, _1a910e384_scopeOptimizer _other_);


struct _1a9116c82_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1a91225a6_data> _field_data;
	jule::Ptr<_1a85e9441_ExprInspector> _field_inspector;
	jule::Ptr<_1a910e384_scopeOptimizer> _field_scopeOpt;
};
inline jule::Bool _1a9116c82_exprOptimizer_eq(_1a9116c82_exprOptimizer *_self_, _1a9116c82_exprOptimizer _other_);


struct _1a911e63b_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1a7c3255d_Type> _field_kind;
};
inline jule::Bool _1a911e63b_dynamicVar_eq(_1a911e63b_dynamicVar *_self_, _1a911e63b_dynamicVar _other_);


struct _1a911e97c_dynamic {
	jule::Slice<_1a911e63b_dynamicVar> _field_vars;
};
struct _1a91220ab_dataCheckpoint {
	jule::Ptr<_1a9124861_boundary> _field_boundary;
	jule::Ptr<_1a69a6624_nils> _field_nils;
	jule::Ptr<_1a911e97c_dynamic> _field_dynamic;
};
inline jule::Bool _1a91220ab_dataCheckpoint_eq(_1a91220ab_dataCheckpoint *_self_, _1a91220ab_dataCheckpoint _other_);


struct _1a91225a6_data {
	jule::Ptr<_1a9124861_boundary> _field_boundary;
	jule::Ptr<_1a69a6624_nils> _field_nils;
	jule::Ptr<_1a911e97c_dynamic> _field_dynamic;
};
inline jule::Bool _1a91225a6_data_eq(_1a91225a6_data *_self_, _1a91225a6_data _other_);


struct _1a9124520_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
};
struct _1a9124861_boundary {
	jule::Slice<_1a9124520_boundaryVar> _field_vars;
};
struct _1a920ce88_Optimizer {
	jule::Ptr<_1a85e5c78_IR> _field_ir;
};
inline jule::Bool _1a920ce88_Optimizer_eq(_1a920ce88_Optimizer *_self_, _1a920ce88_Optimizer _other_);


struct _1aa889822_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
};
inline jule::Bool _1aa889822_AbsTime_eq(_1aa889822_AbsTime *_self_, _1aa889822_AbsTime _other_);


struct _1aa889ee8_Time {
	jule::U64 _field_sec;
};
inline jule::Bool _1aa889ee8_Time_eq(_1aa889ee8_Time *_self_, _1aa889ee8_Time _other_);


struct _1acbe91e0_UnixTime {
};
inline jule::Bool _1acbe91e0_UnixTime_eq(_1acbe91e0_UnixTime *_self_, _1acbe91e0_UnixTime _other_);


struct _1acbe970c_TimeData {
};
inline jule::Bool _1acbe970c_TimeData_eq(_1acbe970c_TimeData *_self_, _1acbe970c_TimeData _other_);


struct _1acbe9dd3_DurInt {
};
inline jule::Bool _1acbe9dd3_DurInt_eq(_1acbe9dd3_DurInt *_self_, _1acbe9dd3_DurInt _other_);


struct _1a92120ad_scopeCoder {
	jule::Ptr<_1aa897544_ObjectCoder> _field_oc;
};
inline jule::Bool _1a92120ad_scopeCoder_eq(_1a92120ad_scopeCoder *_self_, _1a92120ad_scopeCoder _other_);


struct _1a921d20c_exprCoder {
	jule::Ptr<_1aa897544_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a7ba4eb4_Var>>> _field_varPrefixes;
};
struct _1a92308d4_TestCoder {
	jule::Ptr<_1a799a97a_StructIns> _field_t;
	jule::Ptr<_1a7a70a83_Fn> _field_tmReset;
	jule::Ptr<_1a7a70a83_Fn> _field_tmFailed;
	jule::Ptr<_1a7a70a83_Fn> _field_tmSkipped;
	jule::Ptr<_1aa897544_ObjectCoder> _field_oc;
};
inline jule::Bool _1a92308d4_TestCoder_eq(_1a92308d4_TestCoder *_self_, _1a92308d4_TestCoder _other_);


struct _1a9233530_identCoder {
};
inline jule::Bool _1a9233530_identCoder_eq(_1a9233530_identCoder *_self_, _1a9233530_identCoder _other_);


struct _1aa894c8e_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
};
inline jule::Bool _1aa894c8e_SerializationInfo_eq(_1aa894c8e_SerializationInfo *_self_, _1aa894c8e_SerializationInfo _other_);


struct _1aa8951ac_traitCast {
	jule::Ptr<_1a7a7b297_Trait> _field_t1;
	jule::Ptr<_1a7a7b297_Trait> _field_t2;
};
inline jule::Bool _1aa8951ac_traitCast_eq(_1aa8951ac_traitCast *_self_, _1aa8951ac_traitCast _other_);


struct _1aa895586_anonHash {
	jule::Ptr<_1a7a666c2_AnonFnExpr> _field_expr;
	jule::Str _field_ident;
};
inline jule::Bool _1aa895586_anonHash_eq(_1aa895586_anonHash *_self_, _1aa895586_anonHash _other_);


struct _1aa8959a4_traitHash {
	jule::Ptr<_1a7a7b297_Trait> _field_traitDecl;
	jule::Slice<jule::Ptr<_1a7a70a83_Fn>> _field_methods;
};
struct _1aa895ca1_metadata {
	jule::Bool _field_concurrent;
};
inline jule::Bool _1aa895ca1_metadata_eq(_1aa895ca1_metadata *_self_, _1aa895ca1_metadata _other_);


struct _1aa897544_ObjectCoder {
	_1bc0a106b_Builder _field_Buf;
	_1bc0a106b_Builder _field_resultDecls;
	_1bc0a106b_Builder _field_anyObj;
	_1bc0a106b_Builder _field_anonObj;
	_1bc0a106b_Builder _field_deallocObj;
	_1bc0a106b_Builder _field_coSpawnObj;
	jule::Ptr<_1a85e5c78_IR> _field_ir;
	_1aa894c8e_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1aa895586_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1a7c3255d_Type>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_1acc42b62__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_1a7c3255d_Type>> _field_anyTypeMap;
	jule::Slice<_1aa8951ac_traitCast> _field_traitCastMap;
	jule::Slice<jule::Ptr<_1a7a73b41_FnIns>> _field_coSpawnMap;
	jule::Slice<jule::Ptr<_1aa8959a4_traitHash>> _field_traitMap;
	jule::Ptr<_1ba981398__Map> _field_traitMetMap;
	jule::Ptr<_1a921d20c_exprCoder> _field_ec;
	jule::Ptr<_1a92120ad_scopeCoder> _field_sc;
	jule::Ptr<_1aa8a717a_typeCoder> _field_tc;
	jule::I32 _field_headPos;
	jule::I32 _field_declPos;
	jule::I32 _field_wrapPos;
	_1aa895ca1_metadata _field_meta;
};
struct _1aa8a6564_customType {
	jule::Str _field_kind;
};
inline jule::Bool _1aa8a6564_customType_eq(_1aa8a6564_customType *_self_, _1aa8a6564_customType _other_);


struct _1aa8a717a_typeCoder {
	jule::Ptr<_1aa897544_ObjectCoder> _field_oc;
	jule::Ptr<_1aa8aec65_resultCoder> _field_rc;
};
inline jule::Bool _1aa8a717a_typeCoder_eq(_1aa8a717a_typeCoder *_self_, _1aa8a717a_typeCoder _other_);


struct _1aa8aec65_resultCoder {
	jule::Ptr<_1aa8a717a_typeCoder> _field_tc;
};
inline jule::Bool _1aa8aec65_resultCoder_eq(_1aa8aec65_resultCoder *_self_, _1aa8aec65_resultCoder _other_);


struct _1baaa1e8b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
};
inline jule::Bool _1baaa1e8b_Flag_eq(_1baaa1e8b_Flag *_self_, _1baaa1e8b_Flag _other_);

struct _1baaa5214_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
};
inline jule::Bool _1baaa5214_Flag_eq(_1baaa5214_Flag *_self_, _1baaa5214_Flag _other_);

struct _1baaa8459_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
};
inline jule::Bool _1baaa8459_Flag_eq(_1baaa8459_Flag *_self_, _1baaa8459_Flag _other_);

struct _1baaab6e3_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
};
inline jule::Bool _1baaab6e3_Flag_eq(_1baaab6e3_Flag *_self_, _1baaab6e3_Flag _other_);

struct _1baaae938_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
};
inline jule::Bool _1baaae938_Flag_eq(_1baaae938_Flag *_self_, _1baaae938_Flag _other_);


struct _1aa924d63_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
};
struct _1aa927827_argParser {
	_1aa924d63_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i;
};
struct _1a85e5c78_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1a7b62081_Package> _field_Main;
	jule::Ptr<_1a7b5e80e_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>> _field_Used;
	_1a8604c87_OrderedDefines _field_Ordered;
};
struct _1bc2584ba_Dir {
	jule::Str _field_Name;
	_1bc28a7c7_Stat _field_Stat;
};
inline jule::Bool _1bc2584ba_Dir_eq(_1bc2584ba_Dir *_self_, _1bc2584ba_Dir _other_);


struct _1bc259059_Cmd {
	_1bc28335d_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_1a7a73b41_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_1a7a73b41_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_s_1a7b2b9a7_exprPart__jule_tuple_x_1a7bed89d_Data__jule_tuple_bool {
	jule::Slice<_1a7b2b9a7_exprPart> __jule_result_arg0;
	jule::Ptr<_1a7bed89d_Data> __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_bool__jule_tuple_str {
	jule::Bool __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7bed89d_Data__jule_tuple_x_1a7bed89d_Data {
	jule::Ptr<_1a7bed89d_Data> __jule_result_arg0;
	jule::Ptr<_1a7bed89d_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1a7bed89d_Data__jule_tuple_bool {
	jule::Ptr<_1a7bed89d_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a797d0de_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a797d0de_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7990e37_Case__jule_tuple_bool {
	jule::Ptr<_1a7990e37_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a7990e37_Case__jule_tuple_x_1a798ebb1_Else {
	jule::Slice<jule::Ptr<_1a7990e37_Case>> __jule_result_arg0;
	jule::Ptr<_1a798ebb1_Else> __jule_result_arg1;
};
struct __jule_tuple__1a7988418_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7987758_AssignSt__jule_tuple_bool {
	jule::Ptr<_1a7987758_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1a7978caa_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a797bb9d_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1a797bb9d_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a7976deb_AST__jule_tuple_s_1bc0b03aa_Log {
	jule::Slice<jule::Ptr<_1a7976deb_AST>> __jule_result_arg0;
	jule::Slice<_1bc0b03aa_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1bc0b03aa_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1bc0b03aa_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a7a73b41_FnIns__jule_tuple_bool {
	jule::Ptr<_1a7a73b41_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a85e5c78_IR__jule_tuple_s_1bc0b03aa_Log {
	jule::Ptr<_1a85e5c78_IR> __jule_result_arg0;
	jule::Slice<_1bc0b03aa_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1a42be813_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1a42be813_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1a42be813_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1a42be813_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_s_1aa9372d7_byte__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple__1aa9372d7_byte__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7a76d86_SymTab__jule_tuple_s_1bc0b03aa_Log {
	jule::Ptr<_1a7a76d86_SymTab> __jule_result_arg0;
	jule::Slice<_1bc0b03aa_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a7b62081_Package__jule_tuple_s_1bc0b03aa_Log {
	jule::Ptr<_1a7b62081_Package> __jule_result_arg0;
	jule::Slice<_1bc0b03aa_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a7976deb_AST__jule_tuple_s_1bc0b03aa_Log {
	jule::Ptr<_1a7976deb_AST> __jule_result_arg0;
	jule::Slice<_1bc0b03aa_Log> __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a79633b0_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a79633b0_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a79633b0_Token__jule_tuple_sx_1a79633b0_Token {
	jule::Slice<jule::Ptr<_1a79633b0_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1a79633b0_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1a79633b0_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> __jule_result_arg0;
	jule::Slice<_1bc0b03aa_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__1bbdd6ad8_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__1bbdd7512_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_1acc42b62__Map> static__1acc4303b_make(void);
inline void _1acc43190_initData(_1acc42b62__Map* _self_, jule::I32 _13524_cap);
inline jule::U64 _1acc432e4_hash(_1acc42b62__Map* _self_, jule::Str _14616_k);
inline void _1acc43448_rehash(_1acc42b62__Map* _self_, jule::I32 _15122_n);
inline jule::I32 _1acc4359c_nextSize(_1acc42b62__Map* _self_);
inline void _1acc43701_lookup(jule::Ptr<_1acc42b62__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _1acc43855_get(jule::Ptr<_1acc42b62__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _1acc439a9_set(_1acc42b62__Map* _self_, jule::Str _24123_k);
inline jule::Bool _1acc43b0d_del(jule::Ptr<_1acc42b62__Map> _self_, jule::Str _27624_k);
inline void _1acc43c62_clear(jule::Ptr<_1acc42b62__Map> _self_);
inline jule::I32 _1acc43db6_len(jule::Ptr<_1acc42b62__Map> _self_);
inline jule::I32 _1acc4401a_cap(_1acc42b62__Map* _self_);
inline _1acc4d3dc_mapIterator _1acc4416e_iterator(jule::Ptr<_1acc42b62__Map> _self_);
inline jule::Ptr<_1ba981398__Map> static__1ba9816c8_make(void);
inline void _1ba98182c_initData(_1ba981398__Map* _self_, jule::I32 _13524_cap);
inline jule::U64 _1ba981981_hash(_1ba981398__Map* _self_, jule::Ptr<_1a7a73b41_FnIns> _14616_k);
inline void _1ba981ad5_rehash(_1ba981398__Map* _self_, jule::I32 _15122_n);
inline jule::I32 _1ba981c39_nextSize(_1ba981398__Map* _self_);
inline void _1ba981d8d_lookup(jule::Ptr<_1ba981398__Map> _self_, jule::Ptr<_1a7a73b41_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _1ba981ee2_get(jule::Ptr<_1ba981398__Map> _self_, jule::Ptr<_1a7a73b41_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _1ba982146_set(_1ba981398__Map* _self_, jule::Ptr<_1a7a73b41_FnIns> _24123_k);
inline jule::Bool _1ba98229a_del(jule::Ptr<_1ba981398__Map> _self_, jule::Ptr<_1a7a73b41_FnIns> _27624_k);
inline void _1ba9823ee_clear(jule::Ptr<_1ba981398__Map> _self_);
inline jule::I32 _1ba982553_len(jule::Ptr<_1ba981398__Map> _self_);
inline jule::I32 _1ba9826a7_cap(_1ba981398__Map* _self_);
inline _1ba989abb_mapIterator _1ba98280b_iterator(jule::Ptr<_1ba981398__Map> _self_);
inline void _1acc4d783_init(_1acc4d3dc_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _1acc4d8d7_next(_1acc4d3dc_mapIterator* _self_);
inline void _1ba989e62_init(_1ba989abb_mapIterator* _self_);
inline __jule_tuple_px_1a7a73b41_FnIns__jule_tuple_psuintptr _1ba98a0b6_next(_1ba989abb_mapIterator* _self_);
inline _1bc0a106b_Builder static__1bc0a18b8_New(jule::I32 _2316_cap);
inline jule::Exceptional<jule::I32> _1bc0a1c09_Write(_1bc0a106b_Builder* _self_, jule::Slice<jule::U8> _3421_b);
inline jule::Exceptional<jule::I32> _1bc0a204a_WriteStr(_1bc0a106b_Builder* _self_, jule::Str _4124_s);
inline jule::VoidExceptional _1bc0a2303_WriteByte(_1bc0a106b_Builder* _self_, jule::U8 _4825_b);
inline jule::Exceptional<jule::I32> _1bc0a2644_WriteRune(_1bc0a106b_Builder* _self_, jule::I32 _5525_r);
inline jule::Str _1bc0a28ca_Str(_1bc0a106b_Builder* _self_);
inline void _1bc0a2ac8_Clear(_1bc0a106b_Builder* _self_);
inline jule::I32 _1bc0a2d5e_Len(_1bc0a106b_Builder* _self_);
inline jule::Slice<jule::U8> _1bc0a337b_Buf(_1bc0a106b_Builder* _self_);
inline void _1bc0a3634_SetBuf(_1bc0a106b_Builder* _self_, jule::Slice<jule::U8> _9533_buf);
inline jule::U8 _1bd4354cb_index(_1bd435014_lazyBuff* _self_, jule::I32 _5421_i);
inline void _1bd435784_append(_1bd435014_lazyBuff* _self_, jule::U8 _6122_c);
inline jule::Str _1bd435a1a_string(_1bd435014_lazyBuff* _self_);
inline jule::Ptr<_1bc288220_File> static__1bc288c04_New(jule::Uintptr _6723_handle);
inline jule::Exceptional<jule::Ptr<_1bc288220_File>> static__1bc288ebd_Create(jule::Str _7819_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1bc289287_Read(jule::Str _8517_path);
inline jule::VoidExceptional static__1bc28962d_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I32 _12443_perm);
inline jule::VoidExceptional _1bc289e36_Close(_1bc288220_File* _self_);
inline jule::Exceptional<jule::Ptr<_1bc288220_File>> static__1bc28c026_Open(jule::Str _1717_path, jule::I32 _1728_flag, jule::I32 _1741_mode);
inline jule::VoidExceptional static__1bc28c257_Remove(jule::Str _2719_path);
inline jule::Exceptional<jule::I32> _1bc28c6db_Write(_1bc288220_File* _self_, jule::Slice<jule::U8> _4021_buf);
inline jule::Exceptional<jule::I32> _1bc28ca2c_Read(_1bc288220_File* _self_, jule::Slice<jule::U8> _6824_buf);
inline jule::Bool _1bc28abd4_IsDir(_1bc28a7c7_Stat* _self_);
inline jule::Bool _1bc28ae6a_IsReg(_1bc28a7c7_Stat* _self_);
inline jule::U32 _1bc28b201_Size(_1bc28a7c7_Stat* _self_);
inline jule::Exceptional<_1bc28a7c7_Stat> static__1bd43dbbb_Of(jule::Str _1015_path);
inline jule::Bool _1a49e6149_set(_1a49ee680_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1a49e648a_floatBits(_1a49ee680_decimal* _self_, _1a49dae96_floatInfo* _33226_flt);
inline void _1a49eea6a_assign(_1a49ee680_decimal* _self_, jule::U64 _15126_v);
inline void _1a49eed23_shift(_1a49ee680_decimal* _self_, jule::I32 _17625_k);
inline void _1a4a000cb_roundDown(_1a49ee680_decimal* _self_, jule::I32 _19625_nd);
inline void _1a4a00384_roundUp(_1a49ee680_decimal* _self_, jule::I32 _20523_nd);
inline void _1a4a0063c_round(_1a49ee680_decimal* _self_, jule::I32 _23221_nd);
inline jule::U64 _1a4a008c3_roundedInteger(_1a49ee680_decimal* _self_);
inline void static__1bd44a3c0_Reset(void);
inline void static__1bd46bc4e_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1a4a050c0_LogFlat(_1bc0b03aa_Log* _1421_l);
inline void static__1a4a052e0_LogError(_1bc0b03aa_Log* _1922_l);
inline void static__1a4a05521_Log(_1bc0b03aa_Log* _6417_l);
inline void static__1a4a05752_PrintLogs(jule::Slice<_1bc0b03aa_Log>* _7423_logs);
inline jule::U8 _1a7963767_Prec(_1a79633b0_Token* _self_);
inline jule::Ptr<_1a7968e65_Fileset> static__1a79692ea_New(jule::Str _2016_path);
inline void _1a796985b_FillMut(_1a7968e65_Fileset* _self_, jule::Slice<jule::U8> _3634_data);
inline jule::Str _1a7969ae2_Dir(_1a7968e65_Fileset* _self_);
inline jule::Str _1a7969d78_Name(_1a7968e65_Fileset* _self_);
inline jule::Str _1a796a450_GetRow(_1a7968e65_Fileset* _self_, jule::I32 _5718_row);
inline void _1a79727dc_pushErr(_1a7972226_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args);
inline void _1a7972d4d_lex(_1a7972226_lex* _self_);
inline jule::Str _1a797318e_id(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _47219_ln);
inline jule::Slice<jule::U8> _1a7973425_resume(_1a7972226_lex* _self_);
inline void _1a79736cd_lexLineComment(_1a7972226_lex* _self_, jule::Ptr<_1a79633b0_Token>* _52235_token);
inline void _1a7973986_lexRangeComment(_1a7972226_lex* _self_, jule::Ptr<_1a79633b0_Token>* _53736_token);
inline jule::Str _1a7973cc7_num(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _56520_txt);
inline jule::Str _1a7974118_escapeSeq(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _58726_txt);
inline jule::Str _1a7974514_getRune(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw);
inline jule::Str _1a7974855_lexRune(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _62624_txt);
inline jule::Str _1a7974adb_lexStr(_1a7972226_lex* _self_);
inline void _1a7975070_newLine(_1a7972226_lex* _self_);
inline jule::Bool _1a79755d1_isOp(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U32 _70845_id, jule::Ptr<_1a79633b0_Token>* _70858_t);
inline jule::Bool _1a79759cc_lexBasicOps(_1a7972226_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1a79633b0_Token>* _71845_tok);
inline jule::Bool _1a7975dc8_lexId(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1a79633b0_Token>* _72740_t);
inline jule::Bool _1a79762c4_lexNum(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1a79633b0_Token>* _73741_t);
inline jule::Ptr<_1a79633b0_Token> _1a797655a_token(_1a7972226_lex* _self_);
inline jule::Bool _1a797ab7a_IsUnsafe(_1a797a7d4_PtrTypeDecl* _self_);
inline jule::Bool _1a797b41c_AutoSized(_1a797b076_ArrTypeDecl* _self_);
inline jule::Bool _1a79821c0_Unhandled(_1a7981d18_FnCallExpr* _self_);
inline jule::Bool _1a7982456_Ignored(_1a7981d18_FnCallExpr* _self_);
inline jule::Bool _1a798999c_IsSelf(_1a79895e5_ParamDecl* _self_);
inline jule::Bool _1a798addd_IsAnon(_1a798aa47_FnDecl* _self_);
inline jule::Bool _1a798cbe2_IsInf(_1a798c84b_Iter* _self_);
inline jule::Bool _1a798d51c_IsWhileNext(_1a798d176_WhileKind* _self_);
inline jule::Ptr<_1a79ea9a8_Const> static__1a7a574d7_NewI64(jule::I64 _1419_x);
inline jule::Ptr<_1a79ea9a8_Const> static__1a7a5775c_NewU64(jule::U64 _1719_x);
inline jule::Ptr<_1a79ea9a8_Const> static__1a7a57a26_NewBool(jule::Bool _2020_x);
inline jule::Ptr<_1a79ea9a8_Const> static__1a7a57ce0_NewStr(jule::Str _2319_x);
inline jule::Ptr<_1a79ea9a8_Const> static__1a7a580a9_NewF64(jule::F64 _2619_x);
inline jule::Ptr<_1a79ea9a8_Const> static__1a7a582b8_NewNil(void);
inline jule::I64 _1a7a58928_ReadI64(_1a79ea9a8_Const* _self_);
inline jule::U64 _1a7a58bae_ReadU64(_1a79ea9a8_Const* _self_);
inline jule::Bool _1a7a58e45_ReadBool(_1a79ea9a8_Const* _self_);
inline jule::Str _1a7a591cb_ReadStr(_1a79ea9a8_Const* _self_);
inline jule::F64 _1a7a59462_ReadF64(_1a79ea9a8_Const* _self_);
inline jule::I64 _1a7a596e8_AsI64(_1a79ea9a8_Const* _self_);
inline jule::U64 _1a7a5997e_AsU64(_1a79ea9a8_Const* _self_);
inline jule::F64 _1a7a59c15_AsF64(_1a79ea9a8_Const* _self_);
inline void _1a7a59ebd_SetI64(_1a79ea9a8_Const* _self_, jule::I64 _13622_x);
inline void _1a7a5a276_SetU64(_1a79ea9a8_Const* _self_, jule::U64 _13922_x);
inline void _1a7a5a52e_SetBool(_1a79ea9a8_Const* _self_, jule::Bool _14223_x);
inline void _1a7a5a7d7_SetStr(_1a79ea9a8_Const* _self_, jule::Str _14522_x);
inline void _1a7a5aa90_SetF64(_1a79ea9a8_Const* _self_, jule::F64 _14822_x);
inline jule::Bool _1a7a5b024_IsI64(_1a79ea9a8_Const* _self_);
inline jule::Bool _1a7a5b2aa_IsU64(_1a79ea9a8_Const* _self_);
inline jule::Bool _1a7a5b541_IsBool(_1a79ea9a8_Const* _self_);
inline jule::Bool _1a7a5b7c7_IsStr(_1a79ea9a8_Const* _self_);
inline jule::Bool _1a7a5ba5d_IsF64(_1a79ea9a8_Const* _self_);
inline jule::Bool _1a7a5bce4_IsNil(_1a79ea9a8_Const* _self_);
inline jule::Bool _1a7a5c476_And(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _23615_x);
inline jule::Bool _1a7a5c7b7_Or(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _24714_x);
inline jule::Bool _1a7a5cb08_Eq(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _25814_x);
inline jule::Bool _1a7a5ce49_Lt(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _28514_x);
inline jule::Bool _1a7a5d28a_LtEq(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _30816_x);
inline jule::Bool _1a7a5d5cb_Gt(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _33114_x);
inline jule::Bool _1a7a5d91c_GtEq(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _35416_x);
inline jule::Bool _1a7a5dc5d_Add(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _37519_x);
inline jule::Bool _1a7a5e09e_Sub(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _40419_x);
inline jule::Bool _1a7a5e3e0_Mul(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _42819_x);
inline jule::Bool _1a7a5e731_Div(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _45619_x);
inline jule::Bool _1a7a5ea72_Mod(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _48519_x);
inline jule::Bool _1a7a5edb3_BitwiseAnd(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _50726_x);
inline jule::Bool _1a7a60204_BitwiseOr(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _52125_x);
inline jule::Bool _1a7a60545_Xor(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _53519_x);
inline jule::Bool _1a7a60886_Lshift(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _54922_x);
inline jule::Bool _1a7a60bc7_Rshift(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _56922_x);
inline jule::Ptr<_1a7999d53_FieldIns> _1a7996ba7_instance(jule::Ptr<_1a7996800_Field> _self_);
inline jule::Ptr<_1a799a97a_StructIns> _1a799800a_instance(jule::Ptr<_1a7997adc_Struct> _self_);
inline jule::Ptr<_1a799a97a_StructIns> _1a799834b_appendInstance(_1a7997adc_Struct* _self_, jule::Ptr<_1a799a97a_StructIns>* _10235_ins);
inline jule::Ptr<_1a7a70a83_Fn> _1a7998747_FindMethod(_1a7997adc_Struct* _self_, jule::Str _12026_ident, jule::Bool _12038_statically);
inline jule::Ptr<_1a7ba4eb4_Var> _1a7998a88_FindStatic(_1a7997adc_Struct* _self_, jule::Str _13126_ident);
inline jule::Ptr<_1a7996800_Field> _1a7998dc9_FindField(_1a7997adc_Struct* _self_, jule::Str _14225_ident);
inline jule::Bool _1a799921a_IsImplements(_1a7997adc_Struct* _self_, jule::Ptr<_1a7a7b297_Trait> _15224_t);
inline jule::Bool _1a799955b_IsUses(_1a7997adc_Struct* _self_, jule::Ptr<_1a7997adc_Struct> _16218_s);
inline jule::Str _1a799acee_Str(_1a799a97a_StructIns* _self_);
inline jule::Bool _1a799b140_Equal(jule::Ptr<_1a799a97a_StructIns> _self_, jule::Ptr<_1a7c3255d_Type> _22718_other);
inline jule::Bool _1a799b5e6_Same(_1a799a97a_StructIns* _self_, jule::Ptr<_1a799a97a_StructIns> _26216_s);
inline jule::Ptr<_1a7a70a83_Fn> _1a799b9e2_FindMethod(_1a799a97a_StructIns* _self_, jule::Str _27726_ident, jule::Bool _27738_statically);
inline jule::Ptr<_1a7999d53_FieldIns> _1a799bd33_FindField(_1a799a97a_StructIns* _self_, jule::Str _28825_ident);
inline jule::Ptr<_1a7ba4eb4_Var> _1a799c174_FindStatic(_1a799a97a_StructIns* _self_, jule::Str _29926_ident);
inline jule::Ptr<_1a7a729db_ParamIns> _1a7a6e477_instance(jule::Ptr<_1a7a6e0ae_Param> _self_);
inline jule::Bool _1a7a6e70d_IsSelf(_1a7a6e0ae_Param* _self_);
inline jule::Bool _1a7a6e994_IsRef(_1a7a6e0ae_Param* _self_);
inline jule::Bool _1a7a71039_IsVoid(_1a7a70a83_Fn* _self_);
inline jule::Bool _1a7a712c0_IsMethod(_1a7a70a83_Fn* _self_);
inline jule::Bool _1a7a71556_IsEntryPoint(_1a7a70a83_Fn* _self_);
inline jule::Bool _1a7a717dc_IsInit(_1a7a70a83_Fn* _self_);
inline jule::Bool _1a7a71a73_IsAnon(_1a7a70a83_Fn* _self_);
inline jule::Bool _1a7a71d09_AnyVar(_1a7a70a83_Fn* _self_);
inline jule::Ptr<_1a7a73b41_FnIns> _1a7a72090_instanceForce(jule::Ptr<_1a7a70a83_Fn> _self_);
inline jule::Ptr<_1a7a73b41_FnIns> _1a7a72326_instance(jule::Ptr<_1a7a70a83_Fn> _self_);
inline jule::Ptr<_1a7a73b41_FnIns> _1a7a72634_appendInstance(_1a7a70a83_Fn* _self_, jule::Ptr<_1a7a73b41_FnIns>* _14535_ins);
inline jule::Str _1a7a72d82_Str(_1a7a729db_ParamIns* _self_);
inline jule::Str _1a7a73eb5_Str(_1a7a73b41_FnIns* _self_);
inline jule::Bool _1a7a74306_Equal(jule::Ptr<_1a7a73b41_FnIns> _self_, jule::Ptr<_1a7c3255d_Type> _23618_other);
inline jule::Bool _1a7a7479b_EqualFn(jule::Ptr<_1a7a73b41_FnIns> _self_, jule::Ptr<_1a7a73b41_FnIns>* _24721_f);
inline jule::Bool _1a7a74adc_equalTrait(jule::Ptr<_1a7a73b41_FnIns> _self_, jule::Ptr<_1a7a73b41_FnIns>* _30624_other);
inline jule::Slice<jule::Ptr<_1a7c3255d_Type>> _1a7a74d73_Types(_1a7a73b41_FnIns* _self_);
inline jule::Bool _1a7a75109_IsBuiltin(_1a7a73b41_FnIns* _self_);
inline jule::Bool _1a7a75390_IsAnon(_1a7a73b41_FnIns* _self_);
inline jule::Bool _1a7a756d1_Same(_1a7a73b41_FnIns* _self_, jule::Ptr<_1a7a73b41_FnIns> _34916_f);
inline jule::Str _1a7a75a22_GetKindStr(_1a7a73b41_FnIns* _self_, jule::Bool _36622_ident);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7a773a3_SelectPackage(_1a7a76d86_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> _2729_selector);
inline jule::Ptr<_1a7ba4eb4_Var> _1a7a7779e_FindVar(_1a7a76d86_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1a7c31848_TypeAlias> _1a7a77b9a_FindTypeAlias(_1a7a76d86_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1a7997adc_Struct> _1a7a78096_FindStruct(_1a7a76d86_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1a7a70a83_Fn> _1a7a78492_FindFn(_1a7a76d86_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1a7a7b297_Trait> _1a7a787d3_FindTrait(_1a7a76d86_SymTab* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1a7a7d94d_Enum> _1a7a78b24_FindEnum(_1a7a76d86_SymTab* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1a7a80158_TypeEnum> _1a7a78e65_FindTypeEnum(_1a7a76d86_SymTab* _self_, jule::Str _9728_ident);
inline jule::I32 _1a7a7942c_findVar1(_1a7a76d86_SymTab* _self_, jule::Ptr<_1a7ba4eb4_Var>* _10825_v);
inline jule::Ptr<_1a7ba4eb4_Var> _1a7a798d3_findVar(_1a7a76d86_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1a7c31848_TypeAlias> _1a7a79d89_findTypeAlias(_1a7a76d86_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1a7a7a285_defByIdent(_1a7a76d86_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1a7a7a73b_isDuplicatedIdent(_1a7a76d86_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Str _1a7a7b693_Str(_1a7a7b297_Trait* _self_);
inline jule::Bool _1a7a7b9d4_Equal(jule::Ptr<_1a7a7b297_Trait> _self_, jule::Ptr<_1a7c3255d_Type> _2518_other);
inline jule::Ptr<_1a7a70a83_Fn> _1a7a7be79_FindMethod(_1a7a7b297_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1a7a70a83_Fn> _1a7a7c60b_findMethodInherit(_1a7a7b297_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1a7a7d2bb_AutoExpr(_1a7a7cde2_EnumItem* _self_);
inline jule::Str _1a7a7dd05_Str(_1a7a7d94d_Enum* _self_);
inline jule::Bool _1a7a7e146_Equal(jule::Ptr<_1a7a7d94d_Enum> _self_, jule::Ptr<_1a7c3255d_Type> _3818_other);
inline jule::Ptr<_1a7a7cde2_EnumItem> _1a7a7e575_FindItem(_1a7a7d94d_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1a7a804cc_Str(_1a7a80158_TypeEnum* _self_);
inline jule::Bool _1a7a8081d_Equal(jule::Ptr<_1a7a80158_TypeEnum> _self_, jule::Ptr<_1a7c3255d_Type> _8018_other);
inline jule::Ptr<_1a7a7ea81_TypeEnumItem> _1a7a80c4c_FindItem(_1a7a80158_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1a7b01361_Str(_1a7b00e65_comptimeRange* _self_);
inline jule::Bool _1a7b016a2_Equal(jule::Ptr<_1a7b00e65_comptimeRange> _self_, jule::Ptr<_1a7c3255d_Type> _2718_other);
inline jule::Str _1a7b01d78_Str(_1a7b019c1_comptimeStructField* _self_);
inline jule::Bool _1a7b021b9_Equal(jule::Ptr<_1a7b019c1_comptimeStructField> _self_, jule::Ptr<_1a7c3255d_Type> _3718_other);
inline jule::Ptr<_1a7bed89d_Data> _1a7b026c5__Decl(jule::Ptr<_1a7b019c1_comptimeStructField> _self_, jule::Ptr<_1a7c0086c_eval>* _4127_e, jule::Ptr<_1a7981d18_FnCallExpr>* _4142_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b02ac1__Type(jule::Ptr<_1a7b019c1_comptimeStructField> _self_, jule::Ptr<_1a7c0086c_eval>* _5327_e, jule::Ptr<_1a7981d18_FnCallExpr>* _5342_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b02e12_subIdent(jule::Ptr<_1a7b019c1_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _1a7b0362c_Str(_1a7b03264_comptimeStructFields* _self_);
inline jule::Bool _1a7b0396d_Equal(jule::Ptr<_1a7b03264_comptimeStructFields> _self_, jule::Ptr<_1a7c3255d_Type> _9018_other);
inline void _1a7b03e02_ready(_1a7b03264_comptimeStructFields* _self_, jule::Ptr<_1a7ba4eb4_Var>* _9426_keyA, jule::Ptr<_1a7ba4eb4_Var>* _9443_keyB);
inline void _1a7b04265_index(_1a7b03264_comptimeStructFields* _self_, jule::Ptr<_1a7bed89d_Data>* _11526_d, jule::I32 _11536_i);
inline void _1a7b04683_step(_1a7b03264_comptimeStructFields* _self_, jule::I32 _12620_i, jule::Ptr<_1a7ba4eb4_Var>* _12633_keyA, jule::Ptr<_1a7ba4eb4_Var>* _12650_keyB);
inline jule::I32 _1a7b04919_len(_1a7b03264_comptimeStructFields* _self_);
inline jule::Str _1a7b0509b_Str(_1a7b04be4_comptimeStatic* _self_);
inline jule::Bool _1a7b053dc_Equal(jule::Ptr<_1a7b04be4_comptimeStatic> _self_, jule::Ptr<_1a7c3255d_Type> _15018_other);
inline jule::Ptr<_1a7bed89d_Data> _1a7b058e8__Decl(jule::Ptr<_1a7b04be4_comptimeStatic> _self_, jule::Ptr<_1a7c0086c_eval>* _15427_e, jule::Ptr<_1a7981d18_FnCallExpr>* _15442_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b05ce4__Type(jule::Ptr<_1a7b04be4_comptimeStatic> _self_, jule::Ptr<_1a7c0086c_eval>* _16627_e, jule::Ptr<_1a7981d18_FnCallExpr>* _16642_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b06135_subIdent(jule::Ptr<_1a7b04be4_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _1a7b06850_Str(_1a7b06498_comptimeStatics* _self_);
inline jule::Bool _1a7b06b91_Equal(jule::Ptr<_1a7b06498_comptimeStatics> _self_, jule::Ptr<_1a7c3255d_Type> _20318_other);
inline void _1a7b07125_ready(_1a7b06498_comptimeStatics* _self_, jule::Ptr<_1a7ba4eb4_Var>* _20726_keyA, jule::Ptr<_1a7ba4eb4_Var>* _20743_keyB);
inline void _1a7b07488_index(_1a7b06498_comptimeStatics* _self_, jule::Ptr<_1a7bed89d_Data>* _22826_d, jule::I32 _22836_i);
inline void _1a7b078a6_step(_1a7b06498_comptimeStatics* _self_, jule::I32 _23920_i, jule::Ptr<_1a7ba4eb4_Var>* _23933_keyA, jule::Ptr<_1a7ba4eb4_Var>* _23950_keyB);
inline jule::I32 _1a7b07b3c_len(_1a7b06498_comptimeStatics* _self_);
inline jule::Str _1a7b082be_Str(_1a7b07e17_comptimeEnumField* _self_);
inline jule::Bool _1a7b08610_Equal(jule::Ptr<_1a7b07e17_comptimeEnumField> _self_, jule::Ptr<_1a7c3255d_Type> _26318_other);
inline jule::Ptr<_1a7bed89d_Data> _1a7b08b0a__Decl(jule::Ptr<_1a7b07e17_comptimeEnumField> _self_, jule::Ptr<_1a7c0086c_eval>* _26727_e, jule::Ptr<_1a7981d18_FnCallExpr>* _26742_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b08e4b_subIdent(jule::Ptr<_1a7b07e17_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _1a7b096dd_Str(_1a7b09226_comptimeEnumFields* _self_);
inline jule::Bool _1a7b09a2e_Equal(jule::Ptr<_1a7b09226_comptimeEnumFields> _self_, jule::Ptr<_1a7c3255d_Type> _30118_other);
inline void _1a7b09e3b_ready(_1a7b09226_comptimeEnumFields* _self_, jule::Ptr<_1a7ba4eb4_Var>* _30526_keyA, jule::Ptr<_1a7ba4eb4_Var>* _30543_keyB);
inline void _1a7b0a29e_index(_1a7b09226_comptimeEnumFields* _self_, jule::Ptr<_1a7bed89d_Data>* _32626_d, jule::I32 _32636_i);
inline void _1a7b0a6bc_step(_1a7b09226_comptimeEnumFields* _self_, jule::I32 _33720_i, jule::Ptr<_1a7ba4eb4_Var>* _33733_keyA, jule::Ptr<_1a7ba4eb4_Var>* _33750_keyB);
inline jule::I32 _1a7b0a953_len(_1a7b09226_comptimeEnumFields* _self_);
inline jule::Str _1a7b0b0d5_Str(_1a7b0ac2d_comptimeParam* _self_);
inline jule::Bool _1a7b0b426_Equal(jule::Ptr<_1a7b0ac2d_comptimeParam> _self_, jule::Ptr<_1a7c3255d_Type> _36118_other);
inline jule::Ptr<_1a7bed89d_Data> _1a7b0b943__Decl(jule::Ptr<_1a7b0ac2d_comptimeParam> _self_, jule::Ptr<_1a7c0086c_eval>* _36527_e, jule::Ptr<_1a7981d18_FnCallExpr>* _36542_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b0bd3e__Type(jule::Ptr<_1a7b0ac2d_comptimeParam> _self_, jule::Ptr<_1a7c0086c_eval>* _37727_e, jule::Ptr<_1a7981d18_FnCallExpr>* _37742_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b0c23a__Recv(jule::Ptr<_1a7b0ac2d_comptimeParam> _self_, jule::Ptr<_1a7c0086c_eval>* _38527_e, jule::Ptr<_1a7981d18_FnCallExpr>* _38542_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b0c57b_subIdent(jule::Ptr<_1a7b0ac2d_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _1a7b0cd2e_Str(_1a7b0ca87_comptimeParams* _self_);
inline jule::Bool _1a7b0d170_Equal(jule::Ptr<_1a7b0ca87_comptimeParams> _self_, jule::Ptr<_1a7c3255d_Type> _43418_other);
inline void _1a7b0d604_ready(_1a7b0ca87_comptimeParams* _self_, jule::Ptr<_1a7ba4eb4_Var>* _43826_keyA, jule::Ptr<_1a7ba4eb4_Var>* _43843_keyB);
inline void _1a7b0d967_index(_1a7b0ca87_comptimeParams* _self_, jule::Ptr<_1a7bed89d_Data>* _45926_d, jule::I32 _45936_i);
inline void _1a7b0dd85_step(_1a7b0ca87_comptimeParams* _self_, jule::I32 _47020_i, jule::Ptr<_1a7ba4eb4_Var>* _47033_keyA, jule::Ptr<_1a7ba4eb4_Var>* _47050_keyB);
inline jule::I32 _1a7b0e11b_len(_1a7b0ca87_comptimeParams* _self_);
inline jule::Str _1a7b0e79d_Str(_1a7b0e3e6_comptimeTypeInfos* _self_);
inline jule::Bool _1a7b0eade_Equal(jule::Ptr<_1a7b0e3e6_comptimeTypeInfos> _self_, jule::Ptr<_1a7c3255d_Type> _49418_other);
inline void _1a7b10073_ready(_1a7b0e3e6_comptimeTypeInfos* _self_, jule::Ptr<_1a7ba4eb4_Var>* _49826_keyA, jule::Ptr<_1a7ba4eb4_Var>* _49843_keyB);
inline void _1a7b103d6_index(_1a7b0e3e6_comptimeTypeInfos* _self_, jule::Ptr<_1a7bed89d_Data>* _51926_d, jule::I32 _51936_i);
inline void _1a7b10804_step(_1a7b0e3e6_comptimeTypeInfos* _self_, jule::I32 _52820_i, jule::Ptr<_1a7ba4eb4_Var>* _52833_keyA, jule::Ptr<_1a7ba4eb4_Var>* _52850_keyB);
inline jule::I32 _1a7b10a8a_len(_1a7b0e3e6_comptimeTypeInfos* _self_);
inline jule::Str _1a7b1121c_Str(_1a7b10d65_comptimeTypeInfo* _self_);
inline jule::Bool _1a7b1155d_Equal(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c3255d_Type> _55218_other);
inline jule::Ptr<_1a7bed89d_Data> _1a7b11b9b__Decl(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _55627_e, jule::Ptr<_1a7981d18_FnCallExpr>* _55642_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b12097__Str(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _59322_e, jule::Ptr<_1a7981d18_FnCallExpr>* _59337_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b12493__Kind(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _60627_e, jule::Ptr<_1a7981d18_FnCallExpr>* _60642_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b1288e__Bits(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _68627_e, jule::Ptr<_1a7981d18_FnCallExpr>* _68642_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b12c8a__Elem(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _71027_e, jule::Ptr<_1a7981d18_FnCallExpr>* _71042_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b13186__Size(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _74327_e, jule::Ptr<_1a7981d18_FnCallExpr>* _74342_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b13582__Key(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _76226_e, jule::Ptr<_1a7981d18_FnCallExpr>* _76241_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b1397d__Value(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _77528_e, jule::Ptr<_1a7981d18_FnCallExpr>* _77543_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b13d79__Fields(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _78829_e, jule::Ptr<_1a7981d18_FnCallExpr>* _78844_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b14275__Statics(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _81730_e, jule::Ptr<_1a7981d18_FnCallExpr>* _81745_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b14671__Binded(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _83629_e, jule::Ptr<_1a7981d18_FnCallExpr>* _83644_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b14a6c__Ordered(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _84926_e, jule::Ptr<_1a7981d18_FnCallExpr>* _84941_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b14e68__Comparable(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _86229_e, jule::Ptr<_1a7981d18_FnCallExpr>* _86244_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b15364__Mutable(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _87526_e, jule::Ptr<_1a7981d18_FnCallExpr>* _87541_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b15760__Types(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _88828_e, jule::Ptr<_1a7981d18_FnCallExpr>* _88843_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b15b5b__CanNil(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _91129_e, jule::Ptr<_1a7981d18_FnCallExpr>* _91144_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b16057__GC(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _92425_e, jule::Ptr<_1a7981d18_FnCallExpr>* _92440_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b16453__Result(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _93729_e, jule::Ptr<_1a7981d18_FnCallExpr>* _93744_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b1684e__Params(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _95329_e, jule::Ptr<_1a7981d18_FnCallExpr>* _95344_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b16b90_subIdent(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _1a7b17322_Str(_1a7b16e6a_comptimeValue* _self_);
inline jule::Bool _1a7b17663_Equal(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c3255d_Type> _111818_other);
inline jule::Ptr<_1a7bed89d_Data> _1a7b17bc4__Unwrap(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _112229_e, jule::Ptr<_1a7981d18_FnCallExpr>* _112244_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b180c0__Type(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _113027_e, jule::Ptr<_1a7981d18_FnCallExpr>* _113042_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b184bb__Lvalue(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _113829_e, jule::Ptr<_1a7981d18_FnCallExpr>* _113844_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b188b7__Mutable(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _115130_e, jule::Ptr<_1a7981d18_FnCallExpr>* _115145_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b18cb3__Const(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _116428_e, jule::Ptr<_1a7981d18_FnCallExpr>* _116443_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b191ae__Field(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _117728_e, jule::Ptr<_1a7981d18_FnCallExpr>* _117743_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b195aa__Method(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _121229_e, jule::Ptr<_1a7981d18_FnCallExpr>* _121244_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b198eb_subIdent(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Str* _125926_ident);
inline jule::Str _1a7b1a07d_Str(_1a7b19bc6_comptimeFiles* _self_);
inline jule::Bool _1a7b1a3be_Equal(jule::Ptr<_1a7b19bc6_comptimeFiles> _self_, jule::Ptr<_1a7c3255d_Type> _132318_other);
inline void _1a7b1a853_ready(_1a7b19bc6_comptimeFiles* _self_, jule::Ptr<_1a7ba4eb4_Var>* _132726_keyA, jule::Ptr<_1a7ba4eb4_Var>* _132743_keyB);
inline void _1a7b1abb6_index(_1a7b19bc6_comptimeFiles* _self_, jule::Ptr<_1a7bed89d_Data>* _134826_d, jule::I32 _134836_i);
inline void _1a7b1b0d4_step(_1a7b19bc6_comptimeFiles* _self_, jule::I32 _135920_i, jule::Ptr<_1a7ba4eb4_Var>* _135933_keyA, jule::Ptr<_1a7ba4eb4_Var>* _135950_keyB);
inline jule::I32 _1a7b1b36a_len(_1a7b19bc6_comptimeFiles* _self_);
inline jule::Str _1a7b1b9ec_Str(_1a7b1b645_comptimeFile* _self_);
inline jule::Bool _1a7b1bd3d_Equal(jule::Ptr<_1a7b1b645_comptimeFile> _self_, jule::Ptr<_1a7c3255d_Type> _138318_other);
inline jule::Ptr<_1a7bed89d_Data> _1a7b1c35a__Path(jule::Ptr<_1a7b1b645_comptimeFile> _self_, jule::Ptr<_1a7c0086c_eval>* _138727_e, jule::Ptr<_1a7981d18_FnCallExpr>* _138742_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b1c756__Name(jule::Ptr<_1a7b1b645_comptimeFile> _self_, jule::Ptr<_1a7c0086c_eval>* _140027_e, jule::Ptr<_1a7981d18_FnCallExpr>* _140042_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b1cb52__Dir(jule::Ptr<_1a7b1b645_comptimeFile> _self_, jule::Ptr<_1a7c0086c_eval>* _141326_e, jule::Ptr<_1a7981d18_FnCallExpr>* _141341_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b1ce93_subIdent(jule::Ptr<_1a7b1b645_comptimeFile> _self_, jule::Str* _142626_ident);
inline jule::Str _1a7b1d856_Str(_1a7b1d26d_comptimeDecls* _self_);
inline jule::Bool _1a7b1db97_Equal(jule::Ptr<_1a7b1d26d_comptimeDecls> _self_, jule::Ptr<_1a7c3255d_Type> _146218_other);
inline void _1a7b1e01b_ready(_1a7b1d26d_comptimeDecls* _self_, jule::Ptr<_1a7ba4eb4_Var>* _146626_keyA, jule::Ptr<_1a7ba4eb4_Var>* _146643_keyB);
inline void _1a7b1e37e_index(_1a7b1d26d_comptimeDecls* _self_, jule::Ptr<_1a7bed89d_Data>* _148726_d, jule::I32 _148736_i);
inline void _1a7b1e79c_step(_1a7b1d26d_comptimeDecls* _self_, jule::I32 _149620_i, jule::Ptr<_1a7ba4eb4_Var>* _149633_keyA, jule::Ptr<_1a7ba4eb4_Var>* _149650_keyB);
inline jule::I32 _1a7b1ea33_len(_1a7b1d26d_comptimeDecls* _self_);
inline jule::Str _1a7b20913_Str(_1a7b2055b_comptimeDecl* _self_);
inline jule::Bool _1a7b20c54_Equal(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c3255d_Type> _153518_other);
inline jule::Str _1a7b211a5_declAsStr(_1a7b2055b_comptimeDecl* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7b215a1__Name(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _156627_e, jule::Ptr<_1a7981d18_FnCallExpr>* _156642_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b2199c__Public(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _160429_e, jule::Ptr<_1a7981d18_FnCallExpr>* _160444_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b21d98__Binded(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _164229_e, jule::Ptr<_1a7981d18_FnCallExpr>* _164244_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b22294__Exceptional(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _167634_e, jule::Ptr<_1a7981d18_FnCallExpr>* _167649_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b22690__Mutable(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _169730_e, jule::Ptr<_1a7981d18_FnCallExpr>* _169745_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b22a8b__Variadic(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _173031_e, jule::Ptr<_1a7981d18_FnCallExpr>* _173046_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b22e87__Reference(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _176132_e, jule::Ptr<_1a7981d18_FnCallExpr>* _176147_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b23383__Params(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _179329_e, jule::Ptr<_1a7981d18_FnCallExpr>* _179344_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b2377e__Fields(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _182829_e, jule::Ptr<_1a7981d18_FnCallExpr>* _182844_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b23b7a__Statics(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _186930_e, jule::Ptr<_1a7981d18_FnCallExpr>* _186945_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b24076__Methods(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _190530_e, jule::Ptr<_1a7981d18_FnCallExpr>* _190545_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7b243b7_subIdent(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Str* _194626_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1a7b7c0bd_sema>*,jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>*> _1a7b27376_readyFn(jule::Ptr<_1a7b26e47_constraintChecker> _self_);
inline jule::Bool _1a7b2760c_readyFi(jule::Ptr<_1a7b26e47_constraintChecker> _self_);
inline jule::Bool _1a7b27893_readySi(jule::Ptr<_1a7b26e47_constraintChecker> _self_);
inline jule::Bool _1a7b27b29_ready(jule::Ptr<_1a7b26e47_constraintChecker> _self_);
inline jule::Bool _1a7b27db0_check(jule::Ptr<_1a7b26e47_constraintChecker> _self_);
inline jule::Bool _1a7b29642_IsTraitImpl(_1a7b29246_Impl* _self_);
inline jule::Bool _1a7b298c8_IsStructImpl(_1a7b29246_Impl* _self_);
inline jule::Bool _1a7b2da86_IsWhileNext(_1a7b2d5d0_WhileIter* _self_);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b34e11_SelectPackage(_1a7b34938_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> _24029_selector);
inline jule::Ptr<_1a7ba4eb4_Var> _1a7b3530c_FindVar(_1a7b34938_scopeChecker* _self_, jule::Str _25123_ident, jule::Bool _25135_binded);
inline jule::Ptr<_1a7c31848_TypeAlias> _1a7b35708_FindTypeAlias(_1a7b34938_scopeChecker* _self_, jule::Str _26829_ident, jule::Bool _26841_binded);
inline jule::Ptr<_1a7997adc_Struct> _1a7b35b04_FindStruct(_1a7b34938_scopeChecker* _self_, jule::Str _29326_ident, jule::Bool _29338_binded);
inline jule::Ptr<_1a7a70a83_Fn> _1a7b36000_FindFn(_1a7b34938_scopeChecker* _self_, jule::Str _30222_ident, jule::Bool _30234_binded);
inline jule::Ptr<_1a7a7b297_Trait> _1a7b36341_FindTrait(_1a7b34938_scopeChecker* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1a7a7d94d_Enum> _1a7b36682_FindEnum(_1a7b34938_scopeChecker* _self_, jule::Str _32024_ident);
inline jule::Ptr<_1a7a80158_TypeEnum> _1a7b369c3_FindTypeEnum(_1a7b34938_scopeChecker* _self_, jule::Str _32928_ident);
inline jule::Bool _1a7b36d25_isUnsafe(jule::Ptr<_1a7b34938_scopeChecker> _self_);
inline jule::Bool _1a7b370ab_isRoot(_1a7b34938_scopeChecker* _self_);
inline void _1a7b372a9_stop(_1a7b34938_scopeChecker* _self_);
inline jule::Bool _1a7b37540_stopped(_1a7b34938_scopeChecker* _self_);
inline jule::Bool _1a7b377c6_isDeferred(jule::Ptr<_1a7b34938_scopeChecker> _self_);
inline void _1a7b37a7e_pushCaptured(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7ba4eb4_Var>* _39134_v);
inline jule::Ptr<_1a7b34938_scopeChecker> _1a7b37d15_getRoot(jule::Ptr<_1a7b34938_scopeChecker> _self_);
inline jule::Ptr<_1a7b34938_scopeChecker> _1a7b3809b_getHardRoot(jule::Ptr<_1a7b34938_scopeChecker> _self_);
inline jule::Ptr<_1a7b4c786_ReferenceStack> _1a7b38332_getOwnerRefers(jule::Ptr<_1a7b34938_scopeChecker> _self_);
inline jule::Ptr<_1a7ba4eb4_Var> _1a7b38673_findVar(_1a7b34938_scopeChecker* _self_, jule::Str _43823_ident);
inline jule::Ptr<_1a7b2ec41_Label> _1a7b389b4_findLabel(_1a7b34938_scopeChecker* _self_, jule::Str* _45926_ident);
inline jule::Ptr<_1a7b3356e_scopeLabel> _1a7b38d05_findLabelScope(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Str* _47532_ident);
inline jule::Ptr<_1a7b3356e_scopeLabel> _1a7b39146_findLabelAll(_1a7b34938_scopeChecker* _self_, jule::Str* _48629_ident);
inline jule::Bool _1a7b39542_isDuplicatedIdent(_1a7b34938_scopeChecker* _self_, jule::Uintptr _49833_itself, jule::Str* _49851_ident);
inline void _1a7b397ea_checkVarDecl(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798bc02_VarDecl> _51833_decl);
inline void _1a7b39aa3_checkTypeAlias(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7c31848_TypeAlias>* _54936_ta);
inline void _1a7b39d5b_checkTypeAliasDecl(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7990981_TypeAliasDecl> _56539_decl);
inline jule::Ptr<_1a7b2c238_Scope> _1a7b3a0e2_getChild(_1a7b34938_scopeChecker* _self_);
inline void _1a7b3a510_checkChildSsc(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7988da8_ScopeTree>* _57635_tree, jule::Ptr<_1a7b2c238_Scope>* _57663_s, jule::Ptr<_1a7b34938_scopeChecker>* _57679_ssc);
inline jule::Ptr<_1a7b2c238_Scope> _1a7b3a90b_checkChildSc(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7988da8_ScopeTree>* _58334_tree, jule::Ptr<_1a7b34938_scopeChecker>* _58362_ssc);
inline jule::Ptr<_1a7b2c238_Scope> _1a7b3ac4c_checkChild(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7988da8_ScopeTree>* _58932_tree);
inline void _1a7b3b005_checkAnonScope(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7988da8_ScopeTree> _59435_tree);
inline void _1a7b3b368_processErrorCall(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7a6b94c_BuiltinErrorCallExpr>* _59938_m, jule::Ptr<_1a79633b0_Token> _59964_err);
inline void _1a7b3b621_checkExpr(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a797d0de_Expr> _61230_expr);
inline jule::Ptr<_1a7b2c612_If> _1a7b3b962_checkIf(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798e7d7_If> _64228_i);
inline jule::Ptr<_1a7b2c986_Else> _1a7b3bca3_checkElse(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798ebb1_Else> _66230_e);
inline void _1a7b3c05b_checkConditional(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7990167_Conditional> _66837_conditional);
inline void _1a7b3c534_checkIterScopeSsc(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Uintptr _68434_it, jule::Ptr<_1a7988da8_ScopeTree> _68451_tree, jule::Ptr<_1a7b2c238_Scope>* _68479_s, jule::Ptr<_1a7b34938_scopeChecker> _68494_ssc);
inline jule::Ptr<_1a7b2c238_Scope> _1a7b3c9da_checkIterScopeSc(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Uintptr _68933_it, jule::Ptr<_1a7988da8_ScopeTree> _68950_tree, jule::Ptr<_1a7b34938_scopeChecker> _68977_ssc);
inline jule::Ptr<_1a7b2c238_Scope> _1a7b3cdd6_checkIterScope(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Uintptr _69531_it, jule::Ptr<_1a7988da8_ScopeTree>* _69549_tree);
inline void _1a7b3d18e_checkInfIter(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798c84b_Iter>* _70034_it);
inline void _1a7b3d447_checkWhileIter(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798c84b_Iter>* _70636_it);
inline void _1a7b3d865_checkComptimeRangeIter(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798c84b_Iter>* _75644_it, jule::Ptr<_1a7b2e0b4_RangeIter>* _75665_kind, jule::Ptr<_1a7bed89d_Data>* _75688_d);
inline void _1a7b3db1d_checkRangeIter(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798c84b_Iter>* _81336_it);
inline void _1a7b3ddc6_checkIter(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798c84b_Iter> _88030_it);
inline jule::Bool _1a7b3e217_checkValidContLabel(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Uintptr _90436_it);
inline jule::Bool _1a7b3e558_checkValidBreakLabel(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Uintptr _92037_ptr);
inline jule::Ptr<_1a7b2e3b1_ContSt> _1a7b3e899_checkContValidScope(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798e331_ContSt> _94336_c);
inline void _1a7b3eb52_checkCont(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798e331_ContSt> _96726_c);
inline void _1a7b3ee0a_checkLabel(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798638e_LabelSt> _101431_l);
inline void _1a7b401b3_pushGoto(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7986768_GotoSt> _103329_gt);
inline void _1a7b4046b_checkPostfix(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7987758_AssignSt> _104433_a);
inline jule::Bool _1a7b407ac_isNewAssignIdent(_1a7b34938_scopeChecker* _self_, jule::Str _108032_ident);
inline void _1a7b40a65_removeInteriorMutRisk(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7bed89d_Data>* _109343_d);
inline void _1a7b40d1d_checkSingleAssign(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7987758_AssignSt>* _110739_a);
inline void _1a7b4145b_processEndPartOfMultiAssign(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _118749_st, jule::Ptr<_1a7987758_AssignSt>* _118772_a, jule::Ptr<_1a79871c5_AssignLeft>* _11888_lexpr, jule::Ptr<_1a7bed89d_Data>* _118838_l, _1a7b2b9a7_exprPart* _118853_r, jule::Bool _118866_strict);
inline __jule_tuple_s_1a7b2b9a7_exprPart__jule_tuple_x_1a7bed89d_Data__jule_tuple_bool _1a7b41857_getRightExprsOfMultiAssign(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7987758_AssignSt> _126347_a, jule::Ptr<_1a7c0086c_eval> _12647_eval);
inline void _1a7b41b10_checkMultiAssign(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7987758_AssignSt>* _133738_a);
inline void _1a7b41db8_checkAssignSt(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7987758_AssignSt> _141034_a);
inline jule::Ptr<_1a7b2c238_Scope> _1a7b422b4_checkCaseScope(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7b32529_Case>* _142132_c, jule::Ptr<_1a7988da8_ScopeTree>* _142147_tree);
inline jule::Ptr<_1a7b32529_Case> _1a7b42825_checkCase(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7b31c32_Match> _142730_m, jule::I32 _142741_i, jule::Ptr<_1a7990e37_Case> _142753_c, jule::Ptr<_1a7bed89d_Data> _142772_expr);
inline void _1a7b42c43_checkCases(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7991751_MatchCase>* _150432_m, jule::Ptr<_1a7b31c32_Match> _150456_rm, jule::Ptr<_1a7bed89d_Data> _150472_expr);
inline jule::Ptr<_1a7b32529_Case> _1a7b4313e_checkDefault(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7b31c32_Match> _152533_m, jule::Ptr<_1a798ebb1_Else> _152548_d);
inline void _1a7b434a2_checkComptimePanic(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a79633b0_Token> _153339_callToken, jule::Ptr<_1a7b2c238_Scope>* _153366_s);
inline void _1a7b43815_processConstMatch(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7b31c32_Match>* _156539_tm, jule::Ptr<_1a7991751_MatchCase>* _156556_m);
inline void _1a7b43abd_checkTypeMatch(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7991751_MatchCase>* _159436_m);
inline void _1a7b43d76_checkCommonMatch(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7991751_MatchCase>* _163738_m);
inline void _1a7b4412e_checkMatch(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7991751_MatchCase> _168831_m);
inline void _1a7b443d7_checkFall(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7986a65_FallSt> _169626_f);
inline jule::Ptr<_1a7b2e78a_BreakSt> _1a7b44728_checkBreakWithLabel(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798de57_BreakSt> _171936_b);
inline jule::Ptr<_1a7b2e78a_BreakSt> _1a7b44a69_checkPlainBreak(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798de57_BreakSt> _177732_b);
inline void _1a7b44d22_checkBreak(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798de57_BreakSt> _179927_b);
inline void _1a7b450ca_checkRet(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798c0cb_RetSt> _181029_r);
inline void _1a7b45383_checkUseExpr(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a797d9b3_UseExpr> _183629_ue);
inline void _1a7b4563b_checkNode(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Any* _185231_node);
inline void _1a7b45839_checkResult(jule::Ptr<_1a7b34938_scopeChecker> _self_);
inline void _1a7b45a37_checkTree(jule::Ptr<_1a7b34938_scopeChecker> _self_);
inline void _1a7b45d9a_checkGoto(_1a7b34938_scopeChecker* _self_, jule::Ptr<_1a7b303a1_GotoSt>* _195530_gt, jule::Ptr<_1a7b3356e_scopeLabel>* _195548_label);
inline void _1a7b46098_checkGotos(_1a7b34938_scopeChecker* _self_);
inline void _1a7b46296_checkLabels(_1a7b34938_scopeChecker* _self_);
inline void _1a7b46494_checkVars(_1a7b34938_scopeChecker* _self_);
inline void _1a7b46692_checkAliases(_1a7b34938_scopeChecker* _self_);
inline void _1a7b46a05_check(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7988da8_ScopeTree>* _205027_tree, jule::Ptr<_1a7b2c238_Scope>* _205055_s);
inline jule::Ptr<_1a7b34938_scopeChecker> _1a7b46c8b_newChildChecker(jule::Ptr<_1a7b34938_scopeChecker> _self_);
inline void _1a7b4a3cc_checkCdef(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _1626_d);
inline void _1a7b4a685_checkTypedef(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _3229_d);
inline void _1a7b4a93d_checkNamespace(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _4835_d);
inline void _1a7b4abe6_checkDeprecated(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _10036_d);
inline void _1a7b4ae9e_checkTest(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _14126_d);
inline void _1a7b4b257_checkExport(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _16232_d);
inline void _1a7b4b510_checkDirective(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _20035_d);
inline void _1a7b4b70d_check(_1a7b49e7b_directiveChecker* _self_);
inline jule::Ptr<_1a7b4c786_ReferenceStack> static__1a7b4cae9_new(void);
inline jule::I32 _1a7b4cee5_Len(_1a7b4c786_ReferenceStack* _self_);
inline jule::Any _1a7b4d336_At(_1a7b4c786_ReferenceStack* _self_, jule::I32 _4318_i);
inline void _1a7b4d5de_Push(_1a7b4c786_ReferenceStack* _self_, jule::Any _4824_ref);
inline jule::Bool _1aca419b6_Exist(_1a7b4c786_ReferenceStack* _self_, jule::Ptr<_1a799a97a_StructIns> _5320_t);
inline jule::Bool _1accb3540_Exist(_1a7b4c786_ReferenceStack* _self_, jule::Ptr<_1a7a73b41_FnIns> _5320_t);
inline jule::Bool _1ac650b58_Exist(_1a7b4c786_ReferenceStack* _self_, jule::Ptr<_1a7ba4eb4_Var> _5320_t);
inline jule::Bool _1ad0937ba_Exist(_1a7b4c786_ReferenceStack* _self_, jule::Ptr<_1a7a7b297_Trait> _5320_t);
inline void _1a7b54293_pushErr(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a79633b0_Token>* _30824_token, jule::Str _30846_fmt, jule::Slice<jule::Any> _30866_args);
inline void _1a7b54a24_pushSuggestion(_1a7b5378c_symBuilder* _self_, jule::Str _31730_fmt, jule::Slice<jule::Any> _31750_args);
inline jule::Bool _1a7b54e20_checkCppUseDeclPath(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a7991cd4_UseDecl>* _32136_decl, jule::Str* _32158_path);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b5522d_buildCppHeaderImport(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a7991cd4_UseDecl>* _34141_decl);
inline jule::Str _1a7b55629_checkAbsPath(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Str _37133_filepath, jule::Ptr<_1a7991cd4_UseDecl>* _37153_decl);
inline jule::Str _1a7b55a25_checkStdAbsPath(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Str _40036_filepath, jule::Ptr<_1a7991cd4_UseDecl>* _40056_decl);
inline __jule_tuple_bool__jule_tuple_str _1a7b55d66_checkImpPath(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7991cd4_UseDecl>* _42334_decl);
inline void _1a7b5611e_assignAlias(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _45333_imp);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b56460_buildImport(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7991cd4_UseDecl>* _46033_decl);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b567a1_findUseDecl(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _48728_pkg);
inline jule::Bool _1a7b56ae2_checkDuplicateUseDecl(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _49542_pkg);
inline jule::Str _1a7b56e33_getAsLinkPath(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Str _50534_path);
inline void _1a7b57351_pushCycleError(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7b5378c_symBuilder>* _52632_sb, jule::Str _52649_path, _1bc0a106b_Builder* _52665_message);
inline void _1a7b5776e_pushCrossCycleError(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7b5378c_symBuilder>* _53937_target, jule::Ptr<_1a7b5e80e_ImportInfo>* _53959_imp, jule::Ptr<_1a79633b0_Token>* _53978_errorToken);
inline jule::Bool _1a7b57b6a_checkImportCycles(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7b5e80e_ImportInfo> _56234_imp, jule::Ptr<_1a7991cd4_UseDecl>* _56253_decl);
inline void _1a7b58088_checkPackageAccessibility(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a7991cd4_UseDecl>* _59342_decl, jule::Str* _59364_mod, jule::Str* _59375_path);
inline jule::Bool _1a7b58484_importPackage(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _62335_imp, jule::Ptr<_1a7991cd4_UseDecl>* _62358_decl);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b587c5_importUseDecl(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7991cd4_UseDecl>* _66935_decl);
inline void _1a7b589c3_importUseDecls(jule::Ptr<_1a7b5378c_symBuilder> _self_);
inline void _1a7b58c7b_appendNode(_1a7b5378c_symBuilder* _self_, _1a7977ca9_Node* _69831_node);
inline void _1a7b58e79_appendNodes(_1a7b5378c_symBuilder* _self_);
inline void _1a7b59232_pushDirectivePass(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a79781c7_Directive>* _73438_d);
inline void _1a7b59430_appendTopDirectives(_1a7b5378c_symBuilder* _self_);
inline void _1a7b5962d_build(jule::Ptr<_1a7b5378c_symBuilder> _self_);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b5ed2b_SelectPackage(_1a7b5e80e_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> );
inline jule::Ptr<_1a7ba4eb4_Var> _1a7b60227_FindVar(_1a7b5e80e_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_1a7c31848_TypeAlias> _1a7b60623_FindTypeAlias(_1a7b5e80e_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_1a7997adc_Struct> _1a7b60a1e_FindStruct(_1a7b5e80e_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_1a7a70a83_Fn> _1a7b60e1a_FindFn(_1a7b5e80e_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_1a7a7b297_Trait> _1a7b6125b_FindTrait(_1a7b5e80e_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_1a7a7d94d_Enum> _1a7b6159c_FindEnum(_1a7b5e80e_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_1a7a80158_TypeEnum> _1a7b618dd_FindTypeEnum(_1a7b5e80e_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _1a7b61ca6_isLookupable(_1a7b5e80e_ImportInfo* _self_);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b62559_SelectPackage(_1a7b62081_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> );
inline jule::Ptr<_1a7ba4eb4_Var> _1a7b62955_FindVar(_1a7b62081_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded);
inline jule::Ptr<_1a7c31848_TypeAlias> _1a7b62d51_FindTypeAlias(_1a7b62081_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded);
inline jule::Ptr<_1a7997adc_Struct> _1a7b6324c_FindStruct(_1a7b62081_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded);
inline jule::Ptr<_1a7a70a83_Fn> _1a7b63648_FindFn(_1a7b62081_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded);
inline jule::Ptr<_1a7a7b297_Trait> _1a7b63989_FindTrait(_1a7b62081_Package* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1a7a7d94d_Enum> _1a7b63cca_FindEnum(_1a7b62081_Package* _self_, jule::Str _31724_ident);
inline jule::Ptr<_1a7a80158_TypeEnum> _1a7b6411b_FindTypeEnum(_1a7b62081_Package* _self_, jule::Str _32328_ident);
inline jule::Ptr<_1a7b10d65_comptimeTypeInfo> _1a7b7b4c9_pushComptimeTypeInfo(_1a7b7b034_commonSemaMeta* _self_, jule::Ptr<_1a7c3255d_Type>* _21141_t);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b7c596_SelectPackage(_1a7b7c0bd_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> _24829_selector);
inline jule::Ptr<_1a7ba4eb4_Var> _1a7b7c992_FindVar(_1a7b7c0bd_sema* _self_, jule::Str _25823_ident, jule::Bool _25835_binded);
inline jule::Ptr<_1a7c31848_TypeAlias> _1a7b7cd8d_FindTypeAlias(_1a7b7c0bd_sema* _self_, jule::Str _27329_ident, jule::Bool _27341_binded);
inline jule::Ptr<_1a7997adc_Struct> _1a7b7d289_FindStruct(_1a7b7c0bd_sema* _self_, jule::Str _28826_ident, jule::Bool _28838_binded);
inline jule::Ptr<_1a7a70a83_Fn> _1a7b7d685_FindFn(_1a7b7c0bd_sema* _self_, jule::Str _30322_ident, jule::Bool _30334_binded);
inline jule::Ptr<_1a7a7b297_Trait> _1a7b7d9c6_FindTrait(_1a7b7c0bd_sema* _self_, jule::Str _31825_ident);
inline jule::Ptr<_1a7a7d94d_Enum> _1a7b7dd17_FindEnum(_1a7b7c0bd_sema* _self_, jule::Str _33324_ident);
inline jule::Ptr<_1a7a80158_TypeEnum> _1a7b7e158_FindTypeEnum(_1a7b7c0bd_sema* _self_, jule::Str _34828_ident);
inline jule::Bool _1a7b7e565_isFlag(_1a7b7c0bd_sema* _self_, jule::I32 _36018_flags);
inline jule::Ptr<_1a7a76d86_SymTab> _1a7b7e7eb_getCurrentFile(_1a7b7c0bd_sema* _self_);
inline void _1a7b7eaa4_setCurrentFile(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a76d86_SymTab> _36334_f);
inline void _1a7b7eec2_pushErr(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a79633b0_Token> _36523_token, jule::Str _36545_fmt, jule::Slice<jule::Any> _36565_args);
inline void _1a7b80335_pushSuggestion(_1a7b7c0bd_sema* _self_, jule::Str _37030_fmt, jule::Slice<jule::Any> _37050_args);
inline jule::Bool _1a7b80731_isAccessibleDefine(_1a7b7c0bd_sema* _self_, jule::Bool _37630_public, jule::Ptr<_1a79633b0_Token> _37644_token);
inline jule::Bool _1a7b85a44_isDuplicatedIdent(_1a7b7c0bd_sema* _self_, jule::Uintptr _39929_itself, jule::Str* _39947_ident, jule::Bool _39959_binded);
inline void _1a7b85da7_checkDirectives(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Slice<jule::Ptr<_1a79781c7_Directive>>* _40837_d, jule::Any _40863_o);
inline jule::Bool _1a7b8635d_checkGenericQuantity(_1a7b7c0bd_sema* _self_, jule::I32 _41736_required, jule::I32 _41751_given, jule::Ptr<_1a79633b0_Token> _41763_token);
inline jule::Bool _1a7b87392_isUseAliasDuplication(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _47538_imp);
inline jule::Bool _1a7b876d3_checkAutoAlias(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _48735_imp);
inline jule::Bool _1a7b87a24_checkImport(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _50532_imp);
inline void _1a7b87c22_checkImports(_1a7b7c0bd_sema* _self_);
inline void _1a7b87e20_implFileImpls(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1a7b8811d_implImpls(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1a7b8831b_checkEnums(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1a7b88519_checkFileInherits(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1a7b88717_checkInherits(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline _1a7c4564d_typeChecker _1a7b88bbd_typeChecker(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Trait _59832_l, jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _59847_generics, jule::Ptr<_1a7c4465d_referencer> _5997_referencer);
inline jule::Ptr<_1a7c3255d_Type> _1a7b8922e_buildTypeWithRefers(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7978caa_TypeDecl>* _62541_t, jule::Trait _62564_l, jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _6267_generics, jule::Ptr<_1a7c4465d_referencer> _62635_referencer);
inline jule::Bool _1a7b89790_checkTypeSymWithRefers(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3a962_TypeSym>* _63244_t, jule::Trait _63261_l, jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _6337_generics, jule::Ptr<_1a7c4465d_referencer> _63335_referencer);
inline jule::Ptr<_1a7b26e47_constraintChecker> _1a7b89a26_constraintChecker(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline jule::Bool _1a7b89e22_checkTypeSym(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3a962_TypeSym>* _64734_t, jule::Trait _64751_l);
inline jule::Ptr<_1a7c3255d_Type> _1a7b8a3c8_checkTypeSymRefers(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7978caa_TypeDecl>* _65240_t, jule::Trait _65263_l, jule::Ptr<_1a7b4c786_ReferenceStack> _65278_refers);
inline jule::Ptr<_1a7c3255d_Type> _1a7b8a87e_buildTypeWithGenerics(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7978caa_TypeDecl>* _66443_t, jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _6657_generics, jule::Ptr<_1a7b4c786_ReferenceStack> _66535_refers);
inline jule::Ptr<_1a7c3255d_Type> _1a7b8b011_selectType(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7978caa_TypeDecl>* _68232_t);
inline jule::Ptr<_1a7c0086c_eval> _1a7b8b4b7_evalpd(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Trait _69427_l, jule::Ptr<_1a7c3255d_Type> _69442_p, jule::Ptr<_1a7ba4eb4_Var> _69456_owner);
inline jule::Ptr<_1a7c0086c_eval> _1a7b8b8b3_evalp(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Trait _70926_l, jule::Ptr<_1a7c3255d_Type> _70941_p);
inline jule::Ptr<_1a7c0086c_eval> _1a7b8bc04_eval(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Trait _71425_l);
inline jule::Bool _1a7b8c320_checkAssignType(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Bool _71932_destIsRef, jule::Ptr<_1a7c3255d_Type>* _71954_dest, jule::Ptr<_1a7bed89d_Data>* _7208_d, jule::Ptr<_1a79633b0_Token> _72022_errorToken, jule::Ptr<_1a7b4c786_ReferenceStack> _72053_refers);
inline jule::Bool _1a7b8c7c6__checkTypeCompatibility(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3255d_Type>* _76245_dest, jule::Ptr<_1a7c3255d_Type>* _76263_src, jule::Ptr<_1a79633b0_Token> _7637_errorToken);
inline jule::Bool _1a7b8cc7c_checkTypeCompatibility(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3255d_Type>* _78044_dest, jule::Ptr<_1a7c3255d_Type>* _7818_src, jule::Ptr<_1a79633b0_Token>* _78125_errorToken);
inline void _1a7b8d19a_pushCompatiblityError(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7c3255d_Type>* _78942_dest, jule::Ptr<_1a7bed89d_Data>* _78960_src, jule::Ptr<_1a79633b0_Token>* _7908_errorToken);
inline jule::Bool _1a7b8d651_checkTypeCompatibility1(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3255d_Type>* _80745_dest, jule::Ptr<_1a7bed89d_Data>* _80763_src, jule::Ptr<_1a79633b0_Token>* _8088_errorToken);
inline jule::Ptr<_1a7c3255d_Type> _1a7b8db07_buildNonGenericType(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7978caa_TypeDecl>* _82241_ast, jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>* _8238_generics, jule::Slice<jule::Ptr<_1a7c3255d_Type>>* _82344_ignored);
inline jule::Bool _1a7b8e003_buildFnNonGenericTypes(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns> _83443_f, jule::Slice<jule::Ptr<_1a7c3255d_Type>>* _83459_ignored);
inline jule::Ptr<_1a7a73b41_FnIns> _1a7b8e344_getTraitCheckFnKind(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _85741_f);
inline jule::Bool _1a7b8e7ea_checkConstraintsFn(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns>* _88640_f, jule::Ptr<_1a79633b0_Token>* _88656_et, jule::Ptr<_1a7a73b41_FnIns> _88679_exist);
inline jule::Bool _1a7b8eca1_checkConstraintsStruct(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a799a97a_StructIns>* _90044_s, jule::Ptr<_1a79633b0_Token>* _90064_et, jule::Ptr<_1a799a97a_StructIns> _90087_exist);
inline jule::Bool _1a7b9019c_basicFnEnvironment(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns>* _91740_f, jule::Fn<jule::Bool,jule::Ptr<_1a7b7c0bd_sema>*> _91751_algo);
inline jule::Bool _1a7b90598_fnEnvironment(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns>* _93735_f, jule::Fn<jule::Bool,jule::Ptr<_1a7b7c0bd_sema>*,jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>*> _93746_algo);
inline void _1a7b90851_checkFnParamKind(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a729db_ParamIns>* _94938_p);
inline jule::Bool _1a7b90b92_reloadFnInsTypes(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns> _95337_f);
inline jule::Bool _1a7b91148_checkRefValidityForInitExpr(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Bool _99344_leftMut, jule::Ptr<_1a7bed89d_Data>* _99364_d, jule::Ptr<_1a79633b0_Token>* _99379_errorToken);
inline jule::Bool _1a7b91489_isMutRiskyStruct(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a799a97a_StructIns>* _101029_s);
inline jule::Bool _1a7b91aa5_checkValidityForInitExpr(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Bool _103741_leftMut, jule::Bool _103756_leftRef, jule::Ptr<_1a7c3255d_Type>* _10384_leftKind, jule::Ptr<_1a7bed89d_Data>* _103826_d, jule::Ptr<_1a79633b0_Token>* _103841_errorToken);
inline jule::Bool _1a7b91ea1_checkTypeAliasDeclKind(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c31848_TypeAlias>* _106544_ta, jule::Trait _106564_l);
inline jule::Bool _1a7b9239c_checkTypeAliasDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c31848_TypeAlias>* _108840_ta, jule::Trait _108860_l);
inline void _1a7b92655_checkTypeAliasDeclDup(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c31848_TypeAlias>* _111943_ta);
inline jule::Bool _1a7b928db_checkTypeAliasDecls(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1ac274a9b_checkEnumItemsDup(_1a7b7c0bd_sema* _self_, jule::Slice<jule::Ptr<_1a7a7cde2_EnumItem>> _114036_items);
inline void _1ac28279b_checkEnumItemsDup(_1a7b7c0bd_sema* _self_, jule::Slice<jule::Ptr<_1a7a7ea81_TypeEnumItem>> _114036_items);
inline void _1a7b92e4c_checkEnumItemsStr(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7d94d_Enum>* _116039_e);
inline void _1ac832d5c_checkEnumItemInt(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c0086c_eval>* _118743_eval, jule::Ptr<_1a7a7d94d_Enum>* _118761_e, jule::Ptr<_1a7c3b369_Prim>* _118772_prim, jule::Ptr<_1a7a7cde2_EnumItem>* _118790_item, jule::U64* _1187112_n);
inline void _1abe0b689_checkEnumItemInt(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c0086c_eval>* _118743_eval, jule::Ptr<_1a7a7d94d_Enum>* _118761_e, jule::Ptr<_1a7c3b369_Prim>* _118772_prim, jule::Ptr<_1a7a7cde2_EnumItem>* _118790_item, jule::I64* _1187112_n);
inline void _1ac82e199_checkEnumItemsInt1(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3b369_Prim>* _122341_prim, jule::Ptr<_1a7a7d94d_Enum>* _122359_e);
inline void _1ac82e474_checkEnumItemsInt1(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3b369_Prim>* _122341_prim, jule::Ptr<_1a7a7d94d_Enum>* _122359_e);
inline void _1a7b93aeb_checkEnumItemsInt(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7d94d_Enum>* _125839_e);
inline void _1a7b93da4_checkEnumDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7d94d_Enum>* _126835_e);
inline void _1a7b9415c_checkTypeEnumDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a80158_TypeEnum>* _130939_e);
inline jule::Bool _1a7b943e3_checkEnumDecls(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline jule::Bool _1a7b94679_checkTypeEnumDecls(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline jule::Bool _1a7b949ba_checkDeclGenerics(_1a7b7c0bd_sema* _self_, jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>* _137234_generics);
inline jule::Bool _1a7b94d0b_checkFnDeclParamsDup(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a70a83_Fn>* _139937_f);
inline jule::Bool _1a7b9514c_checkFnDeclResultDup(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a70a83_Fn>* _143641_f);
inline jule::Bool _1a7b9548d_checkFnVariadicParam(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _148142_f);
inline void _1a7b95746_checkFnDeclPrototype(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _149442_f);
inline jule::Bool _1a7b95bec_catchTraitInheritCycle(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7b297_Trait> _151639_t1, jule::Ptr<_1a7a7b297_Trait> _151655_t2, _1bc0a106b_Builder* _151672_message);
inline jule::Bool _1a7b9603d__checkTraitDeclInherits(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7b297_Trait>* _153545_t);
inline void _1a7b962e6_checkTraitDeclInherits(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7b297_Trait>* _157644_t);
inline void _1a7b9659e_checkTraitDeclMethod(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _160142_f);
inline void _1a7b96857_checkTraitDeclMethods(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7b297_Trait>* _161543_t);
inline void _1a7b96b10_checkTraitDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7b297_Trait>* _165136_t);
inline jule::Bool _1a7b96d96_checkTraitDecls(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline jule::Bool _1a7b97292_checkTraitImplMethods(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a7b297_Trait>* _167542_base, jule::Ptr<_1a7b29246_Impl>* _167557_ipl);
inline jule::Bool _1a7b9768d_implToStruct(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7997adc_Struct>* _168634_dest, jule::Ptr<_1a7b29246_Impl>* _168654_ipl);
inline void _1a7b97946_implTrait(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7b29246_Impl>* _173931_decl);
inline void _1a7b97bee_implStruct(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7b29246_Impl>* _178232_decl);
inline void _1a7b97ea7_implImpl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7b29246_Impl>* _180630_decl);
inline void _1a7b9831a_checkVarDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7ba4eb4_Var>* _181734_decl, jule::Trait _181750_l);
inline void _1a7b985c3_checkGlobalVarDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7ba4eb4_Var>* _186340_decl);
inline jule::Bool _1a7b98859_checkGlobalDecls(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline jule::Bool _1a7b98c55_checkStructTraitImpl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7997adc_Struct>* _189142_strct, jule::Ptr<_1a7a7b297_Trait>* _189163_trt);
inline jule::Bool _1a7b99096_checkStructImpls(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7997adc_Struct>* _191738_s);
inline jule::Bool _1a7b993d7_checkStructFields(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7997adc_Struct>* _192539_st);
inline void _1a7b99690_checkStructDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7997adc_Struct>* _194237_s);
inline jule::Bool _1a7b99926_checkStructDecls(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1a7b99bce_checkAnonFuncDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _198639_f);
inline void _1a7b99e87_checkFuncDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _199135_f);
inline jule::Bool _1a7b9a2c8_checkFuncDeclsBy(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Slice<jule::Ptr<_1a7a70a83_Fn>>* _201338_funcs);
inline jule::Bool _1a7b9a55e_checkFuncDecls(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1a7b9a97c_pushCycleError(_1a7b7c0bd_sema* _self_, jule::Str* _202927_st1, jule::Str* _202938_st2, _1bc0a106b_Builder* _202953_message);
inline void _1a7b9b131_checkPackageDecls(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1a7b9b494_checkDataForTypeInference(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7bed89d_Data>* _208942_d, jule::Ptr<_1a79633b0_Token>* _208953_errToken);
inline void _1a7b9b74c_checkVarValue(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7ba4eb4_Var>* _210135_v);
inline void _1a7b9bab0_evalVarValue(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7ba4eb4_Var>* _215034_decl, jule::Trait _215050_l);
inline void _1a7b9be23_checkVar(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7ba4eb4_Var>* _216730_decl, jule::Trait _216746_l);
inline void _1a7b9c121_checkGlobals(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline jule::Ptr<_1a7a73b41_FnIns> _1a7b9c51c_readyToCheckFn(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a799a97a_StructIns>* _219036_s, jule::Ptr<_1a7a70a83_Fn>* _219056_f);
inline __jule_tuple_bool__jule_tuple_bool _1a7b9c918_checkGenericFn(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns>* _220636_f, jule::Ptr<_1a79633b0_Token>* _220652_et);
inline void _1a7b9cc7b_checkTypeMethod(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a799a97a_StructIns>* _222937_s, jule::Ptr<_1a7a70a83_Fn>* _222957_f);
inline jule::Bool _1a7b9d177_checkStructEnv(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a799a97a_StructIns>* _224536_s, jule::Ptr<_1a79633b0_Token> _224555_errorToken);
inline jule::Bool _1a7b9d573_precheckStructIns(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a799a97a_StructIns>* _234339_s, jule::Ptr<_1a79633b0_Token> _234358_errorToken);
inline void _1a7b9d82b_checkStructIns(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a799a97a_StructIns>* _238036_s);
inline void _1a7b9dad4_checkTypeStruct(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7997adc_Struct>* _238637_s);
inline void _1a7b9dcd2_checkStructTypes(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1a7b9e08a_checkRets(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a73b41_FnIns>* _241730_f);
inline void _1a7b9e3ed_checkFnInsSc(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a73b41_FnIns>* _242833_f, jule::Ptr<_1a7b34938_scopeChecker>* _242849_sc);
inline void _1a7b9e761_checkFnInsCaller(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns>* _244138_f, jule::Ptr<_1a79633b0_Token> _244153_caller);
inline void _1a7b9ea19_checkFnIns(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns>* _246332_f);
inline void _1a7b9ecc2_checkFunc(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _246731_f);
inline void _1a7ba007a_checkTestFn(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a73b41_FnIns>* _248232_f);
inline void _1a7ba0333_precheckFunc(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _251834_f);
inline void _1a7ba0531_precheckFuncs(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1a7ba072e_checkFuncs(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1a7ba092c_checkPackageTypes(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1a7ba0b2a_setFileSemaFields(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1a7ba0d28_setSemaFields(jule::Ptr<_1a7b7c0bd_sema> _self_);
inline void _1a7ba10d1_check(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _260927_files);
inline _1a7ba14cc_missingRetChecker static__1a7ba18c8_new(void);
inline jule::Bool _1a7ba1bd6_checkConditional(_1a7ba14cc_missingRetChecker* _self_, jule::Ptr<_1a7b2cd2c_Conditional> _266032_c);
inline jule::Bool _1a7ba2027_checkMatch(_1a7ba14cc_missingRetChecker* _self_, jule::Ptr<_1a7b31c32_Match> _267226_m);
inline jule::Bool _1a7ba2423_checkInfIter(_1a7ba14cc_missingRetChecker* _self_, jule::Uintptr _269824_it, jule::Ptr<_1a7b2c238_Scope>* _269842_s);
inline jule::Bool _1a7ba2764_checkScope(_1a7ba14cc_missingRetChecker* _self_, jule::Ptr<_1a7b2c238_Scope> _271626_s);
inline jule::Bool _1a7ba2aa5_check(_1a7ba14cc_missingRetChecker* _self_, jule::Ptr<_1a7b2c238_Scope> _277121_s);
inline jule::Bool _1a7ba53c1_IsInitialized(_1a7ba4eb4_Var* _self_);
inline jule::Bool _1a7ba5657_IsTypeInferred(_1a7ba4eb4_Var* _self_);
inline jule::Bool _1a7ba58dd_untypedConstant(_1a7ba4eb4_Var* _self_);
inline jule::Bool static__1a7ba623a_Str(jule::Ptr<_1a7a70a83_Fn> _1016_f);
inline void _1a7bd9e2d_pushErr(_1a7bd9900_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args);
inline jule::Bool _1a7bda1b4_checkTrait(_1a7bd9900_typeCompatibilityChecker* _self_);
inline jule::Bool _1a7bda44a_checkPtr(_1a7bd9900_typeCompatibilityChecker* _self_);
inline jule::Bool _1a7bda6d1_checkPrim(_1a7bd9900_typeCompatibilityChecker* _self_);
inline jule::Bool _1a7bdaacc_typeEnum(_1a7bd9900_typeCompatibilityChecker* _self_, jule::Ptr<_1a7a80158_TypeEnum>* _18725_e, jule::Ptr<_1a7c3255d_Type>* _18744_t2);
inline jule::Bool _1a7bdad63_checkTypeEnum(_1a7bd9900_typeCompatibilityChecker* _self_);
inline jule::Bool _1a7bdb0e9_check(_1a7bd9900_typeCompatibilityChecker* _self_);
inline void _1a7bdbc43_pushErr(_1a7bdb77b_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25543_args);
inline jule::Bool _1a7bdbec9_checkValidity(_1a7bdb77b_assignTypeChecker* _self_);
inline jule::Bool _1a7bdc260_checkConst(_1a7bdb77b_assignTypeChecker* _self_);
inline jule::Bool _1a7bdc4e6_checkCompatibility(_1a7bdb77b_assignTypeChecker* _self_);
inline jule::Bool _1a7bdc77c_check(_1a7bdb77b_assignTypeChecker* _self_);
inline jule::Bool _1ac60b22e_annotateConstraintElem(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _37146_k);
inline jule::Bool _1ac60e375_annotateConstraintElem(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _37146_k);
inline jule::Bool _1ac60b5e7_annotateConstraintElem(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _37146_k);
inline jule::Bool _1aca14e51_annotateConstraintElem(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _37146_k);
inline jule::Bool _1a7bdda7a_annotateConstraintMap(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _39142_k);
inline jule::Bool _1a7bdddbb_annotateConstraintTup(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _40642_k);
inline jule::Bool _1a7bde20c_annotateConstraintFn(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _42341_k);
inline jule::Bool _1a7bde54d_annotateConstraintIdent(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _44444_k);
inline jule::Bool _1a7bde88e_annotateConstraint(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _47339_k);
inline void _1a7bdec02_pushGeneric(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _49832_k, jule::I32 _49842_i);
inline jule::Bool _1a7be0043_annotatePrim(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _51340_k);
inline jule::Bool _1a7be0384_annotateArr(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _51739_k);
inline jule::Bool _1a7be06c5_annotateSlc(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _52739_k);
inline jule::Bool _1a7be0ac1_checkMapKey(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _53738_k, jule::Ptr<_1a7c3255d_Type>* _53754_ck);
inline jule::Bool _1a7be0e12_annotateMap(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _54539_k);
inline jule::Bool _1a7be1253_annotateFn(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _55538_k);
inline jule::Bool _1a7be1594_annotatePtr(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _58439_k);
inline jule::Bool _1a7be18d5_annotateSptr(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _59440_k);
inline jule::Bool _1a7be1c26_annotateStruct(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _60442_k);
inline jule::Bool _1a7be2067_annotateAny(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _62639_k);
inline jule::Bool _1a7be23a8_annotateKind(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _64740_k);
inline jule::Bool _1a7be263e_annotate(_1a7bdd151_dynamicTypeAnnotation* _self_);
inline void _1a7be3552_pushErrToken(_1a7be2ead_fnCallArgChecker* _self_, jule::Ptr<_1a79633b0_Token> _69228_token, jule::Str _69250_fmt, jule::Slice<jule::Any> _69270_args);
inline void _1a7be38b5_pushErr(_1a7be2ead_fnCallArgChecker* _self_, jule::Str _69623_fmt, jule::Slice<jule::Any> _69643_args);
inline jule::Slice<jule::Ptr<_1a7a729db_ParamIns>> _1a7be3b4b_getParams(_1a7be2ead_fnCallArgChecker* _self_);
inline jule::Bool _1a7be3e8c_checkCounts(_1a7be2ead_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>* _70928_params);
inline jule::Bool _1a7be4443_checkArg(_1a7be2ead_fnCallArgChecker* _self_, jule::Ptr<_1a7a729db_ParamIns>* _74129_p, jule::Ptr<_1a7bed89d_Data>* _74148_arg, jule::Ptr<_1a79633b0_Token>* _74165_errorToken);
inline jule::Bool _1a7be483e_push(_1a7be2ead_fnCallArgChecker* _self_, jule::Ptr<_1a7a729db_ParamIns>* _77025_p, jule::Ptr<_1a797d0de_Expr> _77043_arg);
inline jule::Bool _1a7be4c3a_pushVariadic(_1a7be2ead_fnCallArgChecker* _self_, jule::Ptr<_1a7a729db_ParamIns>* _79433_p, jule::I32 _79451_i);
inline jule::Bool _1a7be507b_checkArgs(_1a7be2ead_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>* _87930_params);
inline jule::Bool _1a7be5312_checkDynamicTypeAnnotation(_1a7be2ead_fnCallArgChecker* _self_);
inline jule::Bool _1a7be5598_check(_1a7be2ead_fnCallArgChecker* _self_);
inline void _1a7be6478_pushErr(_1a7be5de5_structLitChecker* _self_, jule::Ptr<_1a79633b0_Token> _95923_token, jule::Str _95945_fmt, jule::Slice<jule::Any> _95965_args);
inline void _1a7be67db_pushSuggestion(_1a7be5de5_structLitChecker* _self_, jule::Str _96430_fmt, jule::Slice<jule::Any> _96450_args);
inline void _1a7be6c09_pushMatch(_1a7be5de5_structLitChecker* _self_, jule::Ptr<_1a7999d53_FieldIns>* _96830_f, jule::Ptr<_1a7bed89d_Data>* _96849_d, jule::Ptr<_1a79633b0_Token>* _96864_errorToken);
inline void _1a7be706c_checkPair(_1a7be5de5_structLitChecker* _self_, jule::Ptr<_1a798280d_FieldExprPair>* _98730_pair, jule::Slice<jule::Ptr<_1a797d0de_Expr>>* _98762_exprs);
inline jule::Bool _1a7be73ad_readyExprs(_1a7be5de5_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a797d0de_Expr>>* _102631_exprs);
inline void _1a7be7666_check(_1a7be5de5_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a797d0de_Expr>>* _105026_exprs);
inline jule::Ptr<_1a7ba4eb4_Var> _1a7be81e4_buildVar(_1a7be7bc7_rangeChecker* _self_, jule::Ptr<_1a798bc02_VarDecl>* _112625_decl);
inline void _1a7be83e2_setSizeKey(_1a7be7bc7_rangeChecker* _self_);
inline void _1a7be8810_checkRangeExprValidity(_1a7be7bc7_rangeChecker* _self_, jule::Ptr<_1a7bed89d_Data>* _114543_d, jule::Ptr<_1a7ba4eb4_Var>* _114554_key, jule::Ptr<_1a7c3255d_Type>* _114570_k);
inline void _1a7be8a0d_checkSlice(_1a7be7bc7_rangeChecker* _self_);
inline void _1a7be8c0b_checkArray(_1a7be7bc7_rangeChecker* _self_);
inline void _1a7be8e09_checkMapKeyA(_1a7be7bc7_rangeChecker* _self_);
inline void _1a7be9107_checkMapKeyB(_1a7be7bc7_rangeChecker* _self_);
inline void _1a7be9305_checkMap(_1a7be7bc7_rangeChecker* _self_);
inline void _1a7be9503_checkStr(_1a7be7bc7_rangeChecker* _self_);
inline void _1a7be9701_checkComptime(_1a7be7bc7_rangeChecker* _self_);
inline jule::Bool _1a7be9987_checkComptimeRange(_1a7be7bc7_rangeChecker* _self_);
inline jule::Bool _1a7be9c1d_check(_1a7be7bc7_rangeChecker* _self_);
inline void _1a7bea9dd_prepareTypes(_1a7bea5e2_retTypeChecker* _self_);
inline jule::Bool _1a7bead2e_prepareExprs(_1a7bea5e2_retTypeChecker* _self_, jule::Ptr<_1a797d0de_Expr>* _130633_e);
inline void _1a7beb02c_checkExprs(_1a7bea5e2_retTypeChecker* _self_);
inline void _1a7beb22a_tryFuncMultiRetForward(_1a7bea5e2_retTypeChecker* _self_);
inline void _1a7beb428_notFitVariables(_1a7bea5e2_retTypeChecker* _self_);
inline jule::Bool _1a7beb769_check(_1a7bea5e2_retTypeChecker* _self_, jule::Ptr<_1a797d0de_Expr>* _140126_e);
inline jule::Bool _1a7bedcbb_IsNil(_1a7bed89d_Data* _self_);
inline jule::Bool _1a7bee052_IsVoid(_1a7bed89d_Data* _self_);
inline jule::Bool _1a7bee2d8_IsConst(_1a7bed89d_Data* _self_);
inline jule::Bool _1a7bee629_GoodOperand(_1a7bed89d_Data* _self_, jule::Ptr<_1a7bed89d_Data>* _6228_other);
inline void _1a7c00d45_pushErr(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args);
inline void _1a7c011a8_pushSuggestion(_1a7c0086c_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args);
inline void _1a7c013a6_allowBuiltin(_1a7c0086c_eval* _self_);
inline void _1a7c015a4_disallowBuiltin(_1a7c0086c_eval* _self_);
inline jule::Bool _1a7c0183a_isUnsafe(_1a7c0086c_eval* _self_);
inline jule::Bool _1a7c01ac1_isGlobal(_1a7c0086c_eval* _self_);
inline jule::Bool _1a7c01e12_applyNumericPrefix(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _12939_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7c02253_litStr(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e079_LitExpr>* _16419_l);
inline jule::Ptr<_1a7bed89d_Data> _1a7c02594_litRune(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e079_LitExpr>* _18220_l);
inline jule::Ptr<_1a7bed89d_Data> _1a7c028d5_litFloat(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e079_LitExpr>* _20121_l);
inline jule::Ptr<_1a7bed89d_Data> _1a7c02c26_litInt(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e079_LitExpr>* _21323_l);
inline jule::Ptr<_1a7bed89d_Data> _1a7c03067_litNum(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e079_LitExpr>* _26823_l);
inline jule::Ptr<_1a7bed89d_Data> _1a7c033a8_evalLit(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e079_LitExpr> _27723_lit);
inline jule::Any _1a7c036e9_findBuiltins(_1a7c0086c_eval* _self_, jule::Str* _29029_ident);
inline jule::Any _1a7c03ae5_getDef(_1a7c0086c_eval* _self_, jule::Str* _31723_ident, jule::Bool _31735_binded);
inline jule::Ptr<_1a7b4c786_ReferenceStack> _1a7c03d7b_getOwnerRefers(_1a7c0086c_eval* _self_);
inline void _1aca3e7e9_pushReference(_1a7c0086c_eval* _self_, jule::Ptr<_1a799a97a_StructIns>* _37537_ref);
inline void _1aca4a816_pushReference(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a73b41_FnIns>* _37537_ref);
inline void _1ac64d848_pushReference(_1a7c0086c_eval* _self_, jule::Ptr<_1a7ba4eb4_Var>* _37537_ref);
inline jule::Ptr<_1a7bed89d_Data> _1a7c04475__evalEnum(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a7d94d_Enum> _38225_enm);
inline jule::Ptr<_1a7bed89d_Data> _1a7c04871_evalEnum(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a7d94d_Enum> _39128_enm, jule::Ptr<_1a79633b0_Token> _39140_errorToken);
inline jule::Ptr<_1a7bed89d_Data> _1a7c04bb2__evalTypeEnum(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a80158_TypeEnum> _40029_enm);
inline jule::Ptr<_1a7bed89d_Data> _1a7c050ad_evalTypeEnum(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a80158_TypeEnum> _40932_enm, jule::Ptr<_1a79633b0_Token> _40948_errorToken);
inline jule::Ptr<_1a7bed89d_Data> _1a7c053ee__evalStruct(_1a7c0086c_eval* _self_, jule::Ptr<_1a799a97a_StructIns> _41827_s);
inline jule::Ptr<_1a7bed89d_Data> _1a7c057ea_evalStruct(_1a7c0086c_eval* _self_, jule::Ptr<_1a7997adc_Struct> _42930_s, jule::Ptr<_1a79633b0_Token> _42946_errorToken);
inline jule::Ptr<_1a7bed89d_Data> _1a7c05b3b_evalFnIns(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a73b41_FnIns> _45925_f);
inline void _1a7c05e9e_checkDeprecated(_1a7c0086c_eval* _self_, jule::Slice<jule::Ptr<_1a79781c7_Directive>>* _46836_directives, jule::Ptr<_1a79633b0_Token> _46867_tok);
inline jule::Ptr<_1a7bed89d_Data> _1a7c0639a_evalFn(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a70a83_Fn> _48426_f, jule::Ptr<_1a79633b0_Token> _48434_errorToken);
inline void _1a7c067b8_pushIllegalCycleError(_1a7c0086c_eval* _self_, jule::Ptr<_1a7ba4eb4_Var>* _50938_v1, jule::Ptr<_1a7ba4eb4_Var>* _50949_v2, _1bc0a106b_Builder* _50964_message);
inline jule::Bool _1a7c06bb4_checkCrossCycle(_1a7c0086c_eval* _self_, jule::Ptr<_1a7ba4eb4_Var>* _51932_v, _1bc0a106b_Builder* _51946_message);
inline jule::Bool _1a7c070b0_checkIllegalCycles(_1a7c0086c_eval* _self_, jule::Ptr<_1a7ba4eb4_Var>* _53639_v, jule::Ptr<_1a79633b0_Token> _53648_declToken);
inline jule::Ptr<_1a7bed89d_Data> _1a7c074ab_evalVar(_1a7c0086c_eval* _self_, jule::Ptr<_1a7ba4eb4_Var> _56427_v, jule::Ptr<_1a79633b0_Token> _56436_errorToken);
inline jule::Ptr<_1a7bed89d_Data> _1a7c078a7_evalTypeAlias(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c31848_TypeAlias> _66433_ta, jule::Ptr<_1a79633b0_Token> _66449_errorToken);
inline jule::Ptr<_1a7bed89d_Data> _1a7c07ca3_evalDef(_1a7c0086c_eval* _self_, jule::Any* _71728_def, jule::Ptr<_1a79633b0_Token> _71742_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c080e4_evalIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e909_IdentExpr> _74129_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c08435_evalUnary(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a798019b_UnaryExpr> _74630_u);
inline jule::Ptr<_1a7bed89d_Data> _1a7c08776_evalVariadic(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7980575_VariadicExpr> _75133_v);
inline jule::Ptr<_1a7bed89d_Data> _1a7c08ab7_evalUnsafe(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797e453_UnsafeExpr> _77331_u);
inline jule::Ptr<_1a7bed89d_Data> _1a7c08e08_evalArr(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7984645_SliceExpr> _78128_s);
inline jule::Ptr<_1a7bed89d_Data> _1a7c093ae_evalExpSlc(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7984645_SliceExpr> _85831_s, jule::Ptr<_1a7c3255d_Type> _85855_t, jule::Any _85869_first);
inline jule::Ptr<_1a7bed89d_Data> _1a7c09700_evalSliceExpr(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7984645_SliceExpr> _89634_s);
inline jule::Bool _1a7c09aeb_checkIntegerIndexingByData(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _94147_d, jule::Ptr<_1a79633b0_Token> _94161_token);
inline void _1a7c0a019_indexingPtr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _95432_d, jule::Ptr<_1a7bed89d_Data>* _95447_index, jule::Ptr<_1a79850a2_IndexingExpr>* _95466_i);
inline void _1a7c0a437_indexingArr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _97032_d, jule::Ptr<_1a7bed89d_Data>* _97047_index, jule::Ptr<_1a79850a2_IndexingExpr>* _97066_i);
inline void _1a7c0a855_indexingSlc(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _98032_d, jule::Ptr<_1a7bed89d_Data>* _98047_index, jule::Ptr<_1a79850a2_IndexingExpr>* _98066_i);
inline void _1a7c0ac73_indexingMap(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _100332_d, jule::Ptr<_1a7bed89d_Data>* _100347_index, jule::Ptr<_1a79850a2_IndexingExpr>* _100366_i);
inline void _1a7c0b191_indexingStr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _102032_d, jule::Ptr<_1a7bed89d_Data>* _102047_index, jule::Ptr<_1a79850a2_IndexingExpr>* _102066_i);
inline void _1a7c0b5ae_comptimeRange(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _104834_d, jule::Ptr<_1a7bed89d_Data>* _104849_index, jule::Ptr<_1a79850a2_IndexingExpr>* _104868_i);
inline void _1a7c0b9cc_toIndexing(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _107331_d, jule::Ptr<_1a7bed89d_Data>* _107346_index, jule::Ptr<_1a79850a2_IndexingExpr>* _107365_i);
inline jule::Bool _1a7c0be83_pushGenericsFromExprSubIdent(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7981202_SubIdentExpr>* _110150_sexpr, jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>* _11028_generics, jule::Ptr<_1a797d0de_Expr>* _110241_expr);
inline jule::Bool _1a7c0c37e_pushGenericsFromData(jule::Ptr<_1a7c0086c_eval> _self_, jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>* _111242_generics, jule::Ptr<_1a797d0de_Expr>* _111275_expr);
inline void _1a7c0c6e2_evalIdentDeclFromIndexing(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7bed89d_Data>* _118247_d, jule::Ptr<_1a79850a2_IndexingExpr>* _118262_i);
inline __jule_tuple_bool__jule_tuple_bool _1a7c0cb98_checkGenericFn(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7a73b41_FnIns>* _122536_f, jule::Ptr<_1a79633b0_Token>* _122552_et, jule::Any* _122576_model);
inline void _1a7c0d00b_evalFnGenericFromIndexing(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7bed89d_Data>* _124147_d, jule::Ptr<_1a79850a2_IndexingExpr>* _124162_i);
inline jule::Ptr<_1a7bed89d_Data> _1a7c0d34c_evalIndexing(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a79850a2_IndexingExpr> _128133_i);
inline __jule_tuple_x_1a7bed89d_Data__jule_tuple_x_1a7bed89d_Data _1a7c0d68d_evalSlicingExprs(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7985712_SlicingExpr>* _134138_s);
inline void _1a7c0d946_slicingArr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _137727_d);
inline void _1a7c0dd64_slicingStr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _139227_d, jule::Ptr<_1a7bed89d_Data>* _139238_l, jule::Ptr<_1a7bed89d_Data>* _139249_r);
inline void _1a7c0e33c_checkSlicing(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _143033_d, jule::Ptr<_1a7bed89d_Data>* _143044_l, jule::Ptr<_1a7bed89d_Data>* _143055_r, jule::Ptr<_1a7985712_SlicingExpr>* _143066_s);
inline jule::Ptr<_1a7bed89d_Data> _1a7c0e67d_evalSlicing(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7985712_SlicingExpr> _144932_s);
inline void _1a7c0ea9b_castPtr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _148627_t, jule::Ptr<_1a7bed89d_Data> _148641_d, jule::Ptr<_1a79633b0_Token> _148651_errorToken);
inline void _1a7c0eeb9_castStruct(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _150830_t, jule::Ptr<_1a7bed89d_Data> _150844_d, jule::Ptr<_1a79633b0_Token> _150854_errorToken);
inline void _1a7c103d7_castRef(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _152527_t, jule::Ptr<_1a7bed89d_Data> _152541_d, jule::Ptr<_1a79633b0_Token> _152551_errorToken);
inline void _1a7c10805_castSlc(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _154827_t, jule::Ptr<_1a7bed89d_Data> _154841_d, jule::Ptr<_1a79633b0_Token> _154851_errorToken);
inline void _1a7c10c23_castBool(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _160328_t, jule::Ptr<_1a7bed89d_Data> _160342_d, jule::Ptr<_1a79633b0_Token> _160352_errorToken);
inline void _1a7c11141_castStr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _161027_t, jule::Ptr<_1a7bed89d_Data> _161041_d, jule::Ptr<_1a79633b0_Token> _161051_errorToken);
inline void _1a7c1155e_castInt(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _166027_t, jule::Ptr<_1a7bed89d_Data> _166041_d, jule::Ptr<_1a79633b0_Token> _166051_errorToken);
inline void _1a7c1197c_castNum(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _170627_t, jule::Ptr<_1a7bed89d_Data> _170641_d, jule::Ptr<_1a79633b0_Token> _170651_errorToken);
inline void _1a7c11d9a_castPrim(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _173728_t, jule::Ptr<_1a7bed89d_Data> _173742_d, jule::Ptr<_1a79633b0_Token> _173752_errorToken);
inline void _1a7c1220d_castConstant(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type>* _175533_t, jule::Ptr<_1a7bed89d_Data>* _175548_d);
inline void _1a7c1262b_castTypeEnum(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type>* _176433_t, jule::Ptr<_1a7bed89d_Data>* _176448_d, jule::Ptr<_1a79633b0_Token>* _176463_errorToken);
inline void _1a7c12a49_castTypeEnumT(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type>* _177434_t, jule::Ptr<_1a7bed89d_Data>* _177449_d, jule::Ptr<_1a79633b0_Token>* _177464_errorToken);
inline jule::Ptr<_1a7bed89d_Data> _1a7c13000_evalCastByTypeNData(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _178439_t, jule::Ptr<_1a7bed89d_Data> _178453_d, jule::Ptr<_1a79633b0_Token> _178467_errorToken);
inline jule::Ptr<_1a7bed89d_Data> _1a7c134a6_evalCastT(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7c3255d_Type>* _187331_t, jule::Ptr<_1a797d0de_Expr>* _187346_e, jule::Ptr<_1a79633b0_Token>* _187366_et);
inline jule::Ptr<_1a7bed89d_Data> _1a7c137e7_evalCast(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a798094e_CastExpr> _189029_c);
inline jule::Ptr<_1a7bed89d_Data> _1a7c13b38_evalNamespace(_1a7c0086c_eval* _self_, jule::Ptr<_1a7980d28_NamespaceExpr> _189933_s);
inline jule::Ptr<_1a7bed89d_Data> _1a7c140de_evalStructLitExplicit(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a799a97a_StructIns> _191842_s, jule::Slice<jule::Ptr<_1a797d0de_Expr>> _19197_exprs, jule::Ptr<_1a79633b0_Token> _191932_errorToken);
inline jule::Ptr<_1a7bed89d_Data> _1a7c14430_evalStructLit(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7983138_StructLit> _195334_lit);
inline _1a7c4564d_typeChecker _1a7c146b6_typeChecker(_1a7c0086c_eval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c14a07_evalType(_1a7c0086c_eval* _self_, jule::Ptr<_1a7978caa_TypeDecl> _199528_t);
inline void _1a7c14d6a_callTypeFn(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7981d18_FnCallExpr>* _200832_fc, jule::Ptr<_1a7bed89d_Data>* _200859_d);
inline void _1a7c151cd_callBuiltinFn(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7981d18_FnCallExpr>* _203435_fc, jule::Ptr<_1a7bed89d_Data>* _203462_d);
inline void _1a7c15541_checkFnOfConcurrentCall(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a73b41_FnIns>* _204640_f, jule::Ptr<_1a79633b0_Token> _204651_errorToken);
inline void _1a7c1595e_processExceptionalHandler(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a73b41_FnIns>* _206546_f, jule::Ptr<_1a7981d18_FnCallExpr>* _206562_fc, jule::Ptr<_1a7bed89d_Data>* _206589_d);
inline void _1a7c15cc2_callFn(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7981d18_FnCallExpr>* _209228_fc, jule::Ptr<_1a7bed89d_Data>* _209255_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7c16113_evalFnCall(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7981d18_FnCallExpr> _224131_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1650e_evalEnumStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a7d94d_Enum> _227434_enm, jule::Ptr<_1a79633b0_Token> _227450_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1690a_evalTypeEnumStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a80158_TypeEnum> _228238_enm, jule::Ptr<_1a79633b0_Token> _228254_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c16d06_evalStructStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a799a97a_StructIns> _230536_s, jule::Ptr<_1a79633b0_Token> _230551_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c172ac_evalTraitSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data> _234037_d, jule::Ptr<_1a7a7b297_Trait> _234051_trt, jule::Ptr<_1a79633b0_Token> _234068_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1781d_evalStructSubIdentField(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _236244_d, jule::Ptr<_1a799a97a_StructIns>* _236259_s, jule::Ptr<_1a79633b0_Token>* _236279_tok, jule::Ptr<_1a7999d53_FieldIns>* _2362104_f);
inline __jule_tuple_x_1a7bed89d_Data__jule_tuple_bool _1a7c17cc4_evalStructSubIdentFieldOnly(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data> _238647_d, jule::Ptr<_1a799a97a_StructIns> _238661_s, jule::Ptr<_1a7981202_SubIdentExpr> _238680_si);
inline jule::Ptr<_1a7bed89d_Data> _1a7c183e0_evalStructSubIdentMethod(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _240045_d, jule::Ptr<_1a799a97a_StructIns>* _240060_s, jule::Ptr<_1a79633b0_Token>* _240080_tok, jule::Ptr<_1a7a70a83_Fn>* _2400105_m, jule::Bool _2400113_ref);
inline jule::Ptr<_1a7bed89d_Data> _1a7c18951_evalStructSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data> _242138_d, jule::Ptr<_1a799a97a_StructIns> _242152_s, jule::Ptr<_1a7981202_SubIdentExpr> _242171_si, jule::Bool _242195_ref);
inline jule::Ptr<_1a7bed89d_Data> _1a7c18c92_evalIntTypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _244933_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c190d3_evalUintTypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _247634_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c19424_evalI8TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _249432_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c19765_evalI16TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _252333_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c19aa6_evalI32TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _255233_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c19de7_evalI64TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _258133_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1a238_evalU8TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _261032_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1a579_evalU16TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _262933_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1a8ba_evalU32TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _264833_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1ac0b_evalU64TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _266733_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1b04c_evalF32TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _268633_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1b38d_evalF64TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _272533_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1b789_evalPrimStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _276434_t, jule::Ptr<_1a79633b0_Token> _276444_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1bb85_evalTypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data> _280234_d, jule::Ptr<_1a7981202_SubIdentExpr> _280248_si);
inline jule::Ptr<_1a7bed89d_Data> _1ab1ee97d_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b10d65_comptimeTypeInfo>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si);
inline jule::Ptr<_1a7bed89d_Data> _1ab2040d1_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b019c1_comptimeStructField>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si);
inline jule::Ptr<_1a7bed89d_Data> _1ab20869b_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b07e17_comptimeEnumField>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si);
inline jule::Ptr<_1a7bed89d_Data> _1ab20ccaa_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b0ac2d_comptimeParam>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si);
inline jule::Ptr<_1a7bed89d_Data> _1ab2125ea_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b04be4_comptimeStatic>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si);
inline jule::Ptr<_1a7bed89d_Data> _1ab216bb5_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b16e6a_comptimeValue>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si);
inline jule::Ptr<_1a7bed89d_Data> _1ab21b280_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b1b645_comptimeFile>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si);
inline jule::Ptr<_1a7bed89d_Data> _1ab2208d3_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b2055b_comptimeDecl>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si);
inline __jule_tuple_x_1a7bed89d_Data__jule_tuple_bool _1a7c1c537_tryComptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _282643_d, jule::Ptr<_1a7981202_SubIdentExpr> _282657_si);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1c933_evalObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data> _285735_d, jule::Ptr<_1a7981202_SubIdentExpr> _285749_si);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1cc74_evalSubIdent(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7981202_SubIdentExpr> _290533_si);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1d170_evalTupleFunc(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797dbd3_TupleExpr> _291934_tup, jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a797d0de_Expr>*> _291956_part);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1d4b1_evalTuple(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797dbd3_TupleExpr> _294830_tup);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1d8ac_evalMap(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7c4200c_Map> _295428_m, jule::Ptr<_1a79835de_BraceLit> _295441_lit);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1dbed_evalBraceLit(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a79835de_BraceLit> _300233_lit);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1e03e_evalAnonFunc(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a798aa47_FnDecl> _302833_decl);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1e380_evalBinary(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a79816a8_BinaryExpr> _306631_op);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1e6c1_evalExprKind(jule::Ptr<_1a7c0086c_eval> _self_, jule::Any _308133_kind);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1ea12_eval1(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797d0de_Expr> _312926_expr);
inline jule::Ptr<_1a7bed89d_Data> _1a7c1ed53_eval(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797d0de_Expr> _317425_expr);
inline jule::Ptr<_1a7bed89d_Data> _1a7c20194_evalExpr1(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797d0de_Expr> _318930_expr);
inline jule::Ptr<_1a7bed89d_Data> _1a7c204d5_evalExpr(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797d0de_Expr> _320529_expr);
inline _1a7c20969_unaryEval static__1a7c20ddc_new(jule::Ptr<_1a7c0086c_eval> _322620_e);
inline void _1a7c210da_minus(_1a7c20969_unaryEval* _self_);
inline void _1a7c212d8_plus(_1a7c20969_unaryEval* _self_);
inline void _1a7c214d6_caret(_1a7c20969_unaryEval* _self_);
inline void _1a7c216d4_excl(_1a7c20969_unaryEval* _self_);
inline void _1a7c218d2_star(_1a7c20969_unaryEval* _self_);
inline void _1a7c21ad0_amper(_1a7c20969_unaryEval* _self_);
inline void _1a7c21ccd_typeDecl(_1a7c20969_unaryEval* _self_);
inline void _1a7c21ecb_evalData(_1a7c20969_unaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c2231c_eval(_1a7c20969_unaryEval* _self_, jule::Ptr<_1a798019b_UnaryExpr> _349824_u);
inline _1a7c22905_binaryEval static__1a7c22edd_newPlain(jule::Ptr<_1a7c0086c_eval> _354625_e);
inline _1a7c22905_binaryEval static__1a7c23362_new(jule::Ptr<_1a7c0086c_eval> _355220_e, jule::Ptr<_1a79633b0_Token> _355234_op);
inline jule::Bool _1a7c235e8_checkTypeCompatibility(_1a7c22905_binaryEval* _self_);
inline jule::Bool _1a7c2387e_checkTypeCompatibility1(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c23b15_evalComptimeTypeInfo(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c23d9b_evalNil(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c24132_evalEnum(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c243b8_evalTypeEnum(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c2464e_evalSptr(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c248d5_evalPtr(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c24b6b_evalArr(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c24e02_evalStruct(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c25188_evalTrait(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c2541e_evalAny(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c256a5_evalBool(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c2593b_evalStr(_1a7c22905_binaryEval* _self_);
inline void _1a7c25b39_setTypeToGreater(_1a7c22905_binaryEval* _self_);
inline void _1a7c25de2_checkModData(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a7bed89d_Data>* _389333_d);
inline void _1a7c260e0_mod(_1a7c22905_binaryEval* _self_);
inline jule::Bool _1a7c26376_numbersAreCompatibile(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c2660c_shift(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c26893_evalFloat(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c26b29_evalInt(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c26db0_evalPrim(_1a7c22905_binaryEval* _self_);
inline jule::Bool _1a7c27146_checkSpecialCases(_1a7c22905_binaryEval* _self_);
inline jule::Ptr<_1a7bed89d_Data> _1a7c273cc_evalOp(_1a7c22905_binaryEval* _self_);
inline void _1a7c27685_evalConst(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a7bed89d_Data>* _421730_d);
inline void _1a7c2793d_checkData(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a7bed89d_Data>* _429530_d);
inline void _1a7c27b3b_checkDatas(_1a7c22905_binaryEval* _self_);
inline void _1a7c27de4_setModel(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a7bed89d_Data>* _430729_d);
inline void _1a7c2819c_postEval(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a7bed89d_Data>* _433629_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7c28598_solveExplicit(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a7bed89d_Data>* _434134_l, jule::Ptr<_1a7bed89d_Data>* _434149_r);
inline jule::Ptr<_1a7bed89d_Data> _1a7c288d9_eval(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a79816a8_BinaryExpr>* _436125_op);
inline jule::Str _1a7c32959_Str(_1a7c3255d_Type* _self_);
inline jule::Bool _1a7c32c9a_Equal(jule::Ptr<_1a7c3255d_Type> _self_, jule::Ptr<_1a7c3255d_Type> _6618_other);
inline jule::Bool _1a7c3344e_Binded(_1a7c3255d_Type* _self_);
inline jule::Bool _1a7c336d5_IsNil(_1a7c3255d_Type* _self_);
inline jule::Bool _1a7c3396b_Void(_1a7c3255d_Type* _self_);
inline jule::Trait _1a7c33c02_ActualKind(_1a7c3255d_Type* _self_);
inline jule::Bool _1a7c34043_ActualEqual(jule::Ptr<_1a7c3255d_Type> _self_, jule::Ptr<_1a7c3255d_Type> _11524_other);
inline jule::Bool _1a7c34384_deepActualEqual(jule::Ptr<_1a7c3255d_Type> _self_, jule::Ptr<_1a7c3255d_Type> _13028_other);
inline jule::Bool _1a7c3461a_Comparable(_1a7c3255d_Type* _self_);
inline jule::Bool _1a7c348a1_Mutable(_1a7c3255d_Type* _self_);
inline jule::Bool _1a7c34b37_Ordered(_1a7c3255d_Type* _self_);
inline jule::Bool _1a7c34dbd_NilCompatible(_1a7c3255d_Type* _self_);
inline jule::Bool _1a7c35154_GC(_1a7c3255d_Type* _self_);
inline jule::Bool _1a7c353da_Variadicable(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7c3b369_Prim> _1a7c35671_Prim(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7c3ed95_Sptr> _1a7c35907_Sptr(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7c4365c_Ptr> _1a7c35b8d_Ptr(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7a7d94d_Enum> _1a7c35e24_Enum(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7a80158_TypeEnum> _1a7c361aa_TypeEnum(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7c42b89_Arr> _1a7c36441_Arr(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7c40868_Slc> _1a7c366c7_Slc(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7a73b41_FnIns> _1a7c3695d_Fn(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a799a97a_StructIns> _1a7c36be4_Struct(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a799a97a_StructIns> _1a7c36e7a_softStruct(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7a7b297_Trait> _1a7c37211_Trait(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7c4200c_Map> _1a7c37497_Map(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7c4145c_Tuple> _1a7c3772d_Tup(_1a7c3255d_Type* _self_);
inline jule::Bool _1a7c379b4_comptime(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b03264_comptimeStructFields> _1a7c37c4a_comptimeStructFields(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b019c1_comptimeStructField> _1a7c37ed1_comptimeStructField(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b09226_comptimeEnumFields> _1a7c38267_comptimeEnumFields(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b07e17_comptimeEnumField> _1a7c384ed_comptimeEnumField(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b0ca87_comptimeParams> _1a7c38784_comptimeParams(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b0ac2d_comptimeParam> _1a7c38a1a_comptimeParam(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b00e65_comptimeRange> _1a7c38ca1_comptimeRange(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b0e3e6_comptimeTypeInfos> _1a7c39037_comptimeTypeInfos(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b10d65_comptimeTypeInfo> _1a7c392bd_comptimeTypeInfo(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b06498_comptimeStatics> _1a7c39554_comptimeStatics(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b04be4_comptimeStatic> _1a7c397da_comptimeStatic(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b16e6a_comptimeValue> _1a7c39a71_comptimeValue(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b2055b_comptimeDecl> _1a7c39d07_comptimeDecl(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b1d26d_comptimeDecls> _1a7c3a08d_comptimeDecls(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b1b645_comptimeFile> _1a7c3a324_comptimeFile(_1a7c3255d_Type* _self_);
inline jule::Ptr<_1a7b19bc6_comptimeFiles> _1a7c3a5aa_comptimeFiles(_1a7c3255d_Type* _self_);
inline jule::Bool _1a7c3ad19_checked(_1a7c3a962_TypeSym* _self_);
inline jule::Str _1a7c3b6dd_Str(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3ba2e_Equal(jule::Ptr<_1a7c3b369_Prim> _self_, jule::Ptr<_1a7c3255d_Type> _57118_other);
inline jule::Bool _1a7c3bec4_IsConstraint(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3c25a_IsI8(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3c4e1_IsI16(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3c777_IsI32(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3ca0d_IsI64(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3cc94_IsU8(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3d02a_IsU16(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3d2b1_IsU32(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3d547_IsU64(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3d7cd_IsF32(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3da64_IsF64(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3dcea_IsInt(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3e081_IsUint(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3e317_IsUintptr(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3e59d_IsBool(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3e834_IsStr(_1a7c3b369_Prim* _self_);
inline jule::Bool _1a7c3eaba_IsAny(_1a7c3b369_Prim* _self_);
inline jule::Str _1a7c4024c_Str(_1a7c3ed95_Sptr* _self_);
inline jule::Bool _1a7c4058d_Equal(jule::Ptr<_1a7c3ed95_Sptr> _self_, jule::Ptr<_1a7c3255d_Type> _64818_other);
inline jule::Str _1a7c40d30_Str(_1a7c40868_Slc* _self_);
inline jule::Bool _1a7c41171_Equal(jule::Ptr<_1a7c40868_Slc> _self_, jule::Ptr<_1a7c3255d_Type> _66718_other);
inline jule::Str _1a7c41814_Str(_1a7c4145c_Tuple* _self_);
inline jule::Bool _1a7c41b55_Equal(jule::Ptr<_1a7c4145c_Tuple> _self_, jule::Ptr<_1a7c3255d_Type> _69618_other);
inline jule::Str _1a7c423b4_Str(_1a7c4200c_Map* _self_);
inline jule::Bool _1a7c42705_Equal(jule::Ptr<_1a7c4200c_Map> _self_, jule::Ptr<_1a7c3255d_Type> _73318_other);
inline jule::Str _1a7c43041_Str(_1a7c42b89_Arr* _self_);
inline jule::Bool _1a7c43382_Equal(jule::Ptr<_1a7c42b89_Arr> _self_, jule::Ptr<_1a7c3255d_Type> _76218_other);
inline jule::Str _1a7c43a14_Str(_1a7c4365c_Ptr* _self_);
inline jule::Bool _1a7c43d55_Equal(jule::Ptr<_1a7c4365c_Ptr> _self_, jule::Ptr<_1a7c3255d_Type> _78718_other);
inline jule::Bool _1a7c441c9_IsUnsafe(_1a7c4365c_Ptr* _self_);
inline void _1a7c45dce_pushErr(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79633b0_Token> _88123_token, jule::Str _88145_fmt, jule::Slice<jule::Any> _88165_args);
inline void _1a7c460cc_allowBuiltin(_1a7c4564d_typeChecker* _self_);
inline void _1a7c462ca_disallowBuiltin(_1a7c4564d_typeChecker* _self_);
inline void _1ad08e244_pushReference(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a799a97a_StructIns>* _89337_t);
inline void _1ad091ad7_pushReference(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7a7b297_Trait>* _89337_t);
inline void _1a7c4683b_pushReferenceByKind(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7c3255d_Type>* _90340_k);
inline void _1a7c46c59_pushCycleError(_1a7c4564d_typeChecker* _self_, jule::Any _91426_def1, jule::Any _91437_def2, _1bc0a106b_Builder* _91453_message);
inline jule::Bool _1a7c47155_checkCrossCycle(_1a7c4564d_typeChecker* _self_, jule::Any _93627_decl, _1bc0a106b_Builder* _93643_message);
inline jule::Bool _1a7c47551_checkIllegalCycles(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _97035_ident, jule::Any _97067_decl);
inline jule::Trait _1a7c4794c_fromTypeAlias(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _102034_decl, jule::Ptr<_1a7c31848_TypeAlias>* _102066_ta);
inline jule::Ptr<_1a7a7d94d_Enum> _1a7c47d48_fromEnum(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _110525_decl, jule::Ptr<_1a7a7d94d_Enum>* _110557_e);
inline jule::Ptr<_1a7a80158_TypeEnum> _1a7c48244_fromTypeEnum(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _111729_decl, jule::Ptr<_1a7a80158_TypeEnum>* _111761_e);
inline jule::Ptr<_1a7a7b297_Trait> _1a7c48640_fromTrait(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _112926_decl, jule::Ptr<_1a7a7b297_Trait>* _112958_t);
inline jule::Bool _1a7c48a3b_checkStructIns(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a799a97a_StructIns>* _114235_ins, jule::Ptr<_1a79633b0_Token>* _114257_errorToken);
inline void _1a7c48ce4_appendUsedStructReference(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7997adc_Struct>* _116246_s);
inline jule::Ptr<_1a799a97a_StructIns> _1a7c491e0_buildStructInstance(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _117540_decl, jule::Ptr<_1a7997adc_Struct>* _117572_s);
inline jule::Ptr<_1a799a97a_StructIns> _1a7c495db_fromStructIns(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a799a97a_StructIns>* _122334_ins, jule::Ptr<_1a79633b0_Token> _122355_token);
inline jule::Ptr<_1a799a97a_StructIns> _1a7c499d7_fromStruct(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _124131_decl, jule::Ptr<_1a7997adc_Struct>* _124163_s);
inline jule::Trait _1a7c49d28_getDef(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _128527_decl);
inline jule::Trait _1a7c4a169_buildIdent(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl> _134630_decl);
inline jule::Trait _1a7c4a4aa_buildSubIdent(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a797967e_SubIdentTypeDecl> _135033_decl);
inline jule::Ptr<_1a7c3ed95_Sptr> _1a7c4a7eb_buildSptrFromType(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7c3255d_Type>* _138438_elem);
inline jule::Ptr<_1a7c3ed95_Sptr> _1a7c4ab3c_buildSptr(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7979d55_SptrTypeDecl> _139829_decl);
inline jule::Ptr<_1a7c4365c_Ptr> _1a7c4ae7d_buildPtrFromType(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7c3255d_Type>* _140737_elem);
inline jule::Ptr<_1a7c4365c_Ptr> _1a7c4b2be_buildPtr(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a797a7d4_PtrTypeDecl> _142228_decl);
inline jule::Ptr<_1a7c40868_Slc> _1a7c4b610_buildSlc(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a797a1da_SlcTypeDecl> _143928_decl);
inline jule::Ptr<_1a7c42b89_Arr> _1a7c4b951_buildArr(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a797b076_ArrTypeDecl> _146028_decl);
inline jule::Ptr<_1a7c4200c_Map> _1a7c4bc92_buildMap(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a797b7c4_MapTypeDecl> _150928_decl);
inline jule::Ptr<_1a7c4145c_Tuple> _1a7c4c0d3_buildTuple(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a797a4d7_TupleTypeDecl> _154130_decl);
inline jule::Bool _1a7c4c424_checkFuncTypes(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7a73b41_FnIns>* _155435_f);
inline jule::Ptr<_1a7a73b41_FnIns> _1a7c4c765_buildFunc(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a798aa47_FnDecl> _157229_decl);
inline jule::Trait _1a7c4caa6_buildNamespace(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7979a58_NamespaceTypeDecl> _160234_ns);
inline jule::Ptr<_1a7c3255d_Type> _1a7c4cde7_build(_1a7c4564d_typeChecker* _self_, jule::Any* _161826_declKind);
inline jule::Ptr<_1a7c3255d_Type> _1a7c4d238_checkDecl(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7978caa_TypeDecl>* _170130_decl);
inline jule::Bool static__1a7c4db84_prim(jule::Str* _172818_ident, jule::Ptr<_1a7c3b369_Prim> _172830_t);
inline jule::Bool static__1a7c4e008_exist(jule::Str* _173219_ident, jule::Ptr<_1a7c3255d_Type>* _173236_k);
inline void _1a85b0517_stop(_1a85aed63_scopeParser* _self_);
inline jule::Bool _1a85b079d_stopped(_1a85aed63_scopeParser* _self_);
inline jule::Bool _1a85b0a34_finished(_1a85aed63_scopeParser* _self_);
inline jule::Bool _1a85b0cba_isLastSt(_1a85aed63_scopeParser* _self_);
inline void _1a85b112d_pushErr(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a79633b0_Token> _15423_token, jule::Str _15445_fmt);
inline void _1a85b1491_pushSuggestion(_1a85aed63_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args);
inline void _1a85b1749_insertAsNext(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _16333_tokens);
inline jule::Ptr<_1a85ae4c2_stmt> _1a85b19d0_next(_1a85aed63_scopeParser* _self_);
inline jule::Ptr<_1a7988da8_ScopeTree> _1a85b1dcb_buildScope(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _17331_tokens, jule::Ptr<_1a79633b0_Token> _17360_end);
inline jule::Ptr<_1a798bc02_VarDecl> _1a85b221c_buildVarSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _18431_tokens);
inline jule::Ptr<_1a798c0cb_RetSt> _1a85b255d_buildRetSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _19230_tokens);
inline jule::Ptr<_1a798c84b_Iter> _1a85b289e_buildWhileNextIter(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a85ae4c2_stmt>* _20339_s);
inline jule::Ptr<_1a798d176_WhileKind> _1a85b2be0_buildWhileIterKind(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _24839_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _1a85b3031_getRangeKindKeysTokens(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _25443_toks);
inline jule::Ptr<_1a798bc02_VarDecl> _1a85b3372_buildRangeKindKey(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _26038_tokens);
inline jule::Slice<jule::Ptr<_1a798bc02_VarDecl>> _1a85b36b3_buildRangeKindKeys(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>>* _28639_parts);
inline void _1a85b3a26_setupRangeKindKeysPlain(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a798da7d_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _29471_tokens);
inline void _1a85b3d89_setupRangeKindKeysExplicit(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a798da7d_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _30974_tokens);
inline void _1a85b41ec_setupRangeKindKeys(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a798da7d_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _31866_tokens);
inline jule::Ptr<_1a798da7d_RangeKind> _1a85b46a3_buildRangeIterKind(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _3278_exprTokens, jule::Ptr<_1a79633b0_Token>* _32742_inToken);
inline jule::Any _1a85b4a9e_buildCommonIterKind(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _34240_tokens, jule::Ptr<_1a79633b0_Token>* _34266_errTok);
inline jule::Ptr<_1a798c84b_Iter> _1a85b4de0_buildCommonIter(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _36935_tokens);
inline jule::Ptr<_1a798c84b_Iter> _1a85b5231_buildIterSt(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a85ae4c2_stmt>* _39932_st);
inline jule::Ptr<_1a798de57_BreakSt> _1a85b5572_buildBreakSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _40633_tokens);
inline jule::Ptr<_1a798e331_ContSt> _1a85b58b3_buildContSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _42432_tokens);
inline jule::Ptr<_1a798e7d7_If> _1a85b5c04_buildIf(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _44228_tokens);
inline jule::Ptr<_1a798ebb1_Else> _1a85b6045_buildElse(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _47530_tokens);
inline jule::Ptr<_1a7990167_Conditional> _1a85b6386_buildIfElseChain(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _49936_tokens);
inline jule::Ptr<_1a797d0de_Expr> _1a85b66c7_buildCoCallSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _52233_tokens);
inline jule::Ptr<_1a7986768_GotoSt> _1a85b6a18_buildGotoSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _53832_tokens);
inline jule::Ptr<_1a7986a65_FallSt> _1a85b6d59_buildFallSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _55832_tokens);
inline jule::Ptr<_1a7990981_TypeAliasDecl> _1a85b719a_buildTypeAliasSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _56837_tokens);
inline void _1a85b7673_pushCaseExpr(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _57432_tokens, jule::Ptr<_1a79633b0_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1a797d0de_Expr>>* _57525_exprs);
inline __jule_tuple_sx_1a797d0de_Expr__jule_tuple_bool _1a85b7b29_buildCaseExprs(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _59735_tokens, jule::Ptr<_1a79633b0_Token>* _59765_colon, jule::Bool _59787_typeMatch);
inline jule::Ptr<_1a7988da8_ScopeTree> _1a85b7e6a_buildCaseScope(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _63935_tokens);
inline __jule_tuple_x_1a7990e37_Case__jule_tuple_bool _1a85b8366_buildCase(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _66630_tokens, jule::Bool _66655_typeMatch);
inline __jule_tuple_sx_1a7990e37_Case__jule_tuple_x_1a798ebb1_Else _1a85b8762_buildCases(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _68530_tokens, jule::Bool _68555_typeMatch);
inline jule::Ptr<_1a7991751_MatchCase> _1a85b8aa3_buildMatchCase(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _71934_tokens);
inline jule::Ptr<_1a7988da8_ScopeTree> _1a85b8de4_buildScopeSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _75232_tokens);
inline jule::Ptr<_1a798638e_LabelSt> _1a85b9235_buildLabelSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _79533_tokens);
inline __jule_tuple__1a7988418_StmtData__jule_tuple_bool _1a85b9576_buildIdSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _81030_tokens);
inline jule::Ptr<_1a85c9d7d_assignInfo> _1a85b98b7_buildAssignInfo(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _82436_tokens);
inline jule::Ptr<_1a79871c5_AssignLeft> _1a85b9c08_buildAssignL(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _86933_tokens);
inline jule::Slice<jule::Ptr<_1a79871c5_AssignLeft>> _1a85ba049_buildAssignLs(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>>* _88034_parts);
inline __jule_tuple__1a7988418_StmtData__jule_tuple_bool _1a85ba38a_buildPlainAssign(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _88937_tokens);
inline jule::Bool _1a85ba786_buildDeclAssign1(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _94337_lefts, jule::Ptr<_1a7987758_AssignSt>* _94366_assign);
inline __jule_tuple_x_1a7987758_AssignSt__jule_tuple_bool _1a85baac7_buildDeclAssign(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _99135_tokens);
inline __jule_tuple__1a7988418_StmtData__jule_tuple_bool _1a85bae18_buildAssignSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _102534_tokens);
inline jule::Ptr<_1a797d9b3_UseExpr> _1a85bb259_buildUseExpr(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _103833_tokens);
inline jule::Any _1a85bb59a_buildConstSt(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a85ae4c2_stmt>* _105133_st);
inline jule::Any _1a85bb8db_buildSt(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a85ae4c2_stmt>* _107628_st);
inline void _1a85bbc4e_build(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _114026_tokens, jule::Ptr<_1a7988da8_ScopeTree>* _114056_s);
inline void _1a85bce92_pushErr(_1a85bc788_exprBuilder* _self_, jule::Ptr<_1a79633b0_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args);
inline void _1a85bd305_pushSuggestion(_1a85bc788_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args);
inline jule::Ptr<_1a797dbd3_TupleExpr> _1a85bd646_buildTuple(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>>* _2331_parts);
inline jule::Ptr<_1a797e079_LitExpr> _1a85bd987_buildLit(_1a85bc788_exprBuilder* _self_, jule::Ptr<_1a79633b0_Token> _3324_token);
inline jule::Any _1a85be119_buildSingle(_1a85bc788_exprBuilder* _self_, jule::Ptr<_1a79633b0_Token> _4431_token);
inline jule::Ptr<_1a797e909_IdentExpr> _1a85be45a_buildBindIdent(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _6135_tokens);
inline jule::Ptr<_1a798019b_UnaryExpr> _1a85be79b_buildUnary(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _8030_tokens);
inline jule::Ptr<_1a7981202_SubIdentExpr> _1a85beadc_buildObjSubIdent(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _10136_tokens);
inline jule::Ptr<_1a7980d28_NamespaceExpr> _1a85bee2d_buildNamespace(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _11635_tokens);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85c026e_buildType(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _15030_tokens);
inline jule::Any _1a85c05b0_buildSubIdent(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _16434_tokens);
inline jule::Ptr<_1a7980575_VariadicExpr> _1a85c0901_buildVariadic(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _18633_tokens);
inline jule::Ptr<_1a797d3a8_RangeExpr> _1a85c0c42_buildBetweenParentheses(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _19543_tokens);
inline jule::Ptr<_1a798094e_CastExpr> _1a85c1083_tryBuildCast(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _20733_tokens);
inline void _1a85c14a1_pushArg(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a797d0de_Expr>>* _28028_args, jule::Slice<jule::Ptr<_1a79633b0_Token>> _28052_tokens, jule::Ptr<_1a79633b0_Token> _28077_errToken);
inline jule::Slice<jule::Ptr<_1a797d0de_Expr>> _1a85c17e2_buildArgs(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _28929_tokens);
inline jule::Ptr<_1a7981d18_FnCallExpr> _1a85c20d9_buildFnCall(_1a85bc788_exprBuilder* _self_, jule::Ptr<_1a79633b0_Token>* _35532_token, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _35559_expr, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _35587_args);
inline jule::Any _1a85c242a_buildParenthesesRange(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _36342_tokens);
inline jule::Ptr<_1a797e453_UnsafeExpr> _1a85c276b_buildUnsafeExpr(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _38535_tokens);
inline jule::Ptr<_1a798aa47_FnDecl> _1a85c2aac_buildAnonFn(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _40032_tokens);
inline jule::Any _1a85c2ded_buildUnsafe(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _40932_tokens);
inline void _1a85c331b_pushRangeLitPart(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _41936_part, jule::Ptr<_1a79633b0_Token> _4203_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>>* _42035_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _1a85c365c_getBraceRangeLitExprParts(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _43045_tokens);
inline jule::Ptr<_1a798280d_FieldExprPair> _1a85c399d_buildFieldExprPair(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _47238_tokens);
inline jule::Ptr<_1a797d0de_Expr> _1a85c3cde_buildStructLitExpr(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _48539_tokens);
inline jule::Slice<jule::Ptr<_1a797d0de_Expr>> _1a85c4130_buildStructLitExprs(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _50040_tokens);
inline jule::Ptr<_1a7983138_StructLit> _1a85c4471_buildTypedStructLiteral(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _51343_tokens);
inline jule::Ptr<_1a797d0de_Expr> _1a85c47b2_buildBraceLitPart(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _53738_tokens);
inline jule::Ptr<_1a79835de_BraceLit> _1a85c4b03_buildBraceLit(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _55434_tokens);
inline jule::Any _1a85c4e44_buildBraceRange(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _57336_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _1a85c5285_getEnumerableParts(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _62538_tokens);
inline jule::Ptr<_1a7984645_SliceExpr> _1a85c55c6_buildSlice(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _63230_tokens);
inline jule::Ptr<_1a79850a2_IndexingExpr> _1a85c5a7c_buildIndexing(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _65433_exprTokens, jule::Slice<jule::Ptr<_1a79633b0_Token>> _6557_tokens, jule::Ptr<_1a79633b0_Token> _65536_errorToken);
inline jule::Ptr<_1a7985712_SlicingExpr> _1a85c6198_buildSlicing(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _67833_exprTokens, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _67867_start, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _6798_to, jule::Ptr<_1a79633b0_Token>* _67934_errorToken, jule::Ptr<_1a79633b0_Token> _67965_end);
inline jule::Any _1a85c64d9_buildBracketRange(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _69437_tokens);
inline jule::Any _1a85c682a_buildExclRight(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _71935_tokens);
inline jule::Any _1a85c6b6b_buildData(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _73730_tokens);
inline jule::Any _1a85c7067_buildBinary(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _80632_tokens, jule::I32 _80657_i);
inline jule::Any _1a85c73a8_build(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _83126_tokens);
inline jule::Any _1a85c76e9_buildKind(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _84230_tokens);
inline jule::Ptr<_1a797d0de_Expr> _1a85c7a3a_buildFromTokens(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _85335_tokens);
inline void _1a85cd39d_stop(_1a85cd06d_parser* _self_);
inline jule::Bool _1a85cd634_stopped(_1a85cd06d_parser* _self_);
inline void _1a85cda52_pushErr(_1a85cd06d_parser* _self_, jule::Ptr<_1a79633b0_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args);
inline void _1a85cddb5_pushSuggestion(_1a85cd06d_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args);
inline jule::Ptr<_1a797d0de_Expr> _1a85ce206_buildExpr(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _17831_tokens);
inline jule::Ptr<_1a79781c7_Directive> _1a85ce547_buildDirective(_1a85cd06d_parser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _18234_tokens);
inline void _1a85ce800_pushDirective(_1a85cd06d_parser* _self_, jule::Ptr<_1a79781c7_Directive> _19733_d);
inline jule::Ptr<_1a7988da8_ScopeTree> _1a85cebeb_buildScope(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _21032_tokens, jule::Ptr<_1a79633b0_Token> _21061_end);
inline __jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool _1a85d01a2__buildType(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _22039_tokens, jule::I32* _2217_i, jule::Bool _22116_err);
inline __jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool _1a85d0658_buildType(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _23238_tokens, jule::I32* _2337_i, jule::Bool _23316_err);
inline jule::Ptr<_1a7990981_TypeAliasDecl> _1a85d0999_buildTypeAliasDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _24240_tokens);
inline void _1a85d0d0c_buildVarTypeAndExpr(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a798bc02_VarDecl>* _28841_v, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _28864_tokens);
inline void _1a85d1170_buildVarCommon(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a798bc02_VarDecl>* _32136_v, jule::Slice<jule::Ptr<_1a79633b0_Token>> _32158_tokens);
inline void _1a85d14d3_buildVarBegin(_1a85cd06d_parser* _self_, jule::Ptr<_1a798bc02_VarDecl>* _33734_v, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _33757_tokens);
inline jule::Ptr<_1a798bc02_VarDecl> _1a85d1824_buildVar(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _36529_tokens);
inline jule::Ptr<_1a7985eb5_GenericDecl> _1a85d1b65_buildGeneric(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _38434_tokens);
inline jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>> _1a85d2061_buildGenerics(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _42135_tokens, jule::Ptr<_1a79633b0_Token>* _42161_errorToken);
inline jule::Ptr<_1a79895e5_ParamDecl> _1a85d23a2_buildSelfParam(_1a85cd06d_parser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _44134_tokens);
inline void _1a85d27c0_paramTypeBegin(_1a85cd06d_parser* _self_, jule::Ptr<_1a79895e5_ParamDecl>* _48135_param, jule::I32* _48164_i, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _48173_tokens);
inline void _1a85d2b33_buildParamType(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a79895e5_ParamDecl>* _49636_param, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _49665_tokens);
inline void _1a85d2e96_buildParamBody(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a79895e5_ParamDecl>* _50936_param, jule::Slice<jule::Ptr<_1a79633b0_Token>> _50964_tokens);
inline jule::Ptr<_1a79895e5_ParamDecl> _1a85d32d7_buildParam(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _52931_tokens);
inline void _1a85d3590_checkParams(_1a85cd06d_parser* _self_, jule::Slice<jule::Ptr<_1a79895e5_ParamDecl>>* _57232_params);
inline jule::Slice<jule::Ptr<_1a79895e5_ParamDecl>> _1a85d398b_buildParams(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _59233_tokens, jule::Bool _59258_method);
inline __jule_tuple_x_1a797bb9d_RetTypeDecl__jule_tuple_bool _1a85d3d87_buildMultiRetType(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _62239_tokens, jule::I32* _62269_i);
inline __jule_tuple_x_1a797bb9d_RetTypeDecl__jule_tuple_bool _1a85d4283_buildRetType(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _69334_tokens, jule::I32* _69364_i);
inline jule::Ptr<_1a798aa47_FnDecl> _1a85d4739_buildFnPrototype(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _73238_tokens, jule::I32* _73268_i, jule::Bool _73276_method);
inline jule::Ptr<_1a798aa47_FnDecl> _1a85d4be0_buildFn(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _80929_tokens, jule::Bool _80954_method, jule::Bool _80968_prototype);
inline void _1a85d5053_buildBindUseDecl(_1a85cd06d_parser* _self_, jule::Ptr<_1a7991cd4_UseDecl>* _84337_decl, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _84363_tokens);
inline void _1a85d53b6_parseUseDecl(_1a85cd06d_parser* _self_, jule::Ptr<_1a7991cd4_UseDecl>* _85633_decl, jule::Slice<jule::Ptr<_1a79633b0_Token>> _85658_tokens);
inline jule::Ptr<_1a7991cd4_UseDecl> _1a85d57b2_buildUseDecl(_1a85cd06d_parser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _88632_tokens, jule::Bool _88657_binded);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85d5bad_buildTypeEnumItemKind(jule::Ptr<_1a85cd06d_parser> _self_, jule::I32* _90043_i, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _90056_tokens);
inline jule::Slice<jule::Ptr<_1a7993676_TypeEnumItemDecl>> _1a85d5eee_buildTypeEnumItems(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _93740_tokens);
inline jule::Ptr<_1a7993cd6_TypeEnumDecl> _1a85d6340_buildTypeEnumDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _96139_tokens);
inline jule::Ptr<_1a797d0de_Expr> _1a85d673b_buildEnumItemExpr(jule::Ptr<_1a85cd06d_parser> _self_, jule::I32* _98839_i, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _98852_tokens);
inline jule::Slice<jule::Ptr<_1a799228a_EnumItemDecl>> _1a85d6a7c_buildEnumItems(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _102036_tokens);
inline jule::Ptr<_1a7992d4b_EnumDecl> _1a85d6dbd_buildEnumDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _105735_tokens);
inline jule::Any _1a85d720e_buildNodeEnumDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _110239_tokens);
inline jule::Ptr<_1a79940a0_FieldDecl> _1a85d7550_buildField(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _111131_tokens);
inline jule::Slice<jule::Ptr<_1a79940a0_FieldDecl>> _1a85d7891_buildStructDeclFields(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _116042_tokens);
inline jule::Ptr<_1a7994996_StructDecl> _1a85d7bd2_buildStructDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _117137_tokens);
inline void _1a85d7e8a_checkMethodReceiver(_1a85cd06d_parser* _self_, jule::Ptr<_1a798aa47_FnDecl>* _121936_f);
inline void _1a85d82ed_buildTraitBody(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a79951d3_TraitDecl>* _123836_t, jule::Slice<jule::Ptr<_1a79633b0_Token>> _123860_tokens);
inline jule::Ptr<_1a79951d3_TraitDecl> _1a85d863e_buildTraitDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _127036_tokens);
inline jule::Ptr<_1a798aa47_FnDecl> _1a85d8980_buildBindFn(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _130032_tokens);
inline jule::Ptr<_1a798bc02_VarDecl> _1a85d8cc1_buildBindVar(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _131033_tokens);
inline jule::Ptr<_1a7994996_StructDecl> _1a85d9112_buildBindStruct(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _132336_tokens);
inline jule::Ptr<_1a7990981_TypeAliasDecl> _1a85d9453_buildBindTypeAlias(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _133739_tokens);
inline jule::Ptr<_1a7991cd4_UseDecl> _1a85d9794_buildBindUse(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _134733_tokens);
inline jule::Any _1a85d9ad5_buildBind(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _135831_tokens);
inline jule::Ptr<_1a798aa47_FnDecl> _1a85d9e26_getMethod(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _138231_tokens);
inline void _1a85da289_parseImplBody(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a7995843_Impl>* _141135_ipl, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _141157_tokens);
inline jule::Ptr<_1a7995843_Impl> _1a85da5ca_buildImpl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _144430_tokens);
inline jule::Any _1a85da91b_buildNodeData(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _151535_tokens);
inline void _1a85dabc4_applyFnMeta(_1a85cd06d_parser* _self_, jule::Ptr<_1a798aa47_FnDecl>* _154832_f);
inline void _1a85dae7c_applyMeta(_1a85cd06d_parser* _self_, _1a7977ca9_Node* _155330_node);
inline void _1a85db235_pushUseDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a7991cd4_UseDecl>* _157833_decl);
inline jule::Bool _1a85db576_pushMetaNodes(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _158635_tokens);
inline _1a7977ca9_Node _1a85db8b7_parseNode(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _160631_st);
inline void _1a85dbb70_appendNode(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _163032_st);
inline void _1a85dc148_removeRange(_1a85cd06d_parser* _self_, jule::I32 _164027_i, jule::U32 _164035_id, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _164051_tokens, jule::Slice<jule::I32>* _164081_ranges);
inline void _1a85dc566_pushWrongOrderCloseErr(_1a85cd06d_parser* _self_, jule::Ptr<_1a79633b0_Token>* _165239_t, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _165258_tokens, jule::Slice<jule::I32>* _165284_ranges);
inline void _1a85dca3e_pushRangeClose(_1a85cd06d_parser* _self_, jule::Ptr<_1a79633b0_Token> _166330_t, jule::U32 _166348_left, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _166366_tokens, jule::Slice<jule::I32>* _166396_ranges);
inline void _1a85dcce7_checkRanges(_1a85cd06d_parser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _168128_tokens);
inline void _1a85dd0a0_parse(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a7968e65_Fileset>* _171227_f);
inline void _1a85de7ee_pushErr(_1a85de227_typeBuilder* _self_, jule::Ptr<_1a79633b0_Token> _3123_token, jule::Str _3145_fmt);
inline void _1a85deb62_pushSuggestion(_1a85de227_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85dede8_buildNamespace(_1a85de227_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> _1a85e017e_buildGenerics(_1a85de227_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _1a85e0415_identGenerics(_1a85de227_typeBuilder* _self_);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e069b_buildIdent(_1a85de227_typeBuilder* _self_);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e0932_buildCppLink(_1a85de227_typeBuilder* _self_);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e0bb8_buildFn(_1a85de227_typeBuilder* _self_);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e0e4e_buildPtr(_1a85de227_typeBuilder* _self_);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e11d5_buildSptr(_1a85de227_typeBuilder* _self_);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e146b_buildSlc(_1a85de227_typeBuilder* _self_);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e1702_buildArr(_1a85de227_typeBuilder* _self_);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e1988_buildMap(_1a85de227_typeBuilder* _self_);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e1c1e_buildEnumerable(_1a85de227_typeBuilder* _self_);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e1ea5_step(_1a85de227_typeBuilder* _self_);
inline __jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool _1a85e223b_build(_1a85de227_typeBuilder* _self_);
inline void _1a7d63408_pushErr(_1a7d62d75_directiveEval* _self_, jule::Ptr<_1a79633b0_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _1a7d63804_splitOperans(_1a7d62d75_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _3348_tokens);
inline jule::Bool _1a7d63b45_evalDirectiveIdent(_1a7d62d75_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1a7d63e86_evalDirectivePart(_1a7d62d75_directiveEval* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _7037_part);
inline jule::Bool _1a7d6421c_eval(_1a7d62d75_directiveEval* _self_);
inline jule::Bool _1a7d606ad_isPassFileAnnotation(_1a85e332a_Importer* _self_, jule::Str _5136_p);
inline jule::Ptr<_1a85e332a_Importer> static__1a85e3759_New(_1a7d61637_CompileInfo _4516_info);
inline jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>> _1a85e39e0_AllPackages(_1a85e332a_Importer* _self_);
inline void _1a85e3e30_SetModPath(_1a85e332a_Importer* _self_, jule::Str _6226_path);
inline jule::Str _1a85e41b6_GetModPath(_1a85e332a_Importer* _self_);
inline jule::Str _1a85e4507_ModById(_1a85e332a_Importer* _self_, jule::I32 _7019_id);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a85e4848_GetImport(_1a85e332a_Importer* _self_, jule::Str _7425_path);
inline __jule_tuple_sx_1a7976deb_AST__jule_tuple_s_1bc0b03aa_Log _1a85e4c44_ImportPackage(_1a85e332a_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod);
inline void _1a85e4eec_Imported(_1a85e332a_Importer* _self_, jule::Ptr<_1a7b5e80e_ImportInfo> _14128_imp);
inline __jule_tuple_bool__jule_tuple_s_1bc0b03aa_Log _1a85e542b_isPassBuildDirectives(_1a85e332a_Importer* _self_, jule::Ptr<_1a7976deb_AST>* _16842_file);
inline jule::Ptr<_1a85e9441_ExprInspector> static__1a85e9782_New(void);
inline void _1a85e9a3a_args(_1a85e9441_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args);
inline void _1a85e9ce3_InspectStep(_1a85e9441_ExprInspector* _self_, jule::Any* _3339_m);
inline void _1a85ea09b_inspect(_1a85e9441_ExprInspector* _self_, jule::Any* _3728_m);
inline void _1a85ea40e_Inspect(_1a85e9441_ExprInspector* _self_, jule::Any* _16128_m, jule::Fn<void,jule::Any*> _16143_f);
inline jule::Ptr<_1a86037ad_Meta> static__1a8603b87_Collect(jule::Ptr<_1a85e5c78_IR> _7124_ir);
inline jule::Ptr<_1a86026d0_MetaRuntime> static__1a8603e51_CollectRuntime(jule::Ptr<_1a85e5c78_IR>* _8032_ir);
inline jule::Ptr<_1a8601a0e_MetaStrBuilder> static__1a860421a_CollectStrBuilder(jule::Ptr<_1a85e5c78_IR>* _10635_ir);
inline jule::Ptr<_1a86031a3_MetaMathCmplx> static__1a86044d4_CollectMathCmplx(jule::Ptr<_1a85e5c78_IR>* _12334_ir);
inline jule::Ptr<_1a92036a9_ObjectDeadCode> static__1a9203b93_new(jule::Ptr<_1a85e5c78_IR>* _2521_ir);
inline jule::Bool _1ac687b4b_isLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a799a97a_StructIns>* _3127_t);
inline jule::Bool _1acaca2be_isLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7a73b41_FnIns>* _3127_t);
inline jule::Bool _1acad5a5a_isLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7a7b297_Trait>* _3127_t);
inline jule::Bool _1ac68ae3a_isLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7ba4eb4_Var>* _3127_t);
inline void _1ac68a05a_pushLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a799a97a_StructIns> _5132_t);
inline void _1acacb369_pushLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7a73b41_FnIns> _5132_t);
inline void _1ad6cbb5b_pushLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7a7b297_Trait> _5132_t);
inline void _1ac68e713_pushLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7ba4eb4_Var> _5132_t);
inline void _1a9204545_pushStructAsLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a799a97a_StructIns>* _6438_s);
inline void _1a92047ed_setReferencesAsLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7b4c786_ReferenceStack>* _10841_rs);
inline void _1a9204aa6_inits(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7b62081_Package>* _15827_pkg);
inline void _1a9204d5e_collectLivePackage(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7b62081_Package>* _17240_pkg);
inline void _1a920505c_collectLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_);
inline void _1a9205315_removeDeadGlobals(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>* _24839_vars);
inline void _1a92055bd_removeDeadFns(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7a70a83_Fn>>* _26035_funcs);
inline void _1a9205876_removeDeadStructs(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7997adc_Struct>>* _28139_structs);
inline void _1a9205b2e_removeDeadTraits(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7a7b297_Trait>>* _30338_traits);
inline void _1a9205dd7_removeDeadsFile(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7a76d86_SymTab>* _32437_file);
inline void _1a9206190_removeDeadsPackage(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7b62081_Package>* _33140_pkg);
inline void _1a920638d_removeDeads(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_);
inline void _1a920658b_elimanate(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_);
inline void _1a9207ceb_optimizeChild(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2c238_Scope>* _1935_s);
inline void _1a92080a4_optimizeBodyChildExceptional(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2c238_Scope>* _2950_s);
inline void _1a920835c_optimizeBodyChild(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2c238_Scope>* _3939_s);
inline void _1a9208615_optimizeExpr(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Any* _4834_model);
inline void _1a9208813_eliminateFollowed(_1a92077ce_scopeDeadCode* _self_);
inline void _1a9208abb_pushGoto(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b303a1_GotoSt> _6929_gt);
inline void _1a9208d74_pushLabel(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2ec41_Label> _7930_l);
inline void _1a920912c_optimizeRangeIter(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2e0b4_RangeIter> _9238_it);
inline void _1a92093d5_optimizeWhileIter(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2d5d0_WhileIter> _9738_it);
inline void _1a920968d_optimizeInfIter(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2d129_InfIter> _10536_it);
inline void _1a9209946_optimizeConditional(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2cd2c_Conditional> _10940_c);
inline void _1a9209bee_optimizeMatch(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b31c32_Match> _12734_m);
inline void _1a9209ea7_optimizeAssign(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b30c31_Assign> _14535_assign);
inline void _1a920a260_optimizeMultiAssign(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b312b4_MultiAssign> _15040_assign);
inline void _1a920a518_optimizeStmt(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Any _15933_st);
inline void _1a920a716_optimizeStmts(jule::Ptr<_1a92077ce_scopeDeadCode> _self_);
inline _1a920bd66_exprDeadCode static__1a920c284_new(jule::Ptr<_1a92077ce_scopeDeadCode>* _1421_s);
inline void _1a920c53c_optimize(_1a920bd66_exprDeadCode* _self_, jule::Any* _2025_model);
inline void _1a69a6ab9_pushVar(_1a69a6624_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe);
inline jule::Bool _1a69a6e0a_removeVar(_1a69a6624_nils* _self_, jule::Uintptr _4825_var);
inline jule::Bool _1a69a724b_isSafe(_1a69a6624_nils* _self_, jule::Uintptr _6322_var);
inline jule::Ptr<_1a910e384_scopeOptimizer> static__1a910e97d_new(jule::Ptr<_1a7b2c238_Scope> _2420_scope);
inline void _1a910ec36_setCurrentStmt(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Any _3635_stmt);
inline void _1a910ee34_removeCurrent(jule::Ptr<_1a910e384_scopeOptimizer> _self_);
inline jule::Bool _1a91101ba_isLastStmt(jule::Ptr<_1a910e384_scopeOptimizer> _self_);
inline jule::Bool _1a9110451_isIter(jule::Ptr<_1a910e384_scopeOptimizer> _self_);
inline void _1a9110709_optimizeData(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7bed89d_Data> _6833_d);
inline void _1a91109b2_optimizeVar(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7ba4eb4_Var> _8732_v);
inline void _1a9110c6a_optimizeConditional(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b2cd2c_Conditional> _10840_c);
inline void _1a9111188_buildDefaultConstantTrueCase(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b32529_Case> _19149_case, jule::I32* _19173_i, jule::Ptr<_1a7b31c32_Match>* _19186_m);
inline void _1a9111441_optimizeMatch(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b31c32_Match> _21734_m);
inline void _1a91116e9_optimizeRangeIter(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b2e0b4_RangeIter> _30938_it);
inline void _1a91119a2_optimizeWhileIter(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b2d5d0_WhileIter> _36638_it);
inline jule::Bool _1a9111ce3_substr(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b30c31_Assign> _37227_a);
inline jule::Bool _1a9112134_strAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b30c31_Assign> _39230_a);
inline jule::Bool _1a9112475_sliceAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b30c31_Assign> _40332_a);
inline void _1a911272d_optimizePostfix(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b3077a_Postfix> _41136_postfix);
inline jule::Bool _1a9112a6e_cmplxAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b30c31_Assign>* _41833_assign);
inline void _1a9112d27_optimizeAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b30c31_Assign> _46035_assign);
inline void _1a911318a_normalizeAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _59437_assign, jule::Ptr<_1a7a68e99_TupleExpr>* _59470_tup);
inline jule::Bool _1a9113586_tryOptimizeSwap(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _66737_assign, jule::Ptr<_1a7a68e99_TupleExpr>* _66770_tup);
inline void _1a91138e9_splitAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _68933_assign, jule::Ptr<_1a7a68e99_TupleExpr>* _68966_tup);
inline void _1a9113ba2_optimizeMultiAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b312b4_MultiAssign> _77040_assign);
inline void _1a9113e5a_optimizeRet(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b330b8_RetSt> _89332_r);
inline void _1a9114213_optimizeStmt(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Any _91733_stmt);
inline void _1a91144bb_optimizeChild(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b2c238_Scope> _94734_child);
inline void _1a9114774_optimizeChildHard(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b2c238_Scope> _98338_child);
inline void _1a9114972_optimize(jule::Ptr<_1a910e384_scopeOptimizer> _self_);
inline void static__1a91172e3_optimize(jule::Any* _2326_model);
inline jule::Ptr<_1a9116c82_exprOptimizer> static__1a9117722_new(jule::Any* _2721_model, jule::Ptr<_1a91225a6_data>* _2745_d, jule::Ptr<_1a910e384_scopeOptimizer> _2759_s);
inline void static__1a9117ab8_optimizeData(jule::Any* _3630_model, jule::Ptr<_1a91225a6_data>* _3654_d, jule::Ptr<_1a910e384_scopeOptimizer> _3668_s);
inline void static__1a9117e5e_optimizeConditionalData(jule::Any* _4741_model, jule::Ptr<_1a91225a6_data>* _4765_d, jule::Ptr<_1a910e384_scopeOptimizer> _4779_s);
inline jule::Bool _1a91182a0_selfCmpCond(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _10128_m);
inline jule::Bool _1a91185e1_boolCond(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _13025_m);
inline jule::Bool _1a9118932_arrayCond(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr> _18325_m);
inline void _1a9118bda_strConv(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a633b1_OperandExpr>* _19824_m);
inline jule::Bool _1a911902b_strCond(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _22324_m);
inline jule::Bool _1a911936c_strConcat(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _28126_m);
inline jule::Bool _1a9119823_tryNeutralElement1(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _34535_m, jule::Ptr<_1a79ea9a8_Const> _34561_c, jule::Ptr<_1a7a633b1_OperandExpr>* _34587_nc);
inline jule::Bool _1a9119b64_tryNeutralElement(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _39534_m);
inline void _1a9119e1c_checkBinaryForBoundary(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _41039_m);
inline void _1a911a1c5_checkBinaryForNil(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _46234_m);
inline void _1a911a47d_shift(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr> _49621_m);
inline jule::Bool _1a911a7be_binaryMath(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _51627_m);
inline void _1a911aa77_binaryStrCommon(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _62432_m);
inline void _1a911ad30_binary(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr> _62922_m);
inline void _1a911b0d8_unary(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a63c85_UnaryExpr> _70621_m);
inline void _1a911b391_structureLit(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a64659_StructLitExpr> _74528_m);
inline void _1a911b649_casting(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a64ed9_CastingExpr> _76123_m);
inline void _1a911b9ac_args(_1a9116c82_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a7a729db_ParamIns>> _77520_params, jule::Slice<jule::Any>* _77552_args);
inline void _1a911bd20_scope(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7b2c238_Scope>* _80022_s, jule::Bool _80039_child);
inline void _1a911c0c8_optimizeStrBuilderCall(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a6588b_FnCallExpr>* _81639_m);
inline void _1a911c381_lenCall(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a6a9c3_BuiltinLenCallExpr> _83123_m);
inline void _1a911c639_funcCall(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a6588b_FnCallExpr> _87424_m);
inline void _1a911c8e2_indexing(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a6621b_IndexingExpr> _88824_m);
inline void _1a911cb9a_anonFunc(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a666c2_AnonFnExpr> _91224_m);
inline void _1a911ce53_inspectStep(_1a9116c82_exprOptimizer* _self_, jule::Any* _92128_m);
inline void _1a911d151_do(_1a9116c82_exprOptimizer* _self_);
inline void _1a911ee22_pushVar(jule::Ptr<_1a911e97c_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1a7c3255d_Type> _2442_kind);
inline jule::Bool _1a9120263_removeVar(_1a911e97c_dynamic* _self_, jule::Uintptr _4925_var);
inline jule::Bool _1a912065e_isFits(_1a911e97c_dynamic* _self_, jule::Uintptr _6422_var, jule::Ptr<_1a7c3255d_Type> _6436_kind);
inline void _1a9122d8c_removeDeads(_1a91225a6_data* _self_, jule::Ptr<_1a91225a6_data>* _4228_other);
inline _1a91220ab_dataCheckpoint _1a9123123_getCheckpoint(_1a91225a6_data* _self_);
inline _1a91220ab_dataCheckpoint _1a91233a9_getMutCheckpoint(_1a91225a6_data* _self_);
inline void _1a9123662_loadCheckpoint(_1a91225a6_data* _self_, _1a91220ab_dataCheckpoint _8534_c);
inline void _1a9124d06_pushVar(_1a9124861_boundary* _self_, jule::Uintptr _2523_var, jule::Any _2541_maxSize);
inline jule::Bool _1a9125147_removeVar(_1a9124861_boundary* _self_, jule::Uintptr _5825_var);
inline jule::Bool _1a9125543_fitsMaxSize(_1a9124861_boundary* _self_, jule::Uintptr _7227_var, jule::Any _7241_expr);
inline jule::Ptr<_1a920ce88_Optimizer> static__1a920d450_New(jule::Ptr<_1a85e5c78_IR>* _2121_ir);
inline void _1a920d708_optimizeExpr(_1a920ce88_Optimizer* _self_, jule::Any* _2733_model);
inline void _1a920d9b1_optimizeGlobal(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7ba4eb4_Var>* _3135_v);
inline void _1a920dc69_optimizeFunction(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7a70a83_Fn>* _3737_func);
inline void _1a920e022_optimizeStruct(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7997adc_Struct> _4734_s);
inline void _1a920e2ca_optimizeGlobals(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7b62081_Package>* _6336_p);
inline void _1a920e583_optimizeFunctions(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7b62081_Package>* _7138_p);
inline void _1a920e83b_optimizeStructs(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7b62081_Package>* _7936_p);
inline void _1a920eae4_optimizePackage(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7b62081_Package>* _9236_p);
inline void _1a920ece2_Optimize(_1a920ce88_Optimizer* _self_);
inline _1aa889ee8_Time static__1aa88a3d3_Unix(jule::U64 _9117_sec);
inline _1aa889ee8_Time static__1aa88a5e2_Now(void);
inline _1aa889822_AbsTime _1aa88bcca_Abs(_1aa889ee8_Time* _self_);
inline jule::Ptr<_1a92120ad_scopeCoder> static__1a9212795_new(jule::Ptr<_1aa897544_ObjectCoder>* _3721_oc);
inline void _1baa43b0e_iterHead(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2e0b4_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin);
inline void _1a9212e6b_rangeIndexIter(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2e0b4_RangeIter>* _9336_it);
inline void _1a9213224_rangeHashmapIter(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2e0b4_RangeIter>* _16038_it);
inline void _1a92134cc_strRuneIter(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a69a4e4c_StrRuneIter> _24132_it);
inline void _1a9213785_ifCase(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2c612_If> _35327_i);
inline void _1a9213a3d_conditional(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2cd2c_Conditional> _36232_c);
inline void _1a9213ce6_infIter(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2d129_InfIter> _38228_it);
inline void _1a921409e_whileIter(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2d5d0_WhileIter> _39930_it);
inline void _1a9214357_rangeIter(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2e0b4_RangeIter> _43830_it);
inline void _1a9214610_cont(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2e3b1_ContSt> _45121_c);
inline void _1a92148b8_label(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2ec41_Label> _45622_l);
inline void _1a9214b71_gotoSt(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b303a1_GotoSt> _46123_gt);
inline void _1a9214e29_postfix(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b3077a_Postfix> _46628_p);
inline void _1a92151d2_assignLeft(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Any* _47332_model);
inline void _1a921548a_shl(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b30c31_Assign> _50424_a);
inline void _1a9215743_shr(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b30c31_Assign> _51024_a);
inline void _1a92159eb_divByZeroAssign(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b30c31_Assign> _51636_a);
inline void _1a9215ca4_assign(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b30c31_Assign> _52227_a);
inline void _1a921605c_mapLookupAssign(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _55337_a);
inline void _1a9216315_multiAssignTup(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _58536_a);
inline void _1a92165bd_multiAssignFn(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _65535_a);
inline void _1a9216876_multiAssign(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b312b4_MultiAssign> _71432_a);
inline jule::Fn<void> _1a9216bb7_matchExpr(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b31c32_Match> _74030_m);
inline void _1a921702a_case(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b31c32_Match> _75025_m, jule::Ptr<_1a7b32529_Case> _75046_c);
inline void _1a92172d3_matchSt(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b31c32_Match> _82028_m);
inline void _1a921758b_fallSt(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b32c22_FallSt> _87523_f);
inline void _1a9217844_breakSt(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2e78a_BreakSt> _88024_b);
inline void _1a9217aec_setResult(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b330b8_RetSt> _88930_r);
inline void _1a9217da5_retSt(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b330b8_RetSt> _91726_r);
inline void _1a921815d_var(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7ba4eb4_Var> _95324_v);
inline void _1a9218416_mutSlicing(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a69a3bc6_MutSlicingExpr> _95931_m);
inline void _1a92186be_swap(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a69a292d_SwapExpr> _97625_m);
inline void _1a9218977_exceptionalForwarding(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a69a1e7c_ExceptionalForwardingExpr> _98442_m);
inline void _1a9218c30_st(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Any _99023_st);
inline void _1a9218ed8_scopeStmts(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2c238_Scope>* _104632_s);
inline void _1a9219291_scope(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2c238_Scope> _105526_s);
inline void _1a9219549_commonFuncScope(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7a73b41_FnIns>* _107037_f);
inline void _1a92198ac_anonFuncScope(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7a666c2_AnonFnExpr> _111034_m, jule::Str _111056_ident);
inline void _1a9219b65_funcScope(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7a73b41_FnIns> _114230_f);
inline jule::Ptr<_1a921d20c_exprCoder> static__1a921d608_new(jule::Ptr<_1aa897544_ObjectCoder>* _5021_oc);
inline void _1a921d8b1_string(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a79ea9a8_Const>* _5624_c);
inline void _1a921db69_boolean(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Bool _7124_b);
inline void _1a921dd67_nilLit(jule::Ptr<_1a921d20c_exprCoder> _self_);
inline jule::Bool _1a921e1a8_ftoaSpecialCases(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::F64* _8334_x);
inline void _1a921e461_float32(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a79ea9a8_Const>* _9725_c);
inline void _1a921e719_float64(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a79ea9a8_Const>* _11625_c);
inline void _1a921e9c2_constant(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a79ea9a8_Const> _13429_c);
inline void _1a921ede0_divByZeroBinary(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a79633b0_Token>* _15833_op, jule::Ptr<_1a7a633b1_OperandExpr>* _15857_l, jule::Ptr<_1a7a633b1_OperandExpr>* _15885_r);
inline void _1a92205d8__unsafeBinary(jule::Ptr<_1a921d20c_exprCoder> _self_, _1bc0a106b_Builder* _19735_buf, jule::Str* _19759_l, jule::Str* _19768_r, jule::Ptr<_1a7c3255d_Type>* _1988_lk, jule::Ptr<_1a7c3255d_Type>* _19830_rk, jule::U32 _19847_op, jule::Str _19862_kind);
inline void _1a9220891_unsafeBinary(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a638ab_BinaryExpr> _26633_m);
inline void _1a9220c04_shl(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a633b1_OperandExpr>* _27825_l, jule::Ptr<_1a7a633b1_OperandExpr>* _27853_r);
inline void _1a9221067_shr(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a633b1_OperandExpr>* _30625_l, jule::Ptr<_1a7a633b1_OperandExpr>* _30653_r);
inline void _1a9221320_binary(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a638ab_BinaryExpr> _33427_m);
inline void _1a92215c8_var(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7ba4eb4_Var> _35124_m);
inline void _1a9221881_structureIns(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a799a97a_StructIns> _36733_m);
inline void _1a9221b39_unary(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a63c85_UnaryExpr> _37126_m);
inline void _1a9221de2_structureLit(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a64659_StructLitExpr> _39533_m);
inline void _1a922219a_allocStructure(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a64956_AllocStructLitExpr> _43935_m);
inline void _1a9222453_possibleRefExpr(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Any _44732_expr);
inline void _1a9222871_castTraitFromTrait(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a64ed9_CastingExpr>* _46140_m, jule::Ptr<_1a7a7b297_Trait> _46167_t1, jule::Ptr<_1a7a7b297_Trait> _46189_t2);
inline void _1a9222b29_casting(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a64ed9_CastingExpr> _47428_m);
inline void _1a9222dd2_args(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6588b_FnCallExpr>* _62626_m);
inline void _1a922318a_modelForCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Any _65733_expr);
inline void _1a9223443_pushCallInf(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6588b_FnCallExpr>* _67229_m);
inline jule::Bool _1a9223784_isWrapped(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6588b_FnCallExpr>* _69531_m);
inline jule::Bool _1a9223ac5_writeReceiver(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Any _72434_m);
inline void _1a9223d7d_pureFuncCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6588b_FnCallExpr>* _73834_m);
inline void _1a9224136_coFuncCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6588b_FnCallExpr>* _83232_m);
inline void _1a9224499_writeUseExpr(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a73b41_FnIns>* _91034_f, jule::Ptr<_1a7bed89d_Data> _91055_d);
inline void _1a922480c_funcCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6588b_FnCallExpr> _93129_m, jule::Bool _93151_ignoreExceptional);
inline void _1a9224ab5_slice(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a65c65_SliceExpr> _101426_m);
inline void _1a9224d6d_indexing(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6621b_IndexingExpr> _104329_m);
inline void _1a9225126_unsafeIndexing(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a42c0_UnsafeIndexingExpr> _109435_m);
inline void _1a92253ce_anonFunc(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a666c2_AnonFnExpr> _111129_m);
inline void _1a9225687_mapExpr(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a66e75_MapExpr> _114228_m);
inline void _1a9225940_slicing(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a67508_SlicingExpr> _117728_m);
inline void _1a9225be8_traitSub(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a67a8b_TraitSubIdentExpr> _119329_m);
inline void _1a9225ea1_structureSub(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6842c_StructSubIdentExpr> _120933_m);
inline void _1a9226259_array(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a68b9c_ArrayExpr> _121826_m);
inline void _1a9226512_funcInsCommon(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a73b41_FnIns> _126834_m);
inline void _1a92267ba_funcIns(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a73b41_FnIns> _127528_m);
inline void _1a9226a73_tuple(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a68e99_TupleExpr> _128626_m);
inline void _1a9226d2b_newCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6996c_BuiltinNewCallExpr> _129728_m);
inline void _1a92270d4_printCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a69296_BuiltinPrintCallExpr> _130930_m);
inline void _1a922738c_printlnCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a69593_BuiltinPrintlnCallExpr> _131832_m);
inline void _1a9227645_panicCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a69d46_BuiltinPanicCallExpr> _132730_m);
inline void _1a92278ed_errorCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6b94c_BuiltinErrorCallExpr> _133530_m);
inline void _1a9227ba6_copyCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6b573_BuiltinCopyCallExpr> _136729_m);
inline void _1a9227e5e_lenCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6a9c3_BuiltinLenCallExpr> _137528_m);
inline void _1a9228217_capCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6acc0_BuiltinCapCallExpr> _139128_m);
inline void _1a92284c0_deleteCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6b199_BuiltinDeleteCallExpr> _139631_m);
inline void _1a9228778_makeCallSlice(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6a2ec_BuiltinMakeCallExpr>* _142035_m);
inline void _1a9228a31_makeCallStr(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6a2ec_BuiltinMakeCallExpr>* _144433_m);
inline void _1a9228cd9_makeCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6a2ec_BuiltinMakeCallExpr> _145529_m);
inline void _1a9229092_pushToSlice(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a4699_PushToSliceExpr> _146332_m);
inline void _1a922934a_appendToSlice(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a4a73_AppendToSliceExpr> _152334_m);
inline void _1a9229603_appendCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6a6c6_BuiltinAppendCallExpr> _153131_m);
inline void _1a92298ab_sizeof(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6bc49_SizeofExpr> _153927_m);
inline void _1a9229b64_alignof(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6c3ed_AlignofExpr> _154528_m);
inline void _1a9229e1c_runeLit(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6c5da_RuneExpr> _155124_m);
inline void _1a922a1c5_structureStatic(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a687c3_StructStaticIdentExpr> _156536_m);
inline void _1a922a47d_backendEmit(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6c95e_BackendEmitExpr> _156932_m);
inline void _1a922a736_free(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6cc5b_FreeExpr> _158525_m);
inline void _1a922a9de_strComp(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a3643_StrCompExpr> _159428_m);
inline void _1a922ac97_emptyCompare(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a2d07_EmptyCompareExpr> _161033_m);
inline void _1a922b050_unsafeDeref(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a5249_UnsafeDerefExpr> _161932_m);
inline void _1a922b308_unsafeCasting(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a5777_UnsafeCastingExpr> _163034_m);
inline void _1a922b5b1_strConcat(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a2587_StrConcatExpr> _164730_m);
inline void _1a922b869_strFromBytes(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a1ba2_StrFromBytes> _166933_m);
inline void _1a922bb22_model(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Any _167526_m);
inline jule::Bool _1a922be63_handleFieldByDefault(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7999d53_FieldIns>* _178142_f);
inline void _1a922c21b_initStructLit(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a799a97a_StructIns>* _180235_s);
inline void _1a922c4c4_fillCollectionByDefault(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7c3255d_Type>* _182445_elem);
inline void _1a922c77c_initCollection(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7c3255d_Type>* _183936_elem);
inline void _1a922ca35_initArray(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7c42b89_Arr>* _185331_arr);
inline void _1a922ccdd_initExpr(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7c3255d_Type> _186729_t);
inline jule::Ptr<_1a92308d4_TestCoder> static__1a9230d8a_New(jule::Ptr<_1aa897544_ObjectCoder>* _2021_oc);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a9231121_findTestingPackage(jule::Ptr<_1a92308d4_TestCoder> _self_);
inline void _1a92313c9_appendTest(jule::Ptr<_1a92308d4_TestCoder> _self_, jule::Ptr<_1a7a73b41_FnIns> _3531_f);
inline void _1a9231682_appendPackageTests(jule::Ptr<_1a92308d4_TestCoder> _self_, jule::Ptr<_1a7b62081_Package>* _5040_p);
inline jule::Bool _1a9231918_readyTestingPackage(jule::Ptr<_1a92308d4_TestCoder> _self_);
inline void _1a9231b16_callTmReset(jule::Ptr<_1a92308d4_TestCoder> _self_);
inline void _1a9231d14_callTmFailed(jule::Ptr<_1a92308d4_TestCoder> _self_);
inline void _1a9232012_callTmSkipped(jule::Ptr<_1a92308d4_TestCoder> _self_);
inline void _1a9232210_Serialize(jule::Ptr<_1a92308d4_TestCoder> _self_);
inline void static__1a9233a6e_writeIdentTo(_1bc0a106b_Builder* _2630_buf, jule::Str* _2654_ident);
inline void static__1a9233e15_toOut(_1bc0a106b_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr);
inline void static__1a9234366_toLocal(_1bc0a106b_Builder* _6925_buf, jule::I32 _6948_row, jule::I32 _6958_col, jule::Str* _6969_ident);
inline void static__1a9234652_func(_1bc0a106b_Builder* _7722_buf, jule::Ptr<_1a7a70a83_Fn>* _7750_f);
inline void static__1a923493d_funcIns(_1bc0a106b_Builder* _9525_buf, jule::Ptr<_1a7a73b41_FnIns>* _9553_f);
inline void static__1a9234c29_traitDecl(_1bc0a106b_Builder* _11027_buf, jule::Ptr<_1a7a7b297_Trait> _11050_t);
inline void static__1a9235015_param(_1bc0a106b_Builder* _11423_buf, jule::Ptr<_1a7a6e0ae_Param>* _11447_p);
inline void static__1a9235301_structure(_1bc0a106b_Builder* _12927_buf, jule::Ptr<_1a7997adc_Struct>* _12951_s);
inline void static__1a92355dc_structureIns(_1bc0a106b_Builder* _14030_buf, jule::Ptr<_1a799a97a_StructIns>* _14054_s);
inline void static__1a92358c8_field(_1bc0a106b_Builder* _14823_buf, jule::Ptr<_1a7996800_Field>* _14847_f);
inline void static__1a9235bb4_var(_1bc0a106b_Builder* _15821_buf, jule::Ptr<_1a7ba4eb4_Var> _15848_v);
inline void static__1a9235ea0_iterBegin(_1bc0a106b_Builder* _18527_buf, jule::Uintptr _18550_it);
inline void static__1a923628b_iterEnd(_1bc0a106b_Builder* _19025_buf, jule::Uintptr _19048_it);
inline void static__1a9236577_iterNext(_1bc0a106b_Builder* _19526_buf, jule::Uintptr _19549_it);
inline void static__1a9236863_label(_1bc0a106b_Builder* _20023_buf, jule::Uintptr _20046_u);
inline void static__1a9236b4e_matchEnd(_1bc0a106b_Builder* _20526_buf, jule::Uintptr _20549_m);
inline void static__1a9236e3a_caseBegin(_1bc0a106b_Builder* _21027_buf, jule::Uintptr _21050_c);
inline jule::Ptr<_1aa897544_ObjectCoder> static__1aa8979a6_New(jule::Ptr<_1a85e5c78_IR>* _11921_ir, _1aa894c8e_SerializationInfo _11935_info);
inline void _1aa897c5e_write(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Str _13222_s);
inline void _1aa898017_writeBytes(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Slice<jule::U8> _13627_b);
inline void _1aa898215_addIndent(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa898413_doneIndent(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa898611_indent(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline jule::I32 _1aa898952_findAnyType(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7c3255d_Type>* _15533_t);
inline jule::I32 _1aa898c93_pushCoSpawn(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a73b41_FnIns> _16432_f);
inline jule::I32 _1aa8990d4_pushDealloc(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7c3255d_Type> _26732_t);
inline jule::Str _1aa899425_pushAnonFn(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a666c2_AnonFnExpr>* _28332_m);
inline jule::I32 _1aa899766_pushAnyType(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7c3255d_Type> _32532_t);
inline void _1aa899a1e_pushResultIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a73b41_FnIns>* _42535_f);
inline void _1aa899cc7_pushResult(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a70a83_Fn>* _44632_f);
inline void _1aa89a13a_pushAndWriteMaskMapper(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a7b297_Trait> _45943_t1, jule::Ptr<_1a7a7b297_Trait> _45965_t2);
inline void _1aa89a3e3_locInfo(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a79633b0_Token>* _51025_t);
inline void _1aa89a5e1_head(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa89a899_links(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Bool _57722_std);
inline void _1aa89ab52_prepareStructure(_1aa897544_ObjectCoder* _self_, jule::Ptr<_1a7997adc_Struct>* _60037_s);
inline void _1aa89ad50_prepareStructures(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa89b108_structurePlainDecl(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7997adc_Struct>* _63140_s);
inline void _1aa89b306_structurePlainDecls(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa89b5ae_fieldDecl(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7999d53_FieldIns>* _64731_f);
inline void _1aa89b9cc_structureOperatorEq(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Str _65436_ident, jule::Ptr<_1a799a97a_StructIns>* _65453_s, jule::Bool _65474_decl);
inline void _1aa89bd40_structureOperators(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a799a97a_StructIns>* _72240_s, jule::Bool _72261_decl);
inline void _1aa89c0e8_structureInsDecl(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a799a97a_StructIns>* _73138_s);
inline void _1aa89c3a1_structureDecl(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7997adc_Struct>* _75135_s);
inline void _1aa89c59e_structureDecls(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa89c857_structureMethodDecls1(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7997adc_Struct>* _76643_s);
inline void _1aa89ca55_structureMethodDecls(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa89d02d_funcHead(jule::Ptr<_1aa897544_ObjectCoder> _self_, _1bc0a106b_Builder* _78630_buf, jule::Ptr<_1a7a73b41_FnIns>* _78658_f, jule::Bool _78675_ptr, jule::Str _78686_ident);
inline void _1aa89d391_funcDeclIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a73b41_FnIns>* _80533_f, jule::Bool _80550_ptr);
inline void _1aa89d704_funcDecl(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a70a83_Fn>* _81330_f, jule::Bool _81344_ptr);
inline void _1aa89d9ac_funcDeclTrait(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a70a83_Fn>* _81935_f);
inline void _1aa89dbaa_funcDecls(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa89de63_traitDataTypeMethods(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1aa8959a4_traitHash>* _84142_hash);
inline void _1aa89e161_traitDataTypes(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa89e4c4_paramIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, _1bc0a106b_Builder* _86930_buf, jule::Ptr<_1a7a729db_ParamIns>* _86958_p);
inline void _1aa89e837_paramsIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, _1bc0a106b_Builder* _87531_buf, jule::Ptr<_1a7a73b41_FnIns>* _87559_f);
inline void _1aa89eb9a_varInitExpr(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7ba4eb4_Var>* _89633_v, jule::Fn<void> _89648_init);
inline void _1aa89ee53_var(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7ba4eb4_Var> _91424_v);
inline void _1aa8a02b6_anonFuncInsDecl(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a666c2_AnonFnExpr>* _94537_m, jule::Str _94559_ident);
inline void _1aa8a0629_anonFuncIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a666c2_AnonFnExpr>* _95133_m, jule::Str _95155_ident);
inline void _1aa8a098c_funcIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a73b41_FnIns> _96128_f, jule::Str _96145_ident);
inline void _1aa8a0c45_func(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a70a83_Fn>* _97126_f);
inline void _1aa8a10a8_funcTrait(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a799a97a_StructIns>* _97727_s, jule::Ptr<_1a7a73b41_FnIns>* _97753_f);
inline __jule_tuple_x_1a7a73b41_FnIns__jule_tuple_bool _1aa8a13e9_findTraitMetMap(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a70a83_Fn>* _99237_m);
inline void _1aa8a175c_traitWrapper(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a7b297_Trait>* _100434_t, jule::Ptr<_1a7a70a83_Fn>* _100456_m);
inline void _1aa8a195a_traitWrappers(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa8a1cbd_traitDataMethods(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1aa8959a4_traitHash>* _106838_hash, jule::Ptr<_1a799a97a_StructIns> _106856_s);
inline void _1aa8a21db_traitData(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1aa8959a4_traitHash>* _108631_hash, jule::I32 _108649_i, jule::Ptr<_1a799a97a_StructIns>* _108662_s);
inline void _1aa8a23d9_traitDatas(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa8a25d7_globalDecls(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa8a27d5_decls(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa8a2a8d_structureMethods(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a799a97a_StructIns>* _114638_s);
inline void _1aa8a2d46_structureIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a799a97a_StructIns>* _115334_s);
inline void _1aa8a30ee_structure(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7997adc_Struct>* _116231_s);
inline void _1aa8a32ec_structures(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa8a34ea_funcs(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa8a37a3_pushInit(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7b62081_Package>* _120130_pkg);
inline void _1aa8a39a1_anonHashes(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa8a3b9e_initGlobals(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa8a3d9c_initCaller(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa8a409a_end(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa8a4353_buildTraitHash(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a7b297_Trait>* _127336_t);
inline void _1aa8a4551_buildTraitHashes(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa8a48b4_insertBuf(jule::Ptr<_1aa897544_ObjectCoder> _self_, _1bc0a106b_Builder* _130331_buf, jule::I32 _130354_pos);
inline void _1aa8a4ab2_implementRC(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa8a4cb0_serializeHead(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline void _1aa8a4ead_Serialize(jule::Ptr<_1aa897544_ObjectCoder> _self_);
inline jule::Str _1aa8a693d_Str(_1aa8a6564_customType* _self_);
inline jule::Bool _1aa8a6c7e_Equal(jule::Ptr<_1aa8a6564_customType> _self_, jule::Ptr<_1a7c3255d_Type> _2518_k);
inline jule::Ptr<_1aa8a717a_typeCoder> static__1aa8a76ca_new(jule::Ptr<_1aa897544_ObjectCoder>* _5021_oc);
inline void _1aa8a7a3d_toType(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _5727_buf, jule::Str _5754_id);
inline void _1aa8a7da1_prim(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _7125_buf, jule::Ptr<_1a7c3b369_Prim> _7148_p);
inline void _1aa8a8214_tuple(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _7626_buf, jule::Ptr<_1a7c4145c_Tuple> _7653_t);
inline void _1aa8a8577_asSptr(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem);
inline void _1aa8a88da_sptr(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _9525_buf, jule::Ptr<_1a7c3ed95_Sptr> _9552_sptr);
inline void _1aa8a8c4d_ptr(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _10224_buf, jule::Ptr<_1a7c4365c_Ptr> _10251_p);
inline void _1aa8a90b1_enumDecl(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _11329_buf, jule::Ptr<_1a7a7d94d_Enum> _11356_e);
inline void _1aa8a9424_typeEnumDecl(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _11833_buf, jule::Ptr<_1a7a80158_TypeEnum> _11860_e);
inline void _1aa8a9787_asSlice(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _12228_buf, jule::Ptr<_1a7c3255d_Type> _12255_elem);
inline void _1aa8a9aea_slice(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _12926_buf, jule::Ptr<_1a7c40868_Slc> _12953_s);
inline void _1aa8a9e5d_mapType(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _13428_buf, jule::Ptr<_1a7c4200c_Map> _13455_m);
inline void _1aa8aa634_structureIns(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _14733_buf, jule::Ptr<_1a799a97a_StructIns> _14760_s);
inline void _1aa8aa997_array(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _17526_buf, jule::Ptr<_1a7c42b89_Arr> _17553_a);
inline void _1aa8ab16d_paramIns(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _19829_buf, jule::Ptr<_1a7a729db_ParamIns>* _19857_p);
inline void _1aa8ab844_funcInsResult(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _23034_s, jule::Ptr<_1a7a73b41_FnIns>* _23060_f);
inline void _1aa8abba7_anonFunc(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _24829_buf, jule::Ptr<_1a7a73b41_FnIns> _24856_f);
inline void _1aa8ac01a_func(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _26925_buf, jule::Ptr<_1a7a73b41_FnIns> _26952_f);
inline void _1aa8ac37d_kind(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _27625_buf, jule::Ptr<_1a7c3255d_Type> _27652_k);
inline jule::Ptr<_1aa8aec65_resultCoder> static__1aa8b0271_new(jule::Ptr<_1aa8a717a_typeCoder>* _34421_tc);
inline void _1aa8b05d4_ptr(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _34824_s, jule::Ptr<_1a7c4365c_Ptr> _34849_p);
inline void _1aa8b0947_sptr(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _35325_s, jule::Ptr<_1a7c3ed95_Sptr> _35350_p);
inline void _1aa8b0caa_mapType(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _35828_s, jule::Ptr<_1a7c4200c_Map> _35853_p);
inline void _1aa8b111d_slice(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _36426_s, jule::Ptr<_1a7c40868_Slc> _36451_slc);
inline void _1aa8b1481_arr(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _36924_s, jule::Ptr<_1a7c42b89_Arr> _36949_arr);
inline void _1aa8b17e4_func(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _37525_s, jule::Ptr<_1a7a73b41_FnIns> _37550_f);
inline void _1aa8b1b57_tup(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _38824_s, jule::Ptr<_1a7c4145c_Tuple> _38849_tup);
inline void _1aa8b1eba_codeMut(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _39528_s, jule::Ptr<_1a7c3255d_Type>* _39554_t);
inline void _1aa8b232d_codeMut1(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _44229_s, jule::Ptr<_1a7c3255d_Type>* _44255_t);
inline jule::Slice<jule::U8> _1aa8b263b_code(_1aa8aec65_resultCoder* _self_, jule::Ptr<_1a7c3255d_Type>* _45125_t);
inline jule::Str _1baaa22ee_Name(_1baaa1e8b_Flag* _self_);
inline jule::Str _1baaa2442_What(_1baaa1e8b_Flag* _self_);
inline void _1baaa2585_Reset(_1baaa1e8b_Flag* _self_);
inline jule::I32 _1baaa26c8_Short(_1baaa1e8b_Flag* _self_);
inline jule::Str _1baaa53bd_Name(_1baaa5214_Flag* _self_);
inline jule::Str _1baaa56cb_What(_1baaa5214_Flag* _self_);
inline void _1baaa581e_Reset(_1baaa5214_Flag* _self_);
inline jule::I32 _1baaa5962_Short(_1baaa5214_Flag* _self_);
inline jule::Str _1baaa8613_Name(_1baaa8459_Flag* _self_);
inline jule::Str _1baaa8921_What(_1baaa8459_Flag* _self_);
inline void _1baaa8a64_Reset(_1baaa8459_Flag* _self_);
inline jule::I32 _1baaa8ba7_Short(_1baaa8459_Flag* _self_);
inline jule::Str _1baaab89c_Name(_1baaab6e3_Flag* _self_);
inline jule::Str _1baaabbaa_What(_1baaab6e3_Flag* _self_);
inline void _1baaabced_Reset(_1baaab6e3_Flag* _self_);
inline jule::I32 _1baaabe41_Short(_1baaab6e3_Flag* _self_);
inline jule::Str _1baaaeae2_Name(_1baaae938_Flag* _self_);
inline jule::Str _1baaaee00_What(_1baaae938_Flag* _self_);
inline void _1baab0043_Reset(_1baaae938_Flag* _self_);
inline jule::I32 _1baab0186_Short(_1baaae938_Flag* _self_);
inline jule::Ptr<_1aa924d63_FlagSet> static__1aa925182_New(void);
inline jule::Trait _1aa925638_FindFlag(_1aa924d63_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1aa925979_FindFlagShort(_1aa924d63_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1aa926051_Parse(_1aa924d63_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1baaae938_Flag> _1bae957ad_addFlagCommon(_1aa924d63_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1baaab6e3_Flag> _1bae9de8c_addFlagCommon(_1aa924d63_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1bae9327d_AddVar(_1aa924d63_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1bae9b9a1_AddVar(_1aa924d63_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1baee8a20_parseInteger(_1aa927827_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1bb00131e_parseInteger(_1aa927827_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline jule::Str _1aa928174_getData(_1aa927827_argParser* _self_);
inline jule::VoidExceptional _1aa9283e9_processFlag(_1aa927827_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1aa9286a2_singleDash(_1aa927827_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1aa92895a_doubleDash(_1aa927827_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1aa928b58_tryArg(_1aa927827_argParser* _self_);
inline jule::VoidExceptional _1aa928d56_parse(_1aa927827_argParser* _self_);
inline __jule_tuple_x_1a85e5c78_IR__jule_tuple_s_1bc0b03aa_Log static__1a85e6251_Build(jule::Str _3018_path, jule::I32 _3029_flags);
inline void _1a85e673a_appendStructs(_1a85e5c78_IR* _self_, jule::Ptr<_1a7b62081_Package>* _6830_p, jule::Slice<jule::Ptr<_1a7997adc_Struct>>* _6854_buffer);
inline jule::Slice<jule::Ptr<_1a7997adc_Struct>> _1a85e69c1_GetAllStructures(_1a85e5c78_IR* _self_);
inline void _1a85e6d34_appendGlobals(_1a85e5c78_IR* _self_, jule::Ptr<_1a7b62081_Package>* _9630_p, jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>* _9654_buffer);
inline jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _1a85e70ba_GetAllGlobals(_1a85e5c78_IR* _self_);
inline void _1a85e72b8_Order(_1a85e5c78_IR* _self_);
inline jule::Exceptional<jule::Slice<_1bc2584ba_Dir>> static__1bd437c1a_Read(jule::Str _1117_path);
inline jule::VoidExceptional static__1bd437e18_Create(jule::Str _3319_path);
inline jule::VoidExceptional static__1bd438149_Remove(jule::Str _4519_path);
inline jule::Ptr<_1bc259059_Cmd> static__1bc2594aa_New(jule::Str _3516_path);
inline jule::VoidExceptional _1bc2596a8_Spawn(_1bc259059_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1bc259b3c_Wait(_1bc259059_Cmd* _self_);
inline jule::VoidExceptional _1bc283715_spawn(_1bc259059_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1bc283b99_wait(_1bc259059_Cmd* _self_);
inline jule::I32 _1d747934c_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2);
inline __jule_tuple_i32__jule_tuple_i32 _1d7479616_EncodeRune(jule::I32 _7819_r);
inline jule::Slice<jule::U16> _1d7479957_Encode(jule::Slice<jule::I32> _8711_s);
inline jule::Slice<jule::I32> _1d7479bdd_Decode(jule::Slice<jule::U16> _11911_s);
inline jule::Slice<jule::U16> _1d747a062_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r);
inline jule::Slice<jule::U16> _1d747a32b_UTF16FromStr(jule::Str _1017_s);
inline jule::Str _1d747a606_UTF16ToStr(jule::Slice<jule::U16> _3015_s);
inline jule::Str _1d747a8c0_U16PtrToStr(jule::U16* _4623_s);
inline jule::Str _1d747b7c2_Str(jule::U8* _108_b, jule::I32 _1018_n);
inline jule::Slice<jule::U8> _1aa9745cc_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap);
inline jule::Slice<jule::U8> _1d7492909_StrBytes(jule::Str _4013_s);
inline jule::Str _1d7492b90_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _1d7492e59_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline jule::I32 _1d774742d_GetLastErrno(void);
inline jule::Uintptr _1d778d94c_GetStdHandle(jule::Uintptr _6517_stdh);
inline jule::Bool _1d778dc16_CloseHandle(jule::Uintptr _6623_stdh);
inline jule::I32 _1d778e08a_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat);
inline jule::I32 _1d778e4b9_Wopen(jule::U16* _7417_path, jule::I32 _7429_flag, jule::I32 _7440_mode);
inline jule::U32 _1d778e6c8_GetLastError(void);
inline jule::U32 _1d778ea4c_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff);
inline jule::Bool _1d77900d0_DeleteFile(jule::U16* _9422_path);
inline jule::Bool _1d7790399_CreateDirectory(jule::U16* _9927_path);
inline jule::Bool _1d7790663_RemoveDirectory(jule::U16* _10427_path);
inline jule::U32 _1d7790b4c_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1102_buff, jule::U16** _11014_fname);
inline jule::Bool _1d7790ec1_GetConsoleMode(jule::Uintptr _11519_handle, jule::I32* _11540_mode);
inline jule::Bool _1d77915cb_SetConsoleMode(jule::Uintptr _12019_handle, jule::I32 _12035_mode);
inline jule::Bool _1d7791b2b_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::U32 _12554_toWrite, jule::U32* _1267_written, void* _12621_reserved);
inline jule::Bool _1d7792115_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::U32 _13357_toRead, jule::U32* _1347_readed);
inline jule::Uintptr _1d7792698_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data);
inline jule::I32 _1d7792a1c_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data);
inline jule::I32 _1d7792cd6_FindClose(jule::Uintptr _15514_h);
inline jule::I32 _1d77a7a98_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n);
inline jule::I32 _1d77a7e72_Close(jule::I32 _2510_handle);
inline jule::I32 _1d77a8329_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n);
inline void _1d77a855a_Exit(jule::I32 _339_code);
inline __jule_tuple_i32__jule_tuple_int _1d78ac906_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _1d78acc47_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _1d78ad297_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::I32 _1d78ad561_RuneLen(jule::I32 _35212_r);
inline jule::I32 _1d78ad9e5_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r);
inline jule::Slice<jule::U8> _1d78adce2_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _1d78ae166_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I32 _1d78ae6e9_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _1d78ae9b3_RuneStart(jule::U8 _51714_b);
inline jule::I32 _1bbebb21c_LeadingZeros64(jule::U64 _5919_x);
inline jule::I32 _1bbebc163_TrailingZeros(jule::U32 _8118_x);
inline jule::I32 _1bbebca48_TrailingZeros32(jule::U32 _10320_x);
inline jule::I32 _1bbebcd12_TrailingZeros64(jule::U64 _11220_x);
inline jule::I32 _1bbec37da_Len32(jule::U32 _35014_x);
inline jule::I32 _1bbec3aa4_Len64(jule::U64 _36414_x);
inline __jule_tuple_u64__jule_tuple_u64 _1bbec4841_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1bbec614a_Mul64(jule::U64 _49710_x, jule::U64 _49718_y);
inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args);
inline jule::U64 _1d7410de9_f64bits(jule::F64 _612_f);
inline jule::I32 _1d74117e0_randInt(jule::U64 _716_seed, jule::I32 _727_max);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I32 _1d7494268_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _1bae68a6c_arrToStr(jule::Slice<jule::U8> _14216_x);
inline jule::Str _1bae5b851_structToStr(_1bc0a106b_Builder _17519_x);
inline jule::Str _1aaacc5ae_toStr(jule::Any _21613_x);
inline jule::Str _1aab19673_toStr(jule::Str _21613_x);
inline jule::Str _1aaec0e25_toStr(jule::I32 _21613_x);
inline jule::Str _1aaec7190_toStr(jule::I32 _21613_x);
inline jule::Str _1aa7692c3_toStr(jule::I32 _21613_x);
inline jule::Str _1ab6c4617_toStr(jule::I32 _21613_x);
inline jule::Str _1ab6daead_toStr(jule::U8 _21613_x);
inline jule::Str _1ab6db72d_toStr(jule::I32 _21613_x);
inline jule::Str _1ab797971_toStr(jule::I32 _21613_x);
inline jule::Str _1abb653b0_toStr(jule::I64 _21613_x);
inline jule::Str _1abb6568a_toStr(jule::U64 _21613_x);
inline jule::Str _1abb6b10d_toStr(jule::Bool _21613_x);
inline jule::Str _1abb72675_toStr(jule::F64 _21613_x);
inline jule::Str _1abc2149e_toStr(jule::F32 _21613_x);
inline jule::Str _1abc219cc_toStr(jule::I8 _21613_x);
inline jule::Str _1abc24804_toStr(jule::I16 _21613_x);
inline jule::Str _1abc32e2d_toStr(jule::U8 _21613_x);
inline jule::Str _1abc35eec_toStr(jule::U16 _21613_x);
inline jule::Str _1abc3b09b_toStr(jule::U32 _21613_x);
inline jule::Str _1abe1b8db_toStr(jule::Ptr<_1a7ba4eb4_Var> _21613_x);
inline jule::Str _1abe1dcd9_toStr(jule::Ptr<_1a7c31848_TypeAlias> _21613_x);
inline jule::Str _1abe2124d_toStr(jule::Ptr<_1a7997adc_Struct> _21613_x);
inline jule::Str _1abe214c3_toStr(jule::Ptr<_1a7a70a83_Fn> _21613_x);
inline jule::Str _1abe28035_toStr(jule::Ptr<_1a7a7b297_Trait> _21613_x);
inline jule::Str _1abe28266_toStr(jule::Ptr<_1a7a7d94d_Enum> _21613_x);
inline jule::Str _1abe2b6dc_toStr(jule::Ptr<_1a7a80158_TypeEnum> _21613_x);
inline jule::Str _1abe4d269_toStr(jule::Ptr<_1a7996800_Field> _21613_x);
inline jule::Str _1abe5e885_toStr(jule::Ptr<_1a79ea9a8_Const> _21613_x);
inline jule::Str _1abe77c99_toStr(jule::Ptr<_1a7a7cde2_EnumItem> _21613_x);
inline jule::Str _1abe88947_toStr(jule::Ptr<_1a7a6e0ae_Param> _21613_x);
inline jule::Str _1ac06e742_toStr(jule::Ptr<_1a79793b5_IdentTypeDecl> _21613_x);
inline jule::Str _1ac092611_toStr(jule::Ptr<_1a7b312b4_MultiAssign> _21613_x);
inline jule::Str _1ac09a240_toStr(jule::Ptr<_1a797dbd3_TupleExpr> _21613_x);
inline jule::Str _1ac0a745b_toStr(jule::Ptr<_1a7987758_AssignSt> _21613_x);
inline jule::Str _1ac0a8a78_toStr(jule::Ptr<_1a797d0de_Expr> _21613_x);
inline jule::Str _1ac0a8da8_toStr(jule::Ptr<_1a7b3077a_Postfix> _21613_x);
inline jule::Str _1ac0b3643_toStr(jule::Ptr<_1a7b30c31_Assign> _21613_x);
inline jule::Str _1ac0b5dd7_toStr(jule::Ptr<_1a7bed89d_Data> _21613_x);
inline jule::Str _1ac0b86e2_toStr(jule::Ptr<_1a7a6588b_FnCallExpr> _21613_x);
inline jule::Str _1ac0d250d_toStr(jule::Ptr<_1a7b2ec41_Label> _21613_x);
inline jule::Str _1ac100608_toStr(jule::Ptr<_1a7b2c238_Scope> _21613_x);
inline jule::Str _1ac109722_toStr(jule::Ptr<_1a7a6b94c_BuiltinErrorCallExpr> _21613_x);
inline jule::Str _1ac10c846_toStr(jule::Ptr<_1a7a6c95e_BackendEmitExpr> _21613_x);
inline jule::Str _1ac10ceb7_toStr(jule::Ptr<_1a7a6a6c6_BuiltinAppendCallExpr> _21613_x);
inline jule::Str _1ac10ddb9_toStr(jule::Ptr<_1a7a69296_BuiltinPrintCallExpr> _21613_x);
inline jule::Str _1ac112c25_toStr(jule::Ptr<_1a7a69593_BuiltinPrintlnCallExpr> _21613_x);
inline jule::Str _1ac11540e_toStr(jule::Ptr<_1a7a69d46_BuiltinPanicCallExpr> _21613_x);
inline jule::Str _1ac117ba3_toStr(jule::Ptr<_1a7a6b573_BuiltinCopyCallExpr> _21613_x);
inline jule::Str _1ac11dcdb_toStr(jule::Ptr<_1a7a6b199_BuiltinDeleteCallExpr> _21613_x);
inline jule::Str _1ac11cbdb_toStr(jule::Ptr<_1a7a6cc5b_FreeExpr> _21613_x);
inline jule::Str _1ac12a875_toStr(jule::Ptr<_1a7b2cd2c_Conditional> _21613_x);
inline jule::Str _1ac135c8c_toStr(jule::Ptr<_1a7b2d129_InfIter> _21613_x);
inline jule::Str _1ac137d49_toStr(jule::Ptr<_1a7b2d5d0_WhileIter> _21613_x);
inline jule::Str _1ac140e51_toStr(jule::Ptr<_1a7b2e0b4_RangeIter> _21613_x);
inline jule::Str _1ac150911_toStr(jule::Ptr<_1a798d176_WhileKind> _21613_x);
inline jule::Str _1ac15333c_toStr(jule::Ptr<_1a798da7d_RangeKind> _21613_x);
inline jule::Str _1ac2cea7e_toStr(jule::Ptr<_1a7b2e3b1_ContSt> _21613_x);
inline jule::Str _1ac2d848e_toStr(jule::Ptr<_1a7b303a1_GotoSt> _21613_x);
inline jule::Str _1ac32185c_toStr(jule::Ptr<_1a797e909_IdentExpr> _21613_x);
inline jule::Str _1ac345b28_toStr(jule::Ptr<_1a7a6621b_IndexingExpr> _21613_x);
inline jule::Str _1ac38e2d1_toStr(jule::Ptr<_1a7b31c32_Match> _21613_x);
inline jule::Str _1ac3a327e_toStr(jule::Ptr<_1a7b32c22_FallSt> _21613_x);
inline jule::Str _1ac3bd4b9_toStr(jule::Ptr<_1a7b2e78a_BreakSt> _21613_x);
inline jule::Str _1ac3c4349_toStr(jule::Ptr<_1a7b330b8_RetSt> _21613_x);
inline jule::Str _1ac3d139a_toStr(jule::Ptr<_1a7988da8_ScopeTree> _21613_x);
inline jule::Str _1ac3d29c8_toStr(jule::Ptr<_1a798bc02_VarDecl> _21613_x);
inline jule::Str _1ac3d1653_toStr(jule::Ptr<_1a7990981_TypeAliasDecl> _21613_x);
inline jule::Str _1ac3d8ca9_toStr(jule::Ptr<_1a7990167_Conditional> _21613_x);
inline jule::Str _1ac3d8da8_toStr(jule::Ptr<_1a798c84b_Iter> _21613_x);
inline jule::Str _1ac3e37ec_toStr(jule::Ptr<_1a798e331_ContSt> _21613_x);
inline jule::Str _1ac3e6668_toStr(jule::Ptr<_1a798638e_LabelSt> _21613_x);
inline jule::Str _1ac3e9270_toStr(jule::Ptr<_1a7986768_GotoSt> _21613_x);
inline jule::Str _1ac3e7d62_toStr(jule::Ptr<_1a7991751_MatchCase> _21613_x);
inline jule::Str _1ac3ea97a_toStr(jule::Ptr<_1a7986a65_FallSt> _21613_x);
inline jule::Str _1ac3edc69_toStr(jule::Ptr<_1a798de57_BreakSt> _21613_x);
inline jule::Str _1ac406337_toStr(jule::Ptr<_1a798c0cb_RetSt> _21613_x);
inline jule::Str _1ac4091a3_toStr(jule::Ptr<_1a797d9b3_UseExpr> _21613_x);
inline jule::Str _1ac4b3702_toStr(jule::Ptr<_1a7995843_Impl> _21613_x);
inline jule::Str _1ac59c489_toStr(jule::Ptr<_1a7994996_StructDecl> _21613_x);
inline jule::Str _1ac5a0e93_toStr(jule::Ptr<_1a798aa47_FnDecl> _21613_x);
inline jule::Str _1ac7126cb_toStr(jule::Ptr<_1a79951d3_TraitDecl> _21613_x);
inline jule::Str _1ac71715e_toStr(jule::Ptr<_1a7992d4b_EnumDecl> _21613_x);
inline jule::Str _1ac71a904_toStr(jule::Ptr<_1a7993cd6_TypeEnumDecl> _21613_x);
inline jule::Str _1ac7434ed_toStr(jule::Ptr<_1a7a6842c_StructSubIdentExpr> _21613_x);
inline jule::Str _1ac743ba2_toStr(jule::Ptr<_1a7a63c85_UnaryExpr> _21613_x);
inline jule::Str _1ac7752bb_toStr(jule::Ptr<_1a7a73b41_FnIns> _21613_x);
inline jule::Str _1aca0a62d_toStr(jule::Ptr<_1a797b7c4_MapTypeDecl> _21613_x);
inline jule::Str _1aca0e92e_toStr(jule::Ptr<_1a797a4d7_TupleTypeDecl> _21613_x);
inline jule::Str _1ac60cc36_toStr(jule::Ptr<_1a797b076_ArrTypeDecl> _21613_x);
inline jule::Str _1ac612b1a_toStr(jule::Ptr<_1a797a1da_SlcTypeDecl> _21613_x);
inline jule::Str _1aca0ec92_toStr(jule::Ptr<_1a797a7d4_PtrTypeDecl> _21613_x);
inline jule::Str _1aca17aad_toStr(jule::Ptr<_1a7979d55_SptrTypeDecl> _21613_x);
inline jule::Str _1acb2d6a7_toStr(jule::Ptr<_1a7980575_VariadicExpr> _21613_x);
inline jule::Str _1acb32d2c_toStr(jule::Ptr<_1a7a65c65_SliceExpr> _21613_x);
inline jule::Str _1acb51d29_toStr(jule::Ptr<_1a798280d_FieldExprPair> _21613_x);
inline jule::Str _1acb5a32c_toStr(jule::Ptr<_1a7983e19_KeyValPair> _21613_x);
inline jule::Str _1acba0c79_toStr(jule::Ptr<_1a7a68e99_TupleExpr> _21613_x);
inline jule::Str _1ac57e229_toStr(jule::Ptr<_1a7a64956_AllocStructLitExpr> _21613_x);
inline jule::Str _1acc802ed_toStr(jule::Ptr<_1a7a64ed9_CastingExpr> _21613_x);
inline jule::Str _1acc97579_toStr(jule::Ptr<_1a7a687c3_StructStaticIdentExpr> _21613_x);
inline jule::Str _1acc9a33a_toStr(jule::Ptr<_1a7981202_SubIdentExpr> _21613_x);
inline jule::Str _1ac61868c_toStr(jule::Ptr<_1a7a64659_StructLitExpr> _21613_x);
inline jule::Str _1accb01eb_toStr(jule::Ptr<_1a7a6c5da_RuneExpr> _21613_x);
inline jule::Str _1ac64010e_toStr(jule::Ptr<_1a799a97a_StructIns> _21613_x);
inline jule::Str _1aca58a88_toStr(jule::Ptr<_1a7c3255d_Type> _21613_x);
inline jule::Str _1ac86d88c_toStr(jule::Ptr<_1a7a68b9c_ArrayExpr> _21613_x);
inline jule::Str _1ac8a9422_toStr(jule::Ptr<_1a797967e_SubIdentTypeDecl> _21613_x);
inline jule::Str _1ac8ac59b_toStr(jule::Ptr<_1a798019b_UnaryExpr> _21613_x);
inline jule::Str _1ac8b4b47_toStr(jule::Ptr<_1a7978caa_TypeDecl> _21613_x);
inline jule::Str _1ac8baad7_toStr(jule::Ptr<_1a7980d28_NamespaceExpr> _21613_x);
inline jule::Str _1ac8c1b54_toStr(jule::Ptr<_1a7979a58_NamespaceTypeDecl> _21613_x);
inline jule::Str _1ac90c95e_toStr(jule::Ptr<_1a7a67508_SlicingExpr> _21613_x);
inline jule::Str _1ac97a735_toStr(jule::Ptr<_1a7984645_SliceExpr> _21613_x);
inline jule::Str _1acd36e65_toStr(jule::Ptr<_1a7a67a8b_TraitSubIdentExpr> _21613_x);
inline jule::Str _1ab242790_toStr(jule::Ptr<_1a7a66e75_MapExpr> _21613_x);
inline jule::Str _1ab255165_toStr(jule::Ptr<_1a7a666c2_AnonFnExpr> _21613_x);
inline jule::Str _1ab25bd81_toStr(jule::Ptr<_1a797d3a8_RangeExpr> _21613_x);
inline jule::Str _1ab25d4ae_toStr(jule::Ptr<_1a797e079_LitExpr> _21613_x);
inline jule::Str _1ab261b00_toStr(jule::Ptr<_1a797e453_UnsafeExpr> _21613_x);
inline jule::Str _1ab2668b3_toStr(jule::Ptr<_1a79850a2_IndexingExpr> _21613_x);
inline jule::Str _1ab26cea2_toStr(jule::Ptr<_1a7985712_SlicingExpr> _21613_x);
inline jule::Str _1ab268d16_toStr(jule::Ptr<_1a798094e_CastExpr> _21613_x);
inline jule::Str _1ab26cc1b_toStr(jule::Ptr<_1a7983138_StructLit> _21613_x);
inline jule::Str _1ab2724b2_toStr(jule::Ptr<_1a7981d18_FnCallExpr> _21613_x);
inline jule::Str _1ab275d9a_toStr(jule::Ptr<_1a79835de_BraceLit> _21613_x);
inline jule::Str _1ab27971c_toStr(jule::Ptr<_1a79816a8_BinaryExpr> _21613_x);
inline jule::Str _1acab0826_toStr(jule::Ptr<_1a7a638ab_BinaryExpr> _21613_x);
inline jule::Str _1ad19e3cb_toStr(jule::Ptr<_1a7a6996c_BuiltinNewCallExpr> _21613_x);
inline jule::Str _1ad1b4897_toStr(jule::Ptr<_1a7a6a2ec_BuiltinMakeCallExpr> _21613_x);
inline jule::Str _1ad1e8ba6_toStr(jule::Ptr<_1a7a6a9c3_BuiltinLenCallExpr> _21613_x);
inline jule::Str _1ad21342e_toStr(jule::Ptr<_1a7a6acc0_BuiltinCapCallExpr> _21613_x);
inline jule::Str _1ad25850c_toStr(jule::Ptr<_1a7a6bc49_SizeofExpr> _21613_x);
inline jule::Str _1ad26211a_toStr(jule::Ptr<_1a7a6c3ed_AlignofExpr> _21613_x);
inline jule::Str _1ad744234_toStr(jule::Ptr<_1a69a1e7c_ExceptionalForwardingExpr> _21613_x);
inline jule::Str _1ad8a37d3_toStr(jule::Ptr<_1a69a4e4c_StrRuneIter> _21613_x);
inline jule::Str _1ad8ad5ce_toStr(jule::Ptr<_1a69a3bc6_MutSlicingExpr> _21613_x);
inline jule::Str _1ad8e345a_toStr(jule::Ptr<_1a69a4a73_AppendToSliceExpr> _21613_x);
inline jule::Str _1ad8e598a_toStr(jule::Ptr<_1a69a4699_PushToSliceExpr> _21613_x);
inline jule::Str _1ad917308_toStr(jule::Ptr<_1a69a292d_SwapExpr> _21613_x);
inline jule::Str _1ad9721ed_toStr(jule::Ptr<_1a69a1ba2_StrFromBytes> _21613_x);
inline jule::Str _1ad97b746_toStr(jule::Ptr<_1a69a2d07_EmptyCompareExpr> _21613_x);
inline jule::Str _1ad97e1d8_toStr(jule::Ptr<_1a69a3643_StrCompExpr> _21613_x);
inline jule::Str _1ad98a502_toStr(jule::Ptr<_1a69a2587_StrConcatExpr> _21613_x);
inline jule::Str _1ad9b3481_toStr(jule::Ptr<_1a69a3ec3_UnsafeBinaryExpr> _21613_x);
inline jule::Str _1ad754e6a_toStr(jule::Ptr<_1a69a5249_UnsafeDerefExpr> _21613_x);
inline jule::Str _1ad712642_toStr(jule::Ptr<_1a69a3104_RefExpr> _21613_x);
inline jule::Str _1ad715aa7_toStr(jule::Ptr<_1a7a642b3_StructArgExpr> _21613_x);
inline jule::Str _1ad71d186_toStr(jule::Ptr<_1a69a5777_UnsafeCastingExpr> _21613_x);
inline jule::Str _1ad9eae36_toStr(jule::Ptr<_1a69a2213_FnCallIgnoreExceptionalExpr> _21613_x);
inline jule::Str _1ad767653_toStr(jule::Ptr<_1a69a42c0_UnsafeIndexingExpr> _21613_x);
inline jule::Str _1adb8b7e1_toStr(jule::Ptr<jule::Str> _21613_x);
inline jule::Str _1bae546c3_toStr(_1bc0a106b_Builder _21613_x);
inline jule::Str _1bae63072_toStr(jule::Slice<jule::U8> _21613_x);
inline jule::Str _1bae67a5a_toStr(jule::Str _21613_x);
inline jule::Str _1bae6b83e_toStr(jule::Str _21613_x);
inline void _1d7495412_rev(jule::Slice<jule::U8> _26512_b);
inline jule::Bool _1aaaeb622_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1aab4bcb0_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1ab8e8ae4_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1acc45219_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I32 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void __jule_panic(jule::U8* _1318_m, jule::I32 _1328_n);
inline void _1d78b0695__handleRW(jule::Slice<jule::U8>* _1115_b);
inline jule::I32 _1d78b0a5d_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf);
inline jule::I32 _1d78b0dd2_readConsole(jule::Uintptr _3023_handle, jule::Slice<jule::U8> _3048_buf);
inline jule::I32 __jule_writeStdout(jule::Slice<jule::U8> _5816_buf);
inline jule::I32 __jule_writeStderr(jule::Slice<jule::U8> _6616_buf);
inline jule::I32 __jule_readStdin(jule::Slice<jule::U8> _7418_buf);
inline jule::U32 _1a94290a5_atomicLoad(jule::U32* _3525_p, jule::I32 _3532_mo);
inline jule::U32 _1a9429270_atomicAdd(jule::U32* _4628_p, jule::U32 _4635_delta, jule::I32 _4645_mo);
inline jule::Slice<jule::Str> _1d78b7b53_args(void);
inline jule::Str _1d78b8109_executable(void);
inline jule::U32* __jule_RCNew(void);
inline jule::U32 __jule_RCLoad(jule::U32* _4019_p);
inline jule::U32 __jule_RCLoadAtomic(jule::U32* _4625_p);
inline void __jule_RCAdd(jule::U32* _5722_p);
inline void __jule_RCAddAtomic(jule::U32* _6328_p);
inline jule::Bool __jule_RCDrop(jule::U32* _7523_p);
inline jule::Bool __jule_RCDropAtomic(jule::U32* _8429_p);
inline void __jule_RCFree(jule::U32* _9219_p);
inline jule::I32 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I32 _9430_n, jule::I32* _9442_r, jule::I32* _9456_outLen);
inline jule::I32 __jule_runeCount(jule::Str _10514_s);
inline void _1d78c09c4_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Bool _1d78c1970__coSpawn(void* _1020_func, void* _1035_args);
inline jule::U64 _1bbddaee9_hash128to64(_1bbddab42_u128 _4316_sum);
inline jule::U64 _1bbddb307_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _1bbddb5c1_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _1bbddb912_shiftMix(jule::U64 _5513_z);
inline jule::U64 _1bbddbc53_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _1bbddc0c7_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _1bbddc506_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _1bbddc98a_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I32 _7532_n);
inline _1bbddab42_u128 _1bbddcd42_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I32 _10334_n, _1bbddab42_u128 _10342_seed);
inline _1bbddab42_u128 _1bbddd491_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _1bbddab42_u128 _1bbddd8c0_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _1bbddab42_u128 _1bbdddcee_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I32 _16040_n, _1bbddab42_u128 _16048_seed);
inline jule::U64 _1bbdde0b8_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _1bbeca7c0_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _1bbecaacd_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _1bbecad97_nextMatch(jule::U64* _6419_b);
inline jule::U64 _1bbecb1d8_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _1bbecb46e_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I32 _1bbecb738_numGroups(jule::I32 _7914_n);
inline jule::Array<jule::I8,8> _1bbecb947_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _1bbecbd21_splitHash(jule::U64 _9414_h);
inline jule::U32 _1bbecc11d_probeStart(jule::U64 _9815_hi, jule::I32 _9823_groups);
inline jule::U32 _1bbecc492_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline jule::I32 _1bc274b57_findLastByte(jule::U8* _2117_begin, jule::U8* _2135_end, jule::U8 _2147_b);
inline jule::I32 _1bc280008_FindByteStr(jule::Str _4416_s, jule::U8 _4424_b);
inline jule::I32 _1bc28037c_FindLastByteStr(jule::Str _5520_s, jule::U8 _5528_b);
inline jule::Str _1bc297be1_Getwd(void);
inline jule::Bool _1bd3b24e1_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1bd428106_is16(jule::Slice<_1bd426368_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1bd42847a_is32(jule::Slice<_1bd426896_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1bd428c83_isExcludingLatin(jule::Ptr<_1bd426d19_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1bd428ec5_IsUpper(jule::I32 _29512_r);
inline jule::I32 _1bd4296bd_convertCase(jule::I32 _31316_case, jule::I32 _31327_r, jule::Ptr<_1bd425db2_CaseRange> _31336_cr);
inline jule::Ptr<_1bd425db2_CaseRange> _1bd429a42_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1bd425db2_CaseRange> _33329_caseRange);
inline jule::I32 _1bd429d0b_SimpleFold(jule::I32 _37015_r);
inline jule::Str _1bd42a27e_Repeat(jule::Str _1111_s, jule::I32 _1123_n);
inline jule::Bool _1bd42a647_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1bd42a9bb_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I32 _1bd42ae72_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i);
inline jule::I32 _1bd42b2b3_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I32 _1bd42b6e2_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i);
inline jule::I32 _1bd42ba66_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I32 _1bd42d34d_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I32 _1bd42d6c2_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I32 _1bd42e0eb_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1bd42e78e_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n);
inline jule::Slice<jule::Str> _1bd42eb13_SplitAll(jule::Str _24413_s, jule::Str _24421_sub);
inline jule::Bool _1bd42ee87_Contains(jule::Str _24913_s, jule::Str _24921_sub);
inline jule::Bool _1bd430a04_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes);
inline jule::I32 _1bd430d78_Count(jule::Str _27010_s, jule::Str _27018_sub);
inline jule::Str _1bd431362_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I32 _29044_n);
inline jule::Str _1bd431791_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new);
inline jule::Str _1bd43251c_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset);
inline jule::Str _1bd432891_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset);
inline jule::Str _1bd432e9b_Trim(jule::Str _3819_s, jule::Str _38117_cutset);
inline jule::Bool _1bd4349a3_EqualFold(jule::Str _5518_s, jule::Str _5530_t);
inline jule::Bool _1bc3395ac_IsPathSep(jule::U8 _4914_c);
inline jule::Bool _1bc3398ba_isSlash(jule::U8 _5312_c);
inline jule::U8 _1bc339b84_toUpper(jule::U8 _5512_c);
inline jule::I32 _1bc33a25b_volumeNameLen(jule::Str _8318_path);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1bc33a525_cutPath(jule::Str _12012_path);
inline __jule_tuple_str__jule_tuple_bool _1bc33a7de_fullPath(jule::Str _12913_name);
inline __jule_tuple_str__jule_tuple_bool _1bc33abb8_abs(jule::Str _14612_path);
inline jule::Str _1bc33ae0a_join(jule::Slice<jule::Str> _1609_elem);
inline jule::Str _1bd435da0_Clean(jule::Str _10814_path);
inline jule::Str _1bd436477_FromSlash(jule::Str _21114_path);
inline jule::Str _1bd4367b8_Join(jule::Slice<jule::Str> _2259_elem);
inline jule::Str _1bd436a4e_Ext(jule::Str _2308_path);
inline __jule_tuple_str__jule_tuple_bool _1bd436d18_Abs(jule::Str _2458_path);
inline jule::Str _1bd4370d2_Base(jule::Str _25113_path);
inline jule::Str _1bd4374ab_Dir(jule::Str _2828_path);
inline jule::Str _1bd4376ed_VolumeName(jule::Str _30015_path);
inline void _1bc28401d_appendEscapeArg(_1bc0a106b_Builder* _10225_s, jule::Str _10246_arg);
inline jule::Str _1bc2842d7_makeCmdLine(jule::Slice<jule::Str> _16316_args);
inline jule::Exceptional<jule::Slice<jule::U16>> _1bc2846b1_createEnvBlock(jule::Slice<jule::Str> _17919_env);
inline jule::I32 _1bc284903_cmdErrorFromCode(jule::I32 _20221_code);
inline jule::I32 _1bc284b12_getLastCmdError(void);
inline jule::I32 _1bc2850c9_getLastFsErrorWindows(void);
inline jule::I32 _1bc28565c_getLastOsError(void);
inline jule::Bool _1bc28cd6d_isConsoleHandle(jule::Uintptr _9020_handle);
inline void _1bc29ae47_Exit(jule::I32 _119_code);
inline jule::Str _1bc29b1ab_Executable(void);
inline jule::Slice<jule::Str> _1bc29b376_Args(void);
inline jule::Exceptional<jule::Str> _1bc29b7d8_Getwd(void);
inline jule::I32 _1bd43d407_getLastFsError(void);
inline jule::Bool _1bc065382_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1bc06565c_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1bc065926_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1bc0b081c_Logf(jule::Str _3259_fmt, jule::Slice<jule::Any> _32522_args);
inline jule::Str _1bc0b0b2a_argToStr(jule::Any _32913_arg);
inline jule::I32 _1bc0b0de4_findNextFmt(jule::Str _34216_fmt);
inline jule::Str _1bc0b12ac_applyFmt(jule::Str _35117_fmt, jule::Slice<jule::Any> _35127_args);
inline jule::Bool _1bc0b21ae_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _1bc0b35cd_IsWindows(jule::Str _3714_os);
inline jule::Bool _1bc0b38db_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1bc0b3ba5_IsLinux(jule::Str _4312_os);
inline jule::Bool _1bc0b3ee6_IsI386(jule::Str _4611_arch);
inline jule::Bool _1bc0b427c_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1bc0b4546_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1bc0b4810_IsUnix(jule::Str _5511_os);
inline jule::Bool _1bc0b4bd9_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1bc0b4e2b_Is64Bit(jule::Str _6112_arch);
inline void _1bd4402e9_init(void);
inline jule::U32 _1a499e773_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1a499ea81_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1a499ed4a_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1a49a018b_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1a49a26ee_Frexp(jule::F64 _4714_f);
inline jule::F64 _1a49a7b66_NaN(void);
inline jule::Bool _1a49a7e74_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1a49a823d_Inf(jule::I32 _618_sign);
inline jule::Bool _1a49a8606_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1a49a88c0_normalize(jule::F64 _8214_x);
inline jule::F64 _1a49aa394_Log(jule::F64 _1118_x);
inline jule::F64 _1a49aac79_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1a49b27ec_Modf(jule::F64 _449_f);
inline jule::F64 _1a49b3105_Log2(jule::F64 _449_x);
inline jule::Str _1a49dc173_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize);
inline jule::Slice<jule::U8> _1a49dc75b_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize);
inline jule::Slice<jule::U8> _1a49dce65_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _1a49dae96_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1a49dd63b_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1a49dbae0_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt);
inline void _1a49dda59_roundShortest(_1a49ee680_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1a49dae96_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1a49de0ed_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1a49dbae0_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1a49de5d7_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1a49dbae0_decimalSlice _45637_d, jule::I32 _45654_prec);
inline jule::Slice<jule::U8> _1a49dec8b_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1a49dae96_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1a49e041d_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _1a49dae96_floatInfo* _51232_flt);
inline jule::I32 _1a49e0792_min(jule::I32 _5968_a, jule::I32 _59616_b);
inline jule::I32 _1a49e0b16_max(jule::I32 _6038_a, jule::I32 _60316_b);
inline jule::U8 _1a49e17a4_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1a42be813_ConvError _1a49e1c27_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1a49e2156_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1a49e260c_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1a49e329a_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1a49e3685_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg);
inline jule::I32 _1a49e53ac_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a49e56ba_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a49e5984_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1a49e74d0_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1a49e790e_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1a42be813_ConvError _1a49e7ea3_atofHex(_1a49dae96_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a42be813_ConvError _1a49e837c_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a42be813_ConvError _1a49e85be_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a42be813_ConvError _1a49e8943_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1a49e8cb7_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize);
inline void _1a49e95e2_ryuFtoaFixed32(_1a49dbae0_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec);
inline void _1a49e9a87_ryuFtoaFixed64(_1a49dbae0_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec);
inline void _1a49ea3c3_formatDecimal(_1a49dbae0_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec);
inline void _1a49ea89b_ryuFtoaShortest(_1a49dbae0_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1a49dae96_floatInfo* _26168_flt);
inline jule::I32 _1a49eab32_mulByLog2Log10(jule::I32 _37719_x);
inline jule::I32 _1a49eadeb_mulByLog10Log2(jule::I32 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a49eb32a_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1a49dae96_floatInfo* _3963_flt);
inline void _1a49eb979_ryuDigits(_1a49dbae0_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1a49ec0ea_ryuDigits32(_1a49dbae0_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a49ec529_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a49ec958_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q);
inline jule::Bool _1a49ecccc_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1a49ed096_divmod1e9(jule::U64 _60214_x);
inline void _1a4a00ecd_trim(_1a49ee680_decimal* _27414_a);
inline void _1a4a012b9_rightShift(_1a49ee680_decimal* _28420_a, jule::U32 _28432_k);
inline jule::Bool _1a4a01770_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s);
inline void _1a4a01a28_leftShift(_1a49ee680_decimal* _35219_a, jule::U32 _35231_k);
inline jule::Bool _1a4a01d9c_shouldRoundUp(_1a49ee680_decimal* _39919_a, jule::I32 _39931_nd);
inline jule::Str _1a4a03574_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base);
inline jule::Str _1a4a0393c_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base);
inline jule::Str _1a4a03c06_Itoa(jule::I32 _819_i);
inline jule::Str _1a4a04047_small(jule::I32 _8610_i);
inline jule::Bool _1a4a042cd_isPowerOfTwo(jule::I32 _9617_x);
inline __jule_tuple_s_1aa9372d7_byte__jule_tuple_str _1a4a04872_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline void _1a4a06225_Throw(jule::Str _910_msg);
inline jule::Bool _1a7963aec_IsUnaryOp(jule::U32 _33314_id);
inline jule::Bool _1a7963e0a_IsBinOp(jule::U32 _34312_id);
inline jule::Bool _1a7964515_IsStr(jule::Str _36310_k);
inline jule::Bool _1a796479b_IsRawStr(jule::Str _36613_k);
inline jule::Bool _1a7964a65_IsRune(jule::Str _37011_k);
inline jule::Bool _1a796544a_IsFloat(jule::Str _37912_k);
inline jule::Bool _1a7965714_IsNum(jule::Str _38710_k);
inline jule::Bool _1a7965c97_IsIgnoreIdent(jule::Str _40218_ident);
inline jule::Bool _1a7966061_IsAnonIdent(jule::Str _40516_ident);
inline jule::Bool _1a79665e4_IsSpace(jule::I32 _41812_r);
inline jule::Bool _1a7966ade_IsLetter(jule::I32 _42813_r);
inline jule::Bool _1a7967062_IsKeyword(jule::Str _44814_s);
inline jule::Bool _1a796732b_IsDecimal(jule::I32 _45814_r);
inline jule::Bool _1a79675e5_IsBinary(jule::I32 _46113_r);
inline jule::Bool _1a79678ae_IsOctal(jule::I32 _46412_r);
inline jule::Bool _1a7967b78_IsHex(jule::I32 _46710_r);
inline jule::Bool _1a7967e42_IsAssign(jule::U32 _48213_id);
inline jule::Bool _1a796820b_IsPostfixOp(jule::U32 _49416_id);
inline jule::Bool _1a79684c5_IsAssignOp(jule::U32 _50415_id);
inline _1bc0b03aa_Log _1a796bee0_makeErr(jule::I32 _10112_row, jule::I32 _10122_col, jule::Ptr<_1a7968e65_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args);
inline jule::Bool _1a796c3a8_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix);
inline jule::Str _1a796c72c_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I32 _12332_i);
inline jule::Str _1a796cae5_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I32 _15728_i);
inline jule::Str _1a796ce69_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I32 _16136_i);
inline jule::Str _1a796d2dd_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I32 _18236_i);
inline jule::Str _1a796d662_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I32 _18735_i);
inline jule::Str _1a796dae6_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I32 _19231_i);
inline jule::Str _1a796dd38_commonNum(jule::Slice<jule::U8>* _21715_txt);
inline jule::Str _1a796e102_binaryNum(jule::Slice<jule::U8>* _24015_txt);
inline jule::Bool _1a796e476_isFloatFmtE(jule::U8 _26216_b, jule::I32 _26225_i);
inline jule::Bool _1a796e7ea_isFloatFmtP(jule::U8 _26616_b, jule::I32 _26625_i);
inline jule::Bool _1a796eb6e_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I32 _27038_i);
inline jule::Bool _1a796eee3_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I32 _29133_i);
inline jule::Bool _1a7970367_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I32 _30434_i);
inline jule::Str _1a7970862_octalNum(jule::Slice<jule::U8>* _31914_txt);
inline jule::Str _1a7970a3d_hexNum(jule::Slice<jule::U8>* _36112_txt);
inline jule::Str _1a7970d90_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I32 _39428_n);
inline jule::Str _1a7971159_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt);
inline jule::Str _1a7971423_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt);
inline jule::Str _1a79716dc_hexByteEscape(jule::Slice<jule::U8>* _42219_txt);
inline jule::Str _1a79719a6_byteEscape(jule::Slice<jule::U8>* _42716_txt);
inline jule::Slice<_1bc0b03aa_Log> _1a797699a_Lex(jule::Ptr<_1a7968e65_Fileset> _80712_f, jule::I32 _80725_mode);
inline void _1a7a6103a_lshiftUnsig(_1a79ea9a8_Const* _58821_c, _1a79ea9a8_Const* _58832_x);
inline void _1a7a6136a_rshiftUnsig(_1a79ea9a8_Const* _59421_c, _1a79ea9a8_Const* _59432_x);
inline jule::Str _1a7ae60d1_RealKindOf(jule::Str _4515_kind);
inline jule::I32 _1a7ae639a_BitSizeOf(jule::Str _5914_k);
inline jule::Str _1a7ae66db_IntFromBits(jule::I32 _8716_bits);
inline jule::Str _1a7ae6972_UintFromBits(jule::I32 _10517_bits);
inline jule::Str _1a7ae6c3b_FloatFromBits(jule::I32 _12318_bits);
inline jule::Bool _1a7ae7841_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit);
inline jule::I32 _1a7ae7b0a_BitSizeOfFloat(jule::F64 _16119_x);
inline jule::I32 _1a7ae7dc4_BitSizeOfInt(jule::I64 _17717_x);
inline jule::I32 _1a7ae818d_BitSizeOfUint(jule::U64 _19718_x);
inline void _1a7ae8336_UpdateTarget(void);
inline void _1a7ae84ac_init(void);
inline jule::I64 _1a7aec071_MinI(jule::Str _6113_k);
inline jule::I64 _1a7aec37e_MaxI(jule::Str _7913_k);
inline jule::U64 _1a7aec648_MaxU(jule::Str _9713_k);
inline jule::F64 _1a7aec989_Min(jule::Str _11512_k);
inline jule::F64 _1a7aecc20_Max(jule::Str _13312_k);
inline jule::Bool _1a7aedd42_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1a7aee150_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1a7aee419_IsInt(jule::Str _4610_k);
inline jule::Bool _1a7aee75a_IsFloat(jule::Str _5112_k);
inline jule::Bool _1a7aee9e1_IsNum(jule::Str _5610_k);
inline jule::Bool _1a7aeecaa_IsSigNum(jule::Str _6113_k);
inline jule::Bool _1a7b78020_FindModuleFile(jule::Slice<_1bc2584ba_Dir>* _1420_dirents);
inline jule::Str _1a7b782ea_FindModuleFileDeep(jule::Str _2627_path);
inline jule::Slice<_1bc0b03aa_Log> _1a7b785b4_CheckModuleFile(jule::Str* _4821_path);
inline jule::Bool _1a7b78d56_IsPub(jule::Str _910_ident);
inline jule::Bool _1a7bd5126_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1a7bbbaad_ToRune(jule::Str _2015_lit);
inline jule::Str _1a7bd704b_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1a7bd738c_ToStr(jule::Str _4714_lit);
inline __jule_tuple__1aa9372d7_byte__jule_tuple_bool _1a7bd7623_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1a7bd7997_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i);
inline void _1a7bd7d3d_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i);
inline jule::I32 _1a7c9a395_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I32 _1241_i);
inline jule::Slice<jule::U8> _1a7ca1e3a_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _1a7ca2226_FmtByDefault(_1bc0a106b_Builder* _4822_buf, jule::Any* _4846_arg);
inline void _1a7ca2644_applyFmtByDefault(_1bc0a106b_Builder* _8727_buf, jule::I32* _8755_j, jule::Slice<jule::Any> _8763_args);
inline void _1a7ca2a62_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1bc0a106b_Builder* _9536_buf, jule::I32* _9564_j, jule::Slice<jule::Any> _9572_args);
inline jule::Slice<jule::U8> _1a7ca2dd6_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _1a7ca5081_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1a7a70a83_Fn> _1a76466ae_runtimeFindFn(jule::Ptr<_1a7b5e80e_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_1a7997adc_Struct> _1a7646c0e_runtimeFindStruct(jule::Ptr<_1a7b5e80e_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _1a7a75e1d_parameterUsesGenerics(jule::Ptr<_1a7a729db_ParamIns>* _40231_p, jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>* _40246_generics);
inline jule::Ptr<_1a7bed89d_Data> _1a7b24a49_buildAsComptimeMethodData(jule::Ptr<_1a7a73b41_FnIns>* _203135_f);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b24c58_findComptimePackage(jule::Ptr<_1a7b7c0bd_sema>* _203929_s);
inline jule::Ptr<_1a7bed89d_Data> _1a7b250cc_buildComptimeTypeInfoData(jule::Ptr<_1a7b7c0bd_sema>* _204535_s, jule::Ptr<_1a7c3255d_Type>* _204550_t);
inline jule::Ptr<_1a7bed89d_Data> _1a7b2541d_buildComptimeValue(jule::Ptr<_1a7bed89d_Data>* _205328_d);
inline jule::Str _1a7b28245_toStrConstraints(jule::Ptr<_1a7c30b77_InsGeneric> _14321_g);
inline jule::Bool _1a7b2860d_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a7c3255d_Type>* _15434_g);
inline jule::Bool _1a7b288c7_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1a7b34938_scopeChecker> _1a7b2b2ae_newScopeCheckerBase(jule::Ptr<_1a7b7c0bd_sema>* _3229_s, jule::Ptr<_1a7a73b41_FnIns> _3243_owner);
inline jule::Ptr<_1a7b34938_scopeChecker> _1a7b2b677_newScopeChecker(jule::Ptr<_1a7b7c0bd_sema>* _4025_s, jule::Ptr<_1a7a73b41_FnIns> _4039_owner);
inline jule::U32 _1a7b470cc_removeEqFromOp(jule::U32 _208319_op);
inline void _1a7b47385_makeComptimeRange(jule::Ptr<_1a7bed89d_Data>* _211227_d);
inline jule::Bool _1a7b4761b_canComptimeMatch(jule::Ptr<_1a7bed89d_Data>* _213526_d);
inline jule::Bool _1a7b478d5_stmtIsDef(jule::Any* _214315_stmt);
inline jule::I32 _1a7b47c59_countMatchType(jule::Ptr<_1a7b31c32_Match>* _215520_m, jule::Ptr<_1a7c3255d_Type>* _215532_t);
inline jule::Ptr<_1a7b3356e_scopeLabel> _1a7b481dd_findLabelParent(jule::Str* _217921_ident, jule::Ptr<_1a7b34938_scopeChecker> _217937_scope);
inline jule::Bool _1a7b48919_checkAssignMut(jule::Ptr<_1a7b7c0bd_sema>* _222624_s, jule::Ptr<_1a7bed89d_Data>* _222635_left, jule::Ptr<_1a7bed89d_Data> _222652_right, jule::Ptr<_1a79633b0_Token> _222666_op);
inline jule::Bool _1a7b48e03_checkAssign(jule::Ptr<_1a7b7c0bd_sema>* _223921_s, jule::Ptr<_1a7bed89d_Data>* _223936_left, jule::Ptr<_1a7bed89d_Data> _223953_right, jule::Ptr<_1a79633b0_Token> _223967_op);
inline jule::Bool _1a7b491bc_isValidAstStForNextSt(jule::Any* _225731_n);
inline jule::Bool _1a7b49486_isValidStForNextSt(jule::Any* _226824_st);
inline jule::Ptr<_1a7c3a962_TypeSym> _1a7b4e14a_buildType(jule::Ptr<_1a7978caa_TypeDecl> _6918_t);
inline jule::Ptr<_1a7beea25_Value> _1a7b4e458_buildExpr(jule::Ptr<_1a797d0de_Expr> _7818_expr);
inline jule::Ptr<_1a7c31848_TypeAlias> _1a7b4e722_buildTypeAlias(jule::Ptr<_1a7990981_TypeAliasDecl> _8723_decl);
inline jule::Ptr<_1a7996800_Field> _1a7b4ea63_buildField(jule::Ptr<_1a79940a0_FieldDecl> _9919_decl);
inline jule::Slice<jule::Ptr<_1a7996800_Field>> _1a7b4ece9_buildFields(jule::Slice<jule::Ptr<_1a79940a0_FieldDecl>>* _11021_decls);
inline jule::Ptr<_1a7997adc_Struct> _1a7b500b3_buildStruct(jule::Ptr<_1a7994996_StructDecl> _11820_decl);
inline jule::Ptr<_1a7a6e0ae_Param> _1a7b5037c_buildParam(jule::Ptr<_1a79895e5_ParamDecl> _13019_decl);
inline jule::Slice<jule::Ptr<_1a7a6e0ae_Param>> _1a7b50756_buildParams(jule::Slice<jule::Ptr<_1a79895e5_ParamDecl>>* _14121_decls);
inline jule::Ptr<_1a7a6d9e8_RetType> _1a7b50998_buildRetType(jule::Ptr<_1a797bb9d_RetTypeDecl> _14921_decl);
inline jule::Ptr<_1a7a70a83_Fn> _1a7b50c62_buildFunc(jule::Ptr<_1a798aa47_FnDecl> _15918_decl);
inline jule::Slice<jule::Ptr<_1a7a70a83_Fn>> _1a7b5102b_buildMethods(jule::Slice<jule::Ptr<_1a798aa47_FnDecl>>* _17722_decls);
inline jule::Slice<jule::Ptr<_1a7c3a962_TypeSym>> _1a7b512e5_buildTraitInherits(jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>* _18528_inherits);
inline jule::Ptr<_1a7a7b297_Trait> _1a7b515ae_buildTrait(jule::Ptr<_1a79951d3_TraitDecl> _19319_decl);
inline jule::Ptr<_1a7a7cde2_EnumItem> _1a7b51878_buildEnumItem(jule::Ptr<_1a799228a_EnumItemDecl> _20322_decl);
inline jule::Slice<jule::Ptr<_1a7a7cde2_EnumItem>> _1a7b51b42_buildEnumItems(jule::Slice<jule::Ptr<_1a799228a_EnumItemDecl>>* _21124_decls);
inline jule::Ptr<_1a7a7d94d_Enum> _1a7b5213c_buildEnum(jule::Ptr<_1a7992d4b_EnumDecl> _21918_decl);
inline jule::Ptr<_1a7a7ea81_TypeEnumItem> _1a7b52318_buildTypeEnumItem(jule::Ptr<_1a7993676_TypeEnumItemDecl> _22926_decl);
inline jule::Slice<jule::Ptr<_1a7a7ea81_TypeEnumItem>> _1a7b525b0_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a7993676_TypeEnumItemDecl>>* _23728_decls);
inline jule::Ptr<_1a7a80158_TypeEnum> _1a7b52879_buildTypeEnum(jule::Ptr<_1a7993cd6_TypeEnumDecl> _24522_decl);
inline jule::Ptr<_1a7ba4eb4_Var> _1a7b52b43_buildVar(jule::Ptr<_1a798bc02_VarDecl> _25417_decl);
inline jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _1a7b52e0c_buildVars(jule::Slice<jule::Ptr<_1a798bc02_VarDecl>> _27118_decls);
inline jule::Ptr<_1a7b29246_Impl> _1a7b531c6_buildImpl(jule::Ptr<_1a7995843_Impl> _27918_decl);
inline jule::Bool _1a7b599e6_isImplicitImport(jule::Ptr<_1a7b5e80e_ImportInfo> _79221_imp);
inline jule::Ptr<_1a7a76d86_SymTab> _1a7b5bb4c_findVarFileInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _4430_files, jule::Ptr<_1a7ba4eb4_Var>* _4449_v);
inline jule::Ptr<_1a7ba4eb4_Var> _1a7b5c0c0_findVarInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded);
inline jule::Ptr<_1a7c31848_TypeAlias> _1a7b5c4ee_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded);
inline jule::Ptr<_1a7997adc_Struct> _1a7b5c9a5_findStructInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded);
inline jule::Ptr<_1a7a70a83_Fn> _1a7b5cda1_findFnInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded);
inline jule::Ptr<_1a7a7b297_Trait> _1a7b5d225_findTraitInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _10328_files, jule::Str* _10347_ident);
inline jule::Ptr<_1a7a7d94d_Enum> _1a7b5d599_findEnumInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _11527_files, jule::Str* _11546_ident);
inline jule::Ptr<_1a7a80158_TypeEnum> _1a7b5da2d_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _12731_files, jule::Str* _12750_ident);
inline jule::Bool _1a7b6455b_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p);
inline jule::Bool _1a7b7951b_isValidModelForRef(jule::Any* _1528_m);
inline _1bc0b03aa_Log _1a7b79a49_compilerErr(jule::Ptr<_1a79633b0_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args);
inline void _1a7b79d35_appendRetVars(jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>* _6323_dest, jule::Ptr<_1a7a73b41_FnIns>* _6342_f);
inline void _1a7b7a165_appendParamVars(jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>* _9325_dest, jule::Ptr<_1a7a73b41_FnIns>* _9344_f);
inline void _1a7b7a451_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>* _15134_dest, jule::Ptr<_1a7a73b41_FnIns>* _15159_f);
inline jule::Ptr<_1a7a76d86_SymTab> _1a7b7a7c5_findFile(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _19218_files, jule::Ptr<_1a7968e65_Fileset>* _19237_handler);
inline void _1a7b7ab6b_pushSuggestion(_1bc0b03aa_Log* _20130_log, jule::Str _20148_fmt, jule::Slice<jule::Any> _20168_args);
inline void _1a7ba2e18_pushImplemented(jule::Ptr<_1a7a7b297_Trait> _277624_t, jule::Ptr<_1a7997adc_Struct>* _277640_d);
inline void _1a7ba3204_pushImplements(jule::Ptr<_1a7997adc_Struct>* _279424_s, jule::Ptr<_1a7a7b297_Trait> _279440_t);
inline void _1a7ba3655_pushRuntimeToStr(jule::Ptr<_1a7b7c0bd_sema>* _281226_s, jule::Ptr<_1a7c3255d_Type>* _281241_t, jule::Ptr<_1a79633b0_Token>* _281256_token, jule::Ptr<_1a7b4c786_ReferenceStack> _28136_refers);
inline jule::Bool _1a7ba391e_isValidImpAlias(jule::Str _282824_alias);
inline jule::Bool _1a7bd848c_traitHasReferenceReceiver(jule::Ptr<_1a7a7b297_Trait>* _1631_t);
inline jule::Bool _1a7bd8855_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1a7bed89d_Data>* _3133_d);
inline jule::Bool _1a7bd8bc9_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1a7bed89d_Data>* _3630_d);
inline jule::Bool _1a7bd9092_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1a7bed89d_Data>* _5932_d);
inline jule::Bool _1a7bd9416_intAssignable(jule::Str _8818_kind, jule::Ptr<_1a7bed89d_Data>* _8830_d);
inline void _1a7be590b_checkMutRiskOfStructLit(jule::Ptr<_1a7b7c0bd_sema>* _93833_s, jule::Ptr<_1a7a64659_StructLitExpr>* _93844_m);
inline jule::Ptr<_1a7c3255d_Type> _1a7bebb10_lenKind(void);
inline jule::Bool _1a7bebe62_isGoodValueToInfer(jule::Ptr<_1a7bed89d_Data>* _143224_d);
inline jule::Ptr<_1a79781c7_Directive> _1a7c28cd5_findDirective(jule::Slice<jule::Ptr<_1a79781c7_Directive>>* _439523_directives, jule::Str _439554_d);
inline jule::Any _1a7c2919d_findBuiltinsImport(jule::Str* _440424_ident, jule::Ptr<_1a7b5e80e_ImportInfo> _440436_imp);
inline void _1a7c293ce_fitBitsize(jule::Ptr<_1a7bed89d_Data>* _441320_d);
inline void _1a7c2970e_makeStructLitAlloc(jule::Ptr<_1a7bed89d_Data>* _444228_d, jule::Ptr<_1a7a64659_StructLitExpr>* _444243_lit);
inline jule::Ptr<_1a7ba4eb4_Var> _1a7c29a83_buildErrorVar(jule::Ptr<_1a7b2c238_Scope>* _445323_s, jule::Ptr<_1a7981d18_FnCallExpr>* _445339_fc);
inline jule::Any _1a7c29e07_findBuiltinsSema(jule::Str* _446822_ident, jule::Ptr<_1a7b7c0bd_sema> _446838_s);
inline jule::Bool _1a7c2a1c1_isOkForShifting(jule::Ptr<_1a7bed89d_Data>* _448325_d);
inline jule::Bool _1a7c2a59a_isInstancedStruct(jule::Ptr<_1a799a97a_StructIns> _450022_s);
inline jule::Bool _1a7c2a897_isPtrArithmeticCompatible(jule::Ptr<_1a7bed89d_Data>* _450435_l, jule::Ptr<_1a7bed89d_Data>* _450450_r);
inline void _1a7c2ada3_applyRuntimeToStr(jule::Ptr<_1a7b7c0bd_sema>* _452527_s, jule::Ptr<_1a7c3255d_Type>* _452542_from, jule::Ptr<_1a7c3255d_Type>* _452560_to, jule::Ptr<_1a79633b0_Token>* _45267_token, jule::Ptr<_1a7b4c786_ReferenceStack> _452633_refers);
inline void _1a7c2b3ae_applyCastKindModel(jule::Ptr<_1a7b7c0bd_sema>* _454028_s, jule::Ptr<_1a7bed89d_Data>* _454043_d, jule::Ptr<_1a7c3255d_Type>* _454058_t, jule::Ptr<_1a79633b0_Token>* _45417_token, jule::Ptr<_1a7b4c786_ReferenceStack> _454133_refers);
inline void _1a7c2b8ba_applyCastKind(jule::Ptr<_1a7b7c0bd_sema>* _455123_s, jule::Ptr<_1a7bed89d_Data>* _455138_d, jule::Ptr<_1a7c3255d_Type>* _455153_t, jule::Ptr<_1a79633b0_Token>* _45527_token, jule::Ptr<_1a7b4c786_ReferenceStack> _455233_refers);
inline jule::Ptr<_1a7bed89d_Data> _1a7c2bac9_buildVoidData(void);
inline jule::Str _1a7c2c0b3_checkDataForIntegerIndexing(jule::Ptr<_1a7b7c0bd_sema>* _456337_s, jule::Ptr<_1a7bed89d_Data>* _456352_d, jule::Ptr<_1a79633b0_Token>* _45647_token, jule::Ptr<_1a7b4c786_ReferenceStack> _456433_refers);
inline void _1a7c2c5be_applyCastModelByEnum(jule::Ptr<_1a7b7c0bd_sema>* _458930_s, jule::Ptr<_1a7bed89d_Data>* _458945_d, jule::Ptr<_1a7a7d94d_Enum> _458959_e, jule::Ptr<_1a79633b0_Token>* _45907_token, jule::Ptr<_1a7b4c786_ReferenceStack> _459033_refers);
inline void _1a7c2cadb_castConstByType(jule::Str* _459721_t, jule::Ptr<_1a7bed89d_Data>* _459734_d);
inline void _1a7c2ccb7_updateModelToGenericIns(jule::Any* _463133_m, jule::Ptr<_1a7a73b41_FnIns>* _463147_f);
inline jule::Bool _1a7c2d13b_pushSubIdentFromExpr(jule::Any _464229_expr, jule::Ptr<_1a797967e_SubIdentTypeDecl>* _464255_t);
inline jule::Str _1a7c2d405_constoa(jule::Ptr<_1a79ea9a8_Const>* _466513_c);
inline jule::Ptr<_1a7bed89d_Data> _1a7c2d999_evalEnumStatic(jule::Ptr<_1a7b7c0bd_sema>* _467624_s, jule::Ptr<_1a7a7d94d_Enum>* _467639_enm, jule::Ptr<_1a7a7cde2_EnumItem>* _467656_item, jule::Ptr<_1a79633b0_Token>* _46777_token, jule::Ptr<_1a7b4c786_ReferenceStack> _467733_refers);
inline jule::Ptr<_1a7a64659_StructLitExpr> _1a7c2dc63_isLitBased(jule::Any* _469420_m);
inline void _1a7c2e04e_makeImplicitDeref(jule::Ptr<_1a7bed89d_Data>* _471127_d, jule::Ptr<_1a79633b0_Token> _471141_baseToken);
inline void _1ac8d0a64_updateRefer(jule::Ptr<_1a7b4c786_ReferenceStack> _472223_ref, jule::Ptr<_1a7a73b41_FnIns>* _472246_old, jule::Ptr<_1a7a73b41_FnIns>* _472259_new);
inline void _1a7c2e6d1_makeVariadic(jule::Ptr<_1a7bed89d_Data>* _473022_d, jule::Ptr<_1a7c3255d_Type> _473036_elem);
inline jule::Bool _1a7c2eb10_isVarCaptured(jule::Ptr<_1a7b34938_scopeChecker> _474318_r, jule::Ptr<_1a7b34938_scopeChecker> _474340_s, jule::Ptr<_1a7ba4eb4_Var> _474358_v);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7c2ee84_findNamespace(jule::Trait _476022_lookup, jule::Str _476038_namespace);
inline jule::Bool _1a7c4e404_kindUsesGenerics(jule::Ptr<_1a7c3255d_Type>* _178826_k, jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>* _178837_generics);
inline jule::Bool _1a7c4e7bc_hasDirective(jule::Slice<jule::Ptr<_1a79781c7_Directive>>* _179822_directives, jule::Str _179853_tag);
inline jule::Bool _1a7c4ea86_canGetPtr(jule::Ptr<_1a7bed89d_Data>* _180719_d);
inline jule::Bool _1a7c4edc7_isBuiltinStrConvertable(jule::Ptr<_1a7c3255d_Type>* _181033_t);
inline jule::Ptr<_1a7c3b369_Prim> _1a7c5015d_buildPrimType(jule::Str _181418_kind);
inline void _1a7c50933_applyImplicitCast(jule::Ptr<_1a7b7c0bd_sema>* _184227_s, jule::Ptr<_1a7c3255d_Type>* _184242_dest, jule::Ptr<_1a7bed89d_Data>* _184260_d, jule::Ptr<_1a79633b0_Token>* _18437_token, jule::Ptr<_1a7b4c786_ReferenceStack> _184333_refers);
inline jule::Bool _1a7c50d0c_validTypeForXof(jule::Ptr<_1a7c3255d_Type>* _187225_t);
inline jule::Ptr<_1a799a97a_StructIns> _1a7c51109_initNewStructType(jule::Str _187822_ident, jule::Ptr<_1a7c3255d_Type> _187838_source);
inline __jule_tuple_x_1a7a76d86_SymTab__jule_tuple_s_1bc0b03aa_Log _1a7c5410c_buildSymbols(jule::Ptr<_1a7976deb_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1a7b5378c_symBuilder> _1667_owner);
inline void _1a7c5443c_collectImplicitImports(jule::Ptr<_1a7b7c0bd_sema>* _3132_s, jule::Ptr<_1a7a76d86_SymTab>* _3147_file);
inline __jule_tuple_x_1a7b62081_Package__jule_tuple_s_1bc0b03aa_Log _1a7c5486b_analyzePackage(jule::Slice<jule::Ptr<_1a7976deb_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I32* _4570_flags);
inline __jule_tuple_x_1a7b62081_Package__jule_tuple_s_1bc0b03aa_Log _1a7c54d22_AnalyzePackage(jule::Slice<jule::Ptr<_1a7976deb_AST>> _9523_files, jule::Trait _9547_importer, jule::I32 _9567_flags);
inline jule::Ptr<_1a7a73b41_FnIns> _1a7ca59dd_findBuiltinFunc(jule::Str* _2021_ident);
inline jule::Ptr<_1a7c31848_TypeAlias> _1a7ca5e3e_primTypeAlias(jule::Str _5718_ident, jule::Ptr<_1a7c3255d_Type>* _5735_k, jule::Bool _5745_strict);
inline jule::Ptr<_1a7ba4eb4_Var> _1a7ca97e4_findBuiltinVar(jule::Str* _9820_ident);
inline jule::Ptr<_1a7c31848_TypeAlias> _1a7ca9b35_findBuiltinTypeAlias(jule::Str _14825_ident);
inline jule::Any _1a7ca9dbb_findBuiltinDef(jule::Str* _20920_ident);
inline jule::Any _1a7caa185_findBuiltinDefStdMem(jule::Str* _22526_ident);
inline jule::Any _1a7caa44e_findBuiltinDefStdComptime(jule::Str* _24131_ident);
inline jule::Any _1a7caa828_findBuiltinDefStdJuleIntegrated(jule::Str* _26637_ident);
inline jule::Any _1a7caab25_findPackageBuiltinDef(jule::Str* _28127_linkPath, jule::Str* _28143_ident);
inline jule::Ptr<_1a7bed89d_Data> _1a7caae99_builtinCallerError(jule::Ptr<_1a7c0086c_eval>* _29428_e, jule::Ptr<_1a7981d18_FnCallExpr>* _29443_fc);
inline jule::Ptr<_1a7bed89d_Data> _1a7cab3c8_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _32528_e, jule::Ptr<_1a7981d18_FnCallExpr>* _32543_fc, jule::Ptr<_1a7bed89d_Data>* );
inline jule::Ptr<_1a7bed89d_Data> _1a7cab807_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _35230_e, jule::Ptr<_1a7981d18_FnCallExpr>* _35245_fc, jule::Ptr<_1a7bed89d_Data>* _35272_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cabc36_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _36426_e, jule::Ptr<_1a7981d18_FnCallExpr>* _36441_fc, jule::Ptr<_1a7bed89d_Data>* _36468_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cac165_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _41828_e, jule::Ptr<_1a7981d18_FnCallExpr>* _41843_fc, jule::Ptr<_1a7bed89d_Data>* );
inline jule::Ptr<_1a7bed89d_Data> _1a7cac594_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _44427_e, jule::Ptr<_1a7981d18_FnCallExpr>* _44442_fc, jule::Ptr<_1a7bed89d_Data>* _44469_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cacc04_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _49529_e, jule::Ptr<_1a7981d18_FnCallExpr>* _49544_fc, jule::Ptr<_1a7bed89d_Data>* _49571_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cad0cd_callerCopySlice(jule::Ptr<_1a7bed89d_Data>* _61525_dest, jule::Ptr<_1a7c0086c_eval>* _61543_e, jule::Ptr<_1a7981d18_FnCallExpr>* _61558_fc, jule::Ptr<_1a7bed89d_Data>* _61585_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cad50c_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _64927_e, jule::Ptr<_1a7981d18_FnCallExpr>* _64942_fc, jule::Ptr<_1a7bed89d_Data>* _64969_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cad881_callerLenSlice(jule::Ptr<_1a7bed89d_Data>* _67424_expr, jule::Ptr<_1a7bed89d_Data>* _67442_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cadc05_callerLenMap(jule::Ptr<_1a7bed89d_Data>* _68222_expr, jule::Ptr<_1a7bed89d_Data>* _68240_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cae079_callerLenArr(jule::Ptr<_1a7bed89d_Data>* _69022_expr, jule::Ptr<_1a7bed89d_Data>* _69040_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cae3ed_callerLenStr(jule::Ptr<_1a7bed89d_Data>* _69722_expr, jule::Ptr<_1a7bed89d_Data>* _69740_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cae772_callerLenComptime(jule::Ptr<_1a7bed89d_Data>* _71027_d, jule::I32 _71037_n);
inline jule::Ptr<_1a7bed89d_Data> _1a7caeba1_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _71726_e, jule::Ptr<_1a7981d18_FnCallExpr>* _71741_fc, jule::Ptr<_1a7bed89d_Data>* _71768_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cb0025_callerCapSlice(jule::Ptr<_1a7bed89d_Data>* _75724_expr, jule::Ptr<_1a7bed89d_Data>* _75742_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cb0454_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _76526_e, jule::Ptr<_1a7981d18_FnCallExpr>* _76541_fc, jule::Ptr<_1a7bed89d_Data>* _76568_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cb093d_callerDeleteMap(jule::Ptr<_1a7c0086c_eval>* _78825_e, jule::Ptr<_1a7981d18_FnCallExpr>* _78840_fc, jule::Ptr<_1a7bed89d_Data>* _78867_expr, jule::Ptr<_1a7bed89d_Data>* _78885_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cb0d6c_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _81729_e, jule::Ptr<_1a7981d18_FnCallExpr>* _81744_fc, jule::Ptr<_1a7bed89d_Data>* _81771_d);
inline jule::Ptr<_1a7bed89d_Data> _1a7cb129b_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _84040_e, jule::Ptr<_1a7981d18_FnCallExpr>* _84055_fc, jule::Ptr<_1a7bed89d_Data>* );
inline jule::Ptr<_1a7bed89d_Data> _1a7cb16ca_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _87641_e, jule::Ptr<_1a7981d18_FnCallExpr>* _87656_fc, jule::Ptr<_1a7bed89d_Data>* );
inline jule::Ptr<_1a7bed89d_Data> _1a7cb1b09_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _89638_e, jule::Ptr<_1a7981d18_FnCallExpr>* _89653_fc, jule::Ptr<_1a7bed89d_Data>* );
inline jule::Ptr<_1a7bed89d_Data> _1a7cb227a_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _90838_e, jule::Ptr<_1a7981d18_FnCallExpr>* _90853_fc, jule::Ptr<_1a7bed89d_Data>* );
inline jule::Ptr<_1a7bed89d_Data> _1a7cb26a9_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _92139_e, jule::Ptr<_1a7981d18_FnCallExpr>* _92154_fc, jule::Ptr<_1a7bed89d_Data>* );
inline jule::Ptr<_1a7bed89d_Data> _1a7cb2ad8_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _93443_e, jule::Ptr<_1a7981d18_FnCallExpr>* _93458_fc, jule::Ptr<_1a7bed89d_Data>* );
inline jule::Ptr<_1a7bed89d_Data> _1a7cb3017_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _99435_e, jule::Ptr<_1a7981d18_FnCallExpr>* _99450_fc, jule::Ptr<_1a7bed89d_Data>* );
inline jule::Ptr<_1a7bed89d_Data> _1a7cb3446_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _101936_e, jule::Ptr<_1a7981d18_FnCallExpr>* _101951_fc, jule::Ptr<_1a7bed89d_Data>* );
inline jule::Ptr<_1a7bed89d_Data> _1a7cb3875_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _104433_e, jule::Ptr<_1a7981d18_FnCallExpr>* _104448_fc, jule::Ptr<_1a7bed89d_Data>* );
inline jule::Ptr<_1a7bed89d_Data> _1a7cb3ca4_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _106744_e, jule::Ptr<_1a7981d18_FnCallExpr>* _106759_fc, jule::Ptr<_1a7bed89d_Data>* _106786_d);
inline jule::Ptr<_1a855e939_FileInfo> _1a8562750_ParseFile(jule::Ptr<_1a7968e65_Fileset> _2318_f);
inline __jule_tuple_x_1a7976deb_AST__jule_tuple_s_1bc0b03aa_Log _1a85ac8bb_parseFileset(jule::Ptr<_1a7968e65_Fileset> _5521_f);
inline jule::Ptr<_1a7988da8_ScopeTree> _1a85ad24b_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1a85ad5d1_isSt(jule::Ptr<_1a79633b0_Token> _149_current, jule::Ptr<_1a79633b0_Token> _1433_prev);
inline jule::Bool _1a85ad955_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _2026_tokens, jule::I32* _2052_i);
inline __jule_tuple_int__jule_tuple_bool _1a85add1d_nextStPos(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _3415_tokens, jule::I32 _3440_start);
inline __jule_tuple_sx_1a79633b0_Token__jule_tuple_bool _1a85ae192_skipSt(jule::I32* _9616_i, jule::Slice<jule::Ptr<_1a79633b0_Token>> _9628_tokens);
inline jule::Slice<jule::Ptr<_1a85ae4c2_stmt>> _1a85ae879_splitStmts(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _11720_tokens);
inline jule::Bool _1a85c7dc0_isTypeOp(jule::U32* _87014_id);
inline jule::Bool _1a85c81cd_isTypeRange(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _87721_tokens);
inline jule::Slice<jule::Ptr<_1a79633b0_Token>> _1a85c8497_getBlockExpr(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _91022_tokens);
inline __jule_tuple_sx_1a79633b0_Token__jule_tuple_sx_1a79633b0_Token _1a85c8860_splitDelim(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _94220_tokens, jule::U32 _94245_delim);
inline jule::I32 _1a85c8b29_findLowestPrecOp(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _98122_tokens);
inline jule::Ptr<_1a797e909_IdentExpr> _1a85c8de3_buildIdentExpr(jule::Ptr<_1a79633b0_Token>* _104624_token);
inline __jule_tuple_sx_1a79633b0_Token__jule_tuple_int _1a85c91ac_getRangeExprTokens(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _105428_tokens);
inline jule::Bool _1a85c9586_isAnonFnHead(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _107718_tokens);
inline jule::Bool _1a85ca235_checkAssignTokens(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _1623_tokens);
inline _1bc0b03aa_Log _1a85cb1e2_makeErr(jule::I32 _1212_row, jule::I32 _1222_col, jule::Ptr<_1a7968e65_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args);
inline jule::Slice<jule::Ptr<_1a79633b0_Token>> _1a85cb720_range(jule::I32* _3015_i, jule::U32 _3023_open, jule::U32 _3040_close, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _3063_tokens);
inline __jule_tuple_sx_1a79633b0_Token__jule_tuple_sx_1a79633b0_Token _1a85cb9d9_rangeLast(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _6019_tokens);
inline __jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log _1a85cbe90_parts(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _9815_tokens, jule::U32 _9840_id, jule::Bool _9855_exprMust);
inline jule::U32 _1a85cc226_getCloseOfBrace(jule::U32 _12820_left);
inline _1bc0b03aa_Log _1a85cc655_compilerErr(jule::Ptr<_1a79633b0_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args);
inline void _1a85cc9eb_pushSuggestion(_1bc0b03aa_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args);
inline jule::Ptr<_1a7978caa_TypeDecl> _1a85dd963_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1a7d4a17b_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1a7d454d9_checkArch(jule::Str _2814_arg);
inline void _1a7d61956_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1a7d61bcb_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1a7d61eb7_initVars(jule::Slice<jule::Str>* _5518_vars, _1a7d61637_CompileInfo* _5532_info);
inline jule::I32 _1a7d62380_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident);
inline jule::Slice<jule::U8> _1a85e2a33_readBuff(jule::Str _1713_path);
inline _1bc0b03aa_Log _1a85e2d41_flatCompilerErr(jule::Str _2820_text);
inline jule::Ptr<_1a7a70a83_Fn> _1a7cb40c3_RuntimeFindFn(jule::Ptr<_1a7b5e80e_ImportInfo>* _723_runtime, jule::Str _751_ident);
inline jule::Ptr<_1a7997adc_Struct> _1a7cb448b_RuntimeFindStruct(jule::Ptr<_1a7b5e80e_ImportInfo>* _1627_runtime, jule::Str _1655_ident);
inline jule::Uintptr _1a7cb51b2_TypeData(jule::Any* _1414_m);
inline jule::Bool _1a7cb557a_equalConst(jule::Ptr<_1a79ea9a8_Const> _1815_l, jule::Ptr<_1a79ea9a8_Const> _1836_r);
inline jule::Bool _1a7cb58ee_equalCasting(jule::Ptr<_1a7a64ed9_CastingExpr> _3717_l, jule::Ptr<_1a7a64ed9_CastingExpr> _3740_r);
inline jule::Bool _1a7cb5cb7_equalUnary(jule::Ptr<_1a7a63c85_UnaryExpr> _4415_l, jule::Ptr<_1a7a63c85_UnaryExpr> _4436_r);
inline jule::Bool _1a7cb613b_equalIndexing(jule::Ptr<_1a7a6621b_IndexingExpr> _5118_l, jule::Ptr<_1a7a6621b_IndexingExpr> _5142_r);
inline jule::Bool _1a7cb64b0_equalBinary(jule::Ptr<_1a7a638ab_BinaryExpr> _5616_l, jule::Ptr<_1a7a638ab_BinaryExpr> _5638_r);
inline jule::Bool _1a7cb6834_EqualModels(jule::Any _6716_l, jule::Any _6731_r);
inline void _1a85e762b_pushPasses(jule::Ptr<_1a7b62081_Package>* _12820_p, jule::Slice<jule::Str>* _12844_passes);
inline jule::Slice<jule::Str> _1a85e79e4_getAllUniquePasses(jule::Ptr<_1a7b62081_Package>* _14528_pkg, jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>> _14553_uses);
inline _1a7d61637_CompileInfo _1a85e7c03_buildCompileInfo(void);
inline void _1a85e7eab_pushRuntimeToAST(jule::Ptr<_1a7976deb_AST>* _18426_f);
inline void _1a85e86c6_IterPackages(jule::Ptr<_1a85e5c78_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a7b62081_Package>*> _731_f);
inline void _1a85e8929_IterFiles(jule::Ptr<_1a7b62081_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a7a76d86_SymTab>*> _1640_f);
inline void _1a85e8c15_IterTraitMethods(jule::Ptr<_1a7a7b297_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1a7a70a83_Fn>*> _2443_f);
inline jule::Bool _1a85eae48_IsForwarded(jule::Ptr<_1a7b2c238_Scope>* _1117_s);
inline jule::Bool _1a85eb256_IsExprComesFromBind(jule::Ptr<_1a7bed89d_Data>* _2725_d);
inline jule::Bool _1a85eb520_IsAny(jule::Ptr<_1a7c3255d_Type>* _3915_t);
inline jule::Bool _1a85eb861_IsClosure(jule::Ptr<_1a7a666c2_AnonFnExpr>* _4815_m);
inline jule::Bool _1a85ebba2_IsTraitMethod(jule::Ptr<_1a799a97a_StructIns>* _5123_owner, jule::Ptr<_1a7a73b41_FnIns>* _5149_f);
inline jule::Bool _1a85ec026_IsStdPackage(jule::Str _6517_f, jule::Str _6525_p);
inline jule::Bool _1a85ec6b9_IsStructBinded(jule::Ptr<_1a799a97a_StructIns> _7919_s);
inline jule::Ptr<_1a79781c7_Directive> _1a85ece17_FindDirective(jule::Slice<jule::Ptr<_1a79781c7_Directive>>* _923_directives, jule::Str _954_tag);
inline jule::Bool _1a85ed2d0_HasDirective(jule::Slice<jule::Ptr<_1a79781c7_Directive>>* _1918_directives, jule::Str _1949_tag);
inline jule::I32 _1a85edd19_FindTraitTypeOffsetS(jule::Ptr<_1a7a7b297_Trait> _3725_t, jule::Ptr<_1a799a97a_StructIns> _3746_s);
inline jule::I32 _1a85ee18d_FindTraitTypeOffset(jule::Ptr<_1a7a7b297_Trait> _6024_t, jule::Ptr<_1a7c3255d_Type> _6045_k);
inline jule::Ptr<_1a7a73b41_FnIns> _1a85ee512_FindFnGenericInstance(jule::Ptr<_1a7a70a83_Fn>* _8431_f, jule::Slice<jule::Ptr<_1a7c3255d_Type>> _8445_generics);
inline jule::Ptr<_1a799a97a_StructIns> _1a85ee886_FindStructGenericInstance(jule::Ptr<_1a7997adc_Struct>* _10035_s, jule::Slice<jule::Ptr<_1a7c3255d_Type>> _10053_generics);
inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a85eed1a_SelectImport(jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>> _11521_imports, jule::Str _11551_linkpath);
inline jule::I32 _1a8600117_FindVar(jule::Ptr<_1a7ba4eb4_Var> _12512_v, jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _12527_vars);
inline jule::Str _1a86003d1_GetBindIdent(jule::Ptr<_1a7c3255d_Type> _13617_t);
inline jule::Bool _1ad555cb0_isOrdered(jule::Ptr<_1a7ba4eb4_Var>* _1418_t, jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _1425_s);
inline jule::Bool _1ad55b8a9_isOrdered(jule::Ptr<_1a7997adc_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a7997adc_Struct>> _1425_s);
inline void _1ad552eee_order(jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _3717_s);
inline void _1ad55372a_order(jule::Slice<jule::Ptr<_1a7997adc_Struct>> _3717_s);
inline void _1ad907480_Reverse(jule::Slice<jule::Any> _7327_s);
inline void _1ada38935_Reverse(jule::Slice<jule::U8> _7327_s);
inline void _1ad90614e_rotateLeft(jule::Slice<jule::Any> _4222_s, jule::I32 _4230_r);
inline void _1ada33732_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I32 _4230_r);
inline void _1ad903aca_rotateRight(jule::Slice<jule::Any> _4823_s, jule::I32 _4831_r);
inline void _1bae44b25_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I32 _4831_r);
inline jule::Bool _1ad900e7e_overlaps(jule::Slice<jule::Any> _5316_a, jule::Slice<jule::Any> _5324_b);
inline jule::Bool _1bae4201d_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b);
inline jule::Slice<jule::Any> _1ad8ea6b5_Insert(jule::Slice<jule::Any> _7226_s, jule::I32 _7232_i, jule::Slice<jule::Any> _7244_v);
inline jule::Slice<jule::U8> _1bae3cda4_Insert(jule::Slice<jule::U8> _7226_s, jule::I32 _7232_i, jule::Slice<jule::U8> _7244_v);
inline void _1a9206888_EliminateDefines(jule::Ptr<_1a85e5c78_IR>* _35226_ir);
inline jule::Bool _1a9206b96_isAllMethodsLive(jule::Ptr<_1a7997adc_Struct> _35821_s);
inline void _1a920aa13_eliminateDeadCodeOfScope(jule::Ptr<_1a7b2c238_Scope> _21833_s);
inline void _1a920ac88_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a7a70a83_Fn>>* _23033_funcs);
inline void _1a920aeb9_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a7997adc_Struct>>* _23937_structs);
inline void _1a920b272_eliminateFunctionsScopePackage(jule::Ptr<_1a7b62081_Package>* _24740_pkg);
inline void _1a920b470_eliminateScopePackage(jule::Ptr<_1a7b62081_Package>* _25431_pkg);
inline void _1a920b6a1_EliminateScopes(jule::Ptr<_1a85e5c78_IR>* _25925_ir);
inline void _1a69a7603_possibleNilRemove(jule::Ptr<_1a69a6624_nils>* _7527_n, jule::Any _7537_m);
inline jule::Bool _1a69a79bb_isGuaranteedNonNilExpr(jule::Ptr<_1a69a6624_nils>* _8132_n, jule::Any _8142_m);
inline jule::Bool _1a69a7c85_isNilValidType(jule::Ptr<_1a7c3255d_Type> _8923_t);
inline jule::Uintptr _1a69a80c6_getNilVar(jule::Any _9114_m);
inline jule::Bool _1a9114d07_isConstantValidConditionalCase(jule::Ptr<_1a7b2c612_If>* _100736_i);
inline jule::Bool _1a9115115_isUnreachableExpr(jule::Any* _101623_expr);
inline jule::Bool _1a91153ce_isConstantValidMatchCase(jule::Ptr<_1a7b32529_Case>* _103130_case);
inline jule::Bool _1a9115720_isUnreachableConditionalCase(jule::Ptr<_1a7b2c612_If>* _104034_i);
inline jule::Bool _1a91159a6_isUnreachableMatchCase(jule::Ptr<_1a7b32529_Case>* _104428_case);
inline __jule_tuple_bool__jule_tuple_u64 _1a911d591_checkForBitShiftOpt(jule::Ptr<_1a7a633b1_OperandExpr>* _96029_l, jule::Ptr<_1a7a633b1_OperandExpr>* _96057_r);
inline jule::Bool _1a911d959_areSameLvalueExpr(jule::Any* _97923_l, jule::Any* _97939_r);
inline void _1a9120a16_possibleDynamicRemove(jule::Ptr<_1a911e97c_dynamic>* _7631_d, jule::Any _7644_m);
inline jule::Bool _1a9120d24_isDynamicValidType(jule::Ptr<_1a7c3255d_Type> _8227_t);
inline jule::Ptr<_1a7c3255d_Type> _1a9121253_isTypeGuaranteedDynamicData(jule::Ptr<_1a911e97c_dynamic>* _8437_dy, jule::Ptr<_1a7c3255d_Type> _8455_t, jule::Any _8475_m);
inline jule::Uintptr _1a9121594_getDynamicVar(jule::Any _11218_m);
inline void _1ad7732eb__removeDeads(jule::Ptr<_1a9124861_boundary>* _2340_alive, jule::Ptr<_1a9124861_boundary>* _2366_other, jule::Uintptr _2391_invalid);
inline void _1ad7751ee__removeDeads(jule::Ptr<_1a69a6624_nils>* _2340_alive, jule::Ptr<_1a69a6624_nils>* _2366_other, jule::Uintptr _2391_invalid);
inline void _1ad778686__removeDeads(jule::Ptr<_1a911e97c_dynamic>* _2340_alive, jule::Ptr<_1a911e97c_dynamic>* _2366_other, jule::Uintptr _2391_invalid);
inline jule::Bool _1a91258c8_isValidBoundaryInfo(jule::Any _8524_m);
inline jule::I32 _1a9125c91_fitsMaxSize(jule::Slice<jule::Any> _9016_max, jule::Any _9035_expr);
inline jule::Bool _1a9126115_fitsSize(jule::Any _9913_e1, jule::Any _9929_e2);
inline void _1a9126445_possibleBoundaryRemove(jule::Ptr<_1a9124861_boundary>* _12532_b, jule::Any _12546_model);
inline jule::Bool _1a912670e_isBoundaryRiskyType(jule::Ptr<_1a7c3255d_Type> _13728_t);
inline jule::Bool _1a91269c8_isBoundaryValidType(jule::Ptr<_1a7c3255d_Type> _14228_t);
inline jule::Uintptr _1a9126c92_getBoundaryVar(jule::Any _14419_m);
inline void _1a912ab0e_PushOptLevel(jule::I32 _4117_level);
inline void _1a9210056_detectEnabled(void);
inline jule::U64 _1aa88c0d8_unix(void);
inline jule::Bool _1a9219eea_isCopyOptimizable(jule::Ptr<_1a7bed89d_Data>* _115523_expr);
inline jule::Bool _1a921a3b3_isIterCopyOptimizable(jule::Ptr<_1a7bed89d_Data>* _116627_expr, jule::Ptr<_1a7ba4eb4_Var>* _116647_v);
inline jule::Bool _1a921a7e2_captureVarHandling(jule::Ptr<_1aa897544_ObjectCoder>* _117328_oc, jule::Ptr<_1a7a666c2_AnonFnExpr>* _117351_m, jule::Ptr<_1a7ba4eb4_Var>* _117378_v);
inline jule::Str _1a922d173_decomposeCommonEsq(jule::U8 _193223_b);
inline jule::Str _1a922d481_sbtoa(jule::U8 _195910_b);
inline void _1a922d76c_cstrBytes(_1bc0a106b_Builder* _197919_s, jule::Str _197940_ctx);
inline void _1a922da9c_cstrLit(_1bc0a106b_Builder* _198517_s, jule::Str _198538_ctx);
inline void _1a922de43_ftoa(_1bc0a106b_Builder* _199114_s, jule::F64 _199135_f, jule::I32 _199143_bitsize);
inline void _1a922e22e_itoa(_1bc0a106b_Builder* _200914_s, jule::I64 _200935_x);
inline void _1a922e51a_utoa(_1bc0a106b_Builder* _202614_s, jule::U64 _202635_x);
inline void _1a922eb69_structBinary(_1bc0a106b_Builder* _204022_buf, jule::Ptr<_1a799a97a_StructIns>* _204050_s, jule::Str* _204072_l, jule::Str* _20413_r, jule::U32 _204111_op, jule::Str _204126_kind);
inline jule::Slice<jule::U8> _1aa8a5343_concatAllParts(jule::Slice<jule::Ptr<_1a79633b0_Token>> _137219_parts);
inline jule::Bool _1aa8b4231_ableToInit(jule::Ptr<_1a7c3255d_Type>* _45920_t);
inline jule::Bool _1aa8b450b_shouldInitialized(jule::Ptr<_1a7c3255d_Type>* _46627_t);
inline void _1bd4478a6_printErrorMessage(jule::Str _3022_msg);
inline void _1bd447b2b_help(jule::Slice<jule::Str>* _3510_args);
inline void _1bd447d5c_version(jule::Slice<jule::Str>* _6313_args);
inline void _1bd44806b_toolDistos(void);
inline void _1bd4481d1_toolDistarch(void);
inline void _1bd4483ce_tool(jule::Slice<jule::Str>* _9410_args);
inline void _1bd448610_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _1bd448951_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _1bd448b93_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _1bd448d3b_showInfo(void);
void _1bd448eb2_main(void);
inline void _1bd44980e_enableVtp(void);
inline void _1bd4499c9_init(void);
inline void _1aa92a275_init(void);
inline jule::Ptr<_1bc288220_File> _1aa92a53e_openOutput(jule::Str* _3016_path);
inline void _1aa92a6d7_clearObjects(void);
inline void _1aa92a9e5_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd);
inline jule::Bool _1aa92acae_isCppSourceFile(jule::Str _8620_path);
inline void _1aa92aee0_pushCompCmdClang(_1bc0a106b_Builder* _9426_cmd);
inline void _1aa92b221_pushCompCmdGcc(_1bc0a106b_Builder* _12024_cmd);
inline __jule_tuple_str__jule_tuple_str _1aa92b6a5_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1a85e5c78_IR>* _14636_ir);
inline jule::Str _1aa92b83c_getCompilePath(void);
inline void _1aa92ba6d_applyTargetIndependentOptimizations(jule::Ptr<_1a85e5c78_IR>* _19245_ir);
inline void _1aa92bc16_checkCompilerFlag(void);
inline void _1aa92be25_checkTargetArch(jule::Str _21420_arch);
inline void _1aa92c156_checkTargetOs(jule::Str _22218_os);
inline void _1aa92c387_checkTargetFlag(jule::Str* _23021_target);
inline void _1aa92c5b8_checkOptFlag(jule::Str* _25318_opt);
inline void _1aa92c981_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1aa92cb4b_checkFlags(jule::Slice<jule::Str>* _28116_args);
inline void _1aa92cd5a_setupSemaFlags(jule::I32* _33024_flags);
inline jule::Ptr<_1a85e5c78_IR> _1aa92d124_buildIr(jule::Slice<jule::Str>* _33613_args);
inline void _1aa92d355_compileCommand(jule::Slice<jule::Str>* _37624_args);


struct _1a7b00c45_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a7b000c9_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7bed89d_Data>* _1426_d, jule::I32 _1436_i);
	void(*_1a7b0043c_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7ba4eb4_Var>* _1526_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1543_keyB);
	void(*_1a7b0085a_step)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a7ba4eb4_Var>* _1633_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1650_keyB);
	jule::I32(*_1a7b00ae1_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1a7b5b80b_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a7b5a684_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1a7b5a871_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a7b5abb2_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id);
	jule::Ptr<_1a7b5e80e_ImportInfo>(*_1a7b5b003_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1a7976deb_AST__jule_tuple_s_1bc0b03aa_Log(*_1a7b5b3ee_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod);
	void(*_1a7b5b6a7_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7b5e80e_ImportInfo> _4128__0);
};

struct _1a7c32184_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a7c31bde_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1a7c32030_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other);
};

struct _1a7c5342a_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1a7b5e80e_ImportInfo>(*_1a7c51714_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> _929_selector);
	jule::Ptr<_1a7ba4eb4_Var>(*_1a7c51b10_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1a7c31848_TypeAlias>(*_1a7c5200b_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1a7997adc_Struct>(*_1a7c52407_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1a7a70a83_Fn>(*_1a7c52803_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1a7a7b297_Trait>(*_1a7c52b44_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1a7a7d94d_Enum>(*_1a7c52e85_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1a7a80158_TypeEnum>(*_1a7c532c6_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1aa923290_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1aa8e1659_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1aa8e179c_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1aa8e1978_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1aa92314c_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b03264_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b06498_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b09226_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b0ca87_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b0e3e6_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b19bc6_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b1d26d_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a85e332a_Importer>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799a97a_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a73b41_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a7b297_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a7d94d_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a80158_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b00e65_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b019c1_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b04be4_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b07e17_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b0ac2d_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b10d65_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b16e6a_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b1b645_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b2055b_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c3255d_Type>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c3b369_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c3ed95_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c40868_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c4145c_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c4200c_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c42b89_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c4365c_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8a6564_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a76d86_SymTab>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b34938_scopeChecker>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b5e80e_ImportInfo>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b62081_Package>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b7c0bd_sema>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1baaa1e8b_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1baaa5214_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1baaa8459_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1baaab6e3_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1baaae938_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7ba4eb4_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7c31848_TypeAlias>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7997adc_Struct>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a70a83_Fn>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7996800_Field>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79ea9a8_Const>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a7cde2_EnumItem>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6e0ae_Param>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b2ec41_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b2c238_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6b94c_BuiltinErrorCallExpr>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7bed89d_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6c95e_BackendEmitExpr>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6a6c6_BuiltinAppendCallExpr>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a69296_BuiltinPrintCallExpr>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a69593_BuiltinPrintlnCallExpr>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a69d46_BuiltinPanicCallExpr>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6b573_BuiltinCopyCallExpr>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6b199_BuiltinDeleteCallExpr>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6cc5b_FreeExpr>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6588b_FnCallExpr>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b2cd2c_Conditional>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b2d129_InfIter>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798d176_WhileKind>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b2d5d0_WhileIter>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798da7d_RangeKind>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b2e0b4_RangeIter>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b2e3b1_ContSt>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b303a1_GotoSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b3077a_Postfix>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b30c31_Assign>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797e909_IdentExpr>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797dbd3_TupleExpr>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6621b_IndexingExpr>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b312b4_MultiAssign>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b31c32_Match>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b32c22_FallSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b2e78a_BreakSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b330b8_RetSt>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7988da8_ScopeTree>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798bc02_VarDecl>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7990981_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797d0de_Expr>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7990167_Conditional>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798c84b_Iter>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798e331_ContSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798638e_LabelSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7986768_GotoSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7987758_AssignSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7991751_MatchCase>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7986a65_FallSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798de57_BreakSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798c0cb_RetSt>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797d9b3_UseExpr>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7995843_Impl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7994996_StructDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798aa47_FnDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79951d3_TraitDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7992d4b_EnumDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7993cd6_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797b076_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797a1da_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797a7d4_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7979d55_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797b7c4_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797a4d7_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79793b5_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7980575_VariadicExpr>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a65c65_SliceExpr>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798280d_FieldExprPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7983e19_KeyValPair>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a68e99_TupleExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6c5da_RuneExpr>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a68b9c_ArrayExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7981202_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797967e_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798019b_UnaryExpr>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7978caa_TypeDecl>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7980d28_NamespaceExpr>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7979a58_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a67508_SlicingExpr>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a64ed9_CastingExpr>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7984645_SliceExpr>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a64659_StructLitExpr>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a687c3_StructStaticIdentExpr>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a67a8b_TraitSubIdentExpr>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6842c_StructSubIdentExpr>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a66e75_MapExpr>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a666c2_AnonFnExpr>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797d3a8_RangeExpr>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797e079_LitExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797e453_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79850a2_IndexingExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7985712_SlicingExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798094e_CastExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7983138_StructLit>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7981d18_FnCallExpr>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79835de_BraceLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79816a8_BinaryExpr>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a63c85_UnaryExpr>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a638ab_BinaryExpr>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a64956_AllocStructLitExpr>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6996c_BuiltinNewCallExpr>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6a2ec_BuiltinMakeCallExpr>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6a9c3_BuiltinLenCallExpr>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6acc0_BuiltinCapCallExpr>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6bc49_SizeofExpr>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a6c3ed_AlignofExpr>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a1e7c_ExceptionalForwardingExpr>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a4e4c_StrRuneIter>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a3bc6_MutSlicingExpr>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a4699_PushToSliceExpr>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a4a73_AppendToSliceExpr>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a292d_SwapExpr>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a1ba2_StrFromBytes>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a2d07_EmptyCompareExpr>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a3643_StrCompExpr>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a2587_StrConcatExpr>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a3ec3_UnsafeBinaryExpr>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a5249_UnsafeDerefExpr>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a3104_RefExpr>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a642b3_StructArgExpr>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a5777_UnsafeCastingExpr>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a2213_FnCallIgnoreExceptionalExpr>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a69a42c0_UnsafeIndexingExpr>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator176(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator177(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator178(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator179(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator180(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator181(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator182(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1abdc1cc0_1abd75977(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7bed89d_Data>* _1426_d, jule::I32 _1436_i) {
	_1a7b04265_index(_self_.as<_1a7b03264_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1abdc1cc0_1abd8b064(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7bed89d_Data>* _1426_d, jule::I32 _1436_i) {
	_1a7b07488_index(_self_.as<_1a7b06498_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1abdc1cc0_1abd7aedd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7bed89d_Data>* _1426_d, jule::I32 _1436_i) {
	_1a7b0a29e_index(_self_.as<_1a7b09226_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1abdc1cc0_1abd80d4a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7bed89d_Data>* _1426_d, jule::I32 _1436_i) {
	_1a7b0d967_index(_self_.as<_1a7b0ca87_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1abdc1cc0_1abd87e2e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7bed89d_Data>* _1426_d, jule::I32 _1436_i) {
	_1a7b103d6_index(_self_.as<_1a7b0e3e6_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1abdc1cc0_1abda915e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7bed89d_Data>* _1426_d, jule::I32 _1436_i) {
	_1a7b1abb6_index(_self_.as<_1a7b19bc6_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1abdc1cc0_1abd9d582(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7bed89d_Data>* _1426_d, jule::I32 _1436_i) {
	_1a7b1e37e_index(_self_.as<_1a7b1d26d_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1abdc2254_1abd75977(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7ba4eb4_Var>* _1526_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1543_keyB) {
	_1a7b03e02_ready(_self_.as<_1a7b03264_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1abdc2254_1abd8b064(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7ba4eb4_Var>* _1526_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1543_keyB) {
	_1a7b07125_ready(_self_.as<_1a7b06498_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1abdc2254_1abd7aedd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7ba4eb4_Var>* _1526_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1543_keyB) {
	_1a7b09e3b_ready(_self_.as<_1a7b09226_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1abdc2254_1abd80d4a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7ba4eb4_Var>* _1526_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1543_keyB) {
	_1a7b0d604_ready(_self_.as<_1a7b0ca87_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1abdc2254_1abd87e2e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7ba4eb4_Var>* _1526_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1543_keyB) {
	_1a7b10073_ready(_self_.as<_1a7b0e3e6_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1abdc2254_1abda915e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7ba4eb4_Var>* _1526_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1543_keyB) {
	_1a7b1a853_ready(_self_.as<_1a7b19bc6_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1abdc2254_1abd9d582(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7ba4eb4_Var>* _1526_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1543_keyB) {
	_1a7b1e01b_ready(_self_.as<_1a7b1d26d_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1abdc285e_1abd75977(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a7ba4eb4_Var>* _1633_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1650_keyB) {
	_1a7b04683_step(_self_.as<_1a7b03264_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1abdc285e_1abd8b064(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a7ba4eb4_Var>* _1633_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1650_keyB) {
	_1a7b078a6_step(_self_.as<_1a7b06498_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1abdc285e_1abd7aedd(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a7ba4eb4_Var>* _1633_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1650_keyB) {
	_1a7b0a6bc_step(_self_.as<_1a7b09226_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1abdc285e_1abd80d4a(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a7ba4eb4_Var>* _1633_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1650_keyB) {
	_1a7b0dd85_step(_self_.as<_1a7b0ca87_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1abdc285e_1abd87e2e(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a7ba4eb4_Var>* _1633_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1650_keyB) {
	_1a7b10804_step(_self_.as<_1a7b0e3e6_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1abdc285e_1abda915e(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a7ba4eb4_Var>* _1633_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1650_keyB) {
	_1a7b1b0d4_step(_self_.as<_1a7b19bc6_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1abdc285e_1abd9d582(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1a7ba4eb4_Var>* _1633_keyA, jule::Ptr<_1a7ba4eb4_Var>* _1650_keyB) {
	_1a7b1e79c_step(_self_.as<_1a7b1d26d_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I32 __jule_trait_method_1abdc2e8b_1abd75977(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b04919_len(_self_.as<_1a7b03264_comptimeStructFields>().alloc);
}
inline jule::I32 __jule_trait_method_1abdc2e8b_1abd8b064(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b07b3c_len(_self_.as<_1a7b06498_comptimeStatics>().alloc);
}
inline jule::I32 __jule_trait_method_1abdc2e8b_1abd7aedd(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b0a953_len(_self_.as<_1a7b09226_comptimeEnumFields>().alloc);
}
inline jule::I32 __jule_trait_method_1abdc2e8b_1abd80d4a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b0e11b_len(_self_.as<_1a7b0ca87_comptimeParams>().alloc);
}
inline jule::I32 __jule_trait_method_1abdc2e8b_1abd87e2e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b10a8a_len(_self_.as<_1a7b0e3e6_comptimeTypeInfos>().alloc);
}
inline jule::I32 __jule_trait_method_1abdc2e8b_1abda915e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b1b36a_len(_self_.as<_1a7b19bc6_comptimeFiles>().alloc);
}
inline jule::I32 __jule_trait_method_1abdc2e8b_1abd9d582(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b1ea33_len(_self_.as<_1a7b1d26d_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1abdc32bb_1ad4d8517(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1a85e3e30_SetModPath(_self_.as<_1a85e332a_Importer>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1abdc36ea_1ad4d8517(jule::Ptr<jule::Uintptr> _self_) {
	return _1a85e41b6_GetModPath(_self_.as<_1a85e332a_Importer>().alloc);
}
inline jule::Str __jule_trait_method_1abdc3ad5_1ad4d8517(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id) {
	return _1a85e4507_ModById(_self_.as<_1a85e332a_Importer>().alloc, _2519_id);
}
inline jule::Ptr<_1a7b5e80e_ImportInfo> __jule_trait_method_1abdc4058_1ad4d8517(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1a85e4848_GetImport(_self_.as<_1a85e332a_Importer>().alloc, _3125_path);
}
inline __jule_tuple_sx_1a7976deb_AST__jule_tuple_s_1bc0b03aa_Log __jule_trait_method_1abdc45ca_1ad4d8517(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod) {
	return _1a85e4c44_ImportPackage(_self_.as<_1a85e332a_Importer>().alloc, _3729_path, _3740_updateMod);
}
inline void __jule_trait_method_1abdc4d6c_1ad4d8517(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7b5e80e_ImportInfo> _4128__0) {
	_1a85e4eec_Imported(_self_.as<_1a85e332a_Importer>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1abdc5312_1abc7c94a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a799acee_Str(_self_.as<_1a799a97a_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abc7beaa(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7a73eb5_Str(_self_.as<_1a7a73b41_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abc914b9(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7a7b693_Str(_self_.as<_1a7a7b297_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abc712ce(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7a7dd05_Str(_self_.as<_1a7a7d94d_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abc77093(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7a804cc_Str(_self_.as<_1a7a80158_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abd86aba(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b01361_Str(_self_.as<_1a7b00e65_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abd78617(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b01d78_Str(_self_.as<_1a7b019c1_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abd75977(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b0362c_Str(_self_.as<_1a7b03264_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abd8dc04(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b0509b_Str(_self_.as<_1a7b04be4_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abd8b064(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b06850_Str(_self_.as<_1a7b06498_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abd7db7d(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b082be_Str(_self_.as<_1a7b07e17_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abd7aedd(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b096dd_Str(_self_.as<_1a7b09226_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abd839da(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b0b0d5_Str(_self_.as<_1a7b0ac2d_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abd80d4a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b0cd2e_Str(_self_.as<_1a7b0ca87_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abd87e2e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b0e79d_Str(_self_.as<_1a7b0e3e6_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abca0c04(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b1121c_Str(_self_.as<_1a7b10d65_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abd915ca(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b17322_Str(_self_.as<_1a7b16e6a_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abda915e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b1a07d_Str(_self_.as<_1a7b19bc6_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abda1222(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b1b9ec_Str(_self_.as<_1a7b1b645_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abd9d582(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b1d856_Str(_self_.as<_1a7b1d26d_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abd964d1(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7b20913_Str(_self_.as<_1a7b2055b_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abc62688(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7c32959_Str(_self_.as<_1a7c3255d_Type>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abc6755b(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7c3b6dd_Str(_self_.as<_1a7c3b369_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abc6d51d(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7c4024c_Str(_self_.as<_1a7c3ed95_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abc7a9c0(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7c40d30_Str(_self_.as<_1a7c40868_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abcd4de2(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7c41814_Str(_self_.as<_1a7c4145c_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abcd37a3(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7c423b4_Str(_self_.as<_1a7c4200c_Map>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abc7945d(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7c43041_Str(_self_.as<_1a7c42b89_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1abc6e93c(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7c43a14_Str(_self_.as<_1a7c4365c_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1abdc5312_1bad940d5(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa8a693d_Str(_self_.as<_1aa8a6564_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abc7c94a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a799b140_Equal(_self_.as<_1a799a97a_StructIns>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abc7beaa(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7a74306_Equal(_self_.as<_1a7a73b41_FnIns>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abc914b9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7a7b9d4_Equal(_self_.as<_1a7a7b297_Trait>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abc712ce(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7a7e146_Equal(_self_.as<_1a7a7d94d_Enum>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abc77093(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7a8081d_Equal(_self_.as<_1a7a80158_TypeEnum>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abd86aba(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b016a2_Equal(_self_.as<_1a7b00e65_comptimeRange>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abd78617(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b021b9_Equal(_self_.as<_1a7b019c1_comptimeStructField>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abd75977(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b0396d_Equal(_self_.as<_1a7b03264_comptimeStructFields>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abd8dc04(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b053dc_Equal(_self_.as<_1a7b04be4_comptimeStatic>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abd8b064(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b06b91_Equal(_self_.as<_1a7b06498_comptimeStatics>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abd7db7d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b08610_Equal(_self_.as<_1a7b07e17_comptimeEnumField>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abd7aedd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b09a2e_Equal(_self_.as<_1a7b09226_comptimeEnumFields>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abd839da(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b0b426_Equal(_self_.as<_1a7b0ac2d_comptimeParam>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abd80d4a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b0d170_Equal(_self_.as<_1a7b0ca87_comptimeParams>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abd87e2e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b0eade_Equal(_self_.as<_1a7b0e3e6_comptimeTypeInfos>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abca0c04(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b1155d_Equal(_self_.as<_1a7b10d65_comptimeTypeInfo>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abd915ca(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b17663_Equal(_self_.as<_1a7b16e6a_comptimeValue>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abda915e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b1a3be_Equal(_self_.as<_1a7b19bc6_comptimeFiles>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abda1222(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b1bd3d_Equal(_self_.as<_1a7b1b645_comptimeFile>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abd9d582(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b1db97_Equal(_self_.as<_1a7b1d26d_comptimeDecls>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abd964d1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7b20c54_Equal(_self_.as<_1a7b2055b_comptimeDecl>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abc62688(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7c32c9a_Equal(_self_.as<_1a7c3255d_Type>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abc6755b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7c3ba2e_Equal(_self_.as<_1a7c3b369_Prim>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abc6d51d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7c4058d_Equal(_self_.as<_1a7c3ed95_Sptr>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abc7a9c0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7c41171_Equal(_self_.as<_1a7c40868_Slc>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abcd4de2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7c41b55_Equal(_self_.as<_1a7c4145c_Tuple>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abcd37a3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7c42705_Equal(_self_.as<_1a7c4200c_Map>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abc7945d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7c43382_Equal(_self_.as<_1a7c42b89_Arr>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1abc6e93c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1a7c43d55_Equal(_self_.as<_1a7c4365c_Ptr>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1abdc5664_1bad940d5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7c3255d_Type> _3918_other) {
	return _1aa8a6c7e_Equal(_self_.as<_1aa8a6564_customType>(), _3918_other);
}
inline jule::Ptr<_1a7b5e80e_ImportInfo> __jule_trait_method_1abdc5b92_1abc7e74e(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> _929_selector) {
	return _1a7a773a3_SelectPackage(_self_.as<_1a7a76d86_SymTab>().alloc, _929_selector);
}
inline jule::Ptr<_1a7b5e80e_ImportInfo> __jule_trait_method_1abdc5b92_1abd3a431(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> _929_selector) {
	return _1a7b34e11_SelectPackage(_self_.as<_1a7b34938_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1a7b5e80e_ImportInfo> __jule_trait_method_1abdc5b92_1abc80871(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> _929_selector) {
	return _1a7b5ed2b_SelectPackage(_self_.as<_1a7b5e80e_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1a7b5e80e_ImportInfo> __jule_trait_method_1abdc5b92_1abc813bb(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> _929_selector) {
	return _1a7b62559_SelectPackage(_self_.as<_1a7b62081_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1a7b5e80e_ImportInfo> __jule_trait_method_1abdc5b92_1abc7de35(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> _929_selector) {
	return _1a7b7c596_SelectPackage(_self_.as<_1a7b7c0bd_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1a7ba4eb4_Var> __jule_trait_method_1abdc690c_1abc7e74e(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a7a7779e_FindVar(_self_.as<_1a7a76d86_SymTab>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a7ba4eb4_Var> __jule_trait_method_1abdc690c_1abd3a431(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a7b3530c_FindVar(_self_.as<_1a7b34938_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a7ba4eb4_Var> __jule_trait_method_1abdc690c_1abc80871(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a7b60227_FindVar(_self_.as<_1a7b5e80e_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a7ba4eb4_Var> __jule_trait_method_1abdc690c_1abc813bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a7b62955_FindVar(_self_.as<_1a7b62081_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a7ba4eb4_Var> __jule_trait_method_1abdc690c_1abc7de35(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a7b7c992_FindVar(_self_.as<_1a7b7c0bd_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a7c31848_TypeAlias> __jule_trait_method_1abdc6e5c_1abc7e74e(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a7a77b9a_FindTypeAlias(_self_.as<_1a7a76d86_SymTab>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7c31848_TypeAlias> __jule_trait_method_1abdc6e5c_1abd3a431(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a7b35708_FindTypeAlias(_self_.as<_1a7b34938_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7c31848_TypeAlias> __jule_trait_method_1abdc6e5c_1abc80871(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a7b60623_FindTypeAlias(_self_.as<_1a7b5e80e_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7c31848_TypeAlias> __jule_trait_method_1abdc6e5c_1abc813bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a7b62d51_FindTypeAlias(_self_.as<_1a7b62081_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7c31848_TypeAlias> __jule_trait_method_1abdc6e5c_1abc7de35(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a7b7cd8d_FindTypeAlias(_self_.as<_1a7b7c0bd_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7997adc_Struct> __jule_trait_method_1abdc74ce_1abc7e74e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a7a78096_FindStruct(_self_.as<_1a7a76d86_SymTab>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7997adc_Struct> __jule_trait_method_1abdc74ce_1abd3a431(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a7b35b04_FindStruct(_self_.as<_1a7b34938_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7997adc_Struct> __jule_trait_method_1abdc74ce_1abc80871(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a7b60a1e_FindStruct(_self_.as<_1a7b5e80e_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7997adc_Struct> __jule_trait_method_1abdc74ce_1abc813bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a7b6324c_FindStruct(_self_.as<_1a7b62081_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7997adc_Struct> __jule_trait_method_1abdc74ce_1abc7de35(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a7b7d289_FindStruct(_self_.as<_1a7b7c0bd_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7a70a83_Fn> __jule_trait_method_1abdc7a51_1abc7e74e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a7a78492_FindFn(_self_.as<_1a7a76d86_SymTab>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a7a70a83_Fn> __jule_trait_method_1abdc7a51_1abd3a431(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a7b36000_FindFn(_self_.as<_1a7b34938_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a7a70a83_Fn> __jule_trait_method_1abdc7a51_1abc80871(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a7b60e1a_FindFn(_self_.as<_1a7b5e80e_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a7a70a83_Fn> __jule_trait_method_1abdc7a51_1abc813bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a7b63648_FindFn(_self_.as<_1a7b62081_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a7a70a83_Fn> __jule_trait_method_1abdc7a51_1abc7de35(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a7b7d685_FindFn(_self_.as<_1a7b7c0bd_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a7a7b297_Trait> __jule_trait_method_1abdc80c3_1abc7e74e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a7a787d3_FindTrait(_self_.as<_1a7a76d86_SymTab>().alloc, _2925_ident);
}
inline jule::Ptr<_1a7a7b297_Trait> __jule_trait_method_1abdc80c3_1abd3a431(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a7b36341_FindTrait(_self_.as<_1a7b34938_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1a7a7b297_Trait> __jule_trait_method_1abdc80c3_1abc80871(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a7b6125b_FindTrait(_self_.as<_1a7b5e80e_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1a7a7b297_Trait> __jule_trait_method_1abdc80c3_1abc813bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a7b63989_FindTrait(_self_.as<_1a7b62081_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1a7a7b297_Trait> __jule_trait_method_1abdc80c3_1abc7de35(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a7b7d9c6_FindTrait(_self_.as<_1a7b7c0bd_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1a7a7d94d_Enum> __jule_trait_method_1abdc85ac_1abc7e74e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a7a78b24_FindEnum(_self_.as<_1a7a76d86_SymTab>().alloc, _3324_ident);
}
inline jule::Ptr<_1a7a7d94d_Enum> __jule_trait_method_1abdc85ac_1abd3a431(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a7b36682_FindEnum(_self_.as<_1a7b34938_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1a7a7d94d_Enum> __jule_trait_method_1abdc85ac_1abc80871(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a7b6159c_FindEnum(_self_.as<_1a7b5e80e_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1a7a7d94d_Enum> __jule_trait_method_1abdc85ac_1abc813bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a7b63cca_FindEnum(_self_.as<_1a7b62081_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1a7a7d94d_Enum> __jule_trait_method_1abdc85ac_1abc7de35(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a7b7dd17_FindEnum(_self_.as<_1a7b7c0bd_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1a7a80158_TypeEnum> __jule_trait_method_1abdc8a96_1abc7e74e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a7a78e65_FindTypeEnum(_self_.as<_1a7a76d86_SymTab>().alloc, _3728_ident);
}
inline jule::Ptr<_1a7a80158_TypeEnum> __jule_trait_method_1abdc8a96_1abd3a431(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a7b369c3_FindTypeEnum(_self_.as<_1a7b34938_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1a7a80158_TypeEnum> __jule_trait_method_1abdc8a96_1abc80871(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a7b618dd_FindTypeEnum(_self_.as<_1a7b5e80e_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1a7a80158_TypeEnum> __jule_trait_method_1abdc8a96_1abc813bb(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a7b6411b_FindTypeEnum(_self_.as<_1a7b62081_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1a7a80158_TypeEnum> __jule_trait_method_1abdc8a96_1abc7de35(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a7b7e158_FindTypeEnum(_self_.as<_1a7b7c0bd_sema>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1baab2b7d_1baaa1e8b(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaa22ee_Name(_self_.as<_1baaa1e8b_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1baab2b7d_1baaa5214(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaa53bd_Name(_self_.as<_1baaa5214_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1baab2b7d_1baaa8459(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaa8613_Name(_self_.as<_1baaa8459_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1baab2b7d_1baaab6e3(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaab89c_Name(_self_.as<_1baaab6e3_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1baab2b7d_1baaae938(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaaeae2_Name(_self_.as<_1baaae938_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1baab185d_1baaa1e8b(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaa26c8_Short(_self_.as<_1baaa1e8b_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1baab185d_1baaa5214(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaa5962_Short(_self_.as<_1baaa5214_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1baab185d_1baaa8459(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaa8ba7_Short(_self_.as<_1baaa8459_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1baab185d_1baaab6e3(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaabe41_Short(_self_.as<_1baaab6e3_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1baab185d_1baaae938(jule::Ptr<jule::Uintptr> _self_) {
	return _1baab0186_Short(_self_.as<_1baaae938_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1baab3398_1baaa1e8b(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaa2442_What(_self_.as<_1baaa1e8b_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1baab3398_1baaa5214(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaa56cb_What(_self_.as<_1baaa5214_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1baab3398_1baaa8459(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaa8921_What(_self_.as<_1baaa8459_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1baab3398_1baaab6e3(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaabbaa_What(_self_.as<_1baaab6e3_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1baab3398_1baaae938(jule::Ptr<jule::Uintptr> _self_) {
	return _1baaaee00_What(_self_.as<_1baaae938_Flag>().alloc);
}
inline void __jule_trait_method_1baab3783_1baaa1e8b(jule::Ptr<jule::Uintptr> _self_) {
	_1baaa2585_Reset(_self_.as<_1baaa1e8b_Flag>().alloc);
}
inline void __jule_trait_method_1baab3783_1baaa5214(jule::Ptr<jule::Uintptr> _self_) {
	_1baaa581e_Reset(_self_.as<_1baaa5214_Flag>().alloc);
}
inline void __jule_trait_method_1baab3783_1baaa8459(jule::Ptr<jule::Uintptr> _self_) {
	_1baaa8a64_Reset(_self_.as<_1baaa8459_Flag>().alloc);
}
inline void __jule_trait_method_1baab3783_1baaab6e3(jule::Ptr<jule::Uintptr> _self_) {
	_1baaabced_Reset(_self_.as<_1baaab6e3_Flag>().alloc);
}
inline void __jule_trait_method_1baab3783_1baaae938(jule::Ptr<jule::Uintptr> _self_) {
	_1baab0043_Reset(_self_.as<_1baaae938_Flag>().alloc);
}


static _1a7b00c45_comptimeRangeKindMptrData _1a7b00c45_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1a7b000c9_index=__jule_trait_method_1abdc1cc0_1abd75977,
	._1a7b0043c_ready=__jule_trait_method_1abdc2254_1abd75977,
	._1a7b0085a_step=__jule_trait_method_1abdc285e_1abd75977,
	._1a7b00ae1_len=__jule_trait_method_1abdc2e8b_1abd75977,
};
static _1a7b00c45_comptimeRangeKindMptrData _1a7b00c45_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1a7b000c9_index=__jule_trait_method_1abdc1cc0_1abd8b064,
	._1a7b0043c_ready=__jule_trait_method_1abdc2254_1abd8b064,
	._1a7b0085a_step=__jule_trait_method_1abdc285e_1abd8b064,
	._1a7b00ae1_len=__jule_trait_method_1abdc2e8b_1abd8b064,
};
static _1a7b00c45_comptimeRangeKindMptrData _1a7b00c45_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1a7b000c9_index=__jule_trait_method_1abdc1cc0_1abd7aedd,
	._1a7b0043c_ready=__jule_trait_method_1abdc2254_1abd7aedd,
	._1a7b0085a_step=__jule_trait_method_1abdc285e_1abd7aedd,
	._1a7b00ae1_len=__jule_trait_method_1abdc2e8b_1abd7aedd,
};
static _1a7b00c45_comptimeRangeKindMptrData _1a7b00c45_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1a7b000c9_index=__jule_trait_method_1abdc1cc0_1abd80d4a,
	._1a7b0043c_ready=__jule_trait_method_1abdc2254_1abd80d4a,
	._1a7b0085a_step=__jule_trait_method_1abdc285e_1abd80d4a,
	._1a7b00ae1_len=__jule_trait_method_1abdc2e8b_1abd80d4a,
};
static _1a7b00c45_comptimeRangeKindMptrData _1a7b00c45_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1a7b000c9_index=__jule_trait_method_1abdc1cc0_1abd87e2e,
	._1a7b0043c_ready=__jule_trait_method_1abdc2254_1abd87e2e,
	._1a7b0085a_step=__jule_trait_method_1abdc285e_1abd87e2e,
	._1a7b00ae1_len=__jule_trait_method_1abdc2e8b_1abd87e2e,
};
static _1a7b00c45_comptimeRangeKindMptrData _1a7b00c45_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1a7b000c9_index=__jule_trait_method_1abdc1cc0_1abda915e,
	._1a7b0043c_ready=__jule_trait_method_1abdc2254_1abda915e,
	._1a7b0085a_step=__jule_trait_method_1abdc285e_1abda915e,
	._1a7b00ae1_len=__jule_trait_method_1abdc2e8b_1abda915e,
};
static _1a7b00c45_comptimeRangeKindMptrData _1a7b00c45_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1a7b000c9_index=__jule_trait_method_1abdc1cc0_1abd9d582,
	._1a7b0043c_ready=__jule_trait_method_1abdc2254_1abd9d582,
	._1a7b0085a_step=__jule_trait_method_1abdc285e_1abd9d582,
	._1a7b00ae1_len=__jule_trait_method_1abdc2e8b_1abd9d582,
};
static _1a7b5b80b_ImporterMptrData _1a7b5b80b_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1a7b5a684_SetModPath=__jule_trait_method_1abdc32bb_1ad4d8517,
	._1a7b5a871_GetModPath=__jule_trait_method_1abdc36ea_1ad4d8517,
	._1a7b5abb2_ModById=__jule_trait_method_1abdc3ad5_1ad4d8517,
	._1a7b5b003_GetImport=__jule_trait_method_1abdc4058_1ad4d8517,
	._1a7b5b3ee_ImportPackage=__jule_trait_method_1abdc45ca_1ad4d8517,
	._1a7b5b6a7_Imported=__jule_trait_method_1abdc4d6c_1ad4d8517,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abc7c94a,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abc7c94a,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abc7beaa,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abc7beaa,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abc914b9,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abc914b9,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abc712ce,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abc712ce,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abc77093,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abc77093,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abd86aba,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abd86aba,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abd78617,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abd78617,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abd75977,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abd75977,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abd8dc04,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abd8dc04,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abd8b064,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abd8b064,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abd7db7d,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abd7db7d,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abd7aedd,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abd7aedd,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abd839da,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abd839da,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abd80d4a,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abd80d4a,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abd87e2e,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abd87e2e,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abca0c04,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abca0c04,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abd915ca,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abd915ca,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abda915e,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abda915e,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abda1222,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abda1222,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abd9d582,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abd9d582,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abd964d1,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abd964d1,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abc62688,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abc62688,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abc6755b,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abc6755b,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abc6d51d,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abc6d51d,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abc7a9c0,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abc7a9c0,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abcd4de2,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abcd4de2,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abcd37a3,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abcd37a3,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abc7945d,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abc7945d,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1abc6e93c,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1abc6e93c,
};
static _1a7c32184_KindMptrData _1a7c32184_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1a7c31bde_Str=__jule_trait_method_1abdc5312_1bad940d5,
	._1a7c32030_Equal=__jule_trait_method_1abdc5664_1bad940d5,
};
static _1a7c5342a_LookupMptrData _1a7c5342a_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1a7c51714_SelectPackage=__jule_trait_method_1abdc5b92_1abc7e74e,
	._1a7c51b10_FindVar=__jule_trait_method_1abdc690c_1abc7e74e,
	._1a7c5200b_FindTypeAlias=__jule_trait_method_1abdc6e5c_1abc7e74e,
	._1a7c52407_FindStruct=__jule_trait_method_1abdc74ce_1abc7e74e,
	._1a7c52803_FindFn=__jule_trait_method_1abdc7a51_1abc7e74e,
	._1a7c52b44_FindTrait=__jule_trait_method_1abdc80c3_1abc7e74e,
	._1a7c52e85_FindEnum=__jule_trait_method_1abdc85ac_1abc7e74e,
	._1a7c532c6_FindTypeEnum=__jule_trait_method_1abdc8a96_1abc7e74e,
};
static _1a7c5342a_LookupMptrData _1a7c5342a_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1a7c51714_SelectPackage=__jule_trait_method_1abdc5b92_1abd3a431,
	._1a7c51b10_FindVar=__jule_trait_method_1abdc690c_1abd3a431,
	._1a7c5200b_FindTypeAlias=__jule_trait_method_1abdc6e5c_1abd3a431,
	._1a7c52407_FindStruct=__jule_trait_method_1abdc74ce_1abd3a431,
	._1a7c52803_FindFn=__jule_trait_method_1abdc7a51_1abd3a431,
	._1a7c52b44_FindTrait=__jule_trait_method_1abdc80c3_1abd3a431,
	._1a7c52e85_FindEnum=__jule_trait_method_1abdc85ac_1abd3a431,
	._1a7c532c6_FindTypeEnum=__jule_trait_method_1abdc8a96_1abd3a431,
};
static _1a7c5342a_LookupMptrData _1a7c5342a_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1a7c51714_SelectPackage=__jule_trait_method_1abdc5b92_1abc80871,
	._1a7c51b10_FindVar=__jule_trait_method_1abdc690c_1abc80871,
	._1a7c5200b_FindTypeAlias=__jule_trait_method_1abdc6e5c_1abc80871,
	._1a7c52407_FindStruct=__jule_trait_method_1abdc74ce_1abc80871,
	._1a7c52803_FindFn=__jule_trait_method_1abdc7a51_1abc80871,
	._1a7c52b44_FindTrait=__jule_trait_method_1abdc80c3_1abc80871,
	._1a7c52e85_FindEnum=__jule_trait_method_1abdc85ac_1abc80871,
	._1a7c532c6_FindTypeEnum=__jule_trait_method_1abdc8a96_1abc80871,
};
static _1a7c5342a_LookupMptrData _1a7c5342a_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1a7c51714_SelectPackage=__jule_trait_method_1abdc5b92_1abc813bb,
	._1a7c51b10_FindVar=__jule_trait_method_1abdc690c_1abc813bb,
	._1a7c5200b_FindTypeAlias=__jule_trait_method_1abdc6e5c_1abc813bb,
	._1a7c52407_FindStruct=__jule_trait_method_1abdc74ce_1abc813bb,
	._1a7c52803_FindFn=__jule_trait_method_1abdc7a51_1abc813bb,
	._1a7c52b44_FindTrait=__jule_trait_method_1abdc80c3_1abc813bb,
	._1a7c52e85_FindEnum=__jule_trait_method_1abdc85ac_1abc813bb,
	._1a7c532c6_FindTypeEnum=__jule_trait_method_1abdc8a96_1abc813bb,
};
static _1a7c5342a_LookupMptrData _1a7c5342a_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1a7c51714_SelectPackage=__jule_trait_method_1abdc5b92_1abc7de35,
	._1a7c51b10_FindVar=__jule_trait_method_1abdc690c_1abc7de35,
	._1a7c5200b_FindTypeAlias=__jule_trait_method_1abdc6e5c_1abc7de35,
	._1a7c52407_FindStruct=__jule_trait_method_1abdc74ce_1abc7de35,
	._1a7c52803_FindFn=__jule_trait_method_1abdc7a51_1abc7de35,
	._1a7c52b44_FindTrait=__jule_trait_method_1abdc80c3_1abc7de35,
	._1a7c52e85_FindEnum=__jule_trait_method_1abdc85ac_1abc7de35,
	._1a7c532c6_FindTypeEnum=__jule_trait_method_1abdc8a96_1abc7de35,
};
static _1aa923290_CommonFlagMptrData _1aa923290_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1aa8e1659_Name=__jule_trait_method_1baab2b7d_1baaa1e8b,
	._1aa8e179c_Short=__jule_trait_method_1baab185d_1baaa1e8b,
	._1aa8e1978_What=__jule_trait_method_1baab3398_1baaa1e8b,
	._1aa92314c_Reset=__jule_trait_method_1baab3783_1baaa1e8b,
};
static _1aa923290_CommonFlagMptrData _1aa923290_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1aa8e1659_Name=__jule_trait_method_1baab2b7d_1baaa5214,
	._1aa8e179c_Short=__jule_trait_method_1baab185d_1baaa5214,
	._1aa8e1978_What=__jule_trait_method_1baab3398_1baaa5214,
	._1aa92314c_Reset=__jule_trait_method_1baab3783_1baaa5214,
};
static _1aa923290_CommonFlagMptrData _1aa923290_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1aa8e1659_Name=__jule_trait_method_1baab2b7d_1baaa8459,
	._1aa8e179c_Short=__jule_trait_method_1baab185d_1baaa8459,
	._1aa8e1978_What=__jule_trait_method_1baab3398_1baaa8459,
	._1aa92314c_Reset=__jule_trait_method_1baab3783_1baaa8459,
};
static _1aa923290_CommonFlagMptrData _1aa923290_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1aa8e1659_Name=__jule_trait_method_1baab2b7d_1baaab6e3,
	._1aa8e179c_Short=__jule_trait_method_1baab185d_1baaab6e3,
	._1aa8e1978_What=__jule_trait_method_1baab3398_1baaab6e3,
	._1aa92314c_Reset=__jule_trait_method_1baab3783_1baaab6e3,
};
static _1aa923290_CommonFlagMptrData _1aa923290_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1aa8e1659_Name=__jule_trait_method_1baab2b7d_1baaae938,
	._1aa8e179c_Short=__jule_trait_method_1baab185d_1baaae938,
	._1aa8e1978_What=__jule_trait_method_1baab3398_1baaae938,
	._1aa92314c_Reset=__jule_trait_method_1baab3783_1baaae938,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _1aaec0e25_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _1ab6db72d_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _1abb653b0_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _1abb6568a_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _1abb6b10d_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _1aab19673_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _1abb72675_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1a7ba4eb4_Var> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1a7c31848_TypeAlias> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1a7997adc_Struct> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1a7a70a83_Fn> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1a7a7b297_Trait> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1a7a7d94d_Enum> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1a7a80158_TypeEnum> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1a7996800_Field> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1a79ea9a8_Const> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1a7a7cde2_EnumItem> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1a7a6e0ae_Param> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1a7b2ec41_Label> &other) { return any.type == &__jule_any_type18 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1a7b2c238_Scope> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1a7a6b94c_BuiltinErrorCallExpr> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1a7bed89d_Data> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1a7a6c95e_BackendEmitExpr> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1a7a6a6c6_BuiltinAppendCallExpr> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1a7a69296_BuiltinPrintCallExpr> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1a7a69593_BuiltinPrintlnCallExpr> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1a7a69d46_BuiltinPanicCallExpr> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1a7a6b573_BuiltinCopyCallExpr> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1a7a6b199_BuiltinDeleteCallExpr> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1a7a6cc5b_FreeExpr> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1a7a6588b_FnCallExpr> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1a7b2cd2c_Conditional> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1a7b2d129_InfIter> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1a798d176_WhileKind> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1a7b2d5d0_WhileIter> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1a798da7d_RangeKind> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1a7b2e0b4_RangeIter> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1a7b2e3b1_ContSt> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1a7b303a1_GotoSt> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1a7b3077a_Postfix> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1a7b30c31_Assign> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1a797e909_IdentExpr> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1a797dbd3_TupleExpr> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1a7a6621b_IndexingExpr> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1a7b312b4_MultiAssign> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1a7b31c32_Match> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1a7b32c22_FallSt> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1a7b2e78a_BreakSt> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1a7b330b8_RetSt> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1a7988da8_ScopeTree> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1a798bc02_VarDecl> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1a7990981_TypeAliasDecl> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1a797d0de_Expr> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1a7990167_Conditional> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1a798c84b_Iter> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1a798e331_ContSt> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1a798638e_LabelSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1a7986768_GotoSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1a7987758_AssignSt> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1a7991751_MatchCase> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1a7986a65_FallSt> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1a798de57_BreakSt> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1a798c0cb_RetSt> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1a797d9b3_UseExpr> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1a799a97a_StructIns> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1a7a73b41_FnIns> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1a7995843_Impl> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1a7994996_StructDecl> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1a798aa47_FnDecl> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1a79951d3_TraitDecl> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1a7992d4b_EnumDecl> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1a7993cd6_TypeEnumDecl> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1a797b076_ArrTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1a797a1da_SlcTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1a797a7d4_PtrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1a7979d55_SptrTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1a797b7c4_MapTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1a797a4d7_TupleTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1a79793b5_IdentTypeDecl> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1a7980575_VariadicExpr> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1a7a65c65_SliceExpr> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1a798280d_FieldExprPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1a7983e19_KeyValPair> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1a7a68e99_TupleExpr> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1a7a6c5da_RuneExpr> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1a7c3255d_Type> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1a7a68b9c_ArrayExpr> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1a7981202_SubIdentExpr> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1a797967e_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1a798019b_UnaryExpr> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1a7978caa_TypeDecl> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1a7980d28_NamespaceExpr> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1a7979a58_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1a7a67508_SlicingExpr> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1a7a64ed9_CastingExpr> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1a7984645_SliceExpr> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1a7a64659_StructLitExpr> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1a7a687c3_StructStaticIdentExpr> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1a7a67a8b_TraitSubIdentExpr> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1a7a6842c_StructSubIdentExpr> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1a7a66e75_MapExpr> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1a7a666c2_AnonFnExpr> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1a797d3a8_RangeExpr> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1a797e079_LitExpr> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1a797e453_UnsafeExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1a79850a2_IndexingExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1a7985712_SlicingExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1a798094e_CastExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1a7983138_StructLit> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1a7981d18_FnCallExpr> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1a79835de_BraceLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1a79816a8_BinaryExpr> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1a7a63c85_UnaryExpr> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1a7a638ab_BinaryExpr> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1a7a64956_AllocStructLitExpr> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1a7a6996c_BuiltinNewCallExpr> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1a7a6a2ec_BuiltinMakeCallExpr> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1a7a6a9c3_BuiltinLenCallExpr> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1a7a6acc0_BuiltinCapCallExpr> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1a7a6bc49_SizeofExpr> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1a7a6c3ed_AlignofExpr> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1a69a1e7c_ExceptionalForwardingExpr> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1a69a4e4c_StrRuneIter> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1a69a3bc6_MutSlicingExpr> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1a69a4699_PushToSliceExpr> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1a69a4a73_AppendToSliceExpr> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1a69a292d_SwapExpr> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1a69a1ba2_StrFromBytes> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1a69a2d07_EmptyCompareExpr> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1a69a3643_StrCompExpr> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1a69a2587_StrConcatExpr> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1a69a3ec3_UnsafeBinaryExpr> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1a69a5249_UnsafeDerefExpr> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1a69a3104_RefExpr> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1a7a642b3_StructArgExpr> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator170, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<_1a69a5777_UnsafeCastingExpr> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator171, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::Ptr<_1a69a2213_FnCallIgnoreExceptionalExpr> &other) { return any.type == &__jule_any_type136 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator172, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::Ptr<_1a69a42c0_UnsafeIndexingExpr> &other) { return any.type == &__jule_any_type137 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator46, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type138 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _1aa7692c3_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _1ab6c4617_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _1ab6daead_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type142_to_str(void *alloc) noexcept { return _1ab797971_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_type_deallocator176, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
jule::Bool __jule_any_type143_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type143_to_str(void *alloc) noexcept { return _1abc2149e_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type143{.dealloc=__jule_type_deallocator177, .eq=__jule_any_type143_eq, .to_str=__jule_any_type143_to_str};
jule::Bool __jule_any_type144_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type144_to_str(void *alloc) noexcept { return _1abc219cc_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type144{.dealloc=__jule_type_deallocator178, .eq=__jule_any_type144_eq, .to_str=__jule_any_type144_to_str};
jule::Bool __jule_any_type145_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type145_to_str(void *alloc) noexcept { return _1abc24804_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type145{.dealloc=__jule_type_deallocator179, .eq=__jule_any_type145_eq, .to_str=__jule_any_type145_to_str};
jule::Bool __jule_any_type146_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type146_to_str(void *alloc) noexcept { return _1abc32e2d_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type146{.dealloc=__jule_type_deallocator180, .eq=__jule_any_type146_eq, .to_str=__jule_any_type146_to_str};
jule::Bool __jule_any_type147_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type147_to_str(void *alloc) noexcept { return _1abc35eec_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type147{.dealloc=__jule_type_deallocator181, .eq=__jule_any_type147_eq, .to_str=__jule_any_type147_to_str};
jule::Bool __jule_any_type148_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type148_to_str(void *alloc) noexcept { return _1abc3b09b_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type148{.dealloc=__jule_type_deallocator182, .eq=__jule_any_type148_eq, .to_str=__jule_any_type148_to_str};
inline jule::Bool __jule_anon1ac0238b1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a729db_ParamIns> _25721_p1, jule::Ptr<_1a7a729db_ParamIns> _25736_p2);
struct __jule_anon_1abe546c1_ctx{
	jule::Ptr<_1a7b019c1_comptimeStructField> _self_;
};
static void __jule_anon_1abe546c1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abe546c1_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe546c1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _6521_e, jule::Ptr<_1a7981d18_FnCallExpr>* _6536_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1abe56508_ctx{
	jule::Ptr<_1a7b019c1_comptimeStructField> _self_;
};
static void __jule_anon_1abe56508_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abe56508_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe56508(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _7221_e, jule::Ptr<_1a7981d18_FnCallExpr>* _7236_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1abe69560_ctx{
	jule::Ptr<_1a7b04be4_comptimeStatic> _self_;
};
static void __jule_anon_1abe69560_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abe69560_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe69560(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _17821_e, jule::Ptr<_1a7981d18_FnCallExpr>* _17836_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1abe6b353_ctx{
	jule::Ptr<_1a7b04be4_comptimeStatic> _self_;
};
static void __jule_anon_1abe6b353_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abe6b353_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe6b353(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _18521_e, jule::Ptr<_1a7981d18_FnCallExpr>* _18536_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1abe7ab26_ctx{
	jule::Ptr<_1a7b07e17_comptimeEnumField> _self_;
};
static void __jule_anon_1abe7ab26_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abe7ab26_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe7ab26(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _28321_e, jule::Ptr<_1a7981d18_FnCallExpr>* _28336_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1abe92d2a_ctx{
	jule::Ptr<_1a7b0ac2d_comptimeParam> _self_;
};
static void __jule_anon_1abe92d2a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abe92d2a_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe92d2a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _40221_e, jule::Ptr<_1a7981d18_FnCallExpr>* _40236_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1abe94b1d_ctx{
	jule::Ptr<_1a7b0ac2d_comptimeParam> _self_;
};
static void __jule_anon_1abe94b1d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abe94b1d_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe94b1d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _40921_e, jule::Ptr<_1a7981d18_FnCallExpr>* _40936_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1abe96911_ctx{
	jule::Ptr<_1a7b0ac2d_comptimeParam> _self_;
};
static void __jule_anon_1abe96911_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abe96911_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe96911(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _41621_e, jule::Ptr<_1a7981d18_FnCallExpr>* _41636_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac18ebc5_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac18ebc5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac18ebc5_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac18ebc5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _97421_e, jule::Ptr<_1a7981d18_FnCallExpr>* _97436_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1919b8_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac1919b8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1919b8_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1919b8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _98121_e, jule::Ptr<_1a7981d18_FnCallExpr>* _98136_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1937ab_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac1937ab_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1937ab_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1937ab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _98821_e, jule::Ptr<_1a7981d18_FnCallExpr>* _98836_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac19559e_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac19559e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac19559e_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac19559e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _99521_e, jule::Ptr<_1a7981d18_FnCallExpr>* _99536_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac197392_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac197392_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac197392_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac197392(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _100221_e, jule::Ptr<_1a7981d18_FnCallExpr>* _100236_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac199185_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac199185_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac199185_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac199185(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _100921_e, jule::Ptr<_1a7981d18_FnCallExpr>* _100936_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac19ae78_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac19ae78_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac19ae78_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac19ae78(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _101621_e, jule::Ptr<_1a7981d18_FnCallExpr>* _101636_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac19cc6b_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac19cc6b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac19cc6b_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac19cc6b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _102321_e, jule::Ptr<_1a7981d18_FnCallExpr>* _102336_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac19eba2_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac19eba2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac19eba2_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac19eba2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _103021_e, jule::Ptr<_1a7981d18_FnCallExpr>* _103036_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1a1995_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac1a1995_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1a1995_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1a1995(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _103721_e, jule::Ptr<_1a7981d18_FnCallExpr>* _103736_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1a3788_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac1a3788_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1a3788_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1a3788(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _104421_e, jule::Ptr<_1a7981d18_FnCallExpr>* _104436_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1a557b_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac1a557b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1a557b_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1a557b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _105121_e, jule::Ptr<_1a7981d18_FnCallExpr>* _105136_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1a736e_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac1a736e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1a736e_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1a736e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _105821_e, jule::Ptr<_1a7981d18_FnCallExpr>* _105836_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1a9162_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac1a9162_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1a9162_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1a9162(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _106521_e, jule::Ptr<_1a7981d18_FnCallExpr>* _106536_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1aae55_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac1aae55_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1aae55_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1aae55(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _107221_e, jule::Ptr<_1a7981d18_FnCallExpr>* _107236_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1acc48_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac1acc48_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1acc48_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1acc48(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _107921_e, jule::Ptr<_1a7981d18_FnCallExpr>* _107936_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1aea3b_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac1aea3b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1aea3b_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1aea3b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _108621_e, jule::Ptr<_1a7981d18_FnCallExpr>* _108636_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1b182e_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac1b182e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1b182e_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1b182e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _109321_e, jule::Ptr<_1a7981d18_FnCallExpr>* _109336_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1b3622_ctx{
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac1b3622_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1b3622_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1b3622(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _110021_e, jule::Ptr<_1a7981d18_FnCallExpr>* _110036_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1da77b_ctx{
	jule::Ptr<_1a7b16e6a_comptimeValue> _self_;
};
static void __jule_anon_1ac1da77b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1da77b_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1da77b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _126321_e, jule::Ptr<_1a7981d18_FnCallExpr>* _126336_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1dc56e_ctx{
	jule::Ptr<_1a7b16e6a_comptimeValue> _self_;
};
static void __jule_anon_1ac1dc56e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1dc56e_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1dc56e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _127021_e, jule::Ptr<_1a7981d18_FnCallExpr>* _127036_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1de362_ctx{
	jule::Ptr<_1a7b16e6a_comptimeValue> _self_;
};
static void __jule_anon_1ac1de362_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1de362_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1de362(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _127721_e, jule::Ptr<_1a7981d18_FnCallExpr>* _127736_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1e1155_ctx{
	jule::Ptr<_1a7b16e6a_comptimeValue> _self_;
};
static void __jule_anon_1ac1e1155_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1e1155_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1e1155(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _128421_e, jule::Ptr<_1a7981d18_FnCallExpr>* _128436_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1e2e48_ctx{
	jule::Ptr<_1a7b16e6a_comptimeValue> _self_;
};
static void __jule_anon_1ac1e2e48_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1e2e48_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1e2e48(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _129121_e, jule::Ptr<_1a7981d18_FnCallExpr>* _129136_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1e4c3b_ctx{
	jule::Ptr<_1a7b16e6a_comptimeValue> _self_;
};
static void __jule_anon_1ac1e4c3b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1e4c3b_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1e4c3b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _129821_e, jule::Ptr<_1a7981d18_FnCallExpr>* _129836_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac1e6a2e_ctx{
	jule::Ptr<_1a7b16e6a_comptimeValue> _self_;
};
static void __jule_anon_1ac1e6a2e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac1e6a2e_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1e6a2e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _130521_e, jule::Ptr<_1a7981d18_FnCallExpr>* _130536_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac20aeb6_ctx{
	jule::Ptr<_1a7b1b645_comptimeFile> _self_;
};
static void __jule_anon_1ac20aeb6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac20aeb6_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac20aeb6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _143021_e, jule::Ptr<_1a7981d18_FnCallExpr>* _143036_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac20cca9_ctx{
	jule::Ptr<_1a7b1b645_comptimeFile> _self_;
};
static void __jule_anon_1ac20cca9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac20cca9_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac20cca9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _143721_e, jule::Ptr<_1a7981d18_FnCallExpr>* _143736_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac20ea9c_ctx{
	jule::Ptr<_1a7b1b645_comptimeFile> _self_;
};
static void __jule_anon_1ac20ea9c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac20ea9c_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac20ea9c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _144421_e, jule::Ptr<_1a7981d18_FnCallExpr>* _144436_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac04895d_ctx{
	jule::Ptr<_1a7b2055b_comptimeDecl> _self_;
};
static void __jule_anon_1ac04895d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac04895d_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac04895d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _195021_e, jule::Ptr<_1a7981d18_FnCallExpr>* _195036_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac04a795_ctx{
	jule::Ptr<_1a7b2055b_comptimeDecl> _self_;
};
static void __jule_anon_1ac04a795_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac04a795_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac04a795(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _195721_e, jule::Ptr<_1a7981d18_FnCallExpr>* _195736_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac04c588_ctx{
	jule::Ptr<_1a7b2055b_comptimeDecl> _self_;
};
static void __jule_anon_1ac04c588_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac04c588_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac04c588(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _196421_e, jule::Ptr<_1a7981d18_FnCallExpr>* _196436_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac04e37b_ctx{
	jule::Ptr<_1a7b2055b_comptimeDecl> _self_;
};
static void __jule_anon_1ac04e37b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac04e37b_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac04e37b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _197121_e, jule::Ptr<_1a7981d18_FnCallExpr>* _197136_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac05116e_ctx{
	jule::Ptr<_1a7b2055b_comptimeDecl> _self_;
};
static void __jule_anon_1ac05116e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac05116e_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac05116e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _197821_e, jule::Ptr<_1a7981d18_FnCallExpr>* _197836_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac052e62_ctx{
	jule::Ptr<_1a7b2055b_comptimeDecl> _self_;
};
static void __jule_anon_1ac052e62_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac052e62_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac052e62(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _198521_e, jule::Ptr<_1a7981d18_FnCallExpr>* _198536_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac054c55_ctx{
	jule::Ptr<_1a7b2055b_comptimeDecl> _self_;
};
static void __jule_anon_1ac054c55_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac054c55_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac054c55(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _199221_e, jule::Ptr<_1a7981d18_FnCallExpr>* _199236_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac056a48_ctx{
	jule::Ptr<_1a7b2055b_comptimeDecl> _self_;
};
static void __jule_anon_1ac056a48_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac056a48_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac056a48(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _199921_e, jule::Ptr<_1a7981d18_FnCallExpr>* _199936_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac058ab1_ctx{
	jule::Ptr<_1a7b2055b_comptimeDecl> _self_;
};
static void __jule_anon_1ac058ab1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac058ab1_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac058ab1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _200621_e, jule::Ptr<_1a7981d18_FnCallExpr>* _200636_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac05a8a4_ctx{
	jule::Ptr<_1a7b2055b_comptimeDecl> _self_;
};
static void __jule_anon_1ac05a8a4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac05a8a4_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac05a8a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _201321_e, jule::Ptr<_1a7981d18_FnCallExpr>* _201336_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac05c697_ctx{
	jule::Ptr<_1a7b2055b_comptimeDecl> _self_;
};
static void __jule_anon_1ac05c697_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac05c697_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac05c697(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _202021_e, jule::Ptr<_1a7981d18_FnCallExpr>* _202036_fc, jule::Ptr<_1a7bed89d_Data>* );
struct __jule_anon_1ac06865e_ctx{
	jule::Ptr<_1a7b26e47_constraintChecker> _self_;
};
static void __jule_anon_1ac06865e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac06865e_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ac06865e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b7c0bd_sema>* _6415_sema, jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>* _6433_generics);
struct __jule_anon_1ac332e67_ctx{
	jule::Ptr<_1a7987758_AssignSt> _126347_a;
	jule::Ptr<_1a7c0086c_eval> _12647_eval;
	jule::Ptr<_1a7b34938_scopeChecker> _self_;
};
static void __jule_anon_1ac332e67_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac332e67_ctx>().dealloc(); }
inline void __jule_anon_1ac332e67(jule::Ptr<jule::Uintptr> __f_ctx, jule::I32 _126519_i);
struct __jule_anon_1ac33e391_ctx{
	jule::Ptr<jule::I32> _12948__i;
	jule::Ptr<_1a7987758_AssignSt> _126347_a;
	jule::Fn<void,jule::I32> _12653_updateMut;
	jule::Ptr<_1a7c0086c_eval> _12647_eval;
	jule::Ptr<jule::Slice<_1a7b2b9a7_exprPart>> _12958__parts;
};
static void __jule_anon_1ac33e391_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac33e391_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac33e391(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a797d0de_Expr>* _129644_expr);
struct __jule_anon_1ac702dc5_ctx{
	jule::Ptr<_1a7b5e80e_ImportInfo> *_48728_pkg;
};
static void __jule_anon_1ac702dc5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac702dc5_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ac702dc5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b5e80e_ImportInfo> _48835_spkg);
struct __jule_anon_1ac7d69d1_ctx{
	jule::Ptr<_1a7a73b41_FnIns> _83443_f;
	jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>> _83511_generics;
	jule::Slice<jule::Ptr<_1a7c3255d_Type>> *_83459_ignored;
};
static void __jule_anon_1ac7d69d1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac7d69d1_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ac7d69d1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b7c0bd_sema>* _84142_sema);
struct __jule_anon_1ac7ee6ec_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1a7b7c0bd_sema>*,jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>*> _93746_algo;
	jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _9427_generics;
};
static void __jule_anon_1ac7ee6ec_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac7ee6ec_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ac7ee6ec(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b7c0bd_sema>* _94442_sema);
struct __jule_anon_1ac8020d4_ctx{
	jule::Ptr<_1a7a73b41_FnIns> _95337_f;
	jule::Ptr<_1a7b7c0bd_sema> _self_;
};
static void __jule_anon_1ac8020d4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac8020d4_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ac8020d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b7c0bd_sema>* _95737_sema, jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>* _95755_generics);
struct __jule_anon_1ab2374cc_ctx{
	jule::Ptr<_1a7c0086c_eval> _self_;
};
static void __jule_anon_1ab2374cc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab2374cc_ctx>().dealloc(); }
inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ab2374cc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a797d0de_Expr>* _294939_expr);
inline jule::Str __jule_anon1ad095a97(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _91619_def);
struct __jule_anon_1ac696088_ctx{
	jule::Ptr<_1a92036a9_ObjectDeadCode> _self_;
};
static void __jule_anon_1ac696088_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac696088_ctx>().dealloc(); }
inline void __jule_anon_1ac696088(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a76d86_SymTab>* _17731_file);
struct __jule_anon_1ac6b0910_ctx{
	_1a920bd66_exprDeadCode *_self_;
};
static void __jule_anon_1ac6b0910_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac6b0910_ctx>().dealloc(); }
inline void __jule_anon_1ac6b0910(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr);
struct __jule_anon_1ad95a923_ctx{
	jule::Ptr<jule::Bool> _687__check;
	jule::Ptr<_1a9116c82_exprOptimizer> _527_exop;
};
static void __jule_anon_1ad95a923_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad95a923_ctx>().dealloc(); }
inline void __jule_anon_1ad95a923(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _7047_m);
struct __jule_anon_1ad98a1e4_ctx{
	jule::Ptr<_1a69a2587_StrConcatExpr> _3057_model;
	_1a9116c82_exprOptimizer *_self_;
	jule::Fn<void,jule::Any> *_3094__step;
};
static void __jule_anon_1ad98a1e4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad98a1e4_ctx>().dealloc(); }
inline void __jule_anon_1ad98a1e4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any _31013_m);
struct __jule_anon_1ad9ed6ca_ctx{
	_1a9116c82_exprOptimizer *_self_;
};
static void __jule_anon_1ad9ed6ca_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad9ed6ca_ctx>().dealloc(); }
inline void __jule_anon_1ad9ed6ca(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _94447_m);
struct __jule_anon_1baa5446b_ctx{
	jule::Ptr<_1a92120ad_scopeCoder> _self_;
	jule::Bool _1017_ref;
};
static void __jule_anon_1baa5446b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1baa5446b_ctx>().dealloc(); }
inline void __jule_anon_1baa5446b(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1baa57e75_ctx{
	jule::Ptr<_1a92120ad_scopeCoder> _self_;
	jule::Ptr<_1a7b2e0b4_RangeIter> *_9336_it;
};
static void __jule_anon_1baa57e75_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1baa57e75_ctx>().dealloc(); }
inline void __jule_anon_1baa57e75(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad7849a0_ctx{
	jule::Ptr<_1a92120ad_scopeCoder> _self_;
};
static void __jule_anon_1ad7849a0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad7849a0_ctx>().dealloc(); }
inline void __jule_anon_1ad7849a0(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad786e8b_ctx{
	jule::Ptr<_1a92120ad_scopeCoder> _self_;
};
static void __jule_anon_1ad786e8b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad786e8b_ctx>().dealloc(); }
inline void __jule_anon_1ad786e8b(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1adb60ce3_ctx{
	jule::Ptr<_1a92120ad_scopeCoder> _self_;
};
static void __jule_anon_1adb60ce3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1adb60ce3_ctx>().dealloc(); }
inline void __jule_anon_1adb60ce3(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad9d6b9c_ctx{
	jule::Ptr<_1a92120ad_scopeCoder> _self_;
};
static void __jule_anon_1ad9d6b9c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad9d6b9c_ctx>().dealloc(); }
inline void __jule_anon_1ad9d6b9c(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad9d7ecd_ctx{
	jule::Ptr<_1a92120ad_scopeCoder> _self_;
	jule::Ptr<_1a7b31c32_Match> _74030_m;
};
static void __jule_anon_1ad9d7ecd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad9d7ecd_ctx>().dealloc(); }
inline void __jule_anon_1ad9d7ecd(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bab42c74_ctx{
	jule::Ptr<_1a92120ad_scopeCoder> _self_;
	jule::Ptr<_1a7a666c2_AnonFnExpr> _111034_m;
};
static void __jule_anon_1bab42c74_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bab42c74_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bab42c74(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ba4eb4_Var> _111667_v);
struct __jule_anon_1badc0287_ctx{
	jule::Ptr<_1aa897544_ObjectCoder> _self_;
};
static void __jule_anon_1badc0287_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1badc0287_ctx>().dealloc(); }
inline void __jule_anon_1badc0287(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b62081_Package>* _82938_pkg);
struct __jule_anon_1badd4cd5_ctx{
	jule::Ptr<_1aa897544_ObjectCoder> _self_;
	jule::Ptr<_1a7ba4eb4_Var> _91424_v;
};
static void __jule_anon_1badd4cd5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1badd4cd5_ctx>().dealloc(); }
inline void __jule_anon_1badd4cd5(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1badd6dc5_ctx{
	jule::Ptr<_1aa897544_ObjectCoder> _self_;
	jule::Ptr<_1a7ba4eb4_Var> _91424_v;
};
static void __jule_anon_1badd6dc5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1badd6dc5_ctx>().dealloc(); }
inline void __jule_anon_1badd6dc5(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1badd95d1_ctx{
	jule::Ptr<_1aa897544_ObjectCoder> _self_;
};
static void __jule_anon_1badd95d1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1badd95d1_ctx>().dealloc(); }
inline void __jule_anon_1badd95d1(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1badda77a_ctx{
	jule::Ptr<_1aa897544_ObjectCoder> _self_;
	jule::Ptr<_1a7ba4eb4_Var> _91424_v;
};
static void __jule_anon_1badda77a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1badda77a_ctx>().dealloc(); }
inline void __jule_anon_1badda77a(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bae24a5b_ctx{
	jule::Ptr<_1aa897544_ObjectCoder> _self_;
};
static void __jule_anon_1bae24a5b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bae24a5b_ctx>().dealloc(); }
inline void __jule_anon_1bae24a5b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b62081_Package>* _117938_pkg);
struct __jule_anon_1bae25dc0_ctx{
	jule::Ptr<_1aa897544_ObjectCoder> _self_;
};
static void __jule_anon_1bae25dc0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bae25dc0_ctx>().dealloc(); }
inline void __jule_anon_1bae25dc0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a76d86_SymTab>* _120231_file);
struct __jule_anon_1bae32184_ctx{
	jule::Ptr<_1aa897544_ObjectCoder> _self_;
};
static void __jule_anon_1bae32184_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bae32184_ctx>().dealloc(); }
inline void __jule_anon_1bae32184(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b62081_Package>* _124138_pkg);
struct __jule_anon_1bae371de_ctx{
	jule::Ptr<_1aa8959a4_traitHash> _12747_hash;
};
static void __jule_anon_1bae371de_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bae371de_ctx>().dealloc(); }
inline void __jule_anon_1bae371de(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a70a83_Fn>* _127836_m);
struct __jule_anon_1bae39741_ctx{
	jule::Ptr<_1aa897544_ObjectCoder> _self_;
};
static void __jule_anon_1bae39741_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bae39741_ctx>().dealloc(); }
inline void __jule_anon_1bae39741(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b62081_Package>* _129238_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1baeec34d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1bb004c29(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base);
inline jule::Bool __jule_anon1abe48671(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b5e80e_ImportInfo> _204025_pkg);
struct __jule_anon_1aca30ae8_ctx{
	jule::Str _476038_namespace;
};
static void __jule_anon_1aca30ae8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aca30ae8_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1aca30ae8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b5e80e_ImportInfo> _476130_imp);
struct __jule_anon_1badc1145_ctx{
	jule::Ptr<_1aa897544_ObjectCoder> _self_;
};
static void __jule_anon_1badc1145_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1badc1145_ctx>().dealloc(); }
inline void __jule_anon_1badc1145(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a76d86_SymTab>* _83032_file);
struct __jule_anon_1bae25919_ctx{
	jule::Ptr<_1a7b62081_Package> *_117938_pkg;
	jule::Ptr<_1aa897544_ObjectCoder> _self_;
};
static void __jule_anon_1bae25919_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bae25919_ctx>().dealloc(); }
inline void __jule_anon_1bae25919(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a76d86_SymTab>* _118032_file);
struct __jule_anon_1bae3a5ee_ctx{
	jule::Ptr<_1aa897544_ObjectCoder> _self_;
};
static void __jule_anon_1bae3a5ee_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bae3a5ee_ctx>().dealloc(); }
inline void __jule_anon_1bae3a5ee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a76d86_SymTab>* _129332_file);
jule::Array<jule::Array<jule::Str,2>,5> _1bd4476ca_HelpMap;
jule::Str _1aa929a16_OutDir;
jule::Str _1aa929dac_OutName;
jule::Str _1aa92a0bb_Out;
jule::Uintptr _1d778d144_STDIN;
jule::Uintptr _1d778d3db_STDOUT;
jule::Uintptr _1d778d6d8_STDERR;
jule::Array<jule::U8,256> _1d78ab66e_first;
jule::Array<_1d78abc24_acceptRange,16> _1d78ac0ba_acceptRanges;
jule::Array<jule::U8,32> _1bbebb816__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1bbebbdee__DE_BRUIJN64_TAB;
jule::I32 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_1bd426d19_RangeTable> _1bd3b45c0__L;
jule::Ptr<_1bd426d19_RangeTable> _1bd3b54d3__LU;
jule::Ptr<_1bd426d19_RangeTable> _1bd3bb4b7_Letter;
jule::Ptr<_1bd426d19_RangeTable> _1bd3c2787_Upper;
jule::Slice<_1bd425db2_CaseRange> _1bd41ee77__CaseRanges;
jule::Array<jule::U8,256> _1bd420263__PROPERTIES;
jule::Array<jule::U16,128> _1bd422045_asciiFold;
jule::Slice<_1bd4258b7_foldPair> _1bd422331_caseOrbit;
jule::Array<jule::Str,4> _1bbed639c_CppHeaderExts;
jule::Array<jule::Str,3> _1bbed648a_CppExts;
jule::Array<jule::Str,1> _1bc0651c8_ObjectiveCppExts;
jule::Str _1bd43e35e_PathStdlib;
jule::Str _1bd43e5b2_PathExec;
jule::Str _1bd43e848_PathWd;
jule::Str _1bd43eb45_PathApi;
jule::Str _1bd43eded_OS;
jule::Str _1bd4401a6_Arch;
jule::Str _1bd443c37_Compiler;
jule::Str _1bd445134_CompilerPath;
jule::Str _1bd445343_CppStd;
jule::Bool _1bd4455da_Shadowing;
jule::Bool _1bd445893_Transpilation;
jule::Bool _1bd445b4b_Test;
jule::Bool _1bd445e04_RC;
jule::Bool _1bd4462bc_Safety;
jule::Bool _1bd44650e_Production;
_1a49dae96_floatInfo _1a49db35e_f32info;
_1a49dae96_floatInfo _1a49db65b_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _1a49e407b_detailedPowsOfTen;
jule::Slice<jule::I32> _1a49e5cd6_powtab;
jule::Slice<jule::F64> _1a49e6897_f64pow10;
jule::Slice<jule::F32> _1a49e6bc7_f32pow10;
jule::Array<jule::U64,20> _1a49e9dc8_u64pow10;
jule::Slice<_1a49edb68_leftCheat> _1a49ee097_leftCheats;
jule::Array<jule::I32,5> _1a78b0461_Spaces;
jule::Array<jule::U32,6> _1a78b0670_UnaryOps;
jule::Array<jule::U32,18> _1a78b094a_BinOps;
jule::Array<jule::U32,2> _1a795c893_PostfixOps;
jule::Array<jule::U32,11> _1a795cb7e_AssignOps;
jule::Array<_1a796b286_kindPair,28> _1a796b671_keywords;
jule::Array<_1a796b286_kindPair,46> _1a796b9a1_basicOps;
jule::I32 _1a7ae5388_BitSize;
jule::Str _1a7ae55ec_SysInt;
jule::Str _1a7ae58a5_SysUint;
jule::Slice<jule::Str> _1a7b2660b_builtinConstraints;
jule::Ptr<_1a7c3255d_Type> _1a7ca624c_primNil;
jule::Ptr<_1a7c3255d_Type> _1a7ca6549_primVoid;
jule::Ptr<_1a7c3255d_Type> _1a7ca6802_primAny;
jule::Ptr<_1a7c3255d_Type> _1a7ca6aee_primStr;
jule::Ptr<_1a7c3255d_Type> _1a7ca6da7_primBool;
jule::Ptr<_1a7c3255d_Type> _1a7ca7160_primUintptr;
jule::Ptr<_1a7c3255d_Type> _1a7ca7418_primUint;
jule::Ptr<_1a7c3255d_Type> _1a7ca77d1_primInt;
jule::Ptr<_1a7c3255d_Type> _1a7ca7a23_primI8;
jule::Ptr<_1a7c3255d_Type> _1a7ca7cba_primI16;
jule::Ptr<_1a7c3255d_Type> _1a7ca8073_primI32;
jule::Ptr<_1a7c3255d_Type> _1a7ca832b_primI64;
jule::Ptr<_1a7c3255d_Type> _1a7ca85d4_primU8;
jule::Ptr<_1a7c3255d_Type> _1a7ca888c_primU16;
jule::Ptr<_1a7c3255d_Type> _1a7ca8b45_primU32;
jule::Ptr<_1a7c3255d_Type> _1a7ca912e_primU64;
jule::Ptr<_1a7c3255d_Type> _1a7ca9371_primF32;
jule::Ptr<_1a7c3255d_Type> _1a7ca9580_primF64;
jule::Ptr<_1a86037ad_Meta> _1a860157a_ProgramMeta;
jule::Ptr<_1a91225a6_data> _1a9121c48_emptyData;
jule::Bool _1a9127600_Copy;
jule::Bool _1a91278ec_Deadcode;
jule::Bool _1a9127ba5_Append;
jule::Bool _1a9127ea2_Math;
jule::Bool _1a912825a_Access;
jule::Bool _1a9128513_Inline;
jule::Bool _1a91287bb_Ptr;
jule::Bool _1a9128b84_Cond;
jule::Bool _1a9128dc6_Str;
jule::Bool _1a912916d_Slice;
jule::Bool _1a9129426_Assign;
jule::Bool _1a91296ce_Exceptional;
jule::Bool _1a9129987_Iter;
jule::Bool _1a9129c40_Dynamic;
jule::Bool _1a9129ee8_Array;
jule::Bool _1a912a4d2_Len;
jule::Bool _1a912a724_StdStrings;
jule::Bool _1a912a933_StdMathCmplx;
jule::Bool _1a920cae2_exprEnabled;
jule::Bool _1a920cd01_scopeEnabled;
jule::Array<jule::I32,12> _1aa888c83_mdays;
jule::Str _1a921184e_assignArgName;
jule::Ptr<_1a7c3255d_Type> _1aa8949b4_generalGCPtr;
jule::Slice<_1bd425db2_CaseRange> _1bd41eb8b_CaseRanges;














































































































































































inline jule::Bool _1d78abc24_acceptRange_eq(_1d78abc24_acceptRange *_self_, _1d78abc24_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _1bbdc0e24_LittleEndian_eq(_1bbdc0e24_LittleEndian *_self_, _1bbdc0e24_LittleEndian _other_) { return true; }

inline jule::U32 static__1bbdd6ad8_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__1bbdd7512_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}












inline jule::Bool _1bbddab42_u128_eq(_1bbddab42_u128 *_self_, _1bbddab42_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _1acc44c1e_group_eq(_1acc44c1e_group *_self_, _1acc44c1e_group _other_) {
	return 
		_1aaaeb622_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_1acc45219_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_1acc42b62__Map> static__1acc4303b_make(void) {
	return jule::new_ptr<_1acc42b62__Map>(_1acc42b62__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1acc44c1e_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1acc43190_initData(_1acc42b62__Map* _self_, jule::I32 _13524_cap) {
	jule::I32 _1363_groups = _1bbecb738_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1acc44c1e_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1acc44c1e_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc60124:;
		if (it != expr_end) {
			jule::I32 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1bbecb947_newEmptyMetadata();
			}
			_iter_next_1acc60124:;
			++it;
			_1407_i++;
			goto _iter_begin_1acc60124;
		}
		_iter_end_1acc60124:;
	};
}



inline jule::U64 _1acc432e4_hash(_1acc42b62__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _1aab19673_toStr(_14616_k);;
	return _1bbdde0b8_hash(_1d7492909_StrBytes(_1473_bytes));;
}



inline void _1acc43448_rehash(_1acc42b62__Map* _self_, jule::I32 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1acc43190_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1acc44c1e_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1acc44c1e_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1acc44c1e_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1acc44c1e_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc6338b:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1bbecb947_newEmptyMetadata();
			}
			_iter_next_1acc6338b:;
			++it;
			_1617_i++;
			goto _iter_begin_1acc6338b;
		}
		_iter_end_1acc6338b:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	(*(_self_))._field_dead=0LL;
	(*(_self_))._field_resident=0LL;
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc636cc:;
		if (it != expr_end) {
			jule::I32 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acc64ec5:;
					if (it != expr_end) {
						jule::I32 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1acc64ec5;
							};
							{
								(*(_1acc439a9_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1acc64ec5:;
						++it;
						_1678_s++;
						goto _iter_begin_1acc64ec5;
					}
					_iter_end_1acc64ec5:;
				};
			}
			_iter_next_1acc636cc:;
			++it;
			_1667_g++;
			goto _iter_begin_1acc636cc;
		}
		_iter_end_1acc636cc:;
	};
}



inline jule::I32 _1acc4359c_nextSize(_1acc42b62__Map* _self_) {
	jule::I32 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1acc43701_lookup(jule::Ptr<_1acc42b62__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1bbecbd21_splitHash(_1acc432e4_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1bbecc11d_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1bbeca7c0_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1bbecad97_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_keys[static_cast<jule::I32>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_values[static_cast<jule::I32>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1acc6b4d7:;
			}
			_iter_end_1acc6b4d7:;;
			_2018_matches=_1bbecaacd_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1acc54c73:;
	}
	_iter_end_1acc54c73:;;
}



inline jule::Bool _1acc43855_get(jule::Ptr<_1acc42b62__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1acc43701_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _1acc439a9_set(_1acc42b62__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1acc43448_rehash(_self_, _1acc4359c_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1bbecbd21_splitHash(_1acc432e4_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1bbecc11d_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1bbeca7c0_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1bbecad97_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1ba969bab:;
			}
			_iter_end_1ba969bab:;;
			_2488_matches=_1bbecaacd_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1bbecad97_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)][static_cast<jule::I32>(_2615_s)]=_2457_lo;
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1acc72587:;
	}
	_iter_end_1acc72587:;;
}



inline jule::Bool _1acc43b0d_del(jule::Ptr<_1acc42b62__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1bbecbd21_splitHash(_1acc432e4_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1bbecc11d_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1bbeca7c0_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1bbecad97_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1bbecaacd_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)]))) != 0LLU)) {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-128LL;
							((*_self_.alloc)._field_resident)--;
						} else {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-2LL;
							((*_self_.alloc)._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)]=_30214_key;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_values[static_cast<jule::I32>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1ba9726ec:;
			}
			_iter_end_1ba9726ec:;;
			_2838_matches=_1bbecaacd_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1ba971784:;
	}
	_iter_end_1ba971784:;;
}



inline void _1acc43c62_clear(jule::Ptr<_1acc42b62__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba978c97:;
		if (it != expr_end) {
			jule::I32 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ba9797c0:;
					if (it != expr_end) {
						jule::I32 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1ba9797c0:;
						++it;
						_3298_j++;
						goto _iter_begin_1ba9797c0;
					}
					_iter_end_1ba9797c0:;
				};
			}
			_iter_next_1ba978c97:;
			++it;
			_3287_i++;
			goto _iter_begin_1ba978c97;
		}
		_iter_end_1ba978c97:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*_self_.alloc)._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc736cb:;
		if (it != expr_end) {
			jule::I32 _3357_i = it - expr->begin();
			{
				_1acc44c1e_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ba97bd88:;
						if (it != expr_end) {
							jule::I32 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1ba97bd88:;
							++it;
							_3389_j++;
							goto _iter_begin_1ba97bd88;
						}
						_iter_end_1ba97bd88:;
					};
				};
			}
			_iter_next_1acc736cb:;
			++it;
			_3357_i++;
			goto _iter_begin_1acc736cb;
		}
		_iter_end_1acc736cb:;
	};
	(*(_self_))._field_dead=0LL;
	(*_self_.alloc)._field_resident=0LL;
}



inline jule::I32 _1acc43db6_len(jule::Ptr<_1acc42b62__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*_self_.alloc)._field_dead);;
}



inline jule::I32 _1acc4401a_cap(_1acc42b62__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1acc4d3dc_mapIterator _1acc4416e_iterator(jule::Ptr<_1acc42b62__Map> _self_) {
	_1acc4d3dc_mapIterator _3607_iterator = _1acc4d3dc_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1acc44c1e_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1acc4d783_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_1ba981398__Map> static__1ba9816c8_make(void) {
	return jule::new_ptr<_1ba981398__Map>(_1ba981398__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1ba98328a_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1ba98182c_initData(_1ba981398__Map* _self_, jule::I32 _13524_cap) {
	jule::I32 _1363_groups = _1bbecb738_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1ba98328a_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ba98328a_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1a7a73b41_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7a73b41_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba99b88b:;
		if (it != expr_end) {
			jule::I32 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1bbecb947_newEmptyMetadata();
			}
			_iter_next_1ba99b88b:;
			++it;
			_1407_i++;
			goto _iter_begin_1ba99b88b;
		}
		_iter_end_1ba99b88b:;
	};
}



inline jule::U64 _1ba981981_hash(_1ba981398__Map* _self_, jule::Ptr<_1a7a73b41_FnIns> _14616_k) {
	jule::Str _1473_bytes = _1ac7752bb_toStr(_14616_k);;
	return _1bbdde0b8_hash(_1d7492909_StrBytes(_1473_bytes));;
}



inline void _1ba981ad5_rehash(_1ba981398__Map* _self_, jule::I32 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1ba98182c_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1ba98328a_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1ba98328a_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1ba98328a_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ba98328a_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1a7a73b41_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7a73b41_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba99eb03:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1bbecb947_newEmptyMetadata();
			}
			_iter_next_1ba99eb03:;
			++it;
			_1617_i++;
			goto _iter_begin_1ba99eb03;
		}
		_iter_end_1ba99eb03:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	(*(_self_))._field_dead=0LL;
	(*(_self_))._field_resident=0LL;
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba99ee44:;
		if (it != expr_end) {
			jule::I32 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ba9a173c:;
					if (it != expr_end) {
						jule::I32 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1ba9a173c;
							};
							{
								(*(_1ba982146_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1ba9a173c:;
						++it;
						_1678_s++;
						goto _iter_begin_1ba9a173c;
					}
					_iter_end_1ba9a173c:;
				};
			}
			_iter_next_1ba99ee44:;
			++it;
			_1667_g++;
			goto _iter_begin_1ba99ee44;
		}
		_iter_end_1ba99ee44:;
	};
}



inline jule::I32 _1ba981c39_nextSize(_1ba981398__Map* _self_) {
	jule::I32 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1ba981d8d_lookup(jule::Ptr<_1ba981398__Map> _self_, jule::Ptr<_1a7a73b41_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1bbecbd21_splitHash(_1ba981981_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1bbecc11d_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1bbeca7c0_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1bbecad97_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_keys[static_cast<jule::I32>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_values[static_cast<jule::I32>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1ba9a7c4e:;
			}
			_iter_end_1ba9a7c4e:;;
			_2018_matches=_1bbecaacd_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1ba9914da:;
	}
	_iter_end_1ba9914da:;;
}



inline jule::Slice<jule::Uintptr> _1ba981ee2_get(jule::Ptr<_1ba981398__Map> _self_, jule::Ptr<_1a7a73b41_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1ba981d8d_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _1ba982146_set(_1ba981398__Map* _self_, jule::Ptr<_1a7a73b41_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1ba981ad5_rehash(_self_, _1ba981c39_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1bbecbd21_splitHash(_1ba981981_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1bbecc11d_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1bbeca7c0_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1bbecad97_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1ba9b08c2:;
			}
			_iter_end_1ba9b08c2:;;
			_2488_matches=_1bbecaacd_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1bbecad97_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)][static_cast<jule::I32>(_2615_s)]=_2457_lo;
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1ba9adcee:;
	}
	_iter_end_1ba9adcee:;;
}



inline jule::Bool _1ba98229a_del(jule::Ptr<_1ba981398__Map> _self_, jule::Ptr<_1a7a73b41_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1bbecbd21_splitHash(_1ba981981_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1bbecc11d_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1bbeca7c0_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1bbecad97_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1bbecaacd_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)]))) != 0LLU)) {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-128LL;
							((*_self_.alloc)._field_resident)--;
						} else {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-2LL;
							((*_self_.alloc)._field_dead)++;
						};
						jule::Ptr<_1a7a73b41_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)]=_30214_key;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_values[static_cast<jule::I32>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1ba9b8413:;
			}
			_iter_end_1ba9b8413:;;
			_2838_matches=_1bbecaacd_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1ba9b749a:;
	}
	_iter_end_1ba9b749a:;;
}



inline void _1ba9823ee_clear(jule::Ptr<_1ba981398__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba9be9ad:;
		if (it != expr_end) {
			jule::I32 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ba9c04d6:;
					if (it != expr_end) {
						jule::I32 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1ba9c04d6:;
						++it;
						_3298_j++;
						goto _iter_begin_1ba9c04d6;
					}
					_iter_end_1ba9c04d6:;
				};
			}
			_iter_next_1ba9be9ad:;
			++it;
			_3287_i++;
			goto _iter_begin_1ba9be9ad;
		}
		_iter_end_1ba9be9ad:;
	};
	jule::Ptr<_1a7a73b41_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*_self_.alloc)._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba9aee43:;
		if (it != expr_end) {
			jule::I32 _3357_i = it - expr->begin();
			{
				_1ba98328a_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ba9c2a9e:;
						if (it != expr_end) {
							jule::I32 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1ba9c2a9e:;
							++it;
							_3389_j++;
							goto _iter_begin_1ba9c2a9e;
						}
						_iter_end_1ba9c2a9e:;
					};
				};
			}
			_iter_next_1ba9aee43:;
			++it;
			_3357_i++;
			goto _iter_begin_1ba9aee43;
		}
		_iter_end_1ba9aee43:;
	};
	(*(_self_))._field_dead=0LL;
	(*_self_.alloc)._field_resident=0LL;
}



inline jule::I32 _1ba982553_len(jule::Ptr<_1ba981398__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*_self_.alloc)._field_dead);;
}



inline jule::I32 _1ba9826a7_cap(_1ba981398__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1ba989abb_mapIterator _1ba98280b_iterator(jule::Ptr<_1ba981398__Map> _self_) {
	_1ba989abb_mapIterator _3607_iterator = _1ba989abb_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1ba98328a_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1ba989e62_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _1acc4d783_init(_1acc4d3dc_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1acc44c1e_group> _1___jule_assign_arg = (*(*(_self_))._field_m.alloc)._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1acc43db6_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1d74117e0_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _1acc4d8d7_next(_1acc4d3dc_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1acc559cc;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1acc559cc:;
			}
			_iter_end_1acc559cc:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1acc525ab:;
	}
	_iter_end_1acc525ab:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _1ba989e62_init(_1ba989abb_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1ba98328a_group> _1___jule_assign_arg = (*(*(_self_))._field_m.alloc)._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1ba982553_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1d74117e0_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_1a7a73b41_FnIns__jule_tuple_psuintptr _1ba98a0b6_next(_1ba989abb_mapIterator* _self_) {
	__jule_tuple_px_1a7a73b41_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1ba992244;
					};
					jule::Ptr<_1a7a73b41_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1ba992244:;
			}
			_iter_end_1ba992244:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1ba98dd23:;
	}
	_iter_end_1ba98dd23:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}











inline _1bc0a106b_Builder static__1bc0a18b8_New(jule::I32 _2316_cap) {
	if ((_2316_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("strings: Builder.New: cap < 0", 29) + jule::Str("\nlocation: std/internal/strings/builder.jule:25:4"));;
	};
	return _1bc0a106b_Builder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _2316_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline jule::Exceptional<jule::I32> _1bc0a1c09_Write(_1bc0a106b_Builder* _self_, jule::Slice<jule::U8> _3421_b) {
	jule::I32 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_3421_b);;
	__jule_func_result = _3421_b.len();
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _1bc0a204a_WriteStr(_1bc0a106b_Builder* _self_, jule::Str _4124_s) {
	jule::I32 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_4124_s);;
	__jule_func_result = _4124_s.len();
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::VoidExceptional _1bc0a2303_WriteByte(_1bc0a106b_Builder* _self_, jule::U8 _4825_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_4825_b); };
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1bc0a2644_WriteRune(_1bc0a106b_Builder* _self_, jule::I32 _5525_r) {
	jule::I32 __jule_func_result = 0;
	if ((_5525_r < 128LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(static_cast<jule::U8>(_5525_r)); };
		__jule_func_result = 1LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=(*(_self_))._field_buf.len();
	(*(_self_))._field_buf=_1d78adce2_AppendRune((*(_self_))._field_buf, _5525_r);
	__jule_func_result=((*(_self_))._field_buf.len() - __jule_func_result);
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Str _1bc0a28ca_Str(_1bc0a106b_Builder* _self_) {
	jule::Str _687_s = _1d7492e59_StrFromBytes((*(_self_))._field_buf);;
	_1bc0a2ac8_Clear(_self_);
	return _687_s;;
}



inline void _1bc0a2ac8_Clear(_1bc0a106b_Builder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I32 _1bc0a2d5e_Len(_1bc0a106b_Builder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1bc0a337b_Buf(_1bc0a106b_Builder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1bc0a3634_SetBuf(_1bc0a106b_Builder* _self_, jule::Slice<jule::U8> _9533_buf) {
	(*(_self_))._field_buf=_9533_buf;
}








inline jule::Bool _1bd4258b7_foldPair_eq(_1bd4258b7_foldPair *_self_, _1bd4258b7_foldPair _other_) {
	return 
		(_self_->_field_from == _other_._field_from) &&
		(_self_->_field_to == _self_->_field_to);
}






inline jule::Bool _1bd425db2_CaseRange_eq(_1bd425db2_CaseRange *_self_, _1bd425db2_CaseRange _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		_1aab4bcb0_arrayCmp(_self_->_field_Delta.begin(), _self_->_field_Delta.begin(), 3);
}






inline jule::Bool _1bd426368_Range16_eq(_1bd426368_Range16 *_self_, _1bd426368_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _1bd426896_Range32_eq(_1bd426896_Range32 *_self_, _1bd426896_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}













inline jule::U8 _1bd4354cb_index(_1bd435014_lazyBuff* _self_, jule::I32 _5421_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5421_i];;
	};
	return (*(_self_))._field_path[_5421_i];;
}



inline void _1bd435784_append(_1bd435014_lazyBuff* _self_, jule::U8 _6122_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6122_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6122_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1bd435a1a_string(_1bd435014_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + jule::Str::unsafe_from_bytes((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _1bc28335d_cmdAttrs_eq(_1bc28335d_cmdAttrs *_self_, _1bc28335d_cmdAttrs _other_) {
	return 
		(_self_->_field_hProcess == _other_._field_hProcess) &&
		(_self_->_field_hThread == _self_->_field_hThread);
}






inline jule::Bool _1bc288220_File_eq(_1bc288220_File *_self_, _1bc288220_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Ptr<_1bc288220_File> static__1bc288c04_New(jule::Uintptr _6723_handle) {
	return jule::new_ptr<_1bc288220_File>(_1bc288220_File{._field_handle=_6723_handle});;
}



inline jule::Exceptional<jule::Ptr<_1bc288220_File>> static__1bc288ebd_Create(jule::Str _7819_path) {
	return static__1bc28c026_Open(_7819_path, static_cast<jule::I32>(770LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1bc289287_Read(jule::Str _8517_path) {
	_1bc28a7c7_Stat _863_s = ({
		auto except = static__1bd43dbbb_Of(_8517_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} _1bc28a7c7_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1bc28ae6a_IsReg(&_863_s)))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0)};
	};
	jule::I32 _917_sz = static_cast<jule::I32>(_1bc28b201_Size(&_863_s));;
	if ((_917_sz != static_cast<jule::I32>(_1bc28b201_Size(&_863_s)))) {
		_917_sz=0LL;
	};
	if ((_917_sz < 512LLU)) {
		_917_sz=512LLU;
	};
	jule::Ptr<_1bc288220_File> _1047_f = ({
		auto except = static__1bc28c026_Open(_8517_path, 0LL, 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1bc288220_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _1057_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_917_sz, _917_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1067_n = 0LL;;
	while ((_1067_n < _917_sz)) {
		{
			jule::I32 _1084_rn = ({
				auto except = _1bc28ca2c_Read(_1047_f.ptr(), _1057_buf.slice(_1067_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_1084_rn == 0LL)) {
				goto _iter_end_1aa76c3c5;
			};
			_1067_n+=_1084_rn;
		}
	_iter_next_1aa76c3c5:;
	}
	_iter_end_1aa76c3c5:;;
	({
		auto except = _1bc289e36_Close(_1047_f.ptr());
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_1057_buf.slice(0LL, _1067_n)};;
}



inline jule::VoidExceptional static__1bc28962d_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I32 _12443_perm) {
	jule::Ptr<_1bc288220_File> _1257_f = ({
		auto except = static__1bc28c026_Open(_12418_path, static_cast<jule::I32>(769LL), _12443_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_1bc288220_File>(nullptr);});
	});;
	jule::I32 _1267_n = 0LL;;
	while ((_1267_n < _12429_data.len())) {
		{
			_1267_n+=({
				auto except = _1bc28c6db_Write(_1257_f, _12429_data.slice(_1267_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1aa773a08:;
	}
	_iter_end_1aa773a08:;;
	return _1bc289e36_Close(_1257_f.ptr());
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1bc289e36_Close(_1bc288220_File* _self_) {
	if ((_1d77a7e72_Close(static_cast<jule::I32>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1bd43d407_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_1bc288220_File>> static__1bc28c026_Open(jule::Str _1717_path, jule::I32 _1728_flag, jule::I32 _1741_mode) {
	jule::Slice<jule::U16> _183_utf16Path = _1d747a32b_UTF16FromStr(_1717_path);;
	jule::I32 _193_handle = _1d778e4b9_Wopen((&(_183_utf16Path[0LL])), _1728_flag, _1741_mode);;
	if ((_193_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1bc288220_File>>{.error=jule::Any(_1bd43d407_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_1bc288220_File>>{.result=static__1bc288c04_New(static_cast<jule::Uintptr>(_193_handle))};;
}



inline jule::VoidExceptional static__1bc28c257_Remove(jule::Str _2719_path) {
	jule::Slice<jule::U16> _283_utf16Path = _1d747a32b_UTF16FromStr(_2719_path);;
	if ((!(_1d77900d0_DeleteFile((&(_283_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_1bc2850c9_getLastFsErrorWindows(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1bc28c6db_Write(_1bc288220_File* _self_, jule::Slice<jule::U8> _4021_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_4021_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1d78c09c4_handleRW(&(_4021_buf));
	if (_1bc28cd6d_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_1d78b0a5d_writeConsole((*(_self_))._field_handle, _4021_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_1bd43d407_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=_1d77a8329_Write(static_cast<jule::I32>((*(_self_))._field_handle), (&(_4021_buf[0LL])), static_cast<jule::U32>(_4021_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_1bd43d407_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _1bc28ca2c_Read(_1bc288220_File* _self_, jule::Slice<jule::U8> _6824_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_6824_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1d78c09c4_handleRW(&(_6824_buf));
	if (_1bc28cd6d_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_1d78b0dd2_readConsole((*(_self_))._field_handle, _6824_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_1bd43d407_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=_1d77a7a98_Read(static_cast<jule::I32>((*(_self_))._field_handle), (&(_6824_buf[0LL])), static_cast<jule::U32>(_6824_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_1bd43d407_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}








inline jule::Bool _1bc28a7c7_Stat_eq(_1bc28a7c7_Stat *_self_, _1bc28a7c7_Stat _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Bool _1bc28abd4_IsDir(_1bc28a7c7_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _1bc28ae6a_IsReg(_1bc28a7c7_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _1bc28b201_Size(_1bc28a7c7_Stat* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<_1bc28a7c7_Stat> static__1bd43dbbb_Of(jule::Str _1015_path) {
	if ((_1015_path).empty()) {
		return jule::Exceptional<_1bc28a7c7_Stat>{.error=jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _143_utf16Path = _1d747a32b_UTF16FromStr(_1015_path);;
	struct _stat _157_handle = (struct _stat){};;
	jule::I32 _163_code = _1d778e08a_Wstat((&(_143_utf16Path[0LL])), (&(_157_handle)));;
	if ((_163_code == -1LL)) {
		return jule::Exceptional<_1bc28a7c7_Stat>{.error=jule::Any(_1bd43d407_getLastFsError(), &__jule_any_type0)};
	};
	_1bc28a7c7_Stat _207_stat = _1bc28a7c7_Stat{._field_mode=0LL, ._field_size=0};;
	_207_stat._field_size=static_cast<jule::U32>(_157_handle.st_size);
	if (((_157_handle.st_mode & 16384LLU) == 16384LLU)) {
		_207_stat._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_157_handle.st_mode & 32768LLU) == 32768LLU)) {
		_207_stat._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<_1bc28a7c7_Stat>{.result=_207_stat};;
}








inline jule::Bool _1bc0b03aa_Log_eq(_1bc0b03aa_Log *_self_, _1bc0b03aa_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _1a49dae96_floatInfo_eq(_1a49dae96_floatInfo *_self_, _1a49dae96_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _1a49edb68_leftCheat_eq(_1a49edb68_leftCheat *_self_, _1a49edb68_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _1a49ee680_decimal_eq(_1a49ee680_decimal *_self_, _1a49ee680_decimal _other_) {
	return 
		_1ab8e8ae4_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1a49e6149_set(_1a49ee680_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1ab9e9ca0:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1ab9e9d16:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1ab9e9dc1:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1ab9eb8ea:;
					{
						goto _iter_next_1ab9eb17a;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1ab9eb994:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1ab9eb17a;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1ab9eba0a:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1ab9eb17a;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1ab9eb17a;
					}
				}
				_match_end_1ab9eb7b8:;
			};
			goto _iter_end_1ab9eb17a;
		}
	_iter_next_1ab9eb17a:;
	}
	_iter_end_1ab9eb17a:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1a49e17a4_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1aba027d0;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I32>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1aba027d0:;
		}
		_iter_end_1aba027d0:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1a49e648a_floatBits(_1a49ee680_decimal* _self_, _1a49dae96_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1aba1017d;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1aba1005c;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1aba1017d;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1a49e5cd6_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1a49e5cd6_powtab[(*(_self_))._field_dp];
			};
			_1a49eed23_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1aba07928:;
	}
	_iter_end_1aba07928:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1a49e5cd6_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1a49e5cd6_powtab[(-((*(_self_))._field_dp))];
			};
			_1a49eed23_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1aba06152:;
	}
	_iter_end_1aba06152:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I32 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1a49eed23_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= (({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
		goto _julec_label_1aba1005c;
	};
	_1a49eed23_shift(_self_, static_cast<jule::I32>((jule::U32)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1a4a008c3_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= (({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			goto _julec_label_1aba1005c;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1aba1017d;
	_julec_label_1aba1005c:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I32>((jule::U32)((jule::U32)(({ jule::U32 __jule_x = static_cast<jule::U32>(1LLU); jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U32>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1aba1017d:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & (({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL))); jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1a49eea6a_assign(_1a49ee680_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1aba135e3:;
	}
	_iter_end_1aba135e3:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1aba138bd:;
	}
	_iter_end_1aba138bd:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1a4a00ecd_trim(_self_);
}



inline void _1a49eed23_shift(_1a49ee680_decimal* _self_, jule::I32 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1aba15e31:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1aba15eca:;
			{
				while ((_17625_k > 28LL)) {
					{
						_1a4a01a28_leftShift(_self_, 28LLU);
						_17625_k-=28LL;
					}
				_iter_next_1aba16a7a:;
				}
				_iter_end_1aba16a7a:;;
				_1a4a01a28_leftShift(_self_, static_cast<jule::U32>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1aba16041:;
			{
				while ((_17625_k < -28LL)) {
					{
						_1a4a012b9_rightShift(_self_, 28LLU);
						_17625_k+=28LL;
					}
				_iter_next_1aba169c0:;
				}
				_iter_end_1aba169c0:;;
				_1a4a012b9_rightShift(_self_, static_cast<jule::U32>((-(_17625_k))));
			}
		}
		_match_end_1aba15cbb:;
	};
}



inline void _1a4a000cb_roundDown(_1a49ee680_decimal* _self_, jule::I32 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1a4a00ecd_trim(_self_);
}



inline void _1a4a00384_roundUp(_1a49ee680_decimal* _self_, jule::I32 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1aba19d47:;
	}
	_iter_end_1aba19d47:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1a4a0063c_round(_1a49ee680_decimal* _self_, jule::I32 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1a4a01d9c_shouldRoundUp(_self_, _23221_nd)) {
		_1a4a00384_roundUp(_self_, _23221_nd);
	} else {
		_1a4a000cb_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1a4a008c3_roundedInteger(_1a49ee680_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1aba1c674:;
	}
	_iter_end_1aba1c674:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1aba1e577:;
	}
	_iter_end_1aba1e577:;;
	if (_1a4a01d9c_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}








inline jule::Bool _1bd46ba62_AnsiEscape_eq(_1bd46ba62_AnsiEscape *_self_, _1bd46ba62_AnsiEscape _other_) { return true; }

inline void static__1bd44a3c0_Reset(void) {
	jule::print(_1aab19673_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__1bd46bc4e_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::print(_1aab19673_toStr(_1918_escape));
	jule::print(_1aab19673_toStr(_1931_text));
	static__1bd44a3c0_Reset();
}








inline jule::Bool _1a4a04d17_Logger_eq(_1a4a04d17_Logger *_self_, _1a4a04d17_Logger _other_) { return true; }

inline void static__1a4a050c0_LogFlat(_1bc0b03aa_Log* _1421_l) {
	jule::println(_1aab19673_toStr((*(_1421_l))._field_Text));
}



inline void static__1a4a052e0_LogError(_1bc0b03aa_Log* _1922_l) {
	jule::print(_1aab19673_toStr(jule::Str::lit("\033[31m", 5)));
	jule::print(_1aab19673_toStr(jule::Str::lit("error: ", 7)));
	jule::print(_1aab19673_toStr((*(_1922_l))._field_Text));
	static__1bd44a3c0_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::print(_1aab19673_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::print(_1aab19673_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::print(_1aab19673_toStr(jule::Str::lit(":", 1)));
		jule::print(_1aab19673_toStr(_1a4a03c06_Itoa((*(_1922_l))._field_Row)));
		jule::print(_1aab19673_toStr(jule::Str::lit(":", 1)));
		jule::print(_1aab19673_toStr(_1a4a03c06_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _1bd432e9b_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_1bd431791_ReplaceAll(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1));
		jule::I32 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::print(_1aab19673_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _1a4a03c06_Itoa((*(_1922_l))._field_Row);;
		jule::print(_1aab19673_toStr(_434_row));
		jule::print(_1aab19673_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1aab19673_toStr(_388_line));
		jule::print(_1aab19673_toStr(jule::Str::lit("\n  ", 3)));
		jule::print(_1aab19673_toStr(_1bd42a27e_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::print(_1aab19673_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1aab19673_toStr(_1bd42a27e_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::print(_1aab19673_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::print(_1aab19673_toStr(jule::Str::lit("\n  ", 3)));
			jule::print(_1aab19673_toStr(_1bd42a27e_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::print(_1aab19673_toStr(jule::Str::lit(" | ", 3)));
			static__1bd46bc4e_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::print(_1aab19673_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::println(_1aab19673_toStr(jule::Str::lit("\n", 1)));
}



inline void static__1a4a05521_Log(_1bc0b03aa_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1aba41b3d:;
			{
				static__1a4a050c0_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1aba41e18:;
			{
				static__1a4a052e0_LogError(_6417_l);
			}
		}
		_match_end_1aba41d19:;
	};
}



inline void static__1a4a05752_PrintLogs(jule::Slice<_1bc0b03aa_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba41ed4:;
		if (it != expr_end) {
			_1bc0b03aa_Log *_7510_l = it;
			{
				static__1a4a05521_Log(_7510_l);
			}
			_iter_next_1aba41ed4:;
			++it;
			goto _iter_begin_1aba41ed4;
		}
		_iter_end_1aba41ed4:;
	};
	jule::print(_1aab19673_toStr(jule::Str::lit("=== ", 4)));
	jule::print(_1aab19673_toStr(_1a4a03c06_Itoa((*(_7423_logs)).len())));
	jule::println(_1aab19673_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _1a79633b0_Token_eq(_1a79633b0_Token *_self_, _1a79633b0_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1a7963767_Prec(_1a79633b0_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(57LLU) || _match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1aba96687:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1aba96c5e:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(71LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1aba96cc5:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1aba966ed:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1aba96764:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1aba96203:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aba96555:;
	};
}







inline jule::Ptr<_1a7968e65_Fileset> static__1a79692ea_New(jule::Str _2016_path) {
	return jule::new_ptr<_1a7968e65_Fileset>(_1a7968e65_Fileset{._field_data=jule::Slice<jule::U8>(nullptr), ._field_Path=_2016_path, ._field_Tokens=jule::Slice<jule::Ptr<_1a79633b0_Token>>(nullptr)});;
}



inline void _1a796985b_FillMut(_1a7968e65_Fileset* _self_, jule::Slice<jule::U8> _3634_data) {
	(*(_self_))._field_data=_3634_data;
}



inline jule::Str _1a7969ae2_Dir(_1a7968e65_Fileset* _self_) {
	return _1bd4374ab_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1a7969d78_Name(_1a7968e65_Fileset* _self_) {
	return _1bd4370d2_Base((*(_self_))._field_Path);;
}



inline jule::Str _1a796a450_GetRow(_1a7968e65_Fileset* _self_, jule::I32 _5718_row) {
	jule::I32 _587_n = 0LL;;
	jule::I32 _597_lineStart = 0LL;;
	jule::I32 _607_i = 0LL;;
	for (; (_607_i < (*(_self_))._field_data.len()); (_607_i)++) {
		{
			if (((*(_self_))._field_data[_607_i] != '\n')) {
				goto _iter_next_1aba9c8e1;
			};
			(_587_n)++;
			if ((_587_n == _5718_row)) {
				return _1d7492e59_StrFromBytes((*(_self_))._field_data.slice(_597_lineStart, _607_i));;
			};
			_597_lineStart=(_607_i + 1LL);
		}
	_iter_next_1aba9c8e1:;
	}
	_iter_end_1aba9c8e1:;;
	return jule::Str();;
}








inline jule::Bool _1a796b286_kindPair_eq(_1a796b286_kindPair *_self_, _1a796b286_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _1a79727dc_pushErr(_1a7972226_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args) {
	{ jule::Slice<_1bc0b03aa_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a796bee0_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44823_fmt, _44843_args)); };
}



inline void _1a7972d4d_lex(_1a7972226_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1a7975070_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len())) {
		{
			jule::Ptr<_1a79633b0_Token> _4638_token = _1a797655a_token(_self_);;
			if (((*(_4638_token))._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1a79633b0_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4638_token); };
			};
		}
	_iter_next_1ab978998:;
	}
	_iter_end_1ab978998:;;
}



inline jule::Str _1a797318e_id(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _47219_ln) {
	if (((*(_47219_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4763_r;
	jule::I32 _47610_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78ac906_DecodeRune((*(_47219_ln)));
		_4763_r = __jule_assign_result.__jule_result_arg0;
		_47610_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4763_r != '_') && (!(_1a7966ade_IsLetter(_4763_r))))) {
		return jule::Str();;
	};
	while ((_47610_i < (*(_47219_ln)).len())) {
		{
			jule::I32 _4824_pr;
			jule::I32 _4828_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78ac906_DecodeRune((*(_47219_ln)).slice(_47610_i));
				_4824_pr = __jule_assign_result.__jule_result_arg0;
				_4828_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4824_pr != '_') && (!(_1a796732b_IsDecimal(_4824_pr)))) && (!(_1a7966ade_IsLetter(_4824_pr))))) {
				(*(_self_))._field_pos+=_47610_i;
				return _1d7492e59_StrFromBytes((*(_47219_ln)).slice(0LL, _47610_i));;
			};
			_47610_i+=_4828_n;
		}
	_iter_next_1ab97c172:;
	}
	_iter_end_1ab97c172:;;
	(*(_self_))._field_pos+=(*(_47219_ln)).len();
	return _1d7492e59_StrFromBytes((*(_47219_ln)));;
}



inline jule::Slice<jule::U8> _1a7973425_resume(_1a7972226_lex* _self_) {
	jule::I32 _4977_i = (*(_self_))._field_pos;;
	for (; (_4977_i < (*((*(_self_))._field_file))._field_data.len()); (_4977_i)++) {
		{
			jule::I32 _4994_r = static_cast<jule::I32>((*(*(_self_))._field_file.alloc)._field_data[_4977_i]);;
			if (_1a79665e4_IsSpace(_4994_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4994_r };
					
					if (_match_expr == '\n') {
						_case_begin_1abae1869:;
						{
							_1a7975070_newLine(_self_);
						}
					}
					else {
						_case_begin_1abae122b:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1abae14b2:;
				};
				goto _iter_next_1ab97e5b4;
			};
			jule::I32 _5118_j = _4977_i;;
			for (; (_5118_j < (*(*(_self_))._field_file.alloc)._field_data.len()); (_5118_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_data[_5118_j] == '\n')) {
						goto _iter_end_1abae0cdb;
					};
				}
			_iter_next_1abae0cdb:;
			}
			_iter_end_1abae0cdb:;;
			return (*(*(_self_))._field_file.alloc)._field_data.slice(_4977_i, _5118_j);;
		}
	_iter_next_1ab97e5b4:;
	}
	_iter_end_1ab97e5b4:;;
	return nullptr;;
}



inline void _1a79736cd_lexLineComment(_1a7972226_lex* _self_, jule::Ptr<_1a79633b0_Token>* _52235_token) {
	jule::I32 _5233_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5264_r = (*(*(_self_))._field_file.alloc)._field_data[(*(_self_))._field_pos];;
			if (((_5264_r == '\n') || (_5264_r == '\r'))) {
				goto _iter_end_1abae3ecb;
			};
		}
	_iter_next_1abae3ecb:;
	}
	_iter_end_1abae3ecb:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*((*(_52235_token))))._field_Id=static_cast<jule::U32>(15LLU);
		(*((*(_52235_token))))._field_Kind=_1d7492e59_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5233_start, (*(_self_))._field_pos));
	};
}



inline void _1a7973986_lexRangeComment(_1a7972226_lex* _self_, jule::Ptr<_1a79633b0_Token>* _53736_token) {
	jule::I32 _5383_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5414_r = (*(*(_self_))._field_file.alloc)._field_data[(*(_self_))._field_pos];;
			if ((_5414_r == '\r')) {
				goto _iter_next_1abae7584;
			};
			if ((_5414_r == '\n')) {
				_1a7975070_newLine(_self_);
				goto _iter_next_1abae7584;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_data.len()) && (_5414_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*((*(_53736_token))))._field_Id=static_cast<jule::U32>(15LLU);
					(*((*(_53736_token))))._field_Kind=_1d7492e59_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5383_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1abae7584:;
	}
	_iter_end_1abae7584:;;
	_1a79727dc_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _1a7973cc7_num(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _56520_txt) {
	jule::Str __jule_func_result;
	if (((*(_56520_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1a7970a3d_hexNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1abaee190;
	};
	__jule_func_result=_1a7970862_octalNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1abaee190;
	};
	__jule_func_result=_1a796e102_binaryNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1abaee190;
	};
	__jule_func_result=_1a796dd38_commonNum(_56520_txt);
	_julec_label_1abaee190:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1a7974118_escapeSeq(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _58726_txt) {
	jule::Str _5887_seq = jule::Str();;
	if (((*(_58726_txt)).len() < 2LL)) {
		goto _julec_label_1abb02d53;
	};
	{
		auto &_match_expr{ (*(_58726_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1abb00b20:;
			{
				(*(_self_))._field_pos+=2LL;
				return _1d7492e59_StrFromBytes((*(_58726_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1abb00b86:;
			{
				_5887_seq=_1a7971159_bigUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1abb00801:;
			{
				_5887_seq=_1a7971423_littleUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1abb00867:;
			{
				_5887_seq=_1a79716dc_hexByteEscape(_58726_txt);
			}
		}
		else {
			_case_begin_1abb0002b:;
			{
				_5887_seq=_1a79719a6_byteEscape(_58726_txt);
			}
		}
		_match_end_1abb0068b:;
	};
	_julec_label_1abb02d53:;
	if ((_5887_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1a79727dc_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5887_seq.len();
	return _5887_seq;;
}



inline jule::Str _1a7974514_getRune(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw) {
	if (((!(_61737_raw)) && ((*(_61724_txt))[0LL] == '\\'))) {
		return _1a7974118_escapeSeq(_self_, _61724_txt);;
	};
	jule::I32 _6213_r;
	jule::I32 _6216_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78ac906_DecodeRune((*(_61724_txt)));
		_6213_r = __jule_assign_result.__jule_result_arg0;
		_6216_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6216_n;
	return __jule_strFromRune(_6213_r);;
}



inline jule::Str _1a7974855_lexRune(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _62624_txt) {
	_1bc0a106b_Builder _6277_run = static__1bc0a18b8_New(8LL);;
	({
		auto except = _1bc0a2303_WriteByte(&_6277_run, '\'');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:628:3"));
	});
	((*(_self_))._field_column)++;
	jule::I32 _6307_n = 0LL;;
	jule::I32 _6317_i = 1LL;;
	for (; (_6317_i < (*(_62624_txt)).len()); (_6317_i)++) {
		{
			if (((*(_62624_txt))[_6317_i] == '\r')) {
				goto _iter_next_1abb06ad2;
			};
			if (((*(_62624_txt))[_6317_i] == '\n')) {
				_1a79727dc_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1a7975070_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6434_part = (*(_62624_txt)).slice(_6317_i);;
			jule::Str _6444_r = _1a7974514_getRune(_self_, &(_6434_part), false);;
			({
				auto except = _1bc0a204a_WriteStr(&_6277_run, _6444_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:645:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1d78ae6e9_RuneCountStr(_6444_r);
			if (_6444_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1abb06ad2;
			};
			if ((_6444_r.len() > 1LL)) {
				_6317_i+=(_6444_r.len() - 1LL);
			};
			(_6307_n)++;
		}
	_iter_next_1abb06ad2:;
	}
	_iter_end_1abb06ad2:;;
	if ((_6307_n == 0LL)) {
		_1a79727dc_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6307_n > 1LL)) {
		_1a79727dc_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _1bc0a28ca_Str(&_6277_run);;
}



inline jule::Str _1a7974adb_lexStr(_1a7972226_lex* _self_) {
	_1bc0a106b_Builder _6677_s = static__1bc0a18b8_New(16LL);;
	jule::U8 _6683_mark = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6703_raw = (_6683_mark == '`');;
	({
		auto except = _1bc0a2303_WriteByte(&_6677_s, _6683_mark);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:671:3"));
	});
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_data.len())) {
		{
			jule::U8 _6754_ch = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
			if ((_6754_ch == '\r')) {
				goto _iter_next_1abb0c8c9;
			};
			if ((_6754_ch == '\n')) {
				_1a7975070_newLine(_self_);
				if ((!(_6703_raw))) {
					_1a79727dc_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6878_part = (*(*(_self_))._field_file.alloc)._field_data.slice((*(_self_))._field_pos);;
			jule::Str _6884_r = _1a7974514_getRune(_self_, &(_6878_part), _6703_raw);;
			({
				auto except = _1bc0a204a_WriteStr(&_6677_s, _6884_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:689:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1d78ae6e9_RuneCountStr(_6884_r);
			if ((_6754_ch == _6683_mark)) {
				goto _iter_end_1abb0c8c9;
			};
		}
	_iter_next_1abb0c8c9:;
	}
	_iter_end_1abb0c8c9:;;
	return _1bc0a28ca_Str(&_6677_s);;
}



inline void _1a7975070_newLine(_1a7972226_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1a79755d1_isOp(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U32 _70845_id, jule::Ptr<_1a79633b0_Token>* _70858_t) {
	if ((!(_1a796c3a8_bytesHasPrefix(_70821_txt, _70834_kind)))) {
		return false;;
	};
	(*((*(_70858_t))))._field_Kind=_70834_kind;
	(*((*(_70858_t))))._field_Id=_70845_id;
	(*(_self_))._field_pos+=_70834_kind.len();
	return true;;
}



inline jule::Bool _1a79759cc_lexBasicOps(_1a7972226_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1a79633b0_Token>* _71845_tok) {
	{
		auto expr = &(_1a796b9a1_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb13dca:;
		if (it != expr_end) {
			_1a796b286_kindPair *_71910_pair = it;
			{
				if (_1a79755d1_isOp(_self_, &(_71827_txt), (*(_71910_pair))._field_kind, (*(_71910_pair))._field_id, _71845_tok)) {
					return true;;
				};
			}
			_iter_next_1abb13dca:;
			++it;
			goto _iter_begin_1abb13dca;
		}
		_iter_end_1abb13dca:;
	};
	return false;;
}



inline jule::Bool _1a7975dc8_lexId(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1a79633b0_Token>* _72740_t) {
	jule::Str _7283_lex = _1a797318e_id(_self_, _72722_txt);;
	if ((_7283_lex).empty()) {
		return false;;
	};
	(*((*(_72740_t))))._field_Kind=_7283_lex;
	(*((*(_72740_t))))._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _1a79762c4_lexNum(_1a7972226_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1a79633b0_Token>* _73741_t) {
	jule::Str _7383_lex = _1a7973cc7_num(_self_, _73723_txt);;
	if ((_7383_lex).empty()) {
		return false;;
	};
	(*((*(_73741_t))))._field_Kind=_7383_lex;
	(*((*(_73741_t))))._field_Id=static_cast<jule::U32>(4LLU);
	return true;;
}



inline jule::Ptr<_1a79633b0_Token> _1a797655a_token(_1a7972226_lex* _self_) {
	jule::Ptr<_1a79633b0_Token> _7497_t = jule::new_ptr<_1a79633b0_Token>(_1a79633b0_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _7543_txt = _1a7973425_resume(_self_);;
	if ((_7543_txt == nullptr)) {
		return _7497_t;;
	};
	(*(_7497_t))._field_Column=(*(_self_))._field_column;
	(*_7497_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1a79762c4_lexNum(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1abb19d04:;
			{
				goto _match_end_1abb1970a;
			}
		}
		else if ((_7543_txt[0LL] == '\'')) {
			_case_begin_1abb19a6d:;
			{
				(*_7497_t.alloc)._field_Kind=_1a7974855_lexRune(_self_, &(_7543_txt));
				(*_7497_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7497_t;;
			}
		}
		else if (((_7543_txt[0LL] == '\"') || (_7543_txt[0LL] == '`'))) {
			_case_begin_1abb19ad4:;
			{
				(*_7497_t.alloc)._field_Kind=_1a7974adb_lexStr(_self_);
				(*_7497_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7497_t;;
			}
		}
		else if (_1a796c3a8_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_1abb19b4a:;
			{
				_1a79736cd_lexLineComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1a796c3a8_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_1abb19bb1:;
			{
				_1a7973986_lexRangeComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1a79759cc_lexBasicOps(_self_, _7543_txt, &(_7497_t))) {
			_case_begin_1abb19c27:;
			{
				goto _match_end_1abb1970a;
			}
		}
		else if (_1a7975dc8_lexId(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1abb1b0e1:;
			{
				{
					auto expr = &(_1a796b671_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb1e90d:;
					if (it != expr_end) {
						_1a796b286_kindPair *_78611_pair = it;
						{
							if (((*(_78611_pair))._field_kind == (*_7497_t.alloc)._field_Kind)) {
								(*_7497_t.alloc)._field_Id=(*(_78611_pair))._field_id;
								goto _iter_end_1abb1e90d;
							};
						}
						_iter_next_1abb1e90d:;
						++it;
						goto _iter_begin_1abb1e90d;
					}
					_iter_end_1abb1e90d:;
				};
			}
		}
		else {
			_case_begin_1abb1996e:;
			{
				jule::I32 _7934_r;
				jule::I32 _7937_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78ac906_DecodeRune(_7543_txt);
					_7934_r = __jule_assign_result.__jule_result_arg0;
					_7937_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1a79727dc_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7934_r, &__jule_any_type1); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7937_sz;
				return _7497_t;;
			}
		}
		_match_end_1abb1970a:;
	};
	(*(_self_))._field_column+=_1d78ae6e9_RuneCountStr((*_7497_t.alloc)._field_Kind);
	return _7497_t;;
}












inline jule::Bool _1a7977ca9_Node_eq(_1a7977ca9_Node *_self_, _1a7977ca9_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1a7978caa_TypeDecl_eq(_1a7978caa_TypeDecl *_self_, _1a7978caa_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1a7979a58_NamespaceTypeDecl_eq(_1a7979a58_NamespaceTypeDecl *_self_, _1a7979a58_NamespaceTypeDecl _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1a7979d55_SptrTypeDecl_eq(_1a7979d55_SptrTypeDecl *_self_, _1a7979d55_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _1a797a1da_SlcTypeDecl_eq(_1a797a1da_SlcTypeDecl *_self_, _1a797a1da_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _1a797a7d4_PtrTypeDecl_eq(_1a797a7d4_PtrTypeDecl *_self_, _1a797a7d4_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1a797ab7a_IsUnsafe(_1a797a7d4_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1a797b076_ArrTypeDecl_eq(_1a797b076_ArrTypeDecl *_self_, _1a797b076_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1a797b41c_AutoSized(_1a797b076_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _1a797b7c4_MapTypeDecl_eq(_1a797b7c4_MapTypeDecl *_self_, _1a797b7c4_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1a797d0de_Expr_eq(_1a797d0de_Expr *_self_, _1a797d0de_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1a797d3a8_RangeExpr_eq(_1a797d3a8_RangeExpr *_self_, _1a797d3a8_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a797d9b3_UseExpr_eq(_1a797d9b3_UseExpr *_self_, _1a797d9b3_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a797e079_LitExpr_eq(_1a797e079_LitExpr *_self_, _1a797e079_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _1a797e453_UnsafeExpr_eq(_1a797e453_UnsafeExpr *_self_, _1a797e453_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a797e909_IdentExpr_eq(_1a797e909_IdentExpr *_self_, _1a797e909_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1a798019b_UnaryExpr_eq(_1a798019b_UnaryExpr *_self_, _1a798019b_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a7980575_VariadicExpr_eq(_1a7980575_VariadicExpr *_self_, _1a7980575_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a798094e_CastExpr_eq(_1a798094e_CastExpr *_self_, _1a798094e_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a7980d28_NamespaceExpr_eq(_1a7980d28_NamespaceExpr *_self_, _1a7980d28_NamespaceExpr _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a7981202_SubIdentExpr_eq(_1a7981202_SubIdentExpr *_self_, _1a7981202_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a79816a8_BinaryExpr_eq(_1a79816a8_BinaryExpr *_self_, _1a79816a8_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _1a79821c0_Unhandled(_1a7981d18_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1a7982456_Ignored(_1a7981d18_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}








inline jule::Bool _1a798280d_FieldExprPair_eq(_1a798280d_FieldExprPair *_self_, _1a798280d_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _1a7983e19_KeyValPair_eq(_1a7983e19_KeyValPair *_self_, _1a7983e19_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _1a79850a2_IndexingExpr_eq(_1a79850a2_IndexingExpr *_self_, _1a79850a2_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1a7985712_SlicingExpr_eq(_1a7985712_SlicingExpr *_self_, _1a7985712_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _1a7985eb5_GenericDecl_eq(_1a7985eb5_GenericDecl *_self_, _1a7985eb5_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _1a798638e_LabelSt_eq(_1a798638e_LabelSt *_self_, _1a798638e_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a7986768_GotoSt_eq(_1a7986768_GotoSt *_self_, _1a7986768_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a7986a65_FallSt_eq(_1a7986a65_FallSt *_self_, _1a7986a65_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _1a79871c5_AssignLeft_eq(_1a79871c5_AssignLeft *_self_, _1a79871c5_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a7988748_Stmt_eq(_1a7988748_Stmt *_self_, _1a7988748_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1a79895e5_ParamDecl_eq(_1a79895e5_ParamDecl *_self_, _1a79895e5_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1a798999c_IsSelf(_1a79895e5_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _1a798addd_IsAnon(_1a798aa47_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _1a798c0cb_RetSt_eq(_1a798c0cb_RetSt *_self_, _1a798c0cb_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a798c84b_Iter_eq(_1a798c84b_Iter *_self_, _1a798c84b_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1a798cbe2_IsInf(_1a798c84b_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _1a798d176_WhileKind_eq(_1a798d176_WhileKind *_self_, _1a798d176_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1a798d51c_IsWhileNext(_1a798d176_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1a798da7d_RangeKind_eq(_1a798da7d_RangeKind *_self_, _1a798da7d_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1a798de57_BreakSt_eq(_1a798de57_BreakSt *_self_, _1a798de57_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a798e331_ContSt_eq(_1a798e331_ContSt *_self_, _1a798e331_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a798e7d7_If_eq(_1a798e7d7_If *_self_, _1a798e7d7_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1a798ebb1_Else_eq(_1a798ebb1_Else *_self_, _1a798ebb1_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _1a7990981_TypeAliasDecl_eq(_1a7990981_TypeAliasDecl *_self_, _1a7990981_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Strict == _self_->_field_Strict) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1a7991cd4_UseDecl_eq(_1a7991cd4_UseDecl *_self_, _1a7991cd4_UseDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1a799228a_EnumItemDecl_eq(_1a799228a_EnumItemDecl *_self_, _1a799228a_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a7993676_TypeEnumItemDecl_eq(_1a7993676_TypeEnumItemDecl *_self_, _1a7993676_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _1a79940a0_FieldDecl_eq(_1a79940a0_FieldDecl *_self_, _1a79940a0_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}


















inline jule::Bool _1a79ea9a8_Const_eq(_1a79ea9a8_Const *_self_, _1a79ea9a8_Const _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1a79ea9a8_Const> static__1a7a574d7_NewI64(jule::I64 _1419_x) {
	return jule::new_ptr<_1a79ea9a8_Const>(_1a79ea9a8_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1419_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1a79ea9a8_Const> static__1a7a5775c_NewU64(jule::U64 _1719_x) {
	return jule::new_ptr<_1a79ea9a8_Const>(_1a79ea9a8_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1719_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1a79ea9a8_Const> static__1a7a57a26_NewBool(jule::Bool _2020_x) {
	return jule::new_ptr<_1a79ea9a8_Const>(_1a79ea9a8_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2020_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1a79ea9a8_Const> static__1a7a57ce0_NewStr(jule::Str _2319_x) {
	return jule::new_ptr<_1a79ea9a8_Const>(_1a79ea9a8_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2319_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1a79ea9a8_Const> static__1a7a580a9_NewF64(jule::F64 _2619_x) {
	return jule::new_ptr<_1a79ea9a8_Const>(_1a79ea9a8_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2619_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1a79ea9a8_Const> static__1a7a582b8_NewNil(void) {
	return jule::new_ptr<_1a79ea9a8_Const>(_1a79ea9a8_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1a7a58928_ReadI64(_1a79ea9a8_Const* _self_) {
	if ((!(_1a7a5b024_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2);;
}



inline jule::U64 _1a7a58bae_ReadU64(_1a79ea9a8_Const* _self_) {
	if ((!(_1a7a5b2aa_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3);;
}



inline jule::Bool _1a7a58e45_ReadBool(_1a79ea9a8_Const* _self_) {
	if ((!(_1a7a5b541_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1a7a591cb_ReadStr(_1a79ea9a8_Const* _self_) {
	if ((!(_1a7a5b7c7_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1a7a59462_ReadF64(_1a79ea9a8_Const* _self_) {
	if ((!(_1a7a5ba5d_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6);;
}



inline jule::I64 _1a7a596e8_AsI64(_1a79ea9a8_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1abb7b1ea:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1abb7c11e:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1abb7c185:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1abb7bb9b:;
			{
				return 0LL;;
			}
		}
		_match_end_1abb7bb35:;
	};
}



inline jule::U64 _1a7a5997e_AsU64(_1a79ea9a8_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1abb7d52c:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1abb7bd44:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1abb7bdaa:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1abb7bccd:;
			{
				return 0LLU;;
			}
		}
		_match_end_1abb7bc67:;
	};
}



inline jule::F64 _1a7a59c15_AsF64(_1a79ea9a8_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1abb802ba:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1abb7d906:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1abb7d96c:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1abb7d890:;
			{
				return 0LL;;
			}
		}
		_match_end_1abb7d829:;
	};
}



inline void _1a7a59ebd_SetI64(_1a79ea9a8_Const* _self_, jule::I64 _13622_x) {
	(*(_self_))._field_data=jule::Any(_13622_x, &__jule_any_type2);
}



inline void _1a7a5a276_SetU64(_1a79ea9a8_Const* _self_, jule::U64 _13922_x) {
	(*(_self_))._field_data=jule::Any(_13922_x, &__jule_any_type3);
}



inline void _1a7a5a52e_SetBool(_1a79ea9a8_Const* _self_, jule::Bool _14223_x) {
	(*(_self_))._field_data=jule::Any(_14223_x, &__jule_any_type4);
}



inline void _1a7a5a7d7_SetStr(_1a79ea9a8_Const* _self_, jule::Str _14522_x) {
	(*(_self_))._field_data=jule::Any(_14522_x, &__jule_any_type5);
}



inline void _1a7a5aa90_SetF64(_1a79ea9a8_Const* _self_, jule::F64 _14822_x) {
	(*(_self_))._field_data=jule::Any(_14822_x, &__jule_any_type6);
}



inline jule::Bool _1a7a5b024_IsI64(_1a79ea9a8_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1abb838ea:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1abb83b70:;
			{
				return false;;
			}
		}
		_match_end_1abb83b09:;
	};
}



inline jule::Bool _1a7a5b2aa_IsU64(_1a79ea9a8_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1abb83d4b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1abb844ab:;
			{
				return false;;
			}
		}
		_match_end_1abb84445:;
	};
}



inline jule::Bool _1a7a5b541_IsBool(_1a79ea9a8_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1abb84a2d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1abb84db3:;
			{
				return false;;
			}
		}
		_match_end_1abb84d4c:;
	};
}



inline jule::Bool _1a7a5b7c7_IsStr(_1a79ea9a8_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1abb85468:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1abb857ed:;
			{
				return false;;
			}
		}
		_match_end_1abb85787:;
	};
}



inline jule::Bool _1a7a5ba5d_IsF64(_1a79ea9a8_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1abb85da3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1abb86238:;
			{
				return false;;
			}
		}
		_match_end_1abb861c2:;
	};
}



inline jule::Bool _1a7a5bce4_IsNil(_1a79ea9a8_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1a7a5c476_And(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _23615_x) {
	{
		
		if ((_1a7a5b541_IsBool(_self_) && _1a7a5b541_IsBool(&_23615_x))) {
			_case_begin_1abb8a616:;
			{
				return (_1a7a58e45_ReadBool(_self_) && _1a7a58e45_ReadBool(&_23615_x));;
			}
		}
		else {
			_case_begin_1abb8a5a0:;
			{
				return false;;
			}
		}
		_match_end_1abb8a182:;
	};
}



inline jule::Bool _1a7a5c7b7_Or(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _24714_x) {
	{
		
		if ((_1a7a5b541_IsBool(_self_) && _1a7a5b541_IsBool(&_24714_x))) {
			_case_begin_1abb8b903:;
			{
				return (_1a7a58e45_ReadBool(_self_) || _1a7a58e45_ReadBool(&_24714_x));;
			}
		}
		else {
			_case_begin_1abb8b0b7:;
			{
				return false;;
			}
		}
		_match_end_1abb8aea7:;
	};
}



inline jule::Bool _1a7a5cb08_Eq(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _25814_x) {
	{
		
		if (_1a7a5bce4_IsNil(_self_)) {
			_case_begin_1abb8cc45:;
			{
				return _1a7a5bce4_IsNil(&_25814_x);;
			}
		}
		else if (_1a7a5b541_IsBool(_self_)) {
			_case_begin_1abb8ccab:;
			{
				return (_1a7a5b541_IsBool(&_25814_x) && (_1a7a58e45_ReadBool(_self_) == _1a7a58e45_ReadBool(&_25814_x)));;
			}
		}
		else if (_1a7a5b7c7_IsStr(_self_)) {
			_case_begin_1abb8cd22:;
			{
				return (_1a7a5b7c7_IsStr(&_25814_x) && (_1a7a591cb_ReadStr(_self_) == _1a7a591cb_ReadStr(&_25814_x)));;
			}
		}
		else if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abb8cd88:;
			{
				return (_1a7a58928_ReadI64(_self_) == _1a7a596e8_AsI64(&_25814_x));;
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abb8ce10:;
			{
				return (_1a7a58bae_ReadU64(_self_) == _1a7a5997e_AsU64(&_25814_x));;
			}
		}
		else if (_1a7a5ba5d_IsF64(_self_)) {
			_case_begin_1abb8d086:;
			{
				return (_1a7a59462_ReadF64(_self_) == _1a7a59c15_AsF64(&_25814_x));;
			}
		}
		else {
			_case_begin_1abb8c382:;
			{
				return false;;
			}
		}
		_match_end_1abb8c272:;
	};
}



inline jule::Bool _1a7a5ce49_Lt(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _28514_x) {
	{
		
		if (_1a7a5b7c7_IsStr(_self_)) {
			_case_begin_1abb9193b:;
			{
				return (_1a7a5b7c7_IsStr(&_28514_x) && (_1a7a591cb_ReadStr(_self_) < _1a7a591cb_ReadStr(&_28514_x)));;
			}
		}
		else if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abb919a2:;
			{
				return (_1a7a58928_ReadI64(_self_) < _1a7a596e8_AsI64(&_28514_x));;
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abb91a18:;
			{
				return (_1a7a58bae_ReadU64(_self_) < _1a7a5997e_AsU64(&_28514_x));;
			}
		}
		else if (_1a7a5ba5d_IsF64(_self_)) {
			_case_begin_1abb91a7e:;
			{
				return (_1a7a59462_ReadF64(_self_) < _1a7a59c15_AsF64(&_28514_x));;
			}
		}
		else {
			_case_begin_1abb8d680:;
			{
				return false;;
			}
		}
		_match_end_1abb8d570:;
	};
}



inline jule::Bool _1a7a5d28a_LtEq(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _30816_x) {
	{
		
		if (_1a7a5b7c7_IsStr(_self_)) {
			_case_begin_1abb94620:;
			{
				return (_1a7a5b7c7_IsStr(&_30816_x) && (_1a7a591cb_ReadStr(_self_) <= _1a7a591cb_ReadStr(&_30816_x)));;
			}
		}
		else if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abb94686:;
			{
				return (_1a7a58928_ReadI64(_self_) <= _1a7a596e8_AsI64(&_30816_x));;
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abb946ec:;
			{
				return (_1a7a58bae_ReadU64(_self_) <= _1a7a5997e_AsU64(&_30816_x));;
			}
		}
		else if (_1a7a5ba5d_IsF64(_self_)) {
			_case_begin_1abb94763:;
			{
				return (_1a7a59462_ReadF64(_self_) <= _1a7a59c15_AsF64(&_30816_x));;
			}
		}
		else {
			_case_begin_1abb92277:;
			{
				return false;;
			}
		}
		_match_end_1abb92167:;
	};
}



inline jule::Bool _1a7a5d5cb_Gt(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _33114_x) {
	{
		
		if (_1a7a5b7c7_IsStr(_self_)) {
			_case_begin_1abb97304:;
			{
				return (_1a7a5b7c7_IsStr(&_33114_x) && (_1a7a591cb_ReadStr(_self_) > _1a7a591cb_ReadStr(&_33114_x)));;
			}
		}
		else if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abb9736a:;
			{
				return (_1a7a58928_ReadI64(_self_) > _1a7a596e8_AsI64(&_33114_x));;
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abb973d1:;
			{
				return (_1a7a58bae_ReadU64(_self_) > _1a7a5997e_AsU64(&_33114_x));;
			}
		}
		else if (_1a7a5ba5d_IsF64(_self_)) {
			_case_begin_1abb97447:;
			{
				return (_1a7a59462_ReadF64(_self_) > _1a7a59c15_AsF64(&_33114_x));;
			}
		}
		else {
			_case_begin_1abb94e5b:;
			{
				return false;;
			}
		}
		_match_end_1abb94d4b:;
	};
}



inline jule::Bool _1a7a5d91c_GtEq(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _35416_x) {
	{
		
		if (_1a7a5b7c7_IsStr(_self_)) {
			_case_begin_1abb99ed8:;
			{
				return (_1a7a5b7c7_IsStr(&_35416_x) && (_1a7a591cb_ReadStr(_self_) >= _1a7a591cb_ReadStr(&_35416_x)));;
			}
		}
		else if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abb9a04e:;
			{
				return (_1a7a58928_ReadI64(_self_) >= _1a7a596e8_AsI64(&_35416_x));;
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abb9a0b5:;
			{
				return (_1a7a58bae_ReadU64(_self_) >= _1a7a5997e_AsU64(&_35416_x));;
			}
		}
		else if (_1a7a5ba5d_IsF64(_self_)) {
			_case_begin_1abb9a12b:;
			{
				return (_1a7a59462_ReadF64(_self_) >= _1a7a59c15_AsF64(&_35416_x));;
			}
		}
		else {
			_case_begin_1abb97b40:;
			{
				return false;;
			}
		}
		_match_end_1abb97a30:;
	};
}



inline jule::Bool _1a7a5dc5d_Add(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _37519_x) {
	{
		
		if (_1a7a5b7c7_IsStr(_self_)) {
			_case_begin_1abb9cbbc:;
			{
				if ((!(_1a7a5b7c7_IsStr(&_37519_x)))) {
					return false;;
				};
				_1a7a5a7d7_SetStr(_self_, (_1a7a591cb_ReadStr(_self_) + _1a7a591cb_ReadStr(&_37519_x)));
			}
		}
		else if (_1a7a5ba5d_IsF64(_self_)) {
			_case_begin_1abb9cc33:;
			{
				_1a7a5aa90_SetF64(_self_, (_1a7a59462_ReadF64(_self_) + _1a7a59c15_AsF64(&_37519_x)));
			}
		}
		else if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abb9cc99:;
			{
				if (_1a7a5ba5d_IsF64(&_37519_x)) {
					_1a7a5aa90_SetF64(_self_, (_1a7a59c15_AsF64(_self_) + _1a7a59462_ReadF64(&_37519_x)));
				} else {
					_1a7a59ebd_SetI64(_self_, (_1a7a58928_ReadI64(_self_) + _1a7a596e8_AsI64(&_37519_x)));
				};
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abb9cd10:;
			{
				if (_1a7a5ba5d_IsF64(&_37519_x)) {
					_1a7a5aa90_SetF64(_self_, (_1a7a59c15_AsF64(_self_) + _1a7a59462_ReadF64(&_37519_x)));
				} else {
					_1a7a5a276_SetU64(_self_, (jule::U64)(_1a7a58bae_ReadU64(_self_) + _1a7a5997e_AsU64(&_37519_x)));
				};
			}
		}
		else {
			_case_begin_1abb9a824:;
			{
				return false;;
			}
		}
		_match_end_1abb9a714:;
	};
	return true;;
}



inline jule::Bool _1a7a5e09e_Sub(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _40419_x) {
	{
		
		if (_1a7a5ba5d_IsF64(_self_)) {
			_case_begin_1abba29b3:;
			{
				_1a7a5aa90_SetF64(_self_, (_1a7a59462_ReadF64(_self_) - _1a7a59c15_AsF64(&_40419_x)));
			}
		}
		else if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abba2a29:;
			{
				if (_1a7a5ba5d_IsF64(&_40419_x)) {
					_1a7a5aa90_SetF64(_self_, (_1a7a59c15_AsF64(_self_) - _1a7a59462_ReadF64(&_40419_x)));
				} else {
					_1a7a59ebd_SetI64(_self_, (_1a7a58928_ReadI64(_self_) - _1a7a596e8_AsI64(&_40419_x)));
				};
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abba2a90:;
			{
				if (_1a7a5ba5d_IsF64(&_40419_x)) {
					_1a7a5aa90_SetF64(_self_, (_1a7a59c15_AsF64(_self_) - _1a7a59462_ReadF64(&_40419_x)));
				} else {
					_1a7a5a276_SetU64(_self_, (jule::U64)(_1a7a58bae_ReadU64(_self_) - _1a7a5997e_AsU64(&_40419_x)));
				};
			}
		}
		else {
			_case_begin_1abba2232:;
			{
				return false;;
			}
		}
		_match_end_1abba2155:;
	};
	return true;;
}



inline jule::Bool _1a7a5e3e0_Mul(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _42819_x) {
	{
		
		if (_1a7a5ba5d_IsF64(_self_)) {
			_case_begin_1abba6896:;
			{
				_1a7a5aa90_SetF64(_self_, (_1a7a59462_ReadF64(_self_) * _1a7a59c15_AsF64(&_42819_x)));
			}
		}
		else if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abba690c:;
			{
				if (_1a7a5ba5d_IsF64(&_42819_x)) {
					_1a7a5aa90_SetF64(_self_, (_1a7a59c15_AsF64(_self_) * _1a7a59462_ReadF64(&_42819_x)));
				} else {
					_1a7a59ebd_SetI64(_self_, (_1a7a58928_ReadI64(_self_) * _1a7a596e8_AsI64(&_42819_x)));
				};
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abba6973:;
			{
				if (_1a7a5ba5d_IsF64(&_42819_x)) {
					_1a7a5aa90_SetF64(_self_, (_1a7a59c15_AsF64(_self_) * _1a7a59462_ReadF64(&_42819_x)));
				} else {
					_1a7a5a276_SetU64(_self_, (jule::U64)(_1a7a58bae_ReadU64(_self_) * _1a7a5997e_AsU64(&_42819_x)));
				};
			}
		}
		else {
			_case_begin_1abba5e8e:;
			{
				return false;;
			}
		}
		_match_end_1abba5d90:;
	};
	return true;;
}



inline jule::Bool _1a7a5e731_Div(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _45619_x) {
	{
		
		if (_1a7a5ba5d_IsF64(_self_)) {
			_case_begin_1abbaa779:;
			{
				jule::F64 _4594_l = _1a7a59c15_AsF64(&_45619_x);;
				if ((_4594_l == 0LL)) {
					return false;;
				};
				_1a7a5aa90_SetF64(_self_, ({ jule::F64 __jule_x = _1a7a59462_ReadF64(_self_); jule::F64 __jule_y = _4594_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abbaa7e0:;
			{
				jule::F64 _4654_l = _1a7a59c15_AsF64(&_45619_x);;
				if ((_4654_l == 0LL)) {
					return false;;
				};
				_1a7a5aa90_SetF64(_self_, ({ jule::F64 __jule_x = _1a7a59c15_AsF64(_self_); jule::F64 __jule_y = _4654_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abbaa856:;
			{
				jule::F64 _4714_l = _1a7a59c15_AsF64(&_45619_x);;
				if ((_4714_l == 0LL)) {
					return false;;
				};
				_1a7a5aa90_SetF64(_self_, ({ jule::F64 __jule_x = _1a7a59c15_AsF64(_self_); jule::F64 __jule_y = _4714_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_1abba9d72:;
			{
				return false;;
			}
		}
		_match_end_1abba9c73:;
	};
	return true;;
}



inline jule::Bool _1a7a5ea72_Mod(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _48519_x) {
	{
		
		if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abbae63a:;
			{
				jule::I64 _4884_l = _1a7a596e8_AsI64(&_48519_x);;
				if ((_4884_l == 0LL)) {
					return false;;
				};
				_1a7a59ebd_SetI64(_self_, ({ jule::I64 __jule_x = _1a7a58928_ReadI64(_self_); jule::I64 __jule_y = _4884_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abbae6d4:;
			{
				jule::U64 _4944_l = _1a7a5997e_AsU64(&_48519_x);;
				if ((_4944_l == 0LLU)) {
					return false;;
				};
				_1a7a5a276_SetU64(_self_, ({ jule::U64 __jule_x = _1a7a58bae_ReadU64(_self_); jule::U64 __jule_y = _4944_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_1abbae5c4:;
			{
				return false;;
			}
		}
		_match_end_1abbae4b4:;
	};
	return true;;
}



inline jule::Bool _1a7a5edb3_BitwiseAnd(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _50726_x) {
	{
		
		if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abbb2440:;
			{
				_1a7a59ebd_SetI64(_self_, (_1a7a58928_ReadI64(_self_) & _1a7a596e8_AsI64(&_50726_x)));
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abbb24d9:;
			{
				_1a7a5a276_SetU64(_self_, (_1a7a58bae_ReadU64(_self_) & _1a7a5997e_AsU64(&_50726_x)));
			}
		}
		else {
			_case_begin_1abbb23c9:;
			{
				return false;;
			}
		}
		_match_end_1abbb22b9:;
	};
	return true;;
}



inline jule::Bool _1a7a60204_BitwiseOr(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _52125_x) {
	{
		
		if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abbb41de:;
			{
				_1a7a59ebd_SetI64(_self_, (_1a7a58928_ReadI64(_self_) | _1a7a596e8_AsI64(&_52125_x)));
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abbb4288:;
			{
				_1a7a5a276_SetU64(_self_, (_1a7a58bae_ReadU64(_self_) | _1a7a5997e_AsU64(&_52125_x)));
			}
		}
		else {
			_case_begin_1abbb4178:;
			{
				return false;;
			}
		}
		_match_end_1abbb4068:;
	};
	return true;;
}



inline jule::Bool _1a7a60545_Xor(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _53519_x) {
	{
		
		if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abbb5e8d:;
			{
				_1a7a59ebd_SetI64(_self_, (_1a7a58928_ReadI64(_self_) ^ _1a7a596e8_AsI64(&_53519_x)));
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abbb6037:;
			{
				_1a7a5a276_SetU64(_self_, (_1a7a58bae_ReadU64(_self_) ^ _1a7a5997e_AsU64(&_53519_x)));
			}
		}
		else {
			_case_begin_1abbb5e27:;
			{
				return false;;
			}
		}
		_match_end_1abbb5d17:;
	};
	return true;;
}



inline jule::Bool _1a7a60886_Lshift(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _54922_x) {
	{
		
		if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abbb7c3c:;
			{
				jule::I64 _5524_l = _1a7a596e8_AsI64(_self_);;
				if ((_5524_l < 0LL)) {
					jule::U64 _5545_r = _1a7a5997e_AsU64(&_54922_x);;
					_1a7a59ebd_SetI64(_self_, ({ jule::I64 __jule_x = _5524_l; jule::U64 __jule_y = _5545_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_1a7a6103a_lshiftUnsig(_self_, &(_54922_x));
				};
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abbb7cd6:;
			{
				_1a7a6103a_lshiftUnsig(_self_, &(_54922_x));
			}
		}
		else {
			_case_begin_1abbb7bc6:;
			{
				return false;;
			}
		}
		_match_end_1abbb7ab6:;
	};
	return true;;
}



inline jule::Bool _1a7a60bc7_Rshift(_1a79ea9a8_Const* _self_, _1a79ea9a8_Const _56922_x) {
	{
		
		if (_1a7a5b024_IsI64(_self_)) {
			_case_begin_1abbba27d:;
			{
				jule::I64 _5724_l = _1a7a596e8_AsI64(_self_);;
				if ((_5724_l < 0LL)) {
					jule::U64 _5745_r = _1a7a5997e_AsU64(&_56922_x);;
					_1a7a59ebd_SetI64(_self_, ({ jule::I64 __jule_x = _5724_l; jule::U64 __jule_y = _5745_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_1a7a6136a_rshiftUnsig(_self_, &(_56922_x));
				};
			}
		}
		else if (_1a7a5b2aa_IsU64(_self_)) {
			_case_begin_1abbba327:;
			{
				_1a7a6136a_rshiftUnsig(_self_, &(_56922_x));
			}
		}
		else {
			_case_begin_1abbba217:;
			{
				return false;;
			}
		}
		_match_end_1abbba107:;
	};
	return true;;
}








inline jule::Bool _1a7996800_Field_eq(_1a7996800_Field *_self_, _1a7996800_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1a7999d53_FieldIns> _1a7996ba7_instance(jule::Ptr<_1a7996800_Field> _self_) {
	return jule::new_ptr<_1a7999d53_FieldIns>(_1a7999d53_FieldIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=_self_, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Default=jule::Ptr<_1a7bed89d_Data>(nullptr)});;
}







inline jule::Ptr<_1a799a97a_StructIns> _1a799800a_instance(jule::Ptr<_1a7997adc_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1a799a97a_StructIns> _667_ins = jule::new_ptr<_1a799a97a_StructIns>(_1a799a97a_StructIns{._field_Source=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7999d53_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7999d53_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7ba4eb4_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1a7a70a83_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1a7b4cae9_new()});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7ec4a9:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> _7315_s = *it;
			{
				(*(_667_ins))._field_Statics=jule::append((*_667_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7ba4eb4_Var>((*(_7315_s))); __jule_collection; }));
			}
			_iter_next_1ab7ec4a9:;
			++it;
			goto _iter_begin_1ab7ec4a9;
		}
		_iter_end_1ab7ec4a9:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7ed653:;
		if (it != expr_end) {
			jule::Ptr<_1a7996800_Field> _7715_f = *it;
			{
				jule::Ptr<_1a7999d53_FieldIns> _788_f2 = _1a7996ba7_instance(_7715_f);;
				(*(_788_f2))._field_Owner=_667_ins;
				(*(_667_ins))._field_Fields=jule::append((*_667_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7999d53_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _788_f2; __jule_collection; }));
				if ((((!((*_7715_f.alloc)._field_Mutable)) && ((*((*_7715_f.alloc)._field_TypeSym))._field_Type != nullptr)) && _1a7c348a1_Mutable((*((*(_7715_f))._field_TypeSym))._field_Type))) {
					(*_667_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1ab7ed653:;
			++it;
			goto _iter_begin_1ab7ed653;
		}
		_iter_end_1ab7ed653:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*(_667_ins))._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*(_667_ins))._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a70a83_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7a70a83_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab802613:;
			if (it != expr_end) {
				jule::Ptr<_1a7a70a83_Fn> _9016_f = *it;
				{
					jule::Ptr<_1a7a70a83_Fn> _919_fins = jule::new_ptr<_1a7a70a83_Fn>((*(_9016_f)));;
					(*_919_fins.alloc)._field_Instances=nullptr;
					(*_667_ins.alloc)._field_Methods=jule::append((*_667_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a70a83_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_fins; __jule_collection; }));
				}
				_iter_next_1ab802613:;
				++it;
				goto _iter_begin_1ab802613;
			}
			_iter_end_1ab802613:;
		};
	};
	return _667_ins;;
}



inline jule::Ptr<_1a799a97a_StructIns> _1a799834b_appendInstance(_1a7997adc_Struct* _self_, jule::Ptr<_1a799a97a_StructIns>* _10235_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8048e0:;
		if (it != expr_end) {
			jule::Ptr<_1a799a97a_StructIns> _10815_ains = *it;
			{
				if (_1a799b5e6_Same(_10815_ains.ptr(), (*(_10235_ins)))) {
					return _10815_ains;;
				};
			}
			_iter_next_1ab8048e0:;
			++it;
			goto _iter_begin_1ab8048e0;
		}
		_iter_end_1ab8048e0:;
	};
	{ jule::Slice<jule::Ptr<_1a799a97a_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_10235_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1a7a70a83_Fn> _1a7998747_FindMethod(_1a7997adc_Struct* _self_, jule::Str _12026_ident, jule::Bool _12038_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab805e41:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _12115_f = *it;
			{
				if ((((*(_12115_f))._field_Statically == _12038_statically) && ((*_12115_f.alloc)._field_Ident == _12026_ident))) {
					return _12115_f;;
				};
			}
			_iter_next_1ab805e41:;
			++it;
			goto _iter_begin_1ab805e41;
		}
		_iter_end_1ab805e41:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7ba4eb4_Var> _1a7998a88_FindStatic(_1a7997adc_Struct* _self_, jule::Str _13126_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab807261:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> _13215_v = *it;
			{
				if (((*(_13215_v))._field_Ident == _13126_ident)) {
					return _13215_v;;
				};
			}
			_iter_next_1ab807261:;
			++it;
			goto _iter_begin_1ab807261;
		}
		_iter_end_1ab807261:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7996800_Field> _1a7998dc9_FindField(_1a7997adc_Struct* _self_, jule::Str _14225_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab80821d:;
		if (it != expr_end) {
			jule::Ptr<_1a7996800_Field> _14315_f = *it;
			{
				if (((*(_14315_f))._field_Ident == _14225_ident)) {
					return _14315_f;;
				};
			}
			_iter_next_1ab80821d:;
			++it;
			goto _iter_begin_1ab80821d;
		}
		_iter_end_1ab80821d:;
	};
	return nullptr;;
}



inline jule::Bool _1a799921a_IsImplements(_1a7997adc_Struct* _self_, jule::Ptr<_1a7a7b297_Trait> _15224_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8091db:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7b297_Trait> *_15310_it = it;
			{
				if ((_15224_t == (*(_15310_it)))) {
					return true;;
				};
			}
			_iter_next_1ab8091db:;
			++it;
			goto _iter_begin_1ab8091db;
		}
		_iter_end_1ab8091db:;
	};
	return false;;
}



inline jule::Bool _1a799955b_IsUses(_1a7997adc_Struct* _self_, jule::Ptr<_1a7997adc_Struct> _16218_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab809b37:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> *_16310_u = it;
			{
				while ((_16218_s == (*(_16310_u)))) {
					{
						return true;;
					}
				_iter_next_1ab80a71a:;
				}
				_iter_end_1ab80a71a:;;
			}
			_iter_next_1ab809b37:;
			++it;
			goto _iter_begin_1ab809b37;
		}
		_iter_end_1ab809b37:;
	};
	return false;;
}








inline jule::Bool _1a7999d53_FieldIns_eq(_1a7999d53_FieldIns *_self_, _1a7999d53_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _1a799acee_Str(_1a799a97a_StructIns* _self_) {
	_1bc0a106b_Builder _2087_kind = static__1bc0a18b8_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Binded) {
		({
			auto except = _1bc0a204a_WriteStr(&_2087_kind, jule::Str::lit("cpp.", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:210:4"));
			(except.result);
		});
	};
	({
		auto except = _1bc0a204a_WriteStr(&_2087_kind, (*((*(_self_))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:212:3"));
		(except.result);
	});
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		({
			auto except = _1bc0a2303_WriteByte(&_2087_kind, '[');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:214:4"));
		});
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab80dcd4:;
			if (it != expr_end) {
				jule::I32 _2158_i = it - expr->begin();
				jule::Ptr<_1a7c30b77_InsGeneric> *_21511_g = it;
				{
					({
						auto except = _1bc0a204a_WriteStr(&_2087_kind, _1a7c32959_Str((*((*(_21511_g))))._field_Type.ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:216:5"));
						(except.result);
					});
					if ((_2158_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						({
							auto except = _1bc0a2303_WriteByte(&_2087_kind, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:218:6"));
						});
					};
				}
				_iter_next_1ab80dcd4:;
				++it;
				_2158_i++;
				goto _iter_begin_1ab80dcd4;
			}
			_iter_end_1ab80dcd4:;
		};
		({
			auto except = _1bc0a2303_WriteByte(&_2087_kind, ']');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:221:4"));
		});
	};
	return _1bc0a28ca_Str(&_2087_kind);;
}



inline jule::Bool _1a799b140_Equal(jule::Ptr<_1a799a97a_StructIns> _self_, jule::Ptr<_1a7c3255d_Type> _22718_other) {
	{
		auto &_match_expr{ (*(_22718_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
			_case_begin_1ab8119a7:;
			{
				jule::Ptr<_1a799a97a_StructIns> _2304_s = (*(_22718_other))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);;
				if (((*(_2304_s))._field_Source != nullptr)) {
					return (_self_ == _2304_s);;
				};
			}
		}
		else {
			_case_begin_1ab81107d:;
			{
				if (((*(_self_))._field_Source != nullptr)) {
					return false;;
				};
			}
		}
		_match_end_1ab811017:;
	};
	jule::Ptr<_1a799a97a_StructIns> _2403_s = _1a7c36be4_Struct(_22718_other.ptr());;
	if ((((_2403_s == nullptr) || ((*(_self_))._field_Decl != (*(_2403_s))._field_Decl)) || ((*(_self_))._field_Generics.len() != (*(_2403_s))._field_Generics.len()))) {
		return false;;
	};
	jule::I32 _2487_i = 0LL;;
	for (; (_2487_i < (*(_self_))._field_Generics.len()); (_2487_i)++) {
		{
			if ((!(_1a7c32c9a_Equal((*((*_self_.alloc)._field_Generics[_2487_i]))._field_Type, (*((*(_2403_s))._field_Generics[_2487_i]))._field_Type)))) {
				return false;;
			};
		}
	_iter_next_1ab8145ae:;
	}
	_iter_end_1ab8145ae:;;
	return true;;
}



inline jule::Bool _1a799b5e6_Same(_1a799a97a_StructIns* _self_, jule::Ptr<_1a799a97a_StructIns> _26216_s) {
	if ((((*(_self_))._field_Decl != (*(_26216_s))._field_Decl) || ((*(_26216_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab816e85:;
		if (it != expr_end) {
			jule::I32 _2667_i = it - expr->begin();
			jule::Ptr<_1a7c30b77_InsGeneric> *_26610_g = it;
			{
				jule::Ptr<_1a7c30b77_InsGeneric> _2674_g2 = (*(_26216_s))._field_Generics[_2667_i];;
				if ((!(_1a7c32c9a_Equal((*((*(_26610_g))))._field_Type, (*(_2674_g2))._field_Type)))) {
					return false;;
				};
			}
			_iter_next_1ab816e85:;
			++it;
			_2667_i++;
			goto _iter_begin_1ab816e85;
		}
		_iter_end_1ab816e85:;
	};
	return true;;
}



inline jule::Ptr<_1a7a70a83_Fn> _1a799b9e2_FindMethod(_1a799a97a_StructIns* _self_, jule::Str _27726_ident, jule::Bool _27738_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab819020:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _27815_f = *it;
			{
				if ((((*(_27815_f))._field_Statically == _27738_statically) && ((*_27815_f.alloc)._field_Ident == _27726_ident))) {
					return _27815_f;;
				};
			}
			_iter_next_1ab819020:;
			++it;
			goto _iter_begin_1ab819020;
		}
		_iter_end_1ab819020:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7999d53_FieldIns> _1a799bd33_FindField(_1a799a97a_StructIns* _self_, jule::Str _28825_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab81a340:;
		if (it != expr_end) {
			jule::Ptr<_1a7999d53_FieldIns> _28915_f = *it;
			{
				if (((*((*(_28915_f))._field_Decl))._field_Ident == _28825_ident)) {
					return _28915_f;;
				};
			}
			_iter_next_1ab81a340:;
			++it;
			goto _iter_begin_1ab81a340;
		}
		_iter_end_1ab81a340:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7ba4eb4_Var> _1a799c174_FindStatic(_1a799a97a_StructIns* _self_, jule::Str _29926_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab81b50b:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> _30015_v = *it;
			{
				if (((*(_30015_v))._field_Ident == _29926_ident)) {
					return _30015_v;;
				};
			}
			_iter_next_1ab81b50b:;
			++it;
			goto _iter_begin_1ab81b50b;
		}
		_iter_end_1ab81b50b:;
	};
	return nullptr;;
}








inline jule::Bool _1a7a633b1_OperandExpr_eq(_1a7a633b1_OperandExpr *_self_, _1a7a633b1_OperandExpr _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _1a7a638ab_BinaryExpr_eq(_1a7a638ab_BinaryExpr *_self_, _1a7a638ab_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1a7a63c85_UnaryExpr_eq(_1a7a63c85_UnaryExpr *_self_, _1a7a63c85_UnaryExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1a7a642b3_StructArgExpr_eq(_1a7a642b3_StructArgExpr *_self_, _1a7a642b3_StructArgExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a7a64956_AllocStructLitExpr_eq(_1a7a64956_AllocStructLitExpr *_self_, _1a7a64956_AllocStructLitExpr _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _1a7a64ed9_CastingExpr_eq(_1a7a64ed9_CastingExpr *_self_, _1a7a64ed9_CastingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_ExprType == _self_->_field_ExprType);
}














inline jule::Bool _1a7a6621b_IndexingExpr_eq(_1a7a6621b_IndexingExpr *_self_, _1a7a6621b_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _1a7a66a9b_KeyValPairExpr_eq(_1a7a66a9b_KeyValPairExpr *_self_, _1a7a66a9b_KeyValPairExpr _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1a7a67508_SlicingExpr_eq(_1a7a67508_SlicingExpr *_self_, _1a7a67508_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1a7a67a8b_TraitSubIdentExpr_eq(_1a7a67a8b_TraitSubIdentExpr *_self_, _1a7a67a8b_TraitSubIdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _1a7a6842c_StructSubIdentExpr_eq(_1a7a6842c_StructSubIdentExpr *_self_, _1a7a6842c_StructSubIdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _1a7a687c3_StructStaticIdentExpr_eq(_1a7a687c3_StructStaticIdentExpr *_self_, _1a7a687c3_StructStaticIdentExpr _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _1a7a69296_BuiltinPrintCallExpr_eq(_1a7a69296_BuiltinPrintCallExpr *_self_, _1a7a69296_BuiltinPrintCallExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a7a69593_BuiltinPrintlnCallExpr_eq(_1a7a69593_BuiltinPrintlnCallExpr *_self_, _1a7a69593_BuiltinPrintlnCallExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a7a6996c_BuiltinNewCallExpr_eq(_1a7a6996c_BuiltinNewCallExpr *_self_, _1a7a6996c_BuiltinNewCallExpr _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _1a7a69d46_BuiltinPanicCallExpr_eq(_1a7a69d46_BuiltinPanicCallExpr *_self_, _1a7a69d46_BuiltinPanicCallExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a7a6a2ec_BuiltinMakeCallExpr_eq(_1a7a6a2ec_BuiltinMakeCallExpr *_self_, _1a7a6a2ec_BuiltinMakeCallExpr _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _1a7a6a6c6_BuiltinAppendCallExpr_eq(_1a7a6a6c6_BuiltinAppendCallExpr *_self_, _1a7a6a6c6_BuiltinAppendCallExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _1a7a6a9c3_BuiltinLenCallExpr_eq(_1a7a6a9c3_BuiltinLenCallExpr *_self_, _1a7a6a9c3_BuiltinLenCallExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a7a6acc0_BuiltinCapCallExpr_eq(_1a7a6acc0_BuiltinCapCallExpr *_self_, _1a7a6acc0_BuiltinCapCallExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a7a6b199_BuiltinDeleteCallExpr_eq(_1a7a6b199_BuiltinDeleteCallExpr *_self_, _1a7a6b199_BuiltinDeleteCallExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _1a7a6b573_BuiltinCopyCallExpr_eq(_1a7a6b573_BuiltinCopyCallExpr *_self_, _1a7a6b573_BuiltinCopyCallExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _1a7a6b94c_BuiltinErrorCallExpr_eq(_1a7a6b94c_BuiltinErrorCallExpr *_self_, _1a7a6b94c_BuiltinErrorCallExpr _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _1a7a6bc49_SizeofExpr_eq(_1a7a6bc49_SizeofExpr *_self_, _1a7a6bc49_SizeofExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a7a6c3ed_AlignofExpr_eq(_1a7a6c3ed_AlignofExpr *_self_, _1a7a6c3ed_AlignofExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a7a6c5da_RuneExpr_eq(_1a7a6c5da_RuneExpr *_self_, _1a7a6c5da_RuneExpr _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _1a7a6cc5b_FreeExpr_eq(_1a7a6cc5b_FreeExpr *_self_, _1a7a6cc5b_FreeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _1a7a6e0ae_Param_eq(_1a7a6e0ae_Param *_self_, _1a7a6e0ae_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1a7a729db_ParamIns> _1a7a6e477_instance(jule::Ptr<_1a7a6e0ae_Param> _self_) {
	return jule::new_ptr<_1a7a729db_ParamIns>(_1a7a729db_ParamIns{._field_Decl=_self_, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr)});;
}



inline jule::Bool _1a7a6e70d_IsSelf(_1a7a6e0ae_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1a7a6e994_IsRef(_1a7a6e0ae_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _1a7a71039_IsVoid(_1a7a70a83_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1a7a712c0_IsMethod(_1a7a70a83_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_1a7a6e0ae_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_1a7a6e70d_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a7a71556_IsEntryPoint(_1a7a70a83_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1a7a717dc_IsInit(_1a7a70a83_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1a7a71a73_IsAnon(_1a7a70a83_Fn* _self_) {
	return _1a7966061_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1a7a71d09_AnyVar(_1a7a70a83_Fn* _self_) {
	if (((*(_self_))._field_Result != nullptr)) {
		{
			auto expr = &((*(*(_self_))._field_Result.alloc)._field_Idents);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab822d09:;
			if (it != expr_end) {
				jule::Ptr<_1a79633b0_Token> *_10611_ident = it;
				{
					if ((!(_1a7966061_IsAnonIdent((*((*(_10611_ident))))._field_Kind)))) {
						return true;;
					};
				}
				_iter_next_1ab822d09:;
				++it;
				goto _iter_begin_1ab822d09;
			}
			_iter_end_1ab822d09:;
		};
	};
	return false;;
}



inline jule::Ptr<_1a7a73b41_FnIns> _1a7a72090_instanceForce(jule::Ptr<_1a7a70a83_Fn> _self_) {
	jule::Ptr<_1a7a73b41_FnIns> _1177_ins = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::new_ptr<_1a7b2c238_Scope>(_1a7b2c238_Scope{._field_Parent=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__1a7b4cae9_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1177_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7a729db_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0134b6:;
		if (it != expr_end) {
			jule::Ptr<_1a7a6e0ae_Param> _12415_p = *it;
			{
				(*_1177_ins.alloc)._field_Params=jule::append((*_1177_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7a6e477_instance(_12415_p); __jule_collection; }));
			}
			_iter_next_1ac0134b6:;
			++it;
			goto _iter_begin_1ac0134b6;
		}
		_iter_end_1ac0134b6:;
	};
	if (((*((*_1177_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1177_ins.alloc)._field_Result=(*((*(*((*(_1177_ins))._field_Decl))._field_Result.alloc)._field_TypeSym))._field_Type;
	};
	return _1177_ins;;
}



inline jule::Ptr<_1a7a73b41_FnIns> _1a7a72326_instance(jule::Ptr<_1a7a70a83_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1a7a72090_instanceForce(_self_);;
}



inline jule::Ptr<_1a7a73b41_FnIns> _1a7a72634_appendInstance(_1a7a70a83_Fn* _self_, jule::Ptr<_1a7a73b41_FnIns>* _14535_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1a7a73b41_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_14535_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1a7a73b41_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_14535_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac018b70:;
		if (it != expr_end) {
			jule::Ptr<_1a7a73b41_FnIns> _16115_ains = *it;
			{
				if (_1a7a756d1_Same(_16115_ains.ptr(), (*(_14535_ins)))) {
					return _16115_ains;;
				};
			}
			_iter_next_1ac018b70:;
			++it;
			goto _iter_begin_1ac018b70;
		}
		_iter_end_1ac018b70:;
	};
	{ jule::Slice<jule::Ptr<_1a7a73b41_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_14535_ins))); };
	return nullptr;;
}








inline jule::Bool _1a7a729db_ParamIns_eq(_1a7a729db_ParamIns *_self_, _1a7a729db_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Str _1a7a72d82_Str(_1a7a729db_ParamIns* _self_) {
	_1bc0a106b_Builder _1837_s = static__1bc0a18b8_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		({
			auto except = _1bc0a204a_WriteStr(&_1837_s, jule::Str::lit("mut ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:185:4"));
			(except.result);
		});
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		({
			auto except = _1bc0a204a_WriteStr(&_1837_s, jule::Str::lit("&_:", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:189:4"));
			(except.result);
		});
	};
	if (_1a7a6e70d_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1a7a6e994_IsRef((*(_self_))._field_Decl)) {
			({
				auto except = _1bc0a2303_WriteByte(&_1837_s, '&');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:194:5"));
			});
		};
		({
			auto except = _1bc0a204a_WriteStr(&_1837_s, jule::Str::lit("self", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:196:4"));
			(except.result);
		});
		return _1bc0a28ca_Str(&_1837_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		({
			auto except = _1bc0a204a_WriteStr(&_1837_s, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:201:4"));
			(except.result);
		});
	};
	if (((*(_self_))._field_Type != nullptr)) {
		({
			auto except = _1bc0a204a_WriteStr(&_1837_s, _1a7c32959_Str((*(_self_))._field_Type));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:204:4"));
			(except.result);
		});
	};
	return _1bc0a28ca_Str(&_1837_s);;
}







inline jule::Str _1a7a73eb5_Str(_1a7a73b41_FnIns* _self_) {
	;
	return _1a7a75a22_GetKindStr(_self_, false);;
}



inline jule::Bool _1a7a74306_Equal(jule::Ptr<_1a7a73b41_FnIns> _self_, jule::Ptr<_1a7c3255d_Type> _23618_other) {
	jule::Ptr<_1a7a73b41_FnIns> _2373_f = _1a7c3695d_Fn(_23618_other.ptr());;
	if ((_2373_f == nullptr)) {
		return false;;
	};
	return _1a7a7479b_EqualFn(_self_, &(_2373_f));;
}



inline jule::Bool _1a7a7479b_EqualFn(jule::Ptr<_1a7a73b41_FnIns> _self_, jule::Ptr<_1a7a73b41_FnIns>* _24721_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_24721_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*(*((*(_24721_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1a7a71039_IsVoid((*(_self_))._field_Decl.ptr()) != _1a7a71039_IsVoid((*((*(_24721_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1a7a729db_ParamIns>,jule::Ptr<_1a7a729db_ParamIns>> _2573_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1a7a729db_ParamIns>,jule::Ptr<_1a7a729db_ParamIns>>((void*)__jule_anon1ac0238b1, nullptr, nullptr);;
	if (((*((*(_24721_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I32 _2897_i = 0LL;;
	for (; (_2897_i < (*(_self_))._field_Params.len()); (_2897_i)++) {
		{
			if ((!(_2573_checkParams((*_self_.alloc)._field_Params[_2897_i], (*((*(_24721_f))))._field_Params[_2897_i])))) {
				return false;;
			};
		}
	_iter_next_1ac029642:;
	}
	_iter_end_1ac029642:;;
	if ((!(_1a7a71039_IsVoid((*_self_.alloc)._field_Decl.ptr())))) {
		if ((!(_1a7c32c9a_Equal((*_self_.alloc)._field_Result, (*((*(_24721_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1a7a74adc_equalTrait(jule::Ptr<_1a7a73b41_FnIns> _self_, jule::Ptr<_1a7a73b41_FnIns>* _30624_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_30624_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*(*((*(_30624_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1a7a7479b_EqualFn(_self_, _30624_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*(*((*(_30624_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a7c3255d_Type>> _1a7a74d73_Types(_1a7a73b41_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1ac02ed62:;
			{
				return nullptr;;
			}
		}
		else if ((_1a7c3772d_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1ac03026e:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1ac02eceb:;
			{
				return (*(_1a7c3772d_Tup((*(_self_))._field_Result)))._field_Types;;
			}
		}
		_match_end_1ac02ec0d:;
	};
}



inline jule::Bool _1a7a75109_IsBuiltin(_1a7a73b41_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1a7a75390_IsAnon(_1a7a73b41_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1a7a71a73_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1a7a756d1_Same(_1a7a73b41_FnIns* _self_, jule::Ptr<_1a7a73b41_FnIns> _34916_f) {
	if ((((*(_self_))._field_Decl != (*(_34916_f))._field_Decl) || ((*(_34916_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0336c3:;
		if (it != expr_end) {
			jule::I32 _3547_i = it - expr->begin();
			jule::Ptr<_1a7c30b77_InsGeneric> *_35410_g = it;
			{
				jule::Ptr<_1a7c30b77_InsGeneric> _3554_g2 = (*(_34916_f))._field_Generics[_3547_i];;
				if ((!(_1a7c32c9a_Equal((*((*(_35410_g))))._field_Type, (*(_3554_g2))._field_Type)))) {
					return false;;
				};
			}
			_iter_next_1ac0336c3:;
			++it;
			_3547_i++;
			goto _iter_begin_1ac0336c3;
		}
		_iter_end_1ac0336c3:;
	};
	return true;;
}



inline jule::Str _1a7a75a22_GetKindStr(_1a7a73b41_FnIns* _self_, jule::Bool _36622_ident) {
	_1bc0a106b_Builder _3677_s = static__1bc0a18b8_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		({
			auto except = _1bc0a204a_WriteStr(&_3677_s, jule::Str::lit("unsafe ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:370:4"));
			(except.result);
		});
	};
	({
		auto except = _1bc0a204a_WriteStr(&_3677_s, jule::Str::lit("fn", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:373:3"));
		(except.result);
	});
	if ((_36622_ident && ((*(_self_))._field_Decl != nullptr))) {
		({
			auto except = _1bc0a2303_WriteByte(&_3677_s, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:376:4"));
		});
		({
			auto except = _1bc0a204a_WriteStr(&_3677_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:377:4"));
			(except.result);
		});
	};
	({
		auto except = _1bc0a2303_WriteByte(&_3677_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:380:3"));
	});
	jule::I32 _3813_n = (*(_self_))._field_Params.len();;
	if ((_3813_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac0383a9:;
			if (it != expr_end) {
				jule::I32 _3838_i = it - expr->begin();
				jule::Ptr<_1a7a729db_ParamIns> *_38311_p = it;
				{
					({
						auto except = _1bc0a204a_WriteStr(&_3677_s, _1a7a72d82_Str((*(_38311_p)).ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:384:5"));
						(except.result);
					});
					if ((_3838_i < ((*(_self_))._field_Params.len() - 1LL))) {
						({
							auto except = _1bc0a2303_WriteByte(&_3677_s, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:386:6"));
						});
					};
				}
				_iter_next_1ac0383a9:;
				++it;
				_3838_i++;
				goto _iter_begin_1ac0383a9;
			}
			_iter_end_1ac0383a9:;
		};
	};
	({
		auto except = _1bc0a2303_WriteByte(&_3677_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:390:3"));
	});
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		({
			auto except = _1bc0a2303_WriteByte(&_3677_s, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:392:4"));
		});
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_1a7a71039_IsVoid((*(_self_))._field_Decl))))) {
		({
			auto except = _1bc0a2303_WriteByte(&_3677_s, ':');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:395:4"));
		});
		({
			auto except = _1bc0a204a_WriteStr(&_3677_s, _1a7c32959_Str((*(_self_))._field_Result.ptr()));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:396:4"));
			(except.result);
		});
	};
	return _1bc0a28ca_Str(&_3677_s);;
}







inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7a773a3_SelectPackage(_1a7a76d86_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac03bc4d:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1ac03bc4d:;
			++it;
			goto _iter_begin_1ac03bc4d;
		}
		_iter_end_1ac03bc4d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7ba4eb4_Var> _1a7a7779e_FindVar(_1a7a76d86_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1a7a798d3_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1a7c31848_TypeAlias> _1a7a77b9a_FindTypeAlias(_1a7a76d86_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1a7a79d89_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1a7997adc_Struct> _1a7a78096_FindStruct(_1a7a76d86_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac03e4d1:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1ac03e4d1:;
			++it;
			goto _iter_begin_1ac03e4d1;
		}
		_iter_end_1ac03e4d1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a70a83_Fn> _1a7a78492_FindFn(_1a7a76d86_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa7a9c81:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1aa7a9c81:;
			++it;
			goto _iter_begin_1aa7a9c81;
		}
		_iter_end_1aa7a9c81:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a7b297_Trait> _1a7a787d3_FindTrait(_1a7a76d86_SymTab* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa7ab36a:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7b297_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1aa7ab36a:;
			++it;
			goto _iter_begin_1aa7ab36a;
		}
		_iter_end_1aa7ab36a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a7d94d_Enum> _1a7a78b24_FindEnum(_1a7a76d86_SymTab* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa7ac327:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7d94d_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1aa7ac327:;
			++it;
			goto _iter_begin_1aa7ac327;
		}
		_iter_end_1aa7ac327:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a80158_TypeEnum> _1a7a78e65_FindTypeEnum(_1a7a76d86_SymTab* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa7ad2e5:;
		if (it != expr_end) {
			jule::Ptr<_1a7a80158_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1aa7ad2e5:;
			++it;
			goto _iter_begin_1aa7ad2e5;
		}
		_iter_end_1aa7ad2e5:;
	};
	return nullptr;;
}



inline jule::I32 _1a7a7942c_findVar1(_1a7a76d86_SymTab* _self_, jule::Ptr<_1a7ba4eb4_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa7ae2b3:;
		if (it != expr_end) {
			jule::I32 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1aa7ae2b3:;
			++it;
			_1097_i++;
			goto _iter_begin_1aa7ae2b3;
		}
		_iter_end_1aa7ae2b3:;
	};
	return -1LL;;
}



inline jule::Ptr<_1a7ba4eb4_Var> _1a7a798d3_findVar(_1a7a76d86_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I32 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1a7ba4eb4_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1aa7b111c:;
		}
		_iter_end_1aa7b111c:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa7b254c:;
			if (it != expr_end) {
				jule::Ptr<_1a7ba4eb4_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1aa7b254c:;
				++it;
				goto _iter_begin_1aa7b254c;
			}
			_iter_end_1aa7b254c:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1a7c31848_TypeAlias> _1a7a79d89_findTypeAlias(_1a7a76d86_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I32 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1a7c31848_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1abe180d0:;
		}
		_iter_end_1abe180d0:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abe19510:;
			if (it != expr_end) {
				jule::Ptr<_1a7c31848_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1abe19510:;
				++it;
				goto _iter_begin_1abe19510;
			}
			_iter_end_1abe19510:;
		};
	};
	return nullptr;;
}



inline jule::Any _1a7a7a285_defByIdent(_1a7a76d86_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe1a764:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type7);;
				};
			}
			_iter_next_1abe1a764:;
			++it;
			goto _iter_begin_1abe1a764;
		}
		_iter_end_1abe1a764:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe21c87:;
		if (it != expr_end) {
			jule::Ptr<_1a7c31848_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type8);;
				};
			}
			_iter_next_1abe21c87:;
			++it;
			goto _iter_begin_1abe21c87;
		}
		_iter_end_1abe21c87:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe25362:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type9);;
				};
			}
			_iter_next_1abe25362:;
			++it;
			goto _iter_begin_1abe25362;
		}
		_iter_end_1abe25362:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe2048e:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type10);;
				};
			}
			_iter_next_1abe2048e:;
			++it;
			goto _iter_begin_1abe2048e;
		}
		_iter_end_1abe2048e:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe276c7:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7b297_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type11);;
				};
			}
			_iter_next_1abe276c7:;
			++it;
			goto _iter_begin_1abe276c7;
		}
		_iter_end_1abe276c7:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe24817:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7d94d_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type12);;
				};
			}
			_iter_next_1abe24817:;
			++it;
			goto _iter_begin_1abe24817;
		}
		_iter_end_1abe24817:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe2bd5d:;
		if (it != expr_end) {
			jule::Ptr<_1a7a80158_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type13);;
				};
			}
			_iter_next_1abe2bd5d:;
			++it;
			goto _iter_begin_1abe2bd5d;
		}
		_iter_end_1abe2bd5d:;
	};
	return nullptr;;
}



inline jule::Bool _1a7a7a73b_isDuplicatedIdent(_1a7a76d86_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe32292:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1abe32292:;
			++it;
			goto _iter_begin_1abe32292;
		}
		_iter_end_1abe32292:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe2a90b:;
		if (it != expr_end) {
			jule::Ptr<_1a7c31848_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1abe2a90b:;
			++it;
			goto _iter_begin_1abe2a90b;
		}
		_iter_end_1abe2a90b:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe333a3:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1abe333a3:;
			++it;
			goto _iter_begin_1abe333a3;
		}
		_iter_end_1abe333a3:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe35c8a:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1abe35c8a:;
			++it;
			goto _iter_begin_1abe35c8a;
		}
		_iter_end_1abe35c8a:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe37b7c:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7b297_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1abe37b7c:;
			++it;
			goto _iter_begin_1abe37b7c;
		}
		_iter_end_1abe37b7c:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe394db:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7d94d_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1abe394db:;
			++it;
			goto _iter_begin_1abe394db;
		}
		_iter_end_1abe394db:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe3a3bb:;
		if (it != expr_end) {
			jule::Ptr<_1a7a80158_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1abe3a3bb:;
			++it;
			goto _iter_begin_1abe3a3bb;
		}
		_iter_end_1abe3a3bb:;
	};
	return false;;
}







inline jule::Str _1a7a7b693_Str(_1a7a7b297_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a7a7b9d4_Equal(jule::Ptr<_1a7a7b297_Trait> _self_, jule::Ptr<_1a7c3255d_Type> _2518_other) {
	jule::Ptr<_1a7a7b297_Trait> _263_trt = _1a7c37211_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1a7a70a83_Fn> _1a7a7be79_FindMethod(_1a7a7b297_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe3cd4c:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1abe3cd4c:;
			++it;
			goto _iter_begin_1abe3cd4c;
		}
		_iter_end_1abe3cd4c:;
	};
	return _1a7a7c60b_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1a7a70a83_Fn> _1a7a7c60b_findMethodInherit(_1a7a7b297_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe40954:;
		if (it != expr_end) {
			jule::Ptr<_1a7c3a962_TypeSym> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Type == nullptr)) {
					goto _iter_next_1abe40954;
				};
				jule::Ptr<_1a7a7b297_Trait> _608_t = _1a7c37211_Trait((*(_5615_i))._field_Type.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1a7a70a83_Fn> _629_f2 = _1a7a7be79_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1abe40954:;
			++it;
			goto _iter_begin_1abe40954;
		}
		_iter_end_1abe40954:;
	};
	return nullptr;;
}








inline jule::Bool _1a7a7cde2_EnumItem_eq(_1a7a7cde2_EnumItem *_self_, _1a7a7cde2_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1a7a7d2bb_AutoExpr(_1a7a7cde2_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _1a7a7dd05_Str(_1a7a7d94d_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a7a7e146_Equal(jule::Ptr<_1a7a7d94d_Enum> _self_, jule::Ptr<_1a7c3255d_Type> _3818_other) {
	jule::Ptr<_1a7a7d94d_Enum> _393_enm = _1a7c35e24_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1a7a7cde2_EnumItem> _1a7a7e575_FindItem(_1a7a7d94d_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe446d3:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7cde2_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1abe446d3:;
			++it;
			goto _iter_begin_1abe446d3;
		}
		_iter_end_1abe446d3:;
	};
	return nullptr;;
}








inline jule::Bool _1a7a7ea81_TypeEnumItem_eq(_1a7a7ea81_TypeEnumItem *_self_, _1a7a7ea81_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym);
}





inline jule::Str _1a7a804cc_Str(_1a7a80158_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a7a8081d_Equal(jule::Ptr<_1a7a80158_TypeEnum> _self_, jule::Ptr<_1a7c3255d_Type> _8018_other) {
	jule::Ptr<_1a7a80158_TypeEnum> _813_tenm = _1a7c361aa_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1a7a7ea81_TypeEnumItem> _1a7a80c4c_FindItem(_1a7a80158_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe468c2:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7ea81_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1abe468c2:;
			++it;
			goto _iter_begin_1abe468c2;
		}
		_iter_end_1abe468c2:;
	};
	return nullptr;;
}








inline jule::Bool _1a7b00e65_comptimeRange_eq(_1a7b00e65_comptimeRange *_self_, _1a7b00e65_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1a7b01361_Str(_1a7b00e65_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1a7b016a2_Equal(jule::Ptr<_1a7b00e65_comptimeRange> _self_, jule::Ptr<_1a7c3255d_Type> _2718_other) {
	return false;;
}








inline jule::Bool _1a7b019c1_comptimeStructField_eq(_1a7b019c1_comptimeStructField *_self_, _1a7b019c1_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a7b01d78_Str(_1a7b019c1_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1a7b021b9_Equal(jule::Ptr<_1a7b019c1_comptimeStructField> _self_, jule::Ptr<_1a7c3255d_Type> _3718_other) {
	return false;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b026c5__Decl(jule::Ptr<_1a7b019c1_comptimeStructField> _self_, jule::Ptr<_1a7c0086c_eval>* _4127_e, jule::Ptr<_1a7981d18_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b2055b_comptimeDecl>(_1a7b2055b_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type14)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b02ac1__Type(jule::Ptr<_1a7b019c1_comptimeStructField> _self_, jule::Ptr<_1a7c0086c_eval>* _5327_e, jule::Ptr<_1a7981d18_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Type));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b02e12_subIdent(jule::Ptr<_1a7b019c1_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1abe5223a:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _648_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1abe546c1, jule::Ptr<__jule_anon_1abe546c1_ctx>::make(__jule_anon_1abe546c1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abe546c1_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1abe522d4:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _718_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1abe56508, jule::Ptr<__jule_anon_1abe56508_ctx>::make(__jule_anon_1abe56508_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abe56508_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_1abe5203c:;
			{
				return nullptr;;
			}
		}
		_match_end_1abe5215d:;
	};
}







inline jule::Str _1a7b0362c_Str(_1a7b03264_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1a7b0396d_Equal(jule::Ptr<_1a7b03264_comptimeStructFields> _self_, jule::Ptr<_1a7c3255d_Type> _9018_other) {
	return false;;
}



inline void _1a7b03e02_ready(_1a7b03264_comptimeStructFields* _self_, jule::Ptr<_1a7ba4eb4_Var>* _9426_keyA, jule::Ptr<_1a7ba4eb4_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_TypeSym=(*(_1a7ca9b35_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b019c1_comptimeStructField>(_1a7b019c1_comptimeStructField{._field_field=jule::Ptr<_1a7999d53_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data6)})});
	};
}



inline void _1a7b04265_index(_1a7b03264_comptimeStructFields* _self_, jule::Ptr<_1a7bed89d_Data>* _11526_d, jule::I32 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b019c1_comptimeStructField>(_1a7b019c1_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data6)});
}



inline void _1a7b04683_step(_1a7b03264_comptimeStructFields* _self_, jule::I32 _12620_i, jule::Ptr<_1a7ba4eb4_Var>* _12633_keyA, jule::Ptr<_1a7ba4eb4_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__1a7a574d7_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_1a7c37ed1_comptimeStructField((*((*((*(_12650_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I32 _1a7b04919_len(_1a7b03264_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1a7b04be4_comptimeStatic_eq(_1a7b04be4_comptimeStatic *_self_, _1a7b04be4_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a7b0509b_Str(_1a7b04be4_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1a7b053dc_Equal(jule::Ptr<_1a7b04be4_comptimeStatic> _self_, jule::Ptr<_1a7c3255d_Type> _15018_other) {
	return false;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b058e8__Decl(jule::Ptr<_1a7b04be4_comptimeStatic> _self_, jule::Ptr<_1a7c0086c_eval>* _15427_e, jule::Ptr<_1a7981d18_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b2055b_comptimeDecl>(_1a7b2055b_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type7)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b05ce4__Type(jule::Ptr<_1a7b04be4_comptimeStatic> _self_, jule::Ptr<_1a7c0086c_eval>* _16627_e, jule::Ptr<_1a7981d18_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_TypeSym))._field_Type));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b06135_subIdent(jule::Ptr<_1a7b04be4_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1abe682d9:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _1778_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1abe69560, jule::Ptr<__jule_anon_1abe69560_ctx>::make(__jule_anon_1abe69560_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abe69560_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1abe68372:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _1848_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1abe6b353, jule::Ptr<__jule_anon_1abe6b353_ctx>::make(__jule_anon_1abe6b353_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abe6b353_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_1abe68152:;
			{
				return nullptr;;
			}
		}
		_match_end_1abe68262:;
	};
}







inline jule::Str _1a7b06850_Str(_1a7b06498_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1a7b06b91_Equal(jule::Ptr<_1a7b06498_comptimeStatics> _self_, jule::Ptr<_1a7c3255d_Type> _20318_other) {
	return false;;
}



inline void _1a7b07125_ready(_1a7b06498_comptimeStatics* _self_, jule::Ptr<_1a7ba4eb4_Var>* _20726_keyA, jule::Ptr<_1a7ba4eb4_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_TypeSym=(*(_1a7ca9b35_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b04be4_comptimeStatic>(_1a7b04be4_comptimeStatic{._field_field=jule::Ptr<_1a7ba4eb4_Var>(nullptr)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data8)})});
	};
}



inline void _1a7b07488_index(_1a7b06498_comptimeStatics* _self_, jule::Ptr<_1a7bed89d_Data>* _22826_d, jule::I32 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b04be4_comptimeStatic>(_1a7b04be4_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data8)});
}



inline void _1a7b078a6_step(_1a7b06498_comptimeStatics* _self_, jule::I32 _23920_i, jule::Ptr<_1a7ba4eb4_Var>* _23933_keyA, jule::Ptr<_1a7ba4eb4_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__1a7a574d7_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_1a7c397da_comptimeStatic((*((*((*(_23950_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I32 _1a7b07b3c_len(_1a7b06498_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1a7b07e17_comptimeEnumField_eq(_1a7b07e17_comptimeEnumField *_self_, _1a7b07e17_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a7b082be_Str(_1a7b07e17_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1a7b08610_Equal(jule::Ptr<_1a7b07e17_comptimeEnumField> _self_, jule::Ptr<_1a7c3255d_Type> _26318_other) {
	return false;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b08b0a__Decl(jule::Ptr<_1a7b07e17_comptimeEnumField> _self_, jule::Ptr<_1a7c0086c_eval>* _26727_e, jule::Ptr<_1a7981d18_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b2055b_comptimeDecl>(_1a7b2055b_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type16)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b08e4b_subIdent(jule::Ptr<_1a7b07e17_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1abe798d3:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _2828_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1abe7ab26, jule::Ptr<__jule_anon_1abe7ab26_ctx>::make(__jule_anon_1abe7ab26_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abe7ab26_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_1abe793e9:;
			{
				return nullptr;;
			}
		}
		_match_end_1abe794c6:;
	};
}







inline jule::Str _1a7b096dd_Str(_1a7b09226_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1a7b09a2e_Equal(jule::Ptr<_1a7b09226_comptimeEnumFields> _self_, jule::Ptr<_1a7c3255d_Type> _30118_other) {
	return false;;
}



inline void _1a7b09e3b_ready(_1a7b09226_comptimeEnumFields* _self_, jule::Ptr<_1a7ba4eb4_Var>* _30526_keyA, jule::Ptr<_1a7ba4eb4_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_TypeSym=(*(_1a7ca9b35_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b07e17_comptimeEnumField>(_1a7b07e17_comptimeEnumField{._field_field=jule::Ptr<_1a7a7cde2_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data10)})});
	};
}



inline void _1a7b0a29e_index(_1a7b09226_comptimeEnumFields* _self_, jule::Ptr<_1a7bed89d_Data>* _32626_d, jule::I32 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b07e17_comptimeEnumField>(_1a7b07e17_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data10)});
}



inline void _1a7b0a6bc_step(_1a7b09226_comptimeEnumFields* _self_, jule::I32 _33720_i, jule::Ptr<_1a7ba4eb4_Var>* _33733_keyA, jule::Ptr<_1a7ba4eb4_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__1a7a574d7_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_1a7c384ed_comptimeEnumField((*((*((*(_33750_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I32 _1a7b0a953_len(_1a7b09226_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1a7b0ac2d_comptimeParam_eq(_1a7b0ac2d_comptimeParam *_self_, _1a7b0ac2d_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1a7b0b0d5_Str(_1a7b0ac2d_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1a7b0b426_Equal(jule::Ptr<_1a7b0ac2d_comptimeParam> _self_, jule::Ptr<_1a7c3255d_Type> _36118_other) {
	return false;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b0b943__Decl(jule::Ptr<_1a7b0ac2d_comptimeParam> _self_, jule::Ptr<_1a7c0086c_eval>* _36527_e, jule::Ptr<_1a7981d18_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b2055b_comptimeDecl>(_1a7b2055b_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type17)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b0bd3e__Type(jule::Ptr<_1a7b0ac2d_comptimeParam> _self_, jule::Ptr<_1a7c0086c_eval>* _37727_e, jule::Ptr<_1a7981d18_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Type));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b0c23a__Recv(jule::Ptr<_1a7b0ac2d_comptimeParam> _self_, jule::Ptr<_1a7c0086c_eval>* _38527_e, jule::Ptr<_1a7981d18_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _3907_constant = static__1a7a57a26_NewBool(_1a7a6e70d_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b0c57b_subIdent(jule::Ptr<_1a7b0ac2d_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1abe91a1b:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _4018_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1abe92d2a, jule::Ptr<__jule_anon_1abe92d2a_ctx>::make(__jule_anon_1abe92d2a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abe92d2a_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1abe91cd5:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _4088_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1abe94b1d, jule::Ptr<__jule_anon_1abe94b1d_ctx>::make(__jule_anon_1abe94b1d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abe94b1d_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1abe91aa4:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _4158_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1abe96911, jule::Ptr<__jule_anon_1abe96911_ctx>::make(__jule_anon_1abe96911_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abe96911_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_1abe91862:;
			{
				return nullptr;;
			}
		}
		_match_end_1abe9193e:;
	};
}







inline jule::Str _1a7b0cd2e_Str(_1a7b0ca87_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1a7b0d170_Equal(jule::Ptr<_1a7b0ca87_comptimeParams> _self_, jule::Ptr<_1a7c3255d_Type> _43418_other) {
	return false;;
}



inline void _1a7b0d604_ready(_1a7b0ca87_comptimeParams* _self_, jule::Ptr<_1a7ba4eb4_Var>* _43826_keyA, jule::Ptr<_1a7ba4eb4_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_TypeSym=(*(_1a7ca9b35_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b0ac2d_comptimeParam>(_1a7b0ac2d_comptimeParam{._field_param=jule::Ptr<_1a7a729db_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data12)})});
	};
}



inline void _1a7b0d967_index(_1a7b0ca87_comptimeParams* _self_, jule::Ptr<_1a7bed89d_Data>* _45926_d, jule::I32 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b0ac2d_comptimeParam>(_1a7b0ac2d_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data12)});
}



inline void _1a7b0dd85_step(_1a7b0ca87_comptimeParams* _self_, jule::I32 _47020_i, jule::Ptr<_1a7ba4eb4_Var>* _47033_keyA, jule::Ptr<_1a7ba4eb4_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__1a7a574d7_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_1a7c38a1a_comptimeParam((*((*((*(_47050_keyB))))._field_TypeSym))._field_Type.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I32 _1a7b0e11b_len(_1a7b0ca87_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _1a7b0e79d_Str(_1a7b0e3e6_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1a7b0eade_Equal(jule::Ptr<_1a7b0e3e6_comptimeTypeInfos> _self_, jule::Ptr<_1a7c3255d_Type> _49418_other) {
	return false;;
}



inline void _1a7b10073_ready(_1a7b0e3e6_comptimeTypeInfos* _self_, jule::Ptr<_1a7ba4eb4_Var>* _49826_keyA, jule::Ptr<_1a7ba4eb4_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_TypeSym=(*(_1a7ca9b35_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b10d65_comptimeTypeInfo>(_1a7b10d65_comptimeTypeInfo{._field_base=jule::Ptr<_1a7c3255d_Type>(nullptr)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data15)})});
	};
}



inline void _1a7b103d6_index(_1a7b0e3e6_comptimeTypeInfos* _self_, jule::Ptr<_1a7bed89d_Data>* _51926_d, jule::I32 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data15)});
}



inline void _1a7b10804_step(_1a7b0e3e6_comptimeTypeInfos* _self_, jule::I32 _52820_i, jule::Ptr<_1a7ba4eb4_Var>* _52833_keyA, jule::Ptr<_1a7ba4eb4_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__1a7a574d7_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_TypeSym))._field_Type))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data15);
	};
}



inline jule::I32 _1a7b10a8a_len(_1a7b0e3e6_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _1a7b10d65_comptimeTypeInfo_eq(_1a7b10d65_comptimeTypeInfo *_self_, _1a7b10d65_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1a7b1121c_Str(_1a7b10d65_comptimeTypeInfo* _self_) {
	return ({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("comptimeTypeInfo[", 17)); size += part0.len(); jule::Str part1 = std::move(_1a7c32959_Str((*(_self_))._field_base.ptr())); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit("]", 1)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); });;
}



inline jule::Bool _1a7b1155d_Equal(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c3255d_Type> _55218_other) {
	return false;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b11b9b__Decl(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _55627_e, jule::Ptr<_1a7981d18_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_1a7c36e7a_softStruct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1abeabe21:;
			{
				_5617_decl=jule::Any((*(_1a7c36e7a_softStruct((*(_self_))._field_base)))._field_Decl, &__jule_any_type9);
			}
		}
		else if ((_1a7c37211_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1abeaceee:;
			{
				_5617_decl=jule::Any(_1a7c37211_Trait((*(_self_))._field_base), &__jule_any_type11);
			}
		}
		else if ((_1a7c35e24_Enum((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abead065:;
			{
				_5617_decl=jule::Any(_1a7c35e24_Enum((*(_self_))._field_base), &__jule_any_type12);
			}
		}
		else if ((_1a7c361aa_TypeEnum((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abead0cb:;
			{
				_5617_decl=jule::Any(_1a7c361aa_TypeEnum((*(_self_))._field_base), &__jule_any_type13);
			}
		}
		else if ((_1a7c3695d_Fn((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abeaba8b:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _5728_f = _1a7c3695d_Fn((*(_self_))._field_base);;
				{
					
					if (_1a7a75109_IsBuiltin(_5728_f.ptr())) {
						_case_begin_1abeb30ae:;
						{
							_1a7c00d45_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1a7a75390_IsAnon(_5728_f.ptr())) {
						_case_begin_1abeb3158:;
						{
							_1a7c00d45_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1abeb3026:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type10);
			}
		}
		else {
			_case_begin_1abeaba25:;
			{
				_1a7c00d45_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abeab8e3:;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b2055b_comptimeDecl>(_1a7b2055b_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b12097__Str(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _59322_e, jule::Ptr<_1a7981d18_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _5987_constant = static__1a7a57ce0_NewStr(_1a7c32959_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6aee_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b12493__Kind(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _60627_e, jule::Ptr<_1a7981d18_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7a7d94d_Enum> _6117_enm = _1a7b6159c_FindEnum(_1a7b24c58_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1a7a7cde2_EnumItem> _61211_item = nullptr;;
	{
		
		if (_1a7c3396b_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1abebb7b0:;
			{
				_61211_item=_1a7a7e575_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1a7c36be4_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1abebb826:;
			{
				_61211_item=_1a7a7e575_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1a7c37211_Trait((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abebb88c:;
			{
				_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1a7c35b8d_Ptr((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abebb914:;
			{
				if (_1a7c441c9_IsUnsafe(_1a7c35b8d_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1a7c35907_Sptr((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abebb98b:;
			{
				_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1a7c35e24_Enum((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abebba13:;
			{
				_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1a7c361aa_TypeEnum((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abebc43c:;
			{
				_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_1a7c37497_Map((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abebc4a3:;
			{
				_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Map", 3));
			}
		}
		else if ((_1a7c366c7_Slc((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abebc52a:;
			{
				_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1a7c36441_Arr((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abebc5a2:;
			{
				_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Array", 5));
			}
		}
		else if ((_1a7c3695d_Fn((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abebc629:;
			{
				_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Func", 4));
			}
		}
		else if ((_1a7c3772d_Tup((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abebc6a1:;
			{
				_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1a7c35671_Prim((*(_self_))._field_base) != nullptr)) {
			_case_begin_1abebc728:;
			{
				jule::Ptr<_1a7c3b369_Prim> _6434_prim = _1a7c35671_Prim((*(_self_))._field_base);;
				{
					
					if (_1a7c3eaba_IsAny(_6434_prim.ptr())) {
						_case_begin_1abec8d72:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Any", 3));
						}
					}
					else if (_1a7c3e59d_IsBool(_6434_prim.ptr())) {
						_case_begin_1abec9092:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Bool", 4));
						}
					}
					else if (_1a7c3e834_IsStr(_6434_prim)) {
						_case_begin_1abec9119:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Str", 3));
						}
					}
					else if (_1a7c3d7cd_IsF32(_6434_prim)) {
						_case_begin_1abec8dd8:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("F32", 3));
						}
					}
					else if (_1a7c3da64_IsF64(_6434_prim)) {
						_case_begin_1abec8e4e:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("F64", 3));
						}
					}
					else if (_1a7c3c25a_IsI8(_6434_prim)) {
						_case_begin_1abec98bc:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("I8", 2));
						}
					}
					else if (_1a7c3c4e1_IsI16(_6434_prim)) {
						_case_begin_1abec9933:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("I16", 3));
						}
					}
					else if (_1a7c3c777_IsI32(_6434_prim)) {
						_case_begin_1abec9999:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("I32", 3));
						}
					}
					else if (_1a7c3ca0d_IsI64(_6434_prim)) {
						_case_begin_1abec9a10:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("I64", 3));
						}
					}
					else if (_1a7c3cc94_IsU8(_6434_prim)) {
						_case_begin_1abec9a76:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("U8", 2));
						}
					}
					else if (_1a7c3d02a_IsU16(_6434_prim)) {
						_case_begin_1abec9adc:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("U16", 3));
						}
					}
					else if (_1a7c3d2b1_IsU32(_6434_prim)) {
						_case_begin_1abec9b64:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("U32", 3));
						}
					}
					else if (_1a7c3d547_IsU64(_6434_prim)) {
						_case_begin_1abec9bdb:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("U64", 3));
						}
					}
					else if (_1a7c3dcea_IsInt(_6434_prim)) {
						_case_begin_1abec9c63:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Int", 3));
						}
					}
					else if (_1a7c3e081_IsUint(_6434_prim)) {
						_case_begin_1abec9cda:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Uint", 4));
						}
					}
					else if (_1a7c3e317_IsUintptr(_6434_prim)) {
						_case_begin_1abec9d62:;
						{
							_61211_item=_1a7a7e575_FindItem(_6117_enm, jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1abec8bc9:;
						{
							__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1a7c32959_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_1abec8b52:;
				};
			}
		}
		else {
			_case_begin_1abebb749:;
			{
				__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1a7c32959_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_1abebb68e:;
	};
	return _1a7c2d999_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _1a7c03d7b_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b1288e__Bits(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _68627_e, jule::Ptr<_1a7981d18_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7c3b369_Prim> _6913_prim = _1a7c35671_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_1a7c00d45_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _6963_n = _1a7ae639a_BitSizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_1a7c00d45_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _7017_constant = static__1a7a574d7_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca77d1_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b12c8a__Elem(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _71027_e, jule::Ptr<_1a7981d18_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7c4365c_Ptr> _7157_ptr = _1a7c35b8d_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_1a7c441c9_IsUnsafe(_7157_ptr)) {
			_1a7c00d45_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a7c3ed95_Sptr> _7237_sptr = _1a7c35907_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a7c40868_Slc> _7277_slice = _1a7c366c7_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1a7c42b89_Arr> _7317_array = _1a7c36441_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1a7a7d94d_Enum> _7357_enm = _1a7c35e24_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_TypeSym))._field_Type));;
	};
	_1a7c00d45_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b13186__Size(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _74327_e, jule::Ptr<_1a7981d18_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7c42b89_Arr> _7487_arr = _1a7c36441_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_1a7c00d45_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _7537_constant = static__1a7a574d7_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca77d1_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b13582__Key(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _76226_e, jule::Ptr<_1a7981d18_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7c4200c_Map> _7677_m = _1a7c37497_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_1a7c00d45_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b1397d__Value(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _77528_e, jule::Ptr<_1a7981d18_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7c4200c_Map> _7807_m = _1a7c37497_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_1a7c00d45_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b13d79__Fields(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _78829_e, jule::Ptr<_1a7981d18_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a799a97a_StructIns> _7937_s = _1a7c36be4_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b03264_comptimeStructFields>(_1a7b03264_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
	};
	jule::Ptr<_1a7a7d94d_Enum> _8037_enm = _1a7c35e24_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b09226_comptimeEnumFields>(_1a7b09226_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
	};
	_1a7c00d45_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b14275__Statics(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _81730_e, jule::Ptr<_1a7981d18_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a799a97a_StructIns> _8227_s = _1a7c36be4_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_1a7c00d45_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b06498_comptimeStatics>(_1a7b06498_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b14671__Binded(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _83629_e, jule::Ptr<_1a7981d18_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _8417_constant = static__1a7a57a26_NewBool(_1a7c3344e_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b14a6c__Ordered(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _84926_e, jule::Ptr<_1a7981d18_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _8547_constant = static__1a7a57a26_NewBool(_1a7c34b37_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b14e68__Comparable(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _86229_e, jule::Ptr<_1a7981d18_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _8677_constant = static__1a7a57a26_NewBool(_1a7c3461a_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b15364__Mutable(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _87526_e, jule::Ptr<_1a7981d18_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _8807_constant = static__1a7a57a26_NewBool(_1a7c348a1_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b15760__Types(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _88828_e, jule::Ptr<_1a7981d18_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7c4145c_Tuple> _8937_tup = _1a7c3772d_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_1a7c00d45_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7b0e3e6_comptimeTypeInfos> _8987_infos = jule::new_ptr<_1a7b0e3e6_comptimeTypeInfos>(_1a7b0e3e6_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b10d65_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b10d65_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*_8937_tup.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac17c410:;
		if (it != expr_end) {
			jule::Ptr<_1a7c3255d_Type> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b10d65_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7b7b4c9_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_1ac17c410:;
			++it;
			goto _iter_begin_1ac17c410;
		}
		_iter_end_1ac17c410:;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b15b5b__CanNil(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _91129_e, jule::Ptr<_1a7981d18_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _9167_constant = static__1a7a57a26_NewBool(_1a7c34dbd_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b16057__GC(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _92425_e, jule::Ptr<_1a7981d18_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _9297_constant = static__1a7a57a26_NewBool(_1a7c35154_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b16453__Result(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _93729_e, jule::Ptr<_1a7981d18_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7a73b41_FnIns> _9427_f = _1a7c3695d_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_1a7c00d45_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_1a7ca6549_primVoid));;
	};
	return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b1684e__Params(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Ptr<_1a7c0086c_eval>* _95329_e, jule::Ptr<_1a7981d18_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7a73b41_FnIns> _9587_f = _1a7c3695d_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_1a7c00d45_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b0ca87_comptimeParams>(_1a7b0ca87_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b16b90_subIdent(jule::Ptr<_1a7b10d65_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1ac18d135:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _9738_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac18ebc5, jule::Ptr<__jule_anon_1ac18ebc5_ctx>::make(__jule_anon_1ac18ebc5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac18ebc5_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1ac18d19b:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _9808_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1919b8, jule::Ptr<__jule_anon_1ac1919b8_ctx>::make(__jule_anon_1ac1919b8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1919b8_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1ac18d212:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _9878_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1937ab, jule::Ptr<__jule_anon_1ac1937ab_ctx>::make(__jule_anon_1ac1937ab_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1937ab_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1ac18d399:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _9948_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac19559e, jule::Ptr<__jule_anon_1ac19559e_ctx>::make(__jule_anon_1ac19559e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac19559e_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1ac18d410:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10018_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac197392, jule::Ptr<__jule_anon_1ac197392_ctx>::make(__jule_anon_1ac197392_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac197392_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1ac18d487:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10088_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac199185, jule::Ptr<__jule_anon_1ac199185_ctx>::make(__jule_anon_1ac199185_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac199185_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1ac18d50e:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10158_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac19ae78, jule::Ptr<__jule_anon_1ac19ae78_ctx>::make(__jule_anon_1ac19ae78_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac19ae78_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1ac18d586:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10228_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac19cc6b, jule::Ptr<__jule_anon_1ac19cc6b_ctx>::make(__jule_anon_1ac19cc6b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac19cc6b_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1ac18d674:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10298_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac19eba2, jule::Ptr<__jule_anon_1ac19eba2_ctx>::make(__jule_anon_1ac19eba2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac19eba2_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1ac18d6eb:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10368_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1a1995, jule::Ptr<__jule_anon_1ac1a1995_ctx>::make(__jule_anon_1ac1a1995_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1a1995_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1ac18d773:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10438_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1a3788, jule::Ptr<__jule_anon_1ac1a3788_ctx>::make(__jule_anon_1ac1a3788_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1a3788_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1ac18d7ea:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10508_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1a557b, jule::Ptr<__jule_anon_1ac1a557b_ctx>::make(__jule_anon_1ac1a557b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1a557b_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1ac18d872:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10578_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1a736e, jule::Ptr<__jule_anon_1ac1a736e_ctx>::make(__jule_anon_1ac1a736e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1a736e_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1ac18d8e9:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10648_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1a9162, jule::Ptr<__jule_anon_1ac1a9162_ctx>::make(__jule_anon_1ac1a9162_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1a9162_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1ac18d971:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10718_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1aae55, jule::Ptr<__jule_anon_1ac1aae55_ctx>::make(__jule_anon_1ac1aae55_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1aae55_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1ac18d9e8:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10788_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1acc48, jule::Ptr<__jule_anon_1ac1acc48_ctx>::make(__jule_anon_1ac1acc48_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1acc48_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1ac18da70:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10858_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1aea3b, jule::Ptr<__jule_anon_1ac1aea3b_ctx>::make(__jule_anon_1ac1aea3b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1aea3b_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1ac18dae7:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10928_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1b182e, jule::Ptr<__jule_anon_1ac1b182e_ctx>::make(__jule_anon_1ac1b182e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1b182e_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1ac18db6e:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10998_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1b3622, jule::Ptr<__jule_anon_1ac1b3622_ctx>::make(__jule_anon_1ac1b3622_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1b3622_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_1ac18cc06:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac18ce15:;
	};
}








inline jule::Bool _1a7b16e6a_comptimeValue_eq(_1a7b16e6a_comptimeValue *_self_, _1a7b16e6a_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1a7b17322_Str(_1a7b16e6a_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1a7b17663_Equal(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c3255d_Type> _111818_other) {
	return false;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b17bc4__Unwrap(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _112229_e, jule::Ptr<_1a7981d18_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b180c0__Type(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _113027_e, jule::Ptr<_1a7981d18_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Type));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b184bb__Lvalue(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _113829_e, jule::Ptr<_1a7981d18_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _11437_constant = static__1a7a57a26_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b188b7__Mutable(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _115130_e, jule::Ptr<_1a7981d18_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _11567_constant = static__1a7a57a26_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b18cb3__Const(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _116428_e, jule::Ptr<_1a7981d18_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _11697_constant = static__1a7a57a26_NewBool(_1a7bee2d8_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b191ae__Field(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _117728_e, jule::Ptr<_1a7981d18_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_1a7c00d45_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a799a97a_StructIns> _11827_s = _1a7c36be4_Struct((*((*(_self_))._field_data))._field_Type.ptr());;
	if ((_11827_s == nullptr)) {
		_1a7c00d45_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_data))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a797d0de_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_1a7bed89d_Data> _11887_d = _1a7c204d5_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7bee2d8_IsConst(_11887_d.ptr())))) {
		_1a7c00d45_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7c3b369_Prim> _11963_prim = _1a7c35671_Prim((*(_11887_d))._field_Type);;
	if (((_11963_prim == nullptr) || (!(_1a7c3e834_IsStr(_11963_prim.ptr()))))) {
		_1a7c00d45_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_11887_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _1a7a591cb_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_1a7999d53_FieldIns> _12027_f = _1a799bd33_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_1a7c00d45_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_11827_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12013_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_1a7bed89d_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_1a7c1781d_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*(_11877_arg))._field_Token), &(_12027_f));
	return _1a7b2541d_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b195aa__Method(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Ptr<_1a7c0086c_eval>* _121229_e, jule::Ptr<_1a7981d18_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_1a7c00d45_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_1a799a97a_StructIns> _12187_s = static_cast<jule::Ptr<_1a799a97a_StructIns>>(nullptr);;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_data))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)) {
			_case_begin_1ac1cd131:;
			{
				_12187_s=_1a7c36e7a_softStruct((*((*((*((*(_self_))._field_data))._field_Type))._field_Kind.cast_ptr<_1a7c3ed95_Sptr>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)))._field_Elem.ptr());
				_12177_ref=true;
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
			_case_begin_1ac1cc361:;
			{
				_12187_s=(*((*((*(_self_))._field_data))._field_Type))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);
			}
		}
		_match_end_1ac1cd098:;
	};
	if ((_12187_s == nullptr)) {
		_1a7c00d45_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_data))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a797d0de_Expr> _12307_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_1a7bed89d_Data> _12317_d = _1a7c204d5_evalExpr((*(_121229_e)), _12307_arg);;
	if ((_12317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7bee2d8_IsConst(_12317_d.ptr())))) {
		_1a7c00d45_pushErr((*(_121229_e)).ptr(), (*(_12307_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7c3b369_Prim> _12393_prim = _1a7c35671_Prim((*(_12317_d))._field_Type.ptr());;
	if (((_12393_prim == nullptr) || (!(_1a7c3e834_IsStr(_12393_prim.ptr()))))) {
		_1a7c00d45_pushErr((*(_121229_e)).ptr(), (*(_12307_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_12317_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12443_ident = _1a7a591cb_ReadStr((*_12317_d.alloc)._field_Constant.ptr());;
	;
	jule::Ptr<_1a7a70a83_Fn> _12467_m = _1a799b9e2_FindMethod(_12187_s.ptr(), _12443_ident, false);;
	if ((_12467_m == nullptr)) {
		_1a7c00d45_pushErr((*(_121229_e)).ptr(), (*(_12307_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_12187_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12443_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_12317_d=jule::new_ptr<_1a7bed89d_Data>((*((*(_self_))._field_data)));
	if (_12177_ref) {
		_1a7c2e04e_makeImplicitDeref(&(_12317_d), (*((*(_121244_fc))))._field_Token);
	};
	_12317_d=_1a7c183e0_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12317_d), &(_12187_s), &((*(_12307_arg))._field_Token), &(_12467_m), _12177_ref);
	return _1a7b2541d_buildComptimeValue(&(_12317_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b198eb_subIdent(jule::Ptr<_1a7b16e6a_comptimeValue> _self_, jule::Str* _125926_ident) {
	{
		auto &_match_expr{ (*(_125926_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1ac1d92d5:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _12628_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1da77b, jule::Ptr<__jule_anon_1ac1da77b_ctx>::make(__jule_anon_1ac1da77b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1da77b_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_12628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ac1d934b:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _12698_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1dc56e, jule::Ptr<__jule_anon_1ac1dc56e_ctx>::make(__jule_anon_1ac1dc56e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1dc56e_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_12698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1ac1d93b2:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _12768_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1de362, jule::Ptr<__jule_anon_1ac1de362_ctx>::make(__jule_anon_1ac1de362_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1de362_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_12768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1ac1d9428:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _12838_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1e1155, jule::Ptr<__jule_anon_1ac1e1155_ctx>::make(__jule_anon_1ac1e1155_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1e1155_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_12838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1ac1d94a0:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _12908_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1e2e48, jule::Ptr<__jule_anon_1ac1e2e48_ctx>::make(__jule_anon_1ac1e2e48_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1e2e48_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_12908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1ac1d9637:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _12978_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1e4c3b, jule::Ptr<__jule_anon_1ac1e4c3b_ctx>::make(__jule_anon_1ac1e4c3b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1e4c3b_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_12978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_1ac1d96ae:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _13048_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac1e6a2e, jule::Ptr<__jule_anon_1ac1e6a2e_ctx>::make(__jule_anon_1ac1e6a2e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac1e6a2e_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_13048_method));;
			}
		}
		else {
			_case_begin_1ac1d902c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1d9192:;
	};
}







inline jule::Str _1a7b1a07d_Str(_1a7b19bc6_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1a7b1a3be_Equal(jule::Ptr<_1a7b19bc6_comptimeFiles> _self_, jule::Ptr<_1a7c3255d_Type> _132318_other) {
	return false;;
}



inline void _1a7b1a853_ready(_1a7b19bc6_comptimeFiles* _self_, jule::Ptr<_1a7ba4eb4_Var>* _132726_keyA, jule::Ptr<_1a7ba4eb4_Var>* _132743_keyB) {
	if (((*(_132726_keyA)) != nullptr)) {
		(*((*(_132726_keyA))))._field_Constant=true;
		(*((*(_132726_keyA))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_132726_keyA))))._field_TypeSym=(*(_1a7ca9b35_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_132743_keyB)) != nullptr)) {
		(*((*(_132743_keyB))))._field_Constant=true;
		(*((*(_132743_keyB))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_132743_keyB))))._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b1b645_comptimeFile>(_1a7b1b645_comptimeFile{._field_file=jule::Ptr<_1a7a76d86_SymTab>(nullptr)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data18)})});
	};
}



inline void _1a7b1abb6_index(_1a7b19bc6_comptimeFiles* _self_, jule::Ptr<_1a7bed89d_Data>* _134826_d, jule::I32 _134836_i) {
	(*((*(_134826_d))))._field_Decl=false;
	(*((*(_134826_d))))._field_untyped=false;
	(*((*(_134826_d))))._field_Constant=nullptr;
	(*((*(_134826_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b1b645_comptimeFile>(_1a7b1b645_comptimeFile{._field_file=(*(_self_))._field_files[_134836_i]}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data18)});
}



inline void _1a7b1b0d4_step(_1a7b19bc6_comptimeFiles* _self_, jule::I32 _135920_i, jule::Ptr<_1a7ba4eb4_Var>* _135933_keyA, jule::Ptr<_1a7ba4eb4_Var>* _135950_keyB) {
	if (((*(_135933_keyA)) != nullptr)) {
		(*((*((*((*(_135933_keyA))))._field_Value))._field_Data))._field_Constant=static__1a7a574d7_NewI64(static_cast<jule::I64>(_135920_i));
		(*(*((*((*(_135933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_135950_keyB)) != nullptr)) {
		(*((*((*((*((*(_135950_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1a7b1b645_comptimeFile>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135920_i];
	};
}



inline jule::I32 _1a7b1b36a_len(_1a7b19bc6_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _1a7b1b645_comptimeFile_eq(_1a7b1b645_comptimeFile *_self_, _1a7b1b645_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1a7b1b9ec_Str(_1a7b1b645_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1a7b1bd3d_Equal(jule::Ptr<_1a7b1b645_comptimeFile> _self_, jule::Ptr<_1a7c3255d_Type> _138318_other) {
	return false;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b1c35a__Path(jule::Ptr<_1a7b1b645_comptimeFile> _self_, jule::Ptr<_1a7c0086c_eval>* _138727_e, jule::Ptr<_1a7981d18_FnCallExpr>* _138742_fc) {
	if (((*((*(_138742_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_138727_e)).ptr(), (*((*((*(_138742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _13927_constant = static__1a7a57ce0_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6aee_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13927_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_13927_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b1c756__Name(jule::Ptr<_1a7b1b645_comptimeFile> _self_, jule::Ptr<_1a7c0086c_eval>* _140027_e, jule::Ptr<_1a7981d18_FnCallExpr>* _140042_fc) {
	if (((*((*(_140042_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_140027_e)).ptr(), (*((*((*(_140042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _14057_constant = static__1a7a57ce0_NewStr(_1a7969d78_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6aee_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14057_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14057_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b1cb52__Dir(jule::Ptr<_1a7b1b645_comptimeFile> _self_, jule::Ptr<_1a7c0086c_eval>* _141326_e, jule::Ptr<_1a7981d18_FnCallExpr>* _141341_fc) {
	if (((*((*(_141341_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_141326_e)).ptr(), (*((*((*(_141341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a79ea9a8_Const> _14187_constant = static__1a7a57ce0_NewStr(_1a7969ae2_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6aee_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14187_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14187_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b1ce93_subIdent(jule::Ptr<_1a7b1b645_comptimeFile> _self_, jule::Str* _142626_ident) {
	{
		auto &_match_expr{ (*(_142626_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1ac209ba7:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _14298_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac20aeb6, jule::Ptr<__jule_anon_1ac20aeb6_ctx>::make(__jule_anon_1ac20aeb6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac20aeb6_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_14298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ac209e71:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _14368_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac20cca9, jule::Ptr<__jule_anon_1ac20cca9_ctx>::make(__jule_anon_1ac20cca9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac20cca9_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_14368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1ac209c40:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _14438_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac20ea9c, jule::Ptr<__jule_anon_1ac20ea9c_ctx>::make(__jule_anon_1ac20ea9c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac20ea9c_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_14438_method));;
			}
		}
		else {
			_case_begin_1ac2099ed:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac209aca:;
	};
}







inline jule::Str _1a7b1d856_Str(_1a7b1d26d_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1a7b1db97_Equal(jule::Ptr<_1a7b1d26d_comptimeDecls> _self_, jule::Ptr<_1a7c3255d_Type> _146218_other) {
	return false;;
}



inline void _1a7b1e01b_ready(_1a7b1d26d_comptimeDecls* _self_, jule::Ptr<_1a7ba4eb4_Var>* _146626_keyA, jule::Ptr<_1a7ba4eb4_Var>* _146643_keyB) {
	if (((*(_146626_keyA)) != nullptr)) {
		(*((*(_146626_keyA))))._field_Constant=true;
		(*((*(_146626_keyA))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_146626_keyA))))._field_TypeSym=(*(_1a7ca9b35_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_146643_keyB)) != nullptr)) {
		(*((*(_146643_keyB))))._field_Constant=true;
		(*((*(_146643_keyB))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		(*((*(_146643_keyB))))._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b2055b_comptimeDecl>(_1a7b2055b_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data20)})});
	};
}



inline void _1a7b1e37e_index(_1a7b1d26d_comptimeDecls* _self_, jule::Ptr<_1a7bed89d_Data>* _148726_d, jule::I32 _148736_i) {
	(*((*(_148726_d))))._field_Decl=false;
	(*((*(_148726_d))))._field_untyped=false;
	(*((*(_148726_d))))._field_Constant=nullptr;
	(*((*(_148726_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148736_i], (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data20)});
}



inline void _1a7b1e79c_step(_1a7b1d26d_comptimeDecls* _self_, jule::I32 _149620_i, jule::Ptr<_1a7ba4eb4_Var>* _149633_keyA, jule::Ptr<_1a7ba4eb4_Var>* _149650_keyB) {
	if (((*(_149633_keyA)) != nullptr)) {
		(*((*((*((*(_149633_keyA))))._field_Value))._field_Data))._field_Constant=static__1a7a574d7_NewI64(static_cast<jule::I64>(_149620_i));
		(*(*((*((*(_149633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_149650_keyB)) != nullptr)) {
		(*((*((*((*((*(_149650_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1a7b2055b_comptimeDecl>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149620_i]))._field_decl;
	};
}



inline jule::I32 _1a7b1ea33_len(_1a7b1d26d_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _1a7b2055b_comptimeDecl_eq(_1a7b2055b_comptimeDecl *_self_, _1a7b2055b_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1a7b20913_Str(_1a7b2055b_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1a7b20c54_Equal(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c3255d_Type> _153518_other) {
	return false;;
}



inline jule::Str _1a7b211a5_declAsStr(_1a7b2055b_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ac2193e2:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ac2198ed:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ac2197aa:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ac219821:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ac219623:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac219689:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac219b51:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac219bb7:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ac219c2d:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ac219c94:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1ac2194e1:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1562:4"));;
			}
		}
		_match_end_1ac21927c:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b215a1__Name(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _156627_e, jule::Ptr<_1a7981d18_FnCallExpr>* _156642_fc) {
	if (((*((*(_156642_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_156627_e)).ptr(), (*((*((*(_156642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15717_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ac21cb21:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7997adc_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ac21e75a:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a70a83_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ac21e507:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a7d94d_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ac21e56d:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a80158_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ac21e5d4:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a7b297_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac21e64a:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7996800_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac21e9ad:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7c31848_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac21ea24:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba4eb4_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ac21ea8a:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a7cde2_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ac21eb01:;
			{
				_15717_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a6e0ae_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1ac21e3c5:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1594:4"));;
			}
		}
		_match_end_1ac21e35e:;
	};
	jule::Ptr<_1a79ea9a8_Const> _15967_constant = static__1a7a57ce0_NewStr(_15717_name);;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6aee_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15967_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_15967_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b2199c__Public(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _160429_e, jule::Ptr<_1a7981d18_FnCallExpr>* _160444_fc) {
	if (((*((*(_160444_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_160429_e)).ptr(), (*((*((*(_160444_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16097_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1ac227576:;
			{
				_1a7c00d45_pushErr((*(_160429_e)).ptr(), (*((*(_160444_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7b211a5_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ac2284bc:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7997adc_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ac228258:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a70a83_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ac2282be:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a7d94d_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ac228335:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a80158_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ac22839b:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a7b297_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac228720:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7996800_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac228786:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7c31848_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac2287ec:;
			{
				_16097_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba4eb4_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1ac228137:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1632:4"));;
			}
		}
		_match_end_1ac2280c1:;
	};
	jule::Ptr<_1a79ea9a8_Const> _16347_constant = static__1a7a57a26_NewBool(_16097_public);;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16347_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16347_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b21d98__Binded(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _164229_e, jule::Ptr<_1a7981d18_FnCallExpr>* _164244_fc) {
	if (((*((*(_164244_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_164229_e)).ptr(), (*((*((*(_164244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16477_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1ac2321b8:;
			{
				_1a7c00d45_pushErr((*(_164229_e)).ptr(), (*((*(_164244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7b211a5_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ac231d99:;
			{
				_16477_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7997adc_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ac231e10:;
			{
				_16477_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a70a83_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac231e76:;
			{
				_16477_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7c31848_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac231edc:;
			{
				_16477_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba4eb4_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1ac231d33:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1666:4"));;
			}
		}
		_match_end_1ac231cbc:;
	};
	jule::Ptr<_1a79ea9a8_Const> _16687_constant = static__1a7a57a26_NewBool(_16477_binded);;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16687_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16687_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b22294__Exceptional(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _167634_e, jule::Ptr<_1a7981d18_FnCallExpr>* _167649_fc) {
	if (((*((*(_167649_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_167634_e)).ptr(), (*((*((*(_167649_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ac237db1:;
			{
				goto _match_end_1ac238543;
			}
		}
		else {
			_case_begin_1ac2385a9:;
			{
				_1a7c00d45_pushErr((*(_167634_e)).ptr(), (*((*(_167649_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7b211a5_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac238543:;
	};
	jule::Ptr<_1a7a70a83_Fn> _16887_f = (*(_self_))._field_decl.cast_ptr<_1a7a70a83_Fn>(&__jule_any_type10);;
	jule::Ptr<_1a79ea9a8_Const> _16897_constant = static__1a7a57a26_NewBool((*(_16887_f))._field_Exceptional);;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16897_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16897_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b22690__Mutable(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _169730_e, jule::Ptr<_1a7981d18_FnCallExpr>* _169745_fc) {
	if (((*((*(_169745_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_169730_e)).ptr(), (*((*((*(_169745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17027_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16) {
			_case_begin_1ac23d3e4:;
			{
				_1a7c00d45_pushErr((*(_169730_e)).ptr(), (*((*(_169745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7b211a5_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ac23d0c5:;
			{
				_17027_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a6e0ae_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac23d13b:;
			{
				_17027_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7996800_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac23d1a2:;
			{
				_17027_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba4eb4_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1ac23d05e:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1720:4"));;
			}
		}
		_match_end_1ac23cee8:;
	};
	jule::Ptr<_1a79ea9a8_Const> _17227_constant = static__1a7a57a26_NewBool(_17027_mutable);;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17227_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17227_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b22a8b__Variadic(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _173031_e, jule::Ptr<_1a7981d18_FnCallExpr>* _173046_fc) {
	if (((*((*(_173046_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_173031_e)).ptr(), (*((*((*(_173046_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17357_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7) {
			_case_begin_1ac244780:;
			{
				_1a7c00d45_pushErr((*(_173031_e)).ptr(), (*((*(_173046_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7b211a5_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ac244461:;
			{
				_17357_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a6e0ae_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1ac2443ea:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1751:4"));;
			}
		}
		_match_end_1ac244384:;
	};
	jule::Ptr<_1a79ea9a8_Const> _17537_constant = static__1a7a57a26_NewBool(_17357_variadic);;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17537_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17537_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b22e87__Reference(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _176132_e, jule::Ptr<_1a7981d18_FnCallExpr>* _176147_fc) {
	if (((*((*(_176147_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_176132_e)).ptr(), (*((*((*(_176147_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17667_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14) {
			_case_begin_1ac249ab5:;
			{
				_1a7c00d45_pushErr((*(_176132_e)).ptr(), (*((*(_176147_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7b211a5_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac249796:;
			{
				_17667_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7ba4eb4_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ac24980c:;
			{
				_17667_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a7a6e0ae_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1ac249730:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1783:4"));;
			}
		}
		_match_end_1ac2496b9:;
	};
	jule::Ptr<_1a79ea9a8_Const> _17857_constant = static__1a7a57a26_NewBool(_17667_ref);;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17857_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17857_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b23383__Params(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _179329_e, jule::Ptr<_1a7981d18_FnCallExpr>* _179344_fc) {
	if (((*((*(_179344_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_179329_e)).ptr(), (*((*((*(_179344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1ac24e757:;
			{
				_1a7c00d45_pushErr((*(_179329_e)).ptr(), (*((*(_179344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7b211a5_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ac24eeb6:;
			{
				jule::Ptr<_1a7a70a83_Fn> _18118_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1a7a70a83_Fn>();;
				jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>> _18128_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>>::alloc((*(_18118_f))._field_Params.len(), (*(_18118_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b2055b_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18118_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac253492:;
					if (it != expr_end) {
						jule::I32 _18139_i = it - expr->begin();
						jule::Ptr<_1a7a6e0ae_Param> _181316_param = *it;
						{
							_18128_params[_18139_i]=jule::new_ptr<_1a7b2055b_comptimeDecl>(_1a7b2055b_comptimeDecl{._field_decl=jule::Any(_181316_param, &__jule_any_type17)});
						}
						_iter_next_1ac253492:;
						++it;
						_18139_i++;
						goto _iter_begin_1ac253492;
					}
					_iter_end_1ac253492:;
				};
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b1d26d_comptimeDecls>(_1a7b1d26d_comptimeDecls{._field_decls=_18128_params}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ac24ee50:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1824:4"));;
			}
		}
		_match_end_1ac24edd9:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b2377e__Fields(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _182829_e, jule::Ptr<_1a7981d18_FnCallExpr>* _182844_fc) {
	if (((*((*(_182844_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_182829_e)).ptr(), (*((*((*(_182844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>> _18337_fields = static_cast<jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10) {
			_case_begin_1ac256c9d:;
			{
				_1a7c00d45_pushErr((*(_182829_e)).ptr(), (*((*(_182844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7b211a5_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ac25697e:;
			{
				jule::Ptr<_1a7a7d94d_Enum> _18468_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1a7a7d94d_Enum>();;
				_18337_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>>::alloc((*(_18468_enm))._field_Items.len(), (*(_18468_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b2055b_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18468_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac259b2a:;
					if (it != expr_end) {
						jule::I32 _18489_i = it - expr->begin();
						jule::Ptr<_1a7a7cde2_EnumItem> _184816_item = *it;
						{
							_18337_fields[_18489_i]=jule::new_ptr<_1a7b2055b_comptimeDecl>(_1a7b2055b_comptimeDecl{._field_decl=jule::Any(_184816_item, &__jule_any_type16)});
						}
						_iter_next_1ac259b2a:;
						++it;
						_18489_i++;
						goto _iter_begin_1ac259b2a;
					}
					_iter_end_1ac259b2a:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ac2569e5:;
			{
				jule::Ptr<_1a7997adc_Struct> _18528_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a7997adc_Struct>();;
				_18337_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>>::alloc((*(_18528_s))._field_Fields.len(), (*(_18528_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b2055b_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18528_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac25b8eb:;
					if (it != expr_end) {
						jule::I32 _18549_i = it - expr->begin();
						jule::Ptr<_1a7996800_Field> _185416_field = *it;
						{
							_18337_fields[_18549_i]=jule::new_ptr<_1a7b2055b_comptimeDecl>(_1a7b2055b_comptimeDecl{._field_decl=jule::Any(_185416_field, &__jule_any_type14)});
						}
						_iter_next_1ac25b8eb:;
						++it;
						_18549_i++;
						goto _iter_begin_1ac25b8eb;
					}
					_iter_end_1ac25b8eb:;
				};
			}
		}
		else {
			_case_begin_1ac256918:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1858:4"));;
			}
		}
		_match_end_1ac2568a2:;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b1d26d_comptimeDecls>(_1a7b1d26d_comptimeDecls{._field_decls=_18337_fields}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b23b7a__Statics(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _186930_e, jule::Ptr<_1a7981d18_FnCallExpr>* _186945_fc) {
	if (((*((*(_186945_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_186930_e)).ptr(), (*((*((*(_186945_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>> _18747_fields = static_cast<jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1ac26026d:;
			{
				_1a7c00d45_pushErr((*(_186930_e)).ptr(), (*((*(_186945_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7b211a5_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ac25ee4e:;
			{
				jule::Ptr<_1a7997adc_Struct> _18888_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a7997adc_Struct>();;
				_18747_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>>::alloc((*(_18888_s))._field_Statics.len(), (*(_18888_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b2055b_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18888_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac263194:;
					if (it != expr_end) {
						jule::I32 _18909_i = it - expr->begin();
						jule::Ptr<_1a7ba4eb4_Var> _189016_field = *it;
						{
							_18747_fields[_18909_i]=jule::new_ptr<_1a7b2055b_comptimeDecl>(_1a7b2055b_comptimeDecl{._field_decl=jule::Any(_189016_field, &__jule_any_type7)});
						}
						_iter_next_1ac263194:;
						++it;
						_18909_i++;
						goto _iter_begin_1ac263194;
					}
					_iter_end_1ac263194:;
				};
			}
		}
		else {
			_case_begin_1ac25edd8:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1894:4"));;
			}
		}
		_match_end_1ac25ed72:;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b1d26d_comptimeDecls>(_1a7b1d26d_comptimeDecls{._field_decls=_18747_fields}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b24076__Methods(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Ptr<_1a7c0086c_eval>* _190530_e, jule::Ptr<_1a7981d18_FnCallExpr>* _190545_fc) {
	if (((*((*(_190545_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_190530_e)).ptr(), (*((*((*(_190545_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>> _19107_methods = static_cast<jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1ac266a16:;
			{
				_1a7c00d45_pushErr((*(_190530_e)).ptr(), (*((*(_190545_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7b211a5_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ac2666e7:;
			{
				jule::Ptr<_1a7a7b297_Trait> _19238_t = (*(_self_))._field_decl.unsafe_cast_ptr<_1a7a7b297_Trait>();;
				_19107_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>>::alloc((*(_19238_t))._field_Methods.len(), (*(_19238_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b2055b_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19238_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac043826:;
					if (it != expr_end) {
						jule::I32 _19259_i = it - expr->begin();
						jule::Ptr<_1a7a70a83_Fn> _192516_method = *it;
						{
							_19107_methods[_19259_i]=jule::new_ptr<_1a7b2055b_comptimeDecl>(_1a7b2055b_comptimeDecl{._field_decl=jule::Any(_192516_method, &__jule_any_type10)});
						}
						_iter_next_1ac043826:;
						++it;
						_19259_i++;
						goto _iter_begin_1ac043826;
					}
					_iter_end_1ac043826:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ac26675d:;
			{
				jule::Ptr<_1a7997adc_Struct> _19298_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a7997adc_Struct>();;
				_19107_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b2055b_comptimeDecl>>::alloc((*(_19298_s))._field_Methods.len(), (*(_19298_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b2055b_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19298_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac045619:;
					if (it != expr_end) {
						jule::I32 _19319_i = it - expr->begin();
						jule::Ptr<_1a7a70a83_Fn> _193116_method = *it;
						{
							_19107_methods[_19319_i]=jule::new_ptr<_1a7b2055b_comptimeDecl>(_1a7b2055b_comptimeDecl{._field_decl=jule::Any(_193116_method, &__jule_any_type10)});
						}
						_iter_next_1ac045619:;
						++it;
						_19319_i++;
						goto _iter_begin_1ac045619;
					}
					_iter_end_1ac045619:;
				};
			}
		}
		else {
			_case_begin_1ac266681:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1935:4"));;
			}
		}
		_match_end_1ac26661a:;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b1d26d_comptimeDecls>(_1a7b1d26d_comptimeDecls{._field_decls=_19107_methods}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b243b7_subIdent(jule::Ptr<_1a7b2055b_comptimeDecl> _self_, jule::Str* _194626_ident) {
	{
		auto &_match_expr{ (*(_194626_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ac047297:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _19498_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac04895d, jule::Ptr<__jule_anon_1ac04895d_ctx>::make(__jule_anon_1ac04895d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac04895d_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_19498_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1ac04730d:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _19568_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac04a795, jule::Ptr<__jule_anon_1ac04a795_ctx>::make(__jule_anon_1ac04a795_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac04a795_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_19568_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1ac047374:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _19638_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac04c588, jule::Ptr<__jule_anon_1ac04c588_ctx>::make(__jule_anon_1ac04c588_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac04c588_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_19638_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1ac0473da:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _19708_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac04e37b, jule::Ptr<__jule_anon_1ac04e37b_ctx>::make(__jule_anon_1ac04e37b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac04e37b_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_19708_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1ac047594:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _19778_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac05116e, jule::Ptr<__jule_anon_1ac05116e_ctx>::make(__jule_anon_1ac05116e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac05116e_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_19778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1ac04760a:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _19848_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac052e62, jule::Ptr<__jule_anon_1ac052e62_ctx>::make(__jule_anon_1ac052e62_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac052e62_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_19848_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1ac047671:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _19918_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac054c55, jule::Ptr<__jule_anon_1ac054c55_ctx>::make(__jule_anon_1ac054c55_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac054c55_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_19918_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1ac0476e8:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _19988_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac056a48, jule::Ptr<__jule_anon_1ac056a48_ctx>::make(__jule_anon_1ac056a48_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac056a48_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_19988_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1ac047770:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _20058_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac058ab1, jule::Ptr<__jule_anon_1ac058ab1_ctx>::make(__jule_anon_1ac058ab1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac058ab1_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_20058_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1ac04785d:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _20128_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac05a8a4, jule::Ptr<__jule_anon_1ac05a8a4_ctx>::make(__jule_anon_1ac05a8a4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac05a8a4_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_20128_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_1ac0478d5:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _20198_method = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>((void*)__jule_anon_1ac05c697, jule::Ptr<__jule_anon_1ac05c697_ctx>::make(__jule_anon_1ac05c697_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac05c697_ctx_handler), ._field_reloaded=false});;
				return _1a7b24a49_buildAsComptimeMethodData(&(_20198_method));;
			}
		}
		else {
			_case_begin_1ac046e9a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac047110:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_1a7b7c0bd_sema>*,jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>*> _1a7b27376_readyFn(jule::Ptr<_1a7b26e47_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1a7b7c0bd_sema>*,jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>*>((void*)__jule_anon_1ac06865e, jule::Ptr<__jule_anon_1ac06865e_ctx>::make(__jule_anon_1ac06865e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac06865e_ctx_handler);;
}



inline jule::Bool _1a7b2760c_readyFi(jule::Ptr<_1a7b26e47_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a7b90598_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1a7b27376_readyFn(_self_)));;
}



inline jule::Bool _1a7b27893_readySi(jule::Ptr<_1a7b26e47_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a7b27376_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1a7b27b29_ready(jule::Ptr<_1a7b26e47_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1a7b2760c_readyFi(_self_);;
	};
	return _1a7b27893_readySi(_self_);;
}



inline jule::Bool _1a7b27db0_check(jule::Ptr<_1a7b26e47_constraintChecker> _self_) {
	if ((!(_1a7b27b29_ready(_self_)))) {
		return false;;
	};
	_julec_label_1ac0790ed:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0795a4:;
		if (it != expr_end) {
			jule::I32 _1208_i = it - expr->begin();
			jule::Ptr<_1a7c30b77_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1ac0795a4;
				};
				{
					auto expr = &((*(_12015_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac07a84c:;
					if (it != expr_end) {
						jule::Ptr<_1a7c3255d_Type> _12416_c2 = *it;
						{
							jule::Ptr<_1a7c3b369_Prim> _1259_prim = _1a7c35671_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1a7c3bec4_IsConstraint(_1259_prim))) {
								if (_1a7b2860d_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*(_12015_g))._field_Type))) {
									goto _iter_next_1ac0795a4;
								};
								goto _iter_next_1ac07a84c;
							};
							if (_1a7c32c9a_Equal(_12416_c2, (*(_12015_g))._field_Type)) {
								goto _iter_next_1ac0795a4;
							};
						}
						_iter_next_1ac07a84c:;
						++it;
						goto _iter_begin_1ac07a84c;
					}
					_iter_end_1ac07a84c:;
				};
				_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*_12015_g.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a7b28245_toStrConstraints(_12015_g), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
			_iter_next_1ac0795a4:;
			++it;
			_1208_i++;
			goto _iter_begin_1ac0795a4;
		}
		_iter_end_1ac0795a4:;
	};
	return true;;
}







inline jule::Bool _1a7b29642_IsTraitImpl(_1a7b29246_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1a7b298c8_IsStructImpl(_1a7b29246_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}








inline jule::Bool _1a7b2b9a7_exprPart_eq(_1a7b2b9a7_exprPart *_self_, _1a7b2b9a7_exprPart _other_) {
	return 
		(_self_->_field_data == _other_._field_data) &&
		(_self_->_field_expr == _self_->_field_expr);
}










inline jule::Bool _1a7b2c612_If_eq(_1a7b2c612_If *_self_, _1a7b2c612_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1a7b2c986_Else_eq(_1a7b2c986_Else *_self_, _1a7b2c986_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _1a7b2d129_InfIter_eq(_1a7b2d129_InfIter *_self_, _1a7b2d129_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _1a7b2d5d0_WhileIter_eq(_1a7b2d5d0_WhileIter *_self_, _1a7b2d5d0_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _1a7b2da86_IsWhileNext(_1a7b2d5d0_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1a7b2e0b4_RangeIter_eq(_1a7b2e0b4_RangeIter *_self_, _1a7b2e0b4_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1a7b2e3b1_ContSt_eq(_1a7b2e3b1_ContSt *_self_, _1a7b2e3b1_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _1a7b2e78a_BreakSt_eq(_1a7b2e78a_BreakSt *_self_, _1a7b2e78a_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _1a7b2ec41_Label_eq(_1a7b2ec41_Label *_self_, _1a7b2ec41_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1a7b303a1_GotoSt_eq(_1a7b303a1_GotoSt *_self_, _1a7b303a1_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1a7b3077a_Postfix_eq(_1a7b3077a_Postfix *_self_, _1a7b3077a_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1a7b30c31_Assign_eq(_1a7b30c31_Assign *_self_, _1a7b30c31_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _1a7b32c22_FallSt_eq(_1a7b32c22_FallSt *_self_, _1a7b32c22_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _1a7b330b8_RetSt_eq(_1a7b330b8_RetSt *_self_, _1a7b330b8_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a7b3356e_scopeLabel_eq(_1a7b3356e_scopeLabel *_self_, _1a7b3356e_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _1a7b33948_result_eq(_1a7b33948_result *_self_, _1a7b33948_result _other_) {
	return 
		(_self_->_field_func == _other_._field_func) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _1a7b34938_scopeChecker_eq(_1a7b34938_scopeChecker *_self_, _1a7b34938_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b34e11_SelectPackage(_1a7b34938_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> _24029_selector) {
	return _1a7b7c596_SelectPackage((*(_self_))._field_s.ptr(), _24029_selector);;
}



inline jule::Ptr<_1a7ba4eb4_Var> _1a7b3530c_FindVar(_1a7b34938_scopeChecker* _self_, jule::Str _25123_ident, jule::Bool _25135_binded) {
	if ((!(_25135_binded))) {
		jule::Ptr<_1a7ba4eb4_Var> _2538_v = _1a7b38673_findVar(_self_, _25123_ident);;
		if ((_2538_v != nullptr)) {
			return _2538_v;;
		};
	};
	return _1a7b7c992_FindVar((*(_self_))._field_s.ptr(), _25123_ident, _25135_binded);;
}



inline jule::Ptr<_1a7c31848_TypeAlias> _1a7b35708_FindTypeAlias(_1a7b34938_scopeChecker* _self_, jule::Str _26829_ident, jule::Bool _26841_binded) {
	;
	jule::Ptr<_1a7c31848_TypeAlias> _2717_ta = _1a7a79d89_findTypeAlias((*(_self_))._field_table.ptr(), &(_26829_ident), _26841_binded, true);;
	if ((_2717_ta != nullptr)) {
		return _2717_ta;;
	};
	jule::Ptr<_1a7b34938_scopeChecker> _2767_parent = (*(_self_))._field_parent;;
	while ((_2767_parent != nullptr)) {
		{
			_2717_ta=_1a7a79d89_findTypeAlias((*(_2767_parent))._field_table, &(_26829_ident), _26841_binded, true);
			if ((_2717_ta != nullptr)) {
				return _2717_ta;;
			};
			_2767_parent=(*(_2767_parent))._field_parent;
		}
	_iter_next_1ac0bd75d:;
	}
	_iter_end_1ac0bd75d:;;
	return _1a7b7cd8d_FindTypeAlias((*(_self_))._field_s.ptr(), _26829_ident, _26841_binded);;
}



inline jule::Ptr<_1a7997adc_Struct> _1a7b35b04_FindStruct(_1a7b34938_scopeChecker* _self_, jule::Str _29326_ident, jule::Bool _29338_binded) {
	return _1a7b7d289_FindStruct((*(_self_))._field_s.ptr(), _29326_ident, _29338_binded);;
}



inline jule::Ptr<_1a7a70a83_Fn> _1a7b36000_FindFn(_1a7b34938_scopeChecker* _self_, jule::Str _30222_ident, jule::Bool _30234_binded) {
	return _1a7b7d685_FindFn((*(_self_))._field_s.ptr(), _30222_ident, _30234_binded);;
}



inline jule::Ptr<_1a7a7b297_Trait> _1a7b36341_FindTrait(_1a7b34938_scopeChecker* _self_, jule::Str _31125_ident) {
	return _1a7b7d9c6_FindTrait((*(_self_))._field_s.ptr(), _31125_ident);;
}



inline jule::Ptr<_1a7a7d94d_Enum> _1a7b36682_FindEnum(_1a7b34938_scopeChecker* _self_, jule::Str _32024_ident) {
	return _1a7b7dd17_FindEnum((*(_self_))._field_s.ptr(), _32024_ident);;
}



inline jule::Ptr<_1a7a80158_TypeEnum> _1a7b369c3_FindTypeEnum(_1a7b34938_scopeChecker* _self_, jule::Str _32928_ident) {
	return _1a7b7e158_FindTypeEnum((*(_self_))._field_s.ptr(), _32928_ident);;
}



inline jule::Bool _1a7b36d25_isUnsafe(jule::Ptr<_1a7b34938_scopeChecker> _self_) {
	jule::Ptr<_1a7b34938_scopeChecker> _3377_scope = _self_;;
	_julec_label_1ac0c393e:;
	if ((*((*(_3377_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_3377_scope))._field_parent != nullptr)) {
		_3377_scope=(*_3377_scope.alloc)._field_parent;
		goto _julec_label_1ac0c393e;
	};
	return false;;
}



inline jule::Bool _1a7b370ab_isRoot(_1a7b34938_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1a7b372a9_stop(_1a7b34938_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1a7b37540_stopped(_1a7b34938_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1a7b377c6_isDeferred(jule::Ptr<_1a7b34938_scopeChecker> _self_) {
	jule::Ptr<_1a7b34938_scopeChecker> _3707_scope = _self_;;
	_julec_label_1ac0c6414:;
	if ((*((*(_3707_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_3707_scope))._field_parent != nullptr)) {
		_3707_scope=(*_3707_scope.alloc)._field_parent;
		goto _julec_label_1ac0c6414;
	};
	return false;;
}



inline void _1a7b37a7e_pushCaptured(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7ba4eb4_Var>* _39134_v) {
	jule::Ptr<_1a7b34938_scopeChecker> _3927_sc = _self_;;
	for (;;) {
		{
			if (((*(_3927_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_3927_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac0c89ee:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba4eb4_Var> _39512_cv = *it;
						{
							if ((_39512_cv == (*(_39134_v)))) {
								goto _julec_label_1ac0c9923;
							};
						}
						_iter_next_1ac0c89ee:;
						++it;
						goto _iter_begin_1ac0c89ee;
					}
					_iter_end_1ac0c89ee:;
				};
				(*(*(_3927_sc))._field_captured.alloc)=jule::append((*(*(_3927_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_39134_v)); __jule_collection; }));
				_julec_label_1ac0c9923:;
			};
			if (((*(_3927_sc))._field_parent == nullptr)) {
				goto _iter_end_1ac0c7c95;
			};
			_3927_sc=(*(_3927_sc))._field_parent;
			if ((!(_1a7c2eb10_isVarCaptured(_3927_sc, _3927_sc, (*(_39134_v)))))) {
				goto _iter_end_1ac0c7c95;
			};
		}
	_iter_next_1ac0c7c95:;
	}
	_iter_end_1ac0c7c95:;;
}



inline jule::Ptr<_1a7b34938_scopeChecker> _1a7b37d15_getRoot(jule::Ptr<_1a7b34938_scopeChecker> _self_) {
	jule::Ptr<_1a7b34938_scopeChecker> _4167_root = _self_;;
	while ((((*(_4167_root))._field_parent != nullptr) && ((*_4167_root.alloc)._field_owner == nullptr))) {
		{
			_4167_root=(*(_4167_root))._field_parent;
		}
	_iter_next_1ac0ca5d3:;
	}
	_iter_end_1ac0ca5d3:;;
	return _4167_root;;
}



inline jule::Ptr<_1a7b34938_scopeChecker> _1a7b3809b_getHardRoot(jule::Ptr<_1a7b34938_scopeChecker> _self_) {
	jule::Ptr<_1a7b34938_scopeChecker> _4267_root = _self_;;
	while (((*(_4267_root))._field_parent != nullptr)) {
		{
			_4267_root=(*(_4267_root))._field_parent;
		}
	_iter_next_1ac0cbb78:;
	}
	_iter_end_1ac0cbb78:;;
	return _4267_root;;
}



inline jule::Ptr<_1a7b4c786_ReferenceStack> _1a7b38332_getOwnerRefers(jule::Ptr<_1a7b34938_scopeChecker> _self_) {
	return (*((*(_1a7b3809b_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_1a7ba4eb4_Var> _1a7b38673_findVar(_1a7b34938_scopeChecker* _self_, jule::Str _43823_ident) {
	;
	;
	jule::Ptr<_1a7ba4eb4_Var> _4417_v = _1a7a798d3_findVar((*(_self_))._field_table.ptr(), &(_43823_ident), false, true);;
	if ((_4417_v != nullptr)) {
		return _4417_v;;
	};
	jule::Ptr<_1a7b34938_scopeChecker> _4457_parent = (*(_self_))._field_parent;;
	while ((_4457_parent != nullptr)) {
		{
			_4417_v=_1a7a798d3_findVar((*(_4457_parent))._field_table, &(_43823_ident), false, true);
			if ((_4417_v != nullptr)) {
				return _4417_v;;
			};
			_4457_parent=(*(_4457_parent))._field_parent;
		}
	_iter_next_1ac0ceb59:;
	}
	_iter_end_1ac0ceb59:;;
	return nullptr;;
}



inline jule::Ptr<_1a7b2ec41_Label> _1a7b389b4_findLabel(_1a7b34938_scopeChecker* _self_, jule::Str* _45926_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0d1760:;
		if (it != expr_end) {
			jule::Any _46015_st = *it;
			{
				{
					auto &_match_expr{ _46015_st };
					
					if (_match_expr.type == &__jule_any_type18) {
						_case_begin_1ac0d20ce:;
						{
							jule::Ptr<_1a7b2ec41_Label> _4639_label = _46015_st.unsafe_cast_ptr<_1a7b2ec41_Label>();;
							if (((*(_4639_label))._field_Ident == (*(_45926_ident)))) {
								return _4639_label;;
							};
						}
					}
					_match_end_1ac0d2068:;
				};
			}
			_iter_next_1ac0d1760:;
			++it;
			goto _iter_begin_1ac0d1760;
		}
		_iter_end_1ac0d1760:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7b3356e_scopeLabel> _1a7b38d05_findLabelScope(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Str* _47532_ident) {
	jule::Ptr<_1a7b3356e_scopeLabel> _4767_label = _1a7b39146_findLabelAll(_self_.ptr(), _47532_ident);;
	if (((_4767_label != nullptr) && ((*((*_4767_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _4767_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7b3356e_scopeLabel> _1a7b39146_findLabelAll(_1a7b34938_scopeChecker* _self_, jule::Str* _48629_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0d5da2:;
		if (it != expr_end) {
			jule::Ptr<_1a7b3356e_scopeLabel> _48715_lbl = *it;
			{
				if (((*((*(_48715_lbl))._field_node))._field_Ident == (*(_48629_ident)))) {
					return _48715_lbl;;
				};
			}
			_iter_next_1ac0d5da2:;
			++it;
			goto _iter_begin_1ac0d5da2;
		}
		_iter_end_1ac0d5da2:;
	};
	return nullptr;;
}



inline jule::Bool _1a7b39542_isDuplicatedIdent(_1a7b34938_scopeChecker* _self_, jule::Uintptr _49833_itself, jule::Str* _49851_ident) {
	jule::Ptr<_1a7ba4eb4_Var> _4993_v = _1a7b3530c_FindVar(_self_, (*(_49851_ident)), false);;
	if (((_4993_v != nullptr) && (static_cast<jule::Uintptr>(_4993_v) != _49833_itself))) {
		if (((*_4993_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_4993_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1a7b7e565_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_1a7c31848_TypeAlias> _5073_ta = _1a7b35708_FindTypeAlias(_self_, (*(_49851_ident)), false);;
	if (((_5073_ta != nullptr) && (static_cast<jule::Uintptr>(_5073_ta) != _49833_itself))) {
		if (((*_5073_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_5073_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1a7b7e565_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _1a7b397ea_checkVarDecl(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798bc02_VarDecl> _51833_decl) {
	jule::Ptr<_1a7ba4eb4_Var> _5197_v = _1a7b52b43_buildVar(_51833_decl);;
	(*(_5197_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5197_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5197_v, &__jule_any_type7); __jule_collection; }));
	});;
	if (_1a7b39542_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_5197_v), &((*_5197_v.alloc)._field_Ident))) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_5197_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_5197_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1a7b372a9_stop(_self_);
		return;;
	};
	_1a7b9831a_checkVarDecl((*_self_.alloc)._field_s, &(_5197_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));
	if (((!(_1a7ba5657_IsTypeInferred(_5197_v))) && (((*_5197_v.alloc)._field_TypeSym == nullptr) || ((*((*_5197_v.alloc)._field_TypeSym))._field_Type == nullptr)))) {
		return;;
	};
	_1a7b9bab0_evalVarValue((*(_self_))._field_s, &(_5197_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));
	if (((!(_1a7ba53c1_IsInitialized(_5197_v))) || ((*((*_5197_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1a7b40a65_removeInteriorMutRisk(_self_, &((*((*_5197_v.alloc)._field_Value))._field_Data));
	_1a7b9b74c_checkVarValue((*(_self_))._field_s, &(_5197_v));
}



inline void _1a7b39aa3_checkTypeAlias(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7c31848_TypeAlias>* _54936_ta) {
	if (_1a7b39542_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_54936_ta))), &((*((*(_54936_ta))))._field_Ident))) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_54936_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_54936_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1a7b372a9_stop(_self_);
		return;;
	};
	_1a7b9239c_checkTypeAliasDecl((*(_self_))._field_s, _54936_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_54936_ta)); __jule_collection; }));
	if (((*((*((*(_54936_ta))))._field_TypeSym))._field_Type == nullptr)) {
		_1a7b372a9_stop(_self_);
	};
}



inline void _1a7b39d5b_checkTypeAliasDecl(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7990981_TypeAliasDecl> _56539_decl) {
	jule::Ptr<_1a7c31848_TypeAlias> _5667_ta = _1a7b4e722_buildTypeAlias(_56539_decl);;
	_1a7b39aa3_checkTypeAlias(_self_, &(_5667_ta));
}



inline jule::Ptr<_1a7b2c238_Scope> _1a7b3a0e2_getChild(_1a7b34938_scopeChecker* _self_) {
	return jule::new_ptr<_1a7b2c238_Scope>(_1a7b2c238_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _1a7b3a510_checkChildSsc(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7988da8_ScopeTree>* _57635_tree, jule::Ptr<_1a7b2c238_Scope>* _57663_s, jule::Ptr<_1a7b34938_scopeChecker>* _57679_ssc) {
	(*((*(_57663_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_57663_s))))._field_ChildIndex=(*((*(_57679_ssc))))._field_childIndex;
	(*((*(_57679_ssc))))._field_parent=_self_;
	_1a7b46a05_check((*(_57679_ssc)), _57635_tree, _57663_s);
}



inline jule::Ptr<_1a7b2c238_Scope> _1a7b3a90b_checkChildSc(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7988da8_ScopeTree>* _58334_tree, jule::Ptr<_1a7b34938_scopeChecker>* _58362_ssc) {
	jule::Ptr<_1a7b2c238_Scope> _5847_s = _1a7b3a0e2_getChild(_self_.ptr());;
	_1a7b3a510_checkChildSsc(_self_, _58334_tree, &(_5847_s), _58362_ssc);
	return _5847_s;;
}



inline jule::Ptr<_1a7b2c238_Scope> _1a7b3ac4c_checkChild(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7988da8_ScopeTree>* _58932_tree) {
	jule::Ptr<_1a7b34938_scopeChecker> _5907_ssc = _1a7b46c8b_newChildChecker(_self_);;
	return _1a7b3a90b_checkChildSc(_self_, _58932_tree, &(_5907_ssc));;
}



inline void _1a7b3b005_checkAnonScope(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7988da8_ScopeTree> _59435_tree) {
	jule::Ptr<_1a7b2c238_Scope> _5957_s = _1a7b3ac4c_checkChild(_self_, &(_59435_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5957_s, &__jule_any_type19); __jule_collection; }));
}



inline void _1a7b3b368_processErrorCall(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7a6b94c_BuiltinErrorCallExpr>* _59938_m, jule::Ptr<_1a79633b0_Token> _59964_err) {
	if (_1a7b377c6_isDeferred(_self_)) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), _59964_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7b34938_scopeChecker> _6047_root = _1a7b37d15_getRoot(_self_);;
	if ((!((*((*((*(_6047_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), _59964_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_59938_m))))._field_Func=(*(_6047_root))._field_owner;
}



inline void _1a7b3b621_checkExpr(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a797d0de_Expr> _61230_expr) {
	jule::Ptr<_1a7c0086c_eval> _6137_eval = _1a7b8bc04_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));;
	(*(_6137_eval))._field_target._field_ignored=true;
	jule::Ptr<_1a7bed89d_Data> _6157_d = _1a7c204d5_evalExpr(_6137_eval, _61230_expr);;
	if (((_6157_d == nullptr) || ((*(_6157_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_6157_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ac1080d3:;
			{
				jule::Ptr<_1a7a6b94c_BuiltinErrorCallExpr> _6248_m = (*(_6157_d))._field_Model.unsafe_cast_ptr<_1a7a6b94c_BuiltinErrorCallExpr>();;
				_1a7b3b368_processErrorCall(_self_, &(_6248_m), (*(_61230_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6157_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30) {
			_case_begin_1ac1086ee:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6157_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else {
			_case_begin_1ac108688:;
			{
				_1a7b7eec2_pushErr((*(_self_))._field_s, (*(_61230_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac108622:;
	};
}



inline jule::Ptr<_1a7b2c612_If> _1a7b3b962_checkIf(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798e7d7_If> _64228_i) {
	jule::Ptr<_1a7b2c238_Scope> _6437_s = _1a7b3ac4c_checkChild(_self_, &((*(_64228_i))._field_Scope));;
	jule::Ptr<_1a7bed89d_Data> _6457_d = _1a7c204d5_evalExpr(_1a7b8bc04_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)), (*_64228_i.alloc)._field_Expr);;
	if ((_6457_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7c3b369_Prim> _6507_prim = _1a7c35671_Prim((*(_6457_d))._field_Type.ptr());;
	if (((_6507_prim == nullptr) || (!(_1a7c3e59d_IsBool(_6507_prim.ptr()))))) {
		_1a7b7eec2_pushErr((*(_self_))._field_s, (*((*_64228_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a7b2c612_If>(_1a7b2c612_If{._field_Expr=(*_6457_d.alloc)._field_Model, ._field_Scope=_6437_s});;
}



inline jule::Ptr<_1a7b2c986_Else> _1a7b3bca3_checkElse(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798ebb1_Else> _66230_e) {
	return jule::new_ptr<_1a7b2c986_Else>(_1a7b2c986_Else{._field_Scope=_1a7b3ac4c_checkChild(_self_, &((*(_66230_e))._field_Scope))});;
}



inline void _1a7b3c05b_checkConditional(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7990167_Conditional> _66837_conditional) {
	jule::Ptr<_1a7b2cd2c_Conditional> _6697_c = jule::new_ptr<_1a7b2cd2c_Conditional>(_1a7b2cd2c_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1a7b2c612_If>>(nullptr), ._field_Default=jule::Ptr<_1a7b2c986_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6697_c, &__jule_any_type31); __jule_collection; }));
	(*_6697_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b2c612_If>>::alloc(0LL, ((*(_66837_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b2c612_If>(nullptr); __jule_collection; });
	(*_6697_c.alloc)._field_Elifs=jule::append((*_6697_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b2c612_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7b3b962_checkIf(_self_, (*_66837_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_66837_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac12acd7:;
		if (it != expr_end) {
			jule::Ptr<_1a798e7d7_If> _67515_elif = *it;
			{
				(*_6697_c.alloc)._field_Elifs=jule::append((*_6697_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b2c612_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7b3b962_checkIf(_self_, _67515_elif); __jule_collection; }));
			}
			_iter_next_1ac12acd7:;
			++it;
			goto _iter_begin_1ac12acd7;
		}
		_iter_end_1ac12acd7:;
	};
	if (((*_66837_conditional.alloc)._field_Default != nullptr)) {
		(*_6697_c.alloc)._field_Default=_1a7b3bca3_checkElse(_self_, (*_66837_conditional.alloc)._field_Default);
	};
}



inline void _1a7b3c534_checkIterScopeSsc(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Uintptr _68434_it, jule::Ptr<_1a7988da8_ScopeTree> _68451_tree, jule::Ptr<_1a7b2c238_Scope>* _68479_s, jule::Ptr<_1a7b34938_scopeChecker> _68494_ssc) {
	(*(_68494_ssc))._field_it=_68434_it;
	_1a7b3a510_checkChildSsc(_self_, &(_68451_tree), _68479_s, &(_68494_ssc));
}



inline jule::Ptr<_1a7b2c238_Scope> _1a7b3c9da_checkIterScopeSc(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Uintptr _68933_it, jule::Ptr<_1a7988da8_ScopeTree> _68950_tree, jule::Ptr<_1a7b34938_scopeChecker> _68977_ssc) {
	jule::Ptr<_1a7b2c238_Scope> _6907_scope = _1a7b3a0e2_getChild(_self_.ptr());;
	_1a7b3c534_checkIterScopeSsc(_self_, _68933_it, _68950_tree, &(_6907_scope), _68977_ssc);
	return _6907_scope;;
}



inline jule::Ptr<_1a7b2c238_Scope> _1a7b3cdd6_checkIterScope(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Uintptr _69531_it, jule::Ptr<_1a7988da8_ScopeTree>* _69549_tree) {
	jule::Ptr<_1a7b34938_scopeChecker> _6967_ssc = _1a7b46c8b_newChildChecker(_self_);;
	return _1a7b3c9da_checkIterScopeSc(_self_, _69531_it, (*(_69549_tree)), _6967_ssc);;
}



inline void _1a7b3d18e_checkInfIter(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798c84b_Iter>* _70034_it) {
	jule::Ptr<_1a7b2d129_InfIter> _7017_kind = jule::new_ptr<_1a7b2d129_InfIter>(_1a7b2d129_InfIter{._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7017_kind, &__jule_any_type32); __jule_collection; }));
	(*_7017_kind.alloc)._field_Scope=_1a7b3cdd6_checkIterScope(_self_, static_cast<jule::Uintptr>(_7017_kind), &((*((*(_70034_it))))._field_Scope));
}



inline void _1a7b3d447_checkWhileIter(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798c84b_Iter>* _70636_it) {
	jule::Ptr<_1a798d176_WhileKind> _7077_wh = (*((*(_70636_it))))._field_Kind.cast_ptr<_1a798d176_WhileKind>(&__jule_any_type33);;
	if ((((*(_7077_wh))._field_Expr == nullptr) && ((*_7077_wh.alloc)._field_Next == nullptr))) {
		_1a7b3d18e_checkInfIter(_self_, _70636_it);
		return;;
	};
	jule::Ptr<_1a7b2d5d0_WhileIter> _7137_kind = jule::new_ptr<_1a7b2d5d0_WhileIter>(_1a7b2d5d0_WhileIter{._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7137_kind, &__jule_any_type34); __jule_collection; }));
	(*_7137_kind.alloc)._field_Scope=_1a7b3cdd6_checkIterScope(_self_, static_cast<jule::Uintptr>(_7137_kind), &((*((*(_70636_it))))._field_Scope));
	if (((*(_7077_wh))._field_Expr != nullptr)) {
		jule::Ptr<_1a7bed89d_Data> _7188_d = _1a7c204d5_evalExpr(_1a7b8bc04_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)), (*_7077_wh.alloc)._field_Expr);;
		if ((_7188_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a7c3b369_Prim> _7234_prim = _1a7c35671_Prim((*(_7188_d))._field_Type.ptr());;
		if ((_7234_prim == nullptr)) {
			_1a7b7eec2_pushErr((*(_self_))._field_s, (*((*(_70636_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a7c3e59d_IsBool(_7234_prim.ptr())))) {
			_1a7b7eec2_pushErr((*(_self_))._field_s, (*((*(_70636_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_7137_kind.alloc)._field_Expr=(*_7188_d.alloc)._field_Model;
	};
	if (_1a798d51c_IsWhileNext(_7077_wh.ptr())) {
		if ((!(_1a7b491bc_isValidAstStForNextSt(&((*_7077_wh.alloc)._field_Next))))) {
			_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_7077_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _7434_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1a7b4563b_checkNode(_self_, &((*_7077_wh.alloc)._field_Next));
		if ((_7434_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _7469_st = (*((*(_self_))._field_scope))._field_Stmts[_7434_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _7434_n);;
			if ((!(_1a7b49486_isValidStForNextSt(&(_7469_st))))) {
				_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_7077_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_7137_kind.alloc)._field_Next=_7469_st;
		};
	};
}



inline void _1a7b3d865_checkComptimeRangeIter(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798c84b_Iter>* _75644_it, jule::Ptr<_1a7b2e0b4_RangeIter>* _75665_kind, jule::Ptr<_1a7bed89d_Data>* _75688_d) {
	if (((*((*(_75665_kind))))._field_KeyA != nullptr)) {
		if (((!(_1a7b7e565_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1a7b39542_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_75665_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1a7b7eec2_pushErr((*(_self_))._field_s, (*(*((*(_75665_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_75665_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_75665_kind))))._field_KeyB != nullptr)) {
		if (((!(_1a7b7e565_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1a7b39542_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_75665_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1a7b7eec2_pushErr((*(_self_))._field_s, (*(*((*(_75665_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_75665_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1a798da7d_RangeKind> _7707_rang = (*((*(_75644_it))))._field_Kind.cast_ptr<_1a798da7d_RangeKind>(&__jule_any_type35);;
	_1a7b47385_makeComptimeRange(_75688_d);
	if ((*((*(_75688_d))))._field_Decl) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_7707_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_75688_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1a7be7bc7_rangeChecker _7777_rc = _1a7be7bc7_rangeChecker{._field_sc=_self_, ._field_rang=_7707_rang, ._field_Kind=(*(_75665_kind)), ._field_d=(*(_75688_d))};;
	jule::Bool _7833_ok = _1a7be9c1d_check(&_7777_rc);;
	if ((!(_7833_ok))) {
		return;;
	};
	jule::Ptr<_1a7b00e65_comptimeRange> _7887_comptime = _1a7c38ca1_comptimeRange((*((*(_75688_d))))._field_Type.ptr());;
	((_1a7b00c45_comptimeRangeKindMptrData*)(*(_7887_comptime))._field_kind.safe_type())->_1a7b0043c_ready((*(_7887_comptime))._field_kind.data, &((*((*(_75665_kind))))._field_KeyA), &((*((*(_75665_kind))))._field_KeyB));
	jule::I32 _7907_i = 0LL;;
	jule::I32 _7913_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_7907_i < ((_1a7b00c45_comptimeRangeKindMptrData*)(*_7887_comptime.alloc)._field_kind.safe_type())->_1a7b00ae1_len((*_7887_comptime.alloc)._field_kind.data)); (_7907_i)++) {
		{
			jule::Ptr<_1a7b34938_scopeChecker> _7938_ssc = _1a7b46c8b_newChildChecker(_self_);;
			jule::Ptr<_1a7b2c238_Scope> _7948_scope = _1a7b3a0e2_getChild(_self_);;
			if (((*((*(_75665_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_75665_kind))))._field_KeyA.alloc)._field_Scope=_7948_scope;
				(*((*(_7938_ssc))._field_table))._field_Vars=jule::append((*(*(_7938_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_75665_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_75665_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_75665_kind))))._field_KeyB.alloc)._field_Scope=_7948_scope;
				(*((*(_7938_ssc))._field_table))._field_Vars=jule::append((*(*(_7938_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_75665_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1a7b00c45_comptimeRangeKindMptrData*)(*_7887_comptime.alloc)._field_kind.safe_type())->_1a7b0085a_step((*_7887_comptime.alloc)._field_kind.data, _7907_i, &((*((*(_75665_kind))))._field_KeyA), &((*((*(_75665_kind))))._field_KeyB));
			_1a7b3a510_checkChildSsc(_self_, &((*((*(_75644_it))))._field_Scope), &(_7948_scope), &(_7938_ssc));
			if ((_7913_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1aa7d31b6;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7948_scope, &__jule_any_type19); __jule_collection; }));
		}
	_iter_next_1aa7d31b6:;
	}
	_iter_end_1aa7d31b6:;;
}



inline void _1a7b3db1d_checkRangeIter(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798c84b_Iter>* _81336_it) {
	jule::Ptr<_1a798da7d_RangeKind> _8147_rang = (*((*(_81336_it))))._field_Kind.cast_ptr<_1a798da7d_RangeKind>(&__jule_any_type35);;
	jule::Ptr<_1a7c0086c_eval> _8207_eval = _1a7b8bc04_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));;
	(*(_8207_eval))._field_target._field_mutable=true;
	jule::Ptr<_1a7bed89d_Data> _8237_d = _1a7c20194_evalExpr1(_8207_eval, (*(_8147_rang))._field_Expr);;
	if ((_8237_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7b2e0b4_RangeIter> _8287_kind = jule::new_ptr<_1a7b2e0b4_RangeIter>(_1a7b2e0b4_RangeIter{._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Expr=_8237_d, ._field_KeyA=jule::Ptr<_1a7ba4eb4_Var>(nullptr), ._field_KeyB=jule::Ptr<_1a7ba4eb4_Var>(nullptr)});;
	if ((*((*(_81336_it))))._field_Comptime) {
		_1a7b3d865_checkComptimeRangeIter(_self_, _81336_it, &(_8287_kind), &(_8237_d));
		return;;
	};
	if (_1a7c379b4_comptime((*(_8237_d))._field_Type.ptr())) {
		_1a7b7eec2_pushErr((*(_self_))._field_s, (*((*_8147_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_1a7be7bc7_rangeChecker _8427_rc = _1a7be7bc7_rangeChecker{._field_sc=_self_, ._field_rang=_8147_rang, ._field_Kind=_8287_kind, ._field_d=_8237_d};;
	jule::Bool _8483_ok = _1a7be9c1d_check(&_8427_rc);;
	if ((!(_8483_ok))) {
		return;;
	};
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8287_kind, &__jule_any_type36); __jule_collection; }));
	jule::Ptr<_1a7b34938_scopeChecker> _8557_ssc = _1a7b46c8b_newChildChecker(_self_);;
	jule::Ptr<_1a7b2c238_Scope> _8567_scope = _1a7b3a0e2_getChild(_self_);;
	if (((*(_8287_kind))._field_KeyA != nullptr)) {
		if (((!(_1a7b7e565_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1a7b39542_isDuplicatedIdent(_self_, 0LLU, &((*(*(_8287_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1a7b7eec2_pushErr((*(_self_))._field_s, (*(*(_8287_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_8287_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_8287_kind))._field_KeyA.alloc)._field_Scope=_8567_scope;
		(*((*(_8557_ssc))._field_table))._field_Vars=jule::append((*(*(_8557_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_8287_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*(_8287_kind))._field_KeyB != nullptr)) {
		if (((!(_1a7b7e565_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1a7b39542_isDuplicatedIdent(_self_, 0LLU, &((*(*(_8287_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1a7b7eec2_pushErr((*(_self_))._field_s, (*(*(_8287_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_8287_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_8287_kind))._field_KeyB.alloc)._field_Scope=_8567_scope;
		(*((*(_8557_ssc))._field_table))._field_Vars=jule::append((*(*(_8557_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_8287_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1a7b3c534_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_8287_kind), (*((*(_81336_it))))._field_Scope, &(_8567_scope), _8557_ssc);
	(*(_8287_kind))._field_Scope=_8567_scope;
}



inline void _1a7b3ddc6_checkIter(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798c84b_Iter> _88030_it) {
	if (_1a798cbe2_IsInf(_88030_it.ptr())) {
		if ((*_88030_it.alloc)._field_Comptime) {
			_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*_88030_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_1a7b3d18e_checkInfIter(_self_, &(_88030_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_88030_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac14e03b:;
			{
				if ((*(_88030_it))._field_Comptime) {
					_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*_88030_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_1a7b3d447_checkWhileIter(_self_, &(_88030_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ac150218:;
			{
				_1a7b3db1d_checkRangeIter(_self_, &(_88030_it));
			}
		}
		else {
			_case_begin_1ac150180:;
			{
				jule::println(_1aab19673_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_1ac150119:;
	};
}



inline jule::Bool _1a7b3e217_checkValidContLabel(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Uintptr _90436_it) {
	jule::Ptr<_1a7b34938_scopeChecker> _9057_scope = _self_;;
	_julec_label_1ac153507:;
	if (((*(_9057_scope))._field_it == _90436_it)) {
		return true;;
	};
	if (((*(_9057_scope))._field_parent != nullptr)) {
		_9057_scope=(*_9057_scope.alloc)._field_parent;
		goto _julec_label_1ac153507;
	};
	return false;;
}



inline jule::Bool _1a7b3e558_checkValidBreakLabel(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Uintptr _92037_ptr) {
	jule::Ptr<_1a7b34938_scopeChecker> _9217_scope = _self_;;
	_julec_label_1ac157d47:;
	if (((*(_9217_scope))._field_it == _92037_ptr)) {
		return true;;
	};
	if (((*(_9217_scope))._field_cse != 0LLU)) {
		jule::Uintptr _9294_mtch = static_cast<jule::Uintptr>((*(((_1a7b32529_Case*)((*_9217_scope.alloc)._field_cse))))._field_Owner);;
		if ((_9294_mtch == _92037_ptr)) {
			return true;;
		};
	};
	if (((*(_9217_scope))._field_parent != nullptr)) {
		_9217_scope=(*_9217_scope.alloc)._field_parent;
		goto _julec_label_1ac157d47;
	};
	return false;;
}



inline jule::Ptr<_1a7b2e3b1_ContSt> _1a7b3e899_checkContValidScope(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798e331_ContSt> _94336_c) {
	if (_1a7b377c6_isDeferred(_self_)) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_94336_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_94336_c))._field_Label != nullptr)) {
		return jule::new_ptr<_1a7b2e3b1_ContSt>(_1a7b2e3b1_ContSt{._field_It=0});;
	};
	jule::Ptr<_1a7b34938_scopeChecker> _9537_scope = _self_;;
	_julec_label_1ac157e35:;
	{
		
		if (((((*(_9537_scope))._field_it == 0LLU) && ((*_9537_scope.alloc)._field_parent != nullptr)) && ((*_9537_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1ac15d424:;
			{
				_9537_scope=(*_9537_scope.alloc)._field_parent;
				goto _julec_label_1ac157e35;
			}
		}
		else if (((*(_9537_scope))._field_it != 0LLU)) {
			_case_begin_1ac15d4ac:;
			{
				return jule::new_ptr<_1a7b2e3b1_ContSt>(_1a7b2e3b1_ContSt{._field_It=(*_9537_scope.alloc)._field_it});;
			}
		}
		_match_end_1ac15d369:;
	};
	_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*(_94336_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a7b3eb52_checkCont(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798e331_ContSt> _96726_c) {
	jule::Ptr<_1a7b2e3b1_ContSt> _9687_cont = _1a7b3e899_checkContValidScope(_self_, _96726_c);;
	if ((_9687_cont == nullptr)) {
		return;;
	};
	if (((*(_96726_c))._field_Label != nullptr)) {
		jule::Ptr<_1a7b3356e_scopeLabel> _9748_label = _1a7b481dd_findLabelParent(&((*(*(_96726_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_9748_label == nullptr)) {
			_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_96726_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_96726_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		(*(_9748_label))._field_used=true;
		if ((((*((*_9748_label.alloc)._field_node))._field_Index + 1LL) >= (*((*(*(_9748_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_96726_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_96726_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		jule::I32 _9874_i = ((*((*_9748_label.alloc)._field_node))._field_Index + 1LL);;
		if ((_9874_i >= (*((*(*(_9748_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_96726_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _9919_st = (*((*(*(_9748_label))._field_node.alloc)._field_Scope))._field_Stmts[_9874_i];;
			{
				auto &_match_expr{ _9919_st };
				
				if (_match_expr.type == &__jule_any_type32) {
					_case_begin_1ac2ca86b:;
					{
						(*(_9687_cont))._field_It=static_cast<jule::Uintptr>(_9919_st.unsafe_cast_ptr<_1a7b2d129_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1ac2c954b:;
					{
						(*(_9687_cont))._field_It=static_cast<jule::Uintptr>(_9919_st.unsafe_cast_ptr<_1a7b2e0b4_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type34) {
					_case_begin_1ac2c9738:;
					{
						(*_9687_cont.alloc)._field_It=static_cast<jule::Uintptr>(_9919_st.unsafe_cast_ptr<_1a7b2d5d0_WhileIter>());
					}
				}
				else {
					_case_begin_1ac2c96c2:;
					{
						_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_96726_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_96726_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					}
				}
				_match_end_1ac2c965b:;
			};
		};
	};
	if (((*(_9687_cont))._field_It != 0LLU)) {
		if ((!(_1a7b3e217_checkValidContLabel(_self_, (*_9687_cont.alloc)._field_It)))) {
			_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_96726_c))._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_96726_c.alloc)._field_Label))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9687_cont, &__jule_any_type37); __jule_collection; }));
}



inline void _1a7b3ee0a_checkLabel(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798638e_LabelSt> _101431_l) {
	if ((_1a7b389b4_findLabel(_self_.ptr(), &((*(_101431_l))._field_Ident)) != nullptr)) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_101431_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_101431_l.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a7b2ec41_Label> _10207_label = jule::new_ptr<_1a7b2ec41_Label>(_1a7b2ec41_Label{._field_Ident=(*(_101431_l))._field_Ident, ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10207_label, &__jule_any_type18); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b3356e_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7b3356e_scopeLabel>(_1a7b3356e_scopeLabel{._field_token=(*_101431_l.alloc)._field_Token, ._field_node=_10207_label, ._field_used=false}); __jule_collection; }));
}



inline void _1a7b401b3_pushGoto(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7986768_GotoSt> _103329_gt) {
	jule::Ptr<_1a7b303a1_GotoSt> _10347_st = jule::new_ptr<_1a7b303a1_GotoSt>(_1a7b303a1_GotoSt{._field_Ident=(*((*_103329_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_103329_gt))._field_Label, ._field_Label=jule::Ptr<_1a7b2ec41_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10347_st, &__jule_any_type38); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b303a1_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _10347_st; __jule_collection; }));
}



inline void _1a7b4046b_checkPostfix(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7987758_AssignSt> _104433_a) {
	if (((*(_104433_a))._field_Left.len() > 1LL)) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*_104433_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7c0086c_eval> _10507_eval = _1a7b8bc04_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));;
	(*(_10507_eval))._field_target._field_mutable=true;
	jule::Ptr<_1a797d0de_Expr> _10537_expr = (*((*(_104433_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1a7bed89d_Data> _10547_d = _1a7c204d5_evalExpr(_10507_eval, _10537_expr);;
	if ((_10547_d == nullptr)) {
		return;;
	};
	_1a7b48e03_checkAssign(&((*_self_.alloc)._field_s), &(_10547_d), nullptr, (*_104433_a.alloc)._field_Setter);
	if ((_1a7c35b8d_Ptr((*(_10547_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a7c4365c_Ptr> _10628_ptr = _1a7c35b8d_Ptr((*(_10547_d))._field_Type);;
		if (_1a7c441c9_IsUnsafe(_10628_ptr.ptr())) {
			_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_104433_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_104433_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_10547_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1a7c35671_Prim((*(_10547_d))._field_Type.ptr()) == nullptr) || (!(_1a7aee9e1_IsNum((*(_1a7c35671_Prim((*(_10547_d))._field_Type.ptr())))._field_Kind))))) {
			_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_104433_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_104433_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_10547_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a7b3077a_Postfix>(_1a7b3077a_Postfix{._field_Expr=(*(_10547_d))._field_Model, ._field_Op=(*((*_104433_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type39); __jule_collection; }));
}



inline jule::Bool _1a7b407ac_isNewAssignIdent(_1a7b34938_scopeChecker* _self_, jule::Str _108032_ident) {
	if ((_1a7965c97_IsIgnoreIdent(_108032_ident) || (_108032_ident).empty())) {
		return false;;
	};
	return (_1a7a7a285_defByIdent((*(_self_))._field_table.ptr(), &(_108032_ident), false) == nullptr);;
}



inline void _1a7b40a65_removeInteriorMutRisk(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7bed89d_Data>* _109343_d) {
	jule::Ptr<_1a799a97a_StructIns> _10943_s = _1a7c36be4_Struct((*((*(_109343_d))))._field_Type.ptr());;
	if ((_10943_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7b34938_scopeChecker> _10983_root = _1a7b3809b_getHardRoot(_self_);;
	if (((*((*(_10983_root))._field_owner))._field_Owner != _10943_s)) {
		return;;
	};
	(*((*(_109343_d))))._field_Mutable=true;
}



inline void _1a7b40d1d_checkSingleAssign(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7987758_AssignSt>* _110739_a) {
	jule::Ptr<_1a7bed89d_Data> _110811_l = nullptr;;
	if ((!(_1a7965c97_IsIgnoreIdent((*((*((*(_110739_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1a797d0de_Expr> _11118_expr = (*((*((*(_110739_a))))._field_Left[0LL]))._field_Expr;;
		jule::Ptr<_1a7c0086c_eval> _11128_eval = _1a7b8bc04_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));;
		(*(_11128_eval))._field_target._field_mutable=true;
		_110811_l=_1a7c204d5_evalExpr(_11128_eval, _11118_expr);
		if ((_110811_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a7c0086c_eval> _11207_eval = static_cast<jule::Ptr<_1a7c0086c_eval>>(nullptr);;
	if ((_110811_l != nullptr)) {
		_11207_eval=_1a7b8b8b3_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1), (*_110811_l.alloc)._field_Type);
	} else {
		_11207_eval=_1a7b8bc04_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));
	};
	(*(_11207_eval))._field_target._field_mutable=true;
	(*_11207_eval.alloc)._field_unsafety=_1a7b36d25_isUnsafe(_self_);
	jule::Ptr<_1a7bed89d_Data> _11287_r = _1a7c204d5_evalExpr(_11207_eval, (*((*(_110739_a))))._field_Right);;
	if ((_11287_r == nullptr)) {
		return;;
	};
	_1a7b40a65_removeInteriorMutRisk(_self_, &(_11287_r));
	if ((_110811_l == nullptr)) {
		if (_1a7c3396b_Void((*(_11287_r))._field_Type.ptr())) {
			_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*((*((*(_110739_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_110739_a))))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_110739_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11287_r, &__jule_any_type21); __jule_collection; }));
		return;;
	};
	if ((!(_1a7b48e03_checkAssign(&((*_self_.alloc)._field_s), &(_110811_l), _11287_r, (*((*(_110739_a))))._field_Setter)))) {
		return;;
	};
	if ((_1a7c3772d_Tup((*(_11287_r))._field_Type.ptr()) != nullptr)) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_110739_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7a633b1_OperandExpr> _11557_lm = jule::new_ptr<_1a7a633b1_OperandExpr>(_1a7a633b1_OperandExpr{._field_Type=(*(_110811_l))._field_Type, ._field_Model=(*_110811_l.alloc)._field_Model});;
	jule::Ptr<_1a7a633b1_OperandExpr> _11597_rm = jule::new_ptr<_1a7a633b1_OperandExpr>(_1a7a633b1_OperandExpr{._field_Type=(*(_11287_r))._field_Type, ._field_Model=(*_11287_r.alloc)._field_Model});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a7b30c31_Assign>(_1a7b30c31_Assign{._field_Left=_11557_lm, ._field_Right=_11597_rm, ._field_Op=(*((*(_110739_a))))._field_Setter}), &__jule_any_type40); __jule_collection; }));
	if (((*((*((*(_110739_a))))._field_Setter))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1a7bdb77b_assignTypeChecker _11668_checker = _1a7bdb77b_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*_110811_l.alloc)._field_Type, ._field_d=_11287_r, ._field_errorToken=(*((*(_110739_a))))._field_Setter, ._field_refers=_1a7b38332_getOwnerRefers(_self_)};;
		if (_1a7bdc77c_check(&_11668_checker)) {
			(*(_11597_rm))._field_Model=(*(_11287_r))._field_Model;
			(*(_11557_lm))._field_Model=(*_110811_l.alloc)._field_Model;
		};
		return;;
	};
	jule::U32 _11793_id = (*((*((*(_110739_a))))._field_Setter))._field_Id;;
	(*(*((*(_110739_a))))._field_Setter.alloc)._field_Id=_1a7b470cc_removeEqFromOp((*(*((*(_110739_a))))._field_Setter.alloc)._field_Id);
	_1a7c22905_binaryEval _11817_solver = static__1a7c23362_new(_11207_eval, (*((*(_110739_a))))._field_Setter);;
	({
		jule::Ptr<_1a7bed89d_Data> ___jule_assign_arg = _110811_l;
		jule::Ptr<_1a7bed89d_Data> _1___jule_assign_arg = _11287_r;
		_11817_solver._field_l = ___jule_assign_arg;
		_11817_solver._field_r = _1___jule_assign_arg;
	});
	_1a7c273cc_evalOp(&_11817_solver);
	(*(*((*(_110739_a))))._field_Setter.alloc)._field_Id=_11793_id;
}



inline void _1a7b4145b_processEndPartOfMultiAssign(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _118749_st, jule::Ptr<_1a7987758_AssignSt>* _118772_a, jule::Ptr<_1a79871c5_AssignLeft>* _11888_lexpr, jule::Ptr<_1a7bed89d_Data>* _118838_l, _1a7b2b9a7_exprPart* _118853_r, jule::Bool _118866_strict) {
	if (((!((*((*(_11888_lexpr))))._field_Reference)) && _1a7965c97_IsIgnoreIdent((*((*(_11888_lexpr))))._field_Ident))) {
		if (_1a7c3396b_Void((*((*(_118853_r))._field_data))._field_Type.ptr())) {
			_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_118772_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1a7bed89d_Data>> &__jule_push_dest = (*((*(_118749_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_118772_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_11888_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1ac3208e4:;
				{
					if ((!(_1a7b407ac_isNewAssignIdent(_self_.ptr(), (*((*(_11888_lexpr))))._field_Ident)))) {
						goto _julec_label_1ac329b95;
					};
				}
			}
			else {
				_case_begin_1ac32010d:;
				{
					if (((*((*(_11888_lexpr))))._field_Mutable || (*((*(_11888_lexpr))))._field_Reference)) {
						_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_11888_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1ac329b95;
				}
			}
			_match_end_1ac320097:;
		};
		if (_1a7b39542_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_11888_lexpr))))._field_Ident))) {
			_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_11888_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11888_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_1a7b372a9_stop(_self_);
			return;;
		};
		if (_1a7965c97_IsIgnoreIdent((*((*(_11888_lexpr))))._field_Ident)) {
			_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_11888_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a7ba4eb4_Var> _12208_v = jule::new_ptr<_1a7ba4eb4_Var>(_1a7ba4eb4_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_11888_lexpr))))._field_Token, ._field_Ident=(*((*(_11888_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_11888_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_11888_lexpr))))._field_Reference, ._field_TypeSym=jule::Ptr<_1a7c3a962_TypeSym>(nullptr), ._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=(*(_118853_r))._field_expr, ._field_Data=(*(_118853_r))._field_data}), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr)});;
		_1a7b9b74c_checkVarValue((*_self_.alloc)._field_s, &(_12208_v));
		{ jule::Slice<jule::Ptr<_1a7bed89d_Data>> &__jule_push_dest = (*((*(_118749_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=(*((*_12208_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_12208_v.alloc)._field_Mutable, ._field_Reference=(*_12208_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_12208_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_12208_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> &__jule_push_dest = (*((*(_118749_st))))._field_Decls; __jule_push_dest.push(_12208_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _12208_v; __jule_collection; }));
		return;;
	};
	_julec_label_1ac329b95:;
	if (((*((*(_11888_lexpr))))._field_Mutable || (*((*(_11888_lexpr))))._field_Reference)) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_11888_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11888_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_1a7b48e03_checkAssign(&((*(_self_))._field_s), _118838_l, (*(_118853_r))._field_data, (*((*(_11888_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _12557_reference = false;;
	if (_1a7b91aa5_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_118838_l))))._field_Mutable, _12557_reference, &((*((*(_118838_l))))._field_Type), &((*(_118853_r))._field_data), &((*((*(_118853_r))._field_expr))._field_Token))) {
		_12557_reference=_118866_strict;
		_1a7b8c320_checkAssignType((*(_self_))._field_s, _12557_reference, &((*((*(_118838_l))))._field_Type), &((*(_118853_r))._field_data), (*(*(_118853_r))._field_expr.alloc)._field_Token, _1a7b38332_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_1a7bed89d_Data>> &__jule_push_dest = (*((*(_118749_st))))._field_Left; __jule_push_dest.push((*(_118838_l))); };
}



inline __jule_tuple_s_1a7b2b9a7_exprPart__jule_tuple_x_1a7bed89d_Data__jule_tuple_bool _1a7b41857_getRightExprsOfMultiAssign(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7987758_AssignSt> _126347_a, jule::Ptr<_1a7c0086c_eval> _12647_eval) {
	__jule_tuple_s_1a7b2b9a7_exprPart__jule_tuple_x_1a7bed89d_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	jule::Fn<void,jule::I32> _12653_updateMut = jule::__new_closure<void,jule::I32>((void*)__jule_anon_1ac332e67, jule::Ptr<__jule_anon_1ac332e67_ctx>::make(__jule_anon_1ac332e67_ctx{._126347_a=_126347_a,._12647_eval=_12647_eval,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac332e67_ctx_handler);;
	{
		auto &_match_expr{ (*((*(_126347_a))._field_Right))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ac33939c:;
			{
				jule::Ptr<_1a797dbd3_TupleExpr> _12918_tup = (*((*(_126347_a))._field_Right))._field_Kind.unsafe_cast_ptr<_1a797dbd3_TupleExpr>();;
				__jule_func_result.__jule_result_arg0=({ auto __jule_collection = jule::Slice<_1a7b2b9a7_exprPart>::alloc(0LL, (*(_12918_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a7b2b9a7_exprPart{._field_data=jule::Ptr<_1a7bed89d_Data>(nullptr), ._field_expr=jule::Ptr<_1a797d0de_Expr>(nullptr)}; __jule_collection; });
				jule::I32 _12934_i = 0LL;;
				jule::Ptr<jule::I32> _12948__i = ((jule::Ptr<jule::I32>)((&(_12934_i))));;
				jule::Ptr<jule::Slice<_1a7b2b9a7_exprPart>> _12958__parts = ((jule::Ptr<jule::Slice<_1a7b2b9a7_exprPart>>)((&(__jule_func_result.__jule_result_arg0))));;
				__jule_func_result.__jule_result_arg1=_1a7c1d170_evalTupleFunc(_12647_eval, _12918_tup, jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a797d0de_Expr>*>((void*)__jule_anon_1ac33e391, jule::Ptr<__jule_anon_1ac33e391_ctx>::make(__jule_anon_1ac33e391_ctx{._12948__i=_12948__i,._126347_a=_126347_a,._12653_updateMut=_12653_updateMut,._12647_eval=_12647_eval,._12958__parts=_12958__parts}).as<jule::Uintptr>(), __jule_anon_1ac33e391_ctx_handler));
			}
		}
		else {
			_case_begin_1ac336ba2:;
			{
				_12653_updateMut(0LL);
				__jule_func_result.__jule_result_arg1=_1a7c204d5_evalExpr(_12647_eval, (*(_126347_a))._field_Right);
				if ((__jule_func_result.__jule_result_arg1 == nullptr)) {
					return __jule_func_result;;
				};
				if ((_1a7c3772d_Tup((*(__jule_func_result.__jule_result_arg1))._field_Type.ptr()) != nullptr)) {
					jule::Ptr<_1a7c4145c_Tuple> _13189_t = _1a7c3772d_Tup((*(__jule_func_result.__jule_result_arg1))._field_Type);;
					__jule_func_result.__jule_result_arg0=({ auto __jule_collection = jule::Slice<_1a7b2b9a7_exprPart>::alloc(0LL, (*(_13189_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a7b2b9a7_exprPart{._field_data=jule::Ptr<_1a7bed89d_Data>(nullptr), ._field_expr=jule::Ptr<_1a797d0de_Expr>(nullptr)}; __jule_collection; });
					{
						auto expr = &((*_13189_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac339b72:;
						if (it != expr_end) {
							jule::Ptr<_1a7c3255d_Type> _132017_kind = *it;
							{
								{ jule::Slice<_1a7b2b9a7_exprPart> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push(_1a7b2b9a7_exprPart{._field_data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_132017_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)}), ._field_expr=(*_126347_a.alloc)._field_Right}); };
							}
							_iter_next_1ac339b72:;
							++it;
							goto _iter_begin_1ac339b72;
						}
						_iter_end_1ac339b72:;
					};
				} else {
					__jule_func_result.__jule_result_arg0=({ auto __jule_collection = jule::Slice<_1a7b2b9a7_exprPart>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7b2b9a7_exprPart{._field_data=__jule_func_result.__jule_result_arg1, ._field_expr=(*_126347_a.alloc)._field_Right}; __jule_collection; });
				};
			}
		}
		_match_end_1ac336b3b:;
	};
	__jule_func_result.__jule_result_arg2=true;
	return __jule_func_result;;
}



inline void _1a7b41b10_checkMultiAssign(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7987758_AssignSt>* _133738_a) {
	if ((((*((*((*(_133738_a))))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU)) && ((*(*((*(_133738_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_133738_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7c0086c_eval> _13437_eval = _1a7b8bc04_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));;
	jule::Slice<_1a7b2b9a7_exprPart> _13447_right;
	jule::Ptr<_1a7bed89d_Data> _134414_rightData;
	jule::Bool _134425_ok;
	({
		__jule_tuple_s_1a7b2b9a7_exprPart__jule_tuple_x_1a7bed89d_Data__jule_tuple_bool __jule_assign_result = _1a7b41857_getRightExprsOfMultiAssign(_self_, (*(_133738_a)), _13437_eval);
		_13447_right = __jule_assign_result.__jule_result_arg0;
		_134414_rightData = __jule_assign_result.__jule_result_arg1;
		_134425_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_134425_ok))) {
		return;;
	};
	jule::Bool _13497_strict = false;;
	if ((_13447_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_13447_right[0LL]._field_data))._field_Model };
			
			if (_match_expr.type == &__jule_any_type43) {
				_case_begin_1ac3456e9:;
				{
					jule::Ptr<_1a7a6621b_IndexingExpr> _13539_iem = (*(_13447_right[0LL]._field_data))._field_Model.unsafe_cast_ptr<_1a7a6621b_IndexingExpr>();;
					if ((_1a7c37497_Map((*((*(_13539_iem))._field_Expr))._field_Type.ptr()) != nullptr)) {
						_13497_strict=true;
						_13447_right=({ auto __jule_collection = jule::Slice<_1a7b2b9a7_exprPart>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a7b2b9a7_exprPart{._field_data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=(*(_1a7c37497_Map((*((*(_13539_iem))._field_Expr))._field_Type)))._field_Val, ._field_Mutable=(*(_13447_right[0LL]._field_data))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)}), ._field_expr=_13447_right[0LL]._field_expr}; (*it++) = _1a7b2b9a7_exprPart{._field_data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)}), ._field_expr=_13447_right[0LL]._field_expr}; __jule_collection; });
					};
				}
			}
			_match_end_1ac345672:;
		};
	};
	{
		
		if (((*((*(_133738_a))))._field_Left.len() > _13447_right.len())) {
			_case_begin_1ac344ee0:;
			{
				_1a7b7eec2_pushErr((*(_self_))._field_s, (*((*(_133738_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_133738_a))))._field_Left.len() < _13447_right.len())) {
			_case_begin_1ac345056:;
			{
				_1a7b7eec2_pushErr((*(_self_))._field_s, (*((*(_133738_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ac345793:;
	};
	(*(_13437_eval))._field_target._field_mutable=true;
	jule::Ptr<_1a7b312b4_MultiAssign> _13767_st = jule::new_ptr<_1a7b312b4_MultiAssign>(_1a7b312b4_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1a7bed89d_Data>>(nullptr), ._field_Right=(*(_134414_rightData))._field_Model, ._field_Op=(*((*(_133738_a))))._field_Setter});;
	{
		auto expr = &((*((*(_133738_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac34ec31:;
		if (it != expr_end) {
			jule::I32 _13807_i = it - expr->begin();
			{
				jule::Ptr<_1a79871c5_AssignLeft> _13818_lexpr = (*((*(_133738_a))))._field_Left[_13807_i];;
				jule::Ptr<_1a7bed89d_Data> _138212_l = nullptr;;
				if ((!(_1a7965c97_IsIgnoreIdent((*(_13818_lexpr))._field_Ident)))) {
					if ((!((*((*(_133738_a))))._field_Declarative))) {
						goto _julec_label_1ac351507;
					};
					if (((*_13818_lexpr.alloc)._field_Mutable && (*_13818_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1ac353bbe;
					};
					{
						auto &_match_expr{ (*((*(_13818_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type41) {
							_case_begin_1ac352717:;
							{
								if (_1a7b407ac_isNewAssignIdent(_self_, (*_13818_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1ac353bbe;
								};
							}
						}
						_match_end_1ac352690:;
					};
					_julec_label_1ac351507:;
					_138212_l=_1a7c204d5_evalExpr(_13437_eval, (*_13818_lexpr.alloc)._field_Expr);
					if ((_138212_l == nullptr)) {
						goto _iter_next_1ac34ec31;
					};
					_julec_label_1ac353bbe:;
				};
				_1a7b2b9a7_exprPart _14038_r = _13447_right[_13807_i];;
				_1a7b40a65_removeInteriorMutRisk(_self_, &(_14038_r._field_data));
				_1a7b4145b_processEndPartOfMultiAssign(_self_, &(_13767_st), _133738_a, &(_13818_lexpr), &(_138212_l), &(_14038_r), _13497_strict);
			}
			_iter_next_1ac34ec31:;
			++it;
			_13807_i++;
			goto _iter_begin_1ac34ec31;
		}
		_iter_end_1ac34ec31:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_13767_st, &__jule_any_type44); __jule_collection; }));
}



inline void _1a7b41db8_checkAssignSt(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7987758_AssignSt> _141034_a) {
	{
		
		if (_1a796820b_IsPostfixOp((*((*(_141034_a))._field_Setter))._field_Id)) {
			_case_begin_1ac355a39:;
			{
				_1a7b4046b_checkPostfix(_self_, _141034_a);
			}
		}
		else if (((*(_141034_a))._field_Left.len() == 1LL)) {
			_case_begin_1ac3556d7:;
			{
				_1a7b40d1d_checkSingleAssign(_self_, &(_141034_a));
			}
		}
		else {
			_case_begin_1ac355671:;
			{
				_1a7b41b10_checkMultiAssign(_self_, &(_141034_a));
			}
		}
		_match_end_1ac3555b6:;
	};
}



inline jule::Ptr<_1a7b2c238_Scope> _1a7b422b4_checkCaseScope(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7b32529_Case>* _142132_c, jule::Ptr<_1a7988da8_ScopeTree>* _142147_tree) {
	jule::Ptr<_1a7b34938_scopeChecker> _14227_ssc = _1a7b46c8b_newChildChecker(_self_);;
	(*(_14227_ssc))._field_cse=static_cast<jule::Uintptr>((*(_142132_c)));
	return _1a7b3a90b_checkChildSc(_self_, _142147_tree, &(_14227_ssc));;
}



inline jule::Ptr<_1a7b32529_Case> _1a7b42825_checkCase(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7b31c32_Match> _142730_m, jule::I32 _142741_i, jule::Ptr<_1a7990e37_Case> _142753_c, jule::Ptr<_1a7bed89d_Data> _142772_expr) {
	jule::Ptr<_1a7b32529_Case> _14287_case = (*(_142730_m))._field_Cases[_142741_i];;
	(*(_14287_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bed89d_Data>>::alloc(0LL, (*(_142753_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7bed89d_Data>(nullptr); __jule_collection; });
	jule::Bool _14307_constMatched = false;;
	jule::Ptr<_1a7c0086c_eval> _14317_eval = _1a7b8bc04_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));;
	{
		auto expr = &((*_142753_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac35b19e:;
		if (it != expr_end) {
			jule::Ptr<_1a797d0de_Expr> _143215_e = *it;
			{
				jule::Ptr<_1a7bed89d_Data> _14338_d = _1a7c1e6c1_evalExprKind(_14317_eval, (*(_143215_e))._field_Kind);;
				if ((_14338_d == nullptr)) {
					goto _iter_next_1ac35b19e;
				};
				if ((*_142730_m.alloc)._field_TypeMatch) {
					(*_14287_case.alloc)._field_Exprs=jule::append((*_14287_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bed89d_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14338_d; __jule_collection; }));
					if ((_1a7b47c59_countMatchType(&(_142730_m), &((*(_14338_d))._field_Type)) > 1LL)) {
						_1a7b7eec2_pushErr((*(_self_))._field_s, (*_143215_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*_14338_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					};
					if ((*_142730_m.alloc)._field_Comptime) {
						_14307_constMatched=(_14307_constMatched || _1a7c32c9a_Equal((*(_142772_expr))._field_Type, (*(_14338_d))._field_Type));
					} else {
						if ((_1a7c361aa_TypeEnum((*(_142772_expr))._field_Type.ptr()) != nullptr)) {
							_1a7b8cc7c_checkTypeCompatibility((*(_self_))._field_s, &((*_142772_expr.alloc)._field_Type), &((*(_14338_d))._field_Type), &((*_143215_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1a7a7b297_Trait> _14527_trt = _1a7c37211_Trait((*(_142772_expr))._field_Type.ptr());;
							if ((_14527_trt != nullptr)) {
								_1a7b8cc7c_checkTypeCompatibility((*(_self_))._field_s, &((*_142772_expr.alloc)._field_Type), &((*(_14338_d))._field_Type), &((*_143215_e.alloc)._field_Token));
							};
						};
					};
					_1a7c2ada3_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_14338_d))._field_Type), &((*((*_142730_m.alloc)._field_Expr))._field_Type), &((*_143215_e.alloc)._field_Token), _1a7b38332_getOwnerRefers(_self_));
					goto _iter_next_1ac35b19e;
				};
				if ((*(_14338_d))._field_Decl) {
					_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_143215_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_1ac35b19e;
				};
				if ((*_142730_m.alloc)._field_Comptime) {
					if (((!(_1a7bee2d8_IsConst(_14338_d.ptr()))) && (_1a7c392bd_comptimeTypeInfo((*_14338_d.alloc)._field_Type.ptr()) == nullptr))) {
						_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_143215_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_1ac35b19e;
					};
					if ((!(_14307_constMatched))) {
						if (_1a7bee2d8_IsConst(_14338_d.ptr())) {
							_14307_constMatched=(_1a7bee2d8_IsConst(_142772_expr.ptr()) && _1a7a5cb08_Eq((*_14338_d.alloc)._field_Constant.ptr(), (*(*(_142772_expr))._field_Constant.alloc)));
						} else {
							jule::Ptr<_1a7b10d65_comptimeTypeInfo> _14787_exprCti = _1a7c392bd_comptimeTypeInfo((*(_142772_expr))._field_Type.ptr());;
							_14307_constMatched=((_14787_exprCti != nullptr) && _1a7c32c9a_Equal((*(_1a7c392bd_comptimeTypeInfo((*(_14338_d))._field_Type)))._field_base, (*(_14787_exprCti))._field_base));
						};
					};
				};
				(*_14287_case.alloc)._field_Exprs=jule::append((*_14287_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bed89d_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14338_d; __jule_collection; }));
				if ((((!((*_142730_m.alloc)._field_Comptime)) || (_1a7c392bd_comptimeTypeInfo((*(_142772_expr))._field_Type.ptr()) == nullptr)) || (_1a7c392bd_comptimeTypeInfo((*(_14338_d))._field_Type.ptr()) == nullptr))) {
					_1a7bdb77b_assignTypeChecker _14889_checker = _1a7bdb77b_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_142772_expr))._field_Type, ._field_d=_14338_d, ._field_errorToken=(*_143215_e.alloc)._field_Token, ._field_refers=_1a7b38332_getOwnerRefers(_self_)};;
					_1a7bdc77c_check(&_14889_checker);
				};
			}
			_iter_next_1ac35b19e:;
			++it;
			goto _iter_begin_1ac35b19e;
		}
		_iter_end_1ac35b19e:;
	};
	if (((!((*_142730_m.alloc)._field_Comptime)) || _14307_constMatched)) {
		(*_14287_case.alloc)._field_Scope=_1a7b422b4_checkCaseScope(_self_, &(_14287_case), &((*_142753_c.alloc)._field_Scope));
	};
	return _14287_case;;
}



inline void _1a7b42c43_checkCases(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7991751_MatchCase>* _150432_m, jule::Ptr<_1a7b31c32_Match> _150456_rm, jule::Ptr<_1a7bed89d_Data> _150472_expr) {
	(*(_150456_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b32529_Case>>::alloc(0LL, (*((*(_150432_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b32529_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_150432_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac36ee0a:;
		if (it != expr_end) {
			jule::I32 _15067_i = it - expr->begin();
			{
				jule::Ptr<_1a7b32529_Case> _15078_case = jule::new_ptr<_1a7b32529_Case>(_1a7b32529_Case{._field_Owner=_150456_rm, ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1a7bed89d_Data>>(nullptr), ._field_Next=jule::Ptr<_1a7b32529_Case>(nullptr)});;
				if ((_15067_i > 0LL)) {
					(*((*_150456_rm.alloc)._field_Cases[(_15067_i - 1LL)]))._field_Next=_15078_case;
				};
				(*_150456_rm.alloc)._field_Cases=jule::append((*_150456_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b32529_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15078_case; __jule_collection; }));
			}
			_iter_next_1ac36ee0a:;
			++it;
			_15067_i++;
			goto _iter_begin_1ac36ee0a;
		}
		_iter_end_1ac36ee0a:;
	};
	if ((((*_150456_rm.alloc)._field_Default != nullptr) && ((*((*(_150432_m))))._field_Cases.len() > 0LL))) {
		(*((*_150456_rm.alloc)._field_Cases[((*_150456_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_150456_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_150432_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3733c5:;
		if (it != expr_end) {
			jule::I32 _15208_i = it - expr->begin();
			jule::Ptr<_1a7990e37_Case> _152015_c = *it;
			{
				_1a7b42825_checkCase(_self_, _150456_rm, _15208_i, _152015_c, _150472_expr);
			}
			_iter_next_1ac3733c5:;
			++it;
			_15208_i++;
			goto _iter_begin_1ac3733c5;
		}
		_iter_end_1ac3733c5:;
	};
}



inline jule::Ptr<_1a7b32529_Case> _1a7b4313e_checkDefault(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7b31c32_Match> _152533_m, jule::Ptr<_1a798ebb1_Else> _152548_d) {
	jule::Ptr<_1a7b32529_Case> _15267_def = jule::new_ptr<_1a7b32529_Case>(_1a7b32529_Case{._field_Owner=_152533_m, ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1a7bed89d_Data>>(nullptr), ._field_Next=jule::Ptr<_1a7b32529_Case>(nullptr)});;
	(*(_15267_def))._field_Scope=_1a7b422b4_checkCaseScope(_self_, &(_15267_def), &((*(_152548_d))._field_Scope));
	return _15267_def;;
}



inline void _1a7b434a2_checkComptimePanic(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a79633b0_Token> _153339_callToken, jule::Ptr<_1a7b2c238_Scope>* _153366_s) {
	if (((*((*(_153366_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _15373_stmt = (*((*(_153366_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _15373_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ac3769c2:;
			{
				jule::Ptr<_1a7bed89d_Data> _15404_d = _15373_stmt.unsafe_cast_ptr<_1a7bed89d_Data>();;
				{
					auto &_match_expr{ (*(_15404_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type26) {
						_case_begin_1ac377918:;
						{
							jule::Ptr<_1a7a69d46_BuiltinPanicCallExpr> _15439_m = (*(_15404_d))._field_Model.unsafe_cast_ptr<_1a7a69d46_BuiltinPanicCallExpr>();;
							{
								auto &_match_expr{ (*(_15439_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_1ac378a4b:;
									{
										jule::Ptr<_1a79ea9a8_Const> _15466_c = (*(_15439_m))._field_Expr.unsafe_cast_ptr<_1a79ea9a8_Const>();;
										if ((!(_1a7a5b7c7_IsStr(_15466_c.ptr())))) {
											goto _match_end_1ac3789c4;
										};
										if ((_153339_callToken == nullptr)) {
											jule::Ptr<_1a7b34938_scopeChecker> _155111_root = _1a7b3809b_getHardRoot(_self_);;
											if (((*(_155111_root))._field_calledFrom == nullptr)) {
												_153339_callToken=(*(_15439_m))._field_Token;
											} else {
												_153339_callToken=(*(_155111_root))._field_calledFrom;
											};
										};
										_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), _153339_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7a591cb_ReadStr(_15466_c.ptr()), &__jule_any_type5); __jule_collection; }));
										_1a7b372a9_stop(_self_);
									}
								}
								_match_end_1ac3789c4:;
							};
						}
					}
					_match_end_1ac377891:;
				};
			}
		}
		_match_end_1ac3760ed:;
	};
}



inline void _1a7b43815_processConstMatch(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7b31c32_Match>* _156539_tm, jule::Ptr<_1a7991751_MatchCase>* _156556_m) {
	{
		auto expr = &((*((*(_156539_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac378ed0:;
		if (it != expr_end) {
			jule::I32 _15668_i = it - expr->begin();
			jule::Ptr<_1a7b32529_Case> _156615_c = *it;
			{
				if (((*(_156615_c))._field_Scope != nullptr)) {
					jule::Ptr<_1a79633b0_Token> _156813_token = nullptr;;
					if (((!((*((*(_156539_tm))))._field_TypeMatch)) && ((*(*(_156615_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_156813_token=(*((*((*((*(_156556_m))))._field_Cases[_15668_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1a7b434a2_checkComptimePanic(_self_, _156813_token, &((*_156615_c.alloc)._field_Scope));
					(*((*(_156539_tm))))._field_Default=_156615_c;
					(*((*(_156539_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1ac378ed0:;
			++it;
			_15668_i++;
			goto _iter_begin_1ac378ed0;
		}
		_iter_end_1ac378ed0:;
	};
	if (((*((*(_156556_m))))._field_Default != nullptr)) {
		(*((*(_156539_tm))))._field_Cases=nullptr;
		(*((*(_156539_tm))))._field_Default=_1a7b4313e_checkDefault(_self_, (*(_156539_tm)), (*((*(_156556_m))))._field_Default);
		if (((*((*(_156539_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1a79633b0_Token> _158213_token = nullptr;;
			if ((!((*((*(_156539_tm))))._field_TypeMatch))) {
				_158213_token=(*((*(*((*(_156556_m))))._field_Default.alloc)._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1a7b434a2_checkComptimePanic(_self_, _158213_token, &((*(*((*(_156539_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_156539_tm))))._field_Cases=nullptr;
	};
}



inline void _1a7b43abd_checkTypeMatch(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7991751_MatchCase>* _159436_m) {
	jule::Ptr<_1a7bed89d_Data> _15957_d = _1a7c1ea12_eval1(_1a7b8bc04_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)), (*((*(_159436_m))))._field_Expr);;
	if ((_15957_d == nullptr)) {
		return;;
	};
	if ((*((*(_159436_m))))._field_Comptime) {
		jule::Ptr<_1a7b10d65_comptimeTypeInfo> _16018_cti = _1a7c392bd_comptimeTypeInfo((*(_15957_d))._field_Type.ptr());;
		if ((_16018_cti == nullptr)) {
			if ((!((*_15957_d.alloc)._field_Decl))) {
				_1a7b7eec2_pushErr((*(_self_))._field_s, (*((*((*(_159436_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*_15957_d.alloc)._field_Type=(*(_16018_cti))._field_base;
		};
	} else if (((*(_15957_d))._field_Decl || (!(((((_1a7c35671_Prim((*(_15957_d))._field_Type.ptr()) != nullptr) && _1a7c3eaba_IsAny(_1a7c35671_Prim((*(_15957_d))._field_Type).ptr())) || (_1a7c37211_Trait((*(_15957_d))._field_Type.ptr()) != nullptr)) || (_1a7c361aa_TypeEnum((*(_15957_d))._field_Type.ptr()) != nullptr)))))) {
		_1a7b7eec2_pushErr((*(_self_))._field_s, (*((*((*(_159436_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7b31c32_Match> _16157_tm = jule::new_ptr<_1a7b31c32_Match>(_1a7b31c32_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_15957_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_159436_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1a7b32529_Case>>(nullptr), ._field_Default=jule::Ptr<_1a7b32529_Case>(nullptr)});;
	if (((!((*(_16157_tm))._field_Comptime)) && ((*((*(_159436_m))))._field_Default != nullptr))) {
		(*_16157_tm.alloc)._field_Default=_1a7b4313e_checkDefault(_self_, _16157_tm, (*((*(_159436_m))))._field_Default);
	};
	_1a7b42c43_checkCases(_self_, _159436_m, _16157_tm, _15957_d);
	if ((*(_16157_tm))._field_Comptime) {
		_1a7b43815_processConstMatch(_self_, &(_16157_tm), _159436_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16157_tm, &__jule_any_type45); __jule_collection; }));
}



inline void _1a7b43d76_checkCommonMatch(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7991751_MatchCase>* _163738_m) {
	jule::Ptr<_1a7bed89d_Data> _163811_d = nullptr;;
	if (((*((*(_163738_m))))._field_Expr == nullptr)) {
		_163811_d=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a7a57a26_NewBool(true)});
		(*(_163811_d))._field_Model=jule::Any((*_163811_d.alloc)._field_Constant, &__jule_any_type15);
	} else {
		_163811_d=_1a7c20194_evalExpr1(_1a7b8bc04_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)), (*((*(_163738_m))))._field_Expr);
		if ((_163811_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_163738_m))))._field_Comptime) {
		if ((!(_1a7b4761b_canComptimeMatch(&(_163811_d))))) {
			_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_163738_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1a7c379b4_comptime((*(_163811_d))._field_Type.ptr())) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_163738_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7b31c32_Match> _16647_mc = jule::new_ptr<_1a7b31c32_Match>(_1a7b31c32_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_163811_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_163738_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1a7b32529_Case>>(nullptr), ._field_Default=jule::Ptr<_1a7b32529_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16647_mc, &__jule_any_type45); __jule_collection; }));
	if (((!((*(_16647_mc))._field_Comptime)) && ((*((*(_163738_m))))._field_Default != nullptr))) {
		(*_16647_mc.alloc)._field_Default=_1a7b4313e_checkDefault(_self_, _16647_mc, (*((*(_163738_m))))._field_Default);
	};
	_1a7b42c43_checkCases(_self_, _163738_m, _16647_mc, _163811_d);
	if ((*(_16647_mc))._field_Comptime) {
		_1a7b43815_processConstMatch(_self_, &(_16647_mc), _163738_m);
	};
}



inline void _1a7b4412e_checkMatch(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7991751_MatchCase> _168831_m) {
	if ((*(_168831_m))._field_TypeMatch) {
		_1a7b43abd_checkTypeMatch(_self_, &(_168831_m));
		return;;
	};
	_1a7b43d76_checkCommonMatch(_self_, &(_168831_m));
}



inline void _1a7b443d7_checkFall(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7986a65_FallSt> _169626_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1a7b377c6_isDeferred(_self_))) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*(_169626_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_1a7b32529_Case* _17047_case = ((_1a7b32529_Case*)((*(_self_))._field_cse));;
	if ((*((*(_17047_case))._field_Owner))._field_Comptime) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_169626_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17047_case))._field_Next == nullptr)) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_169626_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a7b32c22_FallSt>(_1a7b32c22_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17047_case))._field_Next)}), &__jule_any_type46); __jule_collection; }));
}



inline jule::Ptr<_1a7b2e78a_BreakSt> _1a7b44728_checkBreakWithLabel(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798de57_BreakSt> _171936_b) {
	jule::Ptr<_1a7b2e78a_BreakSt> _17207_brk = _1a7b44a69_checkPlainBreak(_self_, _171936_b);;
	if ((_17207_brk == nullptr)) {
		return nullptr;;
	};
	(*(_17207_brk))._field_It=0LLU;
	(*_17207_brk.alloc)._field_Mtch=0LLU;
	jule::Ptr<_1a7b3356e_scopeLabel> _17307_label = _1a7b481dd_findLabelParent(&((*((*(_171936_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_17307_label == nullptr)) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*(_17307_label))._field_used=true;
	if ((((*((*_17307_label.alloc)._field_node))._field_Index + 1LL) >= (*((*(*(_17307_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _17433_i = ((*((*_17307_label.alloc)._field_node))._field_Index + 1LL);;
	if ((_17433_i >= (*((*(*(_17307_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	} else {
		jule::Any _17478_st = (*((*(*(_17307_label))._field_node.alloc)._field_Scope))._field_Stmts[_17433_i];;
		{
			auto &_match_expr{ _17478_st };
			
			if (_match_expr.type == &__jule_any_type32) {
				_case_begin_1ac3b0830:;
				{
					(*_17207_brk.alloc)._field_It=static_cast<jule::Uintptr>(_17478_st.unsafe_cast_ptr<_1a7b2d129_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1ac3ae510:;
				{
					(*_17207_brk.alloc)._field_It=static_cast<jule::Uintptr>(_17478_st.unsafe_cast_ptr<_1a7b2e0b4_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type34) {
				_case_begin_1ac3ae6ec:;
				{
					(*_17207_brk.alloc)._field_It=static_cast<jule::Uintptr>(_17478_st.unsafe_cast_ptr<_1a7b2d5d0_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1ac3ae763:;
				{
					(*_17207_brk.alloc)._field_Mtch=static_cast<jule::Uintptr>(_17478_st.unsafe_cast_ptr<_1a7b31c32_Match>());
				}
			}
			else {
				_case_begin_1ac3ae686:;
				{
					_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				}
			}
			_match_end_1ac3ae620:;
		};
	};
	if (((*_17207_brk.alloc)._field_It != 0LLU)) {
		if ((!(_1a7b3e558_checkValidBreakLabel(_self_, (*_17207_brk.alloc)._field_It)))) {
			_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	if (((*_17207_brk.alloc)._field_Mtch != 0LLU)) {
		if ((!(_1a7b3e558_checkValidBreakLabel(_self_, (*_17207_brk.alloc)._field_Mtch)))) {
			_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return _17207_brk;;
}



inline jule::Ptr<_1a7b2e78a_BreakSt> _1a7b44a69_checkPlainBreak(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798de57_BreakSt> _177732_b) {
	if (_1a7b377c6_isDeferred(_self_)) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_177732_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7b34938_scopeChecker> _17837_scope = _self_;;
	_julec_label_1ac3b6a23:;
	{
		
		if ((((((*(_17837_scope))._field_it == 0LLU) && ((*_17837_scope.alloc)._field_cse == 0LLU)) && ((*_17837_scope.alloc)._field_parent != nullptr)) && ((*_17837_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1ac3b7d10:;
			{
				_17837_scope=(*_17837_scope.alloc)._field_parent;
				goto _julec_label_1ac3b6a23;
			}
		}
		else if (((*(_17837_scope))._field_it != 0LLU)) {
			_case_begin_1ac3b7d98:;
			{
				return jule::new_ptr<_1a7b2e78a_BreakSt>(_1a7b2e78a_BreakSt{._field_It=(*_17837_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_17837_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1ac3b7e0e:;
			{
				return jule::new_ptr<_1a7b2e78a_BreakSt>(_1a7b2e78a_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1a7b32529_Case*)((*_17837_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1ac3b7c11:;
	};
	_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*(_177732_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a7b44d22_checkBreak(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798de57_BreakSt> _179927_b) {
	if (((*(_179927_b))._field_Label != nullptr)) {
		jule::Ptr<_1a7b2e78a_BreakSt> _18018_brk = _1a7b44728_checkBreakWithLabel(_self_, _179927_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18018_brk, &__jule_any_type47); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a7b2e78a_BreakSt> _18067_brk = _1a7b44a69_checkPlainBreak(_self_, _179927_b);;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18067_brk, &__jule_any_type47); __jule_collection; }));
}



inline void _1a7b450ca_checkRet(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a798c0cb_RetSt> _181029_r) {
	if (_1a7b377c6_isDeferred(_self_)) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_181029_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7b330b8_RetSt> _18157_rt = jule::new_ptr<_1a7b330b8_RetSt>(_1a7b330b8_RetSt{._field_Func=(*(_1a7b37d15_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18157_rt, &__jule_any_type48); __jule_collection; }));
	jule::Ptr<_1a7bea5e2_retTypeChecker> _18207_rtc = jule::new_ptr<_1a7bea5e2_retTypeChecker>(_1a7bea5e2_retTypeChecker{._field_sc=_self_, ._field_f=(*(_18157_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1a7c3255d_Type>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1a7bed89d_Data>>(nullptr), ._field_exprDecls=jule::Slice<jule::Ptr<_1a797d0de_Expr>>(nullptr), ._field_errorToken=(*(_181029_r))._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=true});;
	jule::Bool _18263_ok = _1a7beb769_check(_18207_rtc.ptr(), &((*_181029_r.alloc)._field_Expr));;
	if ((!(_18263_ok))) {
		return;;
	};
	if (((*_181029_r.alloc)._field_Expr != nullptr)) {
		(*_18157_rt.alloc)._field_Expr=(*_18207_rtc.alloc)._field_model;
	};
}



inline void _1a7b45383_checkUseExpr(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a797d9b3_UseExpr> _183629_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183629_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_1a7b377c6_isDeferred(_self_)) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183629_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183629_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _1a7b4563b_checkNode(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Any* _185231_node) {
	{
		auto &_match_expr{ (*(_185231_node)) };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ac3d0201:;
			{
				_1a7b3b005_checkAnonScope(_self_, (*(_185231_node)).cast_ptr<_1a7988da8_ScopeTree>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1ac3d0564:;
			{
				_1a7b397ea_checkVarDecl(_self_, (*(_185231_node)).cast_ptr<_1a798bc02_VarDecl>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ac3d05ca:;
			{
				_1a7b39d5b_checkTypeAliasDecl(_self_, (*(_185231_node)).cast_ptr<_1a7990981_TypeAliasDecl>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ac3d0641:;
			{
				_1a7b3b621_checkExpr(_self_, (*(_185231_node)).cast_ptr<_1a797d0de_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ac3d0960:;
			{
				_1a7b3c05b_checkConditional(_self_, (*(_185231_node)).cast_ptr<_1a7990167_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1ac3d09c6:;
			{
				_1a7b3ddc6_checkIter(_self_, (*(_185231_node)).cast_ptr<_1a798c84b_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1ac3d0a3c:;
			{
				_1a7b3eb52_checkCont(_self_, (*(_185231_node)).cast_ptr<_1a798e331_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1ac3d0aa3:;
			{
				_1a7b3ee0a_checkLabel(_self_, (*(_185231_node)).cast_ptr<_1a798638e_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1ac3d0b19:;
			{
				_1a7b401b3_pushGoto(_self_, (*(_185231_node)).cast_ptr<_1a7986768_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ac3d0b91:;
			{
				_1a7b41db8_checkAssignSt(_self_, (*(_185231_node)).cast_ptr<_1a7987758_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ac3d0c18:;
			{
				_1a7b4412e_checkMatch(_self_, (*(_185231_node)).cast_ptr<_1a7991751_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1ac3d0c90:;
			{
				_1a7b443d7_checkFall(_self_, (*(_185231_node)).cast_ptr<_1a7986a65_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1ac3d0d17:;
			{
				_1a7b44d22_checkBreak(_self_, (*(_185231_node)).cast_ptr<_1a798de57_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1ac3d0d8e:;
			{
				_1a7b450ca_checkRet(_self_, (*(_185231_node)).cast_ptr<_1a798c0cb_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ac3d0e16:;
			{
				_1a7b45383_checkUseExpr(_self_, (*(_185231_node)).cast_ptr<_1a797d9b3_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1ac3d03cc:;
			{
				jule::println(_1aab19673_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_1ac3d0366:;
	};
}



inline void _1a7b45839_checkResult(jule::Ptr<_1a7b34938_scopeChecker> _self_) {
	_1a7988748_Stmt _18907_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _18907_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ac40814c:;
			{
				jule::Ptr<_1a797d9b3_UseExpr> _18938_ue = _18907_stmt._field_Data.unsafe_cast_ptr<_1a797d9b3_UseExpr>();;
				jule::Ptr<_1a7bed89d_Data> _18948_d = _1a7c204d5_evalExpr(_1a7b8bc04_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)), (*(_18938_ue))._field_Expr);;
				if ((_18948_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18948_d, &__jule_any_type21); __jule_collection; }));
				jule::Ptr<_1a7bea5e2_retTypeChecker> _18998_rtc = jule::new_ptr<_1a7bea5e2_retTypeChecker>(_1a7bea5e2_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_types=_1a7a74d73_Types((*((*_self_.alloc)._field_result))._field_func.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1a7bed89d_Data>>(nullptr), ._field_exprDecls=jule::Slice<jule::Ptr<_1a797d0de_Expr>>(nullptr), ._field_errorToken=(*((*_18938_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=(*(*(_self_))._field_result.alloc)._field_mutable});;
				_1a7beb769_check(_18998_rtc.ptr(), &((*_18938_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ac4083c2:;
			{
				jule::Ptr<_1a797d0de_Expr> _19078_expr = _18907_stmt._field_Data.unsafe_cast_ptr<_1a797d0de_Expr>();;
				jule::Ptr<_1a7bed89d_Data> _19088_d = _1a7c204d5_evalExpr(_1a7b8bc04_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)), _19078_expr);;
				if ((_19088_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19088_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1ac41291a:;
						{
							jule::Ptr<_1a7a6b94c_BuiltinErrorCallExpr> _19149_m = (*(_19088_d))._field_Model.unsafe_cast_ptr<_1a7a6b94c_BuiltinErrorCallExpr>();;
							_1a7b3b368_processErrorCall(_self_, &(_19149_m), (*(_19078_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19088_d, &__jule_any_type21); __jule_collection; }));
						}
					}
					else {
						_case_begin_1ac412ac4:;
						{
							return;;
						}
					}
					_match_end_1ac412a5d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1ac408438:;
			{
				_1a7b4563b_checkNode(_self_, &(_18907_stmt._field_Data));
			}
		}
		else {
			_case_begin_1ac40835b:;
			{
				_1a7b4563b_checkNode(_self_, &(_18907_stmt._field_Data));
				return;;
			}
		}
		_match_end_1ac4082e5:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1a7b45a37_checkTree(jule::Ptr<_1a7b34938_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I32 _19367_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_19367_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _19367_n); ((*_self_.alloc)._field_i)++) {
		{
			_1a7988748_Stmt _19448_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1a7b4563b_checkNode(_self_, &(_19448_stmt._field_Data));
			if (_1a7b37540_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1ac416534:;
	}
	_iter_end_1ac416534:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1a7b45839_checkResult(_self_);
	};
}



inline void _1a7b45d9a_checkGoto(_1a7b34938_scopeChecker* _self_, jule::Ptr<_1a7b303a1_GotoSt>* _195530_gt, jule::Ptr<_1a7b3356e_scopeLabel>* _195548_label) {
	jule::I32 _19567_n = 0LL;;
	if (((*((*(_195530_gt))))._field_Scope == (*((*((*(_195548_label))))._field_node))._field_Scope)) {
		if (((*((*(_195530_gt))))._field_Index > (*(*((*(_195548_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_19567_n=(*((*(_195530_gt))))._field_Index;
	} else if (((*((*((*(_195530_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_195548_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_1a7b2c238_Scope> _19698_gtsc = (*((*(_195530_gt))))._field_Scope;;
		while ((((*_19698_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_195548_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_19698_gtsc=(*(_19698_gtsc))._field_Parent;
			}
		_iter_next_1ac41b957:;
		}
		_iter_end_1ac41b957:;;
		if (((*_19698_gtsc.alloc)._field_StmtIndex > (*(*((*(_195548_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_19567_n=(*_19698_gtsc.alloc)._field_StmtIndex;
	} else {
		_19567_n=0LL;
	};
	jule::Ptr<_1a7b2c238_Scope> _19917_s = (*((*((*(_195548_label))))._field_node))._field_Scope;;
	jule::I32 _19927_i = ((*(*((*(_195548_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_19927_i >= _19567_n); (_19927_i)--) {
				{
					jule::Any _19959_stmt = (*(_19917_s))._field_Stmts[_19927_i];;
					if (_1a7b478d5_stmtIsDef(&(_19959_stmt))) {
						_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_195530_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_195530_gt))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return;;
					};
				}
			_iter_next_1ac42043e:;
			}
			_iter_end_1ac42043e:;;
			if (((*(_19917_s))._field_ChildIndex > (*((*((*(_195530_gt))))._field_Scope))._field_ChildIndex)) {
				_19917_s=(*(_19917_s))._field_Parent;
				_19927_i=((*_19917_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_1ac420164;
			};
			goto _iter_end_1ac420164;
		}
	_iter_next_1ac420164:;
	}
	_iter_end_1ac420164:;;
}



inline void _1a7b46098_checkGotos(_1a7b34938_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4230ac:;
		if (it != expr_end) {
			jule::Ptr<_1a7b303a1_GotoSt> _201315_gt = *it;
			{
				jule::Ptr<_1a7b3356e_scopeLabel> _20148_label = _1a7b39146_findLabelAll(_self_, &((*(_201315_gt))._field_Ident));;
				if ((_20148_label == nullptr)) {
					_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*_201315_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_201315_gt.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					goto _iter_next_1ac4230ac;
				};
				(*_201315_gt.alloc)._field_Label=(*(_20148_label))._field_node;
				(*_20148_label.alloc)._field_used=true;
				_1a7b45d9a_checkGoto(_self_, &(_201315_gt), &(_20148_label));
			}
			_iter_next_1ac4230ac:;
			++it;
			goto _iter_begin_1ac4230ac;
		}
		_iter_end_1ac4230ac:;
	};
}



inline void _1a7b46296_checkLabels(_1a7b34938_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4236a6:;
		if (it != expr_end) {
			jule::Ptr<_1a7b3356e_scopeLabel> _202610_l = *it;
			{
				if ((!((*(_202610_l))._field_used))) {
					_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*_202610_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_202610_l.alloc)._field_node))._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1ac4236a6:;
			++it;
			goto _iter_begin_1ac4236a6;
		}
		_iter_end_1ac4236a6:;
	};
}



inline void _1a7b46494_checkVars(_1a7b34938_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac427853:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> _203410_v = *it;
			{
				if (((((!((*(_203410_v))._field_Used)) && (!((*_203410_v.alloc)._field_Constant))) && (!(_1a7965c97_IsIgnoreIdent((*_203410_v.alloc)._field_Ident)))) && (!(_1a7966061_IsAnonIdent((*_203410_v.alloc)._field_Ident))))) {
					_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*_203410_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_203410_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1ac427853:;
			++it;
			goto _iter_begin_1ac427853;
		}
		_iter_end_1ac427853:;
	};
}



inline void _1a7b46692_checkAliases(_1a7b34938_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac42a119:;
		if (it != expr_end) {
			jule::Ptr<_1a7c31848_TypeAlias> _204210_a = *it;
			{
				if ((((!((*(_204210_a))._field_Used)) && (!(_1a7965c97_IsIgnoreIdent((*_204210_a.alloc)._field_Ident)))) && (!(_1a7966061_IsAnonIdent((*_204210_a.alloc)._field_Ident))))) {
					_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*_204210_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_204210_a.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1ac42a119:;
			++it;
			goto _iter_begin_1ac42a119;
		}
		_iter_end_1ac42a119:;
	};
}



inline void _1a7b46a05_check(jule::Ptr<_1a7b34938_scopeChecker> _self_, jule::Ptr<_1a7988da8_ScopeTree>* _205027_tree, jule::Ptr<_1a7b2c238_Scope>* _205055_s) {
	(*((*(_205055_s))))._field_Deferred=(*((*(_205027_tree))))._field_Deferred;
	(*((*(_205055_s))))._field_Unsafety=(*((*(_205027_tree))))._field_Unsafety;
	jule::I32 _20543_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_205027_tree));
	(*_self_.alloc)._field_scope=(*(_205055_s));
	_1a7b45a37_checkTree(_self_);
	if ((_20543_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1a7b46494_checkVars(_self_);
		_1a7b46692_checkAliases(_self_);
		if (_1a7b370ab_isRoot(_self_)) {
			_1a7b46098_checkGotos(_self_);
			_1a7b46296_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1a7b34938_scopeChecker> _1a7b46c8b_newChildChecker(jule::Ptr<_1a7b34938_scopeChecker> _self_) {
	jule::Ptr<_1a7b34938_scopeChecker> _20747_base = _1a7b2b2ae_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_20747_base))._field_parent=_self_;
	(*_20747_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_20747_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_20747_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _20747_base;;
}








inline jule::Bool _1a7b49e7b_directiveChecker_eq(_1a7b49e7b_directiveChecker *_self_, _1a7b49e7b_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1a7b4a3cc_checkCdef(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ac43c0e8:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7a70a83_Fn>()))._field_Binded) {
					goto _match_end_1ac43aeb5;
				};
				goto _case_begin_1ac43b02b;
			}
		}
		else {
			_case_begin_1ac43b02b:;
			{
				_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1ac43aeb5:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a7b4a685_checkTypedef(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ac4401a6:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7997adc_Struct>()))._field_Binded) {
					goto _match_end_1ac43e073;
				};
				goto _case_begin_1ac43e0d9;
			}
		}
		else {
			_case_begin_1ac43e0d9:;
			{
				_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1ac43e073:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a7b4a93d_checkNamespace(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ac443264:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7997adc_Struct>()))._field_Binded))) {
					_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ac441e00:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7a70a83_Fn>()))._field_Binded))) {
					_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac44220d:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7ba4eb4_Var>()))._field_Binded))) {
					_1a7b7eec2_pushErr((*(_self_))._field_s, (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_4835_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1ac442197:;
			{
				_1a7b7eec2_pushErr((*(_self_))._field_s, (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_4835_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1ac442131:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a79633b0_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_733_arg))._field_Kind[0LL] != '\"')) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*(_733_arg))._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ac44d44a:;
			{
				if ((_1a7c28cd5_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_1a79781c7_Directive> _919_typedef = jule::new_ptr<_1a79781c7_Directive>(_1a79781c7_Directive{._field_Tag=jule::new_ptr<_1a79633b0_Token>((*((*((*(_4835_d))))._field_Tag))), ._field_Args=jule::Slice<jule::Ptr<_1a79633b0_Token>>(nullptr)});;
					(*(*(_919_typedef))._field_Tag.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a79781c7_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1ac44d3c3:;
	};
}



inline void _1a7b4abe6_checkDeprecated(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a94ec442:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7997adc_Struct>()))._field_Binded) {
					_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a94ec4ec:;
			{
				jule::Ptr<_1a7a70a83_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a7a70a83_Fn>();;
				if ((((*(_1078_f))._field_Binded || _1a7a71556_IsEntryPoint(_1078_f.ptr())) || _1a7a717dc_IsInit(_1078_f.ptr()))) {
					_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a94ec563:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7ba4eb4_Var>()))._field_Binded) {
					_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1aa7db9a5:;
			{
				_1a7b7eec2_pushErr((*(_self_))._field_s, (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_10036_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1aa7db93e:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a79633b0_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1263_arg))._field_Kind[0LL] != '\"')) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*(_1263_arg))._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1a7b4ae9e_checkTest(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ac4567e9:;
			{
				jule::Ptr<_1a7a70a83_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a7a70a83_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_1a7a717dc_IsInit(_1444_f)))) && (!(_1a7a71556_IsEntryPoint(_1444_f))))) {
					goto _match_end_1ac4556b6;
				};
				if (_1a7a712c0_IsMethod(_1444_f.ptr())) {
					_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_1ac4556b6;
				};
				goto _case_begin_1ac45572c;
			}
		}
		else {
			_case_begin_1ac45572c:;
			{
				_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1ac4556b6:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a7b4b257_checkExport(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ac45b403:;
			{
				jule::Ptr<_1a7a70a83_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a7a70a83_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _1a7a717dc_IsInit(_1654_f.ptr())) || _1a7a71556_IsEntryPoint(_1654_f.ptr())) || _1a7a712c0_IsMethod(_1654_f.ptr())) || ((*(_1654_f))._field_Generics.len() > 0LL))) {
					_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac45a08e:;
			{
				jule::Ptr<_1a7ba4eb4_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
				if (((*(_1714_v))._field_Binded || (*(_1714_v))._field_Constant)) {
					_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1ac45a336:;
			{
				_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return;;
			}
		}
		_match_end_1ac45a2c0:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a79633b0_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1873_arg))._field_Kind[0LL] != '\"')) {
		_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*(_1873_arg))._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1a7b4b510_checkDirective(_1a7b49e7b_directiveChecker* _self_, jule::Ptr<_1a79781c7_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_1ac46819b:;
			{
				_1a7b4a3cc_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_1ac4670ac:;
			{
				_1a7b4a685_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_1ac467123:;
			{
				_1a7b4a93d_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_1ac467189:;
			{
				_1a7b4abe6_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_1ac467200:;
			{
				_1a7b4ae9e_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_1ac467266:;
			{
				_1a7b4b257_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_1ac4672cc:;
			{
				_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1ac462690:;
			{
				_1a7b7eec2_pushErr((*(_self_))._field_s, (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_20035_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1ac466ed0:;
	};
}



inline void _1a7b4b70d_check(_1a7b49e7b_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac46ad3b:;
		if (it != expr_end) {
			jule::Ptr<_1a79781c7_Directive> _22315_d = *it;
			{
				_1a7b4b510_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_1ac46ad3b:;
			++it;
			goto _iter_begin_1ac46ad3b;
		}
		_iter_end_1ac46ad3b:;
	};
}







inline jule::Ptr<_1a7b4c786_ReferenceStack> static__1a7b4cae9_new(void) {
	return jule::new_ptr<_1a7b4c786_ReferenceStack>(_1a7b4c786_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I32 _1a7b4cee5_Len(_1a7b4c786_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1a7b4d336_At(_1a7b4c786_ReferenceStack* _self_, jule::I32 _4318_i) {
	return (*(_self_))._field_buffer[_4318_i];;
}



inline void _1a7b4d5de_Push(_1a7b4c786_ReferenceStack* _self_, jule::Any _4824_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_4824_ref); };
}



inline jule::Bool _1aca419b6_Exist(_1a7b4c786_ReferenceStack* _self_, jule::Ptr<_1a799a97a_StructIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca42c5e:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type64) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1aca42c5e:;
			++it;
			goto _iter_begin_1aca42c5e;
		}
		_iter_end_1aca42c5e:;
	};
	return false;;
}

inline jule::Bool _1accb3540_Exist(_1a7b4c786_ReferenceStack* _self_, jule::Ptr<_1a7a73b41_FnIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accb4750:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type65) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1accb4750:;
			++it;
			goto _iter_begin_1accb4750;
		}
		_iter_end_1accb4750:;
	};
	return false;;
}

inline jule::Bool _1ac650b58_Exist(_1a7b4c786_ReferenceStack* _self_, jule::Ptr<_1a7ba4eb4_Var> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac651e45:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type7) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1ac651e45:;
			++it;
			goto _iter_begin_1ac651e45;
		}
		_iter_end_1ac651e45:;
	};
	return false;;
}

inline jule::Bool _1ad0937ba_Exist(_1a7b4c786_ReferenceStack* _self_, jule::Ptr<_1a7a7b297_Trait> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0949b9:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type11) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1ad0949b9:;
			++it;
			goto _iter_begin_1ad0949b9;
		}
		_iter_end_1ad0949b9:;
	};
	return false;;
}








inline jule::Bool _1a7b4dcd7_Pass_eq(_1a7b4dcd7_Pass *_self_, _1a7b4dcd7_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _1a7b54293_pushErr(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a79633b0_Token>* _30824_token, jule::Str _30846_fmt, jule::Slice<jule::Any> _30866_args) {
	{ jule::Slice<_1bc0b03aa_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a7b79a49_compilerErr(_30824_token, true, _30846_fmt, _30866_args)); };
}



inline void _1a7b54a24_pushSuggestion(_1a7b5378c_symBuilder* _self_, jule::Str _31730_fmt, jule::Slice<jule::Any> _31750_args) {
	{
		_1a7b7ab6b_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _31730_fmt, _31750_args);
	};
}



inline jule::Bool _1a7b54e20_checkCppUseDeclPath(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a7991cd4_UseDecl>* _32136_decl, jule::Str* _32158_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3223_ext = _1bd436a4e_Ext((*(_32158_path)));;
	if (((!(_1bc06565c_IsValidHeaderExt(_3223_ext))) && (!(_1bc065926_IsValidCppExt(_3223_ext))))) {
		_1a7b54293_pushErr(_self_, &((*((*(_32136_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3223_ext, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1bc28a7c7_Stat _3293_info = ({
		auto except = static__1bd43dbbb_Of((*(_32158_path)));
		(except.ok()) ? (except.result) : ({{
			_1a7b54293_pushErr(_self_, &((*((*(_32136_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_32136_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} _1bc28a7c7_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if (_1bc28abd4_IsDir(&_3293_info)) {
		_1a7b54293_pushErr(_self_, &((*((*(_32136_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_32136_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b5522d_buildCppHeaderImport(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a7991cd4_UseDecl>* _34141_decl) {
	jule::Str _3427_path = (*((*((*(_34141_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_34141_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if ((!(_1bc065382_IsStdHeaderPath(_3427_path)))) {
		_3427_path=_1bd4367b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a7969ae2_Dir((*((*((*(_34141_decl))))._field_Token))._field_File.ptr()); (*it++) = _3427_path; __jule_collection; }));
		jule::Bool _3468_ok = _1a7b54e20_checkCppUseDeclPath(_self_, _34141_decl, &(_3427_path));;
		if ((!(_3468_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bd436d18_Abs(_3427_path);
			_3427_path = __jule_assign_result.__jule_result_arg0;
			_3468_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3468_ok))) {
			_1a7b54293_pushErr(_self_, &((*((*(_34141_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_34141_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1a7b5e80e_ImportInfo>(_1a7b5e80e_ImportInfo{._field_Decl=(*(_34141_decl)), ._field_Path=_3427_path, ._field_LinkPath=(*(*((*(_34141_decl))))._field_Path.alloc)._field_Kind, ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Str _1a7b55629_checkAbsPath(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Str _37133_filepath, jule::Ptr<_1a7991cd4_UseDecl>* _37153_decl) {
	jule::Str _3723_modPath = ((_1a7b5b80b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a7b5a871_GetModPath((*(_self_))._field_importer.data);;
	if ((_3723_modPath.len() == 0LL)) {
		_1a7b54293_pushErr(_self_, &((*((*(_37153_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_1a7b54a24_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	_37133_filepath=_1bd4367b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _3723_modPath; (*it++) = _37133_filepath; __jule_collection; }));
	jule::Bool _38013_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bd436d18_Abs(_37133_filepath);
		_37133_filepath = __jule_assign_result.__jule_result_arg0;
		_38013_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_38013_ok))) {
		_1a7b54293_pushErr(_self_, &((*((*(_37153_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37153_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1bc28a7c7_Stat _3873_info = ({
		auto except = static__1bd43dbbb_Of(_37133_filepath);
		(except.ok()) ? (except.result) : ({{
			_1a7b54293_pushErr(_self_, &((*((*(_37153_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37153_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1bc28a7c7_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1bc28abd4_IsDir(&_3873_info)))) {
		_1a7b54293_pushErr(_self_, &((*((*(_37153_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37153_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _37133_filepath;;
}



inline jule::Str _1a7b55a25_checkStdAbsPath(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Str _40036_filepath, jule::Ptr<_1a7991cd4_UseDecl>* _40056_decl) {
	(_40036_filepath).mut_slice(4LL);;
	_40036_filepath=_1bd4367b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1bd43e35e_PathStdlib; (*it++) = _40036_filepath; __jule_collection; }));
	jule::Bool _40313_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bd436d18_Abs(_40036_filepath);
		_40036_filepath = __jule_assign_result.__jule_result_arg0;
		_40313_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_40313_ok))) {
		_1a7b54293_pushErr(_self_.ptr(), &((*((*(_40056_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_40056_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1bc28a7c7_Stat _4103_info = ({
		auto except = static__1bd43dbbb_Of(_40036_filepath);
		(except.ok()) ? (except.result) : ({{
			_1a7b54293_pushErr(_self_.ptr(), &((*((*(_40056_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_40056_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1bc28a7c7_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1bc28abd4_IsDir(&_4103_info)))) {
		_1a7b54293_pushErr(_self_.ptr(), &((*((*(_40056_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_40056_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _40036_filepath;;
}



inline __jule_tuple_bool__jule_tuple_str _1a7b55d66_checkImpPath(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7991cd4_UseDecl>* _42334_decl) {
	__jule_tuple_bool__jule_tuple_str __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	jule::Str _4243_path = (*((*((*(_42334_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_42334_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if (_1bd42a9bb_HasSuffix(_4243_path, jule::Str::lit("/", 1))) {
		_1a7b54293_pushErr(_self_.ptr(), &((*((*(_42334_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42334_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	jule::Slice<jule::Str> _4293_parts = _1bd42eb13_SplitAll(_4243_path, jule::Str::lit("/", 1));;
	if ((_4293_parts.len() == 0LL)) {
		_1a7b54293_pushErr(_self_.ptr(), &((*((*(_42334_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42334_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=_4293_parts[0LL].equal("std", 3);
	{
		auto expr = &(_4293_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94eebc5:;
		if (it != expr_end) {
			jule::Str *_43510_part = it;
			{
				if ((((*(_43510_part))).empty() || _1a7965c97_IsIgnoreIdent((*(_43510_part))))) {
					_1a7b54293_pushErr(_self_.ptr(), &((*((*(_42334_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42334_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg1=_1bd4367b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = __jule_func_result.__jule_result_arg1; (*it++) = (*(_43510_part)); __jule_collection; }));
			}
			_iter_next_1a94eebc5:;
			++it;
			goto _iter_begin_1a94eebc5;
		}
		_iter_end_1a94eebc5:;
	};
	if (__jule_func_result.__jule_result_arg0) {
		__jule_func_result.__jule_result_arg1=_1a7b55a25_checkStdAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42334_decl);
	} else {
		__jule_func_result.__jule_result_arg1=_1a7b55629_checkAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42334_decl);
	};
	return __jule_func_result;;
}



inline void _1a7b5611e_assignAlias(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _45333_imp) {
	jule::I32 _4547_i = _1bd42ba66_FindLast((*((*(_45333_imp))))._field_LinkPath, jule::Str::lit("/", 1));;
	(_4547_i)++;
	jule::Str _4563_path = (*((*(_45333_imp))))._field_LinkPath.slice(_4547_i);;
	(*((*(_45333_imp))))._field_Alias=_4563_path;
}



inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b56460_buildImport(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7991cd4_UseDecl>* _46033_decl) {
	if ((*((*(_46033_decl))))._field_Binded) {
		return _1a7b5522d_buildCppHeaderImport(_self_.ptr(), _46033_decl);;
	};
	jule::Bool _4643_std;
	jule::Str _4648_filepath;
	({
		__jule_tuple_bool__jule_tuple_str __jule_assign_result = _1a7b55d66_checkImpPath(_self_, _46033_decl);
		_4643_std = __jule_assign_result.__jule_result_arg0;
		_4648_filepath = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4648_filepath).empty()) {
		return nullptr;;
	};
	jule::Ptr<_1a7b5e80e_ImportInfo> _4697_imp = jule::new_ptr<_1a7b5e80e_ImportInfo>(_1a7b5e80e_ImportInfo{._field_Decl=(*(_46033_decl)), ._field_Path=_4648_filepath, ._field_LinkPath=(*((*((*(_46033_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_46033_decl))))._field_Path.alloc)._field_Kind.len() - 1LL)), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=false, ._field_Std=_4643_std, ._field_Package=jule::new_ptr<_1a7b62081_Package>(_1a7b62081_Package{._field_Files=nullptr}), ._field_ModId=0});;
	if (((*((*(_46033_decl))))._field_Alias != nullptr)) {
		(*(_4697_imp))._field_Alias=(*(*((*(_46033_decl))))._field_Alias.alloc)._field_Kind;
	} else if ((!(_1a7b599e6_isImplicitImport(_4697_imp)))) {
		_1a7b5611e_assignAlias(_self_, &(_4697_imp));
	};
	return _4697_imp;;
}



inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b567a1_findUseDecl(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _48728_pkg) {
	return _1a7a773a3_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>>((void*)__jule_anon_1ac702dc5, jule::Ptr<__jule_anon_1ac702dc5_ctx>::make(__jule_anon_1ac702dc5_ctx{._48728_pkg=_48728_pkg}).as<jule::Uintptr>(), __jule_anon_1ac702dc5_ctx_handler));;
}



inline jule::Bool _1a7b56ae2_checkDuplicateUseDecl(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _49542_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7b5e80e_ImportInfo> _4967_lpkg = _1a7b567a1_findUseDecl(_self_, _49542_pkg);;
	if ((_4967_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1a7b54293_pushErr(_self_, &((*((*((*(_49542_pkg))))._field_Decl))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49542_pkg))))._field_LinkPath, &__jule_any_type5); __jule_collection; }));
	_1a7b54a24_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Str _1a7b56e33_getAsLinkPath(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Str _50534_path) {
	_1bc0a106b_Builder _5067_sb = static__1bc0a18b8_New(_50534_path.len());;
	if (_1bd42a647_HasPrefix(_50534_path, _1bd43e35e_PathStdlib)) {
		(_50534_path).mut_slice(_1bd43e35e_PathStdlib.len());;
		({
			auto except = _1bc0a204a_WriteStr(&_5067_sb, jule::Str::lit("\"std", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:509:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&_5067_sb, _1bd431791_ReplaceAll(_50534_path, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:510:4"));
			(except.result);
		});
		({
			auto except = _1bc0a2303_WriteByte(&_5067_sb, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:511:4"));
		});
		return _1bc0a28ca_Str(&_5067_sb);;
	};
	jule::Str _5153_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bd436d18_Abs(((_1a7b5b80b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a7b5a871_GetModPath((*(_self_))._field_importer.data));
		_5153_root = __jule_assign_result.__jule_result_arg0;
	});
	(_50534_path).mut_slice(_5153_root.len());;
	if ((_50534_path[0LL] == 92LLU)) {
		(_50534_path).mut_slice(1LL);;
	};
	({
		auto except = _1bc0a2303_WriteByte(&_5067_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:520:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(&_5067_sb, _1bd431791_ReplaceAll(_50534_path, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:521:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(&_5067_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:522:3"));
	});
	return _1bc0a28ca_Str(&_5067_sb);;
}



inline void _1a7b57351_pushCycleError(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7b5378c_symBuilder>* _52632_sb, jule::Str _52649_path, _1bc0a106b_Builder* _52665_message) {
	;
	jule::Str _5283_refersTo = _1bc0b081c_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7b56e33_getAsLinkPath(_self_, _1a7969ae2_Dir((*((*((*(_52632_sb))))._field_table))._field_File.ptr())), &__jule_any_type5); (*it++) = jule::Any(_1a7b56e33_getAsLinkPath(_self_, _52649_path), &__jule_any_type5); __jule_collection; }));;
	jule::Str _5323_m = _1bc0a28ca_Str(_52665_message);;
	({
		auto except = _1bc0a204a_WriteStr(_52665_message, _1bd42a27e_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:533:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_52665_message, _5283_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:534:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(_52665_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:535:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(_52665_message, _5323_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:536:3"));
		(except.result);
	});
}



inline void _1a7b5776e_pushCrossCycleError(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7b5378c_symBuilder>* _53937_target, jule::Ptr<_1a7b5e80e_ImportInfo>* _53959_imp, jule::Ptr<_1a79633b0_Token>* _53978_errorToken) {
	_1bc0a106b_Builder _5407_message = static__1bc0a18b8_New(32LL);;
	_1a7b57351_pushCycleError(_self_, &(_self_), (*((*(_53959_imp))))._field_Path, &(_5407_message));
	jule::Ptr<_1a7b5378c_symBuilder> _5447_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1a7b5378c_symBuilder> _5457_old = _self_;;
	while (((*(_5447_owner))._field_owner != nullptr)) {
		{
			_1a7b57351_pushCycleError(_self_, &((*_5457_old.alloc)._field_owner), _1a7969ae2_Dir((*((*_5457_old.alloc)._field_table))._field_File.ptr()), &(_5407_message));
			if (((*_5447_owner.alloc)._field_owner == (*(_53937_target)))) {
				_1a7b57351_pushCycleError(_self_, _53937_target, _1a7969ae2_Dir((*((*(_5447_owner))._field_table))._field_File), &(_5407_message));
				goto _iter_end_1ac49cdb2;
			};
			_5457_old=_5447_owner;
			_5447_owner=(*(_5447_owner))._field_owner;
		}
	_iter_next_1ac49cdb2:;
	}
	_iter_end_1ac49cdb2:;;
	_1a7b54293_pushErr(_self_, _53978_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc0a28ca_Str(&_5407_message), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1a7b57b6a_checkImportCycles(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7b5e80e_ImportInfo> _56234_imp, jule::Ptr<_1a7991cd4_UseDecl>* _56253_decl) {
	if (((*(_56234_imp))._field_Path == _1a7969ae2_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1a7b54293_pushErr(_self_, &((*((*(_56253_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7b56e33_getAsLinkPath(_self_, (*_56234_imp.alloc)._field_Path), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a7b5378c_symBuilder> _5727_owner = (*(_self_))._field_owner;;
	_julec_label_1ac4a25c0:;
	if ((_1a7969ae2_Dir((*((*(_5727_owner))._field_table))._field_File.ptr()) == (*(_56234_imp))._field_Path)) {
		_1a7b5776e_pushCrossCycleError(_self_, &(_5727_owner), &(_56234_imp), &((*((*(_56253_decl))))._field_Token));
		return false;;
	};
	if (((*(_5727_owner))._field_owner != nullptr)) {
		_5727_owner=(*_5727_owner.alloc)._field_owner;
		goto _julec_label_1ac4a25c0;
	};
	return true;;
}



inline void _1a7b58088_checkPackageAccessibility(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a7991cd4_UseDecl>* _59342_decl, jule::Str* _59364_mod, jule::Str* _59375_path) {
	if ((((_1a7b5b80b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a7b5a871_GetModPath((*(_self_))._field_importer.data) == (*(_59364_mod)))) {
		return;;
	};
	;
	jule::I32 _5983_i = _1bd42b2b3_Find((*(_59375_path)), jule::Str::lit("internal", 8));;
	if ((_5983_i == -1LL)) {
		return;;
	};
	if ((_5983_i == 0LL)) {
		if (((((*(_59375_path)).len() - 8LL) == 0LL) || _1bd42a647_HasPrefix((*(_59375_path)), jule::Str::lit("internal/", 9)))) {
			_1a7b54293_pushErr(_self_, &((*((*(_59342_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((*(_59375_path)).slice((_5983_i - 1LL)).equal("/internal", 9)) {
		_1a7b54293_pushErr(_self_, &((*((*(_59342_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I32 _6163_n = ((_5983_i + 8LL) + 1LL);;
	if (((_6163_n < (*(_59375_path)).len()) && (*(_59375_path)).slice((_5983_i - 1LL), _6163_n).equal("/internal/", 10))) {
		_1a7b54293_pushErr(_self_, &((*((*(_59342_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Bool _1a7b58484_importPackage(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _62335_imp, jule::Ptr<_1a7991cd4_UseDecl>* _62358_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_62335_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7b5e80e_ImportInfo> _6287_port = ((_1a7b5b80b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a7b5b003_GetImport((*(_self_))._field_importer.data, (*((*(_62335_imp))))._field_Path);;
	if ((_6287_port != nullptr)) {
		(*((*(_62335_imp))))._field_Package=(*_6287_port.alloc)._field_Package;
		(*((*(_62335_imp))))._field_Duplicate=true;
		jule::Str _6334_oldMod = ((_1a7b5b80b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7b5a871_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1a7b5b80b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7b5a684_SetModPath((*_self_.alloc)._field_importer.data, ((_1a7b5b80b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7b5abb2_ModById((*_self_.alloc)._field_importer.data, (*((*(_62335_imp))))._field_ModId));
		_1a7b58088_checkPackageAccessibility(_self_, _62358_decl, &(_6334_oldMod), &((*_6287_port.alloc)._field_Path));
		((_1a7b5b80b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7b5a684_SetModPath((*_self_.alloc)._field_importer.data, _6334_oldMod);
	} else {
		if ((!(_1a7b57b6a_checkImportCycles(_self_, (*(_62335_imp)), _62358_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6424_oldMod = ((_1a7b5b80b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7b5a871_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1a7b5b80b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7b5a684_SetModPath((*_self_.alloc)._field_importer.data, _6424_oldMod);
		});;
		if ((*((*(_62335_imp))))._field_Std) {
			((_1a7b5b80b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7b5a684_SetModPath((*_self_.alloc)._field_importer.data, _1bd43e35e_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1a7976deb_AST>> _6478_asts;
		jule::Slice<_1bc0b03aa_Log> _64718_errors;
		({
			__jule_tuple_sx_1a7976deb_AST__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = ((_1a7b5b80b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7b5b3ee_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_62335_imp))))._field_Path, (!((*((*(_62335_imp))))._field_Std)));
			_6478_asts = __jule_assign_result.__jule_result_arg0;
			_64718_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64718_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64718_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1a7b58088_checkPackageAccessibility(_self_, _62358_decl, &(_6424_oldMod), &((*((*(_62335_imp))))._field_Path));
		{
			auto expr = &(_6478_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac4aa2a9:;
			if (it != expr_end) {
				jule::Ptr<_1a7976deb_AST> _65516_ast = *it;
				{
					jule::Ptr<_1a7a76d86_SymTab> _6569_table = static_cast<jule::Ptr<_1a7a76d86_SymTab>>(nullptr);;
					({
						__jule_tuple_x_1a7a76d86_SymTab__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a7c5410c_buildSymbols(&(_65516_ast), &((*_self_.alloc)._field_importer), _self_);
						_6569_table = __jule_assign_result.__jule_result_arg0;
						_64718_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64718_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64718_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_62335_imp))))._field_Package))._field_Files=jule::append((*(*((*(_62335_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6569_table; __jule_collection; }));
				}
				_iter_next_1ac4aa2a9:;
				++it;
				goto _iter_begin_1ac4aa2a9;
			}
			_iter_end_1ac4aa2a9:;
		};
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b587c5_importUseDecl(jule::Ptr<_1a7b5378c_symBuilder> _self_, jule::Ptr<_1a7991cd4_UseDecl>* _66935_decl) {
	jule::Ptr<_1a7b5e80e_ImportInfo> _6707_imp = _1a7b56460_buildImport(_self_, _66935_decl);;
	if ((_6707_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6757_ok = _1a7b56ae2_checkDuplicateUseDecl(_self_, &(_6707_imp));;
	if ((!(_6757_ok))) {
		return nullptr;;
	};
	_6757_ok=_1a7b58484_importPackage(_self_, &(_6707_imp), _66935_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6707_imp; __jule_collection; }));
	if (_6757_ok) {
		((_1a7b5b80b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a7b5b6a7_Imported((*_self_.alloc)._field_importer.data, _6707_imp);
		return _6707_imp;;
	};
	return nullptr;;
}



inline void _1a7b589c3_importUseDecls(jule::Ptr<_1a7b5378c_symBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4b1315:;
		if (it != expr_end) {
			jule::Ptr<_1a7991cd4_UseDecl> _68915_decl = *it;
			{
				_1a7b587c5_importUseDecl(_self_, &(_68915_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1ac4b1315;
				};
			}
			_iter_next_1ac4b1315:;
			++it;
			goto _iter_begin_1ac4b1315;
		}
		_iter_end_1ac4b1315:;
	};
}



inline void _1a7b58c7b_appendNode(_1a7b5378c_symBuilder* _self_, _1a7977ca9_Node* _69831_node) {
	{
		auto &_match_expr{ (*(_69831_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ac4b1821:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b29246_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7b531c6_buildImpl((*(_69831_node))._field_Data.unsafe_cast_ptr<_1a7995843_Impl>()); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ac4b2866:;
			{
				jule::Ptr<_1a7c31848_TypeAlias> _7038_ta = _1a7b4e722_buildTypeAlias((*(_69831_node))._field_Data.unsafe_cast_ptr<_1a7990981_TypeAliasDecl>());;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7038_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ac4b28cc:;
			{
				jule::Ptr<_1a7997adc_Struct> _7068_srct = _1a7b500b3_buildStruct((*(_69831_node))._field_Data.unsafe_cast_ptr<_1a7994996_StructDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7997adc_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7068_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ac4b2943:;
			{
				jule::Ptr<_1a7a70a83_Fn> _7098_f = _1a7b50c62_buildFunc((*(_69831_node))._field_Data.unsafe_cast_ptr<_1a798aa47_FnDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a70a83_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7098_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ac4b29a9:;
			{
				jule::Ptr<_1a7a7b297_Trait> _7128_t = _1a7b515ae_buildTrait((*(_69831_node))._field_Data.unsafe_cast_ptr<_1a79951d3_TraitDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a7b297_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7128_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1ac4b2a20:;
			{
				jule::Ptr<_1a7ba4eb4_Var> _7158_v = _1a7b52b43_buildVar((*(_69831_node))._field_Data.unsafe_cast_ptr<_1a798bc02_VarDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7158_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ac4b3290:;
			{
				jule::Ptr<_1a7a7d94d_Enum> _7188_e = _1a7b5213c_buildEnum((*(_69831_node))._field_Data.unsafe_cast_ptr<_1a7992d4b_EnumDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a7d94d_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7188_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ac4b3306:;
			{
				jule::Ptr<_1a7a80158_TypeEnum> _7218_e = _1a7b52879_buildTypeEnum((*(_69831_node))._field_Data.unsafe_cast_ptr<_1a7993cd6_TypeEnumDecl>());;
				(*(*(_self_))._field_table.alloc)._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a80158_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7218_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1ac4b2756:;
			{
				_1a7b54293_pushErr(_self_, &((*(_69831_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac4b26e0:;
	};
}



inline void _1a7b58e79_appendNodes(_1a7b5378c_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac71e60b:;
		if (it != expr_end) {
			_1a7977ca9_Node _72915_node = *it;
			{
				_1a7b58c7b_appendNode(_self_, &(_72915_node));
			}
			_iter_next_1ac71e60b:;
			++it;
			goto _iter_begin_1ac71e60b;
		}
		_iter_end_1ac71e60b:;
	};
}



inline void _1a7b59232_pushDirectivePass(_1a7b5378c_symBuilder* _self_, jule::Ptr<_1a79781c7_Directive>* _73438_d) {
	if (((*((*(_73438_d))))._field_Args.len() == 0LL)) {
		_1a7b54293_pushErr(_self_, &((*((*(_73438_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73438_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1a79633b0_Token> _7394_arg = (*((*(_73438_d))))._field_Args[1LL];;
		_1a7b54293_pushErr(_self_, &(_7394_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73438_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a79633b0_Token> _7433_arg = (*((*(_73438_d))))._field_Args[0LL];;
	if (((*(_7433_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1a7b54293_pushErr(_self_, &(_7433_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7433_arg))._field_Kind[0LL] != '\"')) {
		_1a7b54293_pushErr(_self_, &(_7433_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1a7b4dcd7_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7b4dcd7_Pass{._field_Token=(*((*(_73438_d))))._field_Tag, ._field_Text=(*(_7433_arg))._field_Kind.slice(1LL, ((*_7433_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1a7b59430_appendTopDirectives(_1a7b5378c_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac72636b:;
		if (it != expr_end) {
			jule::Ptr<_1a79781c7_Directive> _76115_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_76115_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_1ac727d40:;
						{
							_1a7b59232_pushDirectivePass(_self_, &(_76115_d));
						}
					}
					_match_end_1ac727c63:;
				};
			}
			_iter_next_1ac72636b:;
			++it;
			goto _iter_begin_1ac72636b;
		}
		_iter_end_1ac72636b:;
	};
}



inline void _1a7b5962d_build(jule::Ptr<_1a7b5378c_symBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1a7a76d86_SymTab>(_1a7a76d86_SymTab{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1a7b4dcd7_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1a7997adc_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1a7a70a83_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1a7a7b297_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1a7a7d94d_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1a7a80158_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1a7b29246_Impl>>(nullptr)});
	_1a7b59430_appendTopDirectives(_self_);
	_1a7b589c3_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1a7b58e79_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}








inline jule::Bool _1a7b5e80e_ImportInfo_eq(_1a7b5e80e_ImportInfo *_self_, _1a7b5e80e_ImportInfo _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_LinkPath == _self_->_field_LinkPath) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Duplicate == _self_->_field_Duplicate) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Std == _self_->_field_Std) &&
		(_self_->_field_Package == _self_->_field_Package) &&
		(_self_->_field_ModId == _self_->_field_ModId);
}

inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b5ed2b_SelectPackage(_1a7b5e80e_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a7ba4eb4_Var> _1a7b60227_FindVar(_1a7b5e80e_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_1a7b61ca6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a7b5c0c0_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_1a7c31848_TypeAlias> _1a7b60623_FindTypeAlias(_1a7b5e80e_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_1a7b61ca6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a7b5c4ee_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_1a7997adc_Struct> _1a7b60a1e_FindStruct(_1a7b5e80e_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_1a7b61ca6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a7b5c9a5_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_1a7a70a83_Fn> _1a7b60e1a_FindFn(_1a7b5e80e_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_1a7b61ca6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a7b5cda1_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_1a7a7b297_Trait> _1a7b6125b_FindTrait(_1a7b5e80e_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_1a7b61ca6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a7b5d225_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_1a7a7d94d_Enum> _1a7b6159c_FindEnum(_1a7b5e80e_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_1a7b61ca6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a7b5d599_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_1a7a80158_TypeEnum> _1a7b618dd_FindTypeEnum(_1a7b5e80e_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_1a7b61ca6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a7b5da2d_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _1a7b61ca6_isLookupable(_1a7b5e80e_ImportInfo* _self_) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	return true;;
}







inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b62559_SelectPackage(_1a7b62081_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a7ba4eb4_Var> _1a7b62955_FindVar(_1a7b62081_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded) {
	return _1a7b5c0c0_findVarInPackage(&((*(_self_))._field_Files), &(_28723_ident), _28735_binded);;
}



inline jule::Ptr<_1a7c31848_TypeAlias> _1a7b62d51_FindTypeAlias(_1a7b62081_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded) {
	return _1a7b5c4ee_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_29329_ident), _29341_binded);;
}



inline jule::Ptr<_1a7997adc_Struct> _1a7b6324c_FindStruct(_1a7b62081_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded) {
	return _1a7b5c9a5_findStructInPackage(&((*(_self_))._field_Files), &(_29926_ident), _29938_binded);;
}



inline jule::Ptr<_1a7a70a83_Fn> _1a7b63648_FindFn(_1a7b62081_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded) {
	return _1a7b5cda1_findFnInPackage(&((*(_self_))._field_Files), &(_30522_ident), _30534_binded);;
}



inline jule::Ptr<_1a7a7b297_Trait> _1a7b63989_FindTrait(_1a7b62081_Package* _self_, jule::Str _31125_ident) {
	return _1a7b5d225_findTraitInPackage(&((*(_self_))._field_Files), &(_31125_ident));;
}



inline jule::Ptr<_1a7a7d94d_Enum> _1a7b63cca_FindEnum(_1a7b62081_Package* _self_, jule::Str _31724_ident) {
	return _1a7b5d599_findEnumInPackage(&((*(_self_))._field_Files), &(_31724_ident));;
}



inline jule::Ptr<_1a7a80158_TypeEnum> _1a7b6411b_FindTypeEnum(_1a7b62081_Package* _self_, jule::Str _32328_ident) {
	return _1a7b5da2d_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_32328_ident));;
}







inline jule::Ptr<_1a7b10d65_comptimeTypeInfo> _1a7b7b4c9_pushComptimeTypeInfo(_1a7b7b034_commonSemaMeta* _self_, jule::Ptr<_1a7c3255d_Type>* _21141_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac779a73:;
		if (it != expr_end) {
			jule::Ptr<_1a7b10d65_comptimeTypeInfo> _21215_t2 = *it;
			{
				if (_1a7c32c9a_Equal((*(_21215_t2))._field_base, (*(_21141_t)))) {
					return _21215_t2;;
				};
			}
			_iter_next_1ac779a73:;
			++it;
			goto _iter_begin_1ac779a73;
		}
		_iter_end_1ac779a73:;
	};
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _2177_t1 = jule::new_ptr<_1a7b10d65_comptimeTypeInfo>(_1a7b10d65_comptimeTypeInfo{._field_base=(*(_21141_t))});;
	{ jule::Slice<jule::Ptr<_1a7b10d65_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2177_t1); };
	return _2177_t1;;
}







inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b7c596_SelectPackage(_1a7b7c0bd_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>> _24829_selector) {
	return _1a7a773a3_SelectPackage((*(_self_))._field_file.ptr(), _24829_selector);;
}



inline jule::Ptr<_1a7ba4eb4_Var> _1a7b7c992_FindVar(_1a7b7c0bd_sema* _self_, jule::Str _25823_ident, jule::Bool _25835_binded) {
	jule::Ptr<_1a7ba4eb4_Var> _2607_v = _1a7b5c0c0_findVarInPackage(&((*(_self_))._field_files), &(_25823_ident), _25835_binded);;
	if ((_2607_v != nullptr)) {
		return _2607_v;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7c31848_TypeAlias> _1a7b7cd8d_FindTypeAlias(_1a7b7c0bd_sema* _self_, jule::Str _27329_ident, jule::Bool _27341_binded) {
	jule::Ptr<_1a7c31848_TypeAlias> _2757_ta = _1a7b5c4ee_findTypeAliasInPackage(&((*(_self_))._field_files), &(_27329_ident), _27341_binded);;
	if ((_2757_ta != nullptr)) {
		return _2757_ta;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7997adc_Struct> _1a7b7d289_FindStruct(_1a7b7c0bd_sema* _self_, jule::Str _28826_ident, jule::Bool _28838_binded) {
	jule::Ptr<_1a7997adc_Struct> _2907_s = _1a7b5c9a5_findStructInPackage(&((*(_self_))._field_files), &(_28826_ident), _28838_binded);;
	if ((_2907_s != nullptr)) {
		return _2907_s;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a70a83_Fn> _1a7b7d685_FindFn(_1a7b7c0bd_sema* _self_, jule::Str _30322_ident, jule::Bool _30334_binded) {
	jule::Ptr<_1a7a70a83_Fn> _3057_f = _1a7b5cda1_findFnInPackage(&((*(_self_))._field_files), &(_30322_ident), _30334_binded);;
	if ((_3057_f != nullptr)) {
		return _3057_f;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a7b297_Trait> _1a7b7d9c6_FindTrait(_1a7b7c0bd_sema* _self_, jule::Str _31825_ident) {
	jule::Ptr<_1a7a7b297_Trait> _3207_t = _1a7b5d225_findTraitInPackage(&((*(_self_))._field_files), &(_31825_ident));;
	if ((_3207_t != nullptr)) {
		return _3207_t;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a7d94d_Enum> _1a7b7dd17_FindEnum(_1a7b7c0bd_sema* _self_, jule::Str _33324_ident) {
	jule::Ptr<_1a7a7d94d_Enum> _3357_e = _1a7b5d599_findEnumInPackage(&((*(_self_))._field_files), &(_33324_ident));;
	if ((_3357_e != nullptr)) {
		return _3357_e;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a80158_TypeEnum> _1a7b7e158_FindTypeEnum(_1a7b7c0bd_sema* _self_, jule::Str _34828_ident) {
	jule::Ptr<_1a7a80158_TypeEnum> _3507_e = _1a7b5da2d_findTypeEnumInPackage(&((*(_self_))._field_files), &(_34828_ident));;
	if ((_3507_e != nullptr)) {
		return _3507_e;;
	};
	return nullptr;;
}



inline jule::Bool _1a7b7e565_isFlag(_1a7b7c0bd_sema* _self_, jule::I32 _36018_flags) {
	return (((*(_self_))._field_flags & _36018_flags) == _36018_flags);;
}



inline jule::Ptr<_1a7a76d86_SymTab> _1a7b7e7eb_getCurrentFile(_1a7b7c0bd_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1a7b7eaa4_setCurrentFile(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a76d86_SymTab> _36334_f) {
	(*(_self_))._field_file=_36334_f;
}



inline void _1a7b7eec2_pushErr(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a79633b0_Token> _36523_token, jule::Str _36545_fmt, jule::Slice<jule::Any> _36565_args) {
	{ jule::Slice<_1bc0b03aa_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a7b79a49_compilerErr(&(_36523_token), true, _36545_fmt, _36565_args)); };
}



inline void _1a7b80335_pushSuggestion(_1a7b7c0bd_sema* _self_, jule::Str _37030_fmt, jule::Slice<jule::Any> _37050_args) {
	{
		_1a7b7ab6b_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _37030_fmt, _37050_args);
	};
}



inline jule::Bool _1a7b80731_isAccessibleDefine(_1a7b7c0bd_sema* _self_, jule::Bool _37630_public, jule::Ptr<_1a79633b0_Token> _37644_token) {
	if ((_37630_public || ((*(_37644_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _3813_selfDir = _1a7969ae2_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _3823_tokenDir = _1a7969ae2_Dir((*(_37644_token))._field_File.ptr());;
	if ((_3813_selfDir == _3823_tokenDir)) {
		return true;;
	};
	if ((_1a7b6455b_isStdPackage(&(_3823_tokenDir), jule::Str::lit("runtime", 7)) && _1a7b6455b_isStdPackage(&(_3813_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1a7b85a44_isDuplicatedIdent(_1a7b7c0bd_sema* _self_, jule::Uintptr _39929_itself, jule::Str* _39947_ident, jule::Bool _39959_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac78b1c2:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> *_40010_f = it;
			{
				if (_1a7a7a73b_isDuplicatedIdent((*(_40010_f)).ptr(), _39929_itself, _39947_ident, _39959_binded)) {
					return true;;
				};
			}
			_iter_next_1ac78b1c2:;
			++it;
			goto _iter_begin_1ac78b1c2;
		}
		_iter_end_1ac78b1c2:;
	};
	return false;;
}



inline void _1a7b85da7_checkDirectives(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Slice<jule::Ptr<_1a79781c7_Directive>>* _40837_d, jule::Any _40863_o) {
	_1a7b49e7b_directiveChecker _4097_dc = _1a7b49e7b_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1a79781c7_Directive>>>)(_40837_d)), ._field_o=_40863_o};;
	_1a7b4b70d_check(&_4097_dc);
}



inline jule::Bool _1a7b8635d_checkGenericQuantity(_1a7b7c0bd_sema* _self_, jule::I32 _41736_required, jule::I32 _41751_given, jule::Ptr<_1a79633b0_Token> _41763_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_41736_required == 0LL) && (_41751_given > 0LL))) {
			_case_begin_1ac78dc85:;
			{
				_1a7b7eec2_pushErr(_self_, _41763_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_41736_required > 0LL) && (_41751_given == 0LL))) {
			_case_begin_1ac78dceb:;
			{
				_1a7b7eec2_pushErr(_self_, _41763_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41736_required < _41751_given)) {
			_case_begin_1ac78dd73:;
			{
				_1a7b7eec2_pushErr(_self_, _41763_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41736_required > _41751_given)) {
			_case_begin_1ac78ddea:;
			{
				_1a7b7eec2_pushErr(_self_, _41763_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac78dbb9:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac78dadc:;
	};
}



inline jule::Bool _1a7b87392_isUseAliasDuplication(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _47538_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac792d11:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _47615_imp2 = *it;
			{
				if ((_47615_imp2 == (*(_47538_imp)))) {
					goto _iter_end_1ac792d11;
				};
				if (((*(_47615_imp2))._field_Alias == (*((*(_47538_imp))))._field_Alias)) {
					return true;;
				};
			}
			_iter_next_1ac792d11:;
			++it;
			goto _iter_begin_1ac792d11;
		}
		_iter_end_1ac792d11:;
	};
	return false;;
}



inline jule::Bool _1a7b876d3_checkAutoAlias(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _48735_imp) {
	if ((*((*(_48735_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
		return true;;
	};
	jule::Bool _4923_valid = _1a7ba391e_isValidImpAlias((*((*(_48735_imp))))._field_Alias);;
	if (_4923_valid) {
		if (_1a7b87392_isUseAliasDuplication(_self_, _48735_imp)) {
			_1a7b7eec2_pushErr(_self_, (*((*((*(_48735_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_48735_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48735_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	} else {
		_1a7b7eec2_pushErr(_self_, (*((*((*(_48735_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("import path is not suitable for auto-aliasing: @", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48735_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*((*(_48735_imp))))._field_Decl))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _4923_valid;;
}



inline jule::Bool _1a7b87a24_checkImport(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7b5e80e_ImportInfo>* _50532_imp) {
	if ((*((*(_50532_imp))))._field_Binded) {
		return true;;
	};
	if (((*((*((*(_50532_imp))))._field_Decl))._field_Alias != nullptr)) {
		if (_1a7965c97_IsIgnoreIdent((*((*(_50532_imp))))._field_Alias)) {
			_1a7b7eec2_pushErr(_self_, (*(*((*(_50532_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_1a7b87392_isUseAliasDuplication(_self_, _50532_imp)) {
			_1a7b7eec2_pushErr(_self_, (*(*((*(_50532_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50532_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
		if ((*((*(_50532_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
			_1a7b7eec2_pushErr(_self_, (*(*((*(_50532_imp))))._field_Decl.alloc)._field_Alias, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use \"std/unsafe\"", 16), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else if (((!(_1a7b599e6_isImplicitImport((*(_50532_imp))))) && (!(_1a7b876d3_checkAutoAlias(_self_, _50532_imp))))) {
		return false;;
	};
	if (((*((*((*(_50532_imp))))._field_Package))._field_Files.len() == 0LL)) {
		return true;;
	};
	if ((!((*((*(_50532_imp))))._field_Duplicate))) {
		jule::Ptr<_1a7b7c0bd_sema> _5328_sema = jule::new_ptr<_1a7b7c0bd_sema>(_1a7b7c0bd_sema{._field_errors=jule::Slice<_1bc0b03aa_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>(nullptr), ._field_file=jule::Ptr<_1a7a76d86_SymTab>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta, ._field_step=0LL});;
		_1a7ba10d1_check(_5328_sema, &((*((*((*(_50532_imp))))._field_Package))._field_Files));
		if (((*_5328_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_5328_sema.alloc)._field_errors);;
			(*_5328_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return true;;
}



inline void _1a7b87c22_checkImports(_1a7b7c0bd_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7a2da9:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _54715_file = *it;
			{
				_1a7b7eaa4_setCurrentFile(_self_, _54715_file);
				{
					auto expr = &((*(_54715_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac7a3b24:;
					if (it != expr_end) {
						jule::Ptr<_1a7b5e80e_ImportInfo> _54916_imp = *it;
						{
							jule::Bool _5505_ok = _1a7b87a24_checkImport(_self_, &(_54916_imp));;
							if ((!(_5505_ok))) {
								return;;
							};
						}
						_iter_next_1ac7a3b24:;
						++it;
						goto _iter_begin_1ac7a3b24;
					}
					_iter_end_1ac7a3b24:;
				};
			}
			_iter_next_1ac7a2da9:;
			++it;
			goto _iter_begin_1ac7a2da9;
		}
		_iter_end_1ac7a2da9:;
	};
}



inline void _1a7b87e20_implFileImpls(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7a34c5:;
		if (it != expr_end) {
			jule::Ptr<_1a7b29246_Impl> _56015_imp = *it;
			{
				_1a7b97ea7_implImpl(_self_, &(_56015_imp));
			}
			_iter_next_1ac7a34c5:;
			++it;
			goto _iter_begin_1ac7a34c5;
		}
		_iter_end_1ac7a34c5:;
	};
}



inline void _1a7b8811d_implImpls(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7a585c:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _56615_file = *it;
			{
				_1a7b7eaa4_setCurrentFile(_self_.ptr(), _56615_file);
				_1a7b87e20_implFileImpls(_self_);
			}
			_iter_next_1ac7a585c:;
			++it;
			goto _iter_begin_1ac7a585c;
		}
		_iter_end_1ac7a585c:;
	};
}



inline void _1a7b8831b_checkEnums(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7a68d5:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _57315_file = *it;
			{
				_1a7b7eaa4_setCurrentFile(_self_.ptr(), _57315_file);
				{
					
					if ((!(_1a7b943e3_checkEnumDecls(_self_)))) {
						_case_begin_1ac7a70ab:;
					}
					else if ((!(_1a7b94679_checkTypeEnumDecls(_self_)))) {
						_case_begin_1ac7a7683:;
					}
					_match_end_1ac7a75c8:;
				};
			}
			_iter_next_1ac7a68d5:;
			++it;
			goto _iter_begin_1ac7a68d5;
		}
		_iter_end_1ac7a68d5:;
	};
}



inline void _1a7b88519_checkFileInherits(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7a8464:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7b297_Trait> _58315_t = *it;
			{
				jule::Bool _5844_ok = _1a7b9603d__checkTraitDeclInherits(_self_, &(_58315_t));;
				if ((!(_5844_ok))) {
					return;;
				};
			}
			_iter_next_1ac7a8464:;
			++it;
			goto _iter_begin_1ac7a8464;
		}
		_iter_end_1ac7a8464:;
	};
}



inline void _1a7b88717_checkInherits(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7a895e:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _59215_file = *it;
			{
				_1a7b7eaa4_setCurrentFile(_self_.ptr(), _59215_file);
				_1a7b88519_checkFileInherits(_self_);
			}
			_iter_next_1ac7a895e:;
			++it;
			goto _iter_begin_1ac7a895e;
		}
		_iter_end_1ac7a895e:;
	};
}



inline _1a7c4564d_typeChecker _1a7b88bbd_typeChecker(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Trait _59832_l, jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _59847_generics, jule::Ptr<_1a7c4465d_referencer> _5997_referencer) {
	_1a7c4564d_typeChecker _6007_tc = _1a7c4564d_typeChecker{._field_s=_self_, ._field_rootLookup=_59832_l, ._field_lookup=_59832_l, ._field_referencer=_5997_referencer, ._field_refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_59847_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7c31848_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _59832_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)) {
			_case_begin_1ac7ab5ee:;
			{
				jule::Ptr<_1a7b34938_scopeChecker> _6098_hard = _1a7b3809b_getHardRoot(_59832_l.cast_ptr<_1a7b34938_scopeChecker>((jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));;
				_6007_tc._field_refers=(*((*(_6098_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1ac7ab588:;
	};
	if (((_5997_referencer != nullptr) && ((*_5997_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_5997_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ac7ace08:;
				{
					_6007_tc._field_ownerAlias=(*(_5997_referencer))._field_owner.unsafe_cast_ptr<_1a7c31848_TypeAlias>();
				}
			}
			_match_end_1ac7acd92:;
		};
	};
	return _6007_tc;;
}



inline jule::Ptr<_1a7c3255d_Type> _1a7b8922e_buildTypeWithRefers(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7978caa_TypeDecl>* _62541_t, jule::Trait _62564_l, jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _6267_generics, jule::Ptr<_1a7c4465d_referencer> _62635_referencer) {
	return ({ _1a7c4564d_typeChecker _wrap_copy = _1a7b88bbd_typeChecker(_self_, _62564_l, _6267_generics, _62635_referencer); _1a7c4d238_checkDecl(&_wrap_copy, _62541_t); });;
}



inline jule::Bool _1a7b89790_checkTypeSymWithRefers(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3a962_TypeSym>* _63244_t, jule::Trait _63261_l, jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _6337_generics, jule::Ptr<_1a7c4465d_referencer> _63335_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1a7c3ad19_checked((*(_63244_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_63244_t))))._field_Type=_1a7b8922e_buildTypeWithRefers(_self_, &((*((*(_63244_t))))._field_Decl), _63261_l, _6337_generics, _63335_referencer);
	__jule_func_result = _1a7c3ad19_checked((*(_63244_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1a7b26e47_constraintChecker> _1a7b89a26_constraintChecker(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	return jule::new_ptr<_1a7b26e47_constraintChecker>(_1a7b26e47_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_si=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_et=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1a7b89e22_checkTypeSym(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3a962_TypeSym>* _64734_t, jule::Trait _64751_l) {
	return _1a7b89790_checkTypeSymWithRefers(_self_, _64734_t, _64751_l, nullptr, nullptr);;
}



inline jule::Ptr<_1a7c3255d_Type> _1a7b8a3c8_checkTypeSymRefers(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7978caa_TypeDecl>* _65240_t, jule::Trait _65263_l, jule::Ptr<_1a7b4c786_ReferenceStack> _65278_refers) {
	jule::Ptr<_1a7c4564d_typeChecker> _6537_tc = jule::new_ptr<_1a7c4564d_typeChecker>(_1a7c4564d_typeChecker{._field_s=_self_, ._field_rootLookup=_65263_l, ._field_lookup=_65263_l, ._field_referencer=jule::Ptr<_1a7c4465d_referencer>(nullptr), ._field_refers=_65278_refers, ._field_errorToken=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7c31848_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a7c4d238_checkDecl(_6537_tc.ptr(), _65240_t);;
}



inline jule::Ptr<_1a7c3255d_Type> _1a7b8a87e_buildTypeWithGenerics(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7978caa_TypeDecl>* _66443_t, jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _6657_generics, jule::Ptr<_1a7b4c786_ReferenceStack> _66535_refers) {
	jule::Ptr<_1a7c4564d_typeChecker> _6667_tc = jule::new_ptr<_1a7c4564d_typeChecker>(_1a7c4564d_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1a7c4465d_referencer>(nullptr), ._field_refers=_66535_refers, ._field_errorToken=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_6657_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7c31848_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a7c4d238_checkDecl(_6667_tc.ptr(), _66443_t);;
}



inline jule::Ptr<_1a7c3255d_Type> _1a7b8b011_selectType(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7978caa_TypeDecl>* _68232_t) {
	jule::Ptr<_1a7c4564d_typeChecker> _6837_tc = jule::new_ptr<_1a7c4564d_typeChecker>(_1a7c4564d_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1a7c4465d_referencer>(nullptr), ._field_refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1a7c31848_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a7c4d238_checkDecl(_6837_tc.ptr(), _68232_t);;
}



inline jule::Ptr<_1a7c0086c_eval> _1a7b8b4b7_evalpd(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Trait _69427_l, jule::Ptr<_1a7c3255d_Type> _69442_p, jule::Ptr<_1a7ba4eb4_Var> _69456_owner) {
	jule::Ptr<_1a7c0086c_eval> _6957_e = jule::new_ptr<_1a7c0086c_eval>(_1a7c0086c_eval{._field_s=_self_, ._field_lookup=_69427_l, ._field_prefix=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_unsafety=false, ._field_disBuiltin=false, ._field_owner=_69456_owner, ._field_field=jule::Ptr<_1a7999d53_FieldIns>(nullptr), ._field_target=_1a7beedee_target{._field_ignored=false, ._field_mutable=false}});;
	{
		auto &_match_expr{ _69427_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)) {
			_case_begin_1ac7b8375:;
			{
				(*(_6957_e))._field_unsafety=_1a7b36d25_isUnsafe(_69427_l.cast_ptr<_1a7b34938_scopeChecker>((jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));
			}
		}
		_match_end_1ac7b830e:;
	};
	(*(_6957_e))._field_prefix=_69442_p;
	return _6957_e;;
}



inline jule::Ptr<_1a7c0086c_eval> _1a7b8b8b3_evalp(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Trait _70926_l, jule::Ptr<_1a7c3255d_Type> _70941_p) {
	return _1a7b8b4b7_evalpd(_self_, _70926_l, _70941_p, nullptr);;
}



inline jule::Ptr<_1a7c0086c_eval> _1a7b8bc04_eval(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Trait _71425_l) {
	return _1a7b8b8b3_evalp(_self_, _71425_l, nullptr);;
}



inline jule::Bool _1a7b8c320_checkAssignType(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Bool _71932_destIsRef, jule::Ptr<_1a7c3255d_Type>* _71954_dest, jule::Ptr<_1a7bed89d_Data>* _7208_d, jule::Ptr<_1a79633b0_Token> _72022_errorToken, jule::Ptr<_1a7b4c786_ReferenceStack> _72053_refers) {
	if ((*((*(_7208_d))))._field_Decl) {
		_1a7b7eec2_pushErr(_self_.ptr(), _72022_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_71932_destIsRef) {
		if ((!(_1a7c32c9a_Equal((*(_71954_dest)), (*((*(_7208_d))))._field_Type)))) {
			_1a7b7eec2_pushErr(_self_.ptr(), _72022_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_71954_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_7208_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1a7bdb77b_assignTypeChecker> _7318_atc = jule::new_ptr<_1a7bdb77b_assignTypeChecker>(_1a7bdb77b_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_71954_dest)), ._field_d=(*(_7208_d)), ._field_errorToken=_72022_errorToken, ._field_refers=_72053_refers});;
		jule::Bool _7384_ok = _1a7bdc77c_check(_7318_atc.ptr());;
		if ((!(_7384_ok))) {
			return false;;
		};
	};
	if (((!(_1a7bee2d8_IsConst((*(_7208_d)).ptr()))) || (_1a7c35671_Prim((*(_71954_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _7487_kind = (*(_1a7c35671_Prim((*(_71954_dest)).ptr())))._field_Kind;;
	{
		
		if (_1a7aedd42_IsSigInt(_7487_kind)) {
			_case_begin_1ac7c1306:;
			{
				_1a7a59ebd_SetI64((*((*(_7208_d))))._field_Constant.ptr(), _1a7a596e8_AsI64((*((*(_7208_d))))._field_Constant));
			}
		}
		else if (_1a7aee150_IsUnsigInt(_7487_kind)) {
			_case_begin_1ac7c138e:;
			{
				_1a7a5a276_SetU64((*((*(_7208_d))))._field_Constant.ptr(), _1a7a5997e_AsU64((*((*(_7208_d))))._field_Constant));
			}
		}
		else if (_1a7aee75a_IsFloat(_7487_kind)) {
			_case_begin_1ac7c1405:;
			{
				_1a7a5aa90_SetF64((*((*(_7208_d))))._field_Constant, _1a7a59c15_AsF64((*((*(_7208_d))))._field_Constant));
			}
		}
		_match_end_1ac7c124b:;
	};
	return true;;
}



inline jule::Bool _1a7b8c7c6__checkTypeCompatibility(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3255d_Type>* _76245_dest, jule::Ptr<_1a7c3255d_Type>* _76263_src, jule::Ptr<_1a79633b0_Token> _7637_errorToken) {
	if (((*(_76263_src)) == nullptr)) {
		return false;;
	};
	if ((_1a7c3772d_Tup((*(_76263_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1a7bd9900_typeCompatibilityChecker _7717_tcc = _1a7bd9900_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_76245_dest)), ._field_src=(*(_76263_src)), ._field_errorToken=_7637_errorToken};;
	return _1a7bdb0e9_check(&_7717_tcc);;
}



inline jule::Bool _1a7b8cc7c_checkTypeCompatibility(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3255d_Type>* _78044_dest, jule::Ptr<_1a7c3255d_Type>* _7818_src, jule::Ptr<_1a79633b0_Token>* _78125_errorToken) {
	if (_1a7b8c7c6__checkTypeCompatibility(_self_, _78044_dest, _7818_src, (*(_78125_errorToken)))) {
		return true;;
	};
	_1a7b7eec2_pushErr(_self_.ptr(), (*(_78125_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_78044_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_7818_src)).ptr()), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline void _1a7b8d19a_pushCompatiblityError(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7c3255d_Type>* _78942_dest, jule::Ptr<_1a7bed89d_Data>* _78960_src, jule::Ptr<_1a79633b0_Token>* _7908_errorToken) {
	if (((*((*(_78960_src))))._field_untyped && _1a7bee2d8_IsConst((*(_78960_src)).ptr()))) {
		{
			
			if (_1a7a5b024_IsI64((*((*(_78960_src))))._field_Constant.ptr())) {
				_case_begin_1ac7cb1bd:;
				{
					_1a7b7eec2_pushErr(_self_, (*(_7908_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_78942_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1a7a5b2aa_IsU64((*((*(_78960_src))))._field_Constant.ptr())) {
				_case_begin_1ac7cb267:;
				{
					_1a7b7eec2_pushErr(_self_, (*(_7908_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_78942_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1a7a5ba5d_IsF64((*((*(_78960_src))))._field_Constant)) {
				_case_begin_1ac7cb2cd:;
				{
					_1a7b7eec2_pushErr(_self_, (*(_7908_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_78942_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			_match_end_1ac7cb08b:;
		};
	};
	_1a7b7eec2_pushErr(_self_, (*(_7908_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_78942_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_78960_src))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1a7b8d651_checkTypeCompatibility1(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3255d_Type>* _80745_dest, jule::Ptr<_1a7bed89d_Data>* _80763_src, jule::Ptr<_1a79633b0_Token>* _8088_errorToken) {
	if (_1a7b8c7c6__checkTypeCompatibility(_self_, _80745_dest, &((*((*(_80763_src))))._field_Type), (*(_8088_errorToken)))) {
		return true;;
	};
	_1a7b8d19a_pushCompatiblityError(_self_.ptr(), _80745_dest, _80763_src, _8088_errorToken);
	return false;;
}



inline jule::Ptr<_1a7c3255d_Type> _1a7b8db07_buildNonGenericType(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7978caa_TypeDecl>* _82241_ast, jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>* _8238_generics, jule::Slice<jule::Ptr<_1a7c3255d_Type>>* _82344_ignored) {
	jule::Ptr<_1a7c4564d_typeChecker> _8247_tc = jule::new_ptr<_1a7c4564d_typeChecker>(_1a7c4564d_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1a7c4465d_referencer>(nullptr), ._field_refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_ignoreGenerics=(*(_8238_generics)), ._field_ignoredGenerics=_82344_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7c31848_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a7c4d238_checkDecl(_8247_tc.ptr(), _82241_ast);;
}



inline jule::Bool _1a7b8e003_buildFnNonGenericTypes(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns> _83443_f, jule::Slice<jule::Ptr<_1a7c3255d_Type>>* _83459_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>> _83511_generics = nullptr;;
	if (_1a7a712c0_IsMethod((*(_83443_f))._field_Decl.ptr())) {
		_83511_generics=jule::append((*(*(_83443_f))._field_Decl.alloc)._field_Generics,(*((*(*(_83443_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_83511_generics=(*((*(_83443_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1a7b9019c_basicFnEnvironment(_self_, &(_83443_f), jule::__new_closure<jule::Bool,jule::Ptr<_1a7b7c0bd_sema>*>((void*)__jule_anon_1ac7d69d1, jule::Ptr<__jule_anon_1ac7d69d1_ctx>::make(__jule_anon_1ac7d69d1_ctx{._83443_f=_83443_f,._83511_generics=_83511_generics,._83459_ignored=_83459_ignored}).as<jule::Uintptr>(), __jule_anon_1ac7d69d1_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1a7a73b41_FnIns> _1a7b8e344_getTraitCheckFnKind(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _85741_f) {
	if (((*((*(_85741_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_85741_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1a7a73b41_FnIns> _8617_ins = _1a7a72090_instanceForce((*(_85741_f)));;
	jule::Ptr<_1a7c4564d_typeChecker> _8637_tc = jule::new_ptr<_1a7c4564d_typeChecker>(_1a7c4564d_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1a7c4465d_referencer>(nullptr), ._field_refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7c31848_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_8617_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7dcce5:;
		if (it != expr_end) {
			jule::Ptr<_1a7a729db_ParamIns> _86815_p = *it;
			{
				if ((!(_1a7a6e70d_IsSelf((*(_86815_p))._field_Decl.ptr())))) {
					(*_86815_p.alloc)._field_Type=_1a7c4d238_checkDecl(_8637_tc.ptr(), &((*((*(*(_86815_p))._field_Decl.alloc)._field_TypeSym))._field_Decl));
					if (((*_86815_p.alloc)._field_Type == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1ac7dcce5:;
			++it;
			goto _iter_begin_1ac7dcce5;
		}
		_iter_end_1ac7dcce5:;
	};
	if ((!(_1a7a71039_IsVoid((*(_85741_f)).ptr())))) {
		(*_8617_ins.alloc)._field_Result=_1a7c4d238_checkDecl(_8637_tc.ptr(), &((*((*((*((*(_85741_f))))._field_Result))._field_TypeSym))._field_Decl));
		if (((*_8617_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _8617_ins;;
}



inline jule::Bool _1a7b8e7ea_checkConstraintsFn(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns>* _88640_f, jule::Ptr<_1a79633b0_Token>* _88656_et, jule::Ptr<_1a7a73b41_FnIns> _88679_exist) {
	jule::Ptr<_1a7b26e47_constraintChecker> _8877_cc = _1a7b89a26_constraintChecker(_self_);;
	(*(_8877_cc))._field_et=(*(_88656_et));
	(*_8877_cc.alloc)._field_fi=(*(_88640_f));
	if ((_88679_exist != nullptr)) {
		{
			auto expr = &((*_88679_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac7e2e2c:;
			if (it != expr_end) {
				jule::I32 _8919_i = it - expr->begin();
				jule::Ptr<_1a7c30b77_InsGeneric> _89116_g = *it;
				{
					(*((*((*(_88640_f))))._field_Generics[_8919_i]))._field_Constraint=(*(_89116_g))._field_Constraint;
				}
				_iter_next_1ac7e2e2c:;
				++it;
				_8919_i++;
				goto _iter_begin_1ac7e2e2c;
			}
			_iter_end_1ac7e2e2c:;
		};
	} else {
		(*_8877_cc.alloc)._field_uniq=true;
	};
	return _1a7b27db0_check(_8877_cc);;
}



inline jule::Bool _1a7b8eca1_checkConstraintsStruct(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a799a97a_StructIns>* _90044_s, jule::Ptr<_1a79633b0_Token>* _90064_et, jule::Ptr<_1a799a97a_StructIns> _90087_exist) {
	jule::Ptr<_1a7b26e47_constraintChecker> _9017_cc = _1a7b89a26_constraintChecker(_self_);;
	(*(_9017_cc))._field_et=(*(_90064_et));
	(*_9017_cc.alloc)._field_si=(*(_90044_s));
	if ((_90087_exist != nullptr)) {
		{
			auto expr = &((*_90087_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac7e60a6:;
			if (it != expr_end) {
				jule::I32 _9059_i = it - expr->begin();
				jule::Ptr<_1a7c30b77_InsGeneric> _90516_g = *it;
				{
					(*((*((*(_90044_s))))._field_Generics[_9059_i]))._field_Constraint=(*(_90516_g))._field_Constraint;
				}
				_iter_next_1ac7e60a6:;
				++it;
				_9059_i++;
				goto _iter_begin_1ac7e60a6;
			}
			_iter_end_1ac7e60a6:;
		};
	} else {
		(*_9017_cc.alloc)._field_uniq=true;
	};
	return _1a7b27db0_check(_9017_cc);;
}



inline jule::Bool _1a7b9019c_basicFnEnvironment(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns>* _91740_f, jule::Fn<jule::Bool,jule::Ptr<_1a7b7c0bd_sema>*> _91751_algo) {
	jule::Ptr<_1a7b7c0bd_sema> _9187_sema = (*((*((*(_91740_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1a7a76d86_SymTab> _9197_old = _1a7b7e7eb_getCurrentFile(_9187_sema.ptr());;
	jule::Ptr<_1a7a76d86_SymTab> _9207_file = _1a7b7a7c5_findFile(&((*_9187_sema.alloc)._field_files), &((*((*(*((*(_91740_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_9207_file != nullptr)) {
		_1a7b7eaa4_setCurrentFile(_9187_sema, _9207_file);
	};
	jule::Bool _9253_ok = _91751_algo(&(_9187_sema));;
	if ((_9187_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_9187_sema))._field_errors);
		(*_9187_sema.alloc)._field_errors=nullptr;
	};
	_1a7b7eaa4_setCurrentFile(_9187_sema.ptr(), _9197_old);
	return _9253_ok;;
}



inline jule::Bool _1a7b90598_fnEnvironment(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns>* _93735_f, jule::Fn<jule::Bool,jule::Ptr<_1a7b7c0bd_sema>*,jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>*> _93746_algo) {
	jule::I32 _9387_size = (*((*(_93735_f))))._field_Generics.len();;
	if ((((*((*(_93735_f))))._field_Decl != nullptr) && ((*(*((*(_93735_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_9387_size+=(*(*((*((*(_93735_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _9427_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>::alloc(0LL, _9387_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c31848_TypeAlias>(nullptr); __jule_collection; });;
	_1a7b7a451_appendGenericTypeAliases(&(_9427_generics), _93735_f);
	return _1a7b9019c_basicFnEnvironment(_self_, _93735_f, jule::__new_closure<jule::Bool,jule::Ptr<_1a7b7c0bd_sema>*>((void*)__jule_anon_1ac7ee6ec, jule::Ptr<__jule_anon_1ac7ee6ec_ctx>::make(__jule_anon_1ac7ee6ec_ctx{._93746_algo=_93746_algo,._9427_generics=_9427_generics}).as<jule::Uintptr>(), __jule_anon_1ac7ee6ec_ctx_handler));;
}



inline void _1a7b90851_checkFnParamKind(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a729db_ParamIns>* _94938_p) {
	(*((*((*(_94938_p))))._field_Type))._field_Variadic=(*((*((*(_94938_p))))._field_Decl))._field_Variadic;
}



inline jule::Bool _1a7b90b92_reloadFnInsTypes(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns> _95337_f) {
	if ((_1a7a75109_IsBuiltin(_95337_f.ptr()) || _1a7a75390_IsAnon(_95337_f.ptr()))) {
		return true;;
	};
	return _1a7b90598_fnEnvironment(_self_, &(_95337_f), jule::__new_closure<jule::Bool,jule::Ptr<_1a7b7c0bd_sema>*,jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>*>((void*)__jule_anon_1ac8020d4, jule::Ptr<__jule_anon_1ac8020d4_ctx>::make(__jule_anon_1ac8020d4_ctx{._95337_f=_95337_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac8020d4_ctx_handler));;
}



inline jule::Bool _1a7b91148_checkRefValidityForInitExpr(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Bool _99344_leftMut, jule::Ptr<_1a7bed89d_Data>* _99364_d, jule::Ptr<_1a79633b0_Token>* _99379_errorToken) {
	if ((!(_1a7b7951b_isValidModelForRef(&((*((*(_99364_d))))._field_Model))))) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*(_99379_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_99344_leftMut && (!((*((*(_99364_d))))._field_Mutable)))) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*(_99379_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1a7b91489_isMutRiskyStruct(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a799a97a_StructIns>* _101029_s) {
	{
		auto expr = &((*((*(_101029_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac80c089:;
		if (it != expr_end) {
			jule::Ptr<_1a7999d53_FieldIns> *_101110_f = it;
			{
				if ((((*((*((*(_101110_f))))._field_Decl))._field_Mutable && _1a7c348a1_Mutable((*(*(_101110_f)).alloc)._field_Type.ptr())) && _1a7b80731_isAccessibleDefine(_self_, (*(*((*(_101110_f))))._field_Decl.alloc)._field_Public, (*(*((*(_101110_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1ac80c089:;
			++it;
			goto _iter_begin_1ac80c089;
		}
		_iter_end_1ac80c089:;
	};
	return false;;
}



inline jule::Bool _1a7b91aa5_checkValidityForInitExpr(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Bool _103741_leftMut, jule::Bool _103756_leftRef, jule::Ptr<_1a7c3255d_Type>* _10384_leftKind, jule::Ptr<_1a7bed89d_Data>* _103826_d, jule::Ptr<_1a79633b0_Token>* _103841_errorToken) {
	if ((_103741_leftMut && (!((*((*(_103826_d))))._field_Mutable)))) {
		if ((_1a7c348a1_Mutable((*((*(_103826_d))))._field_Type.ptr()) || (*((*((*(_103826_d))))._field_Type))._field_Variadic)) {
			_1a7b7eec2_pushErr(_self_.ptr(), (*(_103841_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_103826_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1a799a97a_StructIns> _10464_s = _1a7c36be4_Struct((*((*(_103826_d))))._field_Type.ptr());;
		if (((_10464_s != nullptr) && _1a7b91489_isMutRiskyStruct(_self_.ptr(), &(_10464_s)))) {
			_1a7b7eec2_pushErr(_self_, (*(_103841_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_103826_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	};
	if (_103756_leftRef) {
		if ((!(_1a7b91148_checkRefValidityForInitExpr(_self_, _103741_leftMut, _103826_d, _103841_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1a7bdb77b_assignTypeChecker> _10577_atc = jule::new_ptr<_1a7bdb77b_assignTypeChecker>(_1a7bdb77b_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_d=(*(_103826_d)), ._field_errorToken=(*(_103841_errorToken)), ._field_refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr)});;
	return _1a7bdbec9_checkValidity(_10577_atc.ptr());;
}



inline jule::Bool _1a7b91ea1_checkTypeAliasDeclKind(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c31848_TypeAlias>* _106544_ta, jule::Trait _106564_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7a76d86_SymTab> _10667_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a7b7eaa4_setCurrentFile(_self_, _10667_old);
	});;
	if (((*((*(_106544_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1a7a76d86_SymTab> _10718_file = _1a7b7a7c5_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_106544_ta))))._field_Token.alloc)._field_File));;
		if ((_10718_file != nullptr)) {
			_1a7b7eaa4_setCurrentFile(_self_, _10718_file);
		};
	};
	__jule_func_result=_1a7b89790_checkTypeSymWithRefers(_self_, &((*((*(_106544_ta))))._field_TypeSym), _106564_l, nullptr, jule::new_ptr<_1a7c4465d_referencer>(_1a7c4465d_referencer{._field_ident=(*((*(_106544_ta))))._field_Ident, ._field_owner=jule::Any((*(_106544_ta)), &__jule_any_type8), ._field_refs=(&((*((*(_106544_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1a7c36441_Arr((*((*((*(_106544_ta))))._field_TypeSym))._field_Type.ptr()) != nullptr)) && (*(_1a7c36441_Arr((*((*((*(_106544_ta))))._field_TypeSym))._field_Type)))._field_Auto)) {
		_1a7b7eec2_pushErr(_self_, (*((*(*((*(_106544_ta))))._field_TypeSym.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7b9239c_checkTypeAliasDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c31848_TypeAlias>* _108840_ta, jule::Trait _108860_l) {
	jule::Bool __jule_func_result = false;
	if (_1a7965c97_IsIgnoreIdent((*((*(_108840_ta))))._field_Ident)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_108840_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_108840_ta))))._field_TypeSym))._field_Type != nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result=_1a7b91ea1_checkTypeAliasDeclKind(_self_, _108840_ta, _108860_l);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((!((*((*(_108840_ta))))._field_Strict))) {
		if ((*((*(_108840_ta))))._field_Binded) {
			_1a7b7eec2_pushErr(_self_, (*((*(_108840_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded type aliases cannot be soft type alias", 45)), jule::Slice<jule::Any>());
			_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("define as strict type alias with colon sign, like: type @: <type>", 65)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_108840_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		};
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a799a97a_StructIns> _11097_s = _1a7c51109_initNewStructType((*((*(_108840_ta))))._field_Ident, (*((*((*(_108840_ta))))._field_TypeSym))._field_Type);;
	(*((*(_11097_s))._field_Decl))._field_sema=_self_;
	(*(*(_11097_s))._field_Decl.alloc)._field_Binded=(*((*(_108840_ta))))._field_Binded;
	(*(*(_11097_s))._field_Decl.alloc)._field_Token=(*((*(_108840_ta))))._field_Token;
	(*(*(_11097_s))._field_Decl.alloc)._field_Public=(*((*(_108840_ta))))._field_Public;
	(*(*((*(_108840_ta))))._field_TypeSym.alloc)._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_11097_s, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)});
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a7b92655_checkTypeAliasDeclDup(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c31848_TypeAlias>* _111943_ta) {
	if (_1a7b85a44_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_111943_ta))), &((*((*(_111943_ta))))._field_Ident), (*((*(_111943_ta))))._field_Binded)) {
		_1a7b7eec2_pushErr(_self_, (*((*(_111943_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_111943_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1a7b9239c_checkTypeAliasDecl(_self_, _111943_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4));
}



inline jule::Bool _1a7b928db_checkTypeAliasDecls(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8251a1:;
		if (it != expr_end) {
			jule::Ptr<_1a7c31848_TypeAlias> _112915_ta = *it;
			{
				_1a7b92655_checkTypeAliasDeclDup(_self_, &(_112915_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac8251a1:;
			++it;
			goto _iter_begin_1ac8251a1;
		}
		_iter_end_1ac8251a1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ac274a9b_checkEnumItemsDup(_1a7b7c0bd_sema* _self_, jule::Slice<jule::Ptr<_1a7a7cde2_EnumItem>> _114036_items) {
	{
		auto expr = &(_114036_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2752a5:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7cde2_EnumItem> *_114110_item = it;
			{
				if (((*((*(_114110_item))))._field_Ident).empty()) {
					goto _iter_next_1ac2752a5;
				} else if (_1a7965c97_IsIgnoreIdent((*((*(_114110_item))))._field_Ident)) {
					_1a7b7eec2_pushErr(_self_, (*(*(_114110_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_114036_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac277ad2:;
						if (it != expr_end) {
							jule::Ptr<_1a7a7cde2_EnumItem> *_114712_citem = it;
							{
								if (((*(_114110_item)) == (*(_114712_citem)))) {
									goto _iter_end_1ac277ad2;
								} else if (((*(*(_114110_item)).alloc)._field_Ident == (*((*(_114712_citem))))._field_Ident)) {
									_1a7b7eec2_pushErr(_self_, (*(*(_114110_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_114110_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1ac277ad2;
								};
							}
							_iter_next_1ac277ad2:;
							++it;
							goto _iter_begin_1ac277ad2;
						}
						_iter_end_1ac277ad2:;
					};
				};
			}
			_iter_next_1ac2752a5:;
			++it;
			goto _iter_begin_1ac2752a5;
		}
		_iter_end_1ac2752a5:;
	};
}

inline void _1ac28279b_checkEnumItemsDup(_1a7b7c0bd_sema* _self_, jule::Slice<jule::Ptr<_1a7a7ea81_TypeEnumItem>> _114036_items) {
	{
		auto expr = &(_114036_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac282ec7:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7ea81_TypeEnumItem> *_114110_item = it;
			{
				if (((*((*(_114110_item))))._field_Ident).empty()) {
					goto _iter_next_1ac282ec7;
				} else if (_1a7965c97_IsIgnoreIdent((*((*(_114110_item))))._field_Ident)) {
					_1a7b7eec2_pushErr(_self_, (*(*(_114110_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_114036_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac2857b0:;
						if (it != expr_end) {
							jule::Ptr<_1a7a7ea81_TypeEnumItem> *_114712_citem = it;
							{
								if (((*(_114110_item)) == (*(_114712_citem)))) {
									goto _iter_end_1ac2857b0;
								} else if (((*(*(_114110_item)).alloc)._field_Ident == (*((*(_114712_citem))))._field_Ident)) {
									_1a7b7eec2_pushErr(_self_, (*(*(_114110_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_114110_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1ac2857b0;
								};
							}
							_iter_next_1ac2857b0:;
							++it;
							goto _iter_begin_1ac2857b0;
						}
						_iter_end_1ac2857b0:;
					};
				};
			}
			_iter_next_1ac282ec7:;
			++it;
			goto _iter_begin_1ac282ec7;
		}
		_iter_end_1ac282ec7:;
	};
}



inline void _1a7b92e4c_checkEnumItemsStr(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7d94d_Enum>* _116039_e) {
	jule::Ptr<_1a7c0086c_eval> _11617_eval = _1a7b8bc04_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4));;
	{
		auto expr = &((*((*(_116039_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac826dc8:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7cde2_EnumItem> _116215_item = *it;
			{
				if (_1a7a7d2bb_AutoExpr(_116215_item.ptr())) {
					(*_116215_item.alloc)._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a7a57ce0_NewStr((*_116215_item.alloc)._field_Ident)})});
					(*((*((*_116215_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_116215_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
				} else {
					jule::Ptr<_1a7bed89d_Data> _11719_d = _1a7c204d5_evalExpr(_11617_eval, (*((*(_116215_item))._field_Value))._field_Expr);;
					if ((_11719_d == nullptr)) {
						goto _iter_next_1ac826dc8;
					};
					if ((!(_1a7bee2d8_IsConst(_11719_d.ptr())))) {
						_1a7b7eec2_pushErr(_self_, (*((*(*(_116215_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_1a7b4c786_ReferenceStack> _11809_refers = static_cast<jule::Ptr<_1a7b4c786_ReferenceStack>>(nullptr);;
					_1a7b8c320_checkAssignType(_self_, false, &((*((*((*(_116039_e))))._field_TypeSym))._field_Type), &(_11719_d), (*_116215_item.alloc)._field_Token, _11809_refers);
					(*(*(_116215_item))._field_Value.alloc)._field_Data=_11719_d;
				};
			}
			_iter_next_1ac826dc8:;
			++it;
			goto _iter_begin_1ac826dc8;
		}
		_iter_end_1ac826dc8:;
	};
}



inline void _1ac832d5c_checkEnumItemInt(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c0086c_eval>* _118743_eval, jule::Ptr<_1a7a7d94d_Enum>* _118761_e, jule::Ptr<_1a7c3b369_Prim>* _118772_prim, jule::Ptr<_1a7a7cde2_EnumItem>* _118790_item, jule::U64* _1187112_n) {
	if (_1a7a7d2bb_AutoExpr((*(_118790_item)).ptr())) {
		(*((*(_118790_item))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		{
			
{
				_case_begin_1ac83504b:;
				{
					(*((*((*((*(_118790_item))))._field_Value))._field_Data))._field_Constant=static__1a7a5775c_NewU64((*(_1187112_n)));
				}
			}
			_match_end_1ac835821:;
		};
		(*((*((*((*(_118790_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_118790_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1a7bed89d_Data> _12028_d = _1a7c204d5_evalExpr((*(_118743_eval)), (*((*((*(_118790_item))))._field_Value))._field_Expr);;
		if ((_12028_d == nullptr)) {
			return;;
		};
		if ((!(_1a7bee2d8_IsConst(_12028_d.ptr())))) {
			_1a7b7eec2_pushErr(_self_.ptr(), (*((*(*((*(_118790_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a7b4c786_ReferenceStack> _12098_refers = static_cast<jule::Ptr<_1a7b4c786_ReferenceStack>>(nullptr);;
		_1a7b8c320_checkAssignType(_self_, false, &((*((*((*(_118761_e))))._field_TypeSym))._field_Type), &(_12028_d), (*((*(_118790_item))))._field_Token, _12098_refers);
		(*(*((*(_118790_item))))._field_Value.alloc)._field_Data=_12028_d;
		{
			
{
				_case_begin_1ac8399bd:;
				{
					(*(_1187112_n))=_1a7a58bae_ReadU64((*((*(*((*(_118790_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1ac83ac99:;
		};
	};
}

inline void _1abe0b689_checkEnumItemInt(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c0086c_eval>* _118743_eval, jule::Ptr<_1a7a7d94d_Enum>* _118761_e, jule::Ptr<_1a7c3b369_Prim>* _118772_prim, jule::Ptr<_1a7a7cde2_EnumItem>* _118790_item, jule::I64* _1187112_n) {
	if (_1a7a7d2bb_AutoExpr((*(_118790_item)).ptr())) {
		(*((*(_118790_item))))._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})});
		{
			
{
				_case_begin_1abd15e34:;
				{
					(*((*((*((*(_118790_item))))._field_Value))._field_Data))._field_Constant=static__1a7a574d7_NewI64((*(_1187112_n)));
				}
			}
			_match_end_1abd4664b:;
		};
		(*((*((*((*(_118790_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_118790_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1a7bed89d_Data> _12028_d = _1a7c204d5_evalExpr((*(_118743_eval)), (*((*((*(_118790_item))))._field_Value))._field_Expr);;
		if ((_12028_d == nullptr)) {
			return;;
		};
		if ((!(_1a7bee2d8_IsConst(_12028_d.ptr())))) {
			_1a7b7eec2_pushErr(_self_.ptr(), (*((*(*((*(_118790_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a7b4c786_ReferenceStack> _12098_refers = static_cast<jule::Ptr<_1a7b4c786_ReferenceStack>>(nullptr);;
		_1a7b8c320_checkAssignType(_self_, false, &((*((*((*(_118761_e))))._field_TypeSym))._field_Type), &(_12028_d), (*((*(_118790_item))))._field_Token, _12098_refers);
		(*(*((*(_118790_item))))._field_Value.alloc)._field_Data=_12028_d;
		{
			
{
				_case_begin_1ac26bc3b:;
				{
					(*(_1187112_n))=_1a7a58928_ReadI64((*((*(*((*(_118790_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1ac26bbc5:;
		};
	};
}



inline void _1ac82e199_checkEnumItemsInt1(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3b369_Prim>* _122341_prim, jule::Ptr<_1a7a7d94d_Enum>* _122359_e) {
	jule::U64 _12247_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1ac830c5b:;
			{
				_12247_max=_1a7aec648_MaxU(_1a7c3b6dd_Str((*(_122341_prim)).ptr()));
			}
		}
		_match_end_1ac830d38:;
	};
	jule::Ptr<_1a7c0086c_eval> _12347_eval = _1a7b8bc04_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4));;
	jule::U64 _12357_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a7a7cde2_EnumItem> _12367_first = (*((*(_122359_e))))._field_Items[0LL];;
	_1ac832d5c_checkEnumItemInt(_self_, &(_12347_eval), _122359_e, _122341_prim, &(_12367_first), &(_12357_n));
	if (((*((*(_12367_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ac830585:;
				{
					_12357_n=_1a7a5997e_AsU64((*(*((*(_12367_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1ac833753:;
		};
	};
	{
		auto expr = (*((*(_122359_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac83c828:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7cde2_EnumItem> _124815_item = *it;
			{
				if (((_1a7a7d2bb_AutoExpr(_124815_item.ptr()) && (_12357_n > 0LLU)) && ((jule::U64)(_12247_max - _12357_n) <= 0LLU))) {
					_1a7b7eec2_pushErr(_self_, (*_124815_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1ac83c828;
				};
				(_12357_n)++;
				_1ac832d5c_checkEnumItemInt(_self_, &(_12347_eval), _122359_e, _122341_prim, &(_124815_item), &(_12357_n));
			}
			_iter_next_1ac83c828:;
			++it;
			goto _iter_begin_1ac83c828;
		}
		_iter_end_1ac83c828:;
	};
}

inline void _1ac82e474_checkEnumItemsInt1(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7c3b369_Prim>* _122341_prim, jule::Ptr<_1a7a7d94d_Enum>* _122359_e) {
	jule::I64 _12247_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1ac84119a:;
			{
				_12247_max=_1a7aec37e_MaxI(_1a7c3b6dd_Str((*(_122341_prim)).ptr()));
			}
		}
		_match_end_1ac841134:;
	};
	jule::Ptr<_1a7c0086c_eval> _12347_eval = _1a7b8bc04_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4));;
	jule::I64 _12357_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1a7a7cde2_EnumItem> _12367_first = (*((*(_122359_e))))._field_Items[0LL];;
	_1abe0b689_checkEnumItemInt(_self_, &(_12347_eval), _122359_e, _122341_prim, &(_12367_first), &(_12357_n));
	if (((*((*(_12367_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ac269354:;
				{
					_12357_n=_1a7a596e8_AsI64((*(*((*(_12367_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1abde35c7:;
		};
	};
	{
		auto expr = (*((*(_122359_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac26d9eb:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7cde2_EnumItem> _124815_item = *it;
			{
				if (((_1a7a7d2bb_AutoExpr(_124815_item.ptr()) && (_12357_n > 0LL)) && ((_12247_max - _12357_n) <= 0LL))) {
					_1a7b7eec2_pushErr(_self_, (*_124815_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1ac26d9eb;
				};
				(_12357_n)++;
				_1abe0b689_checkEnumItemInt(_self_, &(_12347_eval), _122359_e, _122341_prim, &(_124815_item), &(_12357_n));
			}
			_iter_next_1ac26d9eb:;
			++it;
			goto _iter_begin_1ac26d9eb;
		}
		_iter_end_1ac26d9eb:;
	};
}



inline void _1a7b93aeb_checkEnumItemsInt(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7d94d_Enum>* _125839_e) {
	jule::Ptr<_1a7c3b369_Prim> _12593_prim = _1a7c35671_Prim((*((*((*(_125839_e))))._field_TypeSym))._field_Type.ptr());;
	{
		
		if (_1a7aedd42_IsSigInt((*(_12593_prim))._field_Kind)) {
			_case_begin_1ac83844a:;
			{
				_1ac82e474_checkEnumItemsInt1(_self_, &(_12593_prim), _125839_e);
			}
		}
		else {
			_case_begin_1ac82d8e6:;
			{
				_1ac82e199_checkEnumItemsInt1(_self_, &(_12593_prim), _125839_e);
			}
		}
		_match_end_1ac82d86e:;
	};
}



inline void _1a7b93da4_checkEnumDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7d94d_Enum>* _126835_e) {
	if (_1a7965c97_IsIgnoreIdent((*((*(_126835_e))))._field_Ident)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_126835_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a7b85a44_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_126835_e))), &((*((*(_126835_e))))._field_Ident), false)) {
		_1a7b7eec2_pushErr(_self_, (*((*(_126835_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_126835_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_126835_e))))._field_Items.len() == 0LL)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_126835_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_126835_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1ac274a9b_checkEnumItemsDup(_self_.ptr(), (*((*(_126835_e))))._field_Items);
	if (((*((*(_126835_e))))._field_TypeSym != nullptr)) {
		if ((!(_1a7b89e22_checkTypeSym(_self_, &((*((*(_126835_e))))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4))))) {
			return;;
		};
	} else {
		(*((*(_126835_e))))._field_TypeSym=(*(_1a7ca9b35_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	jule::Ptr<_1a7c3b369_Prim> _12927_t = _1a7c35671_Prim((*((*((*(_126835_e))))._field_TypeSym))._field_Type.ptr());;
	if ((_12927_t == nullptr)) {
		_1a7b7eec2_pushErr(_self_, (*((*(_126835_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a7c3e834_IsStr(_12927_t.ptr())) {
			_case_begin_1ac27c09d:;
			{
				_1a7b92e4c_checkEnumItemsStr(_self_, _126835_e);
			}
		}
		else if (_1a7aee419_IsInt(_1a7c3b6dd_Str(_12927_t.ptr()))) {
			_case_begin_1ac27bcd4:;
			{
				_1a7b93aeb_checkEnumItemsInt(_self_, _126835_e);
			}
		}
		else {
			_case_begin_1ac27bc6d:;
			{
				_1a7b7eec2_pushErr(_self_, (*((*(_126835_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac27b256:;
	};
}



inline void _1a7b9415c_checkTypeEnumDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a80158_TypeEnum>* _130939_e) {
	if (_1a7965c97_IsIgnoreIdent((*((*(_130939_e))))._field_Ident)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_130939_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a7b85a44_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_130939_e))), &((*((*(_130939_e))))._field_Ident), false)) {
		_1a7b7eec2_pushErr(_self_, (*((*(_130939_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_130939_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_130939_e))))._field_Items.len() == 0LL)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_130939_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_130939_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1ac28279b_checkEnumItemsDup(_self_.ptr(), (*((*(_130939_e))))._field_Items);
	{
		auto expr = &((*((*(_130939_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac27db4e:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7ea81_TypeEnumItem> _132315_item = *it;
			{
				if (((*(_132315_item))._field_TypeSym == nullptr)) {
					_1a7b7eec2_pushErr(_self_, (*_132315_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_1ac27db4e;
				};
				jule::Bool _13284_ok = _1a7b89e22_checkTypeSym(_self_, &((*(_132315_item))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4));;
				if ((!(_13284_ok))) {
					goto _iter_next_1ac27db4e;
				};
				jule::Ptr<_1a7c3b369_Prim> _13324_p = _1a7c35671_Prim((*((*_132315_item.alloc)._field_TypeSym))._field_Type.ptr());;
				if (((_13324_p != nullptr) && _1a7c3eaba_IsAny(_13324_p))) {
					_1a7b7eec2_pushErr(_self_, (*_132315_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ac27db4e:;
			++it;
			goto _iter_begin_1ac27db4e;
		}
		_iter_end_1ac27db4e:;
	};
	if (((*((*(_130939_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1a7a7ea81_TypeEnumItem> _13388_item = (*((*(_130939_e))))._field_Items[0LL];;
		_1a7c3255d_Type _13394_tk = _1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_130939_e)), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data4)};;
		if ((((*((*(_13388_item))._field_TypeSym))._field_Type != nullptr) && _1a7c32c9a_Equal((*((*(_13388_item))._field_TypeSym))._field_Type, ((jule::Ptr<_1a7c3255d_Type>)((&(_13394_tk))))))) {
			_1a7b7eec2_pushErr(_self_, (*_13388_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7a804cc_Str((*(_130939_e)).ptr()), &__jule_any_type5); __jule_collection; }));
		};
	};
}



inline jule::Bool _1a7b943e3_checkEnumDecls(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac28de6c:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7d94d_Enum> _135015_e = *it;
			{
				_1a7b93da4_checkEnumDecl(_self_, &(_135015_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac28de6c:;
			++it;
			goto _iter_begin_1ac28de6c;
		}
		_iter_end_1ac28de6c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7b94679_checkTypeEnumDecls(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2905cd:;
		if (it != expr_end) {
			jule::Ptr<_1a7a80158_TypeEnum> _136215_e = *it;
			{
				_1a7b9415c_checkTypeEnumDecl(_self_, &(_136215_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac2905cd:;
			++it;
			goto _iter_begin_1ac2905cd;
		}
		_iter_end_1ac2905cd:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7b949ba_checkDeclGenerics(_1a7b7c0bd_sema* _self_, jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>* _137234_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _137234_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac290c0a:;
		if (it != expr_end) {
			jule::I32 _13747_i = it - expr->begin();
			jule::Ptr<_1a7985eb5_GenericDecl> *_137410_g = it;
			{
				if (_1a7965c97_IsIgnoreIdent((*((*(_137410_g))))._field_Ident)) {
					_1a7b7eec2_pushErr(_self_, (*(*(_137410_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ac290c0a;
				};
				_julec_label_1ac2930a3:;
				{
					auto expr = _137234_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac293603:;
					if (it != expr_end) {
						jule::I32 _13838_j = it - expr->begin();
						jule::Ptr<_1a7985eb5_GenericDecl> *_138311_ct = it;
						{
							{
								
								if ((_13838_j >= _13747_i)) {
									_case_begin_1ac29425d:;
									{
										goto _iter_end_1ac293603;
									}
								}
								else if (((*((*(_137410_g))))._field_Ident == (*((*(_138311_ct))))._field_Ident)) {
									_case_begin_1ac2942e6:;
									{
										_1a7b7eec2_pushErr(_self_, (*(*(_137410_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137410_g)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1ac293603;
									}
								}
								_match_end_1ac29414d:;
							};
						}
						_iter_next_1ac293603:;
						++it;
						_13838_j++;
						goto _iter_begin_1ac293603;
					}
					_iter_end_1ac293603:;
				};
			}
			_iter_next_1ac290c0a:;
			++it;
			_13747_i++;
			goto _iter_begin_1ac290c0a;
		}
		_iter_end_1ac290c0a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7b94d0b_checkFnDeclParamsDup(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a70a83_Fn>* _139937_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1ac292426:;
	{
		auto expr = &((*((*(_139937_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac294e84:;
		if (it != expr_end) {
			jule::I32 _14027_i = it - expr->begin();
			jule::Ptr<_1a7a6e0ae_Param> *_140210_p = it;
			{
				{
					auto expr = &((*((*(_139937_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac296ded:;
					if (it != expr_end) {
						jule::Ptr<_1a7985eb5_GenericDecl> *_140411_g = it;
						{
							if (((*((*(_140210_p))))._field_Ident == (*((*(_140411_g))))._field_Ident)) {
								__jule_func_result=false;
								_1a7b7eec2_pushErr(_self_, (*(*(_140210_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_140210_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_1ac294e84;
							};
						}
						_iter_next_1ac296ded:;
						++it;
						goto _iter_begin_1ac296ded;
					}
					_iter_end_1ac296ded:;
				};
				_julec_label_1ac298dcd:;
				{
					auto expr = &((*((*(_139937_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2973c6:;
					if (it != expr_end) {
						jule::I32 _14148_j = it - expr->begin();
						jule::Ptr<_1a7a6e0ae_Param> *_141411_jp = it;
						{
							{
								
								if ((_14148_j >= _14027_i)) {
									_case_begin_1ac2999d3:;
									{
										goto _iter_end_1ac2973c6;
									}
								}
								else if (_1a7965c97_IsIgnoreIdent((*((*(_140210_p))))._field_Ident) || _1a7965c97_IsIgnoreIdent((*((*(_141411_jp))))._field_Ident) || _1a7966061_IsAnonIdent((*(*(_140210_p)).alloc)._field_Ident) || _1a7966061_IsAnonIdent((*(*(_141411_jp)).alloc)._field_Ident)) {
									_case_begin_1ac299a6b:;
									{
										goto _iter_end_1ac2973c6;
									}
								}
								else if (((*(*(_140210_p)).alloc)._field_Ident == (*(*(_141411_jp)).alloc)._field_Ident)) {
									_case_begin_1ac299ad2:;
									{
										__jule_func_result=false;
										_1a7b7eec2_pushErr(_self_, (*(*(_140210_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_140210_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_1ac294e84;
									}
								}
								_match_end_1ac29987e:;
							};
						}
						_iter_next_1ac2973c6:;
						++it;
						_14148_j++;
						goto _iter_begin_1ac2973c6;
					}
					_iter_end_1ac2973c6:;
				};
			}
			_iter_next_1ac294e84:;
			++it;
			_14027_i++;
			goto _iter_begin_1ac294e84;
		}
		_iter_end_1ac294e84:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7b9514c_checkFnDeclResultDup(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a70a83_Fn>* _143641_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1a7a71039_IsVoid((*(_143641_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_143641_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac29cdb0:;
		if (it != expr_end) {
			jule::I32 _14437_i = it - expr->begin();
			jule::Ptr<_1a79633b0_Token> _144310_v = *it;
			{
				if ((_1a7965c97_IsIgnoreIdent((*(_144310_v))._field_Kind) || _1a7966061_IsAnonIdent((*(_144310_v))._field_Kind))) {
					goto _iter_next_1ac29cdb0;
				};
				{
					auto expr = &((*((*(_143641_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac29e532:;
					if (it != expr_end) {
						jule::Ptr<_1a7985eb5_GenericDecl> _144811_g = *it;
						{
							if (((*(_144310_v))._field_Kind == (*(_144811_g))._field_Ident)) {
								goto _julec_label_1ac29d94e;
							};
						}
						_iter_next_1ac29e532:;
						++it;
						goto _iter_begin_1ac29e532;
					}
					_iter_end_1ac29e532:;
				};
				{
					auto expr = &((*((*(_143641_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac29e8ea:;
					if (it != expr_end) {
						jule::Ptr<_1a7a6e0ae_Param> _145411_p = *it;
						{
							if (((*(_144310_v))._field_Kind == (*(_145411_p))._field_Ident)) {
								goto _julec_label_1ac29d94e;
							};
						}
						_iter_next_1ac29e8ea:;
						++it;
						goto _iter_begin_1ac29e8ea;
					}
					_iter_end_1ac29e8ea:;
				};
				_julec_label_1ac2a1127:;
				{
					auto expr = &((*((*((*(_143641_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2a149b:;
					if (it != expr_end) {
						jule::I32 _14628_j = it - expr->begin();
						jule::Ptr<_1a79633b0_Token> _146211_jv = *it;
						{
							{
								
								if ((_14628_j >= _14437_i)) {
									_case_begin_1ac2a20b2:;
									{
										goto _iter_end_1ac2a149b;
									}
								}
								else if (((*(_146211_jv))._field_Kind == (*(_144310_v))._field_Kind)) {
									_case_begin_1ac2a214a:;
									{
										goto _julec_label_1ac29d94e;
									}
								}
								_match_end_1ac2a1ea2:;
							};
						}
						_iter_next_1ac2a149b:;
						++it;
						_14628_j++;
						goto _iter_begin_1ac2a149b;
					}
					_iter_end_1ac2a149b:;
				};
				goto _iter_next_1ac29cdb0;
				_julec_label_1ac29d94e:;
				_1a7b7eec2_pushErr(_self_, _144310_v, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_144310_v))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1ac29cdb0:;
			++it;
			_14437_i++;
			goto _iter_begin_1ac29cdb0;
		}
		_iter_end_1ac29cdb0:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7b9548d_checkFnVariadicParam(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _148142_f) {
	if (((*((*(_148142_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1a7a6e0ae_Param> _14857_param = (*((*(_148142_f))))._field_Params[((*((*(_148142_f))))._field_Params.len() - 1LL)];;
	if (((*(_14857_param))._field_Variadic && (*_14857_param.alloc)._field_Reference)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*_14857_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1a7b95746_checkFnDeclPrototype(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _149442_f) {
	if (((*((*(_149442_f))))._field_Exceptional && (*((*(_149442_f))))._field_Binded)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_149442_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_149442_f))))._field_Exceptional) {
		if (_1a7a71556_IsEntryPoint((*(_149442_f)).ptr())) {
			_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_149442_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_1a7a717dc_IsInit((*(_149442_f)).ptr())) {
			_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_149442_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a7b949ba_checkDeclGenerics(_self_.ptr(), &((*((*(_149442_f))))._field_Generics))))) {
			_case_begin_1ac2a8b57:;
		}
		else if ((!(_1a7b94d0b_checkFnDeclParamsDup(_self_.ptr(), _149442_f)))) {
			_case_begin_1ac2a8bbd:;
		}
		else if ((!(_1a7b9514c_checkFnDeclResultDup(_self_, _149442_f)))) {
			_case_begin_1ac2a8c34:;
		}
		else if ((!(_1a7b9548d_checkFnVariadicParam(_self_, _149442_f)))) {
			_case_begin_1ac2a8c9a:;
		}
		_match_end_1ac2a6e85:;
	};
}



inline jule::Bool _1a7b95bec_catchTraitInheritCycle(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7b297_Trait> _151639_t1, jule::Ptr<_1a7a7b297_Trait> _151655_t2, _1bc0a106b_Builder* _151672_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_151655_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2ab2ca:;
		if (it != expr_end) {
			jule::Ptr<_1a7c3a962_TypeSym> _151815_i = *it;
			{
				if (((*(_151815_i))._field_Type == nullptr)) {
					goto _iter_next_1ac2ab2ca;
				};
				jule::Ptr<_1a7a7b297_Trait> _15228_t3 = _1a7c37211_Trait((*(_151815_i))._field_Type.ptr());;
				if ((_151639_t1 == _15228_t3)) {
					_1a7b9a97c_pushCycleError(_self_.ptr(), &((*(_151655_t2))._field_Ident), &((*(_15228_t3))._field_Ident), _151672_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1a7b95bec_catchTraitInheritCycle(_self_, _151639_t1, _15228_t3, _151672_message)))) {
					_1a7b9a97c_pushCycleError(_self_, &((*(_151655_t2))._field_Ident), &((*(_15228_t3))._field_Ident), _151672_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac2ab2ca:;
			++it;
			goto _iter_begin_1ac2ab2ca;
		}
		_iter_end_1ac2ab2ca:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7b9603d__checkTraitDeclInherits(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7b297_Trait>* _153545_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_153545_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2aea4d:;
		if (it != expr_end) {
			jule::I32 _15378_i = it - expr->begin();
			jule::Ptr<_1a7c3a962_TypeSym> _153715_it = *it;
			{
				if ((!(_1a7b89e22_checkTypeSym(_self_, &(_153715_it), jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4))))) {
					__jule_func_result=false;
					goto _iter_next_1ac2aea4d;
				};
				jule::Ptr<_1a7a7b297_Trait> _15428_t2 = _1a7c37211_Trait((*(_153715_it))._field_Type.ptr());;
				if ((_15428_t2 == nullptr)) {
					_1a7b7eec2_pushErr(_self_.ptr(), (*((*_153715_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_153545_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_153715_it))._field_Type), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1ac2aea4d;
				};
				{
					auto expr = &((*((*(_153545_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2b317d:;
					if (it != expr_end) {
						jule::I32 _15488_j = it - expr->begin();
						jule::Ptr<_1a7c3a962_TypeSym> _154811_it2 = *it;
						{
							if ((_15488_j >= _15378_i)) {
								goto _iter_end_1ac2b317d;
							};
							if ((((*(_154811_it2))._field_Type != nullptr) && _1a7c32c9a_Equal((*(_153715_it))._field_Type, (*_154811_it2.alloc)._field_Type))) {
								_1a7b7eec2_pushErr(_self_.ptr(), (*((*_153715_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_15428_t2))._field_Ident, &__jule_any_type5); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1ac2b317d;
							};
						}
						_iter_next_1ac2b317d:;
						++it;
						_15488_j++;
						goto _iter_begin_1ac2b317d;
					}
					_iter_end_1ac2b317d:;
				};
				if (((*(_153545_t)) == _15428_t2)) {
					_1a7b7eec2_pushErr(_self_.ptr(), (*((*_153715_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_153545_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_1bc0a106b_Builder _15629_message = static__1bc0a18b8_New(64LL);;
					__jule_func_result=(__jule_func_result && _1a7b95bec_catchTraitInheritCycle(_self_, (*(_153545_t)), _15428_t2, &(_15629_message)));
					if ((_1bc0a2d5e_Len(&_15629_message) > 0LL)) {
						jule::Str _156510_errMsg = _1bc0a28ca_Str(&_15629_message);;
						_1bc0a2ac8_Clear(&_15629_message);
						_1a7b9a97c_pushCycleError(_self_, &((*((*(_153545_t))))._field_Ident), &((*(_15428_t2))._field_Ident), &(_15629_message));
						_156510_errMsg+=_1bc0a28ca_Str(&_15629_message);
						_1a7b7eec2_pushErr(_self_, (*((*_153715_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_156510_errMsg, &__jule_any_type5); __jule_collection; }));
					};
				};
			}
			_iter_next_1ac2aea4d:;
			++it;
			_15378_i++;
			goto _iter_begin_1ac2aea4d;
		}
		_iter_end_1ac2aea4d:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a7b962e6_checkTraitDeclInherits(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7b297_Trait>* _157644_t) {
	{
		auto expr = &((*((*(_157644_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2b02bd:;
		if (it != expr_end) {
			jule::I32 _15778_i = it - expr->begin();
			jule::Ptr<_1a7c3a962_TypeSym> _157715_it = *it;
			{
				jule::Ptr<_1a7a7b297_Trait> _15788_t1 = _1a7c37211_Trait((*(_157715_it))._field_Type.ptr());;
				{
					auto expr = &((*((*(_157644_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2bb31d:;
					if (it != expr_end) {
						jule::I32 _15799_j = it - expr->begin();
						jule::Ptr<_1a7c3a962_TypeSym> _157916_it2 = *it;
						{
							if ((_15799_j == _15778_i)) {
								goto _iter_next_1ac2bb31d;
							};
							jule::Ptr<_1a7a7b297_Trait> _15839_t2 = _1a7c37211_Trait((*(_157916_it2))._field_Type);;
							{
								auto expr = &((*(_15788_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac2bcb49:;
								if (it != expr_end) {
									jule::Ptr<_1a7a70a83_Fn> _158417_t1m = *it;
									{
										jule::Ptr<_1a7a70a83_Fn> _158510_t2m = _1a7a7be79_FindMethod(_15839_t2.ptr(), (*(_158417_t1m))._field_Ident);;
										if ((_158510_t2m == nullptr)) {
											goto _iter_next_1ac2bcb49;
										};
										jule::Ptr<_1a7a73b41_FnIns> _15896_t1f = _1a7b8e344_getTraitCheckFnKind(_self_, &(_158417_t1m));;
										jule::Ptr<_1a7a73b41_FnIns> _15906_t2f = _1a7b8e344_getTraitCheckFnKind(_self_, &(_158510_t2m));;
										if ((!(_1a7a74adc_equalTrait(_15896_t1f, &(_15906_t2f))))) {
											_1a7b7eec2_pushErr(_self_, (*((*_157715_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_157644_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_15839_t2.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a7a75a22_GetKindStr(_15896_t1f, true), &__jule_any_type5); (*it++) = jule::Any(_1a7a75a22_GetKindStr(_15906_t2f.ptr(), true), &__jule_any_type5); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1ac2bcb49:;
									++it;
									goto _iter_begin_1ac2bcb49;
								}
								_iter_end_1ac2bcb49:;
							};
						}
						_iter_next_1ac2bb31d:;
						++it;
						_15799_j++;
						goto _iter_begin_1ac2bb31d;
					}
					_iter_end_1ac2bb31d:;
				};
			}
			_iter_next_1ac2b02bd:;
			++it;
			_15778_i++;
			goto _iter_begin_1ac2b02bd;
		}
		_iter_end_1ac2b02bd:;
	};
}



inline void _1a7b9659e_checkTraitDeclMethod(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _160142_f) {
	if (_1a7965c97_IsIgnoreIdent((*((*(_160142_f))))._field_Ident)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_160142_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a7966061_IsAnonIdent((*((*(_160142_f))))._field_Ident)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_160142_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_160142_f))))._field_sema=_self_;
	_1a7b95746_checkFnDeclPrototype(_self_, _160142_f);
	jule::Ptr<_1a7a73b41_FnIns> _16097_ins = _1a7a72326_instance((*(_160142_f)));;
	_1a7b90b92_reloadFnInsTypes(_self_, _16097_ins);
	(*(_16097_ins))._field_reloaded=true;
	_1a7a72634_appendInstance((*(_160142_f)).ptr(), &(_16097_ins));
}



inline void _1a7b96857_checkTraitDeclMethods(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7b297_Trait>* _161543_t) {
	{
		auto expr = &((*((*(_161543_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac857a30:;
		if (it != expr_end) {
			jule::I32 _16168_i = it - expr->begin();
			jule::Ptr<_1a7a70a83_Fn> _161615_f = *it;
			{
				_1a7b9659e_checkTraitDeclMethod(_self_, &(_161615_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1a7a7c60b_findMethodInherit((*(_161543_t)).ptr(), &((*(_161615_f))._field_Ident)) != nullptr)) {
					_1a7b7eec2_pushErr(_self_, (*_161615_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_161615_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_1ac857a30;
				};
				_julec_label_1ac85a879:;
				{
					auto expr = &((*((*(_161543_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac85acdb:;
					if (it != expr_end) {
						jule::I32 _16328_j = it - expr->begin();
						jule::Ptr<_1a7a70a83_Fn> _163211_jf = *it;
						{
							{
								
								if ((_16328_j >= _16168_i)) {
									_case_begin_1ac85b902:;
									{
										goto _iter_end_1ac85acdb;
									}
								}
								else if (((*(_161615_f))._field_Ident == (*(_163211_jf))._field_Ident)) {
									_case_begin_1ac85b98a:;
									{
										_1a7b7eec2_pushErr(_self_, (*_161615_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_161615_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_1ac85acdb;
									}
								}
								_match_end_1ac85b7e2:;
							};
						}
						_iter_next_1ac85acdb:;
						++it;
						_16328_j++;
						goto _iter_begin_1ac85acdb;
					}
					_iter_end_1ac85acdb:;
				};
			}
			_iter_next_1ac857a30:;
			++it;
			_16168_i++;
			goto _iter_begin_1ac857a30;
		}
		_iter_end_1ac857a30:;
	};
}



inline void _1a7b96b10_checkTraitDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a7b297_Trait>* _165136_t) {
	if (_1a7965c97_IsIgnoreIdent((*((*(_165136_t))))._field_Ident)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_165136_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a7b85a44_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_165136_t))), &((*((*(_165136_t))))._field_Ident), false)) {
		_1a7b7eec2_pushErr(_self_, (*((*(_165136_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_165136_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1a7b962e6_checkTraitDeclInherits(_self_, _165136_t);
	_1a7b96857_checkTraitDeclMethods(_self_, _165136_t);
}



inline jule::Bool _1a7b96d96_checkTraitDecls(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4b48e0:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7b297_Trait> _166515_t = *it;
			{
				_1a7b96b10_checkTraitDecl(_self_, &(_166515_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac4b48e0:;
			++it;
			goto _iter_begin_1ac4b48e0;
		}
		_iter_end_1ac4b48e0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7b97292_checkTraitImplMethods(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a7b297_Trait>* _167542_base, jule::Ptr<_1a7b29246_Impl>* _167557_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_167557_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4b68e2:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> *_167710_f = it;
			{
				if ((_1a7a7be79_FindMethod((*(_167542_base)).ptr(), (*((*(_167710_f))))._field_Ident) == nullptr)) {
					_1a7b7eec2_pushErr(_self_, (*(*(_167710_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_167542_base))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_167710_f)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1ac4b68e2:;
			++it;
			goto _iter_begin_1ac4b68e2;
		}
		_iter_end_1ac4b68e2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7b9768d_implToStruct(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7997adc_Struct>* _168634_dest, jule::Ptr<_1a7b29246_Impl>* _168654_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_168654_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4b91ca:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _169015_f = *it;
			{
				if (((_1a7998747_FindMethod((*(_168634_dest)).ptr(), (*(_169015_f))._field_Ident, (*_169015_f.alloc)._field_Statically) != nullptr) || (_1a7998dc9_FindField((*(_168634_dest)).ptr(), (*(_169015_f))._field_Ident) != nullptr))) {
					_1a7b7eec2_pushErr(_self_.ptr(), (*(_169015_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_168634_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_169015_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1ac4b91ca;
				};
				if ((((*((*(_168634_dest))))._field_Generics.len() > 0LL) && ((*(_169015_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_169015_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac4bc2aa:;
						if (it != expr_end) {
							jule::Ptr<_1a7985eb5_GenericDecl> _169812_fg = *it;
							{
								{
									auto expr = &((*((*(_168634_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ac4bcca0:;
									if (it != expr_end) {
										jule::Ptr<_1a7985eb5_GenericDecl> _169913_dg = *it;
										{
											if (((*(_169812_fg))._field_Ident == (*(_169913_dg))._field_Ident)) {
												_1a7b7eec2_pushErr(_self_.ptr(), (*_169812_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1ac4bcca0:;
										++it;
										goto _iter_begin_1ac4bcca0;
									}
									_iter_end_1ac4bcca0:;
								};
							}
							_iter_next_1ac4bc2aa:;
							++it;
							goto _iter_begin_1ac4bc2aa;
						}
						_iter_end_1ac4bc2aa:;
					};
				};
				_1a7b85da7_checkDirectives(_self_, &((*(_169015_f))._field_Directives), jule::Any(_169015_f, &__jule_any_type10));
				(*_169015_f.alloc)._field_sema=_self_;
				(*_169015_f.alloc)._field_Owner=(*(_168634_dest));
				{ jule::Slice<jule::Ptr<_1a7a70a83_Fn>> &__jule_push_dest = (*((*(_168634_dest))))._field_Methods; __jule_push_dest.push(_169015_f); };
			}
			_iter_next_1ac4b91ca:;
			++it;
			goto _iter_begin_1ac4b91ca;
		}
		_iter_end_1ac4b91ca:;
	};
	{
		auto expr = &((*((*(_168654_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4b9560:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> _171515_v = *it;
			{
				;
				if (((_1a7998747_FindMethod((*(_168634_dest)).ptr(), (*(_171515_v))._field_Ident, true) != nullptr) || (_1a7998a88_FindStatic((*(_168634_dest)).ptr(), (*(_171515_v))._field_Ident) != nullptr))) {
					_1a7b7eec2_pushErr(_self_.ptr(), (*(_171515_v))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_168634_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_171515_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1ac4b9560;
				};
				{ jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> &__jule_push_dest = (*((*(_168634_dest))))._field_Statics; __jule_push_dest.push(_171515_v); };
			}
			_iter_next_1ac4b9560:;
			++it;
			goto _iter_begin_1ac4b9560;
		}
		_iter_end_1ac4b9560:;
	};
	if (((*((*(_168634_dest))))._field_Instances.len() == 1LL)) {
		jule::Ptr<_1a799a97a_StructIns> _17288_s = (*((*(_168634_dest))))._field_Instances[0LL];;
		if (((*(_17288_s))._field_Source != nullptr)) {
			(*_17288_s.alloc)._field_Methods=(*((*(_168634_dest))))._field_Methods;
			(*_17288_s.alloc)._field_Statics=(*((*(_168634_dest))))._field_Statics;
		};
	};
	return __jule_func_result;;
}



inline void _1a7b97946_implTrait(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7b29246_Impl>* _173931_decl) {
	jule::Ptr<_1a7c3255d_Type> _17407_baseT = _1a7b8b011_selectType(_self_, &((*((*(_173931_decl))))._field_Base));;
	if ((_17407_baseT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7a7b297_Trait> _17447_base = _1a7c37211_Trait(_17407_baseT.ptr());;
	if ((_17447_base == nullptr)) {
		_1a7b7eec2_pushErr(_self_, (*((*((*(_173931_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str(_17407_baseT), &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7c3255d_Type> _17517_destT = _1a7b8b011_selectType(_self_, &((*((*(_173931_decl))))._field_Dest));;
	if ((_17517_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a799a97a_StructIns> _17557_destS = _1a7c36e7a_softStruct(_17517_destT.ptr());;
	if ((_17557_destS == nullptr)) {
		_1a7b7eec2_pushErr(_self_, (*((*((*(_173931_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str(_17517_destT), &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7997adc_Struct> _17627_dest = (*(_17557_destS))._field_Decl;;
	if ((_1a7969ae2_Dir((*((*(_17627_dest))._field_Token))._field_File.ptr()) != _1a7969ae2_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a7b7eec2_pushErr(_self_, (*((*((*(_173931_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_1a7ba2e18_pushImplemented(_17447_base, &(_17627_dest));
	_1a7ba3204_pushImplements(&(_17627_dest), _17447_base);
	if (((*((*(_173931_decl))))._field_Statics.len() > 0LL)) {
		_1a7b7eec2_pushErr(_self_, (*((*((*(_173931_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a7b97292_checkTraitImplMethods(_self_, &(_17447_base), _173931_decl)))) {
			_case_begin_1ac4ce7ea:;
		}
		else if ((!(_1a7b9768d_implToStruct(_self_, &(_17627_dest), _173931_decl)))) {
			_case_begin_1ac4ce861:;
		}
		_match_end_1ac4cd8a4:;
	};
}



inline void _1a7b97bee_implStruct(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7b29246_Impl>* _178232_decl) {
	jule::Ptr<_1a7c3255d_Type> _17837_destT = _1a7b8b011_selectType(_self_, &((*((*(_178232_decl))))._field_Dest));;
	if ((_17837_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a799a97a_StructIns> _17877_destS = _1a7c36e7a_softStruct(_17837_destT.ptr());;
	if ((_17877_destS == nullptr)) {
		_1a7b7eec2_pushErr(_self_, (*((*((*(_178232_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str(_17837_destT), &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7997adc_Struct> _17947_dest = (*(_17877_destS))._field_Decl;;
	if ((_1a7969ae2_Dir((*((*(_17947_dest))._field_Token))._field_File.ptr()) != _1a7969ae2_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a7b7eec2_pushErr(_self_, (*((*((*(_178232_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a7b9768d_implToStruct(_self_, &(_17947_dest), _178232_decl)))) {
			_case_begin_1ac4d558c:;
		}
		_match_end_1ac4d3b73:;
	};
}



inline void _1a7b97ea7_implImpl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7b29246_Impl>* _180630_decl) {
	{
		
		if (_1a7b29642_IsTraitImpl((*(_180630_decl)).ptr())) {
			_case_begin_1ac4d60d7:;
			{
				_1a7b97946_implTrait(_self_, _180630_decl);
			}
		}
		else if (_1a7b298c8_IsStructImpl((*(_180630_decl)).ptr())) {
			_case_begin_1ac4d6181:;
			{
				_1a7b97bee_implStruct(_self_, _180630_decl);
			}
		}
		_match_end_1ac4d5eb6:;
	};
}



inline void _1a7b9831a_checkVarDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7ba4eb4_Var>* _181734_decl, jule::Trait _181750_l) {
	if (_1a7965c97_IsIgnoreIdent((*((*(_181734_decl))))._field_Ident)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1a7ba5657_IsTypeInferred((*(_181734_decl)).ptr())) {
		if ((!(_1a7ba53c1_IsInitialized((*(_181734_decl)).ptr())))) {
			_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_1a7b4c786_ReferenceStack> _18278_refers = static_cast<jule::Ptr<_1a7b4c786_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _181750_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4)) {
				_case_begin_1ac4da1eb:;
				{
					_18278_refers=(*((*(_181734_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)) {
				_case_begin_1ac4da350:;
				{
					_18278_refers=_1a7b38332_getOwnerRefers(_181750_l.cast_ptr<_1a7b34938_scopeChecker>((jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));
				}
			}
			else {
				_case_begin_1ac4da2d9:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:1834:5"));;
				}
			}
			_match_end_1ac4da273:;
		};
		(*((*((*(_181734_decl))))._field_TypeSym))._field_Type=_1a7b8a3c8_checkTypeSymRefers(_self_, &((*(*((*(_181734_decl))))._field_TypeSym.alloc)._field_Decl), _181750_l, _18278_refers);
	};
	if ((*((*(_181734_decl))))._field_Reference) {
		if ((*((*(_181734_decl))))._field_Constant) {
			_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_181734_decl))))._field_Statically) {
			_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1a7ba53c1_IsInitialized((*(_181734_decl)).ptr())))) {
		if ((*((*(_181734_decl))))._field_Constant) {
			_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_181734_decl))))._field_Statically) {
			_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_181734_decl))))._field_Reference) {
			_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _1a7b985c3_checkGlobalVarDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7ba4eb4_Var>* _186340_decl) {
	if (_1a7b85a44_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_186340_decl))), &((*((*(_186340_decl))))._field_Ident), (*((*(_186340_decl))))._field_Binded)) {
		_1a7b7eec2_pushErr(_self_, (*((*(_186340_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_186340_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_186340_decl))))._field_Binded && (*((*(_186340_decl))))._field_Constant)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_186340_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_186340_decl))))._field_Binded)) && (!((*((*(_186340_decl))))._field_Constant))) && (!((*((*(_186340_decl))))._field_Statically)))) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_186340_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_1a7b85da7_checkDirectives(_self_, &((*((*(_186340_decl))))._field_Directives), jule::Any((*(_186340_decl)), &__jule_any_type7));
	_1a7b9831a_checkVarDecl(_self_, _186340_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4));
}



inline jule::Bool _1a7b98859_checkGlobalDecls(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4e7219:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> _188115_decl = *it;
			{
				_1a7b985c3_checkGlobalVarDecl(_self_, &(_188115_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac4e7219:;
			++it;
			goto _iter_begin_1ac4e7219;
		}
		_iter_end_1ac4e7219:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7b98c55_checkStructTraitImpl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7997adc_Struct>* _189142_strct, jule::Ptr<_1a7a7b297_Trait>* _189163_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_189163_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4e8a89:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _189215_tf = *it;
			{
				jule::Bool _18938_exist = false;;
				jule::Ptr<_1a7a70a83_Fn> _18948_sf = _1a7998747_FindMethod((*(_189142_strct)).ptr(), (*(_189215_tf))._field_Ident, (*_189215_tf.alloc)._field_Statically);;
				jule::Ptr<_1a7a73b41_FnIns> _18954_tfK = _1a7b8e344_getTraitCheckFnKind(_self_, &(_189215_tf));;
				if ((_18948_sf != nullptr)) {
					jule::Ptr<_1a7a73b41_FnIns> _18979_sfK = _1a7b8e344_getTraitCheckFnKind(_self_, &(_18948_sf));;
					if ((_18979_sfK != nullptr)) {
						_18938_exist=_1a7a74adc_equalTrait(_18954_tfK, &(_18979_sfK));
					};
				};
				if (_18938_exist) {
					jule::Ptr<_1a79781c7_Directive> _19035_d = _1a7c28cd5_findDirective(&((*(_18948_sf))._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_19035_d != nullptr)) {
						_1a7b7eec2_pushErr(_self_, (*_19035_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1a7b7eec2_pushErr(_self_, (*((*(_189142_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_189163_trt))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a7a75a22_GetKindStr(_18954_tfK.ptr(), true), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1ac4e8a89:;
			++it;
			goto _iter_begin_1ac4e8a89;
		}
		_iter_end_1ac4e8a89:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7b99096_checkStructImpls(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7997adc_Struct>* _191738_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_191738_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4eedc0:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7b297_Trait> _191915_trt = *it;
			{
				__jule_func_result=(_1a7b98c55_checkStructTraitImpl(_self_, _191738_s, &(_191915_trt)) && __jule_func_result);
			}
			_iter_next_1ac4eedc0:;
			++it;
			goto _iter_begin_1ac4eedc0;
		}
		_iter_end_1ac4eedc0:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7b993d7_checkStructFields(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7997adc_Struct>* _192539_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_192539_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac501322:;
		if (it != expr_end) {
			jule::Ptr<_1a7996800_Field> _192715_f = *it;
			{
				(*(_192715_f))._field_Owner=(*(_192539_st));
				{
					auto expr = &((*((*(_192539_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac5020d1:;
					if (it != expr_end) {
						jule::Ptr<_1a7996800_Field> _192911_cf = *it;
						{
							if ((_192715_f == _192911_cf)) {
								goto _iter_end_1ac5020d1;
							} else if (((*_192715_f.alloc)._field_Ident == (*(_192911_cf))._field_Ident)) {
								_1a7b7eec2_pushErr(_self_.ptr(), (*_192715_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_192715_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1ac5020d1:;
						++it;
						goto _iter_begin_1ac5020d1;
					}
					_iter_end_1ac5020d1:;
				};
			}
			_iter_next_1ac501322:;
			++it;
			goto _iter_begin_1ac501322;
		}
		_iter_end_1ac501322:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a7b99690_checkStructDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7997adc_Struct>* _194237_s) {
	if (_1a7965c97_IsIgnoreIdent((*((*(_194237_s))))._field_Ident)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_194237_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a7b85a44_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_194237_s))), &((*((*(_194237_s))))._field_Ident), (*((*(_194237_s))))._field_Binded)) {
		_1a7b7eec2_pushErr(_self_, (*((*(_194237_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_194237_s))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1a7b85da7_checkDirectives(_self_, &((*((*(_194237_s))))._field_Directives), jule::Any((*(_194237_s)), &__jule_any_type9));
	{
		
		if ((!(_1a7b949ba_checkDeclGenerics(_self_, &((*((*(_194237_s))))._field_Generics))))) {
			_case_begin_1ac5072a1:;
		}
		else if ((!(_1a7b993d7_checkStructFields(_self_, _194237_s)))) {
			_case_begin_1ac507317:;
		}
		else if ((!(_1a7b99096_checkStructImpls(_self_, _194237_s)))) {
			_case_begin_1ac50737d:;
		}
		else if ((!(_1a7b9a2c8_checkFuncDeclsBy(_self_, &((*((*(_194237_s))))._field_Methods))))) {
			_case_begin_1ac5073e4:;
		}
		_match_end_1ac50714c:;
	};
}



inline jule::Bool _1a7b99926_checkStructDecls(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac509847:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> _196215_s = *it;
			{
				_1a7b99690_checkStructDecl(_self_, &(_196215_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac509847:;
			++it;
			goto _iter_begin_1ac509847;
		}
		_iter_end_1ac509847:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac509e52:;
		if (it != expr_end) {
			jule::Ptr<_1a7c31848_TypeAlias> _196915_ta = *it;
			{
				if ((!((*(_196915_ta))._field_Strict))) {
					goto _iter_next_1ac509e52;
				};
				jule::Ptr<_1a7997adc_Struct> _19738_s = (*((*((*((*(_196915_ta))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)))._field_Decl;;
				{
					
					if ((!(_1a7b99096_checkStructImpls(_self_, &(_19738_s))))) {
						_case_begin_1ac50c7b2:;
					}
					else if ((!(_1a7b9a2c8_checkFuncDeclsBy(_self_, &((*(_19738_s))._field_Methods))))) {
						_case_begin_1ac50c85b:;
					}
					_match_end_1ac50c680:;
				};
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac509e52:;
			++it;
			goto _iter_begin_1ac509e52;
		}
		_iter_end_1ac509e52:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a7b99bce_checkAnonFuncDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _198639_f) {
	(*((*(_198639_f))))._field_sema=_self_;
	_1a7b95746_checkFnDeclPrototype(_self_, _198639_f);
}



inline void _1a7b99e87_checkFuncDecl(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _199135_f) {
	if (_1a7965c97_IsIgnoreIdent((*((*(_199135_f))))._field_Ident)) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_199135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a7a71a73_IsAnon((*(_199135_f)).ptr())) {
		_1a7b7eec2_pushErr(_self_.ptr(), (*((*(_199135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_1a7b85da7_checkDirectives(_self_, &((*((*(_199135_f))))._field_Directives), jule::Any((*(_199135_f)), &__jule_any_type10));
	_1a7b99bce_checkAnonFuncDecl(_self_, _199135_f);
	if ((((*((*(_199135_f))))._field_Owner == nullptr) && _1a7b85a44_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_199135_f))), &((*((*(_199135_f))))._field_Ident), (*((*(_199135_f))))._field_Binded))) {
		if ((*((*(_199135_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1a7a70a83_Fn> _20035_init = _1a7b7d685_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_20035_init != nullptr)) {
				return;;
			};
		};
		_1a7b7eec2_pushErr(_self_, (*((*(_199135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_199135_f))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a7b9a2c8_checkFuncDeclsBy(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Slice<jule::Ptr<_1a7a70a83_Fn>>* _201338_funcs) {
	{
		auto expr = _201338_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac51537a:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _201415_f = *it;
			{
				_1a7b99e87_checkFuncDecl(_self_, &(_201415_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1ac51537a:;
			++it;
			goto _iter_begin_1ac51537a;
		}
		_iter_end_1ac51537a:;
	};
	return true;;
}



inline jule::Bool _1a7b9a55e_checkFuncDecls(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a7b9a2c8_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1a7b9a97c_pushCycleError(_1a7b7c0bd_sema* _self_, jule::Str* _202927_st1, jule::Str* _202938_st2, _1bc0a106b_Builder* _202953_message) {
	;
	jule::Str _20313_refersTo = _1bc0b081c_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_202927_st1)), &__jule_any_type5); (*it++) = jule::Any((*(_202938_st2)), &__jule_any_type5); __jule_collection; }));;
	jule::Str _20323_m = _1bc0a28ca_Str(_202953_message);;
	({
		auto except = _1bc0a204a_WriteStr(_202953_message, _1bd42a27e_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:2033:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_202953_message, _20313_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:2034:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(_202953_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:2035:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(_202953_message, _20323_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:2036:3"));
		(except.result);
	});
}



inline void _1a7b9b131_checkPackageDecls(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5a2d85:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _205615_f = *it;
			{
				_1a7b7eaa4_setCurrentFile(_self_.ptr(), _205615_f);
				if ((!(_1a7b928db_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ac5a2d85:;
			++it;
			goto _iter_begin_1ac5a2d85;
		}
		_iter_end_1ac5a2d85:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5a60ca:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _206315_f = *it;
			{
				_1a7b7eaa4_setCurrentFile(_self_, _206315_f);
				if ((!(_1a7b96d96_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ac5a60ca:;
			++it;
			goto _iter_begin_1ac5a60ca;
		}
		_iter_end_1ac5a60ca:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5a7065:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _207015_f = *it;
			{
				_1a7b7eaa4_setCurrentFile(_self_, _207015_f);
				if ((!(_1a7b98859_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ac5a7065:;
			++it;
			goto _iter_begin_1ac5a7065;
		}
		_iter_end_1ac5a7065:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5a80dd:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _207715_f = *it;
			{
				_1a7b7eaa4_setCurrentFile(_self_, _207715_f);
				{
					
					if ((!(_1a7b9a55e_checkFuncDecls(_self_)))) {
						_case_begin_1ac5a9809:;
					}
					else if ((!(_1a7b99926_checkStructDecls(_self_)))) {
						_case_begin_1ac5a98a3:;
					}
					else {
						_case_begin_1ac5a9254:;
						{
							goto _iter_next_1ac5a80dd;
						}
					}
					_match_end_1ac5a9782:;
				};
				return;;
			}
			_iter_next_1ac5a80dd:;
			++it;
			goto _iter_begin_1ac5a80dd;
		}
		_iter_end_1ac5a80dd:;
	};
}



inline void _1a7b9b494_checkDataForTypeInference(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7bed89d_Data>* _208942_d, jule::Ptr<_1a79633b0_Token>* _208953_errToken) {
	{
		
		if (_1a7bedcbb_IsNil((*(_208942_d)).ptr())) {
			_case_begin_1ac5aa8e8:;
			{
				_1a7b7eec2_pushErr(_self_, (*(_208953_errToken)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_1a7bee052_IsVoid((*(_208942_d)).ptr())) {
			_case_begin_1ac5aa992:;
			{
				_1a7b7eec2_pushErr(_self_, (*(_208953_errToken)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_208942_d))))._field_Type))._field_Variadic) {
			_case_begin_1ac5aaa08:;
			{
				_1a7b7eec2_pushErr(_self_, (*(_208953_errToken)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac5aa7c7:;
	};
}



inline void _1a7b9b74c_checkVarValue(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7ba4eb4_Var>* _210135_v) {
	if (_1a7ba5657_IsTypeInferred((*(_210135_v)).ptr())) {
		(*((*(_210135_v))))._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=(*((*((*((*(_210135_v))))._field_Value))._field_Data))._field_Type});
		_1a7b9b494_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_210135_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_210135_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1a7b91aa5_checkValidityForInitExpr(_self_, (*((*(_210135_v))))._field_Mutable, (*((*(_210135_v))))._field_Reference, &((*((*((*(_210135_v))))._field_TypeSym))._field_Type), &((*(*((*(_210135_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_210135_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1a7c42b89_Arr> _21148_arr = _1a7c36441_Arr((*((*((*(_210135_v))))._field_TypeSym))._field_Type.ptr());;
		if ((_21148_arr != nullptr)) {
			if ((*_21148_arr.alloc)._field_Auto) {
				jule::Ptr<_1a7c42b89_Arr> _21176_dataArr = _1a7c36441_Arr((*((*((*((*(_210135_v))))._field_Value))._field_Data))._field_Type.ptr());;
				if ((_21176_dataArr != nullptr)) {
					(*_21148_arr.alloc)._field_N=(*_21176_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1a7b8c320_checkAssignType(_self_, (*((*(_210135_v))))._field_Reference, &((*(*((*(_210135_v))))._field_TypeSym.alloc)._field_Type), &((*((*((*(_210135_v))))._field_Value))._field_Data), (*((*(*((*(_210135_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_210135_v))))._field_Refers)) {
			_1a7b91aa5_checkValidityForInitExpr(_self_, (*((*(_210135_v))))._field_Mutable, (*((*(_210135_v))))._field_Reference, &((*(*((*(_210135_v))))._field_TypeSym.alloc)._field_Type), &((*(*((*(_210135_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_210135_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if ((*((*(_210135_v))))._field_Constant) {
		if (((!(_1a7bee2d8_IsConst((*((*((*(_210135_v))))._field_Value))._field_Data.ptr()))) && (!(_1a7c379b4_comptime((*(*((*((*(_210135_v))))._field_Value))._field_Data.alloc)._field_Type.ptr()))))) {
			_1a7b7eec2_pushErr(_self_.ptr(), (*((*(*((*(_210135_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_210135_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_210135_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1a7c3772d_Tup((*((*((*(_210135_v))))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
		(*(*((*(_210135_v))))._field_TypeSym.alloc)._field_Type=nullptr;
	};
}



inline void _1a7b9bab0_evalVarValue(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7ba4eb4_Var>* _215034_decl, jule::Trait _215050_l) {
	if ((!(_1a7ba53c1_IsInitialized((*(_215034_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1a7c0086c_eval> _21557_eval = static_cast<jule::Ptr<_1a7c0086c_eval>>(nullptr);;
	if (((*((*(_215034_decl))))._field_TypeSym != nullptr)) {
		_21557_eval=_1a7b8b4b7_evalpd(_self_, _215050_l, (*(*((*(_215034_decl))))._field_TypeSym.alloc)._field_Type, (*(_215034_decl)));
	} else {
		_21557_eval=_1a7b8b4b7_evalpd(_self_, _215050_l, nullptr, (*(_215034_decl)));
	};
	(*(_21557_eval))._field_target._field_mutable=(*((*(_215034_decl))))._field_Mutable;
	(*((*((*(_215034_decl))))._field_Value))._field_Data=_1a7c204d5_evalExpr(_21557_eval, (*(*((*(_215034_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1a7b9be23_checkVar(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7ba4eb4_Var>* _216730_decl, jule::Trait _216746_l) {
	_1a7b9bab0_evalVarValue(_self_, _216730_decl, _216746_l);
	if (((*((*((*(_216730_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1a7b9b74c_checkVarValue(_self_, _216730_decl);
}



inline void _1a7b9c121_checkGlobals(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8463e2:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> _217715_decl = *it;
			{
				if (((*(_217715_decl))._field_Binded || (*(_217715_decl))._field_Used)) {
					goto _iter_next_1ac8463e2;
				};
				_1a7b9be23_checkVar(_self_, &(_217715_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4));
			}
			_iter_next_1ac8463e2:;
			++it;
			goto _iter_begin_1ac8463e2;
		}
		_iter_end_1ac8463e2:;
	};
}



inline jule::Ptr<_1a7a73b41_FnIns> _1a7b9c51c_readyToCheckFn(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a799a97a_StructIns>* _219036_s, jule::Ptr<_1a7a70a83_Fn>* _219056_f) {
	jule::Ptr<_1a7a73b41_FnIns> _21917_ins = _1a7a72326_instance((*(_219056_f)));;
	if (((*((*(_219056_f))))._field_Instances.len() != 0LL)) {
		return _21917_ins;;
	};
	(*(_21917_ins))._field_Owner=(*(_219036_s));
	_1a7a72634_appendInstance((*(_219056_f)).ptr(), &(_21917_ins));
	(*_21917_ins.alloc)._field_reloaded=true;
	if (_1a7b90b92_reloadFnInsTypes(_self_, _21917_ins)) {
		return _21917_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a7b9c918_checkGenericFn(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns>* _220636_f, jule::Ptr<_1a79633b0_Token>* _220652_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1a7b90b92_reloadFnInsTypes(_self_, (*(_220636_f)));
	(*((*(_220636_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7a73b41_FnIns> _22127_existInstance = _1a7a72634_appendInstance((*((*(_220636_f))))._field_Decl.ptr(), _220636_f);;
	if ((!(_1a7b8e7ea_checkConstraintsFn(_self_, _220636_f, _220652_et, _22127_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_22127_existInstance != nullptr)) {
		(*(_220636_f))=_22127_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1a7b9e761_checkFnInsCaller(_self_, _220636_f, (*(_220652_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1a7b9cc7b_checkTypeMethod(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a799a97a_StructIns>* _222937_s, jule::Ptr<_1a7a70a83_Fn>* _222957_f) {
	if (((*((*(_222957_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1a7a73b41_FnIns> _22347_ins = (*((*(_222957_f))))._field_Instances[0LL];;
	if (((*((*(_22347_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1a7b9ea19_checkFnIns(_self_, &(_22347_ins));
}



inline jule::Bool _1a7b9d177_checkStructEnv(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a799a97a_StructIns>* _224536_s, jule::Ptr<_1a79633b0_Token> _224555_errorToken) {
	jule::Bool __jule_func_result = false;
	_1a7c4564d_typeChecker _22467_tc = _1a7c4564d_typeChecker{._field_s=(*((*((*(_224536_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_224536_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4), ._field_lookup=jule::Trait((*(*((*(_224536_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4), ._field_referencer=jule::new_ptr<_1a7c4465d_referencer>(_1a7c4465d_referencer{._field_ident=(*(*((*(_224536_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_224536_s))))._field_Decl, &__jule_any_type9), ._field_refs=nullptr}), ._field_refers=(*((*(_224536_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7c31848_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_224536_s))))._field_Generics.len() > 0LL)) {
		_22467_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>::alloc(0LL, (*((*(_224536_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c31848_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_224536_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac9b40cb:;
			if (it != expr_end) {
				jule::I32 _22599_i = it - expr->begin();
				jule::Ptr<_1a7c30b77_InsGeneric> _225916_g = *it;
				{
					jule::Ptr<_1a7985eb5_GenericDecl> _22609_decl = (*(*((*(_224536_s))))._field_Decl.alloc)._field_Generics[_22599_i];;
					{ jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> &__jule_push_dest = _22467_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1a7c31848_TypeAlias>(_1a7c31848_TypeAlias{._field_Scope=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_Strict=false, ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_22609_decl.alloc)._field_Token, ._field_Ident=(*(_22609_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=(*(_225916_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1ac9b40cb:;
				++it;
				_22599_i++;
				goto _iter_begin_1ac9b40cb;
			}
			_iter_end_1ac9b40cb:;
		};
	};
	jule::Ptr<_1a7a76d86_SymTab> _22697_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a7b7eaa4_setCurrentFile(_self_, _22697_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_224536_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1a7a76d86_SymTab> _22738_file = _1a7b7a7c5_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_224536_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_22738_file != nullptr)) {
			_1a7b7eaa4_setCurrentFile(_self_, _22738_file);
		};
	};
	if (((*((*(_224536_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1a7b26e47_constraintChecker> _22808_cc = _1a7b89a26_constraintChecker(_self_);;
		(*(_22808_cc))._field_et=_224555_errorToken;
		(*_22808_cc.alloc)._field_si=(*(_224536_s));
		(*_22808_cc.alloc)._field_genericsA=_22467_tc._field_useGenerics;
		(*_22808_cc.alloc)._field_uniq=true;
		if ((!(_1a7b27db0_check(_22808_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_224536_s))))._field_Statics.len() > 0LL)) {
		jule::I32 _22938_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_22467_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_224536_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac9bcb95:;
			if (it != expr_end) {
				jule::Ptr<_1a7ba4eb4_Var> _229516_v = *it;
				{
					_1a7b9831a_checkVarDecl(_self_, &(_229516_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4));
					_1a7b9be23_checkVar(_self_, &(_229516_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _22938_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1ac9bcb95:;
				++it;
				goto _iter_begin_1ac9bcb95;
			}
			_iter_end_1ac9bcb95:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_22467_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1a7c0086c_eval> _23067_eval = _1a7b8bc04_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4));;
	(*((*(_224536_s))))._field_Comparable=(!((*(*((*(_224536_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_224536_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9c1616:;
		if (it != expr_end) {
			jule::Ptr<_1a7999d53_FieldIns> _230815_f = *it;
			{
				jule::Ptr<_1a7c3255d_Type> _23098_kind = _1a7c4d238_checkDecl(&_22467_tc, &((*((*((*(_230815_f))._field_Decl))._field_TypeSym))._field_Decl));;
				__jule_func_result=((_23098_kind != nullptr) && __jule_func_result);
				if ((_23098_kind == nullptr)) {
					if (((_self_ != (*(*((*(_224536_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_224536_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_224536_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_224536_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1ac9c1616;
				};
				(*_230815_f.alloc)._field_Type=_23098_kind;
				(*((*(_224536_s))))._field_Mutable=((*((*(_224536_s))))._field_Mutable || ((!((*(*(_230815_f))._field_Decl.alloc)._field_Mutable)) && _1a7c348a1_Mutable((*_230815_f.alloc)._field_Type.ptr())));
				(*((*(_224536_s))))._field_Comparable=((*((*(_224536_s))))._field_Comparable && _1a7c3461a_Comparable((*_230815_f.alloc)._field_Type.ptr()));
				if (((*(*(_230815_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1ac9c1616;
				};
				(*(_23067_eval))._field_prefix=(*_230815_f.alloc)._field_Type;
				(*_23067_eval.alloc)._field_field=_230815_f;
				(*_23067_eval.alloc)._field_target._field_mutable=true;
				(*_230815_f.alloc)._field_Default=_1a7c204d5_evalExpr(_23067_eval, (*(*(_230815_f))._field_Decl.alloc)._field_Default);
				if (((*_230815_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1ac9c1616;
				};
				;
				_1a7b8c320_checkAssignType(_self_, false, &((*_230815_f.alloc)._field_Type), &((*_230815_f.alloc)._field_Default), (*((*(*(_230815_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_224536_s))))._field_Refers);
			}
			_iter_next_1ac9c1616:;
			++it;
			goto _iter_begin_1ac9c1616;
		}
		_iter_end_1ac9c1616:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7b9d573_precheckStructIns(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a799a97a_StructIns>* _234339_s, jule::Ptr<_1a79633b0_Token> _234358_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1a7b9d177_checkStructEnv(_self_, _234339_s, _234358_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_234339_s))))._field_Comparable && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1a7a70a83_Fn> _23548_decl = _1a76466ae_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_234339_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac5199de:;
			if (it != expr_end) {
				jule::Ptr<_1a7999d53_FieldIns> _235516_field = *it;
				{
					jule::Ptr<_1a7c42b89_Arr> _23569_arr = _1a7c36441_Arr((*(_235516_field))._field_Type.ptr());;
					if ((_23569_arr == nullptr)) {
						goto _iter_next_1ac5199de;
					};
					jule::Ptr<_1a7a73b41_FnIns> _23609_f = _1a7a72090_instanceForce(_23548_decl);;
					(*(_23609_f))._field_Generics=jule::append((*_23609_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7c30b77_InsGeneric>(_1a7c30b77_InsGeneric{._field_Type=(*(_23569_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1a7c3255d_Type>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7b9c918_checkGenericFn(_self_, &(_23609_f), &((*((*_235516_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/sema.jule:2364:6"));;
					};
					_1a7b4d5de_Push((*((*(_234339_s))))._field_Refers.ptr(), jule::Any(_23609_f, &__jule_any_type65));
				}
				_iter_next_1ac5199de:;
				++it;
				goto _iter_begin_1ac5199de;
			}
			_iter_end_1ac5199de:;
		};
	};
	{
		auto expr = &((*((*(_234339_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac51d592:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _237015_f = *it;
			{
				if (((*(_237015_f))._field_Generics.len() == 0LL)) {
					if ((_1a7b9c51c_readyToCheckFn(_self_, _234339_s, &(_237015_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1ac51d592:;
			++it;
			goto _iter_begin_1ac51d592;
		}
		_iter_end_1ac51d592:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a7b9d82b_checkStructIns(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a799a97a_StructIns>* _238036_s) {
	{
		auto expr = &((*((*(_238036_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac52052d:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _238115_f = *it;
			{
				_1a7b9cc7b_checkTypeMethod(_self_, _238036_s, &(_238115_f));
			}
			_iter_next_1ac52052d:;
			++it;
			goto _iter_begin_1ac52052d;
		}
		_iter_end_1ac52052d:;
	};
}



inline void _1a7b9dad4_checkTypeStruct(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7997adc_Struct>* _238637_s) {
	if ((*((*(_238637_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_238637_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_238637_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a799a97a_StructIns> _23978_ins = _1a799800a_instance((*(_238637_s)));;
		(*(_23978_ins))._field_Checked=true;
		_1a799834b_appendInstance((*(_238637_s)).ptr(), &(_23978_ins));
		jule::Bool _24004_ok = _1a7b9d573_precheckStructIns(_self_, &(_23978_ins), nullptr);;
		if ((!(_24004_ok))) {
			return;;
		};
	};
	{
		auto expr = &((*((*(_238637_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac522178:;
		if (it != expr_end) {
			jule::Ptr<_1a799a97a_StructIns> _240615_ins = *it;
			{
				_1a7b9d82b_checkStructIns(_self_, &(_240615_ins));
			}
			_iter_next_1ac522178:;
			++it;
			goto _iter_begin_1ac522178;
		}
		_iter_end_1ac522178:;
	};
}



inline void _1a7b9dcd2_checkStructTypes(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac524bd6:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> _241215_s = *it;
			{
				_1a7b9dad4_checkTypeStruct(_self_, &(_241215_s));
			}
			_iter_next_1ac524bd6:;
			++it;
			goto _iter_begin_1ac524bd6;
		}
		_iter_end_1ac524bd6:;
	};
}



inline void _1a7b9e08a_checkRets(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a73b41_FnIns>* _241730_f) {
	if (_1a7a71039_IsVoid((*((*(_241730_f))))._field_Decl.ptr())) {
		return;;
	};
	_1a7ba14cc_missingRetChecker _24213_mrc = static__1a7ba18c8_new();;
	jule::Bool _24223_ok = _1a7ba2aa5_check(&_24213_mrc, (*((*(_241730_f))))._field_Scope);;
	if ((!(_24223_ok))) {
		_1a7b7eec2_pushErr(_self_, (*((*((*(_241730_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _1a7b9e3ed_checkFnInsSc(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a73b41_FnIns>* _242833_f, jule::Ptr<_1a7b34938_scopeChecker>* _242849_sc) {
	_1a7b79d35_appendRetVars(&((*((*((*(_242849_sc))))._field_table))._field_Vars), _242833_f);
	_1a7b7a165_appendParamVars(&((*(*((*(_242849_sc))))._field_table.alloc)._field_Vars), _242833_f);
	_1a7b7a451_appendGenericTypeAliases(&((*(*((*(_242849_sc))))._field_table.alloc)._field_TypeAliases), _242833_f);
	_1a7b46a05_check((*(_242849_sc)), &((*((*((*(_242833_f))))._field_Decl))._field_Scope), &((*((*(_242833_f))))._field_Scope));
	if ((!(_1a7b37540_stopped((*(_242849_sc)).ptr())))) {
		_1a7b9e08a_checkRets(_self_, _242833_f);
	};
}



inline void _1a7b9e761_checkFnInsCaller(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns>* _244138_f, jule::Ptr<_1a79633b0_Token> _244153_caller) {
	if ((*((*((*(_244138_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1a7a76d86_SymTab> _24467_old = (*((*((*((*(_244138_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1a7b7eaa4_setCurrentFile((*((*((*(_244138_f))))._field_Decl))._field_sema, _24467_old);
	});;
	jule::Ptr<_1a7a76d86_SymTab> _24487_file = _1a7b7a7c5_findFile(&((*(*((*((*(_244138_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_244138_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_24487_file != nullptr)) {
		_1a7b7eaa4_setCurrentFile((*((*((*(_244138_f))))._field_Decl))._field_sema, _24487_file);
	};
	jule::Ptr<_1a7b34938_scopeChecker> _24537_sc = _1a7b2b677_newScopeChecker(&((*(*((*(_244138_f))))._field_Decl.alloc)._field_sema), (*(_244138_f)));;
	(*(_24537_sc))._field_calledFrom=_244153_caller;
	_1a7b9e3ed_checkFnInsSc(_self_.ptr(), _244138_f, &(_24537_sc));
	if (((*(*((*(_244138_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*((*(*((*(_244138_f))))._field_Decl.alloc)._field_sema))._field_errors);
		(*(*((*((*(_244138_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1a7b9ea19_checkFnIns(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a73b41_FnIns>* _246332_f) {
	_1a7b9e761_checkFnInsCaller(_self_, _246332_f, nullptr);
}



inline void _1a7b9ecc2_checkFunc(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _246731_f) {
	if ((*((*(_246731_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_246731_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_246731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5c59ce:;
		if (it != expr_end) {
			jule::Ptr<_1a7a73b41_FnIns> _247715_ins = *it;
			{
				_1a7b9ea19_checkFnIns(_self_, &(_247715_ins));
			}
			_iter_next_1ac5c59ce:;
			++it;
			goto _iter_begin_1ac5c59ce;
		}
		_iter_end_1ac5c59ce:;
	};
}



inline void _1a7ba007a_checkTestFn(_1a7b7c0bd_sema* _self_, jule::Ptr<_1a7a73b41_FnIns>* _248232_f) {
	if ((*((*((*(_248232_f))))._field_Decl))._field_Public) {
		_1a7b7eec2_pushErr(_self_, (*(*((*(_248232_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_248232_f))))._field_Decl))._field_Unsafety || (!(_1a7a71039_IsVoid((*((*(_248232_f))))._field_Decl.ptr())))) || ((*((*((*(_248232_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_248232_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_248232_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_248232_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1a7b7eec2_pushErr(_self_, (*((*((*(_248232_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7c3ed95_Sptr> _25007_sptr = _1a7c35907_Sptr((*((*((*(_248232_f))))._field_Params[0LL]))._field_Type.ptr());;
	if ((_25007_sptr == nullptr)) {
		_1a7b7eec2_pushErr(_self_, (*((*((*(_248232_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	{
		auto &_match_expr{ (*((*(_25007_sptr))._field_Elem))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
			_case_begin_1ac5cd5ec:;
			{
				jule::Ptr<_1a799a97a_StructIns> _25094_s = (*((*(_25007_sptr))._field_Elem))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);;
				if ((((*(_25094_s))._field_Source == nullptr) && _1a7b6455b_isStdPackage(&((*((*((*((*_25094_s.alloc)._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))) {
					return;;
				};
			}
		}
		_match_end_1ac5cd575:;
	};
	_1a7b7eec2_pushErr(_self_, (*((*((*(_248232_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
	_1a7b80335_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
}



inline void _1a7ba0333_precheckFunc(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Ptr<_1a7a70a83_Fn>* _251834_f) {
	if ((*((*(_251834_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_251834_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_251834_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a7a73b41_FnIns> _25298_ins = _1a7a72090_instanceForce((*(_251834_f)));;
		{ jule::Slice<jule::Ptr<_1a7a73b41_FnIns>> &__jule_push_dest = (*((*(_251834_f))))._field_Instances; __jule_push_dest.push(_25298_ins); };
		jule::Bool _25314_ok = _1a7b90b92_reloadFnInsTypes(_self_, _25298_ins);;
		(*(_25298_ins))._field_reloaded=true;
		if ((_25314_ok && _1a7c4e7bc_hasDirective(&((*((*(_251834_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_1a7ba007a_checkTestFn(_self_, &(_25298_ins));
		};
	};
}



inline void _1a7ba0531_precheckFuncs(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9ce8dd:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7b297_Trait> _254215_decl = *it;
			{
				{
					auto expr = &((*(_254215_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9d03d3:;
					if (it != expr_end) {
						jule::Ptr<_1a7a70a83_Fn> _254316_m = *it;
						{
							_1a7ba0333_precheckFunc(_self_, &(_254316_m));
						}
						_iter_next_1ac9d03d3:;
						++it;
						goto _iter_begin_1ac9d03d3;
					}
					_iter_end_1ac9d03d3:;
				};
			}
			_iter_next_1ac9ce8dd:;
			++it;
			goto _iter_begin_1ac9ce8dd;
		}
		_iter_end_1ac9ce8dd:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9cee71:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _254715_decl = *it;
			{
				_1a7ba0333_precheckFunc(_self_, &(_254715_decl));
			}
			_iter_next_1ac9cee71:;
			++it;
			goto _iter_begin_1ac9cee71;
		}
		_iter_end_1ac9cee71:;
	};
}



inline void _1a7ba072e_checkFuncs(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9d1add:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _255415_decl = *it;
			{
				_1a7b9ecc2_checkFunc(_self_, &(_255415_decl));
			}
			_iter_next_1ac9d1add:;
			++it;
			goto _iter_begin_1ac9d1add;
		}
		_iter_end_1ac9d1add:;
	};
}



inline void _1a7ba092c_checkPackageTypes(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9d287a:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _256215_f = *it;
			{
				_1a7b7eaa4_setCurrentFile(_self_.ptr(), _256215_f);
				_1a7b9c121_checkGlobals(_self_);
				_1a7ba0531_precheckFuncs(_self_);
			}
			_iter_next_1ac9d287a:;
			++it;
			goto _iter_begin_1ac9d287a;
		}
		_iter_end_1ac9d287a:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9d40da:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _257215_f = *it;
			{
				_1a7b7eaa4_setCurrentFile(_self_, _257215_f);
				{
					auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9d5152:;
					if (it != expr_end) {
						jule::Ptr<_1a7c31848_TypeAlias> _257416_ta = *it;
						{
							if ((*(_257416_ta))._field_Strict) {
								jule::Ptr<_1a799a97a_StructIns> _257610_s = (*((*((*_257416_ta.alloc)._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);;
								(*(_257610_s))._field_Checked=true;
								jule::Bool _25786_ok = _1a7b9d573_precheckStructIns(_self_, &(_257610_s), nullptr);;
								if (_25786_ok) {
									_1a7b9dad4_checkTypeStruct(_self_, &((*_257610_s.alloc)._field_Decl));
								};
							};
						}
						_iter_next_1ac9d5152:;
						++it;
						goto _iter_begin_1ac9d5152;
					}
					_iter_end_1ac9d5152:;
				};
			}
			_iter_next_1ac9d40da:;
			++it;
			goto _iter_begin_1ac9d40da;
		}
		_iter_end_1ac9d40da:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9d5bad:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _258615_f = *it;
			{
				_1a7b7eaa4_setCurrentFile(_self_, _258615_f);
				_1a7ba072e_checkFuncs(_self_);
				_1a7b9dcd2_checkStructTypes(_self_);
			}
			_iter_next_1ac9d5bad:;
			++it;
			goto _iter_begin_1ac9d5bad;
		}
		_iter_end_1ac9d5bad:;
	};
}



inline void _1a7ba0b2a_setFileSemaFields(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9d8a7e:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _259415_f = *it;
			{
				(*(_259415_f))._field_sema=_self_;
			}
			_iter_next_1ac9d8a7e:;
			++it;
			goto _iter_begin_1ac9d8a7e;
		}
		_iter_end_1ac9d8a7e:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9d91ab:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> _259715_st = *it;
			{
				(*(_259715_st))._field_sema=_self_;
			}
			_iter_next_1ac9d91ab:;
			++it;
			goto _iter_begin_1ac9d91ab;
		}
		_iter_end_1ac9d91ab:;
	};
}



inline void _1a7ba0d28_setSemaFields(jule::Ptr<_1a7b7c0bd_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9da355:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _260315_file = *it;
			{
				_1a7b7eaa4_setCurrentFile(_self_.ptr(), _260315_file);
				_1a7ba0b2a_setFileSemaFields(_self_);
			}
			_iter_next_1ac9da355:;
			++it;
			goto _iter_begin_1ac9da355;
		}
		_iter_end_1ac9da355:;
	};
}



inline void _1a7ba10d1_check(jule::Ptr<_1a7b7c0bd_sema> _self_, jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _260927_files) {
	(*(_self_))._field_files=(*(_260927_files));
	_1a7ba0d28_setSemaFields(_self_);
	_1a7b87c22_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a7b88717_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a7b8811d_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	(*_self_.alloc)._field_step|=static_cast<jule::I32>(1LL);
	_1a7b8831b_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a7b9b131_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	(*_self_.alloc)._field_step|=static_cast<jule::I32>(2LL);
	_1a7ba092c_checkPackageTypes(_self_);
	(*_self_.alloc)._field_step|=static_cast<jule::I32>(4LL);
}







inline _1a7ba14cc_missingRetChecker static__1a7ba18c8_new(void) {
	return _1a7ba14cc_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1a7ba1bd6_checkConditional(_1a7ba14cc_missingRetChecker* _self_, jule::Ptr<_1a7b2cd2c_Conditional> _266032_c) {
	{
		auto expr = &((*(_266032_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac52c392:;
		if (it != expr_end) {
			jule::Ptr<_1a7b2c612_If> _266115_elif = *it;
			{
				if ((_266115_elif == nullptr)) {
					return false;;
				};
				if ((!(_1a7ba2764_checkScope(_self_, (*(_266115_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1ac52c392:;
			++it;
			goto _iter_begin_1ac52c392;
		}
		_iter_end_1ac52c392:;
	};
	return (((*_266032_c.alloc)._field_Default != nullptr) && _1a7ba2764_checkScope(_self_, (*((*_266032_c.alloc)._field_Default))._field_Scope));;
}



inline jule::Bool _1a7ba2027_checkMatch(_1a7ba14cc_missingRetChecker* _self_, jule::Ptr<_1a7b31c32_Match> _267226_m) {
	{
		auto expr = &((*(_267226_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac52e43d:;
		if (it != expr_end) {
			jule::Ptr<_1a7b32529_Case> _267315_c = *it;
			{
				if ((_267315_c == nullptr)) {
					return false;;
				};
				jule::I32 _26774_n = (*(_self_))._field_breaked.len();;
				jule::Bool _26784_ok = _1a7ba2764_checkScope(_self_, (*(_267315_c))._field_Scope);;
				{
					
					if ((_26774_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1ac530e78:;
						{
							return false;;
						}
					}
					else if ((!(_26784_ok))) {
						_case_begin_1ac531022:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1ac531088;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1ac531088:;
						{
							(*(_self_))._field_falled=false;
							if (((*_267315_c.alloc)._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1ac52e43d;
						}
					}
					_match_end_1ac530e01:;
				};
			}
			_iter_next_1ac52e43d:;
			++it;
			goto _iter_begin_1ac52e43d;
		}
		_iter_end_1ac52e43d:;
	};
	return (((*_267226_m.alloc)._field_Default != nullptr) && _1a7ba2764_checkScope(_self_, (*((*_267226_m.alloc)._field_Default))._field_Scope));;
}



inline jule::Bool _1a7ba2423_checkInfIter(_1a7ba14cc_missingRetChecker* _self_, jule::Uintptr _269824_it, jule::Ptr<_1a7b2c238_Scope>* _269842_s) {
	jule::I32 _26993_n = (*(_self_))._field_breaked.len();;
	if (_1a7ba2764_checkScope(_self_, (*(_269842_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _26993_n);;
		return true;;
	};
	if ((_26993_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_26993_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ac533909:;
			if (it != expr_end) {
				jule::Uintptr _270511_addr = *it;
				{
					if ((_269824_it == _270511_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _26993_n);;
						return false;;
					};
				}
				_iter_next_1ac533909:;
				++it;
				goto _iter_begin_1ac533909;
			}
			_iter_end_1ac533909:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _26993_n);;
	};
	return true;;
}



inline jule::Bool _1a7ba2764_checkScope(_1a7ba14cc_missingRetChecker* _self_, jule::Ptr<_1a7b2c238_Scope> _271626_s) {
	if ((_271626_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_271626_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac535dc3:;
		if (it != expr_end) {
			jule::Any _272015_st = *it;
			{
				{
					auto &_match_expr{ _272015_st };
					
					if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1ac536b93:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1ac536951:;
						{
							jule::Uintptr _27265_addr = (*(_272015_st.unsafe_cast_ptr<_1a7b2e78a_BreakSt>()))._field_It;;
							if ((_27265_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_27265_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1ac536c1a:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type32) {
						_case_begin_1ac536c92:;
						{
							jule::Ptr<_1a7b2d129_InfIter> _27349_ii = _272015_st.unsafe_cast_ptr<_1a7b2d129_InfIter>();;
							if (_1a7ba2423_checkInfIter(_self_, static_cast<jule::Uintptr>(_27349_ii), &((*(_27349_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1ac536d19:;
						{
							jule::Ptr<_1a7b2d5d0_WhileIter> _27399_wn = _272015_st.unsafe_cast_ptr<_1a7b2d5d0_WhileIter>();;
							if ((_1a7b2da86_IsWhileNext(_27399_wn.ptr()) && ((*_27399_wn.alloc)._field_Expr == nullptr))) {
								if (_1a7ba2423_checkInfIter(_self_, static_cast<jule::Uintptr>(_27399_wn), &((*_27399_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1ac536d91:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1ac536e18:;
						{
							if (_1a7ba2764_checkScope(_self_, _272015_st.unsafe_cast_ptr<_1a7b2c238_Scope>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1ac536e90:;
						{
							{
								auto &_match_expr{ (*(_272015_st.cast_ptr<_1a7bed89d_Data>(&__jule_any_type21)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type20) {
									_case_begin_1ac5d53e5:;
									{
										return true;;
									}
								}
								_match_end_1ac5d534b:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1ac537017:;
						{
							if (_1a7ba1bd6_checkConditional(_self_, _272015_st.unsafe_cast_ptr<_1a7b2cd2c_Conditional>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type45) {
						_case_begin_1ac53708e:;
						{
							if (_1a7ba2027_checkMatch(_self_, _272015_st.unsafe_cast_ptr<_1a7b31c32_Match>())) {
								return true;;
							};
						}
					}
					_match_end_1ac536a61:;
				};
			}
			_iter_next_1ac535dc3:;
			++it;
			goto _iter_begin_1ac535dc3;
		}
		_iter_end_1ac535dc3:;
	};
	return false;;
}



inline jule::Bool _1a7ba2aa5_check(_1a7ba14cc_missingRetChecker* _self_, jule::Ptr<_1a7b2c238_Scope> _277121_s) {
	return _1a7ba2764_checkScope(_self_, _277121_s);;
}







inline jule::Bool _1a7ba53c1_IsInitialized(_1a7ba4eb4_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1a7ba5657_IsTypeInferred(_1a7ba4eb4_Var* _self_) {
	return (((*(_self_))._field_TypeSym == nullptr) || ((*((*(_self_))._field_TypeSym))._field_Decl == nullptr));;
}



inline jule::Bool _1a7ba58dd_untypedConstant(_1a7ba4eb4_Var* _self_) {
	return (_1a7ba5657_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}








inline jule::Bool _1a7ba5d3e_FuncPattern_eq(_1a7ba5d3e_FuncPattern *_self_, _1a7ba5d3e_FuncPattern _other_) { return true; }

inline jule::Bool static__1a7ba623a_Str(jule::Ptr<_1a7a70a83_Fn> _1016_f) {
	if (((((((((((_1016_f == nullptr) || ((*(_1016_f))._field_Owner == nullptr)) || (!(*(_1016_f))._field_Ident.equal("Str", 3))) || (*(_1016_f))._field_Statically) || (*(_1016_f))._field_Unsafety) || _1a7a71039_IsVoid(_1016_f.ptr())) || ((*(_1016_f))._field_Generics.len() != 0LL)) || ((*(_1016_f))._field_Params.len() != 1LL)) || (*((*(_1016_f))._field_Params[0LL]))._field_Mutable) || _1a7a6e994_IsRef((*(_1016_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a7a73b41_FnIns> _247_ins = (*(_1016_f))._field_Instances[0LL];;
	jule::Ptr<_1a7c3b369_Prim> _253_prim = _1a7c35671_Prim((*(_247_ins))._field_Result.ptr());;
	if ((_253_prim == nullptr)) {
		return false;;
	};
	return _1a7c3e834_IsStr(_253_prim.ptr());;
}








inline jule::Bool _1a7bd9900_typeCompatibilityChecker_eq(_1a7bd9900_typeCompatibilityChecker *_self_, _1a7bd9900_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1a7bd9e2d_pushErr(_1a7bd9900_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args) {
	_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _10723_fmt, _10743_args);
}



inline jule::Bool _1a7bda1b4_checkTrait(_1a7bd9900_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a7c336d5_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7a7b297_Trait> _1157_trt = _1a7c37211_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1167_ref = false;;
	{
		
		if ((_1a7c36e7a_softStruct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1ac9e7ebc:;
			{
				_julec_label_1ac9e8a6c:;
				jule::Ptr<_1a799a97a_StructIns> _1204_s = _1a7c36e7a_softStruct((*(_self_))._field_src);;
				if ((!(_1a799921a_IsImplements((*(_1204_s))._field_Decl.ptr(), _1157_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1167_ref)) && _1a7bd848c_traitHasReferenceReceiver(&(_1157_trt)))) {
					_1a7bd9e2d_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7c35907_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1ac9e8066:;
			{
				_1167_ref=true;
				(*(_self_))._field_src=(*(_1a7c35907_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_1a7c36e7a_softStruct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _julec_label_1ac9e8a6c;
			}
		}
		else if ((_1a7c37211_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1ac9e80cc:;
			{
				jule::Ptr<_1a7a7b297_Trait> _1378_base = _1a7c37211_Trait((*(_self_))._field_src);;
				if ((_1157_trt == _1378_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1ac9ed368:;
				{
					auto expr = &((*(_1378_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9ecec2:;
					if (it != expr_end) {
						jule::Ptr<_1a7997adc_Struct> _14211_s1 = *it;
						{
							{
								auto expr = &((*(_1157_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac9edd4c:;
								if (it != expr_end) {
									jule::Ptr<_1a7997adc_Struct> _14312_s2 = *it;
									{
										if ((_14211_s1 == _14312_s2)) {
											goto _iter_next_1ac9ecec2;
										};
									}
									_iter_next_1ac9edd4c:;
									++it;
									goto _iter_begin_1ac9edd4c;
								}
								_iter_end_1ac9edd4c:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1ac9ecec2:;
						++it;
						goto _iter_begin_1ac9ecec2;
					}
					_iter_end_1ac9ecec2:;
				};
				{
					auto expr = &((*(_1157_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9ee7a9:;
					if (it != expr_end) {
						jule::Ptr<_1a7a70a83_Fn> _15016_m1 = *it;
						{
							jule::Ptr<_1a7a70a83_Fn> _1519_m2 = _1a7a7be79_FindMethod(_1378_base, (*(_15016_m1))._field_Ident);;
							if ((_1519_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1a7a73b41_FnIns> _1555_m1k = _1a7b8e344_getTraitCheckFnKind((*(_self_))._field_s, &(_15016_m1));;
							jule::Ptr<_1a7a73b41_FnIns> _1565_m2k = _1a7b8e344_getTraitCheckFnKind((*(_self_))._field_s, &(_1519_m2));;
							if ((!(_1a7a74adc_equalTrait(_1555_m1k, &(_1565_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1ac9ee7a9:;
						++it;
						goto _iter_begin_1ac9ee7a9;
					}
					_iter_end_1ac9ee7a9:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac9e7de0:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7bda44a_checkPtr(_1a7bd9900_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a7c336d5_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7c4365c_Ptr> _1707_dest = _1a7c35b8d_Ptr((*(_self_))._field_dest.ptr());;
	if (_1a7c441c9_IsUnsafe(_1707_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1a7c32c9a_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a7bda6d1_checkPrim(_1a7bd9900_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1a7c3b369_Prim> _1794_prim = _1a7c35671_Prim((*(_self_))._field_dest);;
		if (((_1794_prim != nullptr) && _1a7c3eaba_IsAny(_1794_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1a7c32c9a_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a7bdaacc_typeEnum(_1a7bd9900_typeCompatibilityChecker* _self_, jule::Ptr<_1a7a80158_TypeEnum>* _18725_e, jule::Ptr<_1a7c3255d_Type>* _18744_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_18725_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac53c061:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7ea81_TypeEnumItem> _18815_item = *it;
			{
				if (_1a7c32c9a_Equal((*((*(_18815_item))._field_TypeSym))._field_Type, (*(_18744_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1a7a80158_TypeEnum> _1928_ke = _1a7c361aa_TypeEnum((*((*(_18815_item))._field_TypeSym))._field_Type.ptr());;
				if ((_1928_ke == nullptr)) {
					goto _iter_next_1ac53c061;
				};
				if (_1a7bdaacc_typeEnum(_self_, &(_1928_ke), _18744_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac53c061:;
			++it;
			goto _iter_begin_1ac53c061;
		}
		_iter_end_1ac53c061:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7bdad63_checkTypeEnum(_1a7bd9900_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a7c32c9a_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7a80158_TypeEnum> _2077_e = _1a7c361aa_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1a7bdaacc_typeEnum(_self_, &(_2077_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1a7bdb0e9_check(_1a7bd9900_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((_1a7c34dbd_NilCompatible((*(_self_))._field_dest.ptr()) && _1a7c336d5_IsNil((*(_self_))._field_src.ptr()))) {
			_case_begin_1ac54097c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7c361aa_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1ac540a26:;
			{
				__jule_func_result = _1a7bdad63_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a7c37211_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1ac540a8c:;
			{
				__jule_func_result = _1a7bda1b4_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		_match_end_1ac54044e:;
	};
	jule::Ptr<_1a7c3b369_Prim> _2213_prim = _1a7c35671_Prim((*(_self_))._field_dest.ptr());;
	if ((((_2213_prim != nullptr) && (!((*(*(_self_))._field_dest.alloc)._field_Variadic))) && _1a7c3eaba_IsAny(_2213_prim))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((_2213_prim != nullptr)) {
		__jule_func_result = _1a7bda6d1_checkPrim(_self_);
		return __jule_func_result;;
	};
	if (((_1a7c33c02_ActualKind((*(_self_))._field_dest) != (*(*(_self_))._field_dest.alloc)._field_Kind) || (_1a7c33c02_ActualKind((*(_self_))._field_src.ptr()) != (*(*(_self_))._field_src.alloc)._field_Kind))) {
		__jule_func_result = _1a7c32c9a_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
		return __jule_func_result;;
	};
	{
		
		if ((_1a7c35b8d_Ptr((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1ac546521:;
			{
				__jule_func_result = _1a7bda44a_checkPtr(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac545a4d:;
			{
				__jule_func_result = _1a7c32c9a_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1ac544a08:;
	};
}








inline jule::Bool _1a7bdb77b_assignTypeChecker_eq(_1a7bdb77b_assignTypeChecker *_self_, _1a7bdb77b_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _1a7bdbc43_pushErr(_1a7bdb77b_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25543_args) {
	_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25523_fmt, _25543_args);
}



inline jule::Bool _1a7bdbec9_checkValidity(_1a7bdb77b_assignTypeChecker* _self_) {
	jule::Bool _2607_valid = true;;
	{
		
		if ((_1a7c3695d_Fn((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ac547ca3:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _2634_f = _1a7c3695d_Fn((*((*(_self_))._field_d))._field_Type);;
				{
					
					if (_1a7a75109_IsBuiltin(_2634_f.ptr())) {
						_case_begin_1ac549623:;
						{
							_1a7bdbc43_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((*((*(_2634_f))._field_Decl))._field_Binded) {
						_case_begin_1ac5496bc:;
						{
							_1a7bdbc43_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if (((!((*(*(_2634_f))._field_Decl.alloc)._field_Statically)) && _1a7a712c0_IsMethod((*(_2634_f))._field_Decl))) {
						_case_begin_1ac549733:;
						{
							_1a7bdbc43_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((((*(*(_2634_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_2634_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1ac549799:;
						{
							_1a7bdbc43_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_1a7b80335_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					_match_end_1ac549535:;
				};
			}
		}
		else if ((_1a7c3772d_Tup((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ac547d4c:;
			{
				_1a7bdbc43_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2607_valid=false;
			}
		}
		_match_end_1ac547c1a:;
	};
	return _2607_valid;;
}



inline jule::Bool _1a7bdc260_checkConst(_1a7bdb77b_assignTypeChecker* _self_) {
	if ((!((*((*(_self_))._field_d))._field_untyped))) {
		return false;;
	};
	jule::Ptr<_1a7c3b369_Prim> _2907_prim = _1a7c35671_Prim((*(_self_))._field_dest.ptr());;
	if ((_2907_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1a7c3e834_IsStr(_2907_prim.ptr())) {
			_case_begin_1ac5ee0e0:;
			{
				_2907_prim=_1a7c35671_Prim((*((*(_self_))._field_d))._field_Type.ptr());
				return ((_2907_prim != nullptr) && _1a7c3e834_IsStr(_2907_prim.ptr()));;
			}
		}
		else if (_1a7c3e59d_IsBool(_2907_prim.ptr())) {
			_case_begin_1ac5ee156:;
			{
				_2907_prim=_1a7c35671_Prim((*((*(_self_))._field_d))._field_Type.ptr());
				return ((_2907_prim != nullptr) && _1a7c3e59d_IsBool(_2907_prim.ptr()));;
			}
		}
		_match_end_1ac5edc6b:;
	};
	if ((!(_1a7bee2d8_IsConst((*(_self_))._field_d.ptr())))) {
		return _1a7c34043_ActualEqual((*(_self_))._field_dest, (*(*(_self_))._field_d.alloc)._field_Type);;
	};
	jule::Str _3063_kind = (*(_2907_prim))._field_Kind;;
	{
		
		if (_1a7aee75a_IsFloat(_3063_kind)) {
			_case_begin_1ac5edb5b:;
			{
				if ((!(_1a7bd8855_floatAssignable(&(_3063_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_3063_kind;
			}
		}
		else if (_1a7aee419_IsInt(_3063_kind)) {
			_case_begin_1ac602d08:;
			{
				if ((!(_1a7bd9416_intAssignable(_3063_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_3063_kind;
			}
		}
		else {
			_case_begin_1ac602896:;
			{
				return false;;
			}
		}
		_match_end_1ac602676:;
	};
	return true;;
}



inline jule::Bool _1a7bdc4e6_checkCompatibility(_1a7bdb77b_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ac604b62:;
			{
				return false;;
			}
		}
		else if ((!(_1a7bdbec9_checkValidity(_self_)))) {
			_case_begin_1ac604bc8:;
			{
				return false;;
			}
		}
		else if (_1a7bdc260_checkConst(_self_)) {
			_case_begin_1ac604c3e:;
			{
				return true;;
			}
		}
		else if ((_1a7c35e24_Enum((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ac604ca5:;
			{
				jule::Ptr<_1a7c3255d_Type> _3358_dkind = (*(_self_))._field_dest;;
				if ((_1a7c35e24_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3358_dkind=(*((*(_1a7c35e24_Enum((*(_self_))._field_dest)))._field_TypeSym))._field_Type;
				};
				jule::Ptr<_1a7c3b369_Prim> _3394_prim = _1a7c35671_Prim((*(_self_))._field_dest.ptr());;
				if (((_3394_prim == nullptr) || _1a7c3eaba_IsAny(_3394_prim.ptr()))) {
					goto _match_end_1ac60305b;
				};
				jule::Ptr<_1a7c3255d_Type> _3448_dest = (*((*(_1a7c35e24_Enum((*((*(_self_))._field_d))._field_Type)))._field_TypeSym))._field_Type;;
				return _1a7b8cc7c_checkTypeCompatibility((*(_self_))._field_s, &(_3448_dest), &(_3358_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1ac60305b:;
	};
	return _1a7b8d651_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1a7bdc77c_check(_1a7bdb77b_assignTypeChecker* _self_) {
	jule::Bool _3513_ok = _1a7bdc4e6_checkCompatibility(_self_);;
	if ((_3513_ok && (!((*((*((*(_self_))._field_d))._field_Type))._field_Variadic)))) {
		_1a7c50933_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3513_ok;;
}







inline jule::Bool _1ac60b22e_annotateConstraintElem(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _37146_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ac60c83a:;
			{
				jule::Ptr<_1a7c3255d_Type> _3748_elem = static_cast<jule::Ptr<_1a7c3255d_Type>>(nullptr);;
				{
					
{
						_case_begin_1ac60e6a5:;
						{
							_3748_elem=(*(_1a7c36441_Arr((*(_37146_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac612e28:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a797b076_ArrTypeDecl>()))._field_Elem;
				return _1a7bde88e_annotateConstraint(_self_, &(_3748_elem));;
			}
		}
		_match_end_1ac60c7b3:;
	};
	return false;;
}

inline jule::Bool _1ac60e375_annotateConstraintElem(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _37146_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ac612752:;
			{
				jule::Ptr<_1a7c3255d_Type> _3748_elem = static_cast<jule::Ptr<_1a7c3255d_Type>>(nullptr);;
				{
					
{
						_case_begin_1ac618e40:;
						{
							_3748_elem=(*(_1a7c366c7_Slc((*(_37146_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac618eb7:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a797a1da_SlcTypeDecl>()))._field_Elem;
				return _1a7bde88e_annotateConstraint(_self_, &(_3748_elem));;
			}
		}
		_match_end_1ac612664:;
	};
	return false;;
}

inline jule::Bool _1ac60b5e7_annotateConstraintElem(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _37146_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1aca1008e:;
			{
				jule::Ptr<_1a7c3255d_Type> _3748_elem = static_cast<jule::Ptr<_1a7c3255d_Type>>(nullptr);;
				{
					
{
						_case_begin_1aca12b52:;
						{
							_3748_elem=(*(_1a7c35b8d_Ptr((*(_37146_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1aca16370:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a797a7d4_PtrTypeDecl>()))._field_Elem;
				return _1a7bde88e_annotateConstraint(_self_, &(_3748_elem));;
			}
		}
		_match_end_1aca10028:;
	};
	return false;;
}

inline jule::Bool _1aca14e51_annotateConstraintElem(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _37146_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1aca176b2:;
			{
				jule::Ptr<_1a7c3255d_Type> _3748_elem = static_cast<jule::Ptr<_1a7c3255d_Type>>(nullptr);;
				{
					
{
						_case_begin_1aca1961a:;
						{
							_3748_elem=(*(_1a7c35907_Sptr((*(_37146_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1aca1cca0:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a7979d55_SptrTypeDecl>()))._field_Elem;
				return _1a7bde88e_annotateConstraint(_self_, &(_3748_elem));;
			}
		}
		_match_end_1aca1763a:;
	};
	return false;;
}



inline jule::Bool _1a7bdda7a_annotateConstraintMap(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _39142_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1aca0a1ee:;
			{
				jule::Ptr<_1a7c4200c_Map> _3948_m = _1a7c37497_Map((*(_39142_k)).ptr());;
				jule::Ptr<_1a797b7c4_MapTypeDecl> _3958_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a797b7c4_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3958_m2))._field_Key;
				if ((!(_1a7bde88e_annotateConstraint(_self_, &((*(_3948_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3958_m2.alloc)._field_Val;
				__jule_func_result = _1a7bde88e_annotateConstraint(_self_, &((*(_3948_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1aca0a177:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7bdddbb_annotateConstraintTup(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _40642_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1aca0e500:;
			{
				jule::Ptr<_1a797a4d7_TupleTypeDecl> _4098_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a797a4d7_TupleTypeDecl>();;
				jule::Ptr<_1a7c4145c_Tuple> _4108_tup2 = _1a7c3772d_Tup((*(_40642_k)).ptr());;
				{
					auto expr = &((*(_4108_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac5505a2:;
					if (it != expr_end) {
						jule::Ptr<_1a7c3255d_Type> _41116_t2 = *it;
						{
							{
								auto expr = &((*(_4098_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac5510b9:;
								if (it != expr_end) {
									jule::Ptr<_1a7978caa_TypeDecl> _41217_t = *it;
									{
										(*(_self_))._field_c=_41217_t;
										if (_1a7bde88e_annotateConstraint(_self_, &(_41116_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1ac5510b9:;
									++it;
									goto _iter_begin_1ac5510b9;
								}
								_iter_end_1ac5510b9:;
							};
						}
						_iter_next_1ac5505a2:;
						++it;
						goto _iter_begin_1ac5505a2;
					}
					_iter_end_1ac5505a2:;
				};
			}
		}
		_match_end_1aca0e478:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7bde20c_annotateConstraintFn(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _42341_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ac552373:;
			{
				jule::Ptr<_1a798aa47_FnDecl> _4268_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a798aa47_FnDecl>();;
				jule::Ptr<_1a7a73b41_FnIns> _4278_f = _1a7c3695d_Fn((*(_42341_k)).ptr());;
				{
					auto expr = &((*(_4278_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac554ce3:;
					if (it != expr_end) {
						jule::I32 _4289_i = it - expr->begin();
						jule::Ptr<_1a7a729db_ParamIns> _42816_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4268_pf))._field_Params[_4289_i]))._field_Kind;
							if (_1a7bde88e_annotateConstraint(_self_, &((*(_42816_fp))._field_Type))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1ac554ce3:;
						++it;
						_4289_i++;
						goto _iter_begin_1ac554ce3;
					}
					_iter_end_1ac554ce3:;
				};
				if (((*(_4268_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4268_pf))._field_Result.alloc)._field_Kind;
					if (_1a7bde88e_annotateConstraint(_self_, &((*_4278_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1ac55230c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7bde54d_annotateConstraintIdent(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _44444_k) {
	jule::Ptr<_1a79793b5_IdentTypeDecl> _4457_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1a79793b5_IdentTypeDecl>(&__jule_any_type78);;
	jule::Ptr<_1a799a97a_StructIns> _4467_s = _1a7c36be4_Struct((*(_44444_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac558720:;
		if (it != expr_end) {
			jule::I32 _4477_i = it - expr->begin();
			jule::Ptr<_1a7985eb5_GenericDecl> _44710_g = *it;
			{
				if (((*(_44710_g))._field_Ident == (*(_4457_ident))._field_Ident)) {
					jule::Ptr<_1a7c30b77_InsGeneric> _4499_fg = (*((*(_self_))._field_f))._field_Generics[_4477_i];;
					if ((_4499_fg != nullptr)) {
						return false;;
					};
					_1a7bdec02_pushGeneric(_self_, _44444_k, _4477_i);
					return true;;
				};
				if ((_4467_s == nullptr)) {
					goto _iter_next_1ac558720;
				};
				jule::Ptr<_1a7978caa_TypeDecl> _4598_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_4457_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac55b349:;
					if (it != expr_end) {
						jule::Ptr<_1a7978caa_TypeDecl> _46016_ig = *it;
						{
							(*(_self_))._field_c=_46016_ig;
							{
								auto expr = &((*(_4467_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac55bee8:;
								if (it != expr_end) {
									jule::Ptr<_1a7c30b77_InsGeneric> _46217_sg = *it;
									{
										if (_1a7bde88e_annotateConstraint(_self_, &((*(_46217_sg))._field_Type))) {
											return true;;
										};
									}
									_iter_next_1ac55bee8:;
									++it;
									goto _iter_begin_1ac55bee8;
								}
								_iter_end_1ac55bee8:;
							};
						}
						_iter_next_1ac55b349:;
						++it;
						goto _iter_begin_1ac55b349;
					}
					_iter_end_1ac55b349:;
				};
				(*(_self_))._field_c=_4598_c;
			}
			_iter_next_1ac558720:;
			++it;
			_4477_i++;
			goto _iter_begin_1ac558720;
		}
		_iter_end_1ac558720:;
	};
	return false;;
}



inline jule::Bool _1a7bde88e_annotateConstraint(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _47339_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1ac55c38e:;
			{
				return _1a7bde54d_annotateConstraintIdent(_self_, _47339_k);;
			}
		}
		_match_end_1ac55c328:;
	};
	{
		
		if ((_1a7c36441_Arr((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1ac55d1e7:;
			{
				return _1ac60b22e_annotateConstraintElem(_self_, _47339_k);;
			}
		}
		else if ((_1a7c366c7_Slc((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1ac55d25d:;
			{
				return _1ac60e375_annotateConstraintElem(_self_, _47339_k);;
			}
		}
		else if ((_1a7c35b8d_Ptr((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1ac55d2c4:;
			{
				return _1ac60b5e7_annotateConstraintElem(_self_, _47339_k);;
			}
		}
		else if ((_1a7c35907_Sptr((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1ac55d33a:;
			{
				return _1aca14e51_annotateConstraintElem(_self_, _47339_k);;
			}
		}
		else if ((_1a7c37497_Map((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1ac55d3b2:;
			{
				return _1a7bdda7a_annotateConstraintMap(_self_, _47339_k);;
			}
		}
		else if ((_1a7c3695d_Fn((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1ac55d77a:;
			{
				return _1a7bde20c_annotateConstraintFn(_self_, _47339_k);;
			}
		}
		else if ((_1a7c3772d_Tup((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1ac55d802:;
			{
				return _1a7bdddbb_annotateConstraintTup(_self_, _47339_k);;
			}
		}
		else {
			_case_begin_1ac55d0e8:;
			{
				return false;;
			}
		}
		_match_end_1ac55d082:;
	};
}



inline void _1a7bdec02_pushGeneric(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _49832_k, jule::I32 _49842_i) {
	(*((*(_self_))._field_f))._field_Generics[_49842_i]=jule::new_ptr<_1a7c30b77_InsGeneric>(_1a7c30b77_InsGeneric{._field_Type=(*(_49832_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1a7c3255d_Type>>(nullptr)});
	jule::Ptr<_1a7985eb5_GenericDecl> _5007_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_49842_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac560b01:;
		if (it != expr_end) {
			jule::Ptr<_1a7c3255d_Type> _50115_ignored = *it;
			{
				if (((*(_5007_gd))._field_Ident == _1a7c32959_Str(_50115_ignored.ptr()))) {
					(*_50115_ignored.alloc)._field_Kind=(*((*(_49832_k))))._field_Kind;
				};
			}
			_iter_next_1ac560b01:;
			++it;
			goto _iter_begin_1ac560b01;
		}
		_iter_end_1ac560b01:;
	};
	if ((((*(_5007_gd))._field_Constraint == nullptr) || ((*((*(_5007_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_5007_gd))._field_Constraint))._field_Mask[0LL];
	_1a7bde88e_annotateConstraint(_self_, _49832_k);
}



inline jule::Bool _1a7be0043_annotatePrim(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _51340_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a7be2067_annotateAny(_self_, _51340_k);
	return __jule_func_result;;
}



inline jule::Bool _1a7be0384_annotateArr(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _51739_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7c42b89_Arr> _5187_parr = _1a7c36441_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_5187_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7c42b89_Arr> _5227_arr = _1a7c36441_Arr((*(_51739_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5187_parr))._field_Elem));
	__jule_func_result = _1a7be23a8_annotateKind(_self_, &((*(_5227_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a7be06c5_annotateSlc(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _52739_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7c40868_Slc> _5287_pslc = _1a7c366c7_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5287_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7c40868_Slc> _5327_slc = _1a7c366c7_Slc((*(_52739_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5287_pslc))._field_Elem));
	__jule_func_result = _1a7be23a8_annotateKind(_self_, &((*(_5327_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a7be0ac1_checkMapKey(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _53738_k, jule::Ptr<_1a7c3255d_Type>* _53754_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7c3255d_Type>* _5387_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_53738_k;
	__jule_func_result=_1a7be23a8_annotateKind(_self_, _53754_ck);
	(*(_self_))._field_k=_5387_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7be0e12_annotateMap(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _54539_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7c4200c_Map> _5467_pmap = _1a7c37497_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5467_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7c4200c_Map> _5507_m = _1a7c37497_Map((*(_54539_k)).ptr());;
	__jule_func_result = (_1a7be0ac1_checkMapKey(_self_, (&((*(_5467_pmap))._field_Key)), &((*(_5507_m))._field_Key)) && _1a7be0ac1_checkMapKey(_self_, (&((*_5467_pmap.alloc)._field_Val)), &((*_5507_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1a7be1253_annotateFn(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _55538_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7a73b41_FnIns> _5567_pf = _1a7c3695d_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5567_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7a73b41_FnIns> _5607_f = _1a7c3695d_Fn((*(_55538_k)).ptr());;
	{
		
		if (((*(_5567_pf))._field_Params.len() != (*(_5607_f))._field_Params.len())) {
			_case_begin_1aca1ee4a:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1a7a71039_IsVoid((*(_5567_pf))._field_Decl.ptr()) != _1a7a71039_IsVoid((*(_5607_f))._field_Decl))) {
			_case_begin_1aca1eed3:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1aca1eda1:;
	};
	__jule_func_result=true;
	jule::Ptr<_1a7c3255d_Type>* _5697_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5607_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca21d81:;
		if (it != expr_end) {
			jule::I32 _5708_i = it - expr->begin();
			jule::Ptr<_1a7a729db_ParamIns> _57015_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5567_pf))._field_Params[_5708_i]))._field_Type));
				__jule_func_result=(_1a7be23a8_annotateKind(_self_, &((*(_57015_fp))._field_Type)) && __jule_func_result);
			}
			_iter_next_1aca21d81:;
			++it;
			_5708_i++;
			goto _iter_begin_1aca21d81;
		}
		_iter_end_1aca21d81:;
	};
	if ((!(_1a7a71039_IsVoid((*(_5567_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*_5567_pf.alloc)._field_Result));
		__jule_func_result=(_1a7be23a8_annotateKind(_self_, &((*_5607_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5697_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7be1594_annotatePtr(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _58439_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7c4365c_Ptr> _5857_pptr = _1a7c35b8d_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5857_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7c4365c_Ptr> _5897_ptr = _1a7c35b8d_Ptr((*(_58439_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5857_pptr))._field_Elem));
	__jule_func_result = _1a7be23a8_annotateKind(_self_, &((*(_5897_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a7be18d5_annotateSptr(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _59440_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7c3ed95_Sptr> _5957_ssptr = _1a7c35907_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5957_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7c3ed95_Sptr> _5997_sptr = _1a7c35907_Sptr((*(_59440_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5957_ssptr))._field_Elem));
	__jule_func_result = _1a7be23a8_annotateKind(_self_, &((*(_5997_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a7be1c26_annotateStruct(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _60442_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a799a97a_StructIns> _6057_s = _1a7c36be4_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_6057_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a799a97a_StructIns> _6097_s2 = _1a7c36be4_Struct((*(_60442_k)).ptr());;
	if (((*(_6057_s))._field_Generics.len() != (*(_6097_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_6057_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca2ac47:;
		if (it != expr_end) {
			jule::I32 _6138_i = it - expr->begin();
			jule::Ptr<_1a7c30b77_InsGeneric> _61315_g = *it;
			{
				jule::Ptr<_1a7c30b77_InsGeneric> _6148_g2 = (*(_6097_s2))._field_Generics[_6138_i];;
				if (_1a7c32c9a_Equal((*(_61315_g))._field_Type, (*(_6148_g2))._field_Type)) {
					goto _iter_next_1aca2ac47;
				};
				(*(_self_))._field_k=(&((*(_61315_g))._field_Type));
				if ((!(_1a7be23a8_annotateKind(_self_, &((*(_6148_g2))._field_Type))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aca2ac47:;
			++it;
			_6138_i++;
			goto _iter_begin_1aca2ac47;
		}
		_iter_end_1aca2ac47:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7be2067_annotateAny(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _62639_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6273_kind = _1a7c32959_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ababd659:;
		if (it != expr_end) {
			jule::I32 _6287_i = it - expr->begin();
			jule::Ptr<_1a7985eb5_GenericDecl> _62810_g = *it;
			{
				if ((_6273_kind != (*(_62810_g))._field_Ident)) {
					goto _iter_next_1ababd659;
				};
				jule::Ptr<_1a7c30b77_InsGeneric> _6324_t = (*((*(_self_))._field_f))._field_Generics[_6287_i];;
				{
					
					if ((_6324_t == nullptr) || ((*(_6324_t))._field_Type == nullptr)) {
						_case_begin_1abac002e:;
						{
							_1a7bdec02_pushGeneric(_self_, _62639_k, _6287_i);
						}
					}
					else if ((!(_1a7c32c9a_Equal((*(_6324_t))._field_Type, (*(_62639_k)))))) {
						_case_begin_1abac00c8:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1ababeddb:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_62639_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1ababd659:;
			++it;
			_6287_i++;
			goto _iter_begin_1ababd659;
		}
		_iter_end_1ababd659:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7be23a8_annotateKind(_1a7bdd151_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7c3255d_Type>* _64740_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1a7be2067_annotateAny(_self_, _64740_k)) {
			_case_begin_1abac25b4:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7c35671_Prim((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1abac262a:;
			{
				__jule_func_result = _1a7be0043_annotatePrim(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7c36441_Arr((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1abac2691:;
			{
				__jule_func_result = _1a7be0384_annotateArr(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7c366c7_Slc((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1abac2707:;
			{
				__jule_func_result = _1a7be06c5_annotateSlc(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7c37497_Map((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1abac28c2:;
			{
				__jule_func_result = _1a7be0e12_annotateMap(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7c3695d_Fn((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1abac2938:;
			{
				__jule_func_result = _1a7be1253_annotateFn(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7c35b8d_Ptr((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1abac299e:;
			{
				__jule_func_result = _1a7be1594_annotatePtr(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7c35907_Sptr((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1abac2a15:;
			{
				__jule_func_result = _1a7be18d5_annotateSptr(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7c36be4_Struct((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1abac2a7b:;
			{
				__jule_func_result = _1a7be1c26_annotateStruct(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1abac2493:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1abac2020:;
	};
}



inline jule::Bool _1a7be263e_annotate(_1a7bdd151_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Type));
	__jule_func_result = _1a7be23a8_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Type));
	return __jule_func_result;;
}







inline void _1a7be3552_pushErrToken(_1a7be2ead_fnCallArgChecker* _self_, jule::Ptr<_1a79633b0_Token> _69228_token, jule::Str _69250_fmt, jule::Slice<jule::Any> _69270_args) {
	_1a7b7eec2_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _69228_token, _69250_fmt, _69270_args);
}



inline void _1a7be38b5_pushErr(_1a7be2ead_fnCallArgChecker* _self_, jule::Str _69623_fmt, jule::Slice<jule::Any> _69643_args) {
	_1a7be3552_pushErrToken(_self_, (*(_self_))._field_errorToken, _69623_fmt, _69643_args);
}



inline jule::Slice<jule::Ptr<_1a7a729db_ParamIns>> _1a7be3b4b_getParams(_1a7be2ead_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1a7a6e70d_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _1a7be3e8c_checkCounts(_1a7be2ead_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>* _70928_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _7107_n = (*(_70928_params)).len();;
	if (((_7107_n > 0LL) && _1a7a6e70d_IsSelf((*((*(_70928_params))[0LL]))._field_Decl.ptr()))) {
		(_7107_n)--;
	};
	jule::I32 _7157_diff = (_7107_n - (*(_self_))._field_args.len());;
	jule::Str _7167_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_7157_diff == 0LL)) {
			_case_begin_1abad3c57:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_7107_n > 0LL) && (*((*((*(_70928_params))[(_7107_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_1abad3d45:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_7157_diff < 0LL) || (_7157_diff > (*(_70928_params)).len()))) {
			_case_begin_1abad3905:;
			{
				_7167_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_1abad388e:;
			{
				_7167_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_1abad3817:;
	};
	_1bc0a106b_Builder _7277_err = static__1bc0a18b8_New(32LL);;
	({
		auto except = _1bc0a204a_WriteStr(&_7277_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:728:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&_7277_err, jule::Str::lit("\n       want (", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:729:3"));
		(except.result);
	});
	{
		auto expr = _70928_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abad67d7:;
		if (it != expr_end) {
			jule::I32 _7307_i = it - expr->begin();
			jule::Ptr<_1a7a729db_ParamIns> *_73010_p = it;
			{
				({
					auto except = _1bc0a204a_WriteStr(&_7277_err, _1a7c32959_Str((*((*(_73010_p))))._field_Type.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:731:4"));
					(except.result);
				});
				if ((((*(_70928_params)).len() - _7307_i) > 1LL)) {
					({
						auto except = _1bc0a204a_WriteStr(&_7277_err, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:733:5"));
						(except.result);
					});
				};
			}
			_iter_next_1abad67d7:;
			++it;
			_7307_i++;
			goto _iter_begin_1abad67d7;
		}
		_iter_end_1abad67d7:;
	};
	({
		auto except = _1bc0a2303_WriteByte(&_7277_err, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:736:3"));
	});
	_1a7be38b5_pushErr(_self_, _7167_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc0a28ca_Str(&_7277_err), &__jule_any_type5); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7be4443_checkArg(_1a7be2ead_fnCallArgChecker* _self_, jule::Ptr<_1a7a729db_ParamIns>* _74129_p, jule::Ptr<_1a7bed89d_Data>* _74148_arg, jule::Ptr<_1a79633b0_Token>* _74165_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1a7a75e1d_parameterUsesGenerics(_74129_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_74129_p))))._field_Decl))._field_Variadic)) && _1a7bebe62_isGoodValueToInfer(_74148_arg));
		if (__jule_func_result) {
			_1a7bdd151_dynamicTypeAnnotation _7469_dta = _1a7bdd151_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_74129_p)), ._field_a=(*(_74148_arg)), ._field_errorToken=(*(_74165_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1a7be263e_annotate(&_7469_dta);
		};
		if ((!(__jule_func_result))) {
			_1a7be3552_pushErrToken(_self_, (*(_74165_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1a7b91aa5_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_74129_p))))._field_Decl))._field_Mutable, (*(*((*(_74129_p))))._field_Decl.alloc)._field_Reference, &((*((*(_74129_p))))._field_Type), _74148_arg, _74165_errorToken)) {
		__jule_func_result = _1a7b8c320_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_74129_p))))._field_Decl.alloc)._field_Reference, &((*((*(_74129_p))))._field_Type), _74148_arg, (*(_74165_errorToken)), _1a7c03d7b_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7be483e_push(_1a7be2ead_fnCallArgChecker* _self_, jule::Ptr<_1a7a729db_ParamIns>* _77025_p, jule::Ptr<_1a797d0de_Expr> _77043_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7c3255d_Type> _7717_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7723_oldMut = (*(*(_self_))._field_e.alloc)._field_target._field_mutable;;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=(*((*((*(_77025_p))))._field_Decl))._field_Mutable;
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_77025_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_77025_p))))._field_Type;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1a7bed89d_Data> _7807_d = _1a7c204d5_evalExpr((*(_self_))._field_e, _77043_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7717_old;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=_7723_oldMut;
	if ((_7807_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a7be4443_checkArg(_self_, _77025_p, &(_7807_d), &((*(_77043_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7807_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1a7be4c3a_pushVariadic(_1a7be2ead_fnCallArgChecker* _self_, jule::Ptr<_1a7a729db_ParamIns>* _79433_p, jule::I32 _79451_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7967_variadiced = false;;
	jule::Bool _7973_more = ((_79451_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1a7a65c65_SliceExpr> _7987_model = jule::new_ptr<_1a7a65c65_SliceExpr>(_1a7a65c65_SliceExpr{._field_ElemType=(*((*(_79433_p))))._field_Type, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1a7c3255d_Type> _8027_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _8043_oldMut = (*(*(_self_))._field_e.alloc)._field_target._field_mutable;;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=(*((*((*(_79433_p))))._field_Decl))._field_Mutable;
	jule::Ptr<_1a7c3255d_Type> _8127_oldKind = (*((*(_79433_p))))._field_Type;;
	(*((*(_79433_p))))._field_Type=jule::new_ptr<_1a7c3255d_Type>((*(*((*(_79433_p))))._field_Type.alloc));
	(*(*((*(_79433_p))))._field_Type.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_79433_p))))._field_Type.alloc)._field_Variadic=false;
		(*((*(_79433_p))))._field_Type=_8127_oldKind;
	});;
	for (; (_79451_i < (*(_self_))._field_args.len()); (_79451_i)++) {
		{
			jule::Ptr<_1a797d0de_Expr> _8218_arg = (*(_self_))._field_args[_79451_i];;
			{
				auto &_match_expr{ (*(_8218_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type79) {
					_case_begin_1acb2c6c8:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c40868_Slc>(_1a7c40868_Slc{._field_Elem=(*((*(_79433_p))))._field_Type}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1acb2c9c5:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_79433_p))))._field_Type;
					}
				}
				_match_end_1acb2c95e:;
			};
			jule::Ptr<_1a7bed89d_Data> _8348_d = _1a7c1ed53_eval((*(_self_))._field_e, _8218_arg);;
			if ((_8348_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1acb2bb5b;
			};
			if ((*((*(_8348_d))._field_Type))._field_Variadic) {
				_7967_variadiced=true;
				(*((*((*(_79433_p))))._field_Type))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1a7be4443_checkArg(_self_, _79433_p, &(_8348_d), &((*(_8218_arg))._field_Token)));
				(*(*((*(_79433_p))))._field_Type.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8348_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1acb3358b:;
						{
							_7987_model=(*(_8348_d))._field_Model.unsafe_cast_ptr<_1a7a65c65_SliceExpr>();
							(*(_7987_model))._field_ElemType=(*((*(_79433_p))))._field_Type;
						}
					}
					else {
						_case_begin_1acb32b95:;
						{
							_7987_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8348_d))._field_Model); };
						}
					}
					_match_end_1acb32b2e:;
				};
				(_79451_i)++;
				goto _iter_end_1acb2bb5b;
			};
			__jule_func_result=(__jule_func_result && _1a7be4443_checkArg(_self_, _79433_p, &(_8348_d), &((*(_8218_arg))._field_Token)));
			(*(_7987_model))._field_Elems=jule::append((*_7987_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8348_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1acb2bb5b:;
	}
	_iter_end_1acb2bb5b:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_8027_old;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=_8043_oldMut;
	if ((_7967_variadiced && _7973_more)) {
		_1a7be3552_pushErrToken(_self_, (*((*(_self_))._field_args[_79451_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7987_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7987_model, &__jule_any_type80)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7be507b_checkArgs(_1a7be2ead_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>* _87930_params) {
	jule::Bool __jule_func_result = false;
	_1a7beedee_target _8803_target = (*((*(_self_))._field_e))._field_target;;
	(*(*(_self_))._field_e.alloc)._field_target._field_ignored=false;
	__jule_func_result=true;
	jule::I32 _8847_i = 0LL;;
	if ((((*(_87930_params)).len() > 0LL) && _1a7a6e70d_IsSelf((*((*(_87930_params))[0LL]))._field_Decl.ptr()))) {
		(_8847_i)++;
	};
	_julec_label_1acb3c3db:;
	while ((_8847_i < (*(_87930_params)).len())) {
		{
			jule::Ptr<_1a7a729db_ParamIns> _8918_p = (*(_87930_params))[_8847_i];;
			{
				
				if ((*((*(_8918_p))._field_Decl))._field_Variadic) {
					_case_begin_1acb3dd8d:;
					{
						__jule_func_result=(_1a7be4c3a_pushVariadic(_self_, &(_8918_p), _8847_i) && __jule_func_result);
						goto _iter_end_1acb3c5d9;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8847_i)) {
					_case_begin_1acb3de7b:;
					{
						__jule_func_result=false;
						goto _iter_end_1acb3c5d9;
					}
				}
				else {
					_case_begin_1acb3d9c5:;
					{
						__jule_func_result=(_1a7be483e_push(_self_, &(_8918_p), (*(_self_))._field_args[_8847_i]) && __jule_func_result);
					}
				}
				_match_end_1acb3d94d:;
			};
			(_8847_i)++;
		}
	_iter_next_1acb3c5d9:;
	}
	_iter_end_1acb3c5d9:;;
	(*(*(_self_))._field_e.alloc)._field_target=_8803_target;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7be5312_checkDynamicTypeAnnotation(_1a7be2ead_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb40bb4:;
		if (it != expr_end) {
			jule::Ptr<_1a7c30b77_InsGeneric> _91110_g = *it;
			{
				if ((_91110_g == nullptr)) {
					_1a7be38b5_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1acb40bb4:;
			++it;
			goto _iter_begin_1acb40bb4;
		}
		_iter_end_1acb40bb4:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7be5598_check(_1a7be2ead_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a7a729db_ParamIns>> _9217_params = _1a7be3b4b_getParams(_self_);;
	__jule_func_result=_1a7be3e8c_checkCounts(_self_, &(_9217_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a7be507b_checkArgs(_self_, &(_9217_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1a7be5312_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _1a7be6478_pushErr(_1a7be5de5_structLitChecker* _self_, jule::Ptr<_1a79633b0_Token> _95923_token, jule::Str _95945_fmt, jule::Slice<jule::Any> _95965_args) {
	_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), _95923_token, _95945_fmt, _95965_args);
}



inline void _1a7be67db_pushSuggestion(_1a7be5de5_structLitChecker* _self_, jule::Str _96430_fmt, jule::Slice<jule::Any> _96450_args) {
	_1a7c011a8_pushSuggestion((*(_self_))._field_e.ptr(), _96430_fmt, _96450_args);
}



inline void _1a7be6c09_pushMatch(_1a7be5de5_structLitChecker* _self_, jule::Ptr<_1a7999d53_FieldIns>* _96830_f, jule::Ptr<_1a7bed89d_Data>* _96849_d, jule::Ptr<_1a79633b0_Token>* _96864_errorToken) {
	;
	jule::Bool _9743_mutable = ((*((*(_self_))._field_e))._field_target._field_mutable || ((*((*((*(_96830_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1a7b91aa5_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _9743_mutable, false, &((*((*(_96830_f))))._field_Type), _96849_d, _96864_errorToken)) {
		_1a7b8c320_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_96830_f))))._field_Type), _96849_d, (*(_96864_errorToken)), _1a7c03d7b_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_1a7a642b3_StructArgExpr>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1a7a642b3_StructArgExpr>(_1a7a642b3_StructArgExpr{._field_Token=(*(_96864_errorToken)), ._field_Field=(*(_96830_f)), ._field_Expr=(*(_96849_d))})); };
}



inline void _1a7be706c_checkPair(_1a7be5de5_structLitChecker* _self_, jule::Ptr<_1a798280d_FieldExprPair>* _98730_pair, jule::Slice<jule::Ptr<_1a797d0de_Expr>>* _98762_exprs) {
	jule::Ptr<_1a7999d53_FieldIns> _9897_f = _1a799bd33_FindField((*(_self_))._field_s.ptr(), (*((*((*(_98730_pair))))._field_Field))._field_Kind);;
	if ((_9897_f == nullptr)) {
		_1a7be6478_pushErr(_self_, (*((*(_98730_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_98730_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((!(_1a7b80731_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9897_f))._field_Decl))._field_Public, (*(*(_9897_f))._field_Decl.alloc)._field_Token)))) {
		_1a7be6478_pushErr(_self_, (*((*(_98730_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_98730_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1a7be67db_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_1acb50212:;
	{
		auto expr = _98762_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb50e7c:;
		if (it != expr_end) {
			jule::Ptr<_1a797d0de_Expr> _100115_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100115_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1acb5191c:;
						{
							jule::Ptr<_1a798280d_FieldExprPair> _10049_dpair = (*(_100115_expr))._field_Kind.unsafe_cast_ptr<_1a798280d_FieldExprPair>();;
							{
								
								if (((*(_98730_pair)) == _10049_dpair)) {
									_case_begin_1acb53897:;
									{
										goto _iter_end_1acb50e7c;
									}
								}
								else if (((*(*((*(_98730_pair))))._field_Field.alloc)._field_Kind == (*(*(_10049_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1acb5391e:;
									{
										_1a7be6478_pushErr(_self_, (*((*(_98730_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_98730_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
										goto _iter_end_1acb50e7c;
									}
								}
								_match_end_1acb53831:;
							};
						}
					}
					_match_end_1acb51895:;
				};
			}
			_iter_next_1acb50e7c:;
			++it;
			goto _iter_begin_1acb50e7c;
		}
		_iter_end_1acb50e7c:;
	};
	jule::Ptr<_1a7c3255d_Type> _10157_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_10157_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9897_f))._field_Type;
	jule::Ptr<_1a7bed89d_Data> _10197_d = _1a7c204d5_evalExpr((*(_self_))._field_e, (*((*(_98730_pair))))._field_Expr);;
	if ((_10197_d == nullptr)) {
		return;;
	};
	_1a7be6c09_pushMatch(_self_, &(_9897_f), &(_10197_d), &((*((*(_98730_pair))))._field_Field));
}



inline jule::Bool _1a7be73ad_readyExprs(_1a7be5de5_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a797d0de_Expr>>* _102631_exprs) {
	jule::Bool _10277_ok = true;;
	{
		auto expr = _102631_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb59172:;
		if (it != expr_end) {
			jule::I32 _10288_i = it - expr->begin();
			jule::Ptr<_1a797d0de_Expr> _102815_expr = *it;
			{
				{
					auto &_match_expr{ (*(_102815_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1acb59ded:;
						{
							jule::Ptr<_1a7983e19_KeyValPair> _10319_pair = (*(_102815_expr))._field_Kind.unsafe_cast_ptr<_1a7983e19_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10319_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type41) {
									_case_begin_1acb5bc8a:;
									{
										goto _match_end_1acb5c64d;
									}
								}
								else {
									_case_begin_1acb5c6b4:;
									{
										_1a7be6478_pushErr(_self_, (*(_10319_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_10277_ok=false;
										goto _iter_next_1acb59172;
									}
								}
								_match_end_1acb5c64d:;
							};
							(*((*(_102631_exprs))[_10288_i]))._field_Kind=jule::Any(jule::new_ptr<_1a798280d_FieldExprPair>(_1a798280d_FieldExprPair{._field_Field=(*((*(_10319_pair))._field_Key))._field_Token, ._field_Expr=(*_10319_pair.alloc)._field_Val}), &__jule_any_type81);
						}
					}
					_match_end_1acb59d76:;
				};
			}
			_iter_next_1acb59172:;
			++it;
			_10288_i++;
			goto _iter_begin_1acb59172;
		}
		_iter_end_1acb59172:;
	};
	return _10277_ok;;
}



inline void _1a7be7666_check(_1a7be5de5_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a797d0de_Expr>>* _105026_exprs) {
	if (((*(_105026_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1a7be73ad_readyExprs(_self_, _105026_exprs)))) {
		return;;
	};
	jule::Bool _10577_paired = false;;
	{
		auto expr = _105026_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb5e63e:;
		if (it != expr_end) {
			jule::I32 _10588_i = it - expr->begin();
			jule::Ptr<_1a797d0de_Expr> _105815_expr = *it;
			{
				{
					auto &_match_expr{ (*(_105815_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1acb669dc:;
						{
							jule::Ptr<_1a798280d_FieldExprPair> _10619_pair = (*(_105815_expr))._field_Kind.unsafe_cast_ptr<_1a798280d_FieldExprPair>();;
							if (((_10588_i > 0LL) && (!(_10577_paired)))) {
								_1a7be6478_pushErr(_self_, (*(_10619_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10577_paired=true;
							_1a7be706c_checkPair(_self_, &(_10619_pair), _105026_exprs);
						}
					}
					else {
						_case_begin_1acb61d6c:;
						{
							if (_10577_paired) {
								_1a7be6478_pushErr(_self_, (*(_105815_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10588_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1a7be6478_pushErr(_self_, (*(_105815_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_1acb5e63e;
							};
							jule::Ptr<_1a7999d53_FieldIns> _10769_field = (*((*(_self_))._field_s))._field_Fields[_10588_i];;
							if ((!(_1a7b80731_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10769_field))._field_Decl))._field_Public, (*(*(_10769_field))._field_Decl.alloc)._field_Token)))) {
								_1a7be6478_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_1a7be67db_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a7c3255d_Type> _10849_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10849_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*(_10769_field))._field_Type;
							jule::Ptr<_1a7bed89d_Data> _10889_d = _1a7c204d5_evalExpr((*(_self_))._field_e, _105815_expr);;
							if ((_10889_d == nullptr)) {
								goto _iter_next_1acb5e63e;
							};
							_1a7be6c09_pushMatch(_self_, &(_10769_field), &(_10889_d), &((*(_105815_expr))._field_Token));
						}
					}
					_match_end_1acb61d06:;
				};
			}
			_iter_next_1acb5e63e:;
			++it;
			_10588_i++;
			goto _iter_begin_1acb5e63e;
		}
		_iter_end_1acb5e63e:;
	};
	if ((!(_10577_paired))) {
		jule::I32 _10994_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I32 _11008_diff = (_10994_n - (*(_105026_exprs)).len());;
		{
			
			if ((_11008_diff <= 0LL)) {
				_case_begin_1acb6a491:;
				{
					return;;
				}
			}
			_match_end_1acb6a370:;
		};
		_1bc0a106b_Builder _11068_idents = static__1bc0a18b8_New(32LL);;
		for (; (_11008_diff > 0LL); (_11008_diff)--) {
			{
				({
					auto except = _1bc0a204a_WriteStr(&_11068_idents, jule::Str::lit(", ", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1108:5"));
					(except.result);
				});
				({
					auto except = _1bc0a204a_WriteStr(&_11068_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10994_n - _11008_diff)]))._field_Decl))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1109:5"));
					(except.result);
				});
			}
		_iter_next_1acb6b0a7:;
		}
		_iter_end_1acb6b0a7:;;
		_1a7be6478_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_1bc0a337b_Buf(&_11068_idents).slice(2LL)), &__jule_any_type5); __jule_collection; }));
	};
}








inline jule::Bool _1a7be7bc7_rangeChecker_eq(_1a7be7bc7_rangeChecker *_self_, _1a7be7bc7_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1a7ba4eb4_Var> _1a7be81e4_buildVar(_1a7be7bc7_rangeChecker* _self_, jule::Ptr<_1a798bc02_VarDecl>* _112625_decl) {
	jule::Ptr<_1a7ba4eb4_Var> _11277_v = _1a7b52b43_buildVar((*(_112625_decl)));;
	return _11277_v;;
}



inline void _1a7be83e2_setSizeKey(_1a7be7bc7_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a7965c97_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1a7be81e4_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=(*(_1a7ca9b35_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
}



inline void _1a7be8810_checkRangeExprValidity(_1a7be7bc7_rangeChecker* _self_, jule::Ptr<_1a7bed89d_Data>* _114543_d, jule::Ptr<_1a7ba4eb4_Var>* _114554_key, jule::Ptr<_1a7c3255d_Type>* _114570_k) {
	jule::Bool _11467__mut = (*((*(_114554_key))))._field_Mutable;;
	if ((_11467__mut && (!(_1a7c348a1_Mutable((*(_114570_k)).ptr()))))) {
		_11467__mut=false;
	};
	_1a7b91aa5_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11467__mut, (*((*(_114554_key))))._field_Reference, &((*((*((*(_114554_key))))._field_TypeSym))._field_Type), _114543_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1a7be8a0d_checkSlice(_1a7be7bc7_rangeChecker* _self_) {
	_1a7be83e2_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a7965c97_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a7c40868_Slc> _11647_slc = _1a7c366c7_Slc((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7be81e4_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=(*(_11647_slc))._field_Elem});
	_1a7be8810_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11647_slc.alloc)._field_Elem));
}



inline void _1a7be8c0b_checkArray(_1a7be7bc7_rangeChecker* _self_) {
	_1a7be83e2_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a7965c97_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a7c42b89_Arr> _11777_arr = _1a7c36441_Arr((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7be81e4_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=(*(_11777_arr))._field_Elem});
	_1a7be8810_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11777_arr.alloc)._field_Elem));
}



inline void _1a7be8e09_checkMapKeyA(_1a7be7bc7_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a7965c97_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a7c4200c_Map> _11897_m = _1a7c37497_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1a7be81e4_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=(*(_11897_m))._field_Key});
	jule::Ptr<_1a7bed89d_Data> _11937_d = jule::new_ptr<_1a7bed89d_Data>((*(*(_self_))._field_d.alloc));;
	(*_11937_d.alloc)._field_Type=(*_11897_m.alloc)._field_Key;
	_1a7be8810_checkRangeExprValidity(_self_, &(_11937_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11897_m.alloc)._field_Key));
}



inline void _1a7be9107_checkMapKeyB(_1a7be7bc7_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a7965c97_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a7c4200c_Map> _12047_m = _1a7c37497_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7be81e4_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=(*(_12047_m))._field_Val});
	jule::Ptr<_1a7bed89d_Data> _12087_d = jule::new_ptr<_1a7bed89d_Data>((*(*(_self_))._field_d.alloc));;
	(*_12087_d.alloc)._field_Type=(*_12047_m.alloc)._field_Val;
	_1a7be8810_checkRangeExprValidity(_self_, &(_12087_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_12047_m.alloc)._field_Val));
}



inline void _1a7be9305_checkMap(_1a7be7bc7_rangeChecker* _self_) {
	_1a7be8e09_checkMapKeyA(_self_);
	_1a7be9107_checkMapKeyB(_self_);
}



inline void _1a7be9503_checkStr(_1a7be7bc7_rangeChecker* _self_) {
	_1a7be83e2_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a7965c97_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7be81e4_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=(*(_1a7ca9b35_findBuiltinTypeAlias(jule::Str::lit("byte", 4))))._field_TypeSym;
}



inline void _1a7be9701_checkComptime(_1a7be7bc7_rangeChecker* _self_) {
	_1a7be83e2_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1a7b7eec2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1a7b7eec2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a7965c97_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7be81e4_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _1a7be9987_checkComptimeRange(_1a7be7bc7_rangeChecker* _self_) {
	jule::Ptr<_1a7b00e65_comptimeRange> _12437_range = _1a7c38ca1_comptimeRange((*((*(_self_))._field_d))._field_Type.ptr());;
	{
		auto &_match_expr{ (*(_12437_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data6)) {
			_case_begin_1acb8be74:;
			{
				_1a7be9701_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1acb8c282:;
			{
				_1a7b7eec2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1acb8c21b:;
	};
}



inline jule::Bool _1a7be9c1d_check(_1a7be7bc7_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Type))._field_Variadic) {
			_case_begin_1acb90a05:;
		}
		else if ((_1a7c366c7_Slc((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1acb904b6:;
			{
				_1a7be8a0d_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1a7c36441_Arr((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_1acb8dd33:;
			{
				_1a7be8c0b_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1a7c37497_Map((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_1acb8dd99:;
			{
				_1a7be9305_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1a7c38ca1_comptimeRange((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_1acb8e471:;
			{
				return _1a7be9987_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1acb8dcab:;
			{
				jule::Ptr<_1a7c3b369_Prim> _12764_prim = _1a7c35671_Prim((*((*(_self_))._field_d))._field_Type);;
				if (((_12764_prim != nullptr) && _1a7c3e834_IsStr(_12764_prim))) {
					_1a7be9503_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1acb8db9b:;
	};
	_1a7b7eec2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _1a7bea9dd_prepareTypes(_1a7bea5e2_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1a7a74d73_Types((*(_self_))._field_f);
	};
}



inline jule::Bool _1a7bead2e_prepareExprs(_1a7bea5e2_retTypeChecker* _self_, jule::Ptr<_1a797d0de_Expr>* _130633_e) {
	jule::Bool __jule_func_result = false;
	if (((*(_130633_e)) == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_130633_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1acb963ac:;
			{
				(*(_self_))._field_exprDecls=(*((*((*(_130633_e))))._field_Kind.unsafe_cast_ptr<_1a797dbd3_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1acb9618c:;
			{
				(*(_self_))._field_exprDecls=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a797d0de_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_130633_e)); __jule_collection; });
			}
		}
		_match_end_1acb96126:;
	};
	__jule_func_result=true;
	jule::Ptr<_1a7c0086c_eval> _13177_eval = _1a7b8bc04_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));;
	(*(_13177_eval))._field_target._field_mutable=(*(_self_))._field_mutable;
	{
		auto expr = &((*(_self_))._field_exprDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb987bb:;
		if (it != expr_end) {
			jule::I32 _13198_i = it - expr->begin();
			jule::Ptr<_1a797d0de_Expr> _131915_expr = *it;
			{
				if ((_13198_i < (*(_self_))._field_types.len())) {
					(*_13177_eval.alloc)._field_prefix=(*(_self_))._field_types[_13198_i];
				};
				jule::Ptr<_1a7bed89d_Data> _13238_d = _1a7c204d5_evalExpr(_13177_eval, _131915_expr);;
				__jule_func_result=(__jule_func_result && (_13238_d != nullptr));
				if (__jule_func_result) {
					{ jule::Slice<jule::Ptr<_1a7bed89d_Data>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push(_13238_d); };
				};
			}
			_iter_next_1acb987bb:;
			++it;
			_13198_i++;
			goto _iter_begin_1acb987bb;
		}
		_iter_end_1acb987bb:;
	};
	return __jule_func_result;;
}



inline void _1a7beb02c_checkExprs(_1a7bea5e2_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb9b2a2:;
		if (it != expr_end) {
			jule::I32 _13368_i = it - expr->begin();
			jule::Ptr<_1a7bed89d_Data> _133615_d = *it;
			{
				jule::Ptr<_1a797d0de_Expr> _13378_expr = (*(_self_))._field_exprDecls[_13368_i];;
				if ((((*(_self_))._field_mutable && (!((*(_133615_d))._field_Mutable))) && _1a7c348a1_Mutable((*_133615_d.alloc)._field_Type.ptr()))) {
					_1a7b7eec2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_13378_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_1a7bdb77b_assignTypeChecker _13428_ac = _1a7bdb77b_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=(*(_self_))._field_types[_13368_i], ._field_d=_133615_d, ._field_errorToken=(*(_13378_expr))._field_Token, ._field_refers=(*((*(_1a7b3809b_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_1a7bdc77c_check(&_13428_ac);
			}
			_iter_next_1acb9b2a2:;
			++it;
			_13368_i++;
			goto _iter_begin_1acb9b2a2;
		}
		_iter_end_1acb9b2a2:;
	};
	if (((*(_self_))._field_exprs.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1a7a68e99_TupleExpr>(_1a7a68e99_TupleExpr{._field_Datas=(*(_self_))._field_exprs}), &__jule_any_type83);
	} else if (((*(_self_))._field_exprs.len() == 1LL)) {
		(*(_self_))._field_model=(*((*(_self_))._field_exprs[0LL]))._field_Model;
	};
}



inline void _1a7beb22a_tryFuncMultiRetForward(_1a7bea5e2_retTypeChecker* _self_) {
	jule::Ptr<_1a7c4145c_Tuple> _13627_tup = _1a7c3772d_Tup((*((*(_self_))._field_exprs[0LL]))._field_Type.ptr());;
	if (((*(_13627_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1acba3ce3;
	};
	(*(_self_))._field_model=(*((*(_self_))._field_exprs[0LL]))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acba46ea:;
		if (it != expr_end) {
			jule::I32 _13677_i = it - expr->begin();
			{
				jule::Ptr<_1a7c3255d_Type> _13688_t1 = (*(_self_))._field_types[_13677_i];;
				jule::Ptr<_1a7c3255d_Type> _13698_t2 = (*(_13627_tup))._field_Types[_13677_i];;
				if ((!(_1a7b8c7c6__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13688_t1), &(_13698_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1acba3ce3;
				};
			}
			_iter_next_1acba46ea:;
			++it;
			_13677_i++;
			goto _iter_begin_1acba46ea;
		}
		_iter_end_1acba46ea:;
	};
	return;;
	_julec_label_1acba3ce3:;
	_1a7beb428_notFitVariables(_self_);
}



inline void _1a7beb428_notFitVariables(_1a7bea5e2_retTypeChecker* _self_) {
	_1bc0a106b_Builder _13807_wanted = static__1bc0a18b8_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acba8314:;
		if (it != expr_end) {
			jule::I32 _13817_i = it - expr->begin();
			jule::Ptr<_1a7c3255d_Type> _138110_t = *it;
			{
				({
					auto except = _1bc0a204a_WriteStr(&_13807_wanted, _1a7c32959_Str(_138110_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1382:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13817_i) > 1LL)) {
					({
						auto except = _1bc0a204a_WriteStr(&_13807_wanted, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1384:5"));
						(except.result);
					});
				};
			}
			_iter_next_1acba8314:;
			++it;
			_13817_i++;
			goto _iter_begin_1acba8314;
		}
		_iter_end_1acba8314:;
	};
	_1bc0a106b_Builder _13877_given = static__1bc0a18b8_New(32LL);;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acba81c1:;
		if (it != expr_end) {
			jule::I32 _13887_i = it - expr->begin();
			jule::Ptr<_1a7bed89d_Data> _138810_d = *it;
			{
				({
					auto except = _1bc0a204a_WriteStr(&_13877_given, _1a7c32959_Str((*(_138810_d))._field_Type.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1389:4"));
					(except.result);
				});
				if ((((*(_self_))._field_exprs.len() - _13887_i) > 1LL)) {
					({
						auto except = _1bc0a204a_WriteStr(&_13877_given, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1391:5"));
						(except.result);
					});
				};
			}
			_iter_next_1acba81c1:;
			++it;
			_13887_i++;
			goto _iter_begin_1acba81c1;
		}
		_iter_end_1acba81c1:;
	};
	if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
		_1a7b7eec2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("not enough variables for return\n       want (@)\n       have (@)", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc0a28ca_Str(&_13807_wanted), &__jule_any_type5); (*it++) = jule::Any(_1bc0a28ca_Str(&_13877_given), &__jule_any_type5); __jule_collection; }));
	} else {
		_1a7b7eec2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("too many variables for return\n       want (@)\n       have (@)", 61)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc0a28ca_Str(&_13807_wanted), &__jule_any_type5); (*it++) = jule::Any(_1bc0a28ca_Str(&_13877_given), &__jule_any_type5); __jule_collection; }));
	};
}



inline jule::Bool _1a7beb769_check(_1a7bea5e2_retTypeChecker* _self_, jule::Ptr<_1a797d0de_Expr>* _140126_e) {
	_1a7bea9dd_prepareTypes(_self_);
	jule::Bool _14037_ok = _1a7bead2e_prepareExprs(_self_, _140126_e);;
	if ((!(_14037_ok))) {
		return false;;
	};
	{
		
		if (((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL)) && _1a7a71d09_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr()))) {
			_case_begin_1ac56cec6:;
			{
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL)) && (_1a7c3772d_Tup((*((*(_self_))._field_exprs[0LL]))._field_Type.ptr()) != nullptr))) {
			_case_begin_1ac56d16e:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1ac570e52:;
						{
							_1a7beb22a_tryFuncMultiRetForward(_self_);
							return true;;
						}
					}
					_match_end_1ac570d97:;
				};
				goto _case_begin_1ac56d1d5;
			}
		}
		else if (((*(_self_))._field_exprs.len() != (*(_self_))._field_types.len())) {
			_case_begin_1ac56d1d5:;
			{
				_1a7beb428_notFitVariables(_self_);
				return false;;
			}
		}
		_match_end_1ac56cdd8:;
	};
	_1a7beb02c_checkExprs(_self_);
	return true;;
}








inline jule::Bool _1a7bed89d_Data_eq(_1a7bed89d_Data *_self_, _1a7bed89d_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1a7bedcbb_IsNil(_1a7bed89d_Data* _self_) {
	return _1a7c336d5_IsNil((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1a7bee052_IsVoid(_1a7bed89d_Data* _self_) {
	return _1a7c3396b_Void((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1a7bee2d8_IsConst(_1a7bed89d_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1a7bee629_GoodOperand(_1a7bed89d_Data* _self_, jule::Ptr<_1a7bed89d_Data>* _6228_other) {
	if ((_1a7c361aa_TypeEnum((*((*(_6228_other))))._field_Type.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1a7c35671_Prim((*((*(_6228_other))))._field_Type.ptr()) == nullptr) || (!(_1a7c3eaba_IsAny(_1a7c35671_Prim((*((*(_6228_other))))._field_Type.ptr()).ptr())))) && (_1a7c37211_Trait((*((*(_6228_other))))._field_Type.ptr()) == nullptr)) && (!(_1a7c336d5_IsNil((*(_self_))._field_Type))));;
}








inline jule::Bool _1a7beea25_Value_eq(_1a7beea25_Value *_self_, _1a7beea25_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _1a7beedee_target_eq(_1a7beedee_target *_self_, _1a7beedee_target _other_) {
	return 
		(_self_->_field_ignored == _other_._field_ignored) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _1a7c0086c_eval_eq(_1a7c0086c_eval *_self_, _1a7c0086c_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		_1a7beedee_target_eq(&_self_->_field_target, _self_->_field_target);
}

inline void _1a7c00d45_pushErr(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args) {
	_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), _9723_token, _9745_fmt, _9765_args);
}



inline void _1a7c011a8_pushSuggestion(_1a7c0086c_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args) {
	_1a7b80335_pushSuggestion((*(_self_))._field_s.ptr(), _10230_fmt, _10250_args);
}



inline void _1a7c013a6_allowBuiltin(_1a7c0086c_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a7c015a4_disallowBuiltin(_1a7c0086c_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1a7c0183a_isUnsafe(_1a7c0086c_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1a7c01ac1_isGlobal(_1a7c0086c_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4)) {
			_case_begin_1aca37869:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aca37c21:;
			{
				return false;;
			}
		}
		_match_end_1aca37a78:;
	};
}



inline jule::Bool _1a7c01e12_applyNumericPrefix(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _12939_d) {
	if ((((((*(_12939_d)) == nullptr) || (!(_1a7bee2d8_IsConst((*(_12939_d)).ptr())))) || (_1a7c35671_Prim((*((*(_12939_d))))._field_Type.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a7c3b369_Prim> _1363_prim = _1a7c35671_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1363_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1a7aee75a_IsFloat(_1a7c3b6dd_Str(_1363_prim.ptr()))) {
			_case_begin_1aca3a691:;
			{
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>((*(*(_self_))._field_prefix.alloc));
				_1a7a5aa90_SetF64((*((*(_12939_d))))._field_Constant.ptr(), _1a7a59c15_AsF64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		else if (_1a7aedd42_IsSigInt(_1a7c3b6dd_Str(_1363_prim.ptr()))) {
			_case_begin_1aca3a707:;
			{
				if ((!(_1a7bd8bc9_sigAssignable(_1a7c3b6dd_Str(_1363_prim), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>((*(*(_self_))._field_prefix.alloc));
				_1a7a59ebd_SetI64((*((*(_12939_d))))._field_Constant.ptr(), _1a7a596e8_AsI64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		else if (_1a7aee150_IsUnsigInt(_1a7c3b6dd_Str(_1363_prim))) {
			_case_begin_1aca3a76d:;
			{
				if ((!(_1a7bd9092_unsigAssignable(_1a7c3b6dd_Str(_1363_prim), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>((*(*(_self_))._field_prefix.alloc));
				_1a7a5a276_SetU64((*((*(_12939_d))))._field_Constant.ptr(), _1a7a5997e_AsU64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		_match_end_1aca3a30b:;
	};
	return true;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c02253_litStr(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e079_LitExpr>* _16419_l) {
	jule::Str _1657_s = jule::Str();;
	if (_1a796479b_IsRawStr((*((*(_16419_l))))._field_Value)) {
		_1657_s=_1a7bd704b_ToRawStr((*((*(_16419_l))))._field_Value);
	} else {
		_1657_s=_1a7bd738c_ToStr((*((*(_16419_l))))._field_Value);
	};
	jule::Ptr<_1a79ea9a8_Const> _1717_constant = static__1a7a57ce0_NewStr(_1657_s);;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca6aee_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1717_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1717_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c02594_litRune(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e079_LitExpr>* _18220_l) {
	jule::I32 _1833_r = _1a7bbbaad_ToRune((*((*(_18220_l))))._field_Value);;
	jule::Ptr<_1a7bed89d_Data> _1847_data = jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a7a574d7_NewI64(static_cast<jule::I64>(_1833_r))});;
	if ((_1833_r <= 255LL)) {
		(*(_1847_data))._field_Type=(*((*(_1a7ca9b35_findBuiltinTypeAlias(jule::Str::lit("byte", 4))))._field_TypeSym))._field_Type;
	} else {
		(*(_1847_data))._field_Type=(*((*(_1a7ca9b35_findBuiltinTypeAlias(jule::Str::lit("rune", 4))))._field_TypeSym))._field_Type;
	};
	(*(_1847_data))._field_Model=jule::Any(jule::new_ptr<_1a7a6c5da_RuneExpr>(_1a7a6c5da_RuneExpr{._field_Code=_1833_r}), &__jule_any_type84);
	(*_1847_data.alloc)._field_Mutable=true;
	(*_1847_data.alloc)._field_IsRune=true;
	(*_1847_data.alloc)._field_untyped=true;
	return _1847_data;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c028d5_litFloat(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e079_LitExpr>* _20121_l) {
	jule::F64 _2023_f = ({
		auto except = _1a49e8cb7_ParseFloat((*((*(_20121_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1a79ea9a8_Const> _2037_constant = static__1a7a580a9_NewF64(_2023_f);;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca9580_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2037_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_2037_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c02c26_litInt(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e079_LitExpr>* _21323_l) {
	;
	jule::Str _2167_lit = (*((*(_21323_l))))._field_Value;;
	jule::I32 _2177_base = 0LL;;
	{
		
		if (_1bd42a647_HasPrefix(_2167_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1ac6238d9:;
			{
				(_2167_lit).mut_slice(2LL);;
				_2177_base=16LLU;
			}
		}
		else if (_1bd42a647_HasPrefix(_2167_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1ac6239c7:;
			{
				(_2167_lit).mut_slice(2LL);;
				_2177_base=2LLU;
			}
		}
		else if (_1bd42a647_HasPrefix(_2167_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1ac623587:;
			{
				(_2167_lit).mut_slice(2LL);;
				_2177_base=8LLU;
			}
		}
		else if (((_2167_lit[0LL] == '0') && (_2167_lit.len() > 1LL))) {
			_case_begin_1ac6235ed:;
			{
				(_2167_lit).mut_slice(1LL);;
				_2177_base=8LLU;
			}
		}
		else {
			_case_begin_1ac623521:;
			{
				_2177_base=10LLU;
			}
		}
		_match_end_1ac623499:;
	};
	jule::Ptr<_1a7bed89d_Data> _2377_d = jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
	jule::Bool _2397_ok = true;;
	jule::I64 _2403_sig = ({
		auto except = _1a49e260c_ParseInt(_2167_lit, _2177_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2397_ok=false;

			0LL;
		});
	});;
	if (_2397_ok) {
		(*_2377_d.alloc)._field_Constant=static__1a7a574d7_NewI64(_2403_sig);
		(*_2377_d.alloc)._field_Type=_1a7ca77d1_primInt;
	} else {
		jule::U64 _2484_unsig = ({
			auto except = _1a49e2156_ParseUint(_2167_lit, _2177_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1a7c00d45_pushErr(_self_, (*((*(_21323_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2377_d.alloc)._field_Constant=static__1a7a5775c_NewU64(_2484_unsig);
		(*_2377_d.alloc)._field_Type=_1a7ca7418_primUint;
	};
	(*_2377_d.alloc)._field_Model=jule::Any((*_2377_d.alloc)._field_Constant, &__jule_any_type15);
	(*_2377_d.alloc)._field_untyped=true;
	if ((!(_1a7c01e12_applyNumericPrefix(_self_, &(_2377_d))))) {
		_1a7c293ce_fitBitsize(&(_2377_d));
	};
	return _2377_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c03067_litNum(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e079_LitExpr>* _26823_l) {
	{
		
		if (_1a796544a_IsFloat((*((*(_26823_l))))._field_Value)) {
			_case_begin_1ac62aa01:;
			{
				return _1a7c028d5_litFloat(_self_, _26823_l);;
			}
		}
		else {
			_case_begin_1ac62a98a:;
			{
				return _1a7c02c26_litInt(_self_, _26823_l);;
			}
		}
		_match_end_1ac62a88b:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c033a8_evalLit(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e079_LitExpr> _27723_lit) {
	{
		
		if (_1a7964515_IsStr((*(_27723_lit))._field_Value)) {
			_case_begin_1ac62bb67:;
			{
				return _1a7c02253_litStr(_self_, &(_27723_lit));;
			}
		}
		else if (_1a7964a65_IsRune((*(_27723_lit))._field_Value)) {
			_case_begin_1ac62bc11:;
			{
				return _1a7c02594_litRune(_self_, &(_27723_lit));;
			}
		}
		else if (_1a7965714_IsNum((*_27723_lit.alloc)._field_Value)) {
			_case_begin_1ac62bc88:;
			{
				return _1a7c03067_litNum(_self_, &(_27723_lit));;
			}
		}
		else {
			_case_begin_1ac62b628:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac62b529:;
	};
}



inline jule::Any _1a7c036e9_findBuiltins(_1a7c0086c_eval* _self_, jule::Str* _29029_ident) {
	if (_1a7b78d56_IsPub((*(_29029_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data2)) {
				_case_begin_1ac62e043:;
				{
					jule::Any _2949_def = _1a7c2919d_findBuiltinsImport(_29029_ident, (*(_self_))._field_lookup.cast_ptr<_1a7b5e80e_ImportInfo>((jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data2));;
					if ((_2949_def != nullptr)) {
						return _2949_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4)) {
				_case_begin_1ac62dc8a:;
				{
					jule::Any _2999_def = _1a7c29e07_findBuiltinsSema(_29029_ident, (*(_self_))._field_lookup.cast_ptr<_1a7b7c0bd_sema>((jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4));;
					if ((_2999_def != nullptr)) {
						return _2999_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)) {
				_case_begin_1ac62e0a9:;
				{
					jule::Any _3049_def = _1a7c29e07_findBuiltinsSema(_29029_ident, (*((*(_self_))._field_lookup.cast_ptr<_1a7b34938_scopeChecker>((jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)))._field_s);;
					if ((_3049_def != nullptr)) {
						return _3049_def;;
					};
				}
			}
			_match_end_1ac62de88:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1a7ca9dbb_findBuiltinDef(_29029_ident);;
}



inline jule::Any _1a7c03ae5_getDef(_1a7c0086c_eval* _self_, jule::Str* _31723_ident, jule::Bool _31735_binded) {
	jule::Ptr<_1a7ba4eb4_Var> _3227_v = ((_1a7c5342a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7c51b10_FindVar((*(_self_))._field_lookup.data, (*(_31723_ident)), _31735_binded);;
	if ((_3227_v != nullptr)) {
		return jule::Any(_3227_v, &__jule_any_type7);;
	};
	jule::Ptr<_1a7c31848_TypeAlias> _3277_ta = ((_1a7c5342a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7c5200b_FindTypeAlias((*(_self_))._field_lookup.data, (*(_31723_ident)), _31735_binded);;
	if ((_3277_ta != nullptr)) {
		return jule::Any(_3277_ta, &__jule_any_type8);;
	};
	if ((!(_31735_binded))) {
		jule::Ptr<_1a7a7d94d_Enum> _3338_enm = ((_1a7c5342a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7c52e85_FindEnum((*(_self_))._field_lookup.data, (*(_31723_ident)));;
		if ((_3338_enm != nullptr)) {
			return jule::Any(_3338_enm, &__jule_any_type12);;
		};
		jule::Ptr<_1a7a80158_TypeEnum> _3388_tenm = ((_1a7c5342a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7c532c6_FindTypeEnum((*(_self_))._field_lookup.data, (*(_31723_ident)));;
		if ((_3388_tenm != nullptr)) {
			return jule::Any(_3388_tenm, &__jule_any_type13);;
		};
	};
	jule::Ptr<_1a7a70a83_Fn> _3447_f = ((_1a7c5342a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7c52803_FindFn((*(_self_))._field_lookup.data, (*(_31723_ident)), _31735_binded);;
	if ((_3447_f != nullptr)) {
		return jule::Any(_3447_f, &__jule_any_type10);;
	};
	jule::Ptr<_1a7997adc_Struct> _3497_s = ((_1a7c5342a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7c52407_FindStruct((*(_self_))._field_lookup.data, (*(_31723_ident)), _31735_binded);;
	if ((_3497_s != nullptr)) {
		return jule::Any(_3497_s, &__jule_any_type9);;
	};
	return _1a7c036e9_findBuiltins(_self_, _31723_ident);;
}



inline jule::Ptr<_1a7b4c786_ReferenceStack> _1a7c03d7b_getOwnerRefers(_1a7c0086c_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)) {
			_case_begin_1ac6383c1:;
			{
				return _1a7b38332_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_1a7b34938_scopeChecker>((jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));;
			}
		}
		else {
			_case_begin_1ac636c71:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1ac636c0a:;
	};
	return nullptr;;
}



inline void _1aca3e7e9_pushReference(_1a7c0086c_eval* _self_, jule::Ptr<_1a799a97a_StructIns>* _37537_ref) {
	jule::Ptr<_1a7b4c786_ReferenceStack> _3767_refers = _1a7c03d7b_getOwnerRefers(_self_);;
	if (((_3767_refers != nullptr) && (!(_1aca419b6_Exist(_3767_refers, (*(_37537_ref))))))) {
		_1a7b4d5de_Push(_3767_refers, jule::Any((*(_37537_ref)), &__jule_any_type64));
	};
}

inline void _1aca4a816_pushReference(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a73b41_FnIns>* _37537_ref) {
	jule::Ptr<_1a7b4c786_ReferenceStack> _3767_refers = _1a7c03d7b_getOwnerRefers(_self_);;
	if (((_3767_refers != nullptr) && (!(_1accb3540_Exist(_3767_refers, (*(_37537_ref))))))) {
		_1a7b4d5de_Push(_3767_refers, jule::Any((*(_37537_ref)), &__jule_any_type65));
	};
}

inline void _1ac64d848_pushReference(_1a7c0086c_eval* _self_, jule::Ptr<_1a7ba4eb4_Var>* _37537_ref) {
	jule::Ptr<_1a7b4c786_ReferenceStack> _3767_refers = _1a7c03d7b_getOwnerRefers(_self_);;
	if (((_3767_refers != nullptr) && (!(_1ac650b58_Exist(_3767_refers, (*(_37537_ref))))))) {
		_1a7b4d5de_Push(_3767_refers, jule::Any((*(_37537_ref)), &__jule_any_type7));
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c04475__evalEnum(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a7d94d_Enum> _38225_enm) {
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_38225_enm, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c04871_evalEnum(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a7d94d_Enum> _39128_enm, jule::Ptr<_1a79633b0_Token> _39140_errorToken) {
	if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_39128_enm))._field_Public, (*_39128_enm.alloc)._field_Token)))) {
		_1a7c00d45_pushErr(_self_, _39140_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_39128_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a7c04475__evalEnum(_self_, _39128_enm);;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c04bb2__evalTypeEnum(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a80158_TypeEnum> _40029_enm) {
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_40029_enm, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c050ad_evalTypeEnum(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a80158_TypeEnum> _40932_enm, jule::Ptr<_1a79633b0_Token> _40948_errorToken) {
	if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_40932_enm))._field_Public, (*_40932_enm.alloc)._field_Token)))) {
		_1a7c00d45_pushErr(_self_, _40948_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_40932_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a7c04bb2__evalTypeEnum(_self_, _40932_enm);;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c053ee__evalStruct(_1a7c0086c_eval* _self_, jule::Ptr<_1a799a97a_StructIns> _41827_s) {
	jule::Ptr<_1a7bed89d_Data> _4197_d = jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_41827_s, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_41827_s, &__jule_any_type64), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
	return _4197_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c057ea_evalStruct(_1a7c0086c_eval* _self_, jule::Ptr<_1a7997adc_Struct> _42930_s, jule::Ptr<_1a79633b0_Token> _42946_errorToken) {
	if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42930_s))._field_Public, (*_42930_s.alloc)._field_Token)))) {
		_1a7c00d45_pushErr(_self_, _42946_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_42930_s.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7c05e9e_checkDeprecated(_self_, &((*(_42930_s))._field_Directives), _42946_errorToken);
	jule::Ptr<_1a799a97a_StructIns> _4387_ins = _1a799800a_instance(_42930_s);;
	if (((*_42930_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1a799a97a_StructIns> _4458_exist = _1a799834b_appendInstance(_42930_s, &(_4387_ins));;
		if ((_4458_exist != nullptr)) {
			_4387_ins=_4458_exist;
		} else {
			if ((!(_1a7b9d573_precheckStructIns((*(_self_))._field_s, &(_4387_ins), _42946_errorToken)))) {
				return nullptr;;
			};
		};
	};
	_1aca3e7e9_pushReference(_self_, &(_4387_ins));
	return _1a7c053ee__evalStruct(_self_, _4387_ins);;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c05b3b_evalFnIns(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a73b41_FnIns> _45925_f) {
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_45925_f, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_45925_f, &__jule_any_type65), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline void _1a7c05e9e_checkDeprecated(_1a7c0086c_eval* _self_, jule::Slice<jule::Ptr<_1a79781c7_Directive>>* _46836_directives, jule::Ptr<_1a79633b0_Token> _46867_tok) {
	if (_1a7c0183a_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1a79781c7_Directive> _4733_d = _1a7c28cd5_findDirective(_46836_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_4733_d != nullptr)) {
		if (((*_4733_d.alloc)._field_Args.len() == 0LL)) {
			_1a7c00d45_pushErr(_self_, _46867_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type5); __jule_collection; }));
		} else {
			_1a7c00d45_pushErr(_self_, _46867_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_4733_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
		_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c0639a_evalFn(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a70a83_Fn> _48426_f, jule::Ptr<_1a79633b0_Token> _48434_errorToken) {
	if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_48426_f))._field_Public, (*_48426_f.alloc)._field_Token)))) {
		_1a7c00d45_pushErr(_self_, _48434_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_48426_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7c05e9e_checkDeprecated(_self_, &((*(_48426_f))._field_Directives), _48434_errorToken);
	jule::Ptr<_1a7a73b41_FnIns> _4937_ins = _1a7a72326_instance(_48426_f);;
	if (((*_48426_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1a7a73b41_FnIns> _5008_exist = _1a7a72634_appendInstance(_48426_f, &(_4937_ins));;
		if ((_5008_exist != nullptr)) {
			_4937_ins=_5008_exist;
		};
	};
	_1aca4a816_pushReference(_self_, &(_4937_ins));
	return _1a7c05b3b_evalFnIns(_self_, _4937_ins);;
}



inline void _1a7c067b8_pushIllegalCycleError(_1a7c0086c_eval* _self_, jule::Ptr<_1a7ba4eb4_Var>* _50938_v1, jule::Ptr<_1a7ba4eb4_Var>* _50949_v2, _1bc0a106b_Builder* _50964_message) {
	;
	jule::Str _5113_refersTo = _1bc0b081c_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50938_v1))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_50949_v2))))._field_Ident, &__jule_any_type5); __jule_collection; }));;
	jule::Slice<jule::U8> _5123_buf = _1bc0a337b_Buf(_50964_message);;
	({
		auto except = _1bc0a204a_WriteStr(_50964_message, _1bd42a27e_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:513:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_50964_message, _5113_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:514:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(_50964_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:515:3"));
	});
	({
		auto except = _1bc0a1c09_Write(_50964_message, _5123_buf);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:516:3"));
		(except.result);
	});
}



inline jule::Bool _1a7c06bb4_checkCrossCycle(_1a7c0086c_eval* _self_, jule::Ptr<_1a7ba4eb4_Var>* _51932_v, _1bc0a106b_Builder* _51946_message) {
	{
		auto expr = &((*((*(_51932_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accb96bc:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> *_52010_d = it;
			{
				if (((*(_52010_d)) == (*(_self_))._field_owner)) {
					_1a7c067b8_pushIllegalCycleError(_self_, _51932_v, _52010_d, _51946_message);
					return false;;
				};
				if ((!(_1a7c06bb4_checkCrossCycle(_self_, _52010_d, _51946_message)))) {
					_1a7c067b8_pushIllegalCycleError(_self_, _51932_v, _52010_d, _51946_message);
					return false;;
				};
			}
			_iter_next_1accb96bc:;
			++it;
			goto _iter_begin_1accb96bc;
		}
		_iter_end_1accb96bc:;
	};
	return true;;
}



inline jule::Bool _1a7c070b0_checkIllegalCycles(_1a7c0086c_eval* _self_, jule::Ptr<_1a7ba4eb4_Var>* _53639_v, jule::Ptr<_1a79633b0_Token> _53648_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53639_v)))) {
		_1a7c00d45_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_owner.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1bc0a106b_Builder _5497_message = static__1bc0a18b8_New(32LL);;
	if ((!(_1a7c06bb4_checkCrossCycle(_self_, _53639_v, &(_5497_message))))) {
		jule::Str _5528_errMsg = _1bc0a28ca_Str(&_5497_message);;
		_1bc0a2ac8_Clear(&_5497_message);
		_1a7c067b8_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53639_v, &(_5497_message));
		_5528_errMsg+=_1bc0a28ca_Str(&_5497_message);
		_1a7c00d45_pushErr(_self_, _53648_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5528_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*((*(_self_))._field_owner))._field_Depends=jule::append((*(*(_self_))._field_owner.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_53639_v)); __jule_collection; }));
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c074ab_evalVar(_1a7c0086c_eval* _self_, jule::Ptr<_1a7ba4eb4_Var> _56427_v, jule::Ptr<_1a79633b0_Token> _56436_errorToken) {
	if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56427_v))._field_Public, (*_56427_v.alloc)._field_Token)))) {
		_1a7c00d45_pushErr(_self_, _56436_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56427_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7c05e9e_checkDeprecated(_self_, &((*(_56427_v))._field_Directives), _56436_errorToken);
	if (((*_56427_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1aca4ca38;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4)) {
			_case_begin_1ac64737a:;
			{
				jule::Bool _5814_ok = _1a7c070b0_checkIllegalCycles(_self_, &(_56427_v), _56436_errorToken);;
				if ((!(_5814_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)) {
			_case_begin_1ac646cb4:;
			{
				jule::Ptr<_1a7b34938_scopeChecker> _5868_s = (*(_self_))._field_lookup.cast_ptr<_1a7b34938_scopeChecker>((jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1);;
				jule::Ptr<_1a7b34938_scopeChecker> _5878_root = _1a7b37d15_getRoot(_5868_s);;
				if ((((((*_56427_v.alloc)._field_Scope != nullptr) && (!((*_56427_v.alloc)._field_Constant))) && ((*(_5878_root))._field_captured != nullptr)) && _1a7c2eb10_isVarCaptured(_5878_root, _5868_s, _56427_v))) {
					_1a7b37a7e_pushCaptured(_5878_root, &(_56427_v));
				};
				if (((!((*_56427_v.alloc)._field_Reference)) || _1a7c0183a_isUnsafe(_self_))) {
					goto _match_end_1ac64718d;
				};
				while ((((*_5868_s.alloc)._field_owner == nullptr) && ((*_5868_s.alloc)._field_parent != nullptr))) {
					{
						_5868_s=(*(_5868_s))._field_parent;
					}
				_iter_next_1ac64aed8:;
				}
				_iter_end_1ac64aed8:;;
				if (((((*_5868_s.alloc)._field_owner != nullptr) && (*(*(_5868_s))._field_owner.alloc)._field_Anon) && ((*_56427_v.alloc)._field_Scope != (*(*(_5868_s))._field_owner.alloc)._field_Scope))) {
					_1a7c00d45_pushErr(_self_, _56436_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56427_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		_match_end_1ac64718d:;
	};
	if (((*_56427_v.alloc)._field_Scope == nullptr)) {
		_1ac64d848_pushReference(_self_, &(_56427_v));
	};
	if (((((!((*_56427_v.alloc)._field_Used)) && (!((*_56427_v.alloc)._field_Binded))) && ((*_56427_v.alloc)._field_Scope == nullptr)) && (((*_56427_v.alloc)._field_Value == nullptr) || ((*((*_56427_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_1a7a76d86_SymTab> _6208_varfile = _1a7b5bb4c_findVarFileInPackage(&((*((*(_self_))._field_s))._field_files), &(_56427_v));;
		jule::Ptr<_1a7a76d86_SymTab> _6218_file = _1a7b7e7eb_getCurrentFile((*(_self_))._field_s);;
		_1a7b7eaa4_setCurrentFile((*(_self_))._field_s, _6208_varfile);
		_1a7b9be23_checkVar((*(_self_))._field_s, &(_56427_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4));
		_1a7b7eaa4_setCurrentFile((*(_self_))._field_s, _6218_file);
	};
	(*_56427_v.alloc)._field_Used=true;
	if ((((*_56427_v.alloc)._field_TypeSym == nullptr) || ((*((*_56427_v.alloc)._field_TypeSym))._field_Type == nullptr))) {
		return nullptr;;
	};
	_julec_label_1aca4ca38:;
	jule::Ptr<_1a7bed89d_Data> _6407_d = jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=(*((*_56427_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_56427_v.alloc)._field_Mutable, ._field_Reference=(*_56427_v.alloc)._field_Reference, ._field_Lvalue=(!((*_56427_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_56427_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
	if ((((*_56427_v.alloc)._field_Value != nullptr) && ((*(*(_56427_v))._field_Value.alloc)._field_Data != nullptr))) {
		if (((!((*_56427_v.alloc)._field_Binded)) && _1a7ba53c1_IsInitialized(_56427_v))) {
			(*(_6407_d))._field_IsRune=(*(*((*(_56427_v))._field_Value))._field_Data.alloc)._field_IsRune;
		};
		if (((*_56427_v.alloc)._field_Constant && ((*(*((*(_56427_v))._field_Value))._field_Data.alloc)._field_Constant != nullptr))) {
			(*(_6407_d))._field_Constant=jule::new_ptr<_1a79ea9a8_Const>((*(*((*((*(_56427_v))._field_Value))._field_Data))._field_Constant.alloc));
			(*_6407_d.alloc)._field_Model=jule::Any((*_6407_d.alloc)._field_Constant, &__jule_any_type15);
			if (_1a7ba58dd_untypedConstant(_56427_v)) {
				_1a7c01e12_applyNumericPrefix(_self_, &(_6407_d));
				(*_6407_d.alloc)._field_untyped=true;
			};
		};
	};
	return _6407_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c078a7_evalTypeAlias(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c31848_TypeAlias> _66433_ta, jule::Ptr<_1a79633b0_Token> _66449_errorToken) {
	if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66433_ta))._field_Public, (*_66433_ta.alloc)._field_Token)))) {
		_1a7c00d45_pushErr(_self_, _66449_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_66433_ta.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66433_ta))._field_Used=true;
	jule::Trait _6737_kind = (*((*((*_66433_ta.alloc)._field_TypeSym))._field_Type))._field_Kind;;
	jule::Ptr<_1a7bed89d_Data> _67411_d = nullptr;;
	{
		auto &_match_expr{ _6737_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
			_case_begin_1aca56eb5:;
			{
				_67411_d=_1a7c053ee__evalStruct(_self_, _6737_kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data3)) {
			_case_begin_1aca597d1:;
			{
				_67411_d=_1a7c04475__evalEnum(_self_, _6737_kind.cast_ptr<_1a7a7d94d_Enum>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data4)) {
			_case_begin_1aca59160:;
			{
				_67411_d=_1a7c04bb2__evalTypeEnum(_self_, _6737_kind.cast_ptr<_1a7a80158_TypeEnum>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1aca57207:;
			{
				_67411_d=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_66433_ta))._field_TypeSym))._field_Type.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});
				(*(_67411_d))._field_Model=jule::Any((*_67411_d.alloc)._field_Type, &__jule_any_type85);
			}
		}
		_match_end_1aca57081:;
	};
	(*((*(_67411_d))._field_Type))._field_Generic=(*_66433_ta.alloc)._field_Generic;
	return _67411_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c07ca3_evalDef(_1a7c0086c_eval* _self_, jule::Any* _71728_def, jule::Ptr<_1a79633b0_Token> _71742_ident) {
	{
		auto &_match_expr{ (*(_71728_def)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1accb6686:;
			{
				return _1a7c074ab_evalVar(_self_, (*(_71728_def)).cast_ptr<_1a7ba4eb4_Var>(&__jule_any_type7), _71742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1accb66ec:;
			{
				return _1a7c04871_evalEnum(_self_, (*(_71728_def)).cast_ptr<_1a7a7d94d_Enum>(&__jule_any_type12), _71742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1accb9348:;
			{
				return _1a7c050ad_evalTypeEnum(_self_, (*(_71728_def)).cast_ptr<_1a7a80158_TypeEnum>(&__jule_any_type13), _71742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1accb93ae:;
			{
				return _1a7c057ea_evalStruct(_self_, (*(_71728_def)).cast_ptr<_1a7997adc_Struct>(&__jule_any_type9), _71742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1accc00eb:;
			{
				jule::Ptr<_1a7a70a83_Fn> _7288_f = (*(_71728_def)).cast_ptr<_1a7a70a83_Fn>(&__jule_any_type10);;
				if ((!(*(_7288_f))._field_Ident.equal("init", 4))) {
					return _1a7c0639a_evalFn(_self_, _7288_f, _71742_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1accc0162:;
			{
				return _1a7c05b3b_evalFnIns(_self_, (*(_71728_def)).cast_ptr<_1a7a73b41_FnIns>(&__jule_any_type65));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1accb3e58:;
			{
				return _1a7c078a7_evalTypeAlias(_self_, (*(_71728_def)).cast_ptr<_1a7c31848_TypeAlias>(&__jule_any_type8), _71742_ident);;
			}
		}
		_match_end_1accbdd64:;
	};
	_1a7c00d45_pushErr(_self_, _71742_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_71742_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c080e4_evalIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a797e909_IdentExpr> _74129_ident) {
	jule::Any _7427_def = _1a7c03ae5_getDef(_self_, &((*(_74129_ident))._field_Ident), (*_74129_ident.alloc)._field_Binded);;
	return _1a7c07ca3_evalDef(_self_, &(_7427_def), (*_74129_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c08435_evalUnary(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a798019b_UnaryExpr> _74630_u) {
	_1a7c20969_unaryEval _7477_unary = static__1a7c20ddc_new(_self_);;
	return _1a7c2231c_eval(&_7477_unary, _74630_u);;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c08776_evalVariadic(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7980575_VariadicExpr> _75133_v) {
	if (((*(_75133_v))._field_Expr == nullptr)) {
		_1a7c00d45_pushErr(_self_.ptr(), (*_75133_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7c3255d_Type> _7577_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7577_prefix;
	});;
	jule::Ptr<_1a7bed89d_Data> _7617_d = _1a7c204d5_evalExpr(_self_, (*(_75133_v))._field_Expr);;
	if ((_7617_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7c353da_Variadicable((*(_7617_d))._field_Type.ptr())))) {
		_1a7c00d45_pushErr(_self_, (*_75133_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_7617_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1a7c2e6d1_makeVariadic(&(_7617_d), (*(_1a7c366c7_Slc((*(_7617_d))._field_Type.ptr())))._field_Elem);
	return _7617_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c08ab7_evalUnsafe(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797e453_UnsafeExpr> _77331_u) {
	jule::Bool _7743_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1a7bed89d_Data> _7767_d = _1a7c204d5_evalExpr(_self_, (*(_77331_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7743_unsafety;
	return _7767_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c08e08_evalArr(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7984645_SliceExpr> _78128_s) {
	jule::Ptr<_1a7c42b89_Arr> _7837_pt = _1a7c36441_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1a7c42b89_Arr> _7857_arr = jule::new_ptr<_1a7c42b89_Arr>(_1a7c42b89_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7837_pt))._field_Elem});;
	jule::Bool _7917_filled = false;;
	if (((*(_78128_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_78128_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type79) {
				_case_begin_1ac861c6a:;
				{
					if (((*((*((*(_78128_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1a7980575_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1ac861bb0;
					};
					if ((*_7837_pt.alloc)._field_Auto) {
						_1a7c00d45_pushErr(_self_, (*_78128_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7917_filled=true;
					((*(_78128_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1ac861bb0:;
		};
	};
	(*(_7857_arr))._field_N=(*(_78128_s))._field_Exprs.len();
	if ((!((*_7837_pt.alloc)._field_Auto))) {
		if (((*_7857_arr.alloc)._field_N > (*_7837_pt.alloc)._field_N)) {
			_1a7c00d45_pushErr(_self_, (*_78128_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_7857_arr.alloc)._field_N < (*_7837_pt.alloc)._field_N)) {
			(*_7857_arr.alloc)._field_N=(*_7837_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1a7a68b9c_ArrayExpr> _8207_model = jule::new_ptr<_1a7a68b9c_ArrayExpr>(_1a7a68b9c_ArrayExpr{._field_Kind=_7857_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_7917_filled) {
		(*(_8207_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8207_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_78128_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1a7c3255d_Type> _8297_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7857_arr.alloc)._field_Elem;
	{
		auto expr = &((*_78128_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac868ab8:;
		if (it != expr_end) {
			jule::Ptr<_1a797d0de_Expr> _83115_elem = *it;
			{
				jule::Ptr<_1a7bed89d_Data> _8328_d = _1a7c204d5_evalExpr(_self_, _83115_elem);;
				if ((_8328_d == nullptr)) {
					goto _iter_next_1ac868ab8;
				};
				;
				if (_1a7b91aa5_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_7857_arr.alloc)._field_Elem), &(_8328_d), &((*(_83115_elem))._field_Token))) {
					_1a7b8c320_checkAssignType((*(_self_))._field_s, false, &((*_7857_arr.alloc)._field_Elem), &(_8328_d), (*_83115_elem.alloc)._field_Token, _1a7c03d7b_getOwnerRefers(_self_));
				};
				(*(_8207_model))._field_Elems=jule::append((*_8207_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8328_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1ac868ab8:;
			++it;
			goto _iter_begin_1ac868ab8;
		}
		_iter_end_1ac868ab8:;
	};
	(*_self_.alloc)._field_prefix=_8297_prefix;
	if (_7917_filled) {
		(*(_8207_model))._field_Elems=jule::append((*_8207_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_7857_arr, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8207_model, &__jule_any_type86), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c093ae_evalExpSlc(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7984645_SliceExpr> _85831_s, jule::Ptr<_1a7c3255d_Type> _85855_t, jule::Any _85869_first) {
	jule::Ptr<_1a7c40868_Slc> _8597_slc = jule::new_ptr<_1a7c40868_Slc>(_1a7c40868_Slc{._field_Elem=_85855_t});;
	jule::I32 _8637_i = 0LL;;
	jule::Ptr<_1a7a65c65_SliceExpr> _8647_model = jule::new_ptr<_1a7a65c65_SliceExpr>(_1a7a65c65_SliceExpr{._field_ElemType=_85855_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_85831_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_85869_first != nullptr)) {
		(*(_8647_model))._field_Elems=jule::append((*_8647_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _85869_first; __jule_collection; }));
		_8637_i=1LL;
	};
	jule::Ptr<_1a7c3255d_Type> _8737_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8597_slc))._field_Elem;
	{
		auto expr = (*_85831_s.alloc)._field_Exprs.slice(_8637_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac8732dc:;
		if (it != expr_end) {
			jule::Ptr<_1a797d0de_Expr> _87515_elem = *it;
			{
				jule::Ptr<_1a7bed89d_Data> _8768_d = _1a7c204d5_evalExpr(_self_, _87515_elem);;
				if ((_8768_d != nullptr)) {
					;
					if (_1a7b91aa5_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_8597_slc.alloc)._field_Elem), &(_8768_d), &((*(_87515_elem))._field_Token))) {
						_1a7b8c320_checkAssignType((*(_self_))._field_s, false, &((*_8597_slc.alloc)._field_Elem), &(_8768_d), (*_87515_elem.alloc)._field_Token, _1a7c03d7b_getOwnerRefers(_self_));
					};
					(*(_8647_model))._field_Elems=jule::append((*_8647_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8768_d))._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1ac8732dc:;
			++it;
			goto _iter_begin_1ac8732dc;
		}
		_iter_end_1ac8732dc:;
	};
	(*_self_.alloc)._field_prefix=_8737_prefix;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8597_slc, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8647_model, &__jule_any_type80), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c09700_evalSliceExpr(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7984645_SliceExpr> _89634_s) {
	jule::Ptr<_1a7bed89d_Data> __jule_func_result;
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1a7c36441_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1ac87939d:;
				{
					__jule_func_result=_1a7c08e08_evalArr(_self_, _89634_s);
				}
			}
			else if ((_1a7c366c7_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1ac879436:;
				{
					jule::Ptr<_1a7c40868_Slc> _9029_pt = _1a7c366c7_Slc((*(_self_))._field_prefix);;
					__jule_func_result=_1a7c093ae_evalExpSlc(_self_, _89634_s, (*(_9029_pt))._field_Elem, nullptr);
				}
			}
			else {
				_case_begin_1ac879304:;
				{
					goto _julec_label_1ac878ea2;
				}
			}
			_match_end_1ac879227:;
		};
		if ((__jule_func_result != nullptr)) {
			jule::Ptr<_1a799a97a_StructIns> _9089_strct = _1a7c36e7a_softStruct((*(_self_))._field_prefix);;
			if (((_9089_strct != nullptr) && ((*_9089_strct.alloc)._field_Source != nullptr))) {
				(*__jule_func_result.alloc)._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_9089_strct, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)});
			};
		};
		return __jule_func_result;;
	};
	_julec_label_1ac878ea2:;
	jule::Ptr<_1a7c3255d_Type> _9167_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_89634_s))._field_Exprs.len() == 0LL)) {
		_1a7c00d45_pushErr(_self_, (*_89634_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		__jule_func_result = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a797d0de_Expr> _9247_firstExpr = (*(_89634_s))._field_Exprs[0LL];;
	jule::Ptr<_1a7bed89d_Data> _9257_firstElem = _1a7c204d5_evalExpr(_self_, _9247_firstExpr);;
	if ((_9257_firstElem == nullptr)) {
		__jule_func_result = nullptr;
		return __jule_func_result;;
	};
	;
	_1a7b91aa5_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_9257_firstElem))._field_Type), &(_9257_firstElem), &((*(_9247_firstExpr))._field_Token));
	__jule_func_result=_1a7c093ae_evalExpSlc(_self_, _89634_s, (*_9257_firstElem.alloc)._field_Type, (*_9257_firstElem.alloc)._field_Model);
	(*_self_.alloc)._field_prefix=_9167_prefix;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7c09aeb_checkIntegerIndexingByData(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _94147_d, jule::Ptr<_1a79633b0_Token> _94161_token) {
	jule::Str _9423_errKey = _1a7c2c0b3_checkDataForIntegerIndexing(&((*(_self_))._field_s), _94147_d, &(_94161_token), _1a7c03d7b_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9423_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_1ac8840ab:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_1ac883ece:;
			{
				_1a7c00d45_pushErr(_self_, _94161_token, _9423_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_94147_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1ac88352d:;
			{
				_1a7c00d45_pushErr(_self_, _94161_token, _9423_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac883b49:;
	};
	return false;;
}



inline void _1a7c0a019_indexingPtr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _95432_d, jule::Ptr<_1a7bed89d_Data>* _95447_index, jule::Ptr<_1a79850a2_IndexingExpr>* _95466_i) {
	_1a7c09aeb_checkIntegerIndexingByData(_self_, _95447_index, (*((*(_95466_i))))._field_Token);
	(*((*(_95432_d))))._field_Lvalue=true;
	jule::Ptr<_1a7c4365c_Ptr> _9587_ptr = _1a7c35b8d_Ptr((*((*(_95432_d))))._field_Type.ptr());;
	{
		
		if (_1a7c441c9_IsUnsafe(_9587_ptr.ptr())) {
			_case_begin_1ac886d39:;
			{
				_1a7c00d45_pushErr(_self_, (*((*(_95466_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a7c0183a_isUnsafe(_self_)))) {
			_case_begin_1ac886dc2:;
			{
				_1a7c00d45_pushErr(_self_, (*((*(_95466_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac886c90:;
	};
	(*((*(_95432_d))))._field_Type=(*(_9587_ptr))._field_Elem;
}



inline void _1a7c0a437_indexingArr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _97032_d, jule::Ptr<_1a7bed89d_Data>* _97047_index, jule::Ptr<_1a79850a2_IndexingExpr>* _97066_i) {
	jule::Ptr<_1a7c42b89_Arr> _9717_arr = _1a7c36441_Arr((*((*(_97032_d))))._field_Type.ptr());;
	(*((*(_97032_d))))._field_Type=(*(_9717_arr))._field_Elem;
	_1a7c09aeb_checkIntegerIndexingByData(_self_, _97047_index, (*((*(_97066_i))))._field_Token);
	(*((*(_97032_d))))._field_Lvalue=true;
	if ((_1a7bee2d8_IsConst((*(_97047_index)).ptr()) && (_1a7a59c15_AsF64((*((*(_97047_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9717_arr.alloc)._field_N)))) {
		_1a7c00d45_pushErr(_self_, (*((*(_97066_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _1a7c0a855_indexingSlc(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _98032_d, jule::Ptr<_1a7bed89d_Data>* _98047_index, jule::Ptr<_1a79850a2_IndexingExpr>* _98066_i) {
	jule::Ptr<_1a7c40868_Slc> _9817_slc = _1a7c366c7_Slc((*((*(_98032_d))))._field_Type.ptr());;
	(*((*(_98032_d))))._field_Type=(*(_9817_slc))._field_Elem;
	_1a7c09aeb_checkIntegerIndexingByData(_self_, _98047_index, (*((*(_98066_i))))._field_Token);
	(*((*(_98032_d))))._field_Lvalue=true;
	if ((!(_1a7bee2d8_IsConst((*(_98047_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_98032_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ac88e47e:;
			{
				jule::Ptr<_1a7a65c65_SliceExpr> _9928_m = (*((*(_98032_d))))._field_Model.unsafe_cast_ptr<_1a7a65c65_SliceExpr>();;
				jule::F64 _9934_indx = _1a7a59c15_AsF64((*((*(_98047_index))))._field_Constant.ptr());;
				if ((_9934_indx >= static_cast<jule::F64>((*(_9928_m))._field_Elems.len()))) {
					_1a7c00d45_pushErr(_self_, (*((*(_98066_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_98032_d))))._field_Model=(*(_9928_m))._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_9934_indx))];
					(*((*(_98032_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1ac88e418:;
	};
}



inline void _1a7c0ac73_indexingMap(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _100332_d, jule::Ptr<_1a7bed89d_Data>* _100347_index, jule::Ptr<_1a79850a2_IndexingExpr>* _100366_i) {
	(*((*(_100332_d))))._field_Lvalue=true;
	if (((*(_100347_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7c4200c_Map> _10087_m = _1a7c37497_Map((*((*(_100332_d))))._field_Type.ptr());;
	_1a7bdb77b_assignTypeChecker _10097_atc = _1a7bdb77b_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_10087_m))._field_Key, ._field_d=(*(_100347_index)), ._field_errorToken=(*((*(_100366_i))))._field_Token, ._field_refers=_1a7c03d7b_getOwnerRefers(_self_)};;
	_1a7bdc77c_check(&_10097_atc);
	(*((*(_100332_d))))._field_Type=(*_10087_m.alloc)._field_Val;
}



inline void _1a7c0b191_indexingStr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _102032_d, jule::Ptr<_1a7bed89d_Data>* _102047_index, jule::Ptr<_1a79850a2_IndexingExpr>* _102066_i) {
	(*((*(_102032_d))))._field_Type=(*((*(_1a7ca9b35_findBuiltinTypeAlias(jule::Str::lit("byte", 4))))._field_TypeSym))._field_Type;
	(*((*(_102032_d))))._field_Mutable=false;
	(*((*(_102032_d))))._field_Lvalue=true;
	if (((*(_102047_index)) == nullptr)) {
		return;;
	};
	_1a7c09aeb_checkIntegerIndexingByData(_self_, _102047_index, (*((*(_102066_i))))._field_Token);
	(*((*(_102032_d))))._field_untyped=_1a7bee2d8_IsConst((*(_102032_d)).ptr());
	if ((!(_1a7bee2d8_IsConst((*(_102047_index)).ptr())))) {
		(*((*(_102032_d))))._field_Constant=nullptr;
		return;;
	};
	if ((*((*(_102032_d))))._field_untyped) {
		jule::I64 _10384_j = _1a7a596e8_AsI64((*((*(_102047_index))))._field_Constant.ptr());;
		jule::Str _10394_s = _1a7a591cb_ReadStr((*((*(_102032_d))))._field_Constant);;
		if ((static_cast<jule::I32>(_10384_j) >= _10394_s.len())) {
			_1a7c00d45_pushErr(_self_, (*((*(_102066_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_1a7a5a276_SetU64((*((*(_102032_d))))._field_Constant, static_cast<jule::U64>(_10394_s[static_cast<jule::I32>(_10384_j)]));
		};
	};
}



inline void _1a7c0b5ae_comptimeRange(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _104834_d, jule::Ptr<_1a7bed89d_Data>* _104849_index, jule::Ptr<_1a79850a2_IndexingExpr>* _104868_i) {
	if (((*(_104849_index)) == nullptr)) {
		(*(_104834_d))=nullptr;
		return;;
	};
	if ((!(_1a7c09aeb_checkIntegerIndexingByData(_self_, _104849_index, (*((*((*(_104868_i))))._field_Index))._field_Token)))) {
		(*(_104834_d))=nullptr;
		return;;
	};
	if ((!(_1a7bee2d8_IsConst((*(_104849_index)).ptr())))) {
		(*(_104834_d))=nullptr;
		_1a7c00d45_pushErr(_self_, (*((*((*(_104868_i))))._field_Index))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I32 _10633_j = static_cast<jule::I32>(_1a7a596e8_AsI64((*((*(_104849_index))))._field_Constant.ptr()));;
	jule::Ptr<_1a7b00e65_comptimeRange> _10647_ci = _1a7c38ca1_comptimeRange((*((*(_104834_d))))._field_Type.ptr());;
	if ((_10633_j >= ((_1a7b00c45_comptimeRangeKindMptrData*)(*(_10647_ci))._field_kind.safe_type())->_1a7b00ae1_len((*(_10647_ci))._field_kind.data))) {
		(*(_104834_d))=nullptr;
		_1a7c00d45_pushErr(_self_, (*((*((*(_104868_i))))._field_Index))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_1a7b00c45_comptimeRangeKindMptrData*)(*(_10647_ci))._field_kind.safe_type())->_1a7b000c9_index((*(_10647_ci))._field_kind.data, _104834_d, _10633_j);
}



inline void _1a7c0b9cc_toIndexing(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _107331_d, jule::Ptr<_1a7bed89d_Data>* _107346_index, jule::Ptr<_1a79850a2_IndexingExpr>* _107365_i) {
	{
		
		if ((_1a7c35b8d_Ptr((*((*(_107331_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ac8a1309:;
			{
				_1a7c0a019_indexingPtr(_self_, _107331_d, _107346_index, _107365_i);
				return;;
			}
		}
		else if ((_1a7c36441_Arr((*((*(_107331_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ac8a13a3:;
			{
				_1a7c0a437_indexingArr(_self_, _107331_d, _107346_index, _107365_i);
				return;;
			}
		}
		else if ((_1a7c366c7_Slc((*((*(_107331_d))))._field_Type) != nullptr)) {
			_case_begin_1ac8a1419:;
			{
				_1a7c0a855_indexingSlc(_self_, _107331_d, _107346_index, _107365_i);
				return;;
			}
		}
		else if ((_1a7c37497_Map((*((*(_107331_d))))._field_Type) != nullptr)) {
			_case_begin_1ac8a1480:;
			{
				_1a7c0ac73_indexingMap(_self_, _107331_d, _107346_index, _107365_i);
				return;;
			}
		}
		else if ((_1a7c35671_Prim((*((*(_107331_d))))._field_Type) != nullptr)) {
			_case_begin_1ac8a14e6:;
			{
				jule::Ptr<_1a7c3b369_Prim> _10884_prim = _1a7c35671_Prim((*((*(_107331_d))))._field_Type);;
				{
					
					if (_1a7c3e834_IsStr(_10884_prim.ptr())) {
						_case_begin_1ac8a5808:;
						{
							_1a7c0b191_indexingStr(_self_, _107331_d, _107346_index, _107365_i);
							return;;
						}
					}
					_match_end_1ac8a574d:;
				};
			}
		}
		else if ((_1a7c38ca1_comptimeRange((*((*(_107331_d))))._field_Type) != nullptr)) {
			_case_begin_1ac8a156d:;
			{
				_1a7c0b5ae_comptimeRange(_self_, _107331_d, _107346_index, _107365_i);
				return;;
			}
		}
		_match_end_1ac8a1194:;
	};
	_1a7c00d45_pushErr(_self_, (*((*(_107365_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_107331_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1a7c0be83_pushGenericsFromExprSubIdent(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7981202_SubIdentExpr>* _110150_sexpr, jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>* _11028_generics, jule::Ptr<_1a797d0de_Expr>* _110241_expr) {
	jule::Ptr<_1a797967e_SubIdentTypeDecl> _11037_t = jule::new_ptr<_1a797967e_SubIdentTypeDecl>(_1a797967e_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1a79793b5_IdentTypeDecl>>(nullptr)});;
	if ((!(_1a7c2d13b_pushSubIdentFromExpr(jule::Any((*(_110150_sexpr)), &__jule_any_type87), &(_11037_t))))) {
		_1a7c00d45_pushErr(_self_.ptr(), (*((*(_110241_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> &__jule_push_dest = (*(_11028_generics)); __jule_push_dest.push(jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Kind=jule::Any(_11037_t, &__jule_any_type88)})); };
	return true;;
}



inline jule::Bool _1a7c0c37e_pushGenericsFromData(jule::Ptr<_1a7c0086c_eval> _self_, jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>* _111242_generics, jule::Ptr<_1a797d0de_Expr>* _111275_expr) {
	{
		auto &_match_expr{ (*((*(_111275_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ac8ac0c3:;
			{
				jule::Ptr<_1a798019b_UnaryExpr> _11158_u = (*((*(_111275_expr))))._field_Kind.unsafe_cast_ptr<_1a798019b_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_11158_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(62LLU)) {
						_case_begin_1ac8b179d:;
						{
							jule::Ptr<_1a797a7d4_PtrTypeDecl> _11189_kind = jule::new_ptr<_1a797a7d4_PtrTypeDecl>(_1a797a7d4_PtrTypeDecl{._field_Elem=jule::Ptr<_1a7978caa_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> _11199__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7978caa_TypeDecl>(nullptr); __jule_collection; });;
							_1a7c0c37e_pushGenericsFromData(_self_, &(_11199__generics), &((*(_11158_u))._field_Expr));
							(*_11189_kind.alloc)._field_Elem=_11199__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> &__jule_push_dest = (*(_111242_generics)); __jule_push_dest.push(jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=(*((*(_111275_expr))))._field_Token, ._field_Kind=jule::Any(_11189_kind, &__jule_any_type74)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(65LLU)) {
						_case_begin_1ac8b1869:;
						{
							jule::Ptr<_1a7979d55_SptrTypeDecl> _11279_kind = jule::new_ptr<_1a7979d55_SptrTypeDecl>(_1a7979d55_SptrTypeDecl{._field_Elem=jule::Ptr<_1a7978caa_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> _11289__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7978caa_TypeDecl>(nullptr); __jule_collection; });;
							_1a7c0c37e_pushGenericsFromData(_self_, &(_11289__generics), &((*(_11158_u))._field_Expr));
							(*_11279_kind.alloc)._field_Elem=_11289__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> &__jule_push_dest = (*(_111242_generics)); __jule_push_dest.push(jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=(*((*(_111275_expr))))._field_Token, ._field_Kind=jule::Any(_11279_kind, &__jule_any_type75)})); };
						}
					}
					else {
						_case_begin_1ac8b089b:;
						{
							_1a7c00d45_pushErr(_self_, (*_11158_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1ac8ae119:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ac8ac139:;
			{
				{ jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> &__jule_push_dest = (*(_111242_generics)); __jule_push_dest.push((*((*(_111275_expr))))._field_Kind.unsafe_cast_ptr<_1a7978caa_TypeDecl>()); };
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ac8ac1a0:;
			{
				jule::Ptr<_1a7981202_SubIdentExpr> _11428_sexpr = (*((*(_111275_expr))))._field_Kind.unsafe_cast_ptr<_1a7981202_SubIdentExpr>();;
				return _1a7c0be83_pushGenericsFromExprSubIdent(_self_, &(_11428_sexpr), _111242_generics, _111275_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ac8aae90:;
			{
				jule::Ptr<_1a797e909_IdentExpr> _11458_ident = (*((*(_111275_expr))))._field_Kind.unsafe_cast_ptr<_1a797e909_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> &__jule_push_dest = (*(_111242_generics)); __jule_push_dest.push(jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1a79793b5_IdentTypeDecl>(_1a79793b5_IdentTypeDecl{._field_Token=(*_11458_ident.alloc)._field_Token, ._field_Ident=(*_11458_ident.alloc)._field_Ident, ._field_Binded=(*(_11458_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>(nullptr)}), &__jule_any_type78)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ac8ab006:;
			{
				{
					auto expr = &((*((*((*(_111275_expr))))._field_Kind.unsafe_cast_ptr<_1a797dbd3_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac8ba0d1:;
					if (it != expr_end) {
						jule::Ptr<_1a797d0de_Expr> _115416_texpr = *it;
						{
							if ((!(_1a7c0c37e_pushGenericsFromData(_self_, _111242_generics, &(_115416_texpr))))) {
								return false;;
							};
						}
						_iter_next_1ac8ba0d1:;
						++it;
						goto _iter_begin_1ac8ba0d1;
					}
					_iter_end_1ac8ba0d1:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ac8a970d:;
			{
				jule::Ptr<_1a7980d28_NamespaceExpr> _11608_ns = (*((*(_111275_expr))))._field_Kind.unsafe_cast_ptr<_1a7980d28_NamespaceExpr>();;
				jule::Ptr<_1a79793b5_IdentTypeDecl> _11618_decl = jule::new_ptr<_1a79793b5_IdentTypeDecl>(_1a79793b5_IdentTypeDecl{._field_Token=(*(_11608_ns))._field_Ident, ._field_Ident=(*((*_11608_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> &__jule_push_dest = (*(_111242_generics)); __jule_push_dest.push(jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=(*(_11618_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a7979a58_NamespaceTypeDecl>(_1a7979a58_NamespaceTypeDecl{._field_Namespace=(*_11608_ns.alloc)._field_Namespace, ._field_Kind=jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=(*_11618_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11618_decl, &__jule_any_type78)})}), &__jule_any_type92)})); };
			}
		}
		else {
			_case_begin_1ac8aae29:;
			{
				_1a7c00d45_pushErr(_self_, (*((*(_111275_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ac8aadb3:;
	};
	return true;;
}



inline void _1a7c0c6e2_evalIdentDeclFromIndexing(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7bed89d_Data>* _118247_d, jule::Ptr<_1a79850a2_IndexingExpr>* _118262_i) {
	jule::Ptr<_1a799a97a_StructIns> _11837_s = _1a7c36be4_Struct((*((*(_118247_d))))._field_Type.ptr());;
	if ((_11837_s == nullptr)) {
		_1a7c00d45_pushErr(_self_.ptr(), (*((*((*(_118262_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_118247_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
		(*(_118247_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a79793b5_IdentTypeDecl> _119011_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_118262_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ac8c6a05:;
			{
				jule::Ptr<_1a797e909_IdentExpr> _11938_expr = (*((*((*(_118262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a797e909_IdentExpr>();;
				_119011_decl=jule::new_ptr<_1a79793b5_IdentTypeDecl>(_1a79793b5_IdentTypeDecl{._field_Token=(*_11938_expr.alloc)._field_Token, ._field_Ident=(*_11938_expr.alloc)._field_Ident, ._field_Binded=(*(_11938_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ac8c72ec:;
			{
				jule::Ptr<_1a7980d28_NamespaceExpr> _12008_expr = (*((*((*(_118262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a7980d28_NamespaceExpr>();;
				_119011_decl=jule::new_ptr<_1a79793b5_IdentTypeDecl>(_1a79793b5_IdentTypeDecl{._field_Token=(*(_12008_expr))._field_Ident, ._field_Ident=(*((*_12008_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1ac8c6e56:;
			{
				_1a7c00d45_pushErr(_self_.ptr(), (*((*(_118262_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_118247_d))=nullptr;
				return;;
			}
		}
		_match_end_1ac8c6de0:;
	};
	if ((!(_1a7c0c37e_pushGenericsFromData(_self_, &((*(_119011_decl))._field_Generics), &((*((*(_118262_i))))._field_Index))))) {
		(*(_118247_d))=nullptr;
		return;;
	};
	_11837_s=({ _1a7c4564d_typeChecker _wrap_copy = _1a7c146b6_typeChecker(_self_.ptr()); _1a7c499d7_fromStruct(&_wrap_copy, &(_119011_decl), &((*(_11837_s))._field_Decl)); });
	if ((_11837_s == nullptr)) {
		(*(_118247_d))=nullptr;
		return;;
	};
	(*(*((*(_118247_d))))._field_Type.alloc)._field_Kind=jule::Trait(_11837_s, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1a7c0cb98_checkGenericFn(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7a73b41_FnIns>* _122536_f, jule::Ptr<_1a79633b0_Token>* _122552_et, jule::Any* _122576_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a7a73b41_FnIns> _12267_old = (*(_122536_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7b9c918_checkGenericFn((*(_self_))._field_s, _122536_f, _122552_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1a7c2ccb7_updateModelToGenericIns(_122576_model, _122536_f);
		_1ac8d0a64_updateRefer(_1a7c03d7b_getOwnerRefers(_self_.ptr()), &(_12267_old), _122536_f);
	};
	return __jule_func_result;;
}



inline void _1a7c0d00b_evalFnGenericFromIndexing(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7bed89d_Data>* _124147_d, jule::Ptr<_1a79850a2_IndexingExpr>* _124162_i) {
	jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> _12427_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7978caa_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1a7c0c37e_pushGenericsFromData(_self_, &(_12427_generics), &((*((*(_124162_i))))._field_Index))))) {
		(*(_124147_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a7a73b41_FnIns> _12487_f = _1a7c3695d_Fn((*((*(_124147_d))))._field_Type.ptr());;
	jule::I32 _12497_genericsLen = 0LL;;
	if (((*(_12487_f))._field_Decl != nullptr)) {
		_12497_genericsLen=(*(*(_12487_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1a7b8635d_checkGenericQuantity((*(_self_))._field_s.ptr(), _12497_genericsLen, _12427_generics.len(), (*((*((*(_124162_i))))._field_Expr))._field_Token)))) {
		(*(_124147_d))=nullptr;
		return;;
	};
	(*(_12487_f))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>::alloc(0LL, (*((*_12487_f.alloc)._field_Decl))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c30b77_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12427_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8d5c67:;
		if (it != expr_end) {
			jule::Ptr<_1a7978caa_TypeDecl> _126015_g = *it;
			{
				jule::Ptr<_1a7bed89d_Data> _12618_k = _1a7c14a07_evalType(_self_.ptr(), _126015_g);;
				if ((_12618_k == nullptr)) {
					(*(_124147_d))=nullptr;
					return;;
				};
				(*_12487_f.alloc)._field_Generics=jule::append((*_12487_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7c30b77_InsGeneric>(_1a7c30b77_InsGeneric{._field_Type=(*(_12618_k))._field_Type, ._field_Constraint=jule::Slice<jule::Ptr<_1a7c3255d_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1ac8d5c67:;
			++it;
			goto _iter_begin_1ac8d5c67;
		}
		_iter_end_1ac8d5c67:;
	};
	if (_1a7a75109_IsBuiltin(_12487_f)) {
		return;;
	};
	jule::Bool _12733_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7c0cb98_checkGenericFn(_self_, &(_12487_f), &((*((*((*(_124162_i))))._field_Expr))._field_Token), &((*((*(_124147_d))))._field_Model));
		_12733_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12733_ok) {
		(*(*((*(_124147_d))))._field_Type.alloc)._field_Kind=jule::Trait(_12487_f, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data1);
	} else {
		(*(_124147_d))=nullptr;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c0d34c_evalIndexing(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a79850a2_IndexingExpr> _128133_i) {
	jule::Ptr<_1a7c3255d_Type> _12827_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12827_prefix;
	});;
	jule::Ptr<_1a7bed89d_Data> _12867_d = _1a7c1e6c1_evalExprKind(_self_, (*((*(_128133_i))._field_Expr))._field_Kind);;
	if ((_12867_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12867_d))._field_Decl) {
		_1a7c0c6e2_evalIdentDeclFromIndexing(_self_, &(_12867_d), &(_128133_i));
		return _12867_d;;
	};
	if ((_1a7c3695d_Fn((*(_12867_d))._field_Type.ptr()) != nullptr)) {
		_1a7c0d00b_evalFnGenericFromIndexing(_self_, &(_12867_d), &(_128133_i));
		return _12867_d;;
	};
	_1a7bed89d_Data _13027_oldData = (*(_12867_d));;
	jule::Ptr<_1a7bed89d_Data> _13047_index = _1a7c204d5_evalExpr(_self_, (*(_128133_i))._field_Index);;
	if ((_13047_index == nullptr)) {
		return nullptr;;
	};
	_1a7b47385_makeComptimeRange(&(_12867_d));
	(*(_12867_d))._field_Decl=false;
	_1a7c0b9cc_toIndexing(_self_, &(_12867_d), &(_13047_index), &(_128133_i));
	if ((_12867_d == nullptr)) {
		return nullptr;;
	};
	if (_1a7bee2d8_IsConst(_12867_d)) {
		(*_12867_d.alloc)._field_Decl=false;
		(*_12867_d.alloc)._field_Model=jule::Any((*_12867_d.alloc)._field_Constant, &__jule_any_type15);
	} else if ((*_12867_d.alloc)._field_Decl) {
		(*_12867_d.alloc)._field_Decl=false;
	} else {
		(*_12867_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7a6621b_IndexingExpr>(_1a7a6621b_IndexingExpr{._field_Token=(*(_128133_i))._field_Token, ._field_Expr=jule::new_ptr<_1a7bed89d_Data>(_13027_oldData), ._field_Index=_13047_index}), &__jule_any_type43);
	};
	return _12867_d;;
}



inline __jule_tuple_x_1a7bed89d_Data__jule_tuple_x_1a7bed89d_Data _1a7c0d68d_evalSlicingExprs(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7985712_SlicingExpr>* _134138_s) {
	__jule_tuple_x_1a7bed89d_Data__jule_tuple_x_1a7bed89d_Data __jule_func_result;
	jule::Ptr<_1a7c3255d_Type> _13427_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13427_prefix;
	});;
	jule::Ptr<_1a7bed89d_Data> _134611_l = nullptr;;
	jule::Ptr<_1a7bed89d_Data> _134711_r = nullptr;;
	if (((*((*(_134138_s))))._field_Start != nullptr)) {
		_134611_l=_1a7c204d5_evalExpr(_self_, (*((*(_134138_s))))._field_Start);
		if ((_134611_l != nullptr)) {
			_1a7c09aeb_checkIntegerIndexingByData(_self_, &(_134611_l), (*((*(_134138_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_134611_l=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca77d1_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a7a574d7_NewI64(0LL)});
		(*((*(_134611_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_134611_l.alloc)._field_Model=jule::Any((*_134611_l.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*((*(_134138_s))))._field_To != nullptr)) {
		_134711_r=_1a7c204d5_evalExpr(_self_, (*((*(_134138_s))))._field_To);
		if ((_134711_r != nullptr)) {
			_1a7c09aeb_checkIntegerIndexingByData(_self_, &(_134711_r), (*((*(_134138_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _134611_l;
	__jule_func_result.__jule_result_arg1 = _134711_r;
	return __jule_func_result;;
}



inline void _1a7c0d946_slicingArr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _137727_d) {
	jule::Ptr<_1a7c3255d_Type> _13787_elemType = (*(_1a7c36441_Arr((*((*(_137727_d))))._field_Type.ptr())))._field_Elem;;
	(*((*(_137727_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c40868_Slc>(_1a7c40868_Slc{._field_Elem=_13787_elemType}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data24)});
	(*((*(_137727_d))))._field_Lvalue=false;
	(*((*(_137727_d))))._field_Mutable=((*((*(_137727_d))))._field_Mutable || (!(_1a7c348a1_Mutable(_13787_elemType.ptr()))));
}



inline void _1a7c0dd64_slicingStr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _139227_d, jule::Ptr<_1a7bed89d_Data>* _139238_l, jule::Ptr<_1a7bed89d_Data>* _139249_r) {
	(*((*(_139227_d))))._field_Lvalue=false;
	(*((*(_139227_d))))._field_Mutable=true;
	if ((!(_1a7bee2d8_IsConst((*(_139227_d)).ptr())))) {
		return;;
	};
	if ((((*(_139238_l)) == nullptr) || ((*(_139249_r)) == nullptr))) {
		(*((*(_139227_d))))._field_Constant=nullptr;
		(*((*(_139227_d))))._field_untyped=false;
		return;;
	};
	if ((_1a7bee2d8_IsConst((*(_139238_l)).ptr()) && _1a7bee2d8_IsConst((*(_139249_r)).ptr()))) {
		jule::I64 _14064_left = _1a7a596e8_AsI64((*((*(_139238_l))))._field_Constant.ptr());;
		if ((_14064_left < 0LL)) {
			return;;
		};
		jule::Str _14114_s = _1a7a591cb_ReadStr((*((*(_139227_d))))._field_Constant);;
		jule::I64 _14128_right = static_cast<jule::I64>(0LL);;
		if (((*(_139249_r)) == nullptr)) {
			_14128_right=static_cast<jule::I64>(_14114_s.len());
		} else {
			_14128_right=_1a7a596e8_AsI64((*((*(_139249_r))))._field_Constant);
		};
		if ((_14064_left > _14128_right)) {
			return;;
		};
		_1a7a5a7d7_SetStr((*((*(_139227_d))))._field_Constant, _14114_s.slice(static_cast<jule::I32>(_14064_left), static_cast<jule::I32>(_14128_right)));
		(*((*(_139227_d))))._field_Decl=true;
	} else {
		(*((*(_139227_d))))._field_Constant=nullptr;
		(*((*(_139227_d))))._field_untyped=false;
	};
}



inline void _1a7c0e33c_checkSlicing(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _143033_d, jule::Ptr<_1a7bed89d_Data>* _143044_l, jule::Ptr<_1a7bed89d_Data>* _143055_r, jule::Ptr<_1a7985712_SlicingExpr>* _143066_s) {
	{
		
		if ((_1a7c36441_Arr((*((*(_143033_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ac903191:;
			{
				_1a7c0d946_slicingArr(_self_, _143033_d);
				return;;
			}
		}
		else if ((_1a7c366c7_Slc((*((*(_143033_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ac90323a:;
			{
				return;;
			}
		}
		else if ((_1a7c35671_Prim((*((*(_143033_d))))._field_Type) != nullptr)) {
			_case_begin_1ac9032a1:;
			{
				jule::Ptr<_1a7c3b369_Prim> _14384_prim = _1a7c35671_Prim((*((*(_143033_d))))._field_Type);;
				{
					
					if (_1a7c3e834_IsStr(_14384_prim.ptr())) {
						_case_begin_1ac905a78:;
						{
							_1a7c0dd64_slicingStr(_self_, _143033_d, _143044_l, _143055_r);
							return;;
						}
					}
					_match_end_1ac9059bd:;
				};
			}
		}
		_match_end_1ac90305e:;
	};
	_1a7c00d45_pushErr(_self_, (*((*(_143066_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_143033_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c0e67d_evalSlicing(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7985712_SlicingExpr> _144932_s) {
	jule::Ptr<_1a7bed89d_Data> _14507_d = _1a7c204d5_evalExpr(_self_, (*(_144932_s))._field_Expr);;
	if ((_14507_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7bed89d_Data> _14557_l;
	jule::Ptr<_1a7bed89d_Data> _145514_r;
	({
		__jule_tuple_x_1a7bed89d_Data__jule_tuple_x_1a7bed89d_Data __jule_assign_result = _1a7c0d68d_evalSlicingExprs(_self_, &(_144932_s));
		_14557_l = __jule_assign_result.__jule_result_arg0;
		_145514_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14557_l == nullptr)) {
		return _14507_d;;
	};
	(*(_14507_d))._field_Decl=false;
	_1a7c0e33c_checkSlicing(_self_, &(_14507_d), &(_14557_l), &(_145514_r), &(_144932_s));
	if (_1a7bee2d8_IsConst(_14507_d)) {
		(*_14507_d.alloc)._field_Decl=false;
		(*_14507_d.alloc)._field_Model=jule::Any((*_14507_d.alloc)._field_Constant, &__jule_any_type15);
	} else if ((*_14507_d.alloc)._field_Decl) {
		(*_14507_d.alloc)._field_Decl=false;
	} else {
		jule::Ptr<_1a7a67508_SlicingExpr> _14738_model = jule::new_ptr<_1a7a67508_SlicingExpr>(_1a7a67508_SlicingExpr{._field_Token=(*_144932_s.alloc)._field_Token, ._field_Expr=(*_14507_d.alloc)._field_Model, ._field_Left=(*(_14557_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_145514_r != nullptr)) {
			(*(_14738_model))._field_Right=(*_145514_r.alloc)._field_Model;
		};
		(*_14507_d.alloc)._field_Model=jule::Any(_14738_model, &__jule_any_type93);
	};
	return _14507_d;;
}



inline void _1a7c0ea9b_castPtr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _148627_t, jule::Ptr<_1a7bed89d_Data> _148641_d, jule::Ptr<_1a79633b0_Token> _148651_errorToken) {
	(*(_148641_d))._field_Constant=nullptr;
	(*_148641_d.alloc)._field_untyped=false;
	jule::Ptr<_1a7c3ed95_Sptr> _14893_sptr = _1a7c35907_Sptr((*_148641_d.alloc)._field_Type.ptr());;
	if ((_14893_sptr != nullptr)) {
		if ((!(_1a7c32c9a_Equal((*(_1a7c35b8d_Ptr(_148627_t.ptr())))._field_Elem, (*_14893_sptr.alloc)._field_Elem)))) {
			_1a7c00d45_pushErr(_self_, _148651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_148641_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str(_148627_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1a7c0183a_isUnsafe(_self_)))) {
		_1a7c00d45_pushErr(_self_, _148651_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7c3b369_Prim> _15023_prim = _1a7c35671_Prim((*(_148641_d))._field_Type);;
	if (((_1a7c35b8d_Ptr((*(_148641_d))._field_Type) == nullptr) && ((_15023_prim == nullptr) || (!(_1a7aee419_IsInt(_1a7c3b6dd_Str(_15023_prim.ptr()))))))) {
		_1a7c00d45_pushErr(_self_, _148651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_148641_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str(_148627_t.ptr()), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1a7c0eeb9_castStruct(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _150830_t, jule::Ptr<_1a7bed89d_Data> _150844_d, jule::Ptr<_1a79633b0_Token> _150854_errorToken) {
	(*(_150844_d))._field_Constant=nullptr;
	(*_150844_d.alloc)._field_untyped=false;
	jule::Ptr<_1a7a7b297_Trait> _15117_tr = _1a7c37211_Trait((*_150844_d.alloc)._field_Type.ptr());;
	if ((_15117_tr == nullptr)) {
		_1a7c00d45_pushErr(_self_, _150854_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_150844_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str(_150830_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a799a97a_StructIns> _15177_s = _1a7c36be4_Struct(_150830_t.ptr());;
	_1aca3e7e9_pushReference(_self_, &(_15177_s));
	if ((!(_1a799921a_IsImplements((*(_15177_s))._field_Decl.ptr(), _15117_tr)))) {
		_1a7c00d45_pushErr(_self_, _150854_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_150844_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str(_150830_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1a7c103d7_castRef(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _152527_t, jule::Ptr<_1a7bed89d_Data> _152541_d, jule::Ptr<_1a79633b0_Token> _152551_errorToken) {
	(*(_152541_d))._field_Constant=nullptr;
	(*_152541_d.alloc)._field_untyped=false;
	jule::Ptr<_1a7c3ed95_Sptr> _15287_sptr = _1a7c35907_Sptr(_152527_t.ptr());;
	jule::Ptr<_1a7c4365c_Ptr> _15307_ptr = _1a7c35b8d_Ptr((*_152541_d.alloc)._field_Type.ptr());;
	if (((_15307_ptr != nullptr) && _1a7c32c9a_Equal((*(_15287_sptr))._field_Elem, (*_15307_ptr.alloc)._field_Elem))) {
		if ((!(_1a7c0183a_isUnsafe(_self_)))) {
			_1a7c00d45_pushErr(_self_, _152551_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a7c36be4_Struct((*(_15287_sptr))._field_Elem.ptr()) != nullptr)) {
		_1a7c0eeb9_castStruct(_self_, (*_15287_sptr.alloc)._field_Elem, _152541_d, _152551_errorToken);
		return;;
	};
	_1a7c00d45_pushErr(_self_, _152551_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_152541_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str(_152527_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1a7c10805_castSlc(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _154827_t, jule::Ptr<_1a7bed89d_Data> _154841_d, jule::Ptr<_1a79633b0_Token> _154851_errorToken) {
	jule::Ptr<_1a79ea9a8_Const> _15493_c = (*(_154841_d))._field_Constant;;
	(*_154841_d.alloc)._field_Constant=nullptr;
	(*_154841_d.alloc)._field_untyped=false;
	if ((_1a7c35e24_Enum((*_154841_d.alloc)._field_Type.ptr()) != nullptr)) {
		if (((_1a7c35671_Prim((*((*(_1a7c35e24_Enum((*(_154841_d))._field_Type)))._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_1a7c3e834_IsStr(_1a7c35671_Prim((*((*(_1a7c35e24_Enum((*(_154841_d))._field_Type)))._field_TypeSym))._field_Type.ptr()).ptr()))))) {
			_1a7c00d45_pushErr(_self_, _154851_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_154841_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str(_154827_t.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else if (((_1a7c35671_Prim((*_154841_d.alloc)._field_Type.ptr()) == nullptr) || (!(_1a7c3e834_IsStr(_1a7c35671_Prim((*_154841_d.alloc)._field_Type.ptr()).ptr()))))) {
		_1a7c00d45_pushErr(_self_, _154851_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*_154841_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str(_154827_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_154827_t=(*(_1a7c366c7_Slc(_154827_t.ptr())))._field_Elem;
	jule::Ptr<_1a7c3b369_Prim> _15643_prim = _1a7c35671_Prim(_154827_t);;
	if (((_15643_prim == nullptr) || ((!(_1a7c3cc94_IsU8(_15643_prim.ptr()))) && (!(_1a7c3c777_IsI32(_15643_prim)))))) {
		_1a7c00d45_pushErr(_self_, _154851_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*_154841_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str(_154827_t), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((_15493_c != nullptr)) {
		{
			
			if (_1a7c3cc94_IsU8(_15643_prim.ptr())) {
				_case_begin_1ac92a7b2:;
				{
					jule::Str _15745_s = _1a7a591cb_ReadStr(_15493_c);;
					jule::Ptr<_1a7a65c65_SliceExpr> _15759_model = jule::new_ptr<_1a7a65c65_SliceExpr>(_1a7a65c65_SliceExpr{._field_ElemType=_154827_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15745_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15745_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac92ba49:;
						if (it != expr_end) {
							jule::U8 *_157912_b = it;
							{
								jule::Ptr<_1a79ea9a8_Const> _158010_bc = static__1a7a5775c_NewU64(static_cast<jule::U64>((*(_157912_b))));;
								(*(_158010_bc))._field_Kind=(*_15643_prim.alloc)._field_Kind;
								(*(_15759_model))._field_Elems=jule::append((*_15759_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_158010_bc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1ac92ba49:;
							++it;
							goto _iter_begin_1ac92ba49;
						}
						_iter_end_1ac92ba49:;
					};
					(*_154841_d.alloc)._field_Model=jule::Any(_15759_model, &__jule_any_type80);
					(*_154841_d.alloc)._field_Decl=true;
				}
			}
			else if (_1a7c3c777_IsI32(_15643_prim.ptr())) {
				_case_begin_1ac92a85b:;
				{
					jule::Slice<jule::I32> _15875_runes = __jule_strToRunes(_1a7a591cb_ReadStr(_15493_c));;
					jule::Ptr<_1a7a65c65_SliceExpr> _15889_model = jule::new_ptr<_1a7a65c65_SliceExpr>(_1a7a65c65_SliceExpr{._field_ElemType=_154827_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15875_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15875_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac92eb18:;
						if (it != expr_end) {
							jule::I32 *_159212_r = it;
							{
								jule::Ptr<_1a79ea9a8_Const> _159310_rc = static__1a7a574d7_NewI64(static_cast<jule::I64>((*(_159212_r))));;
								(*(_159310_rc))._field_Kind=(*_15643_prim.alloc)._field_Kind;
								(*(_15889_model))._field_Elems=jule::append((*_15889_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_159310_rc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1ac92eb18:;
							++it;
							goto _iter_begin_1ac92eb18;
						}
						_iter_end_1ac92eb18:;
					};
					(*_154841_d.alloc)._field_Model=jule::Any(_15889_model, &__jule_any_type80);
					(*_154841_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1ac92a6c4:;
		};
	};
}



inline void _1a7c10c23_castBool(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _160328_t, jule::Ptr<_1a7bed89d_Data> _160342_d, jule::Ptr<_1a79633b0_Token> _160352_errorToken) {
	jule::Ptr<_1a7c3b369_Prim> _16043_prim = _1a7c35671_Prim((*(_160342_d))._field_Type.ptr());;
	if (((_16043_prim == nullptr) || (!(_1a7c3e59d_IsBool(_16043_prim.ptr()))))) {
		_1a7c00d45_pushErr(_self_, _160352_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str(_160328_t.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_160342_d))._field_Type), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1a7c11141_castStr(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _161027_t, jule::Ptr<_1a7bed89d_Data> _161041_d, jule::Ptr<_1a79633b0_Token> _161051_errorToken) {
	if ((_1a7c35e24_Enum((*(_161041_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a7a7d94d_Enum> _16128_e = _1a7c35e24_Enum((*(_161041_d))._field_Type);;
		if (((_1a7c35671_Prim((*((*(_16128_e))._field_TypeSym))._field_Type.ptr()) != nullptr) && _1a7c3e834_IsStr(_1a7c35671_Prim((*((*(_16128_e))._field_TypeSym))._field_Type).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a79ea9a8_Const> _16183_c = (*(_161041_d))._field_Constant;;
	(*_161041_d.alloc)._field_Constant=nullptr;
	(*_161041_d.alloc)._field_untyped=false;
	jule::Ptr<_1a7c3b369_Prim> _16217_prim = _1a7c35671_Prim((*_161041_d.alloc)._field_Type.ptr());;
	if ((_16217_prim != nullptr)) {
		if (_1a7c3e834_IsStr(_16217_prim)) {
			return;;
		};
		if (((!(_1a7c3cc94_IsU8(_16217_prim))) && (!(_1a7c3c777_IsI32(_16217_prim))))) {
			_1a7c00d45_pushErr(_self_, _161051_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str(_161027_t.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_161041_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
		if ((_16183_c != nullptr)) {
			{
				
				if (_1a7c3cc94_IsU8(_16217_prim)) {
					_case_begin_1ac93ad55:;
					{
						(*_161041_d.alloc)._field_Constant=static__1a7a57ce0_NewStr(__jule_strFromByte(static_cast<jule::U8>(_1a7a5997e_AsU64(_16183_c))));
						(*_161041_d.alloc)._field_Model=jule::Any((*_161041_d.alloc)._field_Constant, &__jule_any_type15);
						(*_161041_d.alloc)._field_Decl=true;
					}
				}
				else if (_1a7c3c777_IsI32(_16217_prim)) {
					_case_begin_1ac93adee:;
					{
						(*_161041_d.alloc)._field_Constant=static__1a7a57ce0_NewStr(__jule_strFromRune(static_cast<jule::I32>(_1a7a596e8_AsI64(_16183_c))));
						(*_161041_d.alloc)._field_Model=jule::Any((*_161041_d.alloc)._field_Constant, &__jule_any_type15);
						(*_161041_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1ac93ac45:;
			};
		};
		return;;
	};
	jule::Ptr<_1a7c40868_Slc> _16467_s = _1a7c366c7_Slc((*(_161041_d))._field_Type);;
	if ((_16467_s == nullptr)) {
		_1a7c00d45_pushErr(_self_, _161051_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str(_161027_t.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_161041_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_161027_t=(*(_16467_s))._field_Elem;
	_16217_prim=_1a7c35671_Prim(_161027_t.ptr());
	if (((_16217_prim == nullptr) || ((!(_1a7c3cc94_IsU8(_16217_prim.ptr()))) && (!(_1a7c3c777_IsI32(_16217_prim)))))) {
		_1a7c00d45_pushErr(_self_, _161051_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str(_161027_t), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_161041_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
}



inline void _1a7c1155e_castInt(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _166027_t, jule::Ptr<_1a7bed89d_Data> _166041_d, jule::Ptr<_1a79633b0_Token> _166051_errorToken) {
	if (_1a7bee2d8_IsConst(_166041_d.ptr())) {
		jule::Ptr<_1a7c3b369_Prim> _16624_prim = _1a7c35671_Prim(_166027_t.ptr());;
		{
			
			if (_1a7aedd42_IsSigInt((*(_16624_prim))._field_Kind)) {
				_case_begin_1ac9439a6:;
				{
					_1a7a59ebd_SetI64((*_166041_d.alloc)._field_Constant.ptr(), _1a7a596e8_AsI64((*(_166041_d))._field_Constant));
				}
			}
			else if (_1a7aee150_IsUnsigInt((*(_16624_prim))._field_Kind)) {
				_case_begin_1ac943a50:;
				{
					_1a7a5a276_SetU64((*_166041_d.alloc)._field_Constant.ptr(), _1a7a5997e_AsU64((*(_166041_d))._field_Constant));
				}
			}
			_match_end_1ac94391d:;
		};
	} else {
		(*(_166041_d))._field_Constant=nullptr;
		(*_166041_d.alloc)._field_untyped=false;
	};
	if ((_1a7c35e24_Enum((*(_166041_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a7a7d94d_Enum> _16758_e = _1a7c35e24_Enum((*(_166041_d))._field_Type);;
		if (_1a7aee9e1_IsNum(_1a7c3b6dd_Str(_1a7c35671_Prim((*((*(_16758_e))._field_TypeSym))._field_Type.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1a7c35907_Sptr((*(_166041_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a7c3b369_Prim> _16824_prim = _1a7c35671_Prim(_166027_t.ptr());;
		if ((!(_1a7c3e317_IsUintptr(_16824_prim.ptr())))) {
			_1a7c00d45_pushErr(_self_, _166051_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_166041_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str(_166027_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((_1a7c35b8d_Ptr((*(_166041_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a7c3b369_Prim> _16894_prim = _1a7c35671_Prim(_166027_t.ptr());;
		if (_1a7c3e317_IsUintptr(_16894_prim.ptr())) {
		} else if ((!(_1a7c0183a_isUnsafe(_self_)))) {
			_1a7c00d45_pushErr(_self_, _166051_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1a7c3b369_Prim> _16983_prim = _1a7c35671_Prim((*(_166041_d))._field_Type.ptr());;
	if (((_16983_prim != nullptr) && _1a7aee9e1_IsNum(_1a7c3b6dd_Str(_16983_prim)))) {
		return;;
	};
	_1a7c00d45_pushErr(_self_, _166051_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_166041_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str(_166027_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _1a7c1197c_castNum(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _170627_t, jule::Ptr<_1a7bed89d_Data> _170641_d, jule::Ptr<_1a79633b0_Token> _170651_errorToken) {
	if (_1a7bee2d8_IsConst(_170641_d.ptr())) {
		jule::Ptr<_1a7c3b369_Prim> _17084_prim = _1a7c35671_Prim(_170627_t.ptr());;
		{
			
			if (_1a7aee75a_IsFloat((*(_17084_prim))._field_Kind)) {
				_case_begin_1ac950067:;
				{
					_1a7a5aa90_SetF64((*_170641_d.alloc)._field_Constant.ptr(), _1a7a59c15_AsF64((*(_170641_d))._field_Constant));
				}
			}
			else if (_1a7aedd42_IsSigInt((*(_17084_prim))._field_Kind)) {
				_case_begin_1ac950111:;
				{
					_1a7a59ebd_SetI64((*_170641_d.alloc)._field_Constant.ptr(), _1a7a596e8_AsI64((*(_170641_d))._field_Constant));
				}
			}
			else if (_1a7aee150_IsUnsigInt((*_17084_prim.alloc)._field_Kind)) {
				_case_begin_1ac950177:;
				{
					_1a7a5a276_SetU64((*(_170641_d))._field_Constant, _1a7a5997e_AsU64((*(_170641_d))._field_Constant));
				}
			}
			_match_end_1ac94ee8a:;
		};
	} else {
		(*(_170641_d))._field_Constant=nullptr;
		(*_170641_d.alloc)._field_untyped=false;
	};
	if ((_1a7c35e24_Enum((*(_170641_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a7a7d94d_Enum> _17238_e = _1a7c35e24_Enum((*(_170641_d))._field_Type);;
		if (_1a7aee9e1_IsNum(_1a7c3b6dd_Str(_1a7c35671_Prim((*((*(_17238_e))._field_TypeSym))._field_Type.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a7c3b369_Prim> _17293_prim = _1a7c35671_Prim((*(_170641_d))._field_Type.ptr());;
	if (((_17293_prim != nullptr) && _1a7aee9e1_IsNum(_1a7c3b6dd_Str(_17293_prim)))) {
		return;;
	};
	_1a7c00d45_pushErr(_self_, _170651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_170641_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str(_170627_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _1a7c11d9a_castPrim(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _173728_t, jule::Ptr<_1a7bed89d_Data> _173742_d, jule::Ptr<_1a79633b0_Token> _173752_errorToken) {
	jule::Ptr<_1a7c3b369_Prim> _17383_prim = _1a7c35671_Prim(_173728_t.ptr());;
	{
		
		if (_1a7c3eaba_IsAny(_17383_prim.ptr())) {
			_case_begin_1ac9587ac:;
			{
				__jule_panic_s(jule::Str::lit("sema: castPrim: any case should be unreachable in this routine", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:1741:4"));;
			}
		}
		else if (_1a7c3e834_IsStr(_17383_prim.ptr())) {
			_case_begin_1ac95845a:;
			{
				_1a7c11141_castStr(_self_, _173728_t, _173742_d, _173752_errorToken);
			}
		}
		else if (_1a7c3e59d_IsBool(_17383_prim)) {
			_case_begin_1ac9584c1:;
			{
				_1a7c10c23_castBool(_self_, _173728_t, _173742_d, _173752_errorToken);
			}
		}
		else if (_1a7aee419_IsInt(_1a7c3b6dd_Str(_17383_prim))) {
			_case_begin_1ac958537:;
			{
				_1a7c1155e_castInt(_self_, _173728_t, _173742_d, _173752_errorToken);
			}
		}
		else if (_1a7aee9e1_IsNum(_1a7c3b6dd_Str(_17383_prim))) {
			_case_begin_1ac95859d:;
			{
				_1a7c1197c_castNum(_self_, _173728_t, _173742_d, _173752_errorToken);
			}
		}
		else {
			_case_begin_1ac9583e4:;
			{
				_1a7c00d45_pushErr(_self_, _173752_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str(_173728_t), &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1ac95836c:;
	};
}



inline void _1a7c1220d_castConstant(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type>* _175533_t, jule::Ptr<_1a7bed89d_Data>* _175548_d) {
	if ((((*(_175548_d)) == nullptr) || (!(_1a7bee2d8_IsConst((*(_175548_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a7c3b369_Prim> _17593_prim = _1a7c35671_Prim((*(_175533_t)).ptr());;
	_1a7c2cadb_castConstByType(&((*(_17593_prim))._field_Kind), _175548_d);
	(*((*(_175548_d))))._field_Model=jule::Any((*((*(_175548_d))))._field_Constant, &__jule_any_type15);
}



inline void _1a7c1262b_castTypeEnum(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type>* _176433_t, jule::Ptr<_1a7bed89d_Data>* _176448_d, jule::Ptr<_1a79633b0_Token>* _176463_errorToken) {
	jule::I32 _17653_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a7b8cc7c_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_176448_d))))._field_Type), _176433_t, _176463_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17653_n);;
		_1a7c00d45_pushErr(_self_, (*(_176463_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_176448_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_176433_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_176448_d))))._field_Constant=nullptr;
	(*((*(_176448_d))))._field_untyped=false;
}



inline void _1a7c12a49_castTypeEnumT(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type>* _177434_t, jule::Ptr<_1a7bed89d_Data>* _177449_d, jule::Ptr<_1a79633b0_Token>* _177464_errorToken) {
	jule::I32 _17753_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a7b8cc7c_checkTypeCompatibility((*(_self_))._field_s, _177434_t, &((*((*(_177449_d))))._field_Type), _177464_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17753_n);;
		_1a7c00d45_pushErr(_self_, (*(_177464_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_177449_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_177434_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_177449_d))))._field_Constant=nullptr;
	(*((*(_177449_d))))._field_untyped=false;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c13000_evalCastByTypeNData(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _178439_t, jule::Ptr<_1a7bed89d_Data> _178453_d, jule::Ptr<_1a79633b0_Token> _178467_errorToken) {
	if (((_178453_d != nullptr) && (*_178453_d.alloc)._field_Decl)) {
		_1a7c00d45_pushErr(_self_, _178467_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1a7c34384_deepActualEqual((*(_178453_d))._field_Type, _178439_t)))) {
		{
			
			if (_1a7bedcbb_IsNil(_178453_d)) {
				_case_begin_1ac966d92:;
				{
					if ((!(_1a7c34dbd_NilCompatible(_178439_t.ptr())))) {
						_1a7c00d45_pushErr(_self_, _178467_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str(_178439_t), &__jule_any_type5); __jule_collection; }));
					};
					(*_178453_d.alloc)._field_Constant=nullptr;
					(*_178453_d.alloc)._field_untyped=false;
				}
			}
			else if (((_1a7c35671_Prim((*(_178453_d))._field_Type) != nullptr) && _1a7c3eaba_IsAny(_1a7c35671_Prim((*(_178453_d))._field_Type).ptr()))) {
				_case_begin_1ac966b0b:;
				{
					if ((_1a7c361aa_TypeEnum(_178439_t.ptr()) != nullptr)) {
						_1a7c00d45_pushErr(_self_, _178467_errorToken, static_cast<jule::Str>(jule::Str::lit("type enum cannot casted from any type", 37)), jule::Slice<jule::Any>());
					};
					(*_178453_d.alloc)._field_Constant=nullptr;
					(*_178453_d.alloc)._field_untyped=false;
				}
			}
			else if (((_1a7c35671_Prim(_178439_t) != nullptr) && _1a7c3eaba_IsAny(_1a7c35671_Prim(_178439_t).ptr()))) {
				_case_begin_1ac966b72:;
				{
					(*_178453_d.alloc)._field_Constant=nullptr;
					(*_178453_d.alloc)._field_untyped=false;
				}
			}
			else if ((_1a7c361aa_TypeEnum((*(_178453_d))._field_Type) != nullptr)) {
				_case_begin_1ac966bd8:;
				{
					_1a7c1262b_castTypeEnum(_self_, &(_178439_t), &(_178453_d), &(_178467_errorToken));
				}
			}
			else if ((_1a7c361aa_TypeEnum(_178439_t) != nullptr)) {
				_case_begin_1ac966c4e:;
				{
					_1a7c12a49_castTypeEnumT(_self_, &(_178439_t), &(_178453_d), &(_178467_errorToken));
				}
			}
			else if ((_1a7c35b8d_Ptr(_178439_t) != nullptr)) {
				_case_begin_1ac966cb5:;
				{
					_1a7c0ea9b_castPtr(_self_, _178439_t, _178453_d, _178467_errorToken);
				}
			}
			else if ((_1a7c35907_Sptr(_178439_t) != nullptr)) {
				_case_begin_1ac967a1e:;
				{
					_1a7c103d7_castRef(_self_, _178439_t, _178453_d, _178467_errorToken);
				}
			}
			else if ((_1a7c366c7_Slc(_178439_t) != nullptr)) {
				_case_begin_1ac967a85:;
				{
					_1a7c10805_castSlc(_self_, _178439_t, _178453_d, _178467_errorToken);
				}
			}
			else if ((_1a7c36be4_Struct(_178439_t) != nullptr)) {
				_case_begin_1ac967aeb:;
				{
					_1a7c0eeb9_castStruct(_self_, _178439_t, _178453_d, _178467_errorToken);
				}
			}
			else if ((_1a7c35671_Prim(_178439_t) != nullptr)) {
				_case_begin_1ac967b62:;
				{
					_1a7c11d9a_castPrim(_self_, _178439_t, _178453_d, _178467_errorToken);
					_1a7c1220d_castConstant(_self_, &(_178439_t), &(_178453_d));
				}
			}
			else {
				_case_begin_1ac9669c9:;
				{
					_1a7c00d45_pushErr(_self_, _178467_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str(_178439_t), &__jule_any_type5); __jule_collection; }));
					_178453_d=nullptr;
				}
			}
			_match_end_1ac9668ec:;
		};
	};
	if ((_178453_d == nullptr)) {
		return nullptr;;
	};
	if ((_1a7c3344e_Binded(_178439_t.ptr()) || _1a7c3344e_Binded((*(_178453_d))._field_Type.ptr()))) {
		if ((!(_1a7c0183a_isUnsafe(_self_)))) {
			_1a7c00d45_pushErr(_self_, _178467_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("casting binded types require using Unsafe Jule, use Unsafe Jule with unsafe {} scope", 84)), jule::Slice<jule::Any>());
		};
	};
	(*(_178453_d))._field_Mutable=((*_178453_d.alloc)._field_Mutable || (!(_1a7c348a1_Mutable((*_178453_d.alloc)._field_Type.ptr()))));
	if (((!((*_178453_d.alloc)._field_Decl)) && ((_1a7c35e24_Enum((*_178453_d.alloc)._field_Type.ptr()) == nullptr) || (!(_1a7c32c9a_Equal((*((*(_1a7c35e24_Enum((*_178453_d.alloc)._field_Type.ptr())))._field_TypeSym))._field_Type, _178439_t)))))) {
		_1a7c2b8ba_applyCastKind(&((*(_self_))._field_s), &(_178453_d), &(_178439_t), &(_178467_errorToken), _1a7c03d7b_getOwnerRefers(_self_));
		(*((*(_178453_d))._field_Model.cast_ptr<_1a7a64ed9_CastingExpr>(&__jule_any_type94)))._field_Token=_178467_errorToken;
	} else {
		(*_178453_d.alloc)._field_Type=_178439_t;
	};
	(*_178453_d.alloc)._field_Decl=false;
	(*_178453_d.alloc)._field_Lvalue=false;
	(*_178453_d.alloc)._field_untyped=false;
	if (_1a7bee2d8_IsConst(_178453_d)) {
		(*((*_178453_d.alloc)._field_Constant))._field_Kind=(*(_1a7c35671_Prim(_178439_t.ptr())))._field_Kind;
	};
	return _178453_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c134a6_evalCastT(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7c3255d_Type>* _187331_t, jule::Ptr<_1a797d0de_Expr>* _187346_e, jule::Ptr<_1a79633b0_Token>* _187366_et) {
	jule::Ptr<_1a7c3255d_Type> _18747_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18747_prefix;
	});;
	if ((_1a7c366c7_Slc((*(_187331_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_187346_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type95) {
				_case_begin_1ac97a328:;
				{
					(*_self_.alloc)._field_prefix=(*(_187331_t));
				}
			}
			_match_end_1ac97a2a1:;
		};
	};
	jule::Ptr<_1a7bed89d_Data> _18837_d = _1a7c204d5_evalExpr(_self_, (*(_187346_e)));;
	if (((_18837_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18837_d;;
	};
	return _1a7c13000_evalCastByTypeNData(_self_, (*(_187331_t)), _18837_d, (*(_187366_et)));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c137e7_evalCast(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a798094e_CastExpr> _189029_c) {
	jule::Ptr<_1a7c3a962_TypeSym> _18917_t = _1a7b4e14a_buildType((*(_189029_c))._field_Kind);;
	jule::Bool _18923_ok = _1a7b89e22_checkTypeSym((*(_self_))._field_s, &(_18917_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18923_ok))) {
		return nullptr;;
	};
	return _1a7c134a6_evalCastT(_self_, &((*(_18917_t))._field_Type), &((*_189029_c.alloc)._field_Expr), &((*((*_189029_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c13b38_evalNamespace(_1a7c0086c_eval* _self_, jule::Ptr<_1a7980d28_NamespaceExpr> _189933_s) {
	jule::Ptr<_1a7b5e80e_ImportInfo> _19007_imp = _1a7c2ee84_findNamespace((*(_self_))._field_lookup, (*((*(_189933_s))._field_Namespace))._field_Kind);;
	if ((_19007_imp == nullptr)) {
		_1a7c00d45_pushErr(_self_, (*_189933_s.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_189933_s))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _19067_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_19007_imp, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data2);
	;
	_1a7c015a4_disallowBuiltin(_self_);
	jule::Any _19117_def = _1a7c03ae5_getDef(_self_, &((*((*_189933_s.alloc)._field_Ident))._field_Kind), false);;
	_1a7c013a6_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_19067_lookup;
	jule::Ptr<_1a7bed89d_Data> _19147_d = _1a7c07ca3_evalDef(_self_, &(_19117_def), (*_189933_s.alloc)._field_Ident);;
	return _19147_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c140de_evalStructLitExplicit(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a799a97a_StructIns> _191842_s, jule::Slice<jule::Ptr<_1a797d0de_Expr>> _19197_exprs, jule::Ptr<_1a79633b0_Token> _191932_errorToken) {
	jule::Bool _19203_ok = _1a7b8635d_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_191842_s))._field_Decl))._field_Generics.len(), (*_191842_s.alloc)._field_Generics.len(), _191932_errorToken);;
	if ((!(_19203_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_191842_s.alloc)._field_Decl))) {
		_1a7c00d45_pushErr(_self_, _191932_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_191842_s))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	_1aca3e7e9_pushReference(_self_, &(_191842_s));
	_1a7c05e9e_checkDeprecated(_self_, &((*(*(_191842_s))._field_Decl.alloc)._field_Directives), _191932_errorToken);
	_1a7be5de5_structLitChecker _19337_slc = _1a7be5de5_structLitChecker{._field_e=_self_, ._field_errorToken=_191932_errorToken, ._field_s=_191842_s, ._field_args=jule::Slice<jule::Ptr<_1a7a642b3_StructArgExpr>>(nullptr)};;
	_1a7be7666_check(&_19337_slc, &(_19197_exprs));
	jule::Ptr<_1a7bed89d_Data> _19407_d = jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_191842_s, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)}), ._field_Mutable=(*(_self_))._field_target._field_mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1a7a64659_StructLitExpr>(_1a7a64659_StructLitExpr{._field_Strct=_191842_s, ._field_Args=_19337_slc._field_args}), &__jule_any_type96), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
	return _19407_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c14430_evalStructLit(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7983138_StructLit> _195334_lit) {
	jule::Ptr<_1a7c3a962_TypeSym> _19547_t = _1a7b4e14a_buildType((*(_195334_lit))._field_Kind);;
	jule::Bool _19553_ok = _1a7b89e22_checkTypeSym((*(_self_))._field_s, &(_19547_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19553_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a799a97a_StructIns> _19607_s = _1a7c36be4_Struct((*(_19547_t))._field_Type.ptr());;
	if ((_19607_s == nullptr)) {
		if ((_1a7c35907_Sptr((*(_19547_t))._field_Type) != nullptr)) {
			_19607_s=_1a7c36be4_Struct((*(_1a7c35907_Sptr((*(_19547_t))._field_Type)))._field_Elem.ptr());
			if ((_19607_s != nullptr)) {
				goto _julec_label_1accd0eec;
			};
		};
		_1a7c00d45_pushErr(_self_, (*((*_195334_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1accd0eec:;
	jule::Ptr<_1a7bed89d_Data> _19737_d = _1a7c140de_evalStructLitExplicit(_self_, _19607_s, (*_195334_lit.alloc)._field_Exprs, (*((*_195334_lit.alloc)._field_Kind))._field_Token);;
	{
		auto &_match_expr{ (*((*(_19547_t))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)) {
			_case_begin_1accd265d:;
			{
				jule::Ptr<_1a7a64659_StructLitExpr> _19768_model = (*(_19737_d))._field_Model.cast_ptr<_1a7a64659_StructLitExpr>(&__jule_any_type96);;
				_1a7c2970e_makeStructLitAlloc(&(_19737_d), &(_19768_model));
			}
		}
		_match_end_1accd25d6:;
	};
	if ((_19737_d != nullptr)) {
		jule::Ptr<_1a799a97a_StructIns> _19818_strct = _1a7c36e7a_softStruct((*(_19547_t))._field_Type);;
		if (((_19818_strct != nullptr) && ((*_19818_strct.alloc)._field_Source != nullptr))) {
			(*((*_19737_d.alloc)._field_Model.cast_ptr<_1a7a64659_StructLitExpr>(&__jule_any_type96)))._field_Strct=_19818_strct;
			(*_19737_d.alloc)._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_19818_strct, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)});
		};
	};
	return _19737_d;;
}



inline _1a7c4564d_typeChecker _1a7c146b6_typeChecker(_1a7c0086c_eval* _self_) {
	return _1a7b88bbd_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c14a07_evalType(_1a7c0086c_eval* _self_, jule::Ptr<_1a7978caa_TypeDecl> _199528_t) {
	jule::Ptr<_1a7c3a962_TypeSym> _19967_tk = _1a7b4e14a_buildType(_199528_t);;
	jule::Bool _19973_ok = _1a7b89e22_checkTypeSym((*(_self_))._field_s, &(_19967_tk), (*(_self_))._field_lookup);;
	if ((!(_19973_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=(*(_19967_tk))._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_19967_tk.alloc)._field_Type, &__jule_any_type85), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline void _1a7c14d6a_callTypeFn(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7981d18_FnCallExpr>* _200832_fc, jule::Ptr<_1a7bed89d_Data>* _200859_d) {
	if (((*((*(_200832_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr(_self_.ptr(), (*((*(_200832_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
	} else if (((*((*(_200832_fc))))._field_Args.len() > 1LL)) {
		_1a7c00d45_pushErr(_self_.ptr(), (*((*((*(_200832_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_200859_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	} else if ((*((*(_200832_fc))))._field_IsCo) {
		_1a7c00d45_pushErr(_self_, (*((*(_200832_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_200859_d))=nullptr;
		return;;
	} else if (((*((*(_200832_fc))))._field_Exception != nullptr)) {
		_1a7c00d45_pushErr(_self_, (*((*(_200832_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_200859_d))=nullptr;
		return;;
	};
	if (((*((*(_200832_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1a797d0de_Expr> _20248_arg = (*((*(_200832_fc))))._field_Args[0LL];;
		(*(_200859_d))=_1a7c134a6_evalCastT(_self_, &((*((*(_200859_d))))._field_Type), &(_20248_arg), &((*(_20248_arg))._field_Token));
		return;;
	};
	if (((*(_200859_d)) != nullptr)) {
		(*((*(_200859_d))))._field_Decl=false;
	};
}



inline void _1a7c151cd_callBuiltinFn(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7981d18_FnCallExpr>* _203435_fc, jule::Ptr<_1a7bed89d_Data>* _203462_d) {
	if ((!(_1a79821c0_Unhandled((*(_203435_fc)).ptr())))) {
		_1a7c00d45_pushErr(_self_.ptr(), (*((*(_203435_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_203462_d))=(*(_1a7c3695d_Fn((*((*(_203462_d))))._field_Type.ptr())))._field_caller(&(_self_), _203435_fc, _203462_d);
	if (((*(_203462_d)) == nullptr)) {
		return;;
	};
	(*((*(_203462_d))))._field_Mutable=true;
}



inline void _1a7c15541_checkFnOfConcurrentCall(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a73b41_FnIns>* _204640_f, jule::Ptr<_1a79633b0_Token> _204651_errorToken) {
	if (_1a7c0183a_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_204640_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acce2a14:;
		if (it != expr_end) {
			jule::Ptr<_1a7a729db_ParamIns> *_205010_p = it;
			{
				if (_1a7a6e70d_IsSelf((*((*(_205010_p))))._field_Decl.ptr())) {
					if ((!(_1a7a6e994_IsRef((*((*(_205010_p))))._field_Decl)))) {
						_1a7c00d45_pushErr(_self_, _204651_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_205010_p))))._field_Decl))._field_Reference) {
					_1a7c00d45_pushErr(_self_, _204651_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1acce2a14:;
			++it;
			goto _iter_begin_1acce2a14;
		}
		_iter_end_1acce2a14:;
	};
}



inline void _1a7c1595e_processExceptionalHandler(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a73b41_FnIns>* _206546_f, jule::Ptr<_1a7981d18_FnCallExpr>* _206562_fc, jule::Ptr<_1a7bed89d_Data>* _206589_d) {
	jule::Bool _20663_resultNeeded = ((!((*(_self_))._field_target._field_ignored)) && (!(_1a7a71039_IsVoid((*((*(_206546_f))))._field_Decl.ptr()))));;
	jule::Ptr<_1a7b34938_scopeChecker> _206711_csc = nullptr;;
	jule::Ptr<_1a7b2c238_Scope> _206811_ch = nullptr;;
	jule::Ptr<_1a7a6588b_FnCallExpr> _20707_model = (*((*(_206589_d))))._field_Model.cast_ptr<_1a7a6588b_FnCallExpr>(&__jule_any_type30);;
	jule::Ptr<_1a7b34938_scopeChecker> _20747_sc = (*(_self_))._field_lookup.cast_ptr<_1a7b34938_scopeChecker>((jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1);;
	_206711_csc=_1a7b46c8b_newChildChecker(_20747_sc);
	if (_20663_resultNeeded) {
		(*(_206711_csc))._field_result=jule::new_ptr<_1a7b33948_result>(_1a7b33948_result{._field_func=(*(_206546_f)), ._field_mutable=(*(_self_))._field_target._field_mutable});
	};
	_206811_ch=_1a7b3a0e2_getChild(_20747_sc);
	(*((*((*(_206562_fc))))._field_Exception))._field_Parent=(*_20747_sc.alloc)._field_tree;
	(*((*(_206711_csc))._field_table))._field_Vars=jule::append((*(*(_206711_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7c29a83_buildErrorVar(&(_206811_ch), _206562_fc); __jule_collection; }));
	_1a7b3a510_checkChildSsc(_20747_sc, &((*((*(_206562_fc))))._field_Exception), &(_206811_ch), &(_206711_csc));
	(*(_20707_model))._field_Assigned=_20663_resultNeeded;
	(*_20707_model.alloc)._field_Except=_206811_ch;
	if ((_20663_resultNeeded && ((*(_206711_csc))._field_result != nullptr))) {
		_1a7c00d45_pushErr(_self_, (*((*(_206562_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _1a7c15cc2_callFn(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7981d18_FnCallExpr>* _209228_fc, jule::Ptr<_1a7bed89d_Data>* _209255_d) {
	jule::Ptr<_1a7a73b41_FnIns> _20937_f = _1a7c3695d_Fn((*((*(_209255_d))))._field_Type.ptr());;
	if (_1a7a75109_IsBuiltin(_20937_f.ptr())) {
		_1a7c151cd_callBuiltinFn(_self_, _209228_fc, _209255_d);
		return;;
	};
	if (((!(_1a7a712c0_IsMethod((*(_20937_f))._field_Decl.ptr()))) && _1a7c4e7bc_hasDirective(&((*(*(_20937_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_1a7c00d45_pushErr(_self_.ptr(), (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_209255_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_209255_d))))._field_Mutable)) && _1a7a712c0_IsMethod((*(_20937_f))._field_Decl.ptr())) && (!((*(*(_20937_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20937_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((*(_self_))._field_target._field_mutable) {
			_1a7c00d45_pushErr(_self_, (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1a7a64659_StructLitExpr> _21135_lit = _1a7c2dc63_isLitBased(&((*((*(_209255_d))))._field_Model));;
			if ((_21135_lit == nullptr)) {
				_1a7c00d45_pushErr(_self_.ptr(), (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_1a7be590b_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_21135_lit));
			};
		};
	} else if (((!(_1a7c0183a_isUnsafe(_self_.ptr()))) && (*((*(_20937_f))._field_Decl))._field_Unsafety)) {
		_1a7c00d45_pushErr(_self_, (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _21257_dynamicAnnotation = ((((*((*(_20937_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_20937_f.alloc)._field_Generics.len() == 0LL)) && ((*_20937_f.alloc)._field_Params.len() > 0LL));;
	if (_21257_dynamicAnnotation) {
		(*_20937_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>::alloc((*(*(_20937_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20937_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c30b77_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_20937_f.alloc)._field_Generics.len() != (*(*(_20937_f))._field_Decl.alloc)._field_Generics.len())) {
		_1a7b8635d_checkGenericQuantity((*(_self_))._field_s.ptr(), (*(*(_20937_f))._field_Decl.alloc)._field_Generics.len(), (*_20937_f.alloc)._field_Generics.len(), (*((*(_209228_fc))))._field_Token);
		(*(_209255_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a7b7c0bd_sema> _21347_old = (*(_self_))._field_s;;
	if (((*(*(_20937_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20937_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_21347_old != (*_self_.alloc)._field_s)) {
			(*(_21347_old))._field_errors=jule::append((*_21347_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_21347_old;
	});;
	_1a7be2ead_fnCallArgChecker _21477_fcac = _1a7be2ead_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_209228_fc))))._field_Args, ._field_errorToken=(*((*(_209228_fc))))._field_Token, ._field_f=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_dynamicAnnotation=_21257_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1a7c3255d_Type>>(nullptr)};;
	if ((!(_21257_dynamicAnnotation))) {
		if ((!((*_20937_f.alloc)._field_reloaded))) {
			jule::Bool _21565_ok = _1a7b90b92_reloadFnInsTypes((*(_self_))._field_s, _20937_f);;
			(*_20937_f.alloc)._field_reloaded=true;
			if ((!(_21565_ok))) {
				(*(_209255_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1a7a73b41_FnIns> _21638_existInstance = _1a7a72634_appendInstance((*(_20937_f))._field_Decl, &(_20937_f));;
		if ((_21638_existInstance != nullptr)) {
			_20937_f=_21638_existInstance;
		};
	} else if ((!(_1a7b8e003_buildFnNonGenericTypes((*(_self_))._field_s, _20937_f, &(_21477_fcac._field_ignored))))) {
		(*(_209255_d))=nullptr;
		return;;
	};
	_21477_fcac._field_f=_20937_f;
	jule::Bool _21747_ok = false;;
	if (((*(*(_20937_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_21347_old, (*(_self_))._field_s);
		_21747_ok=_1a7be5598_check(&_21477_fcac);
		std::swap(_21347_old, (*(_self_))._field_s);
	} else {
		_21747_ok=_1a7be5598_check(&_21477_fcac);
	};
	if (_21257_dynamicAnnotation) {
		if ((!(_21747_ok))) {
			(*(_209255_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7c0cb98_checkGenericFn(_self_, &(_20937_f), &((*((*(_209228_fc))))._field_Token), &((*((*(_209255_d))))._field_Model));
			_21747_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21747_ok))) {
			(*(_209255_d))=nullptr;
			return;;
		};
	};
	jule::Any _21957_callModel = (*((*(_209255_d))))._field_Model;;
	if (_1a7a71039_IsVoid((*(_20937_f))._field_Decl)) {
		(*(_209255_d))=_1a7c2bac9_buildVoidData();
	} else {
		(*((*(_209255_d))))._field_Type=(*_20937_f.alloc)._field_Result;
		(*((*(_209255_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1a7a6588b_FnCallExpr> _22047_model = jule::new_ptr<_1a7a6588b_FnCallExpr>(_1a7a6588b_FnCallExpr{._field_Token=(*((*(_209228_fc))))._field_Token, ._field_Func=_20937_f, ._field_IsCo=(*((*(_209228_fc))))._field_IsCo, ._field_Expr=_21957_callModel, ._field_Args=_21477_fcac._field_argModels, ._field_Except=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_209255_d))))._field_Model=jule::Any(_22047_model, &__jule_any_type30);
	(*((*(_209255_d))))._field_Mutable=true;
	if ((*(*(_20937_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_209228_fc))))._field_IsCo) {
			_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_1a7b80335_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_1a79821c0_Unhandled((*(_209228_fc)).ptr())) {
				_case_begin_1acd1870a:;
				{
					_1a7c00d45_pushErr(_self_.ptr(), (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_1a7982456_Ignored((*(_209228_fc)).ptr())) {
				_case_begin_1acd18a07:;
				{
					goto _match_end_1acd16d24;
				}
			}
			else {
				_case_begin_1acd16dbd:;
				{
					_1a7c1595e_processExceptionalHandler(_self_.ptr(), &(_20937_f), _209228_fc, _209255_d);
				}
			}
			_match_end_1acd16d24:;
		};
	} else if ((!(_1a79821c0_Unhandled((*(_209228_fc)).ptr())))) {
		_1a7c00d45_pushErr(_self_.ptr(), (*((*(_209228_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_209228_fc))))._field_IsCo) {
		(*((*(_22047_model))._field_Func))._field_AsAnon=true;
		(*(*(_22047_model))._field_Func.alloc)._field_CalledCo=true;
		_1a7c15541_checkFnOfConcurrentCall(_self_.ptr(), &((*_22047_model.alloc)._field_Func), (*((*(_209228_fc))))._field_Token);
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c16113_evalFnCall(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7981d18_FnCallExpr> _224131_fc) {
	jule::Ptr<_1a7c3255d_Type> _22427_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_22427_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_224131_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1acd1daea:;
			{
				if (((*((*((*(_224131_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _1a7caae99_builtinCallerError(&(_self_), &(_224131_fc));;
				};
			}
		}
		_match_end_1acd1da73:;
	};
	jule::Ptr<_1a7bed89d_Data> _22557_d = _1a7c1e6c1_evalExprKind(_self_, (*((*(_224131_fc))._field_Expr))._field_Kind);;
	if ((_22557_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22557_d))._field_Decl) {
		_1a7c14d6a_callTypeFn(_self_, &(_224131_fc), &(_22557_d));
		return _22557_d;;
	};
	if ((_1a7c3695d_Fn((*(_22557_d))._field_Type.ptr()) == nullptr)) {
		_1a7c00d45_pushErr(_self_, (*_224131_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7c15cc2_callFn(_self_, &(_224131_fc), &(_22557_d));
	return _22557_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1650e_evalEnumStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a7d94d_Enum> _227434_enm, jule::Ptr<_1a79633b0_Token> _227450_ident) {
	jule::Ptr<_1a7a7cde2_EnumItem> _22757_item = _1a7a7e575_FindItem(_227434_enm.ptr(), (*(_227450_ident))._field_Kind);;
	if ((_22757_item == nullptr)) {
		_1a7c00d45_pushErr(_self_, _227450_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_227434_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_227450_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _1a7c2d999_evalEnumStatic(&((*(_self_))._field_s), &(_227434_enm), &(_22757_item), &(_227450_ident), _1a7c03d7b_getOwnerRefers(_self_));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1690a_evalTypeEnumStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a7a80158_TypeEnum> _228238_enm, jule::Ptr<_1a79633b0_Token> _228254_ident) {
	jule::Ptr<_1a7a7ea81_TypeEnumItem> _22837_item = _1a7a80c4c_FindItem(_228238_enm.ptr(), (*(_228254_ident))._field_Kind);;
	if ((_22837_item == nullptr)) {
		_1a7c00d45_pushErr(_self_, _228254_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_228238_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_228254_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1a7c35e24_Enum((*((*(_22837_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1acd2774c:;
			{
				return _1a7c04475__evalEnum(_self_, _1a7c35e24_Enum((*((*(_22837_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1a7c361aa_TypeEnum((*((*(_22837_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1acd277b3:;
			{
				return _1a7c04bb2__evalTypeEnum(_self_, _1a7c361aa_TypeEnum((*((*(_22837_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1a7c36be4_Struct((*((*(_22837_item))._field_TypeSym))._field_Type) != nullptr)) {
			_case_begin_1acd25937:;
			{
				return _1a7c053ee__evalStruct(_self_, _1a7c36be4_Struct((*((*(_22837_item))._field_TypeSym))._field_Type));;
			}
		}
		else {
			_case_begin_1acd258c1:;
			{
				jule::Ptr<_1a7bed89d_Data> _22968_d = jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=(*(*(_22837_item))._field_TypeSym.alloc)._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
				(*(_22968_d))._field_Model=jule::Any((*_22968_d.alloc)._field_Type, &__jule_any_type85);
				return _22968_d;;
			}
		}
		_match_end_1acd25abe:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c16d06_evalStructStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a799a97a_StructIns> _230536_s, jule::Ptr<_1a79633b0_Token> _230551_ident) {
	jule::Ptr<_1a7bed89d_Data> _23067_d = jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
	;
	jule::Ptr<_1a7a70a83_Fn> _23107_method = _1a799b9e2_FindMethod(_230536_s.ptr(), (*(_230551_ident))._field_Kind, true);;
	if ((_23107_method != nullptr)) {
		if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_23107_method.alloc)._field_Public, (*_23107_method.alloc)._field_Token)))) {
			_1a7c00d45_pushErr(_self_, _230551_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_230551_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a7a73b41_FnIns> _23178_ins = _1a7a72326_instance(_23107_method);;
		(*(_23178_ins))._field_Owner=_230536_s;
		_1aca4a816_pushReference(_self_, &(_23178_ins));
		(*_23067_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7a687c3_StructStaticIdentExpr>(_1a7a687c3_StructStaticIdentExpr{._field_Structure=_230536_s, ._field_Expr=(*_23067_d.alloc)._field_Model, ._field_Method=_23178_ins}), &__jule_any_type97);
		(*_23067_d.alloc)._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23178_ins, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data1)});
		return _23067_d;;
	};
	jule::Ptr<_1a7ba4eb4_Var> _23317_sttc = _1a799c174_FindStatic(_230536_s, (*_230551_ident.alloc)._field_Kind);;
	if ((_23317_sttc != nullptr)) {
		return _1a7c074ab_evalVar(_self_, _23317_sttc, _230551_ident);;
	};
	_1a7c00d45_pushErr(_self_, _230551_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_230536_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_230551_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c172ac_evalTraitSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data> _234037_d, jule::Ptr<_1a7a7b297_Trait> _234051_trt, jule::Ptr<_1a79633b0_Token> _234068_ident) {
	jule::Ptr<_1a7a70a83_Fn> _23417_f = _1a7a7be79_FindMethod(_234051_trt.ptr(), (*(_234068_ident))._field_Kind);;
	if ((_23417_f == nullptr)) {
		_1a7c00d45_pushErr(_self_, _234068_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_234051_trt.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_234068_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7a72326_instance(_23417_f), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data1)}), ._field_Mutable=(*(_234037_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1a7a67a8b_TraitSubIdentExpr>(_1a7a67a8b_TraitSubIdentExpr{._field_Token=_234068_ident, ._field_Expr=(*_234037_d.alloc)._field_Model, ._field_Method=_23417_f, ._field_Trt=_234051_trt}), &__jule_any_type98), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1781d_evalStructSubIdentField(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _236244_d, jule::Ptr<_1a799a97a_StructIns>* _236259_s, jule::Ptr<_1a79633b0_Token>* _236279_tok, jule::Ptr<_1a7999d53_FieldIns>* _2362104_f) {
	jule::Ptr<_1a7a6842c_StructSubIdentExpr> _23637_model = jule::new_ptr<_1a7a6842c_StructSubIdentExpr>(_1a7a6842c_StructSubIdentExpr{._field_Token=(*(_236279_tok)), ._field_Expr=jule::new_ptr<_1a7bed89d_Data>((*((*(_236244_d))))), ._field_Method=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_Field=(*(_2362104_f)), ._field_Owner=(*(_236259_s))});;
	(*((*(_236244_d))))._field_Model=jule::Any(_23637_model, &__jule_any_type99);
	(*((*(_236244_d))))._field_Type=(*((*(_2362104_f))))._field_Type;
	(*((*(_236244_d))))._field_Lvalue=true;
	if (((*((*((*(_2362104_f))))._field_Decl))._field_Mutable && (!((*((*(_236244_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)) {
				_case_begin_1ac6573bd:;
				{
					jule::Ptr<_1a7b34938_scopeChecker> _23785_scope = _1a7b3809b_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a7b34938_scopeChecker>((jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1));;
					(*((*(_236244_d))))._field_Mutable=(((*(_23785_scope))._field_owner != nullptr) && ((*((*_23785_scope.alloc)._field_owner))._field_Owner == (*(_236259_s))));
				}
			}
			_match_end_1ac657357:;
		};
	};
	return (*(_236244_d));;
}



inline __jule_tuple_x_1a7bed89d_Data__jule_tuple_bool _1a7c17cc4_evalStructSubIdentFieldOnly(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data> _238647_d, jule::Ptr<_1a799a97a_StructIns> _238661_s, jule::Ptr<_1a7981202_SubIdentExpr> _238680_si) {
	__jule_tuple_x_1a7bed89d_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a7999d53_FieldIns> _23877_f = _1a799bd33_FindField(_238661_s.ptr(), (*((*(_238680_si))._field_Ident))._field_Kind);;
	if ((_23877_f != nullptr)) {
		if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23877_f.alloc)._field_Decl))._field_Public, (*(*(_23877_f))._field_Decl.alloc)._field_Token)))) {
			_1a7c00d45_pushErr(_self_, (*_238680_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_23877_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		__jule_func_result.__jule_result_arg0 = _1a7c1781d_evalStructSubIdentField(_self_, &(_238647_d), &(_238661_s), &((*_238680_si.alloc)._field_Ident), &(_23877_f));
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c183e0_evalStructSubIdentMethod(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _240045_d, jule::Ptr<_1a799a97a_StructIns>* _240060_s, jule::Ptr<_1a79633b0_Token>* _240080_tok, jule::Ptr<_1a7a70a83_Fn>* _2400105_m, jule::Bool _2400113_ref) {
	if ((_1a7a6e994_IsRef((*((*(_2400105_m))))._field_Params[0LL].ptr()) && (!(_2400113_ref)))) {
		_1a7c00d45_pushErr(_self_, (*(_240080_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_1a7c05e9e_checkDeprecated(_self_, &((*((*(_2400105_m))))._field_Directives), (*(_240080_tok)));
	jule::Ptr<_1a7a73b41_FnIns> _24077_ins = _1a7a72326_instance((*(_2400105_m)));;
	(*(_24077_ins))._field_Owner=(*(_240060_s));
	_1aca4a816_pushReference(_self_, &(_24077_ins));
	jule::Ptr<_1a7bed89d_Data> _24107_model = jule::new_ptr<_1a7bed89d_Data>((*((*(_240045_d)))));;
	(*((*(_240045_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a6842c_StructSubIdentExpr>(_1a7a6842c_StructSubIdentExpr{._field_Token=(*(_240080_tok)), ._field_Expr=_24107_model, ._field_Method=_24077_ins, ._field_Field=jule::Ptr<_1a7999d53_FieldIns>(nullptr), ._field_Owner=(*(_240060_s))}), &__jule_any_type99);
	(*((*(_240045_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_24077_ins, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data1)});
	return (*(_240045_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c18951_evalStructSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data> _242138_d, jule::Ptr<_1a799a97a_StructIns> _242152_s, jule::Ptr<_1a7981202_SubIdentExpr> _242171_si, jule::Bool _242195_ref) {
	{
		jule::Ptr<_1a799a97a_StructIns> _24238_tempS = _242152_s;;
		if (((*(_242152_s))._field_Source != nullptr)) {
			_24238_tempS=_1a7c36be4_Struct((*(_242152_s))._field_Source);
		};
		if ((_24238_tempS != nullptr)) {
			jule::Ptr<_1a7bed89d_Data> _24289_r;
			jule::Bool _242812_found;
			({
				__jule_tuple_x_1a7bed89d_Data__jule_tuple_bool __jule_assign_result = _1a7c17cc4_evalStructSubIdentFieldOnly(_self_, _242138_d, _24238_tempS, _242171_si);
				_24289_r = __jule_assign_result.__jule_result_arg0;
				_242812_found = __jule_assign_result.__jule_result_arg1;
			});
			if (_242812_found) {
				return _24289_r;;
			};
		};
	};
	;
	jule::Ptr<_1a7a70a83_Fn> _24367_m = _1a799b9e2_FindMethod(_242152_s.ptr(), (*((*(_242171_si))._field_Ident))._field_Kind, false);;
	if ((_24367_m == nullptr)) {
		_1a7c00d45_pushErr(_self_, (*_242171_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_242152_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_242171_si))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_24367_m))._field_Public, (*_24367_m.alloc)._field_Token)))) {
		_1a7c00d45_pushErr(_self_, (*_242171_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_24367_m.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a7c011a8_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _1a7c183e0_evalStructSubIdentMethod(_self_, &(_242138_d), &(_242152_s), &((*_242171_si.alloc)._field_Ident), &(_24367_m), _242195_ref);;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c18c92_evalIntTypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _244933_ident) {
	;
	{
		auto &_match_expr{ (*(_244933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aca614a8:;
			{
				jule::Ptr<_1a79ea9a8_Const> _24538_c = static__1a7a574d7_NewI64(_1a7aec37e_MaxI(jule::Str::lit("int", 3)));;
				(*(_24538_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca77d1_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24538_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24538_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1aca60b7d:;
			{
				jule::Ptr<_1a79ea9a8_Const> _24628_c = static__1a7a574d7_NewI64(static_cast<jule::I64>(_1a7aec989_Min(jule::Str::lit("int", 3))));;
				(*(_24628_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca77d1_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24628_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24628_c});;
			}
		}
		else {
			_case_begin_1aca6052e:;
			{
				_1a7c00d45_pushErr(_self_, _244933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type5); (*it++) = jule::Any((*(_244933_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aca60782:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c190d3_evalUintTypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _247634_ident) {
	;
	{
		auto &_match_expr{ (*(_247634_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aca65699:;
			{
				jule::Ptr<_1a79ea9a8_Const> _24808_c = static__1a7a5775c_NewU64(_1a7aec648_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24808_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca7418_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24808_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24808_c});;
			}
		}
		else {
			_case_begin_1aca64720:;
			{
				_1a7c00d45_pushErr(_self_, _247634_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type5); (*it++) = jule::Any((*(_247634_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aca64973:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c19424_evalI8TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _249432_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_249432_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aca68a32:;
			{
				jule::Ptr<_1a79ea9a8_Const> _25008_c = static__1a7a574d7_NewI64(127LL);;
				(*(_25008_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca7a23_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25008_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25008_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1aca68207:;
			{
				jule::Ptr<_1a79ea9a8_Const> _25098_c = static__1a7a574d7_NewI64(-128LL);;
				(*(_25098_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca7a23_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25098_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25098_c});;
			}
		}
		else {
			_case_begin_1aca67b1e:;
			{
				_1a7c00d45_pushErr(_self_, _249432_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_249432_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aca67d0b:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c19765_evalI16TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _252333_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_252333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aca6d20c:;
			{
				jule::Ptr<_1a79ea9a8_Const> _25298_c = static__1a7a574d7_NewI64(32767LL);;
				(*(_25298_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca7cba_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25298_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25298_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1aca6c8d2:;
			{
				jule::Ptr<_1a79ea9a8_Const> _25388_c = static__1a7a574d7_NewI64(-32768LL);;
				(*(_25388_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca7cba_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25388_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25388_c});;
			}
		}
		else {
			_case_begin_1aca6c2e9:;
			{
				_1a7c00d45_pushErr(_self_, _252333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_252333_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aca6c4d6:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c19aa6_evalI32TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _255233_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_255233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1acd3a122:;
			{
				jule::Ptr<_1a79ea9a8_Const> _25588_c = static__1a7a574d7_NewI64(2147483647LL);;
				(*(_25588_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca8073_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25588_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25588_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1acd3abc2:;
			{
				jule::Ptr<_1a79ea9a8_Const> _25678_c = static__1a7a574d7_NewI64(-2147483648LL);;
				(*(_25678_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca8073_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25678_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25678_c});;
			}
		}
		else {
			_case_begin_1acd39a06:;
			{
				_1a7c00d45_pushErr(_self_, _255233_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_255233_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1acd39c48:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c19de7_evalI64TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _258133_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_258133_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1acd4105c:;
			{
				jule::Ptr<_1a79ea9a8_Const> _25878_c = static__1a7a574d7_NewI64(jule::MAX_I64);;
				(*(_25878_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca832b_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25878_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25878_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1acd40732:;
			{
				jule::Ptr<_1a79ea9a8_Const> _25968_c = static__1a7a574d7_NewI64(jule::MIN_I64);;
				(*(_25968_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca832b_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25968_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25968_c});;
			}
		}
		else {
			_case_begin_1acd40149:;
			{
				_1a7c00d45_pushErr(_self_, _258133_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_258133_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1acd40336:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1a238_evalU8TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _261032_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_261032_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1acd45380:;
			{
				jule::Ptr<_1a79ea9a8_Const> _26158_c = static__1a7a5775c_NewU64(255LLU);;
				(*(_26158_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca85d4_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26158_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26158_c});;
			}
		}
		else {
			_case_begin_1acd443b2:;
			{
				_1a7c00d45_pushErr(_self_, _261032_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_261032_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1acd445e3:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1a579_evalU16TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _262933_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_262933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1acd48284:;
			{
				jule::Ptr<_1a79ea9a8_Const> _26348_c = static__1a7a5775c_NewU64(65535LLU);;
				(*(_26348_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca888c_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26348_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26348_c});;
			}
		}
		else {
			_case_begin_1acd472b6:;
			{
				_1a7c00d45_pushErr(_self_, _262933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_262933_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1acd474e7:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1a8ba_evalU32TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _264833_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_264833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac665c06:;
			{
				jule::Ptr<_1a79ea9a8_Const> _26538_c = static__1a7a5775c_NewU64(4294967295LLU);;
				(*(_26538_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca8b45_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26538_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26538_c});;
			}
		}
		else {
			_case_begin_1acd4a1ba:;
			{
				_1a7c00d45_pushErr(_self_, _264833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_264833_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1acd4a3eb:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1ac0b_evalU64TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _266733_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_266733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac66ab40:;
			{
				jule::Ptr<_1a79ea9a8_Const> _26728_c = static__1a7a5775c_NewU64(jule::MAX_U64);;
				(*(_26728_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca912e_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26728_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26728_c});;
			}
		}
		else {
			_case_begin_1ac669b72:;
			{
				_1a7c00d45_pushErr(_self_, _266733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_266733_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac669da3:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1b04c_evalF32TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _268633_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_268633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac66e2a3:;
			{
				jule::Ptr<_1a79ea9a8_Const> _26938_c = static__1a7a580a9_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26938_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca9371_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26938_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26938_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac66e506:;
			{
				jule::Ptr<_1a79ea9a8_Const> _27028_c = static__1a7a580a9_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_27028_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca9371_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27028_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27028_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1ac66e56c:;
			{
				jule::Ptr<_1a79ea9a8_Const> _27118_c = static__1a7a580a9_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_27118_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca9371_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27118_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27118_c});;
			}
		}
		else {
			_case_begin_1ac66d1e7:;
			{
				_1a7c00d45_pushErr(_self_, _268633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_268633_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac66d57c:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1b38d_evalF64TypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a79633b0_Token> _272533_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_272533_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac674ece:;
			{
				jule::Ptr<_1a79ea9a8_Const> _27328_c = static__1a7a580a9_NewF64(jule::MAX_F64);;
				(*(_27328_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca9580_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27328_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27328_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac675232:;
			{
				jule::Ptr<_1a79ea9a8_Const> _27418_c = static__1a7a580a9_NewF64(jule::MIN_F64);;
				(*(_27418_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca9580_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27418_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27418_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1ac675298:;
			{
				jule::Ptr<_1a79ea9a8_Const> _27508_c = static__1a7a580a9_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_27508_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=_1a7ca9580_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27508_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27508_c});;
			}
		}
		else {
			_case_begin_1ac673e23:;
			{
				_1a7c00d45_pushErr(_self_, _272533_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_272533_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac6742a8:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1b789_evalPrimStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a7c3255d_Type> _276434_t, jule::Ptr<_1a79633b0_Token> _276444_ident) {
	jule::Ptr<_1a7bed89d_Data> __jule_func_result;
	jule::Str _27653_kind = (*(_1a7c35671_Prim(_276434_t.ptr())))._field_Kind;;
	{
		auto &_match_expr{ _27653_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1acbacd41:;
			{
				__jule_func_result=_1a7c18c92_evalIntTypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_1acbac747:;
			{
				__jule_func_result=_1a7c190d3_evalUintTypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1acbad094:;
			{
				__jule_func_result=_1a7c19424_evalI8TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1acbad10a:;
			{
				__jule_func_result=_1a7c19765_evalI16TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1acbad171:;
			{
				__jule_func_result=_1a7c19aa6_evalI32TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1acbaa624:;
			{
				__jule_func_result=_1a7c19de7_evalI64TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1acbaa69b:;
			{
				__jule_func_result=_1a7c1a238_evalU8TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1acbaa723:;
			{
				__jule_func_result=_1a7c1a579_evalU16TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1acbad23c:;
			{
				__jule_func_result=_1a7c1a8ba_evalU32TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1acbad2a3:;
			{
				__jule_func_result=_1a7c1ac0b_evalU64TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1acbad319:;
			{
				__jule_func_result=_1a7c1b04c_evalF32TypeStatic(_self_, _276444_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1acbad380:;
			{
				__jule_func_result=_1a7c1b38d_evalF64TypeStatic(_self_, _276444_ident);
			}
		}
		else {
			_case_begin_1acba4783:;
			{
				_1a7c00d45_pushErr(_self_, _276444_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_27653_kind, &__jule_any_type5); (*it++) = jule::Any((*(_276444_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				__jule_func_result = nullptr;
				return __jule_func_result;;
			}
		}
		_match_end_1acbaa5ad:;
	};
	if (((__jule_func_result != nullptr) && (_1a7c33c02_ActualKind(_276434_t) != (*_276434_t.alloc)._field_Kind))) {
		(*__jule_func_result.alloc)._field_Type=_276434_t;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1bb85_evalTypeStatic(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data> _280234_d, jule::Ptr<_1a7981202_SubIdentExpr> _280248_si) {
	{
		
		if ((_1a7c35671_Prim((*(_280234_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab1e706e:;
			{
				return _1a7c1b789_evalPrimStatic(_self_, (*_280234_d.alloc)._field_Type, (*(_280248_si))._field_Ident);;
			}
		}
		else if ((_1a7c35e24_Enum((*(_280234_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab1e7e93:;
			{
				return _1a7c1650e_evalEnumStatic(_self_, _1a7c35e24_Enum((*(_280234_d))._field_Type), (*(_280248_si))._field_Ident);;
			}
		}
		else if ((_1a7c361aa_TypeEnum((*(_280234_d))._field_Type) != nullptr)) {
			_case_begin_1ab1e8009:;
			{
				return _1a7c1690a_evalTypeEnumStatic(_self_, _1a7c361aa_TypeEnum((*(_280234_d))._field_Type), (*_280248_si.alloc)._field_Ident);;
			}
		}
		else if ((_1a7c36e7a_softStruct((*(_280234_d))._field_Type) != nullptr)) {
			_case_begin_1ab1e8070:;
			{
				return _1a7c16d06_evalStructStatic(_self_, _1a7c36e7a_softStruct((*(_280234_d))._field_Type), (*_280248_si.alloc)._field_Ident);;
			}
		}
		else {
			_case_begin_1ab1e6b95:;
			{
				_1a7c00d45_pushErr(_self_, (*_280248_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_280234_d))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab1e6ab8:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1ab1ee97d_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b10d65_comptimeTypeInfo>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si) {
	jule::Ptr<_1a7bed89d_Data> _28197_cd = _1a7b16b90_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_1a7c00d45_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_1a7bed89d_Data> _1ab2040d1_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b019c1_comptimeStructField>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si) {
	jule::Ptr<_1a7bed89d_Data> _28197_cd = _1a7b02e12_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_1a7c00d45_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_1a7bed89d_Data> _1ab20869b_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b07e17_comptimeEnumField>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si) {
	jule::Ptr<_1a7bed89d_Data> _28197_cd = _1a7b08e4b_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_1a7c00d45_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_1a7bed89d_Data> _1ab20ccaa_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b0ac2d_comptimeParam>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si) {
	jule::Ptr<_1a7bed89d_Data> _28197_cd = _1a7b0c57b_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_1a7c00d45_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_1a7bed89d_Data> _1ab2125ea_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b04be4_comptimeStatic>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si) {
	jule::Ptr<_1a7bed89d_Data> _28197_cd = _1a7b06135_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_1a7c00d45_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_1a7bed89d_Data> _1ab216bb5_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b16e6a_comptimeValue>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si) {
	jule::Ptr<_1a7bed89d_Data> _28197_cd = _1a7b198eb_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_1a7c00d45_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_1a7bed89d_Data> _1ab21b280_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b1b645_comptimeFile>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si) {
	jule::Ptr<_1a7bed89d_Data> _28197_cd = _1a7b1ce93_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_1a7c00d45_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}

inline jule::Ptr<_1a7bed89d_Data> _1ab2208d3_comptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7b2055b_comptimeDecl>* _281854_ct, jule::Ptr<_1a7bed89d_Data>* _281874_d, jule::Ptr<_1a7981202_SubIdentExpr>* _281885_si) {
	jule::Ptr<_1a7bed89d_Data> _28197_cd = _1a7b243b7_subIdent((*(_281854_ct)), &((*((*((*(_281885_si))))._field_Ident))._field_Kind));;
	if ((_28197_cd == nullptr)) {
		_1a7c00d45_pushErr(_self_, (*((*(_281885_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_281874_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_281885_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28197_cd;;
}



inline __jule_tuple_x_1a7bed89d_Data__jule_tuple_bool _1a7c1c537_tryComptimeObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data>* _282643_d, jule::Ptr<_1a7981202_SubIdentExpr> _282657_si) {
	__jule_tuple_x_1a7bed89d_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1a7c392bd_comptimeTypeInfo((*((*(_282643_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab1ecdcc:;
			{
				jule::Ptr<_1a7b10d65_comptimeTypeInfo> _28298_ct = _1a7c392bd_comptimeTypeInfo((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1ab1ee97d_comptimeObjSubIdent(_self_, &(_28298_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7c37ed1_comptimeStructField((*((*(_282643_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab1ec8c1:;
			{
				jule::Ptr<_1a7b019c1_comptimeStructField> _28328_ct = _1a7c37ed1_comptimeStructField((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1ab2040d1_comptimeObjSubIdent(_self_, &(_28328_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7c384ed_comptimeEnumField((*((*(_282643_d))))._field_Type) != nullptr)) {
			_case_begin_1ab1ec937:;
			{
				jule::Ptr<_1a7b07e17_comptimeEnumField> _28358_ct = _1a7c384ed_comptimeEnumField((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1ab20869b_comptimeObjSubIdent(_self_, &(_28358_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7c38a1a_comptimeParam((*((*(_282643_d))))._field_Type) != nullptr)) {
			_case_begin_1ab1ec9ae:;
			{
				jule::Ptr<_1a7b0ac2d_comptimeParam> _28388_ct = _1a7c38a1a_comptimeParam((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1ab20ccaa_comptimeObjSubIdent(_self_, &(_28388_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7c397da_comptimeStatic((*((*(_282643_d))))._field_Type) != nullptr)) {
			_case_begin_1ab1eca36:;
			{
				jule::Ptr<_1a7b04be4_comptimeStatic> _28418_ct = _1a7c397da_comptimeStatic((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1ab2125ea_comptimeObjSubIdent(_self_, &(_28418_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7c39a71_comptimeValue((*((*(_282643_d))))._field_Type) != nullptr)) {
			_case_begin_1ab1ecaad:;
			{
				jule::Ptr<_1a7b16e6a_comptimeValue> _28448_ct = _1a7c39a71_comptimeValue((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1ab216bb5_comptimeObjSubIdent(_self_, &(_28448_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7c3a324_comptimeFile((*((*(_282643_d))))._field_Type) != nullptr)) {
			_case_begin_1ab1ecb35:;
			{
				jule::Ptr<_1a7b1b645_comptimeFile> _28478_ct = _1a7c3a324_comptimeFile((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1ab21b280_comptimeObjSubIdent(_self_, &(_28478_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7c39d07_comptimeDecl((*((*(_282643_d))))._field_Type) != nullptr)) {
			_case_begin_1ab1ed130:;
			{
				jule::Ptr<_1a7b2055b_comptimeDecl> _28508_ct = _1a7c39d07_comptimeDecl((*((*(_282643_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1ab2208d3_comptimeObjSubIdent(_self_, &(_28508_ct), _282643_d, &(_282657_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab1ec85a:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ab1ec7a0:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1c933_evalObjSubIdent(_1a7c0086c_eval* _self_, jule::Ptr<_1a7bed89d_Data> _285735_d, jule::Ptr<_1a7981202_SubIdentExpr> _285749_si) {
	if (_1a7965c97_IsIgnoreIdent((*((*(_285749_si))._field_Ident))._field_Kind)) {
		_1a7c00d45_pushErr(_self_, (*_285749_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1a7bed89d_Data> _28638_compData;
		jule::Bool _286318_ok;
		({
			__jule_tuple_x_1a7bed89d_Data__jule_tuple_bool __jule_assign_result = _1a7c1c537_tryComptimeObjSubIdent(_self_, &(_285735_d), _285749_si);
			_28638_compData = __jule_assign_result.__jule_result_arg0;
			_286318_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_286318_ok) {
			return _28638_compData;;
		};
	};
	jule::Ptr<_1a7c3255d_Type> _28687_kind = (*(_285735_d))._field_Type;;
	{
		auto &_match_expr{ (*((*(_285735_d))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data28)) {
			_case_begin_1ab2262e0:;
			{
				jule::Ptr<_1a7c4365c_Ptr> _28718_ptr = (*((*_285735_d.alloc)._field_Type))._field_Kind.cast_ptr<_1a7c4365c_Ptr>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data28);;
				if (_1a7c441c9_IsUnsafe(_28718_ptr.ptr())) {
					goto _match_end_1ab226257;
				};
				if ((!(_1a7c0183a_isUnsafe(_self_)))) {
					_1a7c00d45_pushErr(_self_, (*(_285749_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_28687_kind=(*(_28718_ptr))._field_Elem;
				_1a7c2e04e_makeImplicitDeref(&(_285735_d), (*(_285749_si))._field_Ident);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)) {
			_case_begin_1ab225be6:;
			{
				jule::Ptr<_1a7c3ed95_Sptr> _28818_sptr = (*((*_285735_d.alloc)._field_Type))._field_Kind.cast_ptr<_1a7c3ed95_Sptr>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23);;
				_28687_kind=(*(_28818_sptr))._field_Elem;
				_1a7c2e04e_makeImplicitDeref(&(_285735_d), (*(_285749_si))._field_Ident);
			}
		}
		_match_end_1ab226257:;
	};
	{
		auto &_match_expr{ (*(_28687_kind))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
			_case_begin_1ab226741:;
			{
				jule::Ptr<_1a799a97a_StructIns> _28888_s = (*(_28687_kind))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);;
				if ((((*(_28888_s))._field_Source != nullptr) || _1a7c2a59a_isInstancedStruct(_28888_s))) {
					jule::Bool _28909_usedReferenceElem = false;;
					{
						auto &_match_expr{ (*((*(_285735_d))._field_Type))._field_Kind };
						
						if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)) {
							_case_begin_1ab22baa9:;
							{
								_28909_usedReferenceElem=true;
							}
						}
						_match_end_1ab22ba32:;
					};
					return _1a7c18951_evalStructSubIdent(_self_, _285735_d, _28888_s, _285749_si, _28909_usedReferenceElem);;
				};
			}
		}
		_match_end_1ab2266ca:;
	};
	if ((_1a7c37211_Trait((*(_285735_d))._field_Type.ptr()) != nullptr)) {
		return _1a7c172ac_evalTraitSubIdent(_self_, _285735_d, _1a7c37211_Trait((*(_285735_d))._field_Type), (*(_285749_si))._field_Ident);;
	};
	_1a7c00d45_pushErr(_self_, (*(_285749_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_285735_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1cc74_evalSubIdent(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7981202_SubIdentExpr> _290533_si) {
	jule::Ptr<_1a7c3255d_Type> _29067_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_29067_prefix;
	});;
	jule::Ptr<_1a7bed89d_Data> _29097_d = _1a7c1e6c1_evalExprKind(_self_, (*((*(_290533_si))._field_Expr))._field_Kind);;
	if ((_29097_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_29097_d))._field_Decl) {
		return _1a7c1bb85_evalTypeStatic(_self_, _29097_d, _290533_si);;
	};
	return _1a7c1c933_evalObjSubIdent(_self_, _29097_d, _290533_si);;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1d170_evalTupleFunc(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797dbd3_TupleExpr> _291934_tup, jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a797d0de_Expr>*> _291956_part) {
	jule::Ptr<_1a7c4145c_Tuple> _29207_tupT = jule::new_ptr<_1a7c4145c_Tuple>(_1a7c4145c_Tuple{._field_Types=jule::Slice<jule::Ptr<_1a7c3255d_Type>>(nullptr)});;
	(*_29207_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(0LL, (*(_291934_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c3255d_Type>(nullptr); __jule_collection; });
	jule::Ptr<_1a7a68e99_TupleExpr> _29237_model = jule::new_ptr<_1a7a68e99_TupleExpr>(_1a7a68e99_TupleExpr{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bed89d_Data>>::alloc(0LL, (*_291934_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7bed89d_Data>(nullptr); __jule_collection; })});;
	jule::Bool _29277_ok = true;;
	{
		auto expr = &((*_291934_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab234276:;
		if (it != expr_end) {
			jule::Ptr<_1a797d0de_Expr> _292815_expr = *it;
			{
				jule::Ptr<_1a7bed89d_Data> _29298_d = _291956_part(&(_292815_expr));;
				if ((_29298_d == nullptr)) {
					_29277_ok=false;
					goto _iter_next_1ab234276;
				};
				(*_29207_tupT.alloc)._field_Types=jule::append((*_29207_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_29298_d))._field_Type; __jule_collection; }));
				(*(_29237_model))._field_Datas=jule::append((*_29237_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7bed89d_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _29298_d; __jule_collection; }));
			}
			_iter_next_1ab234276:;
			++it;
			goto _iter_begin_1ab234276;
		}
		_iter_end_1ab234276:;
	};
	if ((!(_29277_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29207_tupT, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29237_model, &__jule_any_type83), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1d4b1_evalTuple(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797dbd3_TupleExpr> _294830_tup) {
	return _1a7c1d170_evalTupleFunc(_self_, _294830_tup, jule::__new_closure<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a797d0de_Expr>*>((void*)__jule_anon_1ab2374cc, jule::Ptr<__jule_anon_1ab2374cc_ctx>::make(__jule_anon_1ab2374cc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab2374cc_ctx_handler));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1d8ac_evalMap(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a7c4200c_Map> _295428_m, jule::Ptr<_1a79835de_BraceLit> _295441_lit) {
	jule::Ptr<_1a7a66e75_MapExpr> _29557_model = jule::new_ptr<_1a7a66e75_MapExpr>(_1a7a66e75_MapExpr{._field_Kind=_295428_m, ._field_Entries=jule::Slice<jule::Ptr<_1a7a66a9b_KeyValPairExpr>>(nullptr)});;
	{
		auto expr = &((*(_295441_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab238c81:;
		if (it != expr_end) {
			jule::Ptr<_1a797d0de_Expr> _295915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_295915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1ab239424:;
						{
							goto _match_end_1ab239710;
						}
					}
					else {
						_case_begin_1ab239776:;
						{
							_1a7c00d45_pushErr(_self_.ptr(), (*(_295441_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1ab239710:;
				};
				jule::Ptr<_1a7983e19_KeyValPair> _29698_pair = (*(_295915_expr))._field_Kind.cast_ptr<_1a7983e19_KeyValPair>(&__jule_any_type82);;
				jule::Ptr<_1a7bed89d_Data> _29718_key = _1a7c204d5_evalExpr(_self_, (*(_29698_pair))._field_Key);;
				if ((_29718_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1a7bed89d_Data> _29768_val = _1a7c204d5_evalExpr(_self_, (*_29698_pair.alloc)._field_Val);;
				if ((_29768_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1a7b91aa5_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_295428_m))._field_Key), &(_29718_key), &((*((*_29698_pair.alloc)._field_Key))._field_Token))) {
					_1a7b8c320_checkAssignType((*(_self_))._field_s, false, &((*_295428_m.alloc)._field_Key), &(_29718_key), (*(*(_29698_pair))._field_Key.alloc)._field_Token, _1a7c03d7b_getOwnerRefers(_self_));
				};
				if (_1a7b91aa5_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_295428_m))._field_Val), &(_29768_val), &((*((*_29698_pair.alloc)._field_Val))._field_Token))) {
					_1a7b8c320_checkAssignType((*(_self_))._field_s, false, &((*_295428_m.alloc)._field_Val), &(_29768_val), (*(*(_29698_pair))._field_Val.alloc)._field_Token, _1a7c03d7b_getOwnerRefers(_self_));
				};
				(*(_29557_model))._field_Entries=jule::append((*_29557_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a66a9b_KeyValPairExpr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7a66a9b_KeyValPairExpr>(_1a7a66a9b_KeyValPairExpr{._field_Key=(*(_29718_key))._field_Model, ._field_Val=(*(_29768_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1ab238c81:;
			++it;
			goto _iter_begin_1ab238c81;
		}
		_iter_end_1ab238c81:;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_295428_m, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29557_model, &__jule_any_type100), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1dbed_evalBraceLit(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a79835de_BraceLit> _300233_lit) {
	jule::Ptr<_1a7bed89d_Data> __jule_func_result;
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1ab248433:;
			{
				_1a7c00d45_pushErr(_self_, (*(_300233_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				__jule_func_result = nullptr;
				return __jule_func_result;;
			}
		}
		else if ((_1a7c37497_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ab2482e0:;
			{
				__jule_func_result=_1a7c1d8ac_evalMap(_self_, _1a7c37497_Map((*(_self_))._field_prefix), _300233_lit);
			}
		}
		else if ((_1a7c36be4_Struct((*(_self_))._field_prefix) != nullptr)) {
			_case_begin_1ab248356:;
			{
				__jule_func_result=_1a7c140de_evalStructLitExplicit(_self_, _1a7c36be4_Struct((*(_self_))._field_prefix), (*(_300233_lit))._field_Exprs, (*_300233_lit.alloc)._field_Token);
			}
		}
		else {
			_case_begin_1ab24860e:;
			{
				_1a7c00d45_pushErr(_self_, (*_300233_lit.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				__jule_func_result = nullptr;
				return __jule_func_result;;
			}
		}
		_match_end_1ab248532:;
	};
	if ((__jule_func_result != nullptr)) {
		jule::Ptr<_1a799a97a_StructIns> _30168_strct = _1a7c36e7a_softStruct((*(_self_))._field_prefix.ptr());;
		if (((_30168_strct != nullptr) && ((*_30168_strct.alloc)._field_Source != nullptr))) {
			(*__jule_func_result.alloc)._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_30168_strct, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)});
			{
				auto &_match_expr{ (*(__jule_func_result))._field_Model };
				
				if (_match_expr.type == &__jule_any_type96) {
					_case_begin_1ab24b843:;
					{
						(*((*(__jule_func_result))._field_Model.unsafe_cast_ptr<_1a7a64659_StructLitExpr>()))._field_Strct=_30168_strct;
					}
				}
				_match_end_1ab24b7bb:;
			};
		};
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1e03e_evalAnonFunc(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a798aa47_FnDecl> _302833_decl) {
	_1a7c4564d_typeChecker _30297_tc = _1a7c4564d_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1a7c4465d_referencer>(nullptr), ._field_refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7c31848_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1a7a73b41_FnIns> _30347_ins = _1a7c4c765_buildFunc(&_30297_tc, _302833_decl);;
	if ((_30347_ins == nullptr)) {
		return nullptr;;
	};
	(*(_30347_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _30397_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7ba4eb4_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)) {
			_case_begin_1ab24dec7:;
			{
				jule::Ptr<_1a7b34938_scopeChecker> _30428_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1a7b34938_scopeChecker>((jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1);;
				jule::Ptr<_1a7b34938_scopeChecker> _30438_scc = _1a7b46c8b_newChildChecker(_30428_sc);;
				(*(_30438_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a7b3356e_scopeLabel>>>(nullptr);
				(*_30438_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a7b303a1_GotoSt>>>(nullptr);
				(*_30438_scc.alloc)._field_owner=_30347_ins;
				(*_30438_scc.alloc)._field_childIndex=0LL;
				(*_30438_scc.alloc)._field_it=0LLU;
				(*_30438_scc.alloc)._field_cse=0LLU;
				(*_30438_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>>)((&(_30397_captured))));
				_1a7b9e3ed_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_30347_ins), &(_30438_scc));
			}
		}
		else {
			_case_begin_1ab24ee1d:;
			{
				_1a7b9ea19_checkFnIns((*_self_.alloc)._field_s, &(_30347_ins));
			}
		}
		_match_end_1ab24eda7:;
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_30347_ins, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1a7a666c2_AnonFnExpr>(_1a7a666c2_AnonFnExpr{._field_Captured=_30397_captured, ._field_Func=_30347_ins, ._field_Global=_1a7c01ac1_isGlobal(_self_)}), &__jule_any_type101), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1e380_evalBinary(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a79816a8_BinaryExpr> _306631_op) {
	_1a7c22905_binaryEval _30677_bs = static__1a7c22edd_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1a7c3b369_Prim> _30704_prim = _1a7c35671_Prim((*(_self_))._field_prefix);;
		if (((_30704_prim == nullptr) || (!(_1a7aee9e1_IsNum(_1a7c3b6dd_Str(_30704_prim.ptr())))))) {
			jule::Ptr<_1a7c3255d_Type> _30729_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_30729_prefix;
			});;
			return _1a7c288d9_eval(&_30677_bs, &(_306631_op));;
		};
	};
	return _1a7c288d9_eval(&_30677_bs, &(_306631_op));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1e6c1_evalExprKind(jule::Ptr<_1a7c0086c_eval> _self_, jule::Any _308133_kind) {
	{
		auto &_match_expr{ _308133_kind };
		
		if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ab259d07:;
			{
				jule::Ptr<_1a797d3a8_RangeExpr> _30848_e = _308133_kind.unsafe_cast_ptr<_1a797d3a8_RangeExpr>();;
				return _1a7c1e6c1_evalExprKind(_self_, (*((*(_30848_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ab259895:;
			{
				return _1a7c033a8_evalLit(_self_.ptr(), _308133_kind.unsafe_cast_ptr<_1a797e079_LitExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ab259d6d:;
			{
				return _1a7c080e4_evalIdent(_self_, _308133_kind.unsafe_cast_ptr<_1a797e909_IdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ab259dd4:;
			{
				return _1a7c08435_evalUnary(_self_, _308133_kind.unsafe_cast_ptr<_1a798019b_UnaryExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ab259ee4:;
			{
				return _1a7c08776_evalVariadic(_self_, _308133_kind.unsafe_cast_ptr<_1a7980575_VariadicExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ab25a05a:;
			{
				return _1a7c08ab7_evalUnsafe(_self_, _308133_kind.unsafe_cast_ptr<_1a797e453_UnsafeExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ab25a0c1:;
			{
				return _1a7c09700_evalSliceExpr(_self_, _308133_kind.unsafe_cast_ptr<_1a7984645_SliceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ab25a137:;
			{
				return _1a7c0d34c_evalIndexing(_self_, _308133_kind.unsafe_cast_ptr<_1a79850a2_IndexingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ab25b424:;
			{
				return _1a7c0e67d_evalSlicing(_self_, _308133_kind.unsafe_cast_ptr<_1a7985712_SlicingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ab25b48a:;
			{
				return _1a7c137e7_evalCast(_self_, _308133_kind.unsafe_cast_ptr<_1a798094e_CastExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ab25b501:;
			{
				return _1a7c13b38_evalNamespace(_self_, _308133_kind.unsafe_cast_ptr<_1a7980d28_NamespaceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1ab25b578:;
			{
				return _1a7c14430_evalStructLit(_self_, _308133_kind.unsafe_cast_ptr<_1a7983138_StructLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ab25b600:;
			{
				return _1a7c14a07_evalType(_self_, _308133_kind.unsafe_cast_ptr<_1a7978caa_TypeDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ab25b677:;
			{
				return _1a7c16113_evalFnCall(_self_, _308133_kind.unsafe_cast_ptr<_1a7981d18_FnCallExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ab25b6ee:;
			{
				return _1a7c1cc74_evalSubIdent(_self_, _308133_kind.unsafe_cast_ptr<_1a7981202_SubIdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ab25b776:;
			{
				return _1a7c1d4b1_evalTuple(_self_, _308133_kind.unsafe_cast_ptr<_1a797dbd3_TupleExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ab25b7ed:;
			{
				return _1a7c1dbed_evalBraceLit(_self_, _308133_kind.unsafe_cast_ptr<_1a79835de_BraceLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ab25b875:;
			{
				return _1a7c1e03e_evalAnonFunc(_self_, _308133_kind.unsafe_cast_ptr<_1a798aa47_FnDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ab25b8ec:;
			{
				return _1a7c1e380_evalBinary(_self_, _308133_kind.unsafe_cast_ptr<_1a79816a8_BinaryExpr>());;
			}
		}
		else {
			_case_begin_1ab259a2c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2599b6:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1ea12_eval1(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797d0de_Expr> _312926_expr) {
	jule::Ptr<_1a7bed89d_Data> _31307_d = _1a7c1e6c1_evalExprKind(_self_, (*(_312926_expr))._field_Kind);;
	if (((_31307_d == nullptr) || ((*(_31307_d))._field_Type == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1a7c3695d_Fn((*(_31307_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab27e2d2:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _31388_f = _1a7c3695d_Fn((*(_31307_d))._field_Type);;
				if (_1a7a75109_IsBuiltin(_31388_f.ptr())) {
					_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_312926_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_1ab2805ad;
				};
				jule::I32 _31434_required = (*((*(_31388_f))._field_Decl))._field_Generics.len();;
				jule::I32 _31444_given = (*_31388_f.alloc)._field_Generics.len();;
				if ((!(_1a7b8635d_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _31434_required, _31444_given, (*_312926_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_31388_f))._field_Decl.alloc)._field_Statically)) && _1a7a712c0_IsMethod((*(_31388_f))._field_Decl))) {
					_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_312926_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_1a7c28cd5_findDirective(&((*(*(_31388_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*_312926_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_31388_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				} else {
					(*_31388_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_31307_d))._field_Decl) {
			_case_begin_1ab27e348:;
			{
				jule::Ptr<_1a799a97a_StructIns> _31578_s = _1a7c36be4_Struct((*_31307_d.alloc)._field_Type.ptr());;
				if ((_31578_s == nullptr)) {
					goto _match_end_1ab2805ad;
				};
				jule::I32 _31614_required = (*((*(_31578_s))._field_Decl))._field_Generics.len();;
				jule::I32 _31624_given = (*_31578_s.alloc)._field_Generics.len();;
				if ((!(_1a7b8635d_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _31614_required, _31624_given, (*_312926_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1ab2805ad:;
	};
	return _31307_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c1ed53_eval(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797d0de_Expr> _317425_expr) {
	jule::Ptr<_1a7bed89d_Data> _31757_d = _1a7c1ea12_eval1(_self_, _317425_expr);;
	if ((_31757_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1a7c379b4_comptime((*(_31757_d))._field_Type.ptr()))) {
		_1a7b7eec2_pushErr((*_self_.alloc)._field_s.ptr(), (*(_317425_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _31757_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c20194_evalExpr1(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797d0de_Expr> _318930_expr) {
	jule::Ptr<_1a7bed89d_Data> _31907_d = _1a7c1ea12_eval1(_self_, _318930_expr);;
	{
		
		if ((_31907_d == nullptr)) {
			_case_begin_1ab28ec3d:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31907_d))._field_Decl) {
			_case_begin_1ab28ecd7:;
			{
				_1a7c00d45_pushErr(_self_, (*(_318930_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ab28ebb6:;
			{
				return _31907_d;;
			}
		}
		_match_end_1ab28eb50:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c204d5_evalExpr(jule::Ptr<_1a7c0086c_eval> _self_, jule::Ptr<_1a797d0de_Expr> _320529_expr) {
	jule::Ptr<_1a7bed89d_Data> _32067_d = _1a7c1ed53_eval(_self_, _320529_expr);;
	{
		
		if ((_32067_d == nullptr)) {
			_case_begin_1ab291c40:;
			{
				return nullptr;;
			}
		}
		else if ((*(_32067_d))._field_Decl) {
			_case_begin_1ab291cd9:;
			{
				_1a7c00d45_pushErr(_self_, (*(_320529_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ab291bb8:;
			{
				return _32067_d;;
			}
		}
		_match_end_1ab291b52:;
	};
}








inline jule::Bool _1a7c20969_unaryEval_eq(_1a7c20969_unaryEval *_self_, _1a7c20969_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1a7c20969_unaryEval static__1a7c20ddc_new(jule::Ptr<_1a7c0086c_eval> _322620_e) {
	return _1a7c20969_unaryEval{._field_e=_322620_e, ._field_d=jule::Ptr<_1a7bed89d_Data>(nullptr), ._field_u=jule::Ptr<_1a798019b_UnaryExpr>(nullptr)};;
}



inline void _1a7c210da_minus(_1a7c20969_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1ab293aaa:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a7c35671_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab293e95:;
			{
				if ((!(_1a7aee9e1_IsNum(_1a7c3b6dd_Str(_1a7c35671_Prim((*((*(_self_))._field_d))._field_Type).ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ab2936e2:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab2935d2:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a7bee2d8_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1a7a5ba5d_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acdd4de2:;
				{
					_1a7a5aa90_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1a7a59462_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a7a5b024_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acdd4a90:;
				{
					_1a7a59ebd_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1a7a58928_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a7a5b2aa_IsU64((*((*(_self_))._field_d))._field_Constant)) {
				_case_begin_1acdd4b06:;
				{
					_1a7a59ebd_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1a7a596e8_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1acdd4a29:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.minus, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3259:5"));;
				}
			}
			_match_end_1acdd494c:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7a63c85_UnaryExpr>(_1a7a63c85_UnaryExpr{._field_Expr=jule::new_ptr<_1a7bed89d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1a7c212d8_plus(_1a7c20969_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1acdda4d0:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a7c35671_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1acdda568:;
			{
				if ((!(_1a7aee9e1_IsNum(_1a7c3b6dd_Str(_1a7c35671_Prim((*((*(_self_))._field_d))._field_Type).ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1acdda117:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1acdda007:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a7bee2d8_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1a7a5ba5d_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acddd846:;
				{
					_1a7a5aa90_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1a7a59462_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a7a5b024_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acddd4e4:;
				{
					_1a7a59ebd_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1a7a58928_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a7a5b2aa_IsU64((*((*(_self_))._field_d))._field_Constant)) {
				_case_begin_1acddd55a:;
				{
					_1a7a59ebd_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1a7a596e8_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1acddd47d:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.plus, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3299:5"));;
				}
			}
			_match_end_1acddd3a1:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7a63c85_UnaryExpr>(_1a7a63c85_UnaryExpr{._field_Expr=jule::new_ptr<_1a7bed89d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1a7c214d6_caret(_1a7c20969_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1acde3e12:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a7c35671_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1acde3e9a:;
			{
				if ((!(_1a7aee419_IsInt(_1a7c3b6dd_Str(_1a7c35671_Prim((*((*(_self_))._field_d))._field_Type).ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1acde3a49:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1acde3939:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a7bee2d8_IsConst((*(_self_))._field_d)) {
		jule::I32 _33354_sz = _1a7ae639a_BitSizeOf((*(_1a7c35671_Prim((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Kind);;
		{
			
			if (_1a7a5b024_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acde7e5a:;
				{
					{
						auto &_match_expr{ _33354_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1acde8e5b:;
							{
								_1a7a59ebd_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I8>(_1a7a58928_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1acde8b1a:;
							{
								_1a7a59ebd_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I16>(_1a7a58928_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1acde8b81:;
							{
								_1a7a59ebd_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I32>(_1a7a58928_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1acde8be7:;
							{
								_1a7a59ebd_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1a7a58928_ReadI64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1acde893e:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3348:6"));;
							}
						}
						_match_end_1acde8a4e:;
					};
				}
			}
			else if (_1a7a5b2aa_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acde7b08:;
				{
					{
						auto &_match_expr{ _33354_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1acdede72:;
							{
								_1a7a5a276_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U8>(_1a7a58bae_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1acdedb42:;
							{
								_1a7a5a276_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U16>(_1a7a58bae_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1acdedba8:;
							{
								_1a7a5a276_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U32>(_1a7a58bae_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1acdedc1e:;
							{
								_1a7a5a276_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1a7a58bae_ReadU64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1acded977:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3361:6"));;
							}
						}
						_match_end_1acded9ee:;
					};
				}
			}
			else {
				_case_begin_1acde7a92:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.caret, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3364:5"));;
				}
			}
			_match_end_1acde7a2b:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7a63c85_UnaryExpr>(_1a7a63c85_UnaryExpr{._field_Expr=jule::new_ptr<_1a7bed89d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1a7c216d4_excl(_1a7c20969_unaryEval* _self_) {
	jule::Ptr<_1a7c3b369_Prim> _33783_t = _1a7c35671_Prim((*((*(_self_))._field_d))._field_Type.ptr());;
	if (((_33783_t == nullptr) || (!(_1a7c3e59d_IsBool(_33783_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a7bee2d8_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1a7a5b541_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ace0692a:;
				{
					_1a7a5a52e_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1a7a58e45_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1ace06562:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.excl, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3392:5"));;
				}
			}
			_match_end_1ace06485:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7a63c85_UnaryExpr>(_1a7a63c85_UnaryExpr{._field_Expr=jule::new_ptr<_1a7bed89d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1a7c218d2_star(_1a7c20969_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1a7a63c85_UnaryExpr>(_1a7a63c85_UnaryExpr{._field_Expr=jule::new_ptr<_1a7bed89d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
	{
		
		if ((_1a7c35b8d_Ptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1ace0a137:;
			{
				if ((!(_1a7c0183a_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1a7c00d45_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a7c4365c_Ptr> _34178_t = _1a7c35b8d_Ptr((*((*(_self_))._field_d))._field_Type);;
				if (_1a7c441c9_IsUnsafe(_34178_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Type=(*(_34178_t))._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1a7c35907_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1ace0a1ae:;
			{
				(*(*(_self_))._field_d.alloc)._field_Type=(*(_1a7c35907_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_1ace09c80:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ace08d28:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1a7c21ad0_amper(_1a7c20969_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ace11aab:;
			{
				jule::Ptr<_1a7a64659_StructLitExpr> _34398_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1a7a64659_StructLitExpr>();;
				_1a7c2970e_makeStructLitAlloc(&((*(_self_))._field_d), &(_34398_lit));
			}
		}
		else {
			_case_begin_1ace10cca:;
			{
				{
					
					if (_1a7c4ea86_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1ace116c1:;
						{
							(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c4365c_Ptr>(_1a7c4365c_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Type}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7a63c85_UnaryExpr>(_1a7a63c85_UnaryExpr{._field_Expr=jule::new_ptr<_1a7bed89d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
						}
					}
					else {
						_case_begin_1ace108e0:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1ace11270:;
				};
			}
		}
		_match_end_1ace10c64:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1a7c21ccd_typeDecl(_1a7c20969_unaryEval* _self_) {
	_1a7c4564d_typeChecker _34647_tc = _1a7c4564d_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1a7c4465d_referencer>(nullptr), ._field_refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a7c31848_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ace171aa:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c4ae7d_buildPtrFromType(&_34647_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type85);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ace16d69:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c4a7eb_buildSptrFromType(&_34647_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type85);
			}
		}
		else {
			_case_begin_1ace167d6:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(*(_self_))._field_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ace16ce2:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1a7c21ecb_evalData(_1a7c20969_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ace1c875:;
			{
				jule::Ptr<_1a7c3255d_Type> _34898_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1a7c1ed53_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34898_prefix;
			}
		}
		else {
			_case_begin_1ace16dd0:;
			{
				(*(_self_))._field_d=_1a7c1ed53_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1ace1c48a:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c2231c_eval(_1a7c20969_unaryEval* _self_, jule::Ptr<_1a798019b_UnaryExpr> _349824_u) {
	(*(_self_))._field_u=_349824_u;
	_1a7c21ecb_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1a7c21ccd_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1a7c3255d_Type> _35093_kind = (*((*(_self_))._field_d))._field_Type;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1ace21ec8:;
			{
				_1a7c210da_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1ace2203e:;
			{
				_1a7c212d8_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ace220a5:;
			{
				_1a7c214d6_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1ace2211b:;
			{
				_1a7c216d4_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ace22182:;
			{
				_1a7c218d2_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ace221e8:;
			{
				_1a7c21ad0_amper(_self_);
			}
		}
		else {
			_case_begin_1ace21989:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1ace21e51:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ace22704:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str(_35093_kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1a7bee2d8_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1ace20603:;
			{
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Constant, &__jule_any_type15);
			}
		}
		_match_end_1ace24140:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _1a7c22905_binaryEval_eq(_1a7c22905_binaryEval *_self_, _1a7c22905_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1a7c22905_binaryEval static__1a7c22edd_newPlain(jule::Ptr<_1a7c0086c_eval> _354625_e) {
	return _1a7c22905_binaryEval{._field_e=_354625_e, ._field_l=jule::Ptr<_1a7bed89d_Data>(nullptr), ._field_r=jule::Ptr<_1a7bed89d_Data>(nullptr), ._field_op=jule::Ptr<_1a79633b0_Token>(nullptr)};;
}



inline _1a7c22905_binaryEval static__1a7c23362_new(jule::Ptr<_1a7c0086c_eval> _355220_e, jule::Ptr<_1a79633b0_Token> _355234_op) {
	return _1a7c22905_binaryEval{._field_e=_355220_e, ._field_l=jule::Ptr<_1a7bed89d_Data>(nullptr), ._field_r=jule::Ptr<_1a7bed89d_Data>(nullptr), ._field_op=_355234_op};;
}



inline jule::Bool _1a7c235e8_checkTypeCompatibility(_1a7c22905_binaryEval* _self_) {
	return _1a7b8d651_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1a7c2387e_checkTypeCompatibility1(_1a7c22905_binaryEval* _self_) {
	if ((_1a7bee2d8_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		std::swap((*(_self_))._field_l, (*(_self_))._field_r);
	};
	;
	return _1a7b8c320_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), (*(_self_))._field_op, nullptr);;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c23b15_evalComptimeTypeInfo(_1a7c22905_binaryEval* _self_) {
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _35767_r = _1a7c392bd_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_35767_r == nullptr)) {
		_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7b10d65_comptimeTypeInfo> _35817_l = _1a7c392bd_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1ace3028e:;
			{
				jule::Ptr<_1a79ea9a8_Const> _35848_constant = static__1a7a57a26_NewBool(_1a7c32c9a_Equal((*(_35817_l))._field_base, (*(_35767_r))._field_base));;
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35848_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35848_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ace2e0c3:;
			{
				jule::Ptr<_1a79ea9a8_Const> _35918_constant = static__1a7a57a26_NewBool((!(_1a7c32c9a_Equal((*(_35817_l))._field_base, (*(_35767_r))._field_base))));;
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35918_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35918_constant});;
			}
		}
		else {
			_case_begin_1ace2d941:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ace2dbd8:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c23d9b_evalNil(_1a7c22905_binaryEval* _self_) {
	if ((!(_1a7c34dbd_NilCompatible((*((*(_self_))._field_r))._field_Type.ptr())))) {
		_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ace3512e:;
			{
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ace308cc:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ace34c55:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c24132_evalEnum(_1a7c22905_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ace36b14:;
			{
				jule::Ptr<_1a7c3255d_Type> _36258_rkind = (*((*(_self_))._field_r))._field_Type;;
				if ((_1a7c35e24_Enum((*(*(_self_))._field_r.alloc)._field_Type.ptr()) != nullptr)) {
					_36258_rkind=(*((*(_1a7c35e24_Enum((*((*(_self_))._field_r))._field_Type)))._field_TypeSym))._field_Type;
				};
				jule::Ptr<_1a7a7d94d_Enum> _36298_enm = _1a7c35e24_Enum((*((*(_self_))._field_l))._field_Type.ptr());;
				if ((!(_1a7b8cc7c_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_36298_enm))._field_TypeSym))._field_Type), &(_36258_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		_match_end_1ace364c6:;
	};
	if ((!(_1a7c235e8_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ace3c433:;
			{
				if ((!(_1a7aee9e1_IsNum(_1a7c3b6dd_Str(_1a7c35671_Prim((*((*(_1a7c35e24_Enum((*((*(_self_))._field_l))._field_Type.ptr())))._field_TypeSym))._field_Type.ptr()).ptr()))))) {
					_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ace3c686:;
			{
				jule::Ptr<_1a7a7cde2_EnumItem> _36554_first = (*(_1a7c35e24_Enum((*((*(_self_))._field_l))._field_Type.ptr())))._field_Items[0LL];;
				{
					
					if (_1a7a5b024_IsI64((*((*((*(_36554_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ace4226d:;
						{
							if ((_1a7a58928_ReadI64((*((*((*(_36554_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1ace4456c;
							};
							goto _julec_label_1ace45617;
						}
					}
					else if (_1a7a5b2aa_IsU64((*((*((*(_36554_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ace41e1b:;
						{
							if ((_1a7a58bae_ReadU64((*((*((*(_36554_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1ace4456c;
							};
							goto _julec_label_1ace45617;
						}
					}
					else {
						_case_begin_1ace41da5:;
						{
							__jule_panic_s(jule::Str::lit("sema: unimplemented enum type, this panic call should be unreachable", 68) + jule::Str("\nlocation: std/jule/sema/eval.jule:3668:5"));;
						}
					}
					_match_end_1ace41d2d:;
				};
				_julec_label_1ace45617:;
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1a7c011a8_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_1ace4456c:;
				goto _case_begin_1ace3c6ec;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ace3c6ec:;
			{
				jule::Ptr<_1a7a7d94d_Enum> _36778_enm = _1a7c35e24_Enum((*((*(_self_))._field_l))._field_Type);;
				if (((_1a7c35671_Prim((*((*(_36778_enm))._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_1a7aee419_IsInt(_1a7c3b6dd_Str(_1a7c35671_Prim((*((*(_36778_enm))._field_TypeSym))._field_Type.ptr()).ptr())))))) {
					_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ace39919:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ace3ad05:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c243b8_evalTypeEnum(_1a7c22905_binaryEval* _self_) {
	if ((!(_1a7c235e8_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ace4c146:;
			{
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ace4a7d7:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ace4aaa1:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c2464e_evalSptr(_1a7c22905_binaryEval* _self_) {
	if ((!(_1a7c235e8_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ace4e896:;
			{
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ace4c5db:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ace4d301:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c248d5_evalPtr(_1a7c22905_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1ace51b84:;
			{
				if ((!(_1a7c235e8_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1ace509a7:;
			{
				if ((_1a7c35b8d_Ptr((*((*(_self_))._field_l))._field_Type.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1a7c441c9_IsUnsafe(_1a7c35b8d_Ptr((*((*(_self_))._field_l))._field_Type.ptr()).ptr())) {
					_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
				if ((!(_1a7c2a897_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_r))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ace4eae9:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ace50017:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c24b6b_evalArr(_1a7c22905_binaryEval* _self_) {
	if ((!(_1a7c235e8_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ace59bd1:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1a7a73b41_FnIns> _37659_f = _1a7a72090_instanceForce(_1a76466ae_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37659_f))._field_Generics=jule::append((*_37659_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7c30b77_InsGeneric>(_1a7c30b77_InsGeneric{._field_Type=(*(_1a7c36441_Arr((*((*(_self_))._field_l))._field_Type.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1a7c3255d_Type>>(nullptr)}); __jule_collection; }));
					jule::Bool _37675_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7b9c918_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37659_f), &((*(_self_))._field_op));
						_37675_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37675_ok))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/eval.jule:3769:6"));;
					};
					_1aca4a816_pushReference((*(_self_))._field_e, &(_37659_f));
				};
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ace582b7:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ace5863b:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c24e02_evalStruct(_1a7c22905_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ace60e7e:;
			{
				if ((!(_1a7c235e8_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ace59e34:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ace5a2ca:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c25188_evalTrait(_1a7c22905_binaryEval* _self_) {
	if ((!(_1a7c235e8_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ace63b41:;
			{
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ace61424:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ace6259b:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c2541e_evalAny(_1a7c22905_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ace65e2e:;
			{
				_1a7c50933_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op), _1a7c03d7b_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ace63d94:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ace642b2:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c256a5_evalBool(_1a7c22905_binaryEval* _self_) {
	if ((!(_1a7c2387e_checkTypeCompatibility1(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(54LLU) || _match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1ace6940a:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ace663c4:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ace67d65:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c2593b_evalStr(_1a7c22905_binaryEval* _self_) {
	if ((!(_1a7c2387e_checkTypeCompatibility1(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1ace6be8a:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ace6acad:;
			{
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ace69c68:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ace6a8e5:;
	};
}



inline void _1a7c25b39_setTypeToGreater(_1a7c22905_binaryEval* _self_) {
	jule::Ptr<_1a7c3b369_Prim> _38703_lp = _1a7c35671_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	jule::Ptr<_1a7c3b369_Prim> _38713_rp = _1a7c35671_Prim((*((*(_self_))._field_r))._field_Type);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Type=(*(*(_self_))._field_r.alloc)._field_Type;
		if (_1a7bee2d8_IsConst((*(_self_))._field_l)) {
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38713_rp))._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		if (_1a7bee2d8_IsConst((*(_self_))._field_r)) {
			(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38703_lp))._field_Kind;
		};
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		if (_1a7bee2d8_IsConst((*(_self_))._field_r)) {
			(*(*((*(_self_))._field_r))._field_Constant.alloc)._field_Kind=(*_38703_lp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _1a7c25de2_checkModData(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a7bed89d_Data>* _389333_d) {
	if ((!(_1a7bee2d8_IsConst((*(_389333_d)).ptr())))) {
		if (((_1a7c35671_Prim((*((*(_389333_d))))._field_Type.ptr()) == nullptr) || (!(_1a7aee419_IsInt((*(_1a7c35671_Prim((*((*(_389333_d))))._field_Type.ptr())))._field_Kind))))) {
			_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a7bd8bc9_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _389333_d)) {
			_case_begin_1ace789d0:;
			{
				_1a7a59ebd_SetI64((*((*(_389333_d))))._field_Constant.ptr(), _1a7a596e8_AsI64((*((*(_389333_d))))._field_Constant));
			}
		}
		else if (_1a7bd9092_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _389333_d)) {
			_case_begin_1ace78590:;
			{
				_1a7a5a276_SetU64((*((*(_389333_d))))._field_Constant.ptr(), _1a7a5997e_AsU64((*((*(_389333_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1ace7820a:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ace7648e:;
	};
}



inline void _1a7c260e0_mod(_1a7c22905_binaryEval* _self_) {
	_1a7c25de2_checkModData(_self_, &((*(_self_))._field_l));
	_1a7c25de2_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1a7c26376_numbersAreCompatibile(_1a7c22905_binaryEval* _self_) {
	jule::Str _39163_lk = (*(_1a7c35671_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _39173_rk = (*(_1a7c35671_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_1a7aee9e1_IsNum(_39173_rk)))) {
		_1a7b8d19a_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return false;;
	};
	if ((_1a7bee2d8_IsConst((*(_self_))._field_l) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((_39163_lk == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_1a7bee2d8_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			if ((!(_1a7bd8855_floatAssignable(&(_39163_lk), &((*(_self_))._field_r))))) {
				_1a7b8d19a_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
				return false;;
			};
			return true;;
		};
		if ((_39173_rk != static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
			_1a7b8d19a_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
			return false;;
		};
		return true;;
	};
	if ((_39163_lk == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_1a7bee2d8_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			if ((!(_1a7bd8855_floatAssignable(&(_39163_lk), &((*(_self_))._field_r))))) {
				_1a7b8d19a_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
				return false;;
			};
			return true;;
		};
		if ((_39173_rk != static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
			_1a7b8d19a_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
			return false;;
		};
		return true;;
	};
	if ((_1a7bee2d8_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		if ((!(_1a7bd9416_intAssignable(_39163_lk, &((*(_self_))._field_r))))) {
			_1a7b8d19a_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
			return false;;
		};
		return true;;
	};
	return _1a7c235e8_checkTypeCompatibility(_self_);;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c2660c_shift(_1a7c22905_binaryEval* _self_) {
	jule::Ptr<_1a7c3b369_Prim> _39663_lk = _1a7c35671_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((_39663_lk == nullptr)) {
		_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7c3b369_Prim> _39713_rk = _1a7c35671_Prim((*((*(_self_))._field_r))._field_Type);;
	if ((_39713_rk == nullptr)) {
		_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1a7aee9e1_IsNum((*(_39663_lk))._field_Kind))) || (!(_1a7aee9e1_IsNum((*(_39713_rk))._field_Kind))))) {
		_1a7b8d19a_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1a7aee419_IsInt((*(_39663_lk))._field_Kind)))) {
		if (((!(_1a7bee2d8_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1a7bd9416_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_1a7a59ebd_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1a7a596e8_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1a7ca832b_primI64;
		} else if (_1a7bd9416_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_1a7a5a276_SetU64((*((*(_self_))._field_l))._field_Constant, _1a7a5997e_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1a7ca912e_primU64;
		};
	};
	if ((!(_1a7aee419_IsInt((*(_39713_rk))._field_Kind)))) {
		if (((!(_1a7bee2d8_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(*(_self_))._field_l.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1a7bd9416_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_1a7a59ebd_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1a7a596e8_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1a7ca832b_primI64;
		} else if (_1a7bd9416_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_1a7a5a276_SetU64((*((*(_self_))._field_r))._field_Constant, _1a7a5997e_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1a7ca912e_primU64;
		};
	};
	if ((!(_1a7c2a1c1_isOkForShifting(&((*(_self_))._field_r))))) {
		_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c26893_evalFloat(_1a7c22905_binaryEval* _self_) {
	if ((!(_1a7c26376_numbersAreCompatibile(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ace99b00:;
			{
				_1a7c25b39_setTypeToGreater(_self_);
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		_match_end_1ace99a89:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1ace9abab:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4043:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ace9aa68:;
			{
				_1a7c25b39_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1ace9aace:;
			{
				_1a7c25b39_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1ace9c383:;
			{
				if ((!(_1a7aee419_IsInt((*(_1a7c35671_Prim((*((*(_self_))._field_r))._field_Type.ptr())))._field_Kind)))) {
					_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1a7c260e0_mod(_self_);
				_1a7c25b39_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1ace99bdd:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ace9a947:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c26b29_evalInt(_1a7c22905_binaryEval* _self_) {
	if ((!(_1a7c26376_numbersAreCompatibile(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1acea2212:;
			{
				return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6da7_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
			}
		}
		_match_end_1acea219b:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1acea47a8:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4088:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1acea481e:;
			{
				_1a7c25b39_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1acea4885:;
			{
				_1a7c25b39_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1acea3125:;
			{
				_1a7c260e0_mod(_self_);
				_1a7c25b39_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1acea2300:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1acea3004:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c26db0_evalPrim(_1a7c22905_binaryEval* _self_) {
	jule::Ptr<_1a7c3b369_Prim> _41113_prim = _1a7c35671_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		
		if (_1a7c3e59d_IsBool(_41113_prim.ptr())) {
			_case_begin_1acea79a9:;
			{
				return _1a7c256a5_evalBool(_self_);;
			}
		}
		else if (_1a7c3e834_IsStr(_41113_prim.ptr())) {
			_case_begin_1acea7a53:;
			{
				return _1a7c2593b_evalStr(_self_);;
			}
		}
		_match_end_1acea7921:;
	};
	if ((_1a7c35671_Prim((*((*(_self_))._field_r))._field_Type) == nullptr)) {
		_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c3b6dd_Str(_41113_prim.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1a7aee75a_IsFloat((*(_41113_prim))._field_Kind)) {
			_case_begin_1aceaa89c:;
			{
				return _1a7c26893_evalFloat(_self_);;
			}
		}
		else if (_1a7aee419_IsInt((*(_41113_prim))._field_Kind)) {
			_case_begin_1aceaa924:;
			{
				return _1a7c26b29_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1aceaa836:;
			{
				return nullptr;;
			}
		}
		_match_end_1aceaa0b6:;
	};
}



inline jule::Bool _1a7c27146_checkSpecialCases(_1a7c22905_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _41363_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(50LLU)) || ((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(51LLU)));;
	if ((!(_41363_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1a7c3461a_Comparable((*((*(_self_))._field_l))._field_Type.ptr()))) && (!(_1a7c336d5_IsNil((*((*(_self_))._field_r))._field_Type))))) {
		_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1a7c3461a_Comparable((*((*(_self_))._field_r))._field_Type.ptr()))) && (!(_1a7c336d5_IsNil((*((*(_self_))._field_l))._field_Type))))) {
		_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c273cc_evalOp(_1a7c22905_binaryEval* _self_) {
	jule::Bool _41513_ok = _1a7c27146_checkSpecialCases(_self_);;
	if ((!(_41513_ok))) {
		return nullptr;;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(56LLU)) || ((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(57LLU)))) {
		return _1a7c2660c_shift(_self_);;
	};
	{
		
		if (_1a7c3396b_Void((*((*(_self_))._field_l))._field_Type.ptr())) {
			_case_begin_1aca74aa4:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1a7c392bd_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aca738b6:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aca73740;
			}
		}
		else if ((_1a7c392bd_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aca73740:;
			{
				return _1a7c23b15_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1a7c35671_Prim((*((*(_self_))._field_r))._field_Type) != nullptr) && _1a7c3eaba_IsAny(_1a7c35671_Prim((*((*(_self_))._field_r))._field_Type).ptr()))) {
			_case_begin_1aca737a6:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aca74d07;
			}
		}
		else if (_1a7c336d5_IsNil((*((*(_self_))._field_r))._field_Type)) {
			_case_begin_1aca74d07:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aca74d6d;
			}
		}
		else if (_1a7c336d5_IsNil((*((*(_self_))._field_l))._field_Type)) {
			_case_begin_1aca74d6d:;
			{
				return _1a7c23d9b_evalNil(_self_);;
			}
		}
		else if (((_1a7c35671_Prim((*((*(_self_))._field_l))._field_Type) != nullptr) && _1a7c3eaba_IsAny(_1a7c35671_Prim((*((*(_self_))._field_l))._field_Type).ptr()))) {
			_case_begin_1aca74dd4:;
			{
				return _1a7c2541e_evalAny(_self_);;
			}
		}
		else if ((_1a7c361aa_TypeEnum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1aca74ea0:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aca75016;
			}
		}
		else if ((_1a7c361aa_TypeEnum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aca75016:;
			{
				return _1a7c243b8_evalTypeEnum(_self_);;
			}
		}
		else if ((_1a7c35e24_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1aca7507c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aca750e3;
			}
		}
		else if ((_1a7c35e24_Enum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aca750e3:;
			{
				return _1a7c24132_evalEnum(_self_);;
			}
		}
		else if ((_1a7c35907_Sptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1aca75159:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aca751d1;
			}
		}
		else if ((_1a7c35907_Sptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aca751d1:;
			{
				return _1a7c2464e_evalSptr(_self_);;
			}
		}
		else if ((_1a7c35b8d_Ptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1aca75258:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aca752d0;
			}
		}
		else if ((_1a7c35b8d_Ptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aca752d0:;
			{
				return _1a7c248d5_evalPtr(_self_);;
			}
		}
		else if ((_1a7c36441_Arr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aca753ac:;
			{
				return _1a7c24b6b_evalArr(_self_);;
			}
		}
		else if ((_1a7c37211_Trait((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1aca75423:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aca75489;
			}
		}
		else if ((_1a7c37211_Trait((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aca75489:;
			{
				return _1a7c25188_evalTrait(_self_);;
			}
		}
		else if ((_1a7c35671_Prim((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aca75500:;
			{
				return _1a7c26db0_evalPrim(_self_);;
			}
		}
		else if ((_1a7c36be4_Struct((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aca75566:;
			{
				return _1a7c24e02_evalStruct(_self_);;
			}
		}
		else {
			_case_begin_1aca73531:;
			{
				_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aca72b07:;
	};
}



inline void _1a7c27685_evalConst(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a7bed89d_Data>* _421730_d) {
	{
		
		if (((*(_421730_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1aca88227:;
			{
				return;;
			}
		}
		else if ((!(_1a7bee2d8_IsConst((*(_self_))._field_l.ptr()))) || (!(_1a7bee2d8_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1aca8829e:;
			{
				(*((*(_421730_d))))._field_Constant=nullptr;
				(*((*(_421730_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1aca87b50:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1aca8837b:;
			{
				(*((*(_421730_d))))._field_Constant=static__1a7a57a26_NewBool(_1a7a5cb08_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1aca8a7e0:;
			{
				(*((*(_421730_d))))._field_Constant=static__1a7a57a26_NewBool((!(_1a7a5cb08_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1aca8a856:;
			{
				(*((*(_421730_d))))._field_Constant=static__1a7a57a26_NewBool(_1a7a5c7b7_Or((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1aca8a8bc:;
			{
				(*((*(_421730_d))))._field_Constant=static__1a7a57a26_NewBool(_1a7a5c476_And((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1aca8a933:;
			{
				(*((*(_421730_d))))._field_Constant=static__1a7a57a26_NewBool(_1a7a5d5cb_Gt((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1aca8a999:;
			{
				(*((*(_421730_d))))._field_Constant=static__1a7a57a26_NewBool(_1a7a5ce49_Lt((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1aca8aa21:;
			{
				(*((*(_421730_d))))._field_Constant=static__1a7a57a26_NewBool(_1a7a5d91c_GtEq((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1aca8aa98:;
			{
				(*((*(_421730_d))))._field_Constant=static__1a7a57a26_NewBool(_1a7a5d28a_LtEq((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1aca8ab20:;
			{
				_1a7a5dc5d_Add((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1aca8ab97:;
			{
				_1a7a5e09e_Sub((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1aca8ac1e:;
			{
				_1a7a5e3e0_Mul((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1aca8ac96:;
			{
				jule::Bool _42574_ok = _1a7a5e731_Div((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_42574_ok)) && (_1a7a59c15_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1a7c3b369_Prim> _42628_prim = _1a7c35671_Prim((*((*(_421730_d))))._field_Type.ptr());;
				{
					
					if (_1a7aedd42_IsSigInt((*(_42628_prim))._field_Kind)) {
						_case_begin_1aca9bd0c:;
						{
							_1a7a59ebd_SetI64((*((*(_421730_d))))._field_Constant, _1a7a596e8_AsI64((*((*(_421730_d))))._field_Constant));
						}
					}
					else if (_1a7aee150_IsUnsigInt((*(_42628_prim))._field_Kind)) {
						_case_begin_1aca9bda6:;
						{
							_1a7a5a276_SetU64((*((*(_421730_d))))._field_Constant, _1a7a5997e_AsU64((*((*(_421730_d))))._field_Constant));
						}
					}
					_match_end_1aca9bc85:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1aca8ad1d:;
			{
				jule::Bool _42704_ok = _1a7a5ea72_Mod((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_42704_ok)) && (_1a7a59c15_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1a7c00d45_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1aca8ad95:;
			{
				_1a7a60204_BitwiseOr((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1aca8ae1c:;
			{
				_1a7a5edb3_BitwiseAnd((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1aca8ae94:;
			{
				_1a7a60545_Xor((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1aca8b01b:;
			{
				_1a7a60886_Lshift((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1aca8b093:;
			{
				_1a7a60bc7_Rshift((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_421730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1aca89aa8:;
	};
	(*((*(_421730_d))))._field_Model=jule::Any((*((*(_421730_d))))._field_Constant, &__jule_any_type15);
	_1a7c2c5be_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _421730_d, _1a7c35e24_Enum((*((*(_421730_d))))._field_Type.ptr()), &((*(_self_))._field_op), _1a7c03d7b_getOwnerRefers((*(_self_))._field_e));
}



inline void _1a7c2793d_checkData(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a7bed89d_Data>* _429530_d) {
	jule::Ptr<_1a7a73b41_FnIns> _42963_f = _1a7c3695d_Fn((*((*(_429530_d))))._field_Type.ptr());;
	if ((((_42963_f != nullptr) && ((*_42963_f.alloc)._field_Decl != nullptr)) && _1a7a712c0_IsMethod((*(_42963_f))._field_Decl))) {
		_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _1a7c27b3b_checkDatas(_1a7c22905_binaryEval* _self_) {
	_1a7c2793d_checkData(_self_, &((*(_self_))._field_l));
	_1a7c2793d_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1a7c27de4_setModel(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a7bed89d_Data>* _430729_d) {
	if (_1a7bee2d8_IsConst((*(_430729_d)).ptr())) {
		if (((_1a7bee2d8_IsConst((*(_self_))._field_l.ptr()) && _1a7bee2d8_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1a7bed89d_Data> _43187_l;
	jule::Ptr<_1a7bed89d_Data> _431814_r;
	({
		jule::Ptr<_1a7bed89d_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1a7bed89d_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_43187_l = ___jule_assign_arg;
		_431814_r = _1___jule_assign_arg;
	});
	if ((!(_1a7bee629_GoodOperand(_43187_l.ptr(), &(_431814_r))))) {
		std::swap(_43187_l, _431814_r);
	};
	(*((*(_430729_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a638ab_BinaryExpr>(_1a7a638ab_BinaryExpr{._field_Left=jule::new_ptr<_1a7a633b1_OperandExpr>(_1a7a633b1_OperandExpr{._field_Type=(*(_43187_l))._field_Type, ._field_Model=(*_43187_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1a7a633b1_OperandExpr>(_1a7a633b1_OperandExpr{._field_Type=(*(_431814_r))._field_Type, ._field_Model=(*_431814_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type113);
}



inline void _1a7c2819c_postEval(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a7bed89d_Data>* _433629_d) {
	(*((*(_433629_d))))._field_Lvalue=false;
	_1a7c27de4_setModel(_self_, _433629_d);
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c28598_solveExplicit(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a7bed89d_Data>* _434134_l, jule::Ptr<_1a7bed89d_Data>* _434149_r) {
	({
		jule::Ptr<_1a7bed89d_Data> ___jule_assign_arg = (*(_434134_l));
		jule::Ptr<_1a7bed89d_Data> _1___jule_assign_arg = (*(_434149_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a7c27b3b_checkDatas(_self_);
	jule::Ptr<_1a7bed89d_Data> _43467_d = _1a7c273cc_evalOp(_self_);;
	({
		jule::Ptr<_1a7bed89d_Data> ___jule_assign_arg = (*(_434134_l));
		jule::Ptr<_1a7bed89d_Data> _1___jule_assign_arg = (*(_434149_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a7c27685_evalConst(_self_, &(_43467_d));
	if ((_43467_d != nullptr)) {
		(*_43467_d.alloc)._field_Mutable=true;
		_1a7c2819c_postEval(_self_, &(_43467_d));
	};
	return _43467_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c288d9_eval(_1a7c22905_binaryEval* _self_, jule::Ptr<_1a79816a8_BinaryExpr>* _436125_op) {
	if (((*((*((*(_436125_op))))._field_Op))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1a7c00d45_pushErr((*(_self_))._field_e.ptr(), (*((*(_436125_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_1a7c011a8_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7bed89d_Data> _43687_l = _1a7c20194_evalExpr1((*(_self_))._field_e, (*((*(_436125_op))))._field_Left);;
	if (((_43687_l == nullptr) || ((*(_43687_l))._field_Type == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1a7c3255d_Type> _43737_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43687_l))._field_Type;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43737_prefix;
	});;
	jule::Ptr<_1a7bed89d_Data> _43767_r = _1a7c20194_evalExpr1((*(_self_))._field_e, (*((*(_436125_op))))._field_Right);;
	if (((_43767_r == nullptr) || ((*(_43767_r))._field_Type == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_436125_op))))._field_Op;
	jule::Ptr<_1a7bed89d_Data> _43837_d = _1a7c28598_solveExplicit(_self_, &(_43687_l), &(_43767_r));;
	if ((((_43837_d != nullptr) && (*_43687_l.alloc)._field_IsRune) && (*(_43767_r))._field_IsRune)) {
		(*_43837_d.alloc)._field_IsRune=true;
	};
	return _43837_d;;
}
















inline jule::Bool _1a7c3255d_Type_eq(_1a7c3255d_Type *_self_, _1a7c3255d_Type _other_) {
	return 
		(_self_->_field_Generic == _other_._field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1a7c32959_Str(_1a7c3255d_Type* _self_) {
	if (_1a7c336d5_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1bc0a106b_Builder _567_kind = static__1bc0a18b8_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		({
			auto except = _1bc0a204a_WriteStr(&_567_kind, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:59:4"));
			(except.result);
		});
	};
	({
		auto except = _1bc0a204a_WriteStr(&_567_kind, ((_1a7c32184_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1a7c31bde_Str((*(_self_))._field_Kind.data));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:61:3"));
		(except.result);
	});
	return _1bc0a28ca_Str(&_567_kind);;
}



inline jule::Bool _1a7c32c9a_Equal(jule::Ptr<_1a7c3255d_Type> _self_, jule::Ptr<_1a7c3255d_Type> _6618_other) {
	if (_1a7c336d5_IsNil(_self_.ptr())) {
		return _1a7c336d5_IsNil(_6618_other.ptr());;
	};
	return ((_1a7c32184_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1a7c32030_Equal((*(_self_))._field_Kind.data, _6618_other);;
}



inline jule::Bool _1a7c3344e_Binded(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
			_case_begin_1ac999bb6:;
			{
				jule::Ptr<_1a799a97a_StructIns> _794_s = (*(_self_))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);;
				if ((*((*(_794_s))._field_Decl))._field_Binded) {
					return true;;
				};
				if (((*(_794_s))._field_Source != nullptr)) {
					return _1a7c3344e_Binded((*(_794_s))._field_Source);;
				};
			}
		}
		_match_end_1ac999b50:;
	};
	return false;;
}



inline jule::Bool _1a7c336d5_IsNil(_1a7c3255d_Type* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1a7c3396b_Void(_1a7c3255d_Type* _self_) {
	jule::Ptr<_1a7c3b369_Prim> _953_prim = _1a7c35671_Prim(_self_);;
	return ((_953_prim != nullptr) && (*(_953_prim))._field_Kind.equal("void", 4));;
}



inline jule::Trait _1a7c33c02_ActualKind(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
			_case_begin_1ac99d109:;
			{
				jule::Ptr<_1a799a97a_StructIns> _1068_s = (*(_self_))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);;
				if (((*(_1068_s))._field_Source != nullptr)) {
					return _1a7c33c02_ActualKind((*(_1068_s))._field_Source);;
				};
			}
		}
		_match_end_1ac99d093:;
	};
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1a7c34043_ActualEqual(jule::Ptr<_1a7c3255d_Type> _self_, jule::Ptr<_1a7c3255d_Type> _11524_other) {
	if (_1a7c336d5_IsNil(_self_.ptr())) {
		return _1a7c336d5_IsNil(_11524_other.ptr());;
	};
	if ((_1a7c3344e_Binded(_self_.ptr()) || _1a7c3344e_Binded(_11524_other.ptr()))) {
		return _1a7c32c9a_Equal(_self_, _11524_other);;
	};
	jule::Trait _1223_l = _1a7c33c02_ActualKind(_self_.ptr());;
	jule::Trait _1233_r = _1a7c33c02_ActualKind(_11524_other.ptr());;
	_1a7c3255d_Type _1243_lt = _1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_1223_l};;
	_1a7c3255d_Type _1253_rt = _1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_1233_r};;
	return _1a7c32c9a_Equal(((jule::Ptr<_1a7c3255d_Type>)((&(_1243_lt)))), ((jule::Ptr<_1a7c3255d_Type>)((&(_1253_rt)))));;
}



inline jule::Bool _1a7c34384_deepActualEqual(jule::Ptr<_1a7c3255d_Type> _self_, jule::Ptr<_1a7c3255d_Type> _13028_other) {
	if (_1a7c336d5_IsNil(_self_.ptr())) {
		return _1a7c336d5_IsNil(_13028_other.ptr());;
	};
	jule::Trait _1343_l = _1a7c33c02_ActualKind(_self_.ptr());;
	jule::Trait _1353_r = _1a7c33c02_ActualKind(_13028_other.ptr());;
	_1a7c3255d_Type _1363_lt = _1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_1343_l};;
	_1a7c3255d_Type _1373_rt = _1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_1353_r};;
	return _1a7c32c9a_Equal(((jule::Ptr<_1a7c3255d_Type>)((&(_1363_lt)))), ((jule::Ptr<_1a7c3255d_Type>)((&(_1373_rt)))));;
}



inline jule::Bool _1a7c3461a_Comparable(_1a7c3255d_Type* _self_) {
	{
		_1a7c3255d_Type* _1448__self = _self_;;
		if ((_1a7c36be4_Struct(_1448__self) != nullptr)) {
			return (*(_1a7c36be4_Struct(_1448__self)))._field_Comparable;;
		};
		if ((_1a7c36441_Arr(_1448__self) != nullptr)) {
			return _1a7c3461a_Comparable((*(_1a7c36441_Arr(_1448__self)))._field_Elem.ptr());;
		};
		return (((_1a7c37497_Map(_1448__self) == nullptr) && (_1a7c366c7_Slc(_1448__self) == nullptr)) && (_1a7c3695d_Fn(_1448__self) == nullptr));;
	};
}



inline jule::Bool _1a7c348a1_Mutable(_1a7c3255d_Type* _self_) {
	{
		_1a7c3255d_Type* _1588__self = _self_;;
		if ((_1a7c36be4_Struct(_1588__self) != nullptr)) {
			return (*(_1a7c36be4_Struct(_1588__self)))._field_Mutable;;
		};
		if ((_1a7c37211_Trait(_1588__self) != nullptr)) {
			return true;;
		};
		if ((_1a7c35671_Prim(_1588__self) != nullptr)) {
			jule::Ptr<_1a7c3b369_Prim> _1665_p = _1a7c35671_Prim(_1588__self);;
			return _1a7c3eaba_IsAny(_1665_p.ptr());;
		};
		if ((_1a7c36441_Arr(_1588__self) != nullptr)) {
			return _1a7c348a1_Mutable((*(_1a7c36441_Arr(_1588__self)))._field_Elem.ptr());;
		};
		return (((_1a7c366c7_Slc(_1588__self) != nullptr) || (_1a7c35b8d_Ptr(_1588__self) != nullptr)) || (_1a7c35907_Sptr(_1588__self) != nullptr));;
	};
}



inline jule::Bool _1a7c34b37_Ordered(_1a7c3255d_Type* _self_) {
	{
		_1a7c3255d_Type* _1818__self = _self_;;
		jule::Ptr<_1a7c3b369_Prim> _1824_prim = _1a7c35671_Prim(_1818__self);;
		if ((_1824_prim != nullptr)) {
			return (_1a7aee9e1_IsNum((*_1824_prim.alloc)._field_Kind) || _1a7c3e834_IsStr(_1824_prim));;
		};
		if ((_1a7c35b8d_Ptr(_1818__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1a7a7d94d_Enum> _1898_enm = _1a7c35e24_Enum(_1818__self);;
		if ((_1898_enm != nullptr)) {
			return _1a7aee9e1_IsNum(_1a7c3b6dd_Str(_1a7c35671_Prim((*((*_1898_enm.alloc)._field_TypeSym))._field_Type.ptr()).ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1a7c34dbd_NilCompatible(_1a7c3255d_Type* _self_) {
	{
		_1a7c3255d_Type* _2008__self = _self_;;
		jule::Ptr<_1a7c3b369_Prim> _2024_prim = _1a7c35671_Prim(_2008__self);;
		if (((_2024_prim != nullptr) && _1a7c3eaba_IsAny(_2024_prim))) {
			return true;;
		};
		return (((((((_1a7c336d5_IsNil(_2008__self) || (_1a7c3695d_Fn(_2008__self) != nullptr)) || (_1a7c35907_Sptr(_2008__self) != nullptr)) || (_1a7c35b8d_Ptr(_2008__self) != nullptr)) || (_1a7c37211_Trait(_2008__self) != nullptr)) || (_1a7c366c7_Slc(_2008__self) != nullptr)) || (_1a7c37497_Map(_2008__self) != nullptr)) || (_1a7c361aa_TypeEnum(_2008__self) != nullptr));;
	};
}



inline jule::Bool _1a7c35154_GC(_1a7c3255d_Type* _self_) {
	{
		_1a7c3255d_Type* _2218__self = _self_;;
		jule::Ptr<_1a7c3b369_Prim> _2224_prim = _1a7c35671_Prim(_2218__self);;
		if ((_2224_prim != nullptr)) {
			return (_1a7c3eaba_IsAny(_2224_prim) || _1a7c3e834_IsStr(_2224_prim));;
		};
		return ((((_1a7c35907_Sptr(_2218__self) != nullptr) || (_1a7c366c7_Slc(_2218__self) != nullptr)) || (_1a7c37211_Trait(_2218__self) != nullptr)) || (_1a7c361aa_TypeEnum(_2218__self) != nullptr));;
	};
}



inline jule::Bool _1a7c353da_Variadicable(_1a7c3255d_Type* _self_) {
	_1a7c3255d_Type* _2337__self = _self_;;
	return (_1a7c366c7_Slc(_2337__self) != nullptr);;
}



inline jule::Ptr<_1a7c3b369_Prim> _1a7c35671_Prim(_1a7c3255d_Type* _self_) {
	jule::Trait _2397_kind = _1a7c33c02_ActualKind(_self_);;
	{
		auto &_match_expr{ _2397_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)) {
			_case_begin_1ad04c29b:;
			{
				return _2397_kind.cast_ptr<_1a7c3b369_Prim>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1ad04c3de:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad04c378:;
	};
}



inline jule::Ptr<_1a7c3ed95_Sptr> _1a7c35907_Sptr(_1a7c3255d_Type* _self_) {
	jule::Trait _2507_kind = _1a7c33c02_ActualKind(_self_);;
	{
		auto &_match_expr{ _2507_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)) {
			_case_begin_1ad04d269:;
			{
				return _2507_kind.cast_ptr<_1a7c3ed95_Sptr>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1ad04d3e0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad04d379:;
	};
}



inline jule::Ptr<_1a7c4365c_Ptr> _1a7c35b8d_Ptr(_1a7c3255d_Type* _self_) {
	jule::Trait _2617_kind = _1a7c33c02_ActualKind(_self_);;
	{
		auto &_match_expr{ _2617_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data28)) {
			_case_begin_1ad04e259:;
			{
				return _2617_kind.cast_ptr<_1a7c4365c_Ptr>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1ad04e3d0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad04e369:;
	};
}



inline jule::Ptr<_1a7a7d94d_Enum> _1a7c35e24_Enum(_1a7c3255d_Type* _self_) {
	jule::Trait _2727_kind = _1a7c33c02_ActualKind(_self_);;
	{
		auto &_match_expr{ _2727_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data3)) {
			_case_begin_1ad050249:;
			{
				return _2727_kind.cast_ptr<_1a7a7d94d_Enum>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1ad0503c0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad050359:;
	};
}



inline jule::Ptr<_1a7a80158_TypeEnum> _1a7c361aa_TypeEnum(_1a7c3255d_Type* _self_) {
	jule::Trait _2837_kind = _1a7c33c02_ActualKind(_self_);;
	{
		auto &_match_expr{ _2837_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data4)) {
			_case_begin_1ad051239:;
			{
				return _2837_kind.cast_ptr<_1a7a80158_TypeEnum>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1ad0513b0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad051349:;
	};
}



inline jule::Ptr<_1a7c42b89_Arr> _1a7c36441_Arr(_1a7c3255d_Type* _self_) {
	jule::Trait _2947_kind = _1a7c33c02_ActualKind(_self_);;
	{
		auto &_match_expr{ _2947_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data27)) {
			_case_begin_1ad052229:;
			{
				return _2947_kind.cast_ptr<_1a7c42b89_Arr>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1ad0523a0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad052339:;
	};
}



inline jule::Ptr<_1a7c40868_Slc> _1a7c366c7_Slc(_1a7c3255d_Type* _self_) {
	jule::Trait _3057_kind = _1a7c33c02_ActualKind(_self_);;
	{
		auto &_match_expr{ _3057_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data24)) {
			_case_begin_1ad0531e7:;
			{
				return _3057_kind.cast_ptr<_1a7c40868_Slc>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1ad05336d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad053307:;
	};
}



inline jule::Ptr<_1a7a73b41_FnIns> _1a7c3695d_Fn(_1a7c3255d_Type* _self_) {
	jule::Trait _3167_kind = _1a7c33c02_ActualKind(_self_);;
	{
		auto &_match_expr{ _3167_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data1)) {
			_case_begin_1ad0541b5:;
			{
				return _3167_kind.cast_ptr<_1a7a73b41_FnIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1ad05433b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad0542c5:;
	};
}



inline jule::Ptr<_1a799a97a_StructIns> _1a7c36be4_Struct(_1a7c3255d_Type* _self_) {
	jule::Trait _3277_kind = _1a7c33c02_ActualKind(_self_);;
	{
		auto &_match_expr{ _3277_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
			_case_begin_1ad0551a5:;
			{
				return _3277_kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1ad05532b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad0552b5:;
	};
}



inline jule::Ptr<_1a799a97a_StructIns> _1a7c36e7a_softStruct(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
			_case_begin_1ad05577c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1ad055b01:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad0555e5:;
	};
}



inline jule::Ptr<_1a7a7b297_Trait> _1a7c37211_Trait(_1a7c3255d_Type* _self_) {
	jule::Trait _3477_kind = _1a7c33c02_ActualKind(_self_);;
	{
		auto &_match_expr{ _3477_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data2)) {
			_case_begin_1ad056d22:;
			{
				return _3477_kind.cast_ptr<_1a7a7b297_Trait>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1ad056e98:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad056e32:;
	};
}



inline jule::Ptr<_1a7c4200c_Map> _1a7c37497_Map(_1a7c3255d_Type* _self_) {
	jule::Trait _3587_kind = _1a7c33c02_ActualKind(_self_);;
	{
		auto &_match_expr{ _3587_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data26)) {
			_case_begin_1ad057d12:;
			{
				return _3587_kind.cast_ptr<_1a7c4200c_Map>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1ad057e88:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad057e22:;
	};
}



inline jule::Ptr<_1a7c4145c_Tuple> _1a7c3772d_Tup(_1a7c3255d_Type* _self_) {
	jule::Trait _3697_kind = _1a7c33c02_ActualKind(_self_);;
	{
		auto &_match_expr{ _3697_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data25)) {
			_case_begin_1ad058cd0:;
			{
				return _3697_kind.cast_ptr<_1a7c4145c_Tuple>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1ad058e56:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad058de0:;
	};
}



inline jule::Bool _1a7c379b4_comptime(_1a7c3255d_Type* _self_) {
	return (((((((((((((((_1a7c39037_comptimeTypeInfos(_self_) != nullptr) || (_1a7c392bd_comptimeTypeInfo(_self_) != nullptr)) || (_1a7c37c4a_comptimeStructFields(_self_) != nullptr)) || (_1a7c37ed1_comptimeStructField(_self_) != nullptr)) || (_1a7c38267_comptimeEnumFields(_self_) != nullptr)) || (_1a7c384ed_comptimeEnumField(_self_) != nullptr)) || (_1a7c39554_comptimeStatics(_self_) != nullptr)) || (_1a7c397da_comptimeStatic(_self_) != nullptr)) || (_1a7c38784_comptimeParams(_self_) != nullptr)) || (_1a7c38a1a_comptimeParam(_self_) != nullptr)) || (_1a7c39a71_comptimeValue(_self_) != nullptr)) || (_1a7c3a5aa_comptimeFiles(_self_) != nullptr)) || (_1a7c3a324_comptimeFile(_self_) != nullptr)) || (_1a7c39d07_comptimeDecl(_self_) != nullptr)) || (_1a7c3a08d_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1a7b03264_comptimeStructFields> _1a7c37c4a_comptimeStructFields(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data7)) {
			_case_begin_1ad0591dc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b03264_comptimeStructFields>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1ad05d5cb:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad05972b:;
	};
}



inline jule::Ptr<_1a7b019c1_comptimeStructField> _1a7c37ed1_comptimeStructField(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data6)) {
			_case_begin_1ad05dcb3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b019c1_comptimeStructField>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1ad05dec2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad05de5b:;
	};
}



inline jule::Ptr<_1a7b09226_comptimeEnumFields> _1a7c38267_comptimeEnumFields(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data11)) {
			_case_begin_1ad05e742:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b09226_comptimeEnumFields>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1ad05ebb5:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad05eb4e:;
	};
}



inline jule::Ptr<_1a7b07e17_comptimeEnumField> _1a7c384ed_comptimeEnumField(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data10)) {
			_case_begin_1ad060633:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b07e17_comptimeEnumField>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1ad060842:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad0607cb:;
	};
}



inline jule::Ptr<_1a7b0ca87_comptimeParams> _1a7c38784_comptimeParams(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data13)) {
			_case_begin_1ad0610b2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b0ca87_comptimeParams>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1ad061535:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad0614be:;
	};
}



inline jule::Ptr<_1a7b0ac2d_comptimeParam> _1a7c38a1a_comptimeParam(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data12)) {
			_case_begin_1ad061ea3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b0ac2d_comptimeParam>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1ad0621b2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad06214b:;
	};
}



inline jule::Ptr<_1a7b00e65_comptimeRange> _1a7c38ca1_comptimeRange(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data5)) {
			_case_begin_1ad062932:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b00e65_comptimeRange>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1ad062da5:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad062d3e:;
	};
}



inline jule::Ptr<_1a7b0e3e6_comptimeTypeInfos> _1a7c39037_comptimeTypeInfos(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data14)) {
			_case_begin_1ad063823:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b0e3e6_comptimeTypeInfos>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1ad063a32:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad0639bb:;
	};
}



inline jule::Ptr<_1a7b10d65_comptimeTypeInfo> _1a7c392bd_comptimeTypeInfo(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data15)) {
			_case_begin_1ad0644e4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b10d65_comptimeTypeInfo>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1ad064703:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad06468c:;
	};
}



inline jule::Ptr<_1a7b06498_comptimeStatics> _1a7c39554_comptimeStatics(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data9)) {
			_case_begin_1ad0651b5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b06498_comptimeStatics>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1ad0653c4:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad06535d:;
	};
}



inline jule::Ptr<_1a7b04be4_comptimeStatic> _1a7c397da_comptimeStatic(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data8)) {
			_case_begin_1ad065d86:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b04be4_comptimeStatic>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1ad066095:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad06602e:;
	};
}



inline jule::Ptr<_1a7b16e6a_comptimeValue> _1a7c39a71_comptimeValue(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data16)) {
			_case_begin_1ad066815:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b16e6a_comptimeValue>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1ad066c88:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad066c22:;
	};
}



inline jule::Ptr<_1a7b2055b_comptimeDecl> _1a7c39d07_comptimeDecl(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data20)) {
			_case_begin_1ad0671a6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b2055b_comptimeDecl>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1ad067937:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad0678c1:;
	};
}



inline jule::Ptr<_1a7b1d26d_comptimeDecls> _1a7c3a08d_comptimeDecls(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data19)) {
			_case_begin_1ad0683a5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b1d26d_comptimeDecls>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1ad0685b4:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad06854d:;
	};
}



inline jule::Ptr<_1a7b1b645_comptimeFile> _1a7c3a324_comptimeFile(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data18)) {
			_case_begin_1ad069076:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b1b645_comptimeFile>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1ad069285:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad06921e:;
	};
}



inline jule::Ptr<_1a7b19bc6_comptimeFiles> _1a7c3a5aa_comptimeFiles(_1a7c3255d_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data17)) {
			_case_begin_1ad069a05:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7b19bc6_comptimeFiles>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1ad069e78:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad069e12:;
	};
}








inline jule::Bool _1a7c3a962_TypeSym_eq(_1a7c3a962_TypeSym *_self_, _1a7c3a962_TypeSym _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Bool _1a7c3ad19_checked(_1a7c3a962_TypeSym* _self_) {
	return ((*(_self_))._field_Type != nullptr);;
}








inline jule::Bool _1a7c3b369_Prim_eq(_1a7c3b369_Prim *_self_, _1a7c3b369_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1a7c3b6dd_Str(_1a7c3b369_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1a7c3ba2e_Equal(jule::Ptr<_1a7c3b369_Prim> _self_, jule::Ptr<_1a7c3255d_Type> _57118_other) {
	{
		auto &_match_expr{ (*(_57118_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)) {
			_case_begin_1ad06c057:;
			{
				return ((*(_self_))._field_Kind == (*((*(_57118_other))._field_Kind.cast_ptr<_1a7c3b369_Prim>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)))._field_Kind);;
			}
		}
		_match_end_1ad06bed0:;
	};
	return false;;
}



inline jule::Bool _1a7c3bec4_IsConstraint(_1a7c3b369_Prim* _self_) {
	return ((((!(_1a7c3e834_IsStr(_self_))) && (!(_1a7c3eaba_IsAny(_self_)))) && (!(_1a7c3e59d_IsBool(_self_)))) && (!(_1a7aee9e1_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1a7c3c25a_IsI8(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _1a7c3c4e1_IsI16(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _1a7c3c777_IsI32(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _1a7c3ca0d_IsI64(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _1a7c3cc94_IsU8(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _1a7c3d02a_IsU16(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _1a7c3d2b1_IsU32(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _1a7c3d547_IsU64(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _1a7c3d7cd_IsF32(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _1a7c3da64_IsF64(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _1a7c3dcea_IsInt(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _1a7c3e081_IsUint(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _1a7c3e317_IsUintptr(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _1a7c3e59d_IsBool(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _1a7c3e834_IsStr(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _1a7c3eaba_IsAny(_1a7c3b369_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _1a7c3ed95_Sptr_eq(_1a7c3ed95_Sptr *_self_, _1a7c3ed95_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a7c4024c_Str(_1a7c3ed95_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1a7c32959_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a7c4058d_Equal(jule::Ptr<_1a7c3ed95_Sptr> _self_, jule::Ptr<_1a7c3255d_Type> _64818_other) {
	{
		auto &_match_expr{ (*(_64818_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)) {
			_case_begin_1ad07611b:;
			{
				return _1a7c32c9a_Equal((*(_self_))._field_Elem, (*((*(_64818_other))._field_Kind.cast_ptr<_1a7c3ed95_Sptr>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)))._field_Elem);;
			}
		}
		_match_end_1ad076094:;
	};
	return false;;
}








inline jule::Bool _1a7c40868_Slc_eq(_1a7c40868_Slc *_self_, _1a7c40868_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a7c40d30_Str(_1a7c40868_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1a7c32959_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a7c41171_Equal(jule::Ptr<_1a7c40868_Slc> _self_, jule::Ptr<_1a7c3255d_Type> _66718_other) {
	{
		auto &_match_expr{ (*(_66718_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data24)) {
			_case_begin_1ad078041:;
			{
				return _1a7c32c9a_Equal((*(_self_))._field_Elem, (*((*(_66718_other))._field_Kind.cast_ptr<_1a7c40868_Slc>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data24)))._field_Elem);;
			}
		}
		_match_end_1ad077eb9:;
	};
	return false;;
}







inline jule::Str _1a7c41814_Str(_1a7c4145c_Tuple* _self_) {
	_1bc0a106b_Builder _6847_s = static__1bc0a18b8_New(16LL);;
	({
		auto except = _1bc0a2303_WriteByte(&_6847_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:685:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(&_6847_s, _1a7c32959_Str((*(_self_))._field_Types[0LL].ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:686:3"));
		(except.result);
	});
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad07a51b:;
		if (it != expr_end) {
			jule::Ptr<_1a7c3255d_Type> *_68710_t = it;
			{
				({
					auto except = _1bc0a2303_WriteByte(&_6847_s, ',');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:688:4"));
				});
				({
					auto except = _1bc0a204a_WriteStr(&_6847_s, _1a7c32959_Str((*(_68710_t)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:689:4"));
					(except.result);
				});
			}
			_iter_next_1ad07a51b:;
			++it;
			goto _iter_begin_1ad07a51b;
		}
		_iter_end_1ad07a51b:;
	};
	({
		auto except = _1bc0a2303_WriteByte(&_6847_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:691:3"));
	});
	return _1bc0a28ca_Str(&_6847_s);;
}



inline jule::Bool _1a7c41b55_Equal(jule::Ptr<_1a7c4145c_Tuple> _self_, jule::Ptr<_1a7c3255d_Type> _69618_other) {
	{
		auto &_match_expr{ (*(_69618_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data25)) {
			_case_begin_1ad07bc37:;
			{
				jule::Ptr<_1a7c4145c_Tuple> _6994_tup = (*(_69618_other))._field_Kind.cast_ptr<_1a7c4145c_Tuple>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data25);;
				if (((*(_self_))._field_Types.len() != (*(_6994_tup))._field_Types.len())) {
					return false;;
				};
				jule::I32 _7038_i = 0LL;;
				for (; (_7038_i < (*(_self_))._field_Types.len()); (_7038_i)++) {
					{
						if ((!(_1a7c32c9a_Equal((*_self_.alloc)._field_Types[_7038_i], (*(_6994_tup))._field_Types[_7038_i])))) {
							return false;;
						};
					}
				_iter_next_1ad07c9e6:;
				}
				_iter_end_1ad07c9e6:;;
				return true;;
			}
		}
		_match_end_1ad07bbb0:;
	};
	return false;;
}








inline jule::Bool _1a7c4200c_Map_eq(_1a7c4200c_Map *_self_, _1a7c4200c_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1a7c423b4_Str(_1a7c4200c_Map* _self_) {
	_1bc0a106b_Builder _7247_s = static__1bc0a18b8_New(16LL);;
	({
		auto except = _1bc0a204a_WriteStr(&_7247_s, jule::Str::lit("map[", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:725:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&_7247_s, _1a7c32959_Str((*(_self_))._field_Key.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:726:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(&_7247_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:727:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(&_7247_s, _1a7c32959_Str((*(_self_))._field_Val.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:728:3"));
		(except.result);
	});
	return _1bc0a28ca_Str(&_7247_s);;
}



inline jule::Bool _1a7c42705_Equal(jule::Ptr<_1a7c4200c_Map> _self_, jule::Ptr<_1a7c3255d_Type> _73318_other) {
	{
		auto &_match_expr{ (*(_73318_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data26)) {
			_case_begin_1ad081b60:;
			{
				jule::Ptr<_1a7c4200c_Map> _7364_m = (*(_73318_other))._field_Kind.cast_ptr<_1a7c4200c_Map>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data26);;
				return (_1a7c32c9a_Equal((*(_self_))._field_Key, (*(_7364_m))._field_Key) && _1a7c32c9a_Equal((*_self_.alloc)._field_Val, (*_7364_m.alloc)._field_Val));;
			}
		}
		_match_end_1ad081ad8:;
	};
	return false;;
}








inline jule::Bool _1a7c42b89_Arr_eq(_1a7c42b89_Arr *_self_, _1a7c42b89_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1a7c43041_Str(_1a7c42b89_Arr* _self_) {
	_1bc0a106b_Builder _7537_s = static__1bc0a18b8_New(16LL);;
	({
		auto except = _1bc0a2303_WriteByte(&_7537_s, '[');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:754:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(&_7537_s, _1a4a03c06_Itoa((*(_self_))._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:755:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(&_7537_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:756:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(&_7537_s, _1a7c32959_Str((*(_self_))._field_Elem.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:757:3"));
		(except.result);
	});
	return _1bc0a28ca_Str(&_7537_s);;
}



inline jule::Bool _1a7c43382_Equal(jule::Ptr<_1a7c42b89_Arr> _self_, jule::Ptr<_1a7c3255d_Type> _76218_other) {
	{
		auto &_match_expr{ (*(_76218_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data27)) {
			_case_begin_1ad085867:;
			{
				jule::Ptr<_1a7c42b89_Arr> _7654_arr = (*(_76218_other))._field_Kind.cast_ptr<_1a7c42b89_Arr>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data27);;
				return (((*(_self_))._field_N == (*(_7654_arr))._field_N) && _1a7c32c9a_Equal((*_self_.alloc)._field_Elem, (*_7654_arr.alloc)._field_Elem));;
			}
		}
		_match_end_1ad0857e0:;
	};
	return false;;
}








inline jule::Bool _1a7c4365c_Ptr_eq(_1a7c4365c_Ptr *_self_, _1a7c4365c_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a7c43a14_Str(_1a7c4365c_Ptr* _self_) {
	if (_1a7c441c9_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1a7c32959_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a7c43d55_Equal(jule::Ptr<_1a7c4365c_Ptr> _self_, jule::Ptr<_1a7c3255d_Type> _78718_other) {
	{
		auto &_match_expr{ (*(_78718_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data28)) {
			_case_begin_1ad08856d:;
			{
				jule::Ptr<_1a7c4365c_Ptr> _7904_ptr = (*(_78718_other))._field_Kind.cast_ptr<_1a7c4365c_Ptr>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data28);;
				{
					
					if (_1a7c441c9_IsUnsafe(_self_.ptr())) {
						_case_begin_1ad08952a:;
						{
							return _1a7c441c9_IsUnsafe(_7904_ptr.ptr());;
						}
					}
					else if (_1a7c441c9_IsUnsafe(_7904_ptr.ptr())) {
						_case_begin_1ad089937:;
						{
							return _1a7c441c9_IsUnsafe(_self_.ptr());;
						}
					}
					else {
						_case_begin_1ad0894b4:;
						{
							return _1a7c32c9a_Equal((*_self_.alloc)._field_Elem, (*_7904_ptr.alloc)._field_Elem);;
						}
					}
					_match_end_1ad08943c:;
				};
			}
		}
		_match_end_1ad0884e6:;
	};
	return false;;
}



inline jule::Bool _1a7c441c9_IsUnsafe(_1a7c4365c_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1a7c4465d_referencer_eq(_1a7c4465d_referencer *_self_, _1a7c4465d_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _1a7c45dce_pushErr(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79633b0_Token> _88123_token, jule::Str _88145_fmt, jule::Slice<jule::Any> _88165_args) {
	_1a7b7eec2_pushErr((*(_self_))._field_s.ptr(), _88123_token, _88145_fmt, _88165_args);
}



inline void _1a7c460cc_allowBuiltin(_1a7c4564d_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a7c462ca_disallowBuiltin(_1a7c4564d_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1ad08e244_pushReference(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a799a97a_StructIns>* _89337_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1aca419b6_Exist((*(_self_))._field_refers.ptr(), (*(_89337_t)))) {
		return;;
	};
	_1a7b4d5de_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_89337_t)), &__jule_any_type64));
}

inline void _1ad091ad7_pushReference(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7a7b297_Trait>* _89337_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ad0937ba_Exist((*(_self_))._field_refers.ptr(), (*(_89337_t)))) {
		return;;
	};
	_1a7b4d5de_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_89337_t)), &__jule_any_type11));
}



inline void _1a7c4683b_pushReferenceByKind(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7c3255d_Type>* _90340_k) {
	{
		
		if ((_1a7c36be4_Struct((*(_90340_k)).ptr()) != nullptr)) {
			_case_begin_1ad08cd58:;
			{
				jule::Ptr<_1a799a97a_StructIns> _9068_t = _1a7c36be4_Struct((*(_90340_k)).ptr());;
				_1ad08e244_pushReference(_self_, &(_9068_t));
			}
		}
		else if ((_1a7c37211_Trait((*(_90340_k)).ptr()) != nullptr)) {
			_case_begin_1ad08ce02:;
			{
				jule::Ptr<_1a7a7b297_Trait> _9098_t = _1a7c37211_Trait((*(_90340_k)).ptr());;
				_1ad091ad7_pushReference(_self_, &(_9098_t));
			}
		}
		_match_end_1ad08cc37:;
	};
}



inline void _1a7c46c59_pushCycleError(_1a7c4564d_typeChecker* _self_, jule::Any _91426_def1, jule::Any _91437_def2, _1bc0a106b_Builder* _91453_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _9163_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1ad095a97, nullptr, nullptr);;
	jule::Str _9263_m = _1bc0a28ca_Str(_91453_message);;
	jule::Str _9273_def1Ident = _9163_getIdent(&(_91426_def1));;
	jule::Str _9283_def2Ident = _9163_getIdent(&(_91437_def2));;
	jule::Str _9293_refersTo = _1bc0b081c_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9273_def1Ident, &__jule_any_type5); (*it++) = jule::Any(_9283_def2Ident, &__jule_any_type5); __jule_collection; }));;
	({
		auto except = _1bc0a204a_WriteStr(_91453_message, _1bd42a27e_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:930:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_91453_message, _9293_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:931:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(_91453_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:932:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(_91453_message, _9263_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:933:3"));
		(except.result);
	});
}



inline jule::Bool _1a7c47155_checkCrossCycle(_1a7c4564d_typeChecker* _self_, jule::Any _93627_decl, _1bc0a106b_Builder* _93643_message) {
	{
		auto &_match_expr{ _93627_decl };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad099d76:;
			{
				jule::Ptr<_1a7c31848_TypeAlias> _9394_ta = _93627_decl.unsafe_cast_ptr<_1a7c31848_TypeAlias>();;
				{
					auto expr = &((*(_9394_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad09acab:;
					if (it != expr_end) {
						jule::Any *_94011_d = it;
						{
							{
								
								if (((*(_94011_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1ad09b64c:;
									{
										_1a7c46c59_pushCycleError(_self_, jule::Any(_9394_ta, &__jule_any_type8), (*(_94011_d)), _93643_message);
										return false;;
									}
								}
								else if ((!(_1a7c47155_checkCrossCycle(_self_, (*(_94011_d)), _93643_message)))) {
									_case_begin_1ad09b6d5:;
									{
										_1a7c46c59_pushCycleError(_self_, jule::Any(_9394_ta, &__jule_any_type8), (*(_94011_d)), _93643_message);
										return false;;
									}
								}
								_match_end_1ad09b53c:;
							};
						}
						_iter_next_1ad09acab:;
						++it;
						goto _iter_begin_1ad09acab;
					}
					_iter_end_1ad09acab:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad099bcd:;
			{
				jule::Ptr<_1a7997adc_Struct> _9514_s = _93627_decl.unsafe_cast_ptr<_1a7997adc_Struct>();;
				{
					auto expr = &((*(_9514_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad09d0ee:;
					if (it != expr_end) {
						jule::Ptr<_1a7997adc_Struct> *_95211_d = it;
						{
							{
								
								if ((jule::Any((*(_95211_d)), &__jule_any_type9) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1ad09d95c:;
									{
										_1a7c46c59_pushCycleError(_self_, jule::Any(_9514_s, &__jule_any_type9), jule::Any((*(_95211_d)), &__jule_any_type9), _93643_message);
										return false;;
									}
								}
								else if ((!(_1a7c47155_checkCrossCycle(_self_, jule::Any((*(_95211_d)), &__jule_any_type9), _93643_message)))) {
									_case_begin_1ad09d9e5:;
									{
										_1a7c46c59_pushCycleError(_self_, jule::Any(_9514_s, &__jule_any_type9), jule::Any((*(_95211_d)), &__jule_any_type9), _93643_message);
										return false;;
									}
								}
								_match_end_1ad09d84c:;
							};
						}
						_iter_next_1ad09d0ee:;
						++it;
						goto _iter_begin_1ad09d0ee;
					}
					_iter_end_1ad09d0ee:;
				};
			}
		}
		_match_end_1ad099d10:;
	};
	return true;;
}



inline jule::Bool _1a7c47551_checkIllegalCycles(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _97035_ident, jule::Any _97067_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _97067_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad0a0c28:;
			{
				if ((*(_97067_decl.unsafe_cast_ptr<_1a7997adc_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad0a0b18:;
			{
				if ((*(_97067_decl.unsafe_cast_ptr<_1a7c31848_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ad09d64e:;
	};
	if ((_97067_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1a7c45dce_pushErr(_self_, (*((*(_97035_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_referencer.alloc)._field_ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1bc0a106b_Builder _9937_message = static__1bc0a18b8_New(32LL);;
	if ((!(_1a7c47155_checkCrossCycle(_self_, _97067_decl, &(_9937_message))))) {
		jule::Str _9968_errMsg = _1bc0a28ca_Str(&_9937_message);;
		_1bc0a2ac8_Clear(&_9937_message);
		_1a7c46c59_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _97067_decl, &(_9937_message));
		_9968_errMsg+=_1bc0a28ca_Str(&_9937_message);
		_1a7c45dce_pushErr(_self_, (*((*(_97035_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9968_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad0a5865:;
			{
				{
					(*((*((*(_self_))._field_referencer))._field_refs))=jule::append((*((*(*(_self_))._field_referencer.alloc)._field_refs)),({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _97067_decl; __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad0a404a:;
			{
				{
					auto &_match_expr{ _97067_decl };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_1ad0a627d:;
						{
							jule::Ptr<_1a7997adc_Struct> _10129_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a7997adc_Struct>();;
							(*(_10129_s))._field_Depends=jule::append((*_10129_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7997adc_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _97067_decl.unsafe_cast_ptr<_1a7997adc_Struct>(); __jule_collection; }));
						}
					}
					_match_end_1ad0a6217:;
				};
			}
		}
		_match_end_1ad0a57dd:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1a7c4794c_fromTypeAlias(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _102034_decl, jule::Ptr<_1a7c31848_TypeAlias>* _102066_ta) {
	if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102066_ta))))._field_Public, (*((*(_102066_ta))))._field_Token)))) {
		_1a7c45dce_pushErr(_self_, (*((*(_102034_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_102034_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_102066_ta))))._field_Used=true;
	if (((*((*(_102034_decl))))._field_Generics.len() > 0LL)) {
		_1a7c45dce_pushErr(_self_, (*((*(_102034_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_102034_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad0ab56e:;
			if (it != expr_end) {
				jule::Ptr<_1a7c31848_TypeAlias> _103711_bg = *it;
				{
					if (((_103711_bg == (*(_102066_ta))) || (((*((*((*(_102066_ta))))._field_TypeSym))._field_Type != nullptr) && _1a7c32c9a_Equal((*(*((*(_102066_ta))))._field_TypeSym.alloc)._field_Type, (*(*(_103711_bg))._field_TypeSym.alloc)._field_Type)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1ad0ab56e;
					};
				}
				_iter_next_1ad0ab56e:;
				++it;
				goto _iter_begin_1ad0ab56e;
			}
			_iter_end_1ad0ab56e:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad0ad86d:;
			if (it != expr_end) {
				jule::Ptr<_1a7c31848_TypeAlias> _104811_bg = *it;
				{
					if ((_104811_bg == (*(_102066_ta)))) {
						_1a7c45dce_pushErr(_self_, (*((*(_102034_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_102034_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_102066_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad0ae2ca:;
						if (it != expr_end) {
							jule::Ptr<_1a7c31848_TypeAlias> _105312_dg = *it;
							{
								if ((_104811_bg == _105312_dg)) {
									_1a7c45dce_pushErr(_self_, (*((*(_102034_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_102034_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1ad0ae2ca:;
							++it;
							goto _iter_begin_1ad0ae2ca;
						}
						_iter_end_1ad0ae2ca:;
					};
				}
				_iter_next_1ad0ad86d:;
				++it;
				goto _iter_begin_1ad0ad86d;
			}
			_iter_end_1ad0ad86d:;
		};
	};
	if (((*((*((*(_102066_ta))))._field_TypeSym))._field_Type == nullptr)) {
		jule::Bool _10644_ok = _1a7b9239c_checkTypeAliasDecl((*(_self_))._field_s, _102066_ta, (*(_self_))._field_lookup);;
		if ((!(_10644_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_102066_ta))))._field_Strict && (((*((*(_self_))._field_s))._field_step & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL)))) {
		jule::Ptr<_1a799a97a_StructIns> _10728_s = _1a7c36e7a_softStruct((*((*((*(_102066_ta))))._field_TypeSym))._field_Type.ptr());;
		if ((!((*(_10728_s))._field_Checked))) {
			jule::Bool _10745_ok = _1a7c48a3b_checkStructIns(_self_, &(_10728_s), &((*((*(_102034_decl))))._field_Token));;
			if ((!(_10745_ok))) {
				return nullptr;;
			};
		};
	};
	{
		jule::Ptr<_1a799a97a_StructIns> _10828_s = _1a7c36be4_Struct((*((*((*(_102066_ta))))._field_TypeSym))._field_Type.ptr());;
		if ((_10828_s != nullptr)) {
			jule::Bool _10845_ok = _1a7c47551_checkIllegalCycles(_self_, _102034_decl, jule::Any((*_10828_s.alloc)._field_Decl, &__jule_any_type9));;
			if ((!(_10845_ok))) {
				return nullptr;;
			};
		};
	};
	if (((*((*(_102066_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_102066_ta)); __jule_collection; }));
	};
	jule::Ptr<_1a7c3255d_Type> _10977_tk = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=(*((*(_102066_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*((*((*((*(_102066_ta))))._field_TypeSym))._field_Type))._field_Kind});;
	_1a7c4683b_pushReferenceByKind(_self_, &(_10977_tk));
	return jule::Trait(_10977_tk, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data21);;
}



inline jule::Ptr<_1a7a7d94d_Enum> _1a7c47d48_fromEnum(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _110525_decl, jule::Ptr<_1a7a7d94d_Enum>* _110557_e) {
	if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_110557_e))))._field_Public, (*((*(_110557_e))))._field_Token)))) {
		_1a7c45dce_pushErr(_self_, (*((*(_110525_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_110525_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_110525_decl))))._field_Generics.len() > 0LL)) {
		_1a7c45dce_pushErr(_self_, (*((*(_110525_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_110525_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_110557_e));;
}



inline jule::Ptr<_1a7a80158_TypeEnum> _1a7c48244_fromTypeEnum(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _111729_decl, jule::Ptr<_1a7a80158_TypeEnum>* _111761_e) {
	if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_111761_e))))._field_Public, (*((*(_111761_e))))._field_Token)))) {
		_1a7c45dce_pushErr(_self_, (*((*(_111729_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_111729_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_111729_decl))))._field_Generics.len() > 0LL)) {
		_1a7c45dce_pushErr(_self_, (*((*(_111729_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_111729_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_111761_e));;
}



inline jule::Ptr<_1a7a7b297_Trait> _1a7c48640_fromTrait(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _112926_decl, jule::Ptr<_1a7a7b297_Trait>* _112958_t) {
	if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_112958_t))))._field_Public, (*((*(_112958_t))))._field_Token)))) {
		_1a7c45dce_pushErr(_self_, (*((*(_112926_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_112926_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_112926_decl))))._field_Generics.len() > 0LL)) {
		_1a7c45dce_pushErr(_self_, (*((*(_112926_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_112926_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1ad091ad7_pushReference(_self_, _112958_t);
	return (*(_112958_t));;
}



inline jule::Bool _1a7c48a3b_checkStructIns(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a799a97a_StructIns>* _114235_ins, jule::Ptr<_1a79633b0_Token>* _114257_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_114235_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_114235_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_114235_ins))))._field_Decl, &__jule_any_type9) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a7b9d573_precheckStructIns((*(_self_))._field_s, _114235_ins, (*(_114257_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_114235_ins))))._field_Generics.len() > 0LL)) {
		_1a7b9d82b_checkStructIns((*(_self_))._field_s, _114235_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a7c48ce4_appendUsedStructReference(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7997adc_Struct>* _116246_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad0c59c8:;
			{
				jule::Ptr<_1a7997adc_Struct> _11688_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a7997adc_Struct>();;
				if ((!(_1a799955b_IsUses(_11688_refS.ptr(), (*(_116246_s)))))) {
					(*_11688_refS.alloc)._field_Uses=jule::append((*_11688_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7997adc_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_116246_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1ad0c5962:;
	};
}



inline jule::Ptr<_1a799a97a_StructIns> _1a7c491e0_buildStructInstance(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _117540_decl, jule::Ptr<_1a7997adc_Struct>* _117572_s) {
	jule::Ptr<_1a7c4465d_referencer> _11777_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> _11797_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)) {
				_case_begin_1ad0c8954:;
				{
					jule::Ptr<_1a7b34938_scopeChecker> _11869_sc = (*(_self_))._field_lookup.cast_ptr<_1a7b34938_scopeChecker>((jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1);;
					jule::Ptr<_1a7b34938_scopeChecker> _11879_hard = _1a7b3809b_getHardRoot(_11869_sc);;
					if ((((*((*(_11879_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_11879_hard))._field_owner))._field_Owner))._field_Decl != (*(_117572_s))))) {
						goto _match_end_1ad0c88dd;
					};
					jule::I32 _11915_n = ((*((*(_11879_hard))._field_owner))._field_Generics.len() + (*((*(*(_11879_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11879_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11915_n);
				}
			}
			_match_end_1ad0c88dd:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _12017_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1a799a97a_StructIns> _12057_ins = _1a799800a_instance((*(_117572_s)));;
	(*(_12057_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>::alloc(0LL, (*((*(_117540_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c30b77_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_117540_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0cdb68:;
		if (it != expr_end) {
			jule::Ptr<_1a7978caa_TypeDecl> _120715_g = *it;
			{
				jule::Ptr<_1a7c3255d_Type> _12088_kind = _1a7c4cde7_build(_self_, &((*(_120715_g))._field_Kind));;
				if ((_12088_kind == nullptr)) {
					return nullptr;;
				};
				(*_12057_ins.alloc)._field_Generics=jule::append((*_12057_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7c30b77_InsGeneric>(_1a7c30b77_InsGeneric{._field_Type=_12088_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1a7c3255d_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1ad0cdb68:;
			++it;
			goto _iter_begin_1ad0cdb68;
		}
		_iter_end_1ad0cdb68:;
	};
	(*(_self_))._field_lookup=_12017_lookup;
	(*(_self_))._field_bannedGenerics=_11797_bannedGenerics;
	(*(_self_))._field_referencer=_11777_referencer;
	return _12057_ins;;
}



inline jule::Ptr<_1a799a97a_StructIns> _1a7c495db_fromStructIns(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a799a97a_StructIns>* _122334_ins, jule::Ptr<_1a79633b0_Token> _122355_token) {
	jule::Ptr<_1a799a97a_StructIns> _12247_existInstance = _1a799834b_appendInstance((*((*(_122334_ins))))._field_Decl.ptr(), _122334_ins);;
	if ((_12247_existInstance != nullptr)) {
		if ((!(_1a7b8eca1_checkConstraintsStruct((*(_self_))._field_s, _122334_ins, &(_122355_token), _12247_existInstance)))) {
			return nullptr;;
		};
		_1ad08e244_pushReference(_self_, &(_12247_existInstance));
		return _12247_existInstance;;
	};
	if ((!(_1a7c48a3b_checkStructIns(_self_, _122334_ins, &(_122355_token))))) {
		return nullptr;;
	};
	_1ad08e244_pushReference(_self_, _122334_ins);
	return (*(_122334_ins));;
}



inline jule::Ptr<_1a799a97a_StructIns> _1a7c499d7_fromStruct(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _124131_decl, jule::Ptr<_1a7997adc_Struct>* _124163_s) {
	if ((!(_1a7b80731_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_124163_s))))._field_Public, (*((*(_124163_s))))._field_Token)))) {
		_1a7c45dce_pushErr(_self_, (*((*(_124131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124131_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_124131_decl))))._field_Generics.len() > 0LL)) {
			_1a7c45dce_pushErr(_self_, (*((*(_124131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1a799a97a_StructIns>(_1a799a97a_StructIns{._field_Source=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Checked=false, ._field_Decl=(*(_124163_s)), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1a7999d53_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a7a70a83_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr)});;
	};
	jule::Bool _12597_ok = _1a7c47551_checkIllegalCycles(_self_, _124131_decl, jule::Any((*(_124163_s)), &__jule_any_type9));;
	if ((!(_12597_ok))) {
		return nullptr;;
	};
	_1a7c48ce4_appendUsedStructReference(_self_, _124163_s);
	jule::Ptr<_1a799a97a_StructIns> _12657_ins = _1a7c491e0_buildStructInstance(_self_, _124131_decl, _124163_s);;
	if ((_12657_ins == nullptr)) {
		return nullptr;;
	};
	_12597_ok=_1a7b8635d_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_12657_ins))._field_Decl))._field_Generics.len(), (*_12657_ins.alloc)._field_Generics.len(), (*((*(_124131_decl))))._field_Token);
	if ((!(_12597_ok))) {
		return nullptr;;
	};
	return _1a7c495db_fromStructIns(_self_, &(_12657_ins), (*((*(_124131_decl))))._field_Token);;
}



inline jule::Trait _1a7c49d28_getDef(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl>* _128527_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0d902a:;
		if (it != expr_end) {
			jule::Ptr<_1a7985eb5_GenericDecl> _128610_g = *it;
			{
				if (((*(_128610_g))._field_Ident == (*((*(_128527_decl))))._field_Ident)) {
					return jule::Trait(_1a7c5015d_buildPrimType((*_128610_g.alloc)._field_Ident), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22);;
				};
			}
			_iter_next_1ad0d902a:;
			++it;
			goto _iter_begin_1ad0d902a;
		}
		_iter_end_1ad0d902a:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0d93c1:;
		if (it != expr_end) {
			jule::Ptr<_1a7c31848_TypeAlias> _129215_g = *it;
			{
				if (((*(_129215_g))._field_Ident == (*((*(_128527_decl))))._field_Ident)) {
					if (((*((*(_128527_decl))))._field_Generics.len() > 0LL)) {
						_1a7c45dce_pushErr(_self_, (*((*(_128527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128527_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1a799a97a_StructIns> _12989_st = _1a7c36be4_Struct((*((*_129215_g.alloc)._field_TypeSym))._field_Type.ptr());;
					if ((_12989_st != nullptr)) {
						jule::Bool _13006_ok = _1a7c47551_checkIllegalCycles(_self_, _128527_decl, jule::Any((*_12989_st.alloc)._field_Decl, &__jule_any_type9));;
						if ((!(_13006_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_129215_g))._field_TypeSym))._field_Type.alloc)._field_Kind;;
				};
			}
			_iter_next_1ad0d93c1:;
			++it;
			goto _iter_begin_1ad0d93c1;
		}
		_iter_end_1ad0d93c1:;
	};
	if ((!((*((*(_128527_decl))))._field_Binded))) {
		jule::Ptr<_1a7a7d94d_Enum> _13108_e = ((_1a7c5342a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7c52e85_FindEnum((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident);;
		if ((_13108_e != nullptr)) {
			return jule::Trait(_1a7c47d48_fromEnum(_self_, _128527_decl, &(_13108_e)), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data3);;
		};
		jule::Ptr<_1a7a80158_TypeEnum> _13158_te = ((_1a7c5342a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7c532c6_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident);;
		if ((_13158_te != nullptr)) {
			return jule::Trait(_1a7c48244_fromTypeEnum(_self_, _128527_decl, &(_13158_te)), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data4);;
		};
		jule::Ptr<_1a7a7b297_Trait> _13208_t = ((_1a7c5342a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7c52b44_FindTrait((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident);;
		if ((_13208_t != nullptr)) {
			return jule::Trait(_1a7c48640_fromTrait(_self_, _128527_decl, &(_13208_t)), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1a7c45dce_pushErr(_self_, (*((*(_128527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7997adc_Struct> _13297_s = ((_1a7c5342a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7c52407_FindStruct((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident, (*((*(_128527_decl))))._field_Binded);;
	if ((_13297_s != nullptr)) {
		return jule::Trait(_1a7c499d7_fromStruct(_self_, _128527_decl, &(_13297_s)), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);;
	};
	jule::Ptr<_1a7c31848_TypeAlias> _13347_ta = ((_1a7c5342a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7c5200b_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident, (*((*(_128527_decl))))._field_Binded);;
	if (((_13347_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_13347_ta=_1a7ca9b35_findBuiltinTypeAlias((*((*(_128527_decl))))._field_Ident);
	};
	if ((_13347_ta != nullptr)) {
		return _1a7c4794c_fromTypeAlias(_self_, _128527_decl, &(_13347_ta));;
	};
	_1a7c45dce_pushErr(_self_, (*((*(_128527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128527_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1a7c4a169_buildIdent(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a79793b5_IdentTypeDecl> _134630_decl) {
	return _1a7c49d28_getDef(_self_, &(_134630_decl));;
}



inline jule::Trait _1a7c4a4aa_buildSubIdent(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a797967e_SubIdentTypeDecl> _135033_decl) {
	jule::Trait _13517_ident = _1a7c4a169_buildIdent(_self_, (*(_135033_decl))._field_Idents[0LL]);;
	if ((_13517_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _13517_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data4)) {
			_case_begin_1ad0e7be8:;
			{
				goto _match_end_1ad0e7742;
			}
		}
		else {
			_case_begin_1ad0e7247:;
			{
				_1a7c45dce_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad0e7742:;
	};
	jule::Ptr<_1a7a80158_TypeEnum> _13627_t = _13517_ident.cast_ptr<_1a7a80158_TypeEnum>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1a79793b5_IdentTypeDecl>> _13637_idents = (*_135033_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_13637_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0e8db4:;
		if (it != expr_end) {
			jule::I32 _13647_i = it - expr->begin();
			jule::Ptr<_1a79793b5_IdentTypeDecl> _136410_id = *it;
			{
				jule::Ptr<_1a7a7ea81_TypeEnumItem> _13658_item = _1a7a80c4c_FindItem(_13627_t.ptr(), (*(_136410_id))._field_Ident);;
				if ((_13658_item == nullptr)) {
					_1a7c45dce_pushErr(_self_, (*_136410_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_13627_t.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_136410_id.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				if (((_13637_idents.len() - _13647_i) == 1LL)) {
					_1a7c4683b_pushReferenceByKind(_self_, &((*((*(_13658_item))._field_TypeSym))._field_Type));
					return jule::Trait((*(*(_13658_item))._field_TypeSym.alloc)._field_Type, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data21);;
				};
				_13627_t=_1a7c361aa_TypeEnum((*((*(_13658_item))._field_TypeSym))._field_Type.ptr());
				if ((_13627_t == nullptr)) {
					_1a7c45dce_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1ad0e8db4:;
			++it;
			_13647_i++;
			goto _iter_begin_1ad0e8db4;
		}
		_iter_end_1ad0e8db4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7c3ed95_Sptr> _1a7c4a7eb_buildSptrFromType(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7c3255d_Type>* _138438_elem) {
	{
		
		if (((*(_138438_elem)) == nullptr)) {
			_case_begin_1ad0ece73:;
			{
				return nullptr;;
			}
		}
		else if (((_1a7c36441_Arr((*(_138438_elem)).ptr()) != nullptr) && (*(_1a7c36441_Arr((*(_138438_elem)).ptr())))._field_Auto)) {
			_case_begin_1ad0ed01c:;
			{
				_1a7c45dce_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad0ecd63:;
	};
	return jule::new_ptr<_1a7c3ed95_Sptr>(_1a7c3ed95_Sptr{._field_Elem=(*(_138438_elem))});;
}



inline jule::Ptr<_1a7c3ed95_Sptr> _1a7c4ab3c_buildSptr(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7979d55_SptrTypeDecl> _139829_decl) {
	jule::Bool _13993_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13993_cycleRisk;
	});;
	jule::Ptr<_1a7c3255d_Type> _14037_elem = _1a7c4d238_checkDecl(_self_, &((*(_139829_decl))._field_Elem));;
	return _1a7c4a7eb_buildSptrFromType(_self_, &(_14037_elem));;
}



inline jule::Ptr<_1a7c4365c_Ptr> _1a7c4ae7d_buildPtrFromType(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7c3255d_Type>* _140737_elem) {
	{
		
		if (((*(_140737_elem)) == nullptr)) {
			_case_begin_1ad101e00:;
			{
				return nullptr;;
			}
		}
		else if (((_1a7c36441_Arr((*(_140737_elem)).ptr()) != nullptr) && (*(_1a7c36441_Arr((*(_140737_elem)).ptr())))._field_Auto)) {
			_case_begin_1ad101e99:;
			{
				_1a7c45dce_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_1a7c4365c_Ptr>(_1a7c4365c_Ptr{._field_Elem=jule::Ptr<_1a7c3255d_Type>(nullptr)});;
			}
		}
		_match_end_1ad101d01:;
	};
	return jule::new_ptr<_1a7c4365c_Ptr>(_1a7c4365c_Ptr{._field_Elem=(*(_140737_elem))});;
}



inline jule::Ptr<_1a7c4365c_Ptr> _1a7c4b2be_buildPtr(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a797a7d4_PtrTypeDecl> _142228_decl) {
	jule::Bool _14233_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14233_cycleRisk;
	});;
	jule::Ptr<_1a7c3255d_Type> _14277_elem = static_cast<jule::Ptr<_1a7c3255d_Type>>(nullptr);;
	if ((!(_1a797ab7a_IsUnsafe(_142228_decl.ptr())))) {
		_14277_elem=_1a7c4d238_checkDecl(_self_, &((*_142228_decl.alloc)._field_Elem));
		return _1a7c4ae7d_buildPtrFromType(_self_, &(_14277_elem));;
	};
	return jule::new_ptr<_1a7c4365c_Ptr>(_1a7c4365c_Ptr{._field_Elem=_14277_elem});;
}



inline jule::Ptr<_1a7c40868_Slc> _1a7c4b610_buildSlc(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a797a1da_SlcTypeDecl> _143928_decl) {
	jule::Bool _14403_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14403_cycleRisk;
	});;
	jule::Ptr<_1a7c3255d_Type> _14447_elem = _1a7c4d238_checkDecl(_self_, &((*(_143928_decl))._field_Elem));;
	{
		
		if ((_14447_elem == nullptr)) {
			_case_begin_1ad10719c:;
			{
				return nullptr;;
			}
		}
		else if (((_1a7c36441_Arr(_14447_elem.ptr()) != nullptr) && (*(_1a7c36441_Arr(_14447_elem)))._field_Auto)) {
			_case_begin_1ad107213:;
			{
				_1a7c45dce_pushErr(_self_, (*((*_143928_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad107136:;
	};
	return jule::new_ptr<_1a7c40868_Slc>(_1a7c40868_Slc{._field_Elem=_14447_elem});;
}



inline jule::Ptr<_1a7c42b89_Arr> _1a7c4b951_buildArr(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a797b076_ArrTypeDecl> _146028_decl) {
	jule::I32 _14617_n = 0LL;;
	if ((!(_1a797b41c_AutoSized(_146028_decl.ptr())))) {
		jule::Ptr<_1a7bed89d_Data> _14648_size = _1a7c204d5_evalExpr(_1a7b8bc04_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_146028_decl.alloc)._field_Size);;
		if ((_14648_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1a7bee2d8_IsConst(_14648_size.ptr())))) {
			_1a7c45dce_pushErr(_self_, (*((*_146028_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1a7c35671_Prim((*(_14648_size))._field_Type.ptr()) == nullptr) || (!(_1a7aee419_IsInt((*(_1a7c35671_Prim((*(_14648_size))._field_Type.ptr())))._field_Kind))))) {
			_1a7c45dce_pushErr(_self_, (*((*_146028_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_14617_n=static_cast<jule::I32>(_1a7a596e8_AsI64((*(_14648_size))._field_Constant.ptr()));
		if ((_14617_n < 0LL)) {
			_1a7c45dce_pushErr(_self_, (*((*_146028_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14825_max = _1a7aec37e_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_1a7ae5388_BitSize != 64LL) && (static_cast<jule::I64>(_14617_n) > _14825_max))) {
				_1a7c45dce_pushErr(_self_, (*((*_146028_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c2d405_constoa(&((*_14648_size.alloc)._field_Constant)), &__jule_any_type5); (*it++) = jule::Any(_1a4a0393c_FmtInt(_14825_max, 10LL), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1a7c3255d_Type> _14917_elem = _1a7c4d238_checkDecl(_self_, &((*(_146028_decl))._field_Elem));;
	{
		
		if ((_14917_elem == nullptr)) {
			_case_begin_1ad1122a6:;
			{
				return nullptr;;
			}
		}
		else if (((_1a7c36441_Arr(_14917_elem.ptr()) != nullptr) && (*(_1a7c36441_Arr(_14917_elem)))._field_Auto)) {
			_case_begin_1ad11233e:;
			{
				_1a7c45dce_pushErr(_self_, (*((*_146028_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad1107c1:;
	};
	return jule::new_ptr<_1a7c42b89_Arr>(_1a7c42b89_Arr{._field_Auto=_1a797b41c_AutoSized(_146028_decl), ._field_N=_14617_n, ._field_Elem=_14917_elem});;
}



inline jule::Ptr<_1a7c4200c_Map> _1a7c4bc92_buildMap(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a797b7c4_MapTypeDecl> _150928_decl) {
	jule::Bool _15103_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15103_cycleRisk;
	});;
	jule::Ptr<_1a7c3255d_Type> _15147_key = _1a7c4d238_checkDecl(_self_, &((*(_150928_decl))._field_Key));;
	if ((_15147_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7c3255d_Type> _15197_val = _1a7c4d238_checkDecl(_self_, &((*_150928_decl.alloc)._field_Val));;
	if ((_15197_val == nullptr)) {
		return nullptr;;
	};
	if ((_1a7c35e24_Enum(_15197_val.ptr()) != nullptr)) {
		_1a7c45dce_pushErr(_self_, (*((*_150928_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_1a7997adc_Struct> _15288_s = _1a7646c0e_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_1a7c48ce4_appendUsedStructReference(_self_, &(_15288_s));
		jule::Ptr<_1a799a97a_StructIns> _15308_ins = _1a799800a_instance(_15288_s);;
		(*(_15308_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7c30b77_InsGeneric>(_1a7c30b77_InsGeneric{._field_Type=_15147_key, ._field_Constraint=jule::Slice<jule::Ptr<_1a7c3255d_Type>>(nullptr)}); (*it++) = jule::new_ptr<_1a7c30b77_InsGeneric>(_1a7c30b77_InsGeneric{._field_Type=_15197_val, ._field_Constraint=jule::Slice<jule::Ptr<_1a7c3255d_Type>>(nullptr)}); __jule_collection; });
		_1a7c495db_fromStructIns(_self_, &(_15308_ins), (*((*_150928_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_1a7c4200c_Map>(_1a7c4200c_Map{._field_Key=_15147_key, ._field_Val=_15197_val});;
}



inline jule::Ptr<_1a7c4145c_Tuple> _1a7c4c0d3_buildTuple(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a797a4d7_TupleTypeDecl> _154130_decl) {
	jule::Slice<jule::Ptr<_1a7c3255d_Type>> _15427_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(0LL, (*(_154130_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c3255d_Type>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_154130_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad11b414:;
		if (it != expr_end) {
			jule::Ptr<_1a7978caa_TypeDecl> _154315_t = *it;
			{
				jule::Ptr<_1a7c3255d_Type> _15448_kind = _1a7c4d238_checkDecl(_self_, &(_154315_t));;
				if ((_15448_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1a7c3255d_Type>> &__jule_push_dest = _15427_types; __jule_push_dest.push(_15448_kind); };
			}
			_iter_next_1ad11b414:;
			++it;
			goto _iter_begin_1ad11b414;
		}
		_iter_end_1ad11b414:;
	};
	return jule::new_ptr<_1a7c4145c_Tuple>(_1a7c4145c_Tuple{._field_Types=_15427_types});;
}



inline jule::Bool _1a7c4c424_checkFuncTypes(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7a73b41_FnIns>* _155435_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_155435_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad11ce2c:;
		if (it != expr_end) {
			jule::Ptr<_1a7a729db_ParamIns> _155515_p = *it;
			{
				(*(_155515_p))._field_Type=_1a7c4cde7_build(_self_, &((*((*((*((*_155515_p.alloc)._field_Decl))._field_TypeSym))._field_Decl))._field_Kind));
				__jule_func_result=((*_155515_p.alloc)._field_Type != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1a7b90851_checkFnParamKind((*(_self_))._field_s, &(_155515_p));
			}
			_iter_next_1ad11ce2c:;
			++it;
			goto _iter_begin_1ad11ce2c;
		}
		_iter_end_1ad11ce2c:;
	};
	if ((!(_1a7a71039_IsVoid((*((*(_155435_f))))._field_Decl.ptr())))) {
		(*((*(_155435_f))))._field_Result=_1a7c4cde7_build(_self_, &((*((*((*((*(*((*(_155435_f))))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_155435_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7a73b41_FnIns> _1a7c4c765_buildFunc(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a798aa47_FnDecl> _157229_decl) {
	jule::Bool _15733_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15733_cycleRisk;
	});;
	if (((*(_157229_decl))._field_Generics.len() > 0LL)) {
		_1a7c45dce_pushErr(_self_, (*_157229_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7a70a83_Fn> _15827_f = _1a7b50c62_buildFunc(_157229_decl);;
	jule::I32 _15843_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1a7b99bce_checkAnonFuncDecl((*(_self_))._field_s, &(_15827_f));
	if ((_15843_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a7a73b41_FnIns> _15907_ins = _1a7a72090_instanceForce(_15827_f);;
	(*(_15907_ins))._field_Anon=true;
	(*_15907_ins.alloc)._field_AsAnon=true;
	jule::Bool _15943_ok = _1a7c4c424_checkFuncTypes(_self_, &(_15907_ins));;
	if ((!(_15943_ok))) {
		return nullptr;;
	};
	return _15907_ins;;
}



inline jule::Trait _1a7c4caa6_buildNamespace(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7979a58_NamespaceTypeDecl> _160234_ns) {
	jule::Ptr<_1a7b5e80e_ImportInfo> _16037_imp = _1a7c2ee84_findNamespace((*(_self_))._field_lookup, (*((*(_160234_ns))._field_Namespace))._field_Kind);;
	if (((_16037_imp == nullptr) || (!(_1a7b61ca6_isLookupable(_16037_imp.ptr()))))) {
		_1a7c45dce_pushErr(_self_, (*_160234_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_160234_ns))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1a7c462ca_disallowBuiltin(_self_);
	jule::Trait _16107_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_16037_imp, (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data2);
	jule::Ptr<_1a7c3255d_Type> _16127_kind = _1a7c4d238_checkDecl(_self_, &((*_160234_ns.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_16107_lookup;
	_1a7c460cc_allowBuiltin(_self_);
	return jule::Trait(_16127_kind, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data21);;
}



inline jule::Ptr<_1a7c3255d_Type> _1a7c4cde7_build(_1a7c4564d_typeChecker* _self_, jule::Any* _161826_declKind) {
	jule::Trait _161911_kind = nullptr;;
	{
		auto &_match_expr{ (*(_161826_declKind)) };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1ad12ab2c:;
			{
				jule::Trait _16228_t = _1a7c4a169_buildIdent(_self_, (*(_161826_declKind)).cast_ptr<_1a79793b5_IdentTypeDecl>(&__jule_any_type78));;
				if ((_16228_t != nullptr)) {
					_161911_kind=_16228_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ad12b19e:;
			{
				jule::Trait _16278_t = _1a7c4a4aa_buildSubIdent(_self_, (*(_161826_declKind)).cast_ptr<_1a797967e_SubIdentTypeDecl>(&__jule_any_type88));;
				if ((_16278_t != nullptr)) {
					_161911_kind=_16278_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ad12a489:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7c3ed95_Sptr> _16338_t = _1a7c4ab3c_buildSptr(_self_, (*(_161826_declKind)).cast_ptr<_1a7979d55_SptrTypeDecl>(&__jule_any_type75));;
				if ((_16338_t != nullptr)) {
					_161911_kind=jule::Trait(_16338_t, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ad12a5dd:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7c4365c_Ptr> _16398_t = _1a7c4b2be_buildPtr(_self_, (*(_161826_declKind)).cast_ptr<_1a797a7d4_PtrTypeDecl>(&__jule_any_type74));;
				if ((_16398_t != nullptr)) {
					_161911_kind=jule::Trait(_16398_t, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ad12a654:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7c40868_Slc> _16458_t = _1a7c4b610_buildSlc(_self_, (*(_161826_declKind)).cast_ptr<_1a797a1da_SlcTypeDecl>(&__jule_any_type73));;
				if ((_16458_t != nullptr)) {
					_161911_kind=jule::Trait(_16458_t, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ad12a6ba:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7c42b89_Arr> _16518_t = _1a7c4b951_buildArr(_self_, (*(_161826_declKind)).cast_ptr<_1a797b076_ArrTypeDecl>(&__jule_any_type72));;
				if ((_16518_t != nullptr)) {
					_161911_kind=jule::Trait(_16518_t, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ad12a731:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7c4200c_Map> _16578_t = _1a7c4bc92_buildMap(_self_, (*(_161826_declKind)).cast_ptr<_1a797b7c4_MapTypeDecl>(&__jule_any_type76));;
				if ((_16578_t != nullptr)) {
					_161911_kind=jule::Trait(_16578_t, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1ad12a797:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7c4145c_Tuple> _16638_t = _1a7c4c0d3_buildTuple(_self_, (*(_161826_declKind)).cast_ptr<_1a797a4d7_TupleTypeDecl>(&__jule_any_type77));;
				if ((_16638_t != nullptr)) {
					_161911_kind=jule::Trait(_16638_t, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ad12a81e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7a73b41_FnIns> _16698_t = _1a7c4c765_buildFunc(_self_, (*(_161826_declKind)).cast_ptr<_1a798aa47_FnDecl>(&__jule_any_type68));;
				if ((_16698_t != nullptr)) {
					_161911_kind=jule::Trait(_16698_t, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ad12b28c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16758_t = _1a7c4caa6_buildNamespace(_self_, (*(_161826_declKind)).cast_ptr<_1a7979a58_NamespaceTypeDecl>(&__jule_any_type92));;
				if ((_16758_t != nullptr)) {
					_161911_kind=_16758_t;
				};
			}
		}
		else {
			_case_begin_1ad12a577:;
			{
				_1a7c45dce_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad12a511:;
	};
	if ((_161911_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _161911_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data21)) {
			_case_begin_1ad137c49:;
			{
				return _161911_kind.cast_ptr<_1a7c3255d_Type>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1ad136671:;
			{
				jule::Ptr<_1a7c3255d_Type> _16908_tk = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_161911_kind});;
				{
					auto &_match_expr{ _161911_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)) {
						_case_begin_1ad13750c:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1a7c3255d_Type>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16908_tk); };
								};
							};
						}
					}
					_match_end_1ad137496:;
				};
				return _16908_tk;;
			}
		}
		_match_end_1ad135b9d:;
	};
}



inline jule::Ptr<_1a7c3255d_Type> _1a7c4d238_checkDecl(_1a7c4564d_typeChecker* _self_, jule::Ptr<_1a7978caa_TypeDecl>* _170130_decl) {
	jule::Ptr<_1a79633b0_Token> _17037_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_170130_decl))))._field_Token;
	jule::Ptr<_1a7c3255d_Type> _17067_kind = _1a7c4cde7_build(_self_, &((*((*(_170130_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_17037_errorToken;
	return _17067_kind;;
}








inline jule::Bool _1a7c4d711_identTypeLookup_eq(_1a7c4d711_identTypeLookup *_self_, _1a7c4d711_identTypeLookup _other_) { return true; }

inline jule::Bool static__1a7c4db84_prim(jule::Str* _172818_ident, jule::Ptr<_1a7c3b369_Prim> _172830_t) {
	return ((*(_172830_t))._field_Kind == (*(_172818_ident)));;
}



inline jule::Bool static__1a7c4e008_exist(jule::Str* _173219_ident, jule::Ptr<_1a7c3255d_Type>* _173236_k) {
	{
		
		if ((_1a7c35671_Prim((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1ad13c468:;
			{
				return static__1a7c4db84_prim(_173219_ident, _1a7c35671_Prim((*(_173236_k)).ptr()));;
			}
		}
		else if ((_1a7c35907_Sptr((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1ad13c4ce:;
			{
				jule::Ptr<_1a7c3ed95_Sptr> _17378_sptr = _1a7c35907_Sptr((*(_173236_k)).ptr());;
				return static__1a7c4e008_exist(_173219_ident, &((*(_17378_sptr))._field_Elem));;
			}
		}
		else if ((_1a7c35b8d_Ptr((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1ad13c556:;
			{
				jule::Ptr<_1a7c4365c_Ptr> _17408_ptr = _1a7c35b8d_Ptr((*(_173236_k)).ptr());;
				return static__1a7c4e008_exist(_173219_ident, &((*(_17408_ptr))._field_Elem));;
			}
		}
		else if ((_1a7c366c7_Slc((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1ad13c5cd:;
			{
				jule::Ptr<_1a7c40868_Slc> _17438_slc = _1a7c366c7_Slc((*(_173236_k)).ptr());;
				return static__1a7c4e008_exist(_173219_ident, &((*(_17438_slc))._field_Elem));;
			}
		}
		else if ((_1a7c36441_Arr((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1ad13c7ba:;
			{
				jule::Ptr<_1a7c42b89_Arr> _17468_arr = _1a7c36441_Arr((*(_173236_k)).ptr());;
				return static__1a7c4e008_exist(_173219_ident, &((*(_17468_arr))._field_Elem));;
			}
		}
		else if ((_1a7c37497_Map((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1ad13c831:;
			{
				jule::Ptr<_1a7c4200c_Map> _17498_m = _1a7c37497_Map((*(_173236_k)).ptr());;
				return (static__1a7c4e008_exist(_173219_ident, &((*(_17498_m))._field_Key)) || static__1a7c4e008_exist(_173219_ident, &((*(_17498_m))._field_Val)));;
			}
		}
		else if ((_1a7c36be4_Struct((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1ad13c897:;
			{
				jule::Ptr<_1a799a97a_StructIns> _17538_s = _1a7c36be4_Struct((*(_173236_k)).ptr());;
				{
					auto expr = &((*(_17538_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad144c78:;
					if (it != expr_end) {
						jule::Ptr<_1a7c30b77_InsGeneric> _175416_g = *it;
						{
							if (static__1a7c4e008_exist(_173219_ident, &((*(_175416_g))._field_Type))) {
								return true;;
							};
						}
						_iter_next_1ad144c78:;
						++it;
						goto _iter_begin_1ad144c78;
					}
					_iter_end_1ad144c78:;
				};
				return false;;
			}
		}
		else if ((_1a7c3695d_Fn((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1ad13c90d:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _17618_f = _1a7c3695d_Fn((*(_173236_k)).ptr());;
				{
					auto expr = &((*(_17618_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad14665e:;
					if (it != expr_end) {
						jule::Ptr<_1a7a729db_ParamIns> _176216_p = *it;
						{
							if (_1a7a6e70d_IsSelf((*(_176216_p))._field_Decl.ptr())) {
								goto _iter_next_1ad14665e;
							};
							if (static__1a7c4e008_exist(_173219_ident, &((*(_176216_p))._field_Type))) {
								return true;;
							};
						}
						_iter_next_1ad14665e:;
						++it;
						goto _iter_begin_1ad14665e;
					}
					_iter_end_1ad14665e:;
				};
				if (((*_17618_f.alloc)._field_Result != nullptr)) {
					return static__1a7c4e008_exist(_173219_ident, &((*_17618_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1a7c3772d_Tup((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1ad13c974:;
			{
				jule::Ptr<_1a7c4145c_Tuple> _17758_tup = _1a7c3772d_Tup((*(_173236_k)).ptr());;
				{
					auto expr = &((*(_17758_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad148ed0:;
					if (it != expr_end) {
						jule::Ptr<_1a7c3255d_Type> _177616_t = *it;
						{
							if (static__1a7c4e008_exist(_173219_ident, &(_177616_t))) {
								return true;;
							};
						}
						_iter_next_1ad148ed0:;
						++it;
						goto _iter_begin_1ad148ed0;
					}
					_iter_end_1ad148ed0:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ad13c347:;
			{
				return false;;
			}
		}
		_match_end_1ad13c237:;
	};
}















inline void _1a85b0517_stop(_1a85aed63_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1a85b079d_stopped(_1a85aed63_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1a85b0a34_finished(_1a85aed63_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1a85b0cba_isLastSt(_1a85aed63_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1a85b112d_pushErr(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a79633b0_Token> _15423_token, jule::Str _15445_fmt) {
	_1a85cda52_pushErr((*(_self_))._field_p.ptr(), _15423_token, _15445_fmt, jule::Slice<jule::Any>());
}



inline void _1a85b1491_pushSuggestion(_1a85aed63_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args) {
	_1a85cddb5_pushSuggestion((*(_self_))._field_p.ptr(), _15930_fmt, _15950_args);
}



inline void _1a85b1749_insertAsNext(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _16333_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1a85ae4c2_stmt>(_1a85ae4c2_stmt{._field_tokens=(*(_16333_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1a85ae4c2_stmt> _1a85b19d0_next(_1a85aed63_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1a7988da8_ScopeTree> _1a85b1dcb_buildScope(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _17331_tokens, jule::Ptr<_1a79633b0_Token> _17360_end) {
	jule::Ptr<_1a7988da8_ScopeTree> _1747_s = _1a85ad24b_newScope();;
	(*(_1747_s))._field_Parent=(*(_self_))._field_s;
	(*_1747_s.alloc)._field_End=_17360_end;
	_1a85aed63_scopeParser _1777_ssp = _1a85aed63_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1a85ae4c2_stmt>>(nullptr), ._field_pos=0};;
	_1a85bbc4e_build(&_1777_ssp, _17331_tokens, &(_1747_s));
	return _1747_s;;
}



inline jule::Ptr<_1a798bc02_VarDecl> _1a85b221c_buildVarSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _18431_tokens) {
	jule::Ptr<_1a798bc02_VarDecl> _1857_v = _1a85d1824_buildVar((*(_self_))._field_p, (*(_18431_tokens)));;
	if ((_1857_v != nullptr)) {
		(*_1857_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _1857_v;;
}



inline jule::Ptr<_1a798c0cb_RetSt> _1a85b255d_buildRetSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _19230_tokens) {
	jule::Ptr<_1a798c0cb_RetSt> _1937_st = jule::new_ptr<_1a798c0cb_RetSt>(_1a798c0cb_RetSt{._field_Token=_19230_tokens[0LL], ._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr)});;
	if ((_19230_tokens.len() > 1LL)) {
		(_19230_tokens).mut_slice(1LL);;
		(*(_1937_st))._field_Expr=_1a85ce206_buildExpr((*(_self_))._field_p, &(_19230_tokens));
	};
	return _1937_st;;
}



inline jule::Ptr<_1a798c84b_Iter> _1a85b289e_buildWhileNextIter(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a85ae4c2_stmt>* _20339_s) {
	jule::Ptr<_1a798c84b_Iter> _2047_it = jule::new_ptr<_1a798c84b_Iter>(_1a798c84b_Iter{._field_Comptime=false, ._field_Token=(*((*(_20339_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1a7988da8_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _2077_tokens = (*((*(_20339_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1a798d176_WhileKind> _2087_kind = jule::new_ptr<_1a798d176_WhileKind>(_1a798d176_WhileKind{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1a79633b0_Token>(nullptr)});;
	if ((_2077_tokens.len() > 0LL)) {
		(*_2087_kind.alloc)._field_Expr=_1a85ce206_buildExpr((*(_self_))._field_p, &(_2077_tokens));
	};
	if (_1a85b0cba_isLastSt(_self_)) {
		_1a85b112d_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2077_tokens=(*(_1a85b19d0_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _2207_stTokens = _1a85c8497_getBlockExpr(&(_2077_tokens));;
	if ((_2207_stTokens.len() > 0LL)) {
		jule::Ptr<_1a85ae4c2_stmt> _2228_stmt = jule::new_ptr<_1a85ae4c2_stmt>(_1a85ae4c2_stmt{._field_tokens=_2207_stTokens, ._field_terminated=(*((*(_20339_s))))._field_terminated});;
		(*_2087_kind.alloc)._field_NextToken=_2207_stTokens[0LL];
		(*_2087_kind.alloc)._field_Next=_1a85bb8db_buildSt(_self_, &(_2228_stmt));
	};
	jule::I32 _2307_i = _2207_stTokens.len();;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _2317_blockTokens = _1a85cb720_range(&(_2307_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_2077_tokens));;
	if ((_2317_blockTokens == nullptr)) {
		_1a85b0517_stop(_self_);
		_1a85b112d_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a85b1491_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2307_i < _2077_tokens.len())) {
		_1a85b112d_pushErr(_self_, _2077_tokens[_2307_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_2047_it))._field_Scope=_1a85b1dcb_buildScope(_self_, &(_2317_blockTokens), _2077_tokens[(_2307_i - 1LL)]);
	(*_2047_it.alloc)._field_Kind=jule::Any(_2087_kind, &__jule_any_type33);
	return _2047_it;;
}



inline jule::Ptr<_1a798d176_WhileKind> _1a85b2be0_buildWhileIterKind(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _24839_tokens) {
	return jule::new_ptr<_1a798d176_WhileKind>(_1a798d176_WhileKind{._field_Expr=_1a85ce206_buildExpr((*(_self_))._field_p, _24839_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1a79633b0_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _1a85b3031_getRangeKindKeysTokens(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _25443_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _2557_vars;
	jule::Slice<_1bc0b03aa_Log> _25513_errs;
	({
		__jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a85cbe90_parts(_25443_toks, static_cast<jule::U32>(5LLU), true);
		_2557_vars = __jule_assign_result.__jule_result_arg0;
		_25513_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_25513_errs);
	return _2557_vars;;
}



inline jule::Ptr<_1a798bc02_VarDecl> _1a85b3372_buildRangeKindKey(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _26038_tokens) {
	if (((*(_26038_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a798bc02_VarDecl> _2647_key = jule::new_ptr<_1a798bc02_VarDecl>(_1a798bc02_VarDecl{._field_Scope=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_Token=(*(_26038_tokens))[0LL], ._field_Setter=(*(_26038_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr)});;
	if (((*((*(_2647_key))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_2647_key.alloc)._field_Mutable=true;
		if (((*(_26038_tokens)).len() == 1LL)) {
			_1a85b112d_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2647_key.alloc)._field_Token=(*(_26038_tokens))[1LL];
	} else if (((*(_26038_tokens)).len() > 1LL)) {
		_1a85b112d_pushErr(_self_, (*(_26038_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2647_key))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a85b112d_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a85b1491_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_2647_key))._field_Ident=(*((*_2647_key.alloc)._field_Token))._field_Kind;
	return _2647_key;;
}



inline jule::Slice<jule::Ptr<_1a798bc02_VarDecl>> _1a85b36b3_buildRangeKindKeys(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>>* _28639_parts) {
	jule::Slice<jule::Ptr<_1a798bc02_VarDecl>> _28711_keys = nullptr;;
	{
		auto expr = _28639_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad31680c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _28815_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1a798bc02_VarDecl>> &__jule_push_dest = _28711_keys; __jule_push_dest.push(_1a85b3372_buildRangeKindKey(_self_, &(_28815_tokens))); };
			}
			_iter_next_1ad31680c:;
			++it;
			goto _iter_begin_1ad31680c;
		}
		_iter_end_1ad31680c:;
	};
	return _28711_keys;;
}



inline void _1a85b3a26_setupRangeKindKeysPlain(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a798da7d_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _29471_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _2957_keyTokens = _1a85b3031_getRangeKindKeysTokens(_self_, _29471_tokens);;
	if ((_2957_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_2957_keyTokens.len() > 2LL)) {
		_1a85b112d_pushErr(_self_, (*((*(_29444_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_1a798bc02_VarDecl>> _3027_keys = _1a85b36b3_buildRangeKindKeys(_self_, &(_2957_keyTokens));;
	(*((*(_29444_rng))))._field_KeyA=_3027_keys[0LL];
	if ((_3027_keys.len() > 1LL)) {
		(*((*(_29444_rng))))._field_KeyB=_3027_keys[1LL];
	};
}



inline void _1a85b3d89_setupRangeKindKeysExplicit(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a798da7d_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _30974_tokens) {
	jule::I32 _3107_i = 0LL;;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _3117_rang = _1a85cb720_range(&(_3107_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _30974_tokens);;
	if ((_3107_i < (*(_30974_tokens)).len())) {
		_1a85b112d_pushErr(_self_, (*((*(_30947_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_1a85b3a26_setupRangeKindKeysPlain(_self_, _30947_rng, &(_3117_rang));
}



inline void _1a85b41ec_setupRangeKindKeys(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a798da7d_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _31866_tokens) {
	if (((*((*(_31866_tokens))[0LL]))._field_Id == static_cast<jule::U32>(74LLU))) {
		_1a85b3d89_setupRangeKindKeysExplicit(_self_, _31839_rng, _31866_tokens);
		return;;
	};
	_1a85b3a26_setupRangeKindKeysPlain(_self_, _31839_rng, _31866_tokens);
}



inline jule::Ptr<_1a798da7d_RangeKind> _1a85b46a3_buildRangeIterKind(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _3278_exprTokens, jule::Ptr<_1a79633b0_Token>* _32742_inToken) {
	jule::Ptr<_1a798da7d_RangeKind> _3287_rng = jule::new_ptr<_1a798da7d_RangeKind>(_1a798da7d_RangeKind{._field_InToken=(*(_32742_inToken)), ._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1a798bc02_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1a798bc02_VarDecl>(nullptr)});;
	if (((*(_3278_exprTokens)).len() == 0LL)) {
		_1a85b112d_pushErr(_self_, (*(_3287_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3287_rng;;
	};
	(*(_3287_rng))._field_Expr=_1a85ce206_buildExpr((*(_self_))._field_p, _3278_exprTokens);
	if (((*(_32639_varTokens)).len() > 0LL)) {
		_1a85b41ec_setupRangeKindKeys(_self_, &(_3287_rng), _32639_varTokens);
	};
	return _3287_rng;;
}



inline jule::Any _1a85b4a9e_buildCommonIterKind(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _34240_tokens, jule::Ptr<_1a79633b0_Token>* _34266_errTok) {
	jule::I32 _3437_braceN = 0LL;;
	{
		auto expr = _34240_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3216b3:;
		if (it != expr_end) {
			jule::I32 _3448_i = it - expr->begin();
			jule::Ptr<_1a79633b0_Token> _34415_tok = *it;
			{
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ad322120:;
						{
							(_3437_braceN)++;
							goto _iter_next_1ad3216b3;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ad32250a:;
						{
							(_3437_braceN)--;
						}
					}
					_match_end_1ad32240b:;
				};
				if ((_3437_braceN != 0LL)) {
					goto _iter_next_1ad3216b3;
				};
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(12LLU)) {
						_case_begin_1ad3234c8:;
						{
							jule::Slice<jule::Ptr<_1a79633b0_Token>> _3619_declTokens = (*(_34240_tokens)).slice(0LL, _3448_i);;
							jule::Slice<jule::Ptr<_1a79633b0_Token>> _3629_exprTokens = (*(_34240_tokens)).slice((_3448_i + 1LL));;
							return jule::Any(_1a85b46a3_buildRangeIterKind(_self_, &(_3619_declTokens), &(_3629_exprTokens), &(_34415_tok)), &__jule_any_type35);;
						}
					}
					_match_end_1ad323b38:;
				};
			}
			_iter_next_1ad3216b3:;
			++it;
			_3448_i++;
			goto _iter_begin_1ad3216b3;
		}
		_iter_end_1ad3216b3:;
	};
	return jule::Any(_1a85b2be0_buildWhileIterKind(_self_, _34240_tokens), &__jule_any_type33);;
}



inline jule::Ptr<_1a798c84b_Iter> _1a85b4de0_buildCommonIter(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _36935_tokens) {
	jule::Ptr<_1a798c84b_Iter> _3707_it = jule::new_ptr<_1a798c84b_Iter>(_1a798c84b_Iter{._field_Comptime=false, ._field_Token=_36935_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1a7988da8_ScopeTree>(nullptr)});;
	(_36935_tokens).mut_slice(1LL);;
	if ((_36935_tokens.len() == 0LL)) {
		_1a85b0517_stop(_self_);
		_1a85b112d_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a85b1491_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _3807_exprTokens = _1a85c8497_getBlockExpr(&(_36935_tokens));;
	if ((_3807_exprTokens.len() > 0LL)) {
		(*(_3707_it))._field_Kind=_1a85b4a9e_buildCommonIterKind(_self_, &(_3807_exprTokens), &((*_3707_it.alloc)._field_Token));
	};
	jule::I32 _3847_i = _3807_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _3857_scopeTokens = _1a85cb720_range(&(_3847_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_36935_tokens));;
	if ((_3857_scopeTokens == nullptr)) {
		_1a85b0517_stop(_self_);
		_1a85b112d_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a85b1491_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_3847_i < _36935_tokens.len())) {
		_1a85b112d_pushErr(_self_, _36935_tokens[_3847_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_3707_it))._field_Scope=_1a85b1dcb_buildScope(_self_, &(_3857_scopeTokens), _36935_tokens[(_3847_i - 1LL)]);
	return _3707_it;;
}



inline jule::Ptr<_1a798c84b_Iter> _1a85b5231_buildIterSt(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a85ae4c2_stmt>* _39932_st) {
	if ((*((*(_39932_st))))._field_terminated) {
		return _1a85b289e_buildWhileNextIter(_self_, _39932_st);;
	};
	return _1a85b4de0_buildCommonIter(_self_, (*((*(_39932_st))))._field_tokens);;
}



inline jule::Ptr<_1a798de57_BreakSt> _1a85b5572_buildBreakSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _40633_tokens) {
	jule::Ptr<_1a798de57_BreakSt> _4077_brk = jule::new_ptr<_1a798de57_BreakSt>(_1a798de57_BreakSt{._field_Token=(*(_40633_tokens))[0LL], ._field_Label=jule::Ptr<_1a79633b0_Token>(nullptr)});;
	if (((*(_40633_tokens)).len() > 1LL)) {
		if (((*((*(_40633_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1a85b112d_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1a85b1491_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4077_brk))._field_Label=(*(_40633_tokens))[1LL];
			if (((*(_40633_tokens)).len() > 2LL)) {
				_1a85b112d_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4077_brk;;
}



inline jule::Ptr<_1a798e331_ContSt> _1a85b58b3_buildContSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _42432_tokens) {
	jule::Ptr<_1a798e331_ContSt> _4257_cont = jule::new_ptr<_1a798e331_ContSt>(_1a798e331_ContSt{._field_Token=(*(_42432_tokens))[0LL], ._field_Label=jule::Ptr<_1a79633b0_Token>(nullptr)});;
	if (((*(_42432_tokens)).len() > 1LL)) {
		if (((*((*(_42432_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1a85b112d_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1a85b1491_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4257_cont))._field_Label=(*(_42432_tokens))[1LL];
			if (((*(_42432_tokens)).len() > 2LL)) {
				_1a85b112d_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4257_cont;;
}



inline jule::Ptr<_1a798e7d7_If> _1a85b5c04_buildIf(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _44228_tokens) {
	jule::Ptr<_1a798e7d7_If> _4437_model = jule::new_ptr<_1a798e7d7_If>(_1a798e7d7_If{._field_Token=(*(_44228_tokens))[0LL], ._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Scope=jule::Ptr<_1a7988da8_ScopeTree>(nullptr)});;
	((*(_44228_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _4477_exprTokens = _1a85c8497_getBlockExpr(_44228_tokens);;
	jule::I32 _4487_i = 0LL;;
	if ((_4477_exprTokens.len() == 0LL)) {
		_1a85b112d_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4487_i=_4477_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _4547_scopeTokens = _1a85cb720_range(&(_4487_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _44228_tokens);;
	if ((_4547_scopeTokens == nullptr)) {
		_1a85b0517_stop(_self_);
		_1a85b112d_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a85b1491_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a79633b0_Token> _4617_end = (*(_44228_tokens))[(_4487_i - 1LL)];;
	if ((_4487_i < (*(_44228_tokens)).len())) {
		if (((*((*(_44228_tokens))[_4487_i]))._field_Id == static_cast<jule::U32>(14LLU))) {
			((*(_44228_tokens))).mut_slice(_4487_i);;
		} else {
			_1a85b112d_pushErr(_self_, (*(_44228_tokens))[_4487_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_44228_tokens))=nullptr;
		};
	};
	(*(_4437_model))._field_Expr=_1a85ce206_buildExpr((*(_self_))._field_p, &(_4477_exprTokens));
	(*_4437_model.alloc)._field_Scope=_1a85b1dcb_buildScope(_self_, &(_4547_scopeTokens), _4617_end);
	return _4437_model;;
}



inline jule::Ptr<_1a798ebb1_Else> _1a85b6045_buildElse(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _47530_tokens) {
	jule::Ptr<_1a798ebb1_Else> _4767_els = jule::new_ptr<_1a798ebb1_Else>(_1a798ebb1_Else{._field_Token=(*(_47530_tokens))[0LL], ._field_Scope=jule::Ptr<_1a7988da8_ScopeTree>(nullptr)});;
	((*(_47530_tokens))).mut_slice(1LL);;
	jule::I32 _4807_i = 0LL;;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _4817_scopeTokens = _1a85cb720_range(&(_4807_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _47530_tokens);;
	if ((_4817_scopeTokens == nullptr)) {
		if ((_4807_i < (*(_47530_tokens)).len())) {
			_1a85b112d_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_1a85b0517_stop(_self_);
			_1a85b112d_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_1a85b1491_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_4807_i < (*(_47530_tokens)).len())) {
		_1a85b112d_pushErr(_self_, (*(_47530_tokens))[_4807_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_4767_els))._field_Scope=_1a85b1dcb_buildScope(_self_, &(_4817_scopeTokens), (*(_47530_tokens))[(_4807_i - 1LL)]);
	return _4767_els;;
}



inline jule::Ptr<_1a7990167_Conditional> _1a85b6386_buildIfElseChain(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _49936_tokens) {
	jule::Ptr<_1a7990167_Conditional> _5007_chain = jule::new_ptr<_1a7990167_Conditional>(_1a7990167_Conditional{._field_Head=_1a85b5c04_buildIf(_self_, &(_49936_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1a798e7d7_If>>(nullptr), ._field_Default=jule::Ptr<_1a798ebb1_Else>(nullptr)});;
	if (((*(_5007_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_49936_tokens.len() != 0LL)) {
		{
			if (((*(_49936_tokens[0LL]))._field_Id != static_cast<jule::U32>(14LLU))) {
				goto _iter_end_1ad33e67b;
			};
			if (((_49936_tokens.len() > 1LL) && ((*(_49936_tokens[1LL]))._field_Id == static_cast<jule::U32>(13LLU)))) {
				(_49936_tokens).mut_slice(1LL);;
				jule::Ptr<_1a798e7d7_If> _5129_elif = _1a85b5c04_buildIf(_self_, &(_49936_tokens));;
				(*(_5007_chain))._field_Tail=jule::append((*_5007_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a798e7d7_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5129_elif; __jule_collection; }));
				goto _iter_next_1ad33e67b;
			};
			(*(_5007_chain))._field_Default=_1a85b6045_buildElse(_self_, &(_49936_tokens));
			goto _iter_end_1ad33e67b;
		}
	_iter_next_1ad33e67b:;
	}
	_iter_end_1ad33e67b:;;
	return _5007_chain;;
}



inline jule::Ptr<_1a797d0de_Expr> _1a85b66c7_buildCoCallSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _52233_tokens) {
	jule::Ptr<_1a79633b0_Token> _5233_token = _52233_tokens[0LL];;
	(_52233_tokens).mut_slice(1LL);;
	jule::Ptr<_1a797d0de_Expr> _5257_e = _1a85ce206_buildExpr((*(_self_))._field_p, &(_52233_tokens));;
	if ((_5257_e == nullptr)) {
		return _5257_e;;
	};
	{
		auto &_match_expr{ (*(_5257_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ad343ad1:;
			{
				(*((*(_5257_e))._field_Kind.unsafe_cast_ptr<_1a7981d18_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1ad344120:;
			{
				_1a85b112d_pushErr(_self_, _5233_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_1ad3440a9:;
	};
	return _5257_e;;
}



inline jule::Ptr<_1a7986768_GotoSt> _1a85b6a18_buildGotoSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _53832_tokens) {
	jule::Ptr<_1a7986768_GotoSt> _5397_gt = jule::new_ptr<_1a7986768_GotoSt>(_1a7986768_GotoSt{._field_Token=(*(_53832_tokens))[0LL], ._field_Label=jule::Ptr<_1a79633b0_Token>(nullptr)});;
	if (((*(_53832_tokens)).len() == 1LL)) {
		_1a85b112d_pushErr(_self_, (*(_5397_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_53832_tokens)).len() > 2LL)) {
		_1a85b112d_pushErr(_self_, (*(_53832_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1a79633b0_Token> _5487_identToken = (*(_53832_tokens))[1LL];;
	if (((*(_5487_identToken))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a85b112d_pushErr(_self_, _5487_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a85b1491_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5397_gt;;
	};
	(*(_5397_gt))._field_Label=_5487_identToken;
	return _5397_gt;;
}



inline jule::Ptr<_1a7986a65_FallSt> _1a85b6d59_buildFallSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _55832_tokens) {
	jule::Ptr<_1a7986a65_FallSt> _5597_fll = jule::new_ptr<_1a7986a65_FallSt>(_1a7986a65_FallSt{._field_Token=(*(_55832_tokens))[0LL]});;
	if (((*(_55832_tokens)).len() > 1LL)) {
		_1a85b112d_pushErr(_self_, (*(_55832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5597_fll;;
}



inline jule::Ptr<_1a7990981_TypeAliasDecl> _1a85b719a_buildTypeAliasSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _56837_tokens) {
	jule::Ptr<_1a7990981_TypeAliasDecl> _5697_tad = _1a85d0999_buildTypeAliasDecl((*(_self_))._field_p, _56837_tokens);;
	(*(_5697_tad))._field_Scope=(*(_self_))._field_s;
	return _5697_tad;;
}



inline void _1a85b7673_pushCaseExpr(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _57432_tokens, jule::Ptr<_1a79633b0_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1a797d0de_Expr>>* _57525_exprs) {
	if ((_57432_tokens.len() == 0LL)) {
		return;;
	};
	if (_5753_typeMatch) {
		jule::I32 _5808_i = 0LL;;
		jule::Ptr<_1a7978caa_TypeDecl> _5818_t;
		jule::Bool _58111_ok;
		({
			__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType((*(_self_))._field_p, &(_57432_tokens), (&(_5808_i)), true);
			_5818_t = __jule_assign_result.__jule_result_arg0;
			_58111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_58111_ok) {
			{ jule::Slice<jule::Ptr<_1a797d0de_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(jule::new_ptr<_1a797d0de_Expr>(_1a797d0de_Expr{._field_Token=_57432_tokens[0LL], ._field_End=_57432_tokens[(_57432_tokens.len() - 1LL)], ._field_Kind=jule::Any(_5818_t, &__jule_any_type90)})); };
			if ((_5808_i < _57432_tokens.len())) {
				_1a85b112d_pushErr(_self_, _57432_tokens[_5808_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a797d0de_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(_1a85ce206_buildExpr((*(_self_))._field_p, &(_57432_tokens))); };
}



inline __jule_tuple_sx_1a797d0de_Expr__jule_tuple_bool _1a85b7b29_buildCaseExprs(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _59735_tokens, jule::Ptr<_1a79633b0_Token>* _59765_colon, jule::Bool _59787_typeMatch) {
	__jule_tuple_sx_1a797d0de_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1a797d0de_Expr>> _5987_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a797d0de_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a797d0de_Expr>(nullptr); __jule_collection; });;
	jule::I32 _5997_braceN = 0LL;;
	jule::I32 _6007_j = 0LL;;
	{
		auto expr = _59735_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad350aaa:;
		if (it != expr_end) {
			jule::I32 _6018_i = it - expr->begin();
			jule::Ptr<_1a79633b0_Token> _60115_tok = *it;
			{
				{
					auto &_match_expr{ (*(_60115_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1ad351db9:;
						{
							(_5997_braceN)++;
							goto _iter_next_1ad350aaa;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1ad3522a4:;
						{
							(_5997_braceN)--;
							goto _iter_next_1ad350aaa;
						}
					}
					_match_end_1ad3521a5:;
				};
				if ((_5997_braceN != 0LL)) {
					goto _iter_next_1ad350aaa;
				};
				{
					
					if (((*(_60115_tok))._field_Id == static_cast<jule::U32>(66LLU))) {
						_case_begin_1ad35386b:;
						{
							jule::Slice<jule::Ptr<_1a79633b0_Token>> _6205_exprTokens = (*(_59735_tokens)).slice(_6007_j, _6018_i);;
							if ((_6205_exprTokens.len() == 0LL)) {
								_1a85b112d_pushErr(_self_, _60115_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_1a85b7673_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							};
							_6007_j=(_6018_i + 1LL);
						}
					}
					else if (((*(_60115_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
						_case_begin_1ad3538d2:;
						{
							(*(_59765_colon))=_60115_tok;
							_1a85b7673_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							((*(_59735_tokens))).mut_slice((_6018_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _5987_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6018_i - _6007_j) == 0LL) || (_5987_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1ad353371:;
				};
			}
			_iter_next_1ad350aaa:;
			++it;
			_6018_i++;
			goto _iter_begin_1ad350aaa;
		}
		_iter_end_1ad350aaa:;
	};
	_1a85b112d_pushErr(_self_, (*(_59735_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_59735_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7988da8_ScopeTree> _1a85b7e6a_buildCaseScope(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _63935_tokens) {
	jule::I32 _6407_n = 0LL;;
	for (;;) {
		{
			jule::I32 _6428_i = 0LL;;
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _6438_next;
			({
				__jule_tuple_sx_1a79633b0_Token__jule_tuple_bool __jule_assign_result = _1a85ae192_skipSt(&(_6428_i), (*(_63935_tokens)).slice(_6407_n));
				_6438_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6438_next.len() == 0LL)) {
				goto _iter_end_1ad3574a7;
			};
			jule::Ptr<_1a79633b0_Token> _6474_tok = _6438_next[0LL];;
			if (((*(_6474_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_6407_n+=_6428_i;
				goto _iter_next_1ad3574a7;
			};
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _6528_scopeTokens = (*(_63935_tokens)).slice(0LL, _6407_n);;
			jule::Ptr<_1a7988da8_ScopeTree> _6538_scope = _1a85b1dcb_buildScope(_self_, &(_6528_scopeTokens), (*(_63935_tokens))[_6407_n]);;
			((*(_63935_tokens))).mut_slice(_6407_n);;
			return _6538_scope;;
		}
	_iter_next_1ad3574a7:;
	}
	_iter_end_1ad3574a7:;;
	jule::Ptr<_1a79633b0_Token> _65711_end;;
	if (((*(_63935_tokens)).len() > 0LL)) {
		_65711_end=(*(_63935_tokens))[((*(_63935_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1a7988da8_ScopeTree> _6617_scope = _1a85b1dcb_buildScope(_self_, _63935_tokens, _65711_end);;
	(*(_63935_tokens))=nullptr;
	return _6617_scope;;
}



inline __jule_tuple_x_1a7990e37_Case__jule_tuple_bool _1a85b8366_buildCase(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _66630_tokens, jule::Bool _66655_typeMatch) {
	__jule_tuple_x_1a7990e37_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a7990e37_Case> _6677_c = jule::new_ptr<_1a7990e37_Case>(_1a7990e37_Case{._field_Token=(*(_66630_tokens))[0LL], ._field_Scope=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1a797d0de_Expr>>(nullptr)});;
	((*(_66630_tokens))).mut_slice(1LL);;
	jule::Ptr<_1a79633b0_Token> _67111_colon = nullptr;;
	if (((*(_66630_tokens)).len() == 0LL)) {
		_1a85b112d_pushErr(_self_, (*(_6677_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _67612_ok;
	({
		__jule_tuple_sx_1a797d0de_Expr__jule_tuple_bool __jule_assign_result = _1a85b7b29_buildCaseExprs(_self_, _66630_tokens, &(_67111_colon), _66655_typeMatch);
		(*(_6677_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_67612_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_6677_c))._field_Scope=_1a85b7e6a_buildCaseScope(_self_, _66630_tokens);
	if (((*((*_6677_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_6677_c))._field_Scope.alloc)._field_End=_67111_colon;
	};
	jule::Bool _6813_isDefault = (_67612_ok && ((*_6677_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _6677_c;
	__jule_func_result.__jule_result_arg1 = _6813_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a7990e37_Case__jule_tuple_x_1a798ebb1_Else _1a85b8762_buildCases(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _68530_tokens, jule::Bool _68555_typeMatch) {
	__jule_tuple_sx_1a7990e37_Case__jule_tuple_x_1a798ebb1_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1a7990e37_Case>> _68611_cases = nullptr;;
	jule::Ptr<_1a798ebb1_Else> _68711_def = nullptr;;
	jule::Bool _6887_defNotLast = false;;
	while ((_68530_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1a79633b0_Token> _6908_tok = _68530_tokens[0LL];;
			if (((*(_6908_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_1a85b112d_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_1ad361714;
			};
			jule::Ptr<_1a7990e37_Case> _6958_c;
			jule::Bool _69511_isDefault;
			({
				__jule_tuple_x_1a7990e37_Case__jule_tuple_bool __jule_assign_result = _1a85b8366_buildCase(_self_, &(_68530_tokens), _68555_typeMatch);
				_6958_c = __jule_assign_result.__jule_result_arg0;
				_69511_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_69511_isDefault) {
				(*(_6958_c))._field_Token=_6908_tok;
				if ((_68711_def == nullptr)) {
					_68711_def=jule::new_ptr<_1a798ebb1_Else>(_1a798ebb1_Else{._field_Token=(*_6958_c.alloc)._field_Token, ._field_Scope=(*_6958_c.alloc)._field_Scope});
				} else {
					_1a85b112d_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_6887_defNotLast=(_6887_defNotLast || (_68711_def != nullptr));
				{ jule::Slice<jule::Ptr<_1a7990e37_Case>> &__jule_push_dest = _68611_cases; __jule_push_dest.push(_6958_c); };
			};
		}
	_iter_next_1ad361714:;
	}
	_iter_end_1ad361714:;;
	if (_6887_defNotLast) {
		_1a85b112d_pushErr(_self_, (*(_68711_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _68611_cases;
	__jule_func_result.__jule_result_arg1 = _68711_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7991751_MatchCase> _1a85b8aa3_buildMatchCase(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _71934_tokens) {
	jule::Ptr<_1a7991751_MatchCase> _7207_m = jule::new_ptr<_1a7991751_MatchCase>(_1a7991751_MatchCase{._field_Comptime=false, ._field_Token=_71934_tokens[0LL], ._field_End=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1a7990e37_Case>>(nullptr), ._field_Default=jule::Ptr<_1a798ebb1_Else>(nullptr)});;
	(_71934_tokens).mut_slice(1LL);;
	if (((_71934_tokens.len() > 0LL) && ((*(_71934_tokens[0LL]))._field_Id == static_cast<jule::U32>(7LLU)))) {
		(*(_7207_m))._field_TypeMatch=true;
		(_71934_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _7307_exprTokens = _1a85c8497_getBlockExpr(&(_71934_tokens));;
	if ((_7307_exprTokens.len() > 0LL)) {
		(*(_7207_m))._field_Expr=_1a85ce206_buildExpr((*(_self_))._field_p, &(_7307_exprTokens));
	} else if ((*(_7207_m))._field_TypeMatch) {
		_1a85b112d_pushErr(_self_, (*_7207_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I32 _7377_i = _7307_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _7387_blockToks = _1a85cb720_range(&(_7377_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_71934_tokens));;
	if ((_7387_blockToks == nullptr)) {
		_1a85b0517_stop(_self_);
		_1a85b112d_pushErr(_self_, (*(_7207_m))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a85b1491_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7377_i < _71934_tokens.len())) {
		_1a85b112d_pushErr(_self_, _71934_tokens[_7377_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_7207_m))._field_End=_71934_tokens[(_7377_i - 1LL)];
	({
		__jule_tuple_sx_1a7990e37_Case__jule_tuple_x_1a798ebb1_Else __jule_assign_result = _1a85b8762_buildCases(_self_, _7387_blockToks, (*_7207_m.alloc)._field_TypeMatch);
		(*_7207_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7207_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7207_m;;
}



inline jule::Ptr<_1a7988da8_ScopeTree> _1a85b8de4_buildScopeSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _75232_tokens) {
	jule::Bool _7537_isUnsafe = false;;
	jule::Bool _7547_isDeferred = false;;
	jule::Ptr<_1a79633b0_Token> _7557_token = _75232_tokens[0LL];;
	if (((*(_7557_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		_7537_isUnsafe=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1a85b112d_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7557_token=_75232_tokens[0LL];
		if (((*(_7557_token))._field_Id == static_cast<jule::U32>(33LLU))) {
			_7547_isDeferred=true;
			(_75232_tokens).mut_slice(1LL);;
			if ((_75232_tokens.len() == 0LL)) {
				_1a85b112d_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7557_token))._field_Id == static_cast<jule::U32>(33LLU))) {
		_7547_isDeferred=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1a85b112d_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I32 _7817_i = 0LL;;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _7827_scopeTokens = _1a85cb720_range(&(_7817_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_75232_tokens));;
	if ((_7827_scopeTokens == nullptr)) {
		_1a85b112d_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_7817_i < _75232_tokens.len())) {
		_1a85b112d_pushErr(_self_, _75232_tokens[_7817_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1a7988da8_ScopeTree> _7897_scope = _1a85b1dcb_buildScope(_self_, &(_7827_scopeTokens), _75232_tokens[(_7817_i - 1LL)]);;
	(*(_7897_scope))._field_Unsafety=_7537_isUnsafe;
	(*_7897_scope.alloc)._field_Deferred=_7547_isDeferred;
	return _7897_scope;;
}



inline jule::Ptr<_1a798638e_LabelSt> _1a85b9235_buildLabelSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _79533_tokens) {
	jule::Ptr<_1a798638e_LabelSt> _7967_lbl = jule::new_ptr<_1a798638e_LabelSt>(_1a798638e_LabelSt{._field_Token=(*(_79533_tokens))[0LL], ._field_Ident=(*((*(_79533_tokens))[0LL]))._field_Kind});;
	if (((*(_79533_tokens)).len() > 2LL)) {
		((*(_79533_tokens))).mut_slice(2LL);;
		_1a85b1749_insertAsNext(_self_, _79533_tokens);
	};
	return _7967_lbl;;
}



inline __jule_tuple__1a7988418_StmtData__jule_tuple_bool _1a85b9576_buildIdSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _81030_tokens) {
	__jule_tuple__1a7988418_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_81030_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a79633b0_Token> _8157_token = (*(_81030_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8157_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1ad3781a9:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1a85b9235_buildLabelSt(_self_, _81030_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ad3783eb:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a85c9d7d_assignInfo> _1a85b98b7_buildAssignInfo(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _82436_tokens) {
	jule::Ptr<_1a85c9d7d_assignInfo> _8257_info = jule::new_ptr<_1a85c9d7d_assignInfo>(_1a85c9d7d_assignInfo{._field_l=jule::Slice<jule::Ptr<_1a79633b0_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1a79633b0_Token>>(nullptr), ._field_setter=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_ok=true});;
	jule::I32 _8287_braceN = 0LL;;
	{
		auto expr = _82436_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad379a4b:;
		if (it != expr_end) {
			jule::I32 _8298_i = it - expr->begin();
			jule::Ptr<_1a79633b0_Token> _82915_token = *it;
			{
				{
					auto &_match_expr{ (*(_82915_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ad37a5eb:;
						{
							(_8287_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ad37a992:;
						{
							(_8287_braceN)--;
						}
					}
					_match_end_1ad37a893:;
				};
				{
					
					if ((_8287_braceN > 0LL)) {
						_case_begin_1ad37aa6e:;
						{
							goto _iter_next_1ad379a4b;
						}
					}
					else if (((!(_1a79684c5_IsAssignOp((*(_82915_token))._field_Id))) && ((*_82915_token.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
						_case_begin_1ad37ba2b:;
						{
							goto _iter_next_1ad379a4b;
						}
					}
					_match_end_1ad37b993:;
				};
				(*(_8257_info))._field_l=(*(_82436_tokens)).slice(0LL, _8298_i);
				if (((*_8257_info.alloc)._field_l.len() == 0LL)) {
					(*_8257_info.alloc)._field_ok=false;
				};
				(*_8257_info.alloc)._field_setter=_82915_token;
				if (((_8298_i + 1LL) >= (*(_82436_tokens)).len())) {
					(*_8257_info.alloc)._field_r=nullptr;
					(*_8257_info.alloc)._field_ok=_1a796820b_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1ad379a4b;
				};
				(*_8257_info.alloc)._field_r=(*(_82436_tokens)).slice((_8298_i + 1LL));
				if (_1a796820b_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id)) {
					if (((*_8257_info.alloc)._field_r.len() > 0LL)) {
						_1a85b112d_pushErr(_self_, (*(_8257_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8257_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1ad379a4b;
			}
			_iter_next_1ad379a4b:;
			++it;
			_8298_i++;
			goto _iter_begin_1ad379a4b;
		}
		_iter_end_1ad379a4b:;
	};
	return _8257_info;;
}



inline jule::Ptr<_1a79871c5_AssignLeft> _1a85b9c08_buildAssignL(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _86933_tokens) {
	jule::Ptr<_1a79871c5_AssignLeft> _8707_l = jule::new_ptr<_1a79871c5_AssignLeft>(_1a79871c5_AssignLeft{._field_Token=(*(_86933_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr)});;
	if (((*((*(_86933_tokens))[0LL]))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*(_8707_l))._field_Ident=(*((*_8707_l.alloc)._field_Token))._field_Kind;
	};
	(*(_8707_l))._field_Expr=_1a85ce206_buildExpr((*(_self_))._field_p, _86933_tokens);
	return _8707_l;;
}



inline jule::Slice<jule::Ptr<_1a79871c5_AssignLeft>> _1a85ba049_buildAssignLs(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>>* _88034_parts) {
	jule::Slice<jule::Ptr<_1a79871c5_AssignLeft>> _88111_lefts = nullptr;;
	{
		auto expr = _88034_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3841c6:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _88215_part = *it;
			{
				jule::Ptr<_1a79871c5_AssignLeft> _8838_l = _1a85b9c08_buildAssignL(_self_, &(_88215_part));;
				{ jule::Slice<jule::Ptr<_1a79871c5_AssignLeft>> &__jule_push_dest = _88111_lefts; __jule_push_dest.push(_8838_l); };
			}
			_iter_next_1ad3841c6:;
			++it;
			goto _iter_begin_1ad3841c6;
		}
		_iter_end_1ad3841c6:;
	};
	return _88111_lefts;;
}



inline __jule_tuple__1a7988418_StmtData__jule_tuple_bool _1a85ba38a_buildPlainAssign(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _88937_tokens) {
	__jule_tuple__1a7988418_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a85c9d7d_assignInfo> _8907_info = _1a85b98b7_buildAssignInfo(_self_, _88937_tokens);;
	if ((!((*(_8907_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7987758_AssignSt> _8957_assign = jule::new_ptr<_1a7987758_AssignSt>(_1a7987758_AssignSt{._field_Declarative=false, ._field_Setter=(*(_8907_info))._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1a79871c5_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1a797d0de_Expr>(nullptr)});;
	if (((*((*_8907_info.alloc)._field_setter))._field_Id == static_cast<jule::U32>(38LLU))) {
		(*(_8957_assign))._field_Declarative=true;
		(*_8957_assign.alloc)._field_Right=_1a85ce206_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
		jule::Bool _9034_ok = _1a85ba786_buildDeclAssign1(_self_, &((*_8907_info.alloc)._field_l), &(_8957_assign));;
		if ((!(_9034_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*(_8957_assign))._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1a79871c5_AssignLeft> _9128_left = (*(_8957_assign))._field_Left[0LL];;
		{
			auto &_match_expr{ (*((*(_9128_left))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1ad389e02:;
				{
					jule::Ptr<_1a798bc02_VarDecl> _9159_decl = jule::new_ptr<_1a798bc02_VarDecl>(_1a798bc02_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9128_left))._field_Token, ._field_Setter=(*_8957_assign.alloc)._field_Setter, ._field_Ident=(*_9128_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9128_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9128_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Expr=(*_8957_assign.alloc)._field_Right});;
					__jule_func_result.__jule_result_arg0 = jule::Any(_9159_decl, &__jule_any_type50);
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				}
			}
			_match_end_1ad389d8b:;
		};
		__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _9297_parts;
	jule::Slice<_1bc0b03aa_Log> _92914_errs;
	({
		__jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a85cbe90_parts(&((*_8907_info.alloc)._field_l), static_cast<jule::U32>(5LLU), true);
		_9297_parts = __jule_assign_result.__jule_result_arg0;
		_92914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_92914_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_92914_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_8957_assign))._field_Left=_1a85ba049_buildAssignLs(_self_, &(_9297_parts));
	if (((*_8907_info.alloc)._field_r != nullptr)) {
		(*_8957_assign.alloc)._field_Right=_1a85ce206_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1a85ba786_buildDeclAssign1(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _94337_lefts, jule::Ptr<_1a7987758_AssignSt>* _94366_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _9457_parts;
	jule::Slice<_1bc0b03aa_Log> _94514_errs;
	({
		__jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a85cbe90_parts(_94337_lefts, static_cast<jule::U32>(5LLU), true);
		_9457_parts = __jule_assign_result.__jule_result_arg0;
		_94514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_94514_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_94514_errs);
		return false;;
	};
	{
		auto expr = &(_9457_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad391755:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _95115_part = *it;
			{
				jule::Bool _9528_isMut = false;;
				jule::Bool _9538_isRef = false;;
				jule::Ptr<_1a79633b0_Token> _9554_token = _95115_part[0LL];;
				if (((*(_9554_token))._field_Id == static_cast<jule::U32>(32LLU))) {
					_9528_isMut=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1a85b112d_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_95115_part[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
					_9538_isRef=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1a85b112d_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_95115_part[0LL]))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(_95115_part[0LL]))._field_Id != static_cast<jule::U32>(74LLU)))) {
					_1a85b112d_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_1a79871c5_AssignLeft> _9798_l = _1a85b9c08_buildAssignL(_self_, &(_95115_part));;
				if (((*(_9798_l))._field_Expr == nullptr)) {
					return false;;
				};
				(*(_9798_l))._field_Mutable=_9528_isMut;
				(*_9798_l.alloc)._field_Reference=_9538_isRef;
				{ jule::Slice<jule::Ptr<_1a79871c5_AssignLeft>> &__jule_push_dest = (*((*(_94366_assign))))._field_Left; __jule_push_dest.push(_9798_l); };
			}
			_iter_next_1ad391755:;
			++it;
			goto _iter_begin_1ad391755;
		}
		_iter_end_1ad391755:;
	};
	return true;;
}



inline __jule_tuple_x_1a7987758_AssignSt__jule_tuple_bool _1a85baac7_buildDeclAssign(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _99135_tokens) {
	__jule_tuple_x_1a7987758_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99135_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99135_tokens).mut_slice(1LL);;
	jule::Ptr<_1a79633b0_Token> _9977_token = _99135_tokens[0LL];;
	if (((*(_9977_token))._field_Id != static_cast<jule::U32>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7987758_AssignSt> _10027_assign = jule::new_ptr<_1a7987758_AssignSt>(_1a7987758_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1a79871c5_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1a797d0de_Expr>(nullptr)});;
	jule::I32 _10067_i = 0LL;;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _10077_rang = _1a85cb720_range(&(_10067_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_99135_tokens));;
	if ((_10077_rang == nullptr)) {
		_1a85b112d_pushErr(_self_, _9977_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10067_i + 1LL) < _99135_tokens.len())) {
		(*(_10027_assign))._field_Setter=_99135_tokens[_10067_i];
		if (((*((*_10027_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1a85b112d_pushErr(_self_, (*_10027_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10067_i)++;
		jule::Slice<jule::Ptr<_1a79633b0_Token>> _10178_exprTokens = _99135_tokens.slice(_10067_i);;
		(*_10027_assign.alloc)._field_Right=_1a85ce206_buildExpr((*(_self_))._field_p, &(_10178_exprTokens));
	};
	jule::Bool _10213_ok = _1a85ba786_buildDeclAssign1(_self_, &(_10077_rang), &(_10027_assign));;
	__jule_func_result.__jule_result_arg0 = _10027_assign;
	__jule_func_result.__jule_result_arg1 = _10213_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1a7988418_StmtData__jule_tuple_bool _1a85bae18_buildAssignSt(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _102534_tokens) {
	__jule_tuple__1a7988418_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1a85ca235_checkAssignTokens(_102534_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_102534_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1ad3a14ac:;
			{
				({
					__jule_tuple_x_1a7987758_AssignSt__jule_tuple_bool __jule_assign_result = _1a85baac7_buildDeclAssign(_self_, (*(_102534_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ad3a090c:;
			{
				({
					__jule_tuple__1a7988418_StmtData__jule_tuple_bool __jule_assign_result = _1a85ba38a_buildPlainAssign(_self_, _102534_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ad3a0d3b:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a797d9b3_UseExpr> _1a85bb259_buildUseExpr(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _103833_tokens) {
	if (((*(_103833_tokens)).len() == 1LL)) {
		_1a85b112d_pushErr(_self_, (*(_103833_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_1a797d9b3_UseExpr> _10437_ue = jule::new_ptr<_1a797d9b3_UseExpr>(_1a797d9b3_UseExpr{._field_Token=(*(_103833_tokens))[0LL], ._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr)});;
	((*(_103833_tokens))).mut_slice(1LL);;
	(*(_10437_ue))._field_Expr=_1a85ce206_buildExpr((*(_self_))._field_p, _103833_tokens);
	return _10437_ue;;
}



inline jule::Any _1a85bb59a_buildConstSt(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a85ae4c2_stmt>* _105133_st) {
	if (((*((*(_105133_st))))._field_tokens.len() == 1LL)) {
		_1a85b112d_pushErr(_self_, (*((*(_105133_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_105133_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1ad3a5a44:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a798c84b_Iter> _10598_iter = _1a85b5231_buildIterSt(_self_, _105133_st);;
				if ((_10598_iter != nullptr)) {
					(*_10598_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10598_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1ad3a5aaa:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a7991751_MatchCase> _10668_mt = _1a85b8aa3_buildMatchCase(_self_, (*((*(_105133_st))))._field_tokens);;
				if ((_10668_mt != nullptr)) {
					(*_10668_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10668_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_1ad3a44d2:;
			{
				return jule::Any(_1a85b221c_buildVarSt(_self_, &((*((*(_105133_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		_match_end_1ad3a558d:;
	};
}



inline jule::Any _1a85bb8db_buildSt(_1a85aed63_scopeParser* _self_, jule::Ptr<_1a85ae4c2_stmt>* _107628_st) {
	jule::Ptr<_1a79633b0_Token> _10777_token = (*((*(_107628_st))))._field_tokens[0LL];;
	if (((*(_10777_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _10798_s;
		jule::Bool _107911_ok;
		({
			__jule_tuple__1a7988418_StmtData__jule_tuple_bool __jule_assign_result = _1a85b9576_buildIdSt(_self_, &((*((*(_107628_st))))._field_tokens));
			_10798_s = __jule_assign_result.__jule_result_arg0;
			_107911_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_107911_ok) {
			return _10798_s;;
		};
	};
	jule::Any _10857_s;
	jule::Bool _108510_ok;
	({
		__jule_tuple__1a7988418_StmtData__jule_tuple_bool __jule_assign_result = _1a85bae18_buildAssignSt(_self_, &((*((*(_107628_st))))._field_tokens));
		_10857_s = __jule_assign_result.__jule_result_arg0;
		_108510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_108510_ok) {
		return _10857_s;;
	};
	{
		auto &_match_expr{ (*(_10777_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1ad3ab82a:;
			{
				return jule::Any(_1a85bb259_buildUseExpr(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1ad3abd03:;
			{
				return _1a85bb59a_buildConstSt(_self_, _107628_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1ad3abd69:;
			{
				return jule::Any(_1a85b221c_buildVarSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1ad3abdd0:;
			{
				return jule::Any(_1a85b255d_buildRetSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1ad3abe46:;
			{
				return jule::Any(_1a85b5231_buildIterSt(_self_, _107628_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1ad3abeac:;
			{
				return jule::Any(_1a85b5572_buildBreakSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1ad3ac034:;
			{
				return jule::Any(_1a85b58b3_buildContSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1ad3ac0ab:;
			{
				return jule::Any(_1a85b6386_buildIfElseChain(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1ad3ac133:;
			{
				return jule::Any(_1a85b66c7_buildCoCallSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_1ad3ac1aa:;
			{
				return jule::Any(_1a85b6a18_buildGotoSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1ad3ac232:;
			{
				return jule::Any(_1a85b6d59_buildFallSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ad3ac2a9:;
			{
				return jule::Any(_1a85b719a_buildTypeAliasSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1ad3ac331:;
			{
				return jule::Any(_1a85b8aa3_buildMatchCase(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1ad3ac3a8:;
			{
				if (((*((*(_107628_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1ad3abb5a;
				};
				if ((((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(33LLU)) || ((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(72LLU)))) {
					return jule::Any(_1a85b8de4_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1ad3ac430:;
			{
				return jule::Any(_1a85b8de4_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1ad3ac4a7:;
			{
				return jule::Any(_1a85b8de4_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		_match_end_1ad3abb5a:;
	};
	jule::Ptr<_1a797d0de_Expr> _11327_expr = _1a85ce206_buildExpr((*(_self_))._field_p, &((*((*(_107628_st))))._field_tokens));;
	if ((_11327_expr != nullptr)) {
		return jule::Any(_11327_expr, &__jule_any_type52);;
	};
	_1a85b112d_pushErr(_self_, _10777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _1a85bbc4e_build(_1a85aed63_scopeParser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _114026_tokens, jule::Ptr<_1a7988da8_ScopeTree>* _114056_s) {
	if (((*(_114056_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1a85ae879_splitStmts(_114026_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_114056_s));
	while (((!(_1a85b0cba_isLastSt(_self_))) && (!(_1a85b0a34_finished(_self_))))) {
		{
			jule::Ptr<_1a85ae4c2_stmt> _11488_st = _1a85b19d0_next(_self_);;
			jule::Any _11498_data = _1a85bb8db_buildSt(_self_, &(_11488_st));;
			if ((_11498_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1a7988748_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7988748_Stmt{._field_Token=(*(_11488_st))._field_tokens[0LL], ._field_End=(*_11488_st.alloc)._field_tokens[((*_11488_st.alloc)._field_tokens.len() - 1LL)], ._field_Data=_11498_data}; __jule_collection; }));
			};
			if (_1a85b079d_stopped(_self_)) {
				goto _iter_end_1ad3b9393;
			};
		}
	_iter_next_1ad3b9393:;
	}
	_iter_end_1ad3b9393:;;
}








inline jule::Bool _1a85bc788_exprBuilder_eq(_1a85bc788_exprBuilder *_self_, _1a85bc788_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1a85bce92_pushErr(_1a85bc788_exprBuilder* _self_, jule::Ptr<_1a79633b0_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args) {
	_1a85cda52_pushErr((*(_self_))._field_p.ptr(), _1423_token, _1445_fmt, _1465_args);
}



inline void _1a85bd305_pushSuggestion(_1a85bc788_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args) {
	_1a85cddb5_pushSuggestion((*(_self_))._field_p.ptr(), _1930_fmt, _1950_args);
}



inline jule::Ptr<_1a797dbd3_TupleExpr> _1a85bd646_buildTuple(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>>* _2331_parts) {
	jule::Ptr<_1a797dbd3_TupleExpr> _247_tuple = jule::new_ptr<_1a797dbd3_TupleExpr>(_1a797dbd3_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a797d0de_Expr>>::alloc(0LL, (*(_2331_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a797d0de_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _2331_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3de066:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _2715_part = *it;
			{
				(*(_247_tuple))._field_Expr=jule::append((*_247_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a797d0de_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a85c7a3a_buildFromTokens(_self_, _2715_part); __jule_collection; }));
			}
			_iter_next_1ad3de066:;
			++it;
			goto _iter_begin_1ad3de066;
		}
		_iter_end_1ad3de066:;
	};
	return _247_tuple;;
}



inline jule::Ptr<_1a797e079_LitExpr> _1a85bd987_buildLit(_1a85bc788_exprBuilder* _self_, jule::Ptr<_1a79633b0_Token> _3324_token) {
	return jule::new_ptr<_1a797e079_LitExpr>(_1a797e079_LitExpr{._field_Token=_3324_token, ._field_Value=(*(_3324_token))._field_Kind});;
}



inline jule::Any _1a85be119_buildSingle(_1a85bc788_exprBuilder* _self_, jule::Ptr<_1a79633b0_Token> _4431_token) {
	{
		auto &_match_expr{ (*(_4431_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1ad3e0e7a:;
			{
				return jule::Any(_1a85bd987_buildLit(_self_, _4431_token), &__jule_any_type103);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1ad3e1002:;
			{
				return jule::Any(jule::new_ptr<_1a7980575_VariadicExpr>(_1a7980575_VariadicExpr{._field_Token=_4431_token, ._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr)}), &__jule_any_type79);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(24LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1ad3e1068:;
			{
				return jule::Any(_1a85c8de3_buildIdentExpr(&(_4431_token)), &__jule_any_type41);;
			}
		}
		_match_end_1ad3e0dae:;
	};
	_1a85bce92_pushErr(_self_, _4431_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a797e909_IdentExpr> _1a85be45a_buildBindIdent(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _6135_tokens) {
	if (((*((*(_6135_tokens))[0LL]))._field_Id != static_cast<jule::U32>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_6135_tokens))[1LL]))._field_Id != static_cast<jule::U32>(17LLU))) {
		_1a85bce92_pushErr(_self_, (*(_6135_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a79633b0_Token> _697_token = (*(_6135_tokens))[2LL];;
	if (((*(_697_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a85bce92_pushErr(_self_, (*(_6135_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a797e909_IdentExpr> _757_expr = _1a85c8de3_buildIdentExpr(&(_697_token));;
	(*(_757_expr))._field_Binded=true;
	return _757_expr;;
}



inline jule::Ptr<_1a798019b_UnaryExpr> _1a85be79b_buildUnary(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _8030_tokens) {
	jule::Ptr<_1a79633b0_Token> _817_op = _8030_tokens[0LL];;
	if ((_8030_tokens.len() == 1LL)) {
		_1a85bce92_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1a7963aec_IsUnaryOp((*(_817_op))._field_Id)))) {
		_1a85bce92_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_817_op.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(_8030_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1a798019b_UnaryExpr>(_1a798019b_UnaryExpr{._field_Op=_817_op, ._field_Expr=_1a85c7a3a_buildFromTokens(_self_, _8030_tokens)});;
}



inline jule::Ptr<_1a7981202_SubIdentExpr> _1a85beadc_buildObjSubIdent(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _10136_tokens) {
	jule::I32 _1027_i = (_10136_tokens.len() - 1LL);;
	jule::Ptr<_1a79633b0_Token> _1037_identToken = _10136_tokens[_1027_i];;
	(_1027_i)--;
	(_10136_tokens).mut_slice(0LL, _1027_i);;
	if ((_10136_tokens.len() == 0LL)) {
		_1a85bce92_pushErr(_self_, _1037_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a7981202_SubIdentExpr>(_1a7981202_SubIdentExpr{._field_Expr=_1a85c7a3a_buildFromTokens(_self_, _10136_tokens), ._field_Ident=_1037_identToken});;
}



inline jule::Ptr<_1a7980d28_NamespaceExpr> _1a85bee2d_buildNamespace(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _11635_tokens) {
	jule::Ptr<_1a7980d28_NamespaceExpr> _1177_ns = jule::new_ptr<_1a7980d28_NamespaceExpr>(_1a7980d28_NamespaceExpr{._field_Namespace=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Ident=jule::Ptr<_1a79633b0_Token>(nullptr)});;
	if (((*(_11635_tokens)).len() > 3LL)) {
		_1a85bce92_pushErr(_self_, (*(_11635_tokens))[3LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_1177_ns.alloc)._field_Namespace=(*(_11635_tokens))[0LL];
	if ((((*((*_1177_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_1177_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U32>(31LLU)))) {
		_1a85bce92_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	if (((*(_11635_tokens)).len() < 2LL)) {
		_1a85bce92_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_11635_tokens))[1LL]))._field_Id != static_cast<jule::U32>(19LLU))) {
		_1a85bce92_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_11635_tokens)).len() < 3LL)) {
		_1a85bce92_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_1177_ns.alloc)._field_Ident=(*(_11635_tokens))[2LL];
	if (((*((*_1177_ns.alloc)._field_Ident))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a85bce92_pushErr(_self_, (*_1177_ns.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1177_ns;;
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85c026e_buildType(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _15030_tokens) {
	jule::I32 _1517_i = 0LL;;
	jule::Ptr<_1a7978caa_TypeDecl> _1527_t;
	jule::Bool _15210_ok;
	({
		__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType((*(_self_))._field_p, _15030_tokens, (&(_1517_i)), false);
		_1527_t = __jule_assign_result.__jule_result_arg0;
		_15210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_15210_ok))) {
		_1a85bce92_pushErr(_self_, (*(_15030_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1517_i < (*(_15030_tokens)).len())) {
		_1a85bce92_pushErr(_self_, (*(_15030_tokens))[_1517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1527_t;;
}



inline jule::Any _1a85c05b0_buildSubIdent(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _16434_tokens) {
	jule::I32 _1653_i = ((*(_16434_tokens)).len() - 2LL);;
	jule::Ptr<_1a79633b0_Token> _1663_token = (*(_16434_tokens))[_1653_i];;
	{
		auto &_match_expr{ (*(_1663_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(17LLU)) {
			_case_begin_1ad407dd7:;
			{
				return jule::Any(_1a85beadc_buildObjSubIdent(_self_, (*(_16434_tokens))), &__jule_any_type87);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1ad408514:;
			{
				return jule::Any(_1a85bee2d_buildNamespace(_self_, _16434_tokens), &__jule_any_type91);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1ad40857a:;
			{
				return jule::Any(_1a85c026e_buildType(_self_, _16434_tokens), &__jule_any_type90);;
			}
		}
		_match_end_1ad4083e3:;
	};
	if (_1a85c9586_isAnonFnHead(_16434_tokens)) {
		return jule::Any(_1a85c026e_buildType(_self_, _16434_tokens), &__jule_any_type90);;
	};
	_1a85bce92_pushErr(_self_, _1663_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a7980575_VariadicExpr> _1a85c0901_buildVariadic(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _18633_tokens) {
	jule::Ptr<_1a79633b0_Token> _1877_token = _18633_tokens[(_18633_tokens.len() - 1LL)];;
	(_18633_tokens).mut_slice(0LL, (_18633_tokens.len() - 1LL));;
	return jule::new_ptr<_1a7980575_VariadicExpr>(_1a7980575_VariadicExpr{._field_Token=_1877_token, ._field_Expr=_1a85c7a3a_buildFromTokens(_self_, _18633_tokens)});;
}



inline jule::Ptr<_1a797d3a8_RangeExpr> _1a85c0c42_buildBetweenParentheses(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _19543_tokens) {
	if ((_19543_tokens.len() == 2LL)) {
		_1a85bce92_pushErr(_self_, _19543_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_19543_tokens).mut_slice(1LL, (_19543_tokens.len() - 1LL));;
	return jule::new_ptr<_1a797d3a8_RangeExpr>(_1a797d3a8_RangeExpr{._field_Expr=_1a85c7a3a_buildFromTokens(_self_, _19543_tokens)});;
}



inline jule::Ptr<_1a798094e_CastExpr> _1a85c1083_tryBuildCast(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _20733_tokens) {
	jule::I32 _2087_rangeN = 0LL;;
	{
		auto expr = _20733_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad40dd44:;
		if (it != expr_end) {
			jule::I32 _2097_i = it - expr->begin();
			jule::Ptr<_1a79633b0_Token> _20910_token = *it;
			{
				{
					auto &_match_expr{ (*(_20910_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ad40e8c2:;
						{
							(_2087_rangeN)++;
							goto _iter_next_1ad40dd44;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ad40ecac:;
						{
							(_2087_rangeN)--;
						}
					}
					_match_end_1ad40ebad:;
				};
				if ((_2087_rangeN > 0LL)) {
					goto _iter_next_1ad40dd44;
				} else if (((_2097_i + 1LL) == (*(_20733_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1a79633b0_Token>> _2288_typeTokens = (*(_20733_tokens)).slice(0LL, (_2097_i + 1LL));;
				jule::Slice<jule::Ptr<_1a79633b0_Token>> _2298_exprTokens = (*(_20733_tokens)).slice((_2097_i + 1LL));;
				if ((_2298_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1a79633b0_Token> _2364_tok = _2298_exprTokens[0LL];;
				if (((*(_2364_tok))._field_Id != static_cast<jule::U32>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1a798094e_CastExpr> _2418_cast = jule::new_ptr<_1a798094e_CastExpr>(_1a798094e_CastExpr{._field_Kind=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr)});;
				if ((_2298_exprTokens.len() == 2LL)) {
					_1a85bce92_pushErr(_self_, _2298_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2288_typeTokens.len() == 2LL)) {
					_1a85bce92_pushErr(_self_, _2288_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2288_typeTokens).mut_slice(1LL, (_2288_typeTokens.len() - 1LL));;
					jule::I32 _2559_typeIndex = 0LL;;
					jule::Ptr<_1a7978caa_TypeDecl> _2569_t;
					jule::Bool _25612_ok;
					({
						__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType((*(_self_))._field_p, &(_2288_typeTokens), (&(_2559_typeIndex)), true);
						_2569_t = __jule_assign_result.__jule_result_arg0;
						_25612_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_25612_ok && (_2559_typeIndex < _2288_typeTokens.len()))) {
						_1a85bce92_pushErr(_self_, _2288_typeTokens[_2559_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_25612_ok))) {
						return _2418_cast;;
					};
					(*(_2418_cast))._field_Kind=_2569_t;
					if ((_2298_exprTokens.len() > 2LL)) {
						jule::I32 _26610_j = 0LL;;
						jule::Slice<jule::Ptr<_1a79633b0_Token>> _26710_exprTokens2 = _1a85cb720_range(&(_26610_j), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_2298_exprTokens));;
						if (((_26710_exprTokens2.len() == 0LL) || (_26610_j < _2298_exprTokens.len()))) {
							return nullptr;;
						};
						(*_2418_cast.alloc)._field_Expr=_1a85c7a3a_buildFromTokens(_self_, _26710_exprTokens2);
					};
				};
				return _2418_cast;;
			}
			_iter_next_1ad40dd44:;
			++it;
			_2097_i++;
			goto _iter_begin_1ad40dd44;
		}
		_iter_end_1ad40dd44:;
	};
	return nullptr;;
}



inline void _1a85c14a1_pushArg(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a797d0de_Expr>>* _28028_args, jule::Slice<jule::Ptr<_1a79633b0_Token>> _28052_tokens, jule::Ptr<_1a79633b0_Token> _28077_errToken) {
	if ((_28052_tokens.len() == 0LL)) {
		_1a85bce92_pushErr(_self_, _28077_errToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a797d0de_Expr>> &__jule_push_dest = (*(_28028_args)); __jule_push_dest.push(_1a85c7a3a_buildFromTokens(_self_, _28052_tokens)); };
}



inline jule::Slice<jule::Ptr<_1a797d0de_Expr>> _1a85c17e2_buildArgs(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _28929_tokens) {
	if ((_28929_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a797d0de_Expr>> _29511_args = nullptr;;
	jule::I32 _2967_last = 0LL;;
	jule::I32 _2977_rangeN = 0LL;;
	(_28929_tokens).mut_slice(1LL, (_28929_tokens.len() - 1LL));;
	{
		auto expr = &(_28929_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad41c87a:;
		if (it != expr_end) {
			jule::I32 _2997_i = it - expr->begin();
			jule::Ptr<_1a79633b0_Token> _29910_token = *it;
			{
				{
					auto &_match_expr{ (*(_29910_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ad41d5e5:;
						{
							(_2977_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ad41d9d0:;
						{
							(_2977_rangeN)--;
						}
					}
					_match_end_1ad41d8d1:;
				};
				if (((_2977_rangeN > 0LL) || ((*(_29910_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1ad41c87a;
				};
				_1a85c14a1_pushArg(_self_, &(_29511_args), _28929_tokens.slice(_2967_last, _2997_i), _29910_token);
				_2967_last=(_2997_i + 1LL);
			}
			_iter_next_1ad41c87a:;
			++it;
			_2997_i++;
			goto _iter_begin_1ad41c87a;
		}
		_iter_end_1ad41c87a:;
	};
	if ((_2967_last < _28929_tokens.len())) {
		if ((_2967_last == 0LL)) {
			if ((_28929_tokens.len() > 0LL)) {
				_1a85c14a1_pushArg(_self_, &(_29511_args), _28929_tokens.slice(_2967_last), _28929_tokens[_2967_last]);
			};
		} else {
			_1a85c14a1_pushArg(_self_, &(_29511_args), _28929_tokens.slice(_2967_last), _28929_tokens[(_2967_last - 1LL)]);
		};
	};
	return _29511_args;;
}



inline jule::Ptr<_1a7981d18_FnCallExpr> _1a85c20d9_buildFnCall(_1a85bc788_exprBuilder* _self_, jule::Ptr<_1a79633b0_Token>* _35532_token, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _35559_expr, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _35587_args) {
	return jule::new_ptr<_1a7981d18_FnCallExpr>(_1a7981d18_FnCallExpr{._field_Token=(*(_35532_token)), ._field_Expr=_1a85c7a3a_buildFromTokens(_self_, (*(_35559_expr))), ._field_Args=_1a85c17e2_buildArgs(_self_, (*(_35587_args))), ._field_Exception=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1a85c242a_buildParenthesesRange(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _36342_tokens) {
	jule::Ptr<_1a79633b0_Token> _3647_token = (*(_36342_tokens))[0LL];;
	if (((*(_3647_token))._field_Id == static_cast<jule::U32>(74LLU))) {
		jule::Ptr<_1a798094e_CastExpr> _3668_expr = _1a85c1083_tryBuildCast(_self_, _36342_tokens);;
		if ((_3668_expr != nullptr)) {
			return jule::Any(_3668_expr, &__jule_any_type107);;
		};
	};
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _3717_exprTokens;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _37123_argsTokens;
	({
		__jule_tuple_sx_1a79633b0_Token__jule_tuple_sx_1a79633b0_Token __jule_assign_result = _1a85cb9d9_rangeLast(_36342_tokens);
		_3717_exprTokens = __jule_assign_result.__jule_result_arg0;
		_37123_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3717_exprTokens.len() == 0LL)) {
		return jule::Any(_1a85c0c42_buildBetweenParentheses(_self_, _37123_argsTokens), &__jule_any_type102);;
	};
	if (_1a85c9586_isAnonFnHead(&(_3717_exprTokens))) {
		return jule::Any(_1a85c026e_buildType(_self_, _36342_tokens), &__jule_any_type90);;
	};
	return jule::Any(_1a85c20d9_buildFnCall(_self_, &(_3647_token), &(_3717_exprTokens), &(_37123_argsTokens)), &__jule_any_type109);;
}



inline jule::Ptr<_1a797e453_UnsafeExpr> _1a85c276b_buildUnsafeExpr(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _38535_tokens) {
	jule::Ptr<_1a79633b0_Token> _3867_token = _38535_tokens[0LL];;
	(_38535_tokens).mut_slice(1LL);;
	jule::I32 _3887_i = 0LL;;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _3897_rangeTokens = _1a85cb720_range(&(_3887_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_38535_tokens));;
	if ((_3897_rangeTokens.len() == 0LL)) {
		_1a85bce92_pushErr(_self_, _38535_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a797e453_UnsafeExpr>(_1a797e453_UnsafeExpr{._field_Token=_3867_token, ._field_Expr=_1a85c7a3a_buildFromTokens(_self_, _3897_rangeTokens)});;
}



inline jule::Ptr<_1a798aa47_FnDecl> _1a85c2aac_buildAnonFn(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _40032_tokens) {
	jule::Ptr<_1a798aa47_FnDecl> _4017_f = _1a85d4be0_buildFn((*(_self_))._field_p, _40032_tokens, false, false);;
	if ((!(_1a798addd_IsAnon(_4017_f.ptr())))) {
		_1a85bce92_pushErr(_self_, (*_4017_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4017_f;;
}



inline jule::Any _1a85c2ded_buildUnsafe(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _40932_tokens) {
	{
		auto &_match_expr{ (*((*(_40932_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1ad430d33:;
			{
				return jule::Any(_1a85c2aac_buildAnonFn(_self_, _40932_tokens), &__jule_any_type68);;
			}
		}
		else {
			_case_begin_1ad4303e8:;
			{
				return jule::Any(_1a85c276b_buildUnsafeExpr(_self_, (*(_40932_tokens))), &__jule_any_type104);;
			}
		}
		_match_end_1ad430827:;
	};
}



inline void _1a85c331b_pushRangeLitPart(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _41936_part, jule::Ptr<_1a79633b0_Token> _4203_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>>* _42035_parts) {
	if ((_41936_part.len() == 0LL)) {
		_1a85bce92_pushErr(_self_, _4203_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> &__jule_push_dest = (*(_42035_parts)); __jule_push_dest.push(_41936_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _1a85c365c_getBraceRangeLitExprParts(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _43045_tokens) {
	if ((_43045_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _43611_parts = nullptr;;
	jule::I32 _4387_last = 0LL;;
	jule::I32 _4397_rangeN = 0LL;;
	(_43045_tokens).mut_slice(1LL, (_43045_tokens.len() - 1LL));;
	{
		auto expr = &(_43045_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad43463e:;
		if (it != expr_end) {
			jule::I32 _4417_i = it - expr->begin();
			jule::Ptr<_1a79633b0_Token> _44110_token = *it;
			{
				{
					auto &_match_expr{ (*(_44110_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ad4353a9:;
						{
							(_4397_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ad435794:;
						{
							(_4397_rangeN)--;
						}
					}
					_match_end_1ad435695:;
				};
				if (((_4397_rangeN > 0LL) || ((*(_44110_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1ad43463e;
				};
				_1a85c331b_pushRangeLitPart(_self_, _43045_tokens.slice(_4387_last, _4417_i), _44110_token, &(_43611_parts));
				_4387_last=(_4417_i + 1LL);
			}
			_iter_next_1ad43463e:;
			++it;
			_4417_i++;
			goto _iter_begin_1ad43463e;
		}
		_iter_end_1ad43463e:;
	};
	if ((_4387_last < _43045_tokens.len())) {
		if ((_4387_last == 0LL)) {
			if ((_43045_tokens.len() > 0LL)) {
				_1a85c331b_pushRangeLitPart(_self_, _43045_tokens.slice(_4387_last), _43045_tokens[_4387_last], &(_43611_parts));
			};
		} else {
			_1a85c331b_pushRangeLitPart(_self_, _43045_tokens.slice(_4387_last), _43045_tokens[(_4387_last - 1LL)], &(_43611_parts));
		};
	};
	return _43611_parts;;
}



inline jule::Ptr<_1a798280d_FieldExprPair> _1a85c399d_buildFieldExprPair(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _47238_tokens) {
	if (((_47238_tokens.len() - 2LL) == 0LL)) {
		_1a85bce92_pushErr(_self_, _47238_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a798280d_FieldExprPair> _4777_pair = jule::new_ptr<_1a798280d_FieldExprPair>(_1a798280d_FieldExprPair{._field_Field=_47238_tokens[0LL], ._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr)});;
	(_47238_tokens).mut_slice(2LL);;
	(*(_4777_pair))._field_Expr=_1a85c7a3a_buildFromTokens(_self_, _47238_tokens);
	return _4777_pair;;
}



inline jule::Ptr<_1a797d0de_Expr> _1a85c3cde_buildStructLitExpr(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _48539_tokens) {
	jule::Ptr<_1a79633b0_Token> _4867_token = (*(_48539_tokens))[0LL];;
	if ((((*(_4867_token))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_48539_tokens)).len() > 1LL))) {
		_4867_token=(*(_48539_tokens))[1LL];
		if (((*(_4867_token))._field_Id == static_cast<jule::U32>(8LLU))) {
			return jule::new_ptr<_1a797d0de_Expr>(_1a797d0de_Expr{._field_Token=_4867_token, ._field_End=(*(_48539_tokens))[((*(_48539_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1a85c399d_buildFieldExprPair(_self_, (*(_48539_tokens))), &__jule_any_type81)});;
		};
	};
	return _1a85c7a3a_buildFromTokens(_self_, (*(_48539_tokens)));;
}



inline jule::Slice<jule::Ptr<_1a797d0de_Expr>> _1a85c4130_buildStructLitExprs(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _50040_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _5017_parts = _1a85c365c_getBraceRangeLitExprParts(_self_, (*(_50040_tokens)));;
	if ((_5017_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a797d0de_Expr>> _5067_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a797d0de_Expr>>::alloc(0LL, _5017_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a797d0de_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5017_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad43dc42:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _50715_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a797d0de_Expr>> &__jule_push_dest = _5067_pairs; __jule_push_dest.push(_1a85c3cde_buildStructLitExpr(_self_, &(_50715_part))); };
			}
			_iter_next_1ad43dc42:;
			++it;
			goto _iter_begin_1ad43dc42;
		}
		_iter_end_1ad43dc42:;
	};
	return _5067_pairs;;
}



inline jule::Ptr<_1a7983138_StructLit> _1a85c4471_buildTypedStructLiteral(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _51343_tokens) {
	jule::I32 _5147_i = 0LL;;
	jule::Ptr<_1a7978caa_TypeDecl> _5157_t;
	jule::Bool _51510_ok;
	({
		__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType((*(_self_))._field_p, &(_51343_tokens), (&(_5147_i)), true);
		_5157_t = __jule_assign_result.__jule_result_arg0;
		_51510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_51510_ok))) {
		return nullptr;;
	} else if ((_5147_i >= _51343_tokens.len())) {
		_1a85bce92_pushErr(_self_, _51343_tokens[_5147_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_51343_tokens).mut_slice(_5147_i);;
	jule::Ptr<_1a79633b0_Token> _5243_token = _51343_tokens[0LL];;
	if (((*(_5243_token))._field_Id != static_cast<jule::U32>(72LLU))) {
		_1a85bce92_pushErr(_self_, _5243_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a7983138_StructLit>(_1a7983138_StructLit{._field_End=_51343_tokens[(_51343_tokens.len() - 1LL)], ._field_Kind=_5157_t, ._field_Exprs=_1a85c4130_buildStructLitExprs(_self_, &(_51343_tokens))});;
}



inline jule::Ptr<_1a797d0de_Expr> _1a85c47b2_buildBraceLitPart(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _53738_tokens) {
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _5387_l;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _53814_r;
	({
		__jule_tuple_sx_1a79633b0_Token__jule_tuple_sx_1a79633b0_Token __jule_assign_result = _1a85c8860_splitDelim(_53738_tokens, static_cast<jule::U32>(8LLU));
		_5387_l = __jule_assign_result.__jule_result_arg0;
		_53814_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5387_l != nullptr)) {
		return jule::new_ptr<_1a797d0de_Expr>(_1a797d0de_Expr{._field_Token=(*(_53738_tokens))[0LL], ._field_End=(*(_53738_tokens))[((*(_53738_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1a7983e19_KeyValPair>(_1a7983e19_KeyValPair{._field_Key=_1a85c7a3a_buildFromTokens(_self_, _5387_l), ._field_Val=_1a85c7a3a_buildFromTokens(_self_, _53814_r), ._field_Colon=(*(_53738_tokens))[_5387_l.len()]}), &__jule_any_type82)});;
	};
	return _1a85c7a3a_buildFromTokens(_self_, (*(_53738_tokens)));;
}



inline jule::Ptr<_1a79835de_BraceLit> _1a85c4b03_buildBraceLit(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _55434_tokens) {
	jule::Ptr<_1a79835de_BraceLit> _5557_lit = jule::new_ptr<_1a79835de_BraceLit>(_1a79835de_BraceLit{._field_Token=(*(_55434_tokens))[0LL], ._field_End=(*(_55434_tokens))[((*(_55434_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1a797d0de_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _5607_parts = _1a85c365c_getBraceRangeLitExprParts(_self_, (*(_55434_tokens)));;
	if ((_5607_parts == nullptr)) {
		return _5557_lit;;
	};
	(*(_5557_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a797d0de_Expr>>::alloc(0LL, _5607_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a797d0de_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5607_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad448422:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _56615_part = *it;
			{
				(*_5557_lit.alloc)._field_Exprs=jule::append((*_5557_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a797d0de_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a85c47b2_buildBraceLitPart(_self_, &(_56615_part)); __jule_collection; }));
			}
			_iter_next_1ad448422:;
			++it;
			goto _iter_begin_1ad448422;
		}
		_iter_end_1ad448422:;
	};
	return _5557_lit;;
}



inline jule::Any _1a85c4e44_buildBraceRange(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _57336_tokens) {
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _5747_exprTokens;
	jule::I32 _57419_rangeN;
	({
		__jule_tuple_sx_1a79633b0_Token__jule_tuple_int __jule_assign_result = _1a85c91ac_getRangeExprTokens(_57336_tokens);
		_5747_exprTokens = __jule_assign_result.__jule_result_arg0;
		_57419_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5747_exprTokens.len() == 0LL)) {
			_case_begin_1ad448e06:;
			{
				return jule::Any(_1a85c4b03_buildBraceLit(_self_, _57336_tokens), &__jule_any_type110);;
			}
		}
		else if ((_57419_rangeN > 0LL)) {
			_case_begin_1ad44a19e:;
			{
				_1a85bce92_pushErr(_self_, (*(_57336_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad44a116:;
	};
	jule::Ptr<_1a79633b0_Token> _5853_elseToken = _5747_exprTokens[(_5747_exprTokens.len() - 1LL)];;
	if (((*(_5747_exprTokens[(_5747_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U32>(14LLU))) {
		(_5747_exprTokens).mut_slice(0LL, (_5747_exprTokens.len() - 1LL));;
		jule::Any _5888_d = _1a85c73a8_build(_self_, &(_5747_exprTokens));;
		if ((_5888_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _5888_d };
			
			if (_match_expr.type == &__jule_any_type109) {
				_case_begin_1ad44d735:;
				{
					((*(_57336_tokens))).mut_slice((_5747_exprTokens.len() + 1LL));;
					jule::I32 _5959_i = 0LL;;
					jule::Slice<jule::Ptr<_1a79633b0_Token>> _5969_rangeTokens = _1a85cb720_range(&(_5959_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _57336_tokens);;
					jule::Ptr<_1a7981d18_FnCallExpr> _5979_model = _5888_d.unsafe_cast_ptr<_1a7981d18_FnCallExpr>();;
					if (_1a7982456_Ignored(_5979_model.ptr())) {
						_1a85bce92_pushErr(_self_, _5853_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*(_5979_model))._field_Exception=_1a85cebeb_buildScope((*(_self_))._field_p, &(_5969_rangeTokens), (*(_57336_tokens))[(_5959_i - 1LL)]);
					return _5888_d;;
				}
			}
			else {
				_case_begin_1ad44ce4e:;
				{
					_1a85bce92_pushErr(_self_, _5747_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1ad44cbda:;
		};
	};
	{
		auto &_match_expr{ (*(_5747_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1ad452ad0:;
			{
				return _1a85c2ded_buildUnsafe(_self_, _57336_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1ad452e43:;
			{
				return jule::Any(_1a85c2aac_buildAnonFn(_self_, _57336_tokens), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1ad452ea9:;
			{
				return jule::Any(_1a85c4471_buildTypedStructLiteral(_self_, (*(_57336_tokens))), &__jule_any_type108);;
			}
		}
		else {
			_case_begin_1ad44ca97:;
			{
				_1a85bce92_pushErr(_self_, _5747_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad452261:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _1a85c5285_getEnumerableParts(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _62538_tokens) {
	(_62538_tokens).mut_slice(1LL, (_62538_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _6277_parts;
	jule::Slice<_1bc0b03aa_Log> _62714_errors;
	({
		__jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a85cbe90_parts(&(_62538_tokens), static_cast<jule::U32>(5LLU), true);
		_6277_parts = __jule_assign_result.__jule_result_arg0;
		_62714_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_62714_errors);
	return _6277_parts;;
}



inline jule::Ptr<_1a7984645_SliceExpr> _1a85c55c6_buildSlice(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _63230_tokens) {
	jule::Ptr<_1a7984645_SliceExpr> _6337_slc = jule::new_ptr<_1a7984645_SliceExpr>(_1a7984645_SliceExpr{._field_Token=_63230_tokens[0LL], ._field_End=_63230_tokens[(_63230_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1a797d0de_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _6387_parts = _1a85c5285_getEnumerableParts(_self_, _63230_tokens);;
	if ((_6387_parts.len() == 0LL)) {
		return _6337_slc;;
	};
	(*(_6337_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a797d0de_Expr>>::alloc(0LL, _6387_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a797d0de_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6387_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad457c39:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _64415_p = *it;
			{
				if ((_64415_p.len() == 0LL)) {
					goto _iter_next_1ad457c39;
				};
				(*_6337_slc.alloc)._field_Exprs=jule::append((*_6337_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a797d0de_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a85c7a3a_buildFromTokens(_self_, _64415_p); __jule_collection; }));
			}
			_iter_next_1ad457c39:;
			++it;
			goto _iter_begin_1ad457c39;
		}
		_iter_end_1ad457c39:;
	};
	return _6337_slc;;
}



inline jule::Ptr<_1a79850a2_IndexingExpr> _1a85c5a7c_buildIndexing(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _65433_exprTokens, jule::Slice<jule::Ptr<_1a79633b0_Token>> _6557_tokens, jule::Ptr<_1a79633b0_Token> _65536_errorToken) {
	jule::Ptr<_1a79633b0_Token> _6567_end = _6557_tokens[(_6557_tokens.len() - 1LL)];;
	(_6557_tokens).mut_slice(1LL, (_6557_tokens.len() - 1LL));;
	if ((_6557_tokens.len() == 0LL)) {
		_1a85bce92_pushErr(_self_, _65536_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a797d0de_Expr> _6627_expr = _1a85c7a3a_buildFromTokens(_self_, _65433_exprTokens);;
	if ((_6627_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a797d0de_Expr> _6667_index = _1a85c7a3a_buildFromTokens(_self_, _6557_tokens);;
	if ((_6667_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a79850a2_IndexingExpr>(_1a79850a2_IndexingExpr{._field_Token=_65536_errorToken, ._field_End=_6567_end, ._field_Expr=_6627_expr, ._field_Index=_6667_index});;
}



inline jule::Ptr<_1a7985712_SlicingExpr> _1a85c6198_buildSlicing(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _67833_exprTokens, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _67867_start, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _6798_to, jule::Ptr<_1a79633b0_Token>* _67934_errorToken, jule::Ptr<_1a79633b0_Token> _67965_end) {
	jule::Ptr<_1a7985712_SlicingExpr> _6807_slc = jule::new_ptr<_1a7985712_SlicingExpr>(_1a7985712_SlicingExpr{._field_Token=(*(_67934_errorToken)), ._field_End=_67965_end, ._field_Expr=_1a85c7a3a_buildFromTokens(_self_, (*(_67833_exprTokens))), ._field_Start=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_To=jule::Ptr<_1a797d0de_Expr>(nullptr)});;
	if (((*(_67867_start)).len() > 0LL)) {
		(*(_6807_slc))._field_Start=_1a85c7a3a_buildFromTokens(_self_, (*(_67867_start)));
	};
	if (((*(_6798_to)).len() > 0LL)) {
		(*(_6807_slc))._field_To=_1a85c7a3a_buildFromTokens(_self_, (*(_6798_to)));
	};
	return _6807_slc;;
}



inline jule::Any _1a85c64d9_buildBracketRange(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _69437_tokens) {
	jule::Ptr<_1a79633b0_Token> _6957_errorToken = _69437_tokens[0LL];;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _6967_exprTokens;
	jule::I32 _69619_rangeN;
	({
		__jule_tuple_sx_1a79633b0_Token__jule_tuple_int __jule_assign_result = _1a85c91ac_getRangeExprTokens(&(_69437_tokens));
		_6967_exprTokens = __jule_assign_result.__jule_result_arg0;
		_69619_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_6967_exprTokens.len() == 0LL)) {
		return jule::Any(_1a85c55c6_buildSlice(_self_, _69437_tokens), &__jule_any_type95);;
	} else if ((_69619_rangeN > 0LL)) {
		_1a85bce92_pushErr(_self_, _6957_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_69437_tokens).mut_slice(_6967_exprTokens.len());;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _7117_splitTokens = _69437_tokens.slice(1LL, (_69437_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _7127_start;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _71218_to;
	({
		__jule_tuple_sx_1a79633b0_Token__jule_tuple_sx_1a79633b0_Token __jule_assign_result = _1a85c8860_splitDelim(&(_7117_splitTokens), static_cast<jule::U32>(8LLU));
		_7127_start = __jule_assign_result.__jule_result_arg0;
		_71218_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7127_start != nullptr) || (_71218_to != nullptr))) {
		return jule::Any(_1a85c6198_buildSlicing(_self_, &(_6967_exprTokens), &(_7127_start), &(_71218_to), &(_6957_errorToken), _69437_tokens[(_69437_tokens.len() - 1LL)]), &__jule_any_type106);;
	};
	return jule::Any(_1a85c5a7c_buildIndexing(_self_, _6967_exprTokens, _69437_tokens, _6957_errorToken), &__jule_any_type105);;
}



inline jule::Any _1a85c682a_buildExclRight(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _71935_tokens) {
	jule::Ptr<_1a79633b0_Token> _7203_token = (*(_71935_tokens))[((*(_71935_tokens)).len() - 1LL)];;
	((*(_71935_tokens))).mut_slice(0LL, ((*(_71935_tokens)).len() - 1LL));;
	jule::Any _7227_d = _1a85c73a8_build(_self_, _71935_tokens);;
	if ((_7227_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7227_d };
		
		if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ad46a6db:;
			{
				(*(_7227_d.unsafe_cast_ptr<_1a7981d18_FnCallExpr>()))._field_Exception=jule::new_ptr<_1a7988da8_ScopeTree>(_1a7988da8_ScopeTree{._field_Parent=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1a7988748_Stmt>(nullptr), ._field_End=jule::Ptr<_1a79633b0_Token>(nullptr)});
				return _7227_d;;
			}
		}
		_match_end_1ad46a675:;
	};
	_1a85bce92_pushErr(_self_, _7203_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a85c6b6b_buildData(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _73730_tokens) {
	{
		auto _match_expr{ (*(_73730_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ad46bd2a:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ad46bd91:;
			{
				return _1a85be119_buildSingle(_self_, (*(_73730_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ad46be07:;
			{
				if (((*((*(_73730_tokens))[0LL]))._field_Id == static_cast<jule::U32>(27LLU))) {
					return jule::Any(_1a85be45a_buildBindIdent(_self_, _73730_tokens), &__jule_any_type41);;
				};
			}
		}
		_match_end_1ad46bc70:;
	};
	jule::Ptr<_1a79633b0_Token> _7497_token = (*(_73730_tokens))[((*(_73730_tokens)).len() - 1LL)];;
	if (((*(_7497_token))._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_1a85c0901_buildVariadic(_self_, (*(_73730_tokens))), &__jule_any_type79);;
	};
	_7497_token=(*(_73730_tokens))[0LL];
	if (_1a7963aec_IsUnaryOp((*(_7497_token))._field_Id)) {
		if (((*(_73730_tokens)).len() > 1LL)) {
			_7497_token=(*(_73730_tokens))[1LL];
			if (((*(_7497_token))._field_Id == static_cast<jule::U32>(31LLU))) {
				return jule::Any(_1a85c026e_buildType(_self_, _73730_tokens), &__jule_any_type90);;
			};
		};
		return jule::Any(_1a85be79b_buildUnary(_self_, (*(_73730_tokens))), &__jule_any_type89);;
	};
	if (((*(_73730_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7497_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
				_case_begin_1ad471a00:;
				{
					if (((*(_73730_tokens)).len() > 3LL)) {
						jule::Ptr<_1a79633b0_Token> _7756_t = (*(_73730_tokens))[((*(_73730_tokens)).len() - 1LL)];;
						if (((*(_7756_t))._field_Id == static_cast<jule::U32>(75LLU))) {
							goto _match_end_1ad471934;
						};
					};
					jule::Ptr<_1a79633b0_Token> _7815_next = (*(_73730_tokens))[1LL];;
					if (((*(_7815_next))._field_Id != static_cast<jule::U32>(77LLU))) {
						goto _match_end_1ad471934;
					};
					return jule::Any(_1a85c026e_buildType(_self_, _73730_tokens), &__jule_any_type90);;
				}
			}
			_match_end_1ad471934:;
		};
	};
	_7497_token=(*(_73730_tokens))[((*(_73730_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7497_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1ad474a14:;
			{
				return _1a85c05b0_buildSubIdent(_self_, _73730_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1ad474a7a:;
			{
				return _1a85c682a_buildExclRight(_self_, _73730_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1ad474ae1:;
			{
				return _1a85c242a_buildParenthesesRange(_self_, _73730_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1ad474b57:;
			{
				return _1a85c4e44_buildBraceRange(_self_, _73730_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1ad474bbd:;
			{
				return _1a85c64d9_buildBracketRange(_self_, (*(_73730_tokens)));;
			}
		}
		_match_end_1ad47245c:;
	};
	_1a85bce92_pushErr(_self_, _7497_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a85c7067_buildBinary(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _80632_tokens, jule::I32 _80657_i) {
	jule::Ptr<_1a79633b0_Token> _8077_op = (*(_80632_tokens))[_80657_i];;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _8087_leftTokens = (*(_80632_tokens)).slice(0LL, _80657_i);;
	if ((_1a85c7dc0_isTypeOp(&((*(_8077_op))._field_Id)) && _1a85c81cd_isTypeRange(&(_8087_leftTokens)))) {
		return jule::Any(_1a85c026e_buildType(_self_, _80632_tokens), &__jule_any_type90);;
	};
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _8137_rightTokens = (*(_80632_tokens)).slice((_80657_i + 1LL));;
	if ((_8087_leftTokens.len() == 0LL)) {
		_1a85bce92_pushErr(_self_, (*(_80632_tokens))[_80657_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8137_rightTokens.len() == 0LL)) {
		_1a85bce92_pushErr(_self_, (*(_80632_tokens))[_80657_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85bd305_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1a79816a8_BinaryExpr>(_1a79816a8_BinaryExpr{._field_Left=_1a85c7a3a_buildFromTokens(_self_, _8087_leftTokens), ._field_Right=_1a85c7a3a_buildFromTokens(_self_, _8137_rightTokens), ._field_Op=_8077_op}), &__jule_any_type111);;
}



inline jule::Any _1a85c73a8_build(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _83126_tokens) {
	if (((*((*(_83126_tokens))[0LL]))._field_Id == static_cast<jule::U32>(37LLU))) {
		return jule::Any(_1a85c026e_buildType(_self_, _83126_tokens), &__jule_any_type90);;
	};
	jule::I32 _8353_i = _1a85c8b29_findLowestPrecOp(_83126_tokens);;
	if ((_8353_i == -1LL)) {
		return _1a85c6b6b_buildData(_self_, _83126_tokens);;
	};
	return _1a85c7067_buildBinary(_self_, _83126_tokens, _8353_i);;
}



inline jule::Any _1a85c76e9_buildKind(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _84230_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _8437_parts;
	jule::Slice<_1bc0b03aa_Log> _84314_errors;
	({
		__jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a85cbe90_parts(_84230_tokens, static_cast<jule::U32>(5LLU), true);
		_8437_parts = __jule_assign_result.__jule_result_arg0;
		_84314_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_84314_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_84314_errors);
		return nullptr;;
	} else if ((_8437_parts.len() > 1LL)) {
		return jule::Any(_1a85bd646_buildTuple(_self_, &(_8437_parts)), &__jule_any_type42);;
	};
	return _1a85c73a8_build(_self_, _84230_tokens);;
}



inline jule::Ptr<_1a797d0de_Expr> _1a85c7a3a_buildFromTokens(_1a85bc788_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _85335_tokens) {
	if ((_85335_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8577_kind = _1a85c76e9_buildKind(_self_, &(_85335_tokens));;
	if ((_8577_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a797d0de_Expr>(_1a797d0de_Expr{._field_Token=_85335_tokens[0LL], ._field_End=_85335_tokens[(_85335_tokens.len() - 1LL)], ._field_Kind=_8577_kind});;
}











inline void _1a85cd39d_stop(_1a85cd06d_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1a85cd634_stopped(_1a85cd06d_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1a85cda52_pushErr(_1a85cd06d_parser* _self_, jule::Ptr<_1a79633b0_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args) {
	{ jule::Slice<_1bc0b03aa_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a85cc655_compilerErr(&(_16923_token), &(_16945_fmt), _16965_args)); };
}



inline void _1a85cddb5_pushSuggestion(_1a85cd06d_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args) {
	{
		_1a85cc9eb_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _17430_fmt, _17450_args);
	};
}



inline jule::Ptr<_1a797d0de_Expr> _1a85ce206_buildExpr(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _17831_tokens) {
	return _1a85c7a3a_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_17831_tokens)));;
}



inline jule::Ptr<_1a79781c7_Directive> _1a85ce547_buildDirective(_1a85cd06d_parser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _18234_tokens) {
	if ((_18234_tokens.len() == 1LL)) {
		_1a85cda52_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_18234_tokens[1LL]))._field_Column != ((*(_18234_tokens[0LL]))._field_Column + 1LL))) {
		_1a85cda52_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a79781c7_Directive>(_1a79781c7_Directive{._field_Tag=_18234_tokens[1LL], ._field_Args=_18234_tokens.slice(2LL)});;
}



inline void _1a85ce800_pushDirective(_1a85cd06d_parser* _self_, jule::Ptr<_1a79781c7_Directive> _19733_d) {
	if ((_19733_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4a1436:;
		if (it != expr_end) {
			jule::Ptr<_1a79781c7_Directive> _20210_pd = *it;
			{
				if (((*((*(_19733_d))._field_Tag))._field_Kind == (*(*(_20210_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1ad4a1436:;
			++it;
			goto _iter_begin_1ad4a1436;
		}
		_iter_end_1ad4a1436:;
	};
	{ jule::Slice<jule::Ptr<_1a79781c7_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_19733_d); };
}



inline jule::Ptr<_1a7988da8_ScopeTree> _1a85cebeb_buildScope(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _21032_tokens, jule::Ptr<_1a79633b0_Token> _21061_end) {
	jule::Ptr<_1a7988da8_ScopeTree> _2117_s = _1a85ad24b_newScope();;
	(*(_2117_s))._field_End=_21061_end;
	_1a85aed63_scopeParser _2137_sp = _1a85aed63_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1a85ae4c2_stmt>>(nullptr), ._field_pos=0};;
	_1a85bbc4e_build(&_2137_sp, _21032_tokens, &(_2117_s));
	return _2117_s;;
}



inline __jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool _1a85d01a2__buildType(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _22039_tokens, jule::I32* _2217_i, jule::Bool _22116_err) {
	__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a85de227_typeBuilder _2227_tb = _1a85de227_typeBuilder{._field_p=_self_, ._field_tokens=(*(_22039_tokens)), ._field_i=_2217_i, ._field_err=_22116_err};;
	__jule_func_result = std::move(_1a85e223b_build(&_2227_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool _1a85d0658_buildType(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _23238_tokens, jule::I32* _2337_i, jule::Bool _23316_err) {
	__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a79633b0_Token> _2343_token = (*(_23238_tokens))[(*(_2337_i))];;
	jule::Ptr<_1a7978caa_TypeDecl> _2357_t;
	jule::Bool _23510_ok;
	({
		__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d01a2__buildType(_self_, _23238_tokens, _2337_i, _23316_err);
		_2357_t = __jule_assign_result.__jule_result_arg0;
		_23510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_23316_err && (!(_23510_ok)))) {
		_1a85cda52_pushErr(_self_.ptr(), _2343_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2357_t;
	__jule_func_result.__jule_result_arg1 = _23510_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7990981_TypeAliasDecl> _1a85d0999_buildTypeAliasDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _24240_tokens) {
	jule::I32 _2437_i = 1LL;;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7990981_TypeAliasDecl> _2487_tad = jule::new_ptr<_1a7990981_TypeAliasDecl>(_1a7990981_TypeAliasDecl{._field_Scope=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_24240_tokens))[1LL], ._field_Ident=(*((*(_24240_tokens))[1LL]))._field_Kind, ._field_Strict=false, ._field_Kind=jule::Ptr<_1a7978caa_TypeDecl>(nullptr)});;
	jule::Ptr<_1a79633b0_Token> _2527_token = (*(_24240_tokens))[_2437_i];;
	if (((*(_2527_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a85cda52_pushErr(_self_.ptr(), _2527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	_2527_token=(*(_24240_tokens))[_2437_i];
	{
		auto &_match_expr{ (*(_2527_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1ad4b3a20:;
			{
				(*(_2487_tad))._field_Strict=true;
				goto _match_end_1ad4b3019;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1ad4b33d2:;
			{
				goto _match_end_1ad4b3019;
			}
		}
		else {
			_case_begin_1ad4b2117:;
			{
				_1a85cda52_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
				return _2487_tad;;
			}
		}
		_match_end_1ad4b3019:;
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	jule::Ptr<_1a7978caa_TypeDecl> _2797_t;
	jule::Bool _27910_ok;
	({
		__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType(_self_, _24240_tokens, (&(_2437_i)), true);
		_2797_t = __jule_assign_result.__jule_result_arg0;
		_27910_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2487_tad))._field_Kind=_2797_t;
	if ((_27910_ok && (_2437_i < (*(_24240_tokens)).len()))) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_24240_tokens))[_2437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2487_tad.alloc)._field_Public=_1a7b78d56_IsPub((*_2487_tad.alloc)._field_Ident);
	return _2487_tad;;
}



inline void _1a85d0d0c_buildVarTypeAndExpr(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a798bc02_VarDecl>* _28841_v, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _28864_tokens) {
	jule::I32 _2897_i = 0LL;;
	jule::Ptr<_1a79633b0_Token> _2907_tok = (*(_28864_tokens))[_2897_i];;
	if (((*(_2907_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_2897_i)++;
		if (((_2897_i >= (*(_28864_tokens)).len()) || ((*((*(_28864_tokens))[_2897_i]))._field_Id == static_cast<jule::U32>(71LLU)))) {
			_1a85cda52_pushErr(_self_.ptr(), _2907_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1a7978caa_TypeDecl> _2978_t;
		jule::Bool _29711_ok;
		({
			__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType(_self_, _28864_tokens, (&(_2897_i)), true);
			_2978_t = __jule_assign_result.__jule_result_arg0;
			_29711_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_29711_ok) {
			(*((*(_28841_v))))._field_Kind=_2978_t;
			if ((_2897_i >= (*(_28864_tokens)).len())) {
				return;;
			};
			_2907_tok=(*(_28864_tokens))[_2897_i];
		};
	};
	if (((*(_2907_tok))._field_Id != static_cast<jule::U32>(71LLU))) {
		_1a85cda52_pushErr(_self_.ptr(), _2907_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28841_v))))._field_Setter=_2907_tok;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _3137_exprTokens = (*(_28864_tokens)).slice((_2897_i + 1LL));;
	if ((_3137_exprTokens.len() == 0LL)) {
		_1a85cda52_pushErr(_self_.ptr(), _2907_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28841_v))))._field_Expr=_1a85ce206_buildExpr(_self_, &(_3137_exprTokens));
}



inline void _1a85d1170_buildVarCommon(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a798bc02_VarDecl>* _32136_v, jule::Slice<jule::Ptr<_1a79633b0_Token>> _32158_tokens) {
	(*((*(_32136_v))))._field_Token=_32158_tokens[0LL];
	if (((*((*((*(_32136_v))))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a85cda52_pushErr(_self_.ptr(), (*((*(_32136_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32136_v))))._field_Ident=(*((*((*(_32136_v))))._field_Token))._field_Kind;
	(*((*(_32136_v))))._field_Public=_1a7b78d56_IsPub((*((*(_32136_v))))._field_Ident);
	(*((*(_32136_v))))._field_Kind=nullptr;
	if ((_32158_tokens.len() > 1LL)) {
		(_32158_tokens).mut_slice(1LL);;
		_1a85d0d0c_buildVarTypeAndExpr(_self_, _32136_v, &(_32158_tokens));
	};
}



inline void _1a85d14d3_buildVarBegin(_1a85cd06d_parser* _self_, jule::Ptr<_1a798bc02_VarDecl>* _33734_v, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _33757_tokens) {
	jule::Ptr<_1a79633b0_Token> _3383_tok = (*(_33757_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3383_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1ad4c3c2d:;
			{
				(*((*(_33734_v))))._field_Statically=true;
				goto _case_begin_1ad4c38dc;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1ad4c38dc:;
			{
				if (((*(_33757_tokens)).len() == 1LL)) {
					(*(_33757_tokens))=nullptr;
					_1a85cda52_pushErr(_self_, _3383_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_33757_tokens))).mut_slice(1LL);;
				if (((*((*(_33757_tokens))[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
					(*((*(_33734_v))))._field_Mutable=true;
					((*(_33757_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1ad4c3953:;
			{
				(*((*(_33734_v))))._field_Constant=true;
				((*(_33757_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1ad4c35ce:;
			{
				(*(_33757_tokens))=nullptr;
				_1a85cda52_pushErr(_self_, _3383_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad4c3876:;
	};
}



inline jule::Ptr<_1a798bc02_VarDecl> _1a85d1824_buildVar(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _36529_tokens) {
	jule::Ptr<_1a798bc02_VarDecl> _3667_v = jule::new_ptr<_1a798bc02_VarDecl>(_1a798bc02_VarDecl{._field_Scope=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_Token=_36529_tokens[0LL], ._field_Setter=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr)});;
	_1a85d14d3_buildVarBegin(_self_.ptr(), &(_3667_v), &(_36529_tokens));
	if ((_36529_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_36529_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		(*(_3667_v))._field_Reference=true;
		if ((_36529_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_36529_tokens).mut_slice(1LL);;
	};
	_1a85d1170_buildVarCommon(_self_, &(_3667_v), _36529_tokens);
	return _3667_v;;
}



inline jule::Ptr<_1a7985eb5_GenericDecl> _1a85d1b65_buildGeneric(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _38434_tokens) {
	jule::Ptr<_1a7985eb5_GenericDecl> _3857_g = jule::new_ptr<_1a7985eb5_GenericDecl>(_1a7985eb5_GenericDecl{._field_Token=(*(_38434_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1a7985a0e_Constraint>(nullptr)});;
	if (((*((*(_3857_g))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a85cda52_pushErr(_self_.ptr(), (*_3857_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_3857_g))._field_Ident=(*((*_3857_g.alloc)._field_Token))._field_Kind;
	if (((*(_38434_tokens)).len() > 1LL)) {
		if (((*((*(_38434_tokens))[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
			_1a85cda52_pushErr(_self_.ptr(), (*(_38434_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_38434_tokens)).len() == 2LL)) {
			_1a85cda52_pushErr(_self_.ptr(), (*(_38434_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1a79633b0_Token>> _4028_constraintTokens = (*(_38434_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _4038_parts;
		jule::Slice<_1bc0b03aa_Log> _40315_errors;
		({
			__jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a85cbe90_parts(&(_4028_constraintTokens), static_cast<jule::U32>(66LLU), true);
			_4038_parts = __jule_assign_result.__jule_result_arg0;
			_40315_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_40315_errors.len() > 0LL)) {
			(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_40315_errors);
			return nullptr;;
		};
		(*_3857_g.alloc)._field_Constraint=jule::new_ptr<_1a7985a0e_Constraint>(_1a7985a0e_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>::alloc(0LL, _4038_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7978caa_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_4038_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acd56649:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1a79633b0_Token>> _40916_part = *it;
				{
					jule::I32 _4109_i = 0LL;;
					jule::Ptr<_1a7978caa_TypeDecl> _4119_kind;
					({
						__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType(_self_, &(_40916_part), (&(_4109_i)), true);
						_4119_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_3857_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_3857_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4119_kind; __jule_collection; }));
					if ((_4109_i < _40916_part.len())) {
						_1a85cda52_pushErr(_self_.ptr(), _40916_part[_4109_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1acd56649:;
				++it;
				goto _iter_begin_1acd56649;
			}
			_iter_end_1acd56649:;
		};
	};
	return _3857_g;;
}



inline jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>> _1a85d2061_buildGenerics(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _42135_tokens, jule::Ptr<_1a79633b0_Token>* _42161_errorToken) {
	if (((*(_42135_tokens)).len() == 0LL)) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_42161_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _4277_parts;
	jule::Slice<_1bc0b03aa_Log> _42714_errors;
	({
		__jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a85cbe90_parts(_42135_tokens, static_cast<jule::U32>(5LLU), true);
		_4277_parts = __jule_assign_result.__jule_result_arg0;
		_42714_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_42714_errors.len() > 0LL)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_42714_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>> _4337_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>::alloc(0LL, _4277_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7985eb5_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4277_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd5bb16:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _43415_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>> &__jule_push_dest = _4337_generics; __jule_push_dest.push(_1a85d1b65_buildGeneric(_self_, &(_43415_part))); };
			}
			_iter_next_1acd5bb16:;
			++it;
			goto _iter_begin_1acd5bb16;
		}
		_iter_end_1acd5bb16:;
	};
	return _4337_generics;;
}



inline jule::Ptr<_1a79895e5_ParamDecl> _1a85d23a2_buildSelfParam(_1a85cd06d_parser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _44134_tokens) {
	if ((_44134_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a79895e5_ParamDecl> _4467_param = jule::new_ptr<_1a79895e5_ParamDecl>(_1a79895e5_ParamDecl{._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_44134_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_4467_param.alloc)._field_Mutable=true;
		if ((_44134_tokens.len() == 1LL)) {
			_1a85cda52_pushErr(_self_, _44134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_44134_tokens).mut_slice(1LL);;
	};
	_1bc0a106b_Builder _4587_ident = static__1bc0a18b8_New(5LL);;
	if (((*(_44134_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		({
			auto except = _1bc0a204a_WriteStr(&_4587_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:461:4"));
			(except.result);
		});
		if ((_44134_tokens.len() == 1LL)) {
			_1a85cda52_pushErr(_self_, _44134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_44134_tokens).mut_slice(1LL);;
	};
	if (((*(_44134_tokens[0LL]))._field_Id == static_cast<jule::U32>(24LLU))) {
		({
			auto except = _1bc0a204a_WriteStr(&_4587_ident, static_cast<jule::Str>(jule::Str::lit("self", 4)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:470:4"));
			(except.result);
		});
		(*_4467_param.alloc)._field_Token=_44134_tokens[0LL];
		if ((_44134_tokens.len() != 1LL)) {
			_1a85cda52_pushErr(_self_, _44134_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4467_param.alloc)._field_Ident=_1bc0a28ca_Str(&_4587_ident);
	return _4467_param;;
}



inline void _1a85d27c0_paramTypeBegin(_1a85cd06d_parser* _self_, jule::Ptr<_1a79895e5_ParamDecl>* _48135_param, jule::I32* _48164_i, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _48173_tokens) {
	for (; ((*(_48164_i)) < (*(_48173_tokens)).len()); ((*(_48164_i)))++) {
		{
			jule::Ptr<_1a79633b0_Token> _4834_token = (*(_48173_tokens))[(*(_48164_i))];;
			if (((*(_4834_token))._field_Id != static_cast<jule::U32>(39LLU))) {
				return;;
			};
			if ((*((*(_48135_param))))._field_Variadic) {
				_1a85cda52_pushErr(_self_, _4834_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_1acd6448c;
			};
			(*((*(_48135_param))))._field_Variadic=true;
		}
	_iter_next_1acd6448c:;
	}
	_iter_end_1acd6448c:;;
}



inline void _1a85d2b33_buildParamType(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a79895e5_ParamDecl>* _49636_param, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _49665_tokens) {
	jule::I32 _4977_i = 0LL;;
	_1a85d27c0_paramTypeBegin(_self_.ptr(), _49636_param, &(_4977_i), _49665_tokens);
	if ((_4977_i >= (*(_49665_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType(_self_, _49665_tokens, (&(_4977_i)), true);
		(*((*(_49636_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_4977_i < (*(_49665_tokens)).len())) {
		_1a85cda52_pushErr(_self_, (*(_49665_tokens))[_4977_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a85d2e96_buildParamBody(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a79895e5_ParamDecl>* _50936_param, jule::Slice<jule::Ptr<_1a79633b0_Token>> _50964_tokens) {
	jule::Ptr<_1a79633b0_Token> _5107_tok = _50964_tokens[0LL];;
	if ((_50964_tokens.len() == 1LL)) {
		(*((*(_50936_param))))._field_Ident=(*(_5107_tok))._field_Kind;
		return;;
	} else if ((_50964_tokens.len() < 3LL)) {
		_1a85cda52_pushErr(_self_.ptr(), _5107_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_50964_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
		(*((*(_50936_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1a85d2b33_buildParamType(_self_, _50936_param, &(_50964_tokens));
		return;;
	};
	(*((*(_50936_param))))._field_Ident=(*(_5107_tok))._field_Kind;
	(_50964_tokens).mut_slice(2LL);;
	_1a85d2b33_buildParamType(_self_, _50936_param, &(_50964_tokens));
}



inline jule::Ptr<_1a79895e5_ParamDecl> _1a85d32d7_buildParam(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _52931_tokens) {
	jule::Ptr<_1a79895e5_ParamDecl> _5307_param = jule::new_ptr<_1a79895e5_ParamDecl>(_1a79895e5_ParamDecl{._field_Token=_52931_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5307_param))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_5307_param.alloc)._field_Mutable=true;
		if ((_52931_tokens.len() == 1LL)) {
			_1a85cda52_pushErr(_self_.ptr(), _52931_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_52931_tokens).mut_slice(1LL);;
		(*_5307_param.alloc)._field_Token=_52931_tokens[0LL];
	};
	if ((_52931_tokens.len() >= 3LL)) {
		if (((*((*(_5307_param))._field_Token))._field_Id == static_cast<jule::U32>(65LLU))) {
			if ((_52931_tokens.len() == 1LL)) {
				_1a85cda52_pushErr(_self_.ptr(), _52931_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_52931_tokens[1LL]))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_52931_tokens[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
				(*_5307_param.alloc)._field_Reference=true;
				(_52931_tokens).mut_slice(1LL);;
				(*_5307_param.alloc)._field_Token=_52931_tokens[0LL];
			};
		};
	};
	if (((*((*(_5307_param))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		(*_5307_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1a85d2b33_buildParamType(_self_, &(_5307_param), &(_52931_tokens));
	} else {
		_1a85d2e96_buildParamBody(_self_, &(_5307_param), _52931_tokens);
	};
	return _5307_param;;
}



inline void _1a85d3590_checkParams(_1a85cd06d_parser* _self_, jule::Slice<jule::Ptr<_1a79895e5_ParamDecl>>* _57232_params) {
	{
		auto expr = _57232_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd74964:;
		if (it != expr_end) {
			jule::Ptr<_1a79895e5_ParamDecl> _57315_param = *it;
			{
				if ((_1a798999c_IsSelf(_57315_param.ptr()) || ((*(_57315_param))._field_Kind != nullptr))) {
					goto _iter_next_1acd74964;
				};
				if (((*(_57315_param))._field_Token == nullptr)) {
					_1a85cda52_pushErr(_self_, (*_57315_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*(_57315_param))._field_Kind=jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=(*_57315_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a79793b5_IdentTypeDecl>(_1a79793b5_IdentTypeDecl{._field_Token=(*_57315_param.alloc)._field_Token, ._field_Ident=(*((*_57315_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>(nullptr)}), &__jule_any_type78)});
					(*_57315_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_1acd74964:;
			++it;
			goto _iter_begin_1acd74964;
		}
		_iter_end_1acd74964:;
	};
}



inline jule::Slice<jule::Ptr<_1a79895e5_ParamDecl>> _1a85d398b_buildParams(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _59233_tokens, jule::Bool _59258_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _5937_parts;
	jule::Slice<_1bc0b03aa_Log> _59314_errs;
	({
		__jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a85cbe90_parts(_59233_tokens, static_cast<jule::U32>(5LLU), true);
		_5937_parts = __jule_assign_result.__jule_result_arg0;
		_59314_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_59314_errs);
	if ((_5937_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a79895e5_ParamDecl>> _59911_params = nullptr;;
	if ((_59258_method && (_5937_parts.len() > 0LL))) {
		jule::Ptr<_1a79895e5_ParamDecl> _6018_param = _1a85d23a2_buildSelfParam(_self_, _5937_parts[0LL]);;
		if (((_6018_param != nullptr) && _1a798999c_IsSelf(_6018_param))) {
			{ jule::Slice<jule::Ptr<_1a79895e5_ParamDecl>> &__jule_push_dest = _59911_params; __jule_push_dest.push(_6018_param); };
			(_5937_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_5937_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd7a96a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _60815_part = *it;
			{
				if ((_60815_part.len() == 0LL)) {
					goto _iter_next_1acd7a96a;
				};
				jule::Ptr<_1a79895e5_ParamDecl> _6128_param = _1a85d32d7_buildParam(_self_, _60815_part);;
				if ((_6128_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1a79895e5_ParamDecl>> &__jule_push_dest = _59911_params; __jule_push_dest.push(_6128_param); };
				};
			}
			_iter_next_1acd7a96a:;
			++it;
			goto _iter_begin_1acd7a96a;
		}
		_iter_end_1acd7a96a:;
	};
	_1a85d3590_checkParams(_self_, &(_59911_params));
	return _59911_params;;
}



inline __jule_tuple_x_1a797bb9d_RetTypeDecl__jule_tuple_bool _1a85d3d87_buildMultiRetType(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _62239_tokens, jule::I32* _62269_i) {
	__jule_tuple_x_1a797bb9d_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a797bb9d_RetTypeDecl>(_1a797bb9d_RetTypeDecl{._field_Kind=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1a79633b0_Token>>(nullptr)});
	((*(_62269_i)))++;
	if (((*(_62269_i)) >= (*(_62239_tokens)).len())) {
		((*(_62269_i)))--;
		({
			__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType(_self_, _62239_tokens, _62269_i, false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_62269_i)))--;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _6327_rangeTokens = _1a85cb720_range(_62269_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _62239_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _6347_parts;
	jule::Slice<_1bc0b03aa_Log> _63414_errs;
	({
		__jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a85cbe90_parts(&(_6327_rangeTokens), static_cast<jule::U32>(5LLU), true);
		_6347_parts = __jule_assign_result.__jule_result_arg0;
		_63414_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_63414_errs);
	if ((_6347_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> _6407_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>::alloc(0LL, _6347_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7978caa_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a79633b0_Token>>::alloc(0LL, _6347_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a79633b0_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6347_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd81e7c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _64215_part = *it;
			{
				if ((_64215_part.len() == 0LL)) {
					goto _iter_next_1acd81e7c;
				};
				jule::Ptr<_1a79633b0_Token> _6468_token = _64215_part[0LL];;
				jule::I32 _6478_offset = 0LL;;
				if ((_64215_part.len() > 1LL)) {
					_6468_token=_64215_part[1LL];
					if (((*(_6468_token))._field_Id == static_cast<jule::U32>(8LLU))) {
						_6478_offset=2LL;
						if ((_64215_part.len() < 3LL)) {
							_1a85cda52_pushErr(_self_, _6468_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_1acd81e7c;
						};
					};
				};
				_6468_token=_64215_part[0LL];
				if ((_6478_offset != 2LL)) {
					jule::Ptr<_1a79633b0_Token> _6639_newToken = jule::new_ptr<_1a79633b0_Token>((*(_6468_token)));;
					(*_6639_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a79633b0_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6639_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a79633b0_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6468_token; __jule_collection; }));
				};
				jule::Ptr<_1a7978caa_TypeDecl> _6708_tk;
				({
					__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType(_self_, &(_64215_part), (&(_6478_offset)), true);
					_6708_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6478_offset < _64215_part.len())) {
					_1a85cda52_pushErr(_self_, _64215_part[_6478_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> &__jule_push_dest = _6407_types; __jule_push_dest.push(_6708_tk); };
			}
			_iter_next_1acd81e7c:;
			++it;
			goto _iter_begin_1acd81e7c;
		}
		_iter_end_1acd81e7c:;
	};
	if ((_6407_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=(*(_62239_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1a797a4d7_TupleTypeDecl>(_1a797a4d7_TupleTypeDecl{._field_Types=_6407_types}), &__jule_any_type77)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6407_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a797bb9d_RetTypeDecl__jule_tuple_bool _1a85d4283_buildRetType(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _69334_tokens, jule::I32* _69364_i) {
	__jule_tuple_x_1a797bb9d_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a797bb9d_RetTypeDecl>(_1a797bb9d_RetTypeDecl{._field_Kind=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1a79633b0_Token>>(nullptr)});
	if (((*(_69364_i)) >= (*(_69334_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a79633b0_Token> _6997_token = (*(_69334_tokens))[(*(_69364_i))];;
	{
		auto &_match_expr{ (*(_6997_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1acd8b063:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1acd8b0c9:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1acd8b140:;
			{
				if ((((*(_69364_i)) + 1LL) >= (*(_69334_tokens)).len())) {
					_1a85cda52_pushErr(_self_.ptr(), _6997_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_69364_i)))++;
				_6997_token=(*(_69334_tokens))[(*(_69364_i))];
				{
					auto &_match_expr{ (*(_6997_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1acd8ca8c:;
						{
							({
								__jule_tuple_x_1a797bb9d_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a85d3d87_buildMultiRetType(_self_, _69334_tokens, _69364_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1acd8d0a9:;
						{
							_1a85cda52_pushErr(_self_.ptr(), _6997_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1acd8d010:;
				};
				({
					__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType(_self_, _69334_tokens, _69364_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1acd8aeec:;
	};
	((*(_69364_i)))++;
	_1a85cda52_pushErr(_self_.ptr(), _6997_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1a798aa47_FnDecl> _1a85d4739_buildFnPrototype(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _73238_tokens, jule::I32* _73268_i, jule::Bool _73276_method) {
	jule::Ptr<_1a798aa47_FnDecl> _7337_f = jule::new_ptr<_1a798aa47_FnDecl>(_1a798aa47_FnDecl{._field_Token=(*(_73238_tokens))[(*(_73268_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1a797bb9d_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a79895e5_ParamDecl>>(nullptr)});;
	if (((*((*(_7337_f))._field_Token))._field_Id == static_cast<jule::U32>(34LLU))) {
		(*_7337_f.alloc)._field_Statically=true;
		((*(_73268_i)))++;
		if (((*(_73268_i)) >= (*(_73238_tokens)).len())) {
			_1a85cda52_pushErr(_self_.ptr(), (*_7337_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7337_f.alloc)._field_Token=(*(_73238_tokens))[(*(_73268_i))];
	};
	if (((*((*(_7337_f))._field_Token))._field_Id == static_cast<jule::U32>(31LLU))) {
		(*_7337_f.alloc)._field_Unsafety=true;
		((*(_73268_i)))++;
		if (((*(_73268_i)) >= (*(_73238_tokens)).len())) {
			_1a85cda52_pushErr(_self_.ptr(), (*_7337_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7337_f.alloc)._field_Token=(*(_73238_tokens))[(*(_73268_i))];
	};
	((*(_73268_i)))++;
	if (((*(_73268_i)) >= (*(_73238_tokens)).len())) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_7337_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a79633b0_Token> _7663_tok = (*(_73238_tokens))[(*(_73268_i))];;
	if (((*(_7663_tok))._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_73268_i)))++;
		if (((*(_73268_i)) >= (*(_73238_tokens)).len())) {
			_1a85cda52_pushErr(_self_.ptr(), (*(_7337_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_7337_f))._field_Ident=(*_7663_tok.alloc)._field_Kind;
	} else {
		(*(_7337_f))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_1a79633b0_Token> _7783_errorToken = (*(_73238_tokens))[(*(_73268_i))];;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _7797_genericsTokens = _1a85cb720_range(_73268_i, static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _73238_tokens);;
	if ((_7797_genericsTokens != nullptr)) {
		(*(_7337_f))._field_Generics=_1a85d2061_buildGenerics(_self_, &(_7797_genericsTokens), &(_7783_errorToken));
	};
	if (((*((*(_73238_tokens))[(*(_73268_i))]))._field_Id != static_cast<jule::U32>(74LLU))) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_73238_tokens))[(*(_73268_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _7897_paramsToks = _1a85cb720_range(_73268_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _73238_tokens);;
	if ((_7897_paramsToks.len() > 0LL)) {
		(*(_7337_f))._field_Params=_1a85d398b_buildParams(_self_, &(_7897_paramsToks), _73276_method);
	};
	if (((*(_73268_i)) < (*(_73238_tokens)).len())) {
		jule::Ptr<_1a79633b0_Token> _7954_token = (*(_73238_tokens))[(*(_73268_i))];;
		if (((*(_7954_token))._field_Id == static_cast<jule::U32>(68LLU))) {
			(*(_7337_f))._field_Exceptional=true;
			((*(_73268_i)))++;
		};
	};
	(*(_7337_f))._field_Public=_1a7b78d56_IsPub((*_7337_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1a797bb9d_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a85d4283_buildRetType(_self_, _73238_tokens, _73268_i);
		(*_7337_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7337_f;;
}



inline jule::Ptr<_1a798aa47_FnDecl> _1a85d4be0_buildFn(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _80929_tokens, jule::Bool _80954_method, jule::Bool _80968_prototype) {
	jule::I32 _8107_i = 0LL;;
	jule::Ptr<_1a798aa47_FnDecl> _8117_f = _1a85d4739_buildFnPrototype(_self_, _80929_tokens, &(_8107_i), _80954_method);;
	if (_80968_prototype) {
		if ((_8107_i < (*(_80929_tokens)).len())) {
			_1a85cda52_pushErr(_self_, (*(_80929_tokens))[(_8107_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8117_f;;
	} else if ((_8117_f == nullptr)) {
		return _8117_f;;
	};
	if ((_8107_i >= (*(_80929_tokens)).len())) {
		_1a85cd39d_stop(_self_);
		_1a85cda52_pushErr(_self_, (*(_8117_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _8277_blockTokens = _1a85cb720_range(&(_8107_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _80929_tokens);;
	if ((_8277_blockTokens != nullptr)) {
		(*(_8117_f))._field_Scope=_1a85cebeb_buildScope(_self_, &(_8277_blockTokens), (*(_80929_tokens))[(_8107_i - 1LL)]);
		(*((*_8117_f.alloc)._field_Scope))._field_Unsafety=(*_8117_f.alloc)._field_Unsafety;
		if ((_8107_i < (*(_80929_tokens)).len())) {
			_1a85cda52_pushErr(_self_, (*(_80929_tokens))[_8107_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_1a85cd39d_stop(_self_);
		_1a85cda52_pushErr(_self_, (*(_8117_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8117_f;;
}



inline void _1a85d5053_buildBindUseDecl(_1a85cd06d_parser* _self_, jule::Ptr<_1a7991cd4_UseDecl>* _84337_decl, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _84363_tokens) {
	if (((*(_84363_tokens)).len() > 1LL)) {
		_1a85cda52_pushErr(_self_, (*(_84363_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a79633b0_Token> _8477_token = (*(_84363_tokens))[0LL];;
	if (((((*(_8477_token))._field_Id != static_cast<jule::U32>(4LLU)) || (!(_1a7964515_IsStr((*(_8477_token))._field_Kind)))) || _1a796479b_IsRawStr((*(_8477_token))._field_Kind))) {
		_1a85cda52_pushErr(_self_, _8477_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_84337_decl))))._field_Binded=true;
	(*((*(_84337_decl))))._field_Path=_8477_token;
}



inline void _1a85d53b6_parseUseDecl(_1a85cd06d_parser* _self_, jule::Ptr<_1a7991cd4_UseDecl>* _85633_decl, jule::Slice<jule::Ptr<_1a79633b0_Token>> _85658_tokens) {
	if ((*((*(_85633_decl))))._field_Binded) {
		_1a85d5053_buildBindUseDecl(_self_, _85633_decl, &(_85658_tokens));
		return;;
	};
	jule::Ptr<_1a79633b0_Token> _8627_token = _85658_tokens[0LL];;
	if ((((((*(_8627_token))._field_Id != static_cast<jule::U32>(1LLU)) && ((*_8627_token.alloc)._field_Id != static_cast<jule::U32>(4LLU))) && (!(_1a7964515_IsStr((*_8627_token.alloc)._field_Kind)))) || _1a796479b_IsRawStr((*(_8627_token))._field_Kind))) {
		_1a85cda52_pushErr(_self_, _8627_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_8627_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*((*(_85633_decl))))._field_Alias=_8627_token;
		(_85658_tokens).mut_slice(1LL);;
		if ((_85658_tokens.len() == 0LL)) {
			_1a85cda52_pushErr(_self_, _8627_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
		_8627_token=_85658_tokens[0LL];
		if ((((*(_8627_token))._field_Id != static_cast<jule::U32>(4LLU)) || (!(_1a7964515_IsStr((*(_8627_token))._field_Kind))))) {
			_1a85cda52_pushErr(_self_, _8627_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
	};
	(*((*(_85633_decl))))._field_Path=_8627_token;
}



inline jule::Ptr<_1a7991cd4_UseDecl> _1a85d57b2_buildUseDecl(_1a85cd06d_parser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _88632_tokens, jule::Bool _88657_binded) {
	jule::Ptr<_1a7991cd4_UseDecl> _8877_decl = jule::new_ptr<_1a7991cd4_UseDecl>(_1a7991cd4_UseDecl{._field_Token=_88632_tokens[0LL], ._field_Path=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Alias=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Binded=_88657_binded});;
	if ((_88632_tokens.len() < 2LL)) {
		_1a85cda52_pushErr(_self_, (*(_8877_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_88632_tokens).mut_slice(1LL);;
	_1a85d53b6_parseUseDecl(_self_, &(_8877_decl), _88632_tokens);
	return _8877_decl;;
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85d5bad_buildTypeEnumItemKind(jule::Ptr<_1a85cd06d_parser> _self_, jule::I32* _90043_i, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _90056_tokens) {
	jule::I32 _9017_braceN = 0LL;;
	jule::I32 _9023_exprStart = (*(_90043_i));;
	for (; ((*(_90043_i)) < (*(_90056_tokens)).len()); ((*(_90043_i)))++) {
		{
			jule::Ptr<_1a79633b0_Token> _9044_t = (*(_90056_tokens))[(*(_90043_i))];;
			{
				auto &_match_expr{ (*(_9044_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1acdb262d:;
					{
						(_9017_braceN)++;
						goto _iter_next_1acdb1ab1;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1acdb295d:;
					{
						(_9017_braceN)--;
					}
				}
				_match_end_1acdb26a5:;
			};
			if ((_9017_braceN > 0LL)) {
				goto _iter_next_1acdb1ab1;
			};
			if ((((*(_9044_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_90043_i)) + 1LL) >= (*(_90056_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a79633b0_Token>> _92013_kindTokens = nullptr;;
				if (((*(_9044_t))._field_Id == static_cast<jule::U32>(5LLU))) {
					_92013_kindTokens=(*(_90056_tokens)).slice(_9023_exprStart, (*(_90043_i)));
				} else {
					_92013_kindTokens=(*(_90056_tokens)).slice(_9023_exprStart);
				};
				jule::I32 _9269_j = 0LL;;
				jule::Ptr<_1a7978caa_TypeDecl> _9279_kind;
				({
					__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType(_self_, &(_92013_kindTokens), (&(_9269_j)), true);
					_9279_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_9269_j < _92013_kindTokens.len())) {
					_1a85cda52_pushErr(_self_.ptr(), _92013_kindTokens[_9269_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _9279_kind;;
			};
		}
	_iter_next_1acdb1ab1:;
	}
	_iter_end_1acdb1ab1:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a7993676_TypeEnumItemDecl>> _1a85d5eee_buildTypeEnumItems(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _93740_tokens) {
	jule::Slice<jule::Ptr<_1a7993676_TypeEnumItemDecl>> _9387_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7993676_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7993676_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _9397_i = 0LL;;
	for (; (_9397_i < (*(_93740_tokens)).len()); (_9397_i)++) {
		{
			jule::Ptr<_1a79633b0_Token> _9418_t = (*(_93740_tokens))[_9397_i];;
			jule::Ptr<_1a7993676_TypeEnumItemDecl> _9428_item = jule::new_ptr<_1a7993676_TypeEnumItemDecl>(_1a7993676_TypeEnumItemDecl{._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1a7978caa_TypeDecl>(nullptr)});;
			(*_9428_item.alloc)._field_Token=_9418_t;
			if ((((*((*_9428_item.alloc)._field_Token))._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_93740_tokens)).len() - _9397_i) > 2LL))) {
				_9418_t=(*(_93740_tokens))[(_9397_i + 1LL)];
				if (((*(_9418_t))._field_Id == static_cast<jule::U32>(8LLU))) {
					(*_9428_item.alloc)._field_Ident=(*(*(_9428_item))._field_Token.alloc)._field_Kind;
					_9397_i+=2LL;
					if (((_9397_i >= (*(_93740_tokens)).len()) || ((*((*(_93740_tokens))[_9397_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
						_1a85cda52_pushErr(_self_.ptr(), _9418_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_1acdb76dd;
					};
				};
			};
			(*_9428_item.alloc)._field_Kind=_1a85d5bad_buildTypeEnumItemKind(_self_, &(_9397_i), _93740_tokens);
			{ jule::Slice<jule::Ptr<_1a7993676_TypeEnumItemDecl>> &__jule_push_dest = _9387_items; __jule_push_dest.push(_9428_item); };
		}
	_iter_next_1acdb76dd:;
	}
	_iter_end_1acdb76dd:;;
	return _9387_items;;
}



inline jule::Ptr<_1a7993cd6_TypeEnumDecl> _1a85d6340_buildTypeEnumDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _96139_tokens) {
	jule::I32 _9627_i = 1LL;;
	jule::Ptr<_1a7993cd6_TypeEnumDecl> _9637_e = jule::new_ptr<_1a7993cd6_TypeEnumDecl>(_1a7993cd6_TypeEnumDecl{._field_Token=(*(_96139_tokens))[_9627_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1a7993676_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1a79633b0_Token>(nullptr)});;
	if (((*((*(_9637_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a85cda52_pushErr(_self_.ptr(), (*_9637_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_9637_e))._field_Ident=(*((*_9637_e.alloc)._field_Token))._field_Kind;
	_9627_i+=3LL;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _9737_itemTokens = _1a85cb720_range(&(_9627_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _96139_tokens);;
	if ((_9737_itemTokens == nullptr)) {
		_1a85cd39d_stop(_self_.ptr());
		_1a85cda52_pushErr(_self_, (*_9637_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _9637_e;;
	} else if ((_9627_i < (*(_96139_tokens)).len())) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_96139_tokens))[_9627_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_9637_e.alloc)._field_Public=_1a7b78d56_IsPub((*_9637_e.alloc)._field_Ident);
	(*_9637_e.alloc)._field_End=(*(_96139_tokens))[(_9627_i - 1LL)];
	(*_9637_e.alloc)._field_Items=_1a85d5eee_buildTypeEnumItems(_self_, &(_9737_itemTokens));
	return _9637_e;;
}



inline jule::Ptr<_1a797d0de_Expr> _1a85d673b_buildEnumItemExpr(jule::Ptr<_1a85cd06d_parser> _self_, jule::I32* _98839_i, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _98852_tokens) {
	jule::I32 _9897_braceN = 0LL;;
	jule::I32 _9903_exprStart = (*(_98839_i));;
	for (; ((*(_98839_i)) < (*(_98852_tokens)).len()); ((*(_98839_i)))++) {
		{
			jule::Ptr<_1a79633b0_Token> _9924_t = (*(_98852_tokens))[(*(_98839_i))];;
			{
				auto &_match_expr{ (*(_9924_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1acdc5740:;
					{
						(_9897_braceN)++;
						goto _iter_next_1acdc4bc3;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1acdc5a70:;
					{
						(_9897_braceN)--;
					}
				}
				_match_end_1acdc57b7:;
			};
			if ((_9897_braceN > 0LL)) {
				goto _iter_next_1acdc4bc3;
			};
			if ((((*(_9924_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_98839_i)) + 1LL) >= (*(_98852_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a79633b0_Token>> _100813_exprTokens = nullptr;;
				if (((*(_9924_t))._field_Id == static_cast<jule::U32>(5LLU))) {
					_100813_exprTokens=(*(_98852_tokens)).slice(_9903_exprStart, (*(_98839_i)));
				} else {
					_100813_exprTokens=(*(_98852_tokens)).slice(_9903_exprStart);
				};
				return _1a85ce206_buildExpr(_self_, &(_100813_exprTokens));;
			};
		}
	_iter_next_1acdc4bc3:;
	}
	_iter_end_1acdc4bc3:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a799228a_EnumItemDecl>> _1a85d6a7c_buildEnumItems(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _102036_tokens) {
	jule::Slice<jule::Ptr<_1a799228a_EnumItemDecl>> _10217_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a799228a_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a799228a_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _10227_i = 0LL;;
	for (; (_10227_i < (*(_102036_tokens)).len()); (_10227_i)++) {
		{
			jule::Ptr<_1a79633b0_Token> _10248_t = (*(_102036_tokens))[_10227_i];;
			jule::Ptr<_1a799228a_EnumItemDecl> _10258_item = jule::new_ptr<_1a799228a_EnumItemDecl>(_1a799228a_EnumItemDecl{._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr)});;
			(*_10258_item.alloc)._field_Token=_10248_t;
			if (((*((*_10258_item.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
				_1a85cda52_pushErr(_self_.ptr(), (*_10258_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_10258_item.alloc)._field_Ident=(*((*_10258_item.alloc)._field_Token))._field_Kind;
			if ((((_10227_i + 1LL) >= (*(_102036_tokens)).len()) || ((*((*(_102036_tokens))[(_10227_i + 1LL)]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				if (((_10227_i + 1LL) < (*(_102036_tokens)).len())) {
					(_10227_i)++;
				};
				{ jule::Slice<jule::Ptr<_1a799228a_EnumItemDecl>> &__jule_push_dest = _10217_items; __jule_push_dest.push(_10258_item); };
				goto _iter_next_1acdc9414;
			};
			(_10227_i)++;
			_10248_t=(*(_102036_tokens))[_10227_i];
			(_10227_i)++;
			if (((*(_10248_t))._field_Id != static_cast<jule::U32>(8LLU))) {
				_1a85cda52_pushErr(_self_.ptr(), _10248_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_1acdc9414;
			};
			if (((_10227_i >= (*(_102036_tokens)).len()) || ((*((*(_102036_tokens))[_10227_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				_1a85cda52_pushErr(_self_.ptr(), _10248_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_1acdc9414;
			};
			(*_10258_item.alloc)._field_Expr=_1a85d673b_buildEnumItemExpr(_self_, &(_10227_i), _102036_tokens);
			{ jule::Slice<jule::Ptr<_1a799228a_EnumItemDecl>> &__jule_push_dest = _10217_items; __jule_push_dest.push(_10258_item); };
		}
	_iter_next_1acdc9414:;
	}
	_iter_end_1acdc9414:;;
	return _10217_items;;
}



inline jule::Ptr<_1a7992d4b_EnumDecl> _1a85d6dbd_buildEnumDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _105735_tokens) {
	if (((*(_105735_tokens)).len() < 3LL)) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_105735_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7992d4b_EnumDecl> _10627_e = jule::new_ptr<_1a7992d4b_EnumDecl>(_1a7992d4b_EnumDecl{._field_Token=(*(_105735_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1a799228a_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1a79633b0_Token>(nullptr)});;
	if (((*((*(_10627_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a85cda52_pushErr(_self_.ptr(), (*_10627_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_10627_e))._field_Ident=(*((*_10627_e.alloc)._field_Token))._field_Kind;
	jule::I32 _10707_i = 2LL;;
	if (((*((*(_105735_tokens))[_10707_i]))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_10707_i)++;
		if ((_10707_i >= (*(_105735_tokens)).len())) {
			_1a85cda52_pushErr(_self_.ptr(), (*(_105735_tokens))[(_10707_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _10627_e;;
		};
		({
			__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType(_self_, _105735_tokens, (&(_10707_i)), true);
			(*_10627_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_10707_i >= (*(_105735_tokens)).len())) {
			_1a85cd39d_stop(_self_.ptr());
			_1a85cda52_pushErr(_self_, (*_10627_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _10627_e;;
		};
	} else {
		(*_10627_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _10877_itemTokens = _1a85cb720_range(&(_10707_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _105735_tokens);;
	if ((_10877_itemTokens == nullptr)) {
		_1a85cd39d_stop(_self_.ptr());
		_1a85cda52_pushErr(_self_, (*_10627_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _10627_e;;
	} else if ((_10707_i < (*(_105735_tokens)).len())) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_105735_tokens))[_10707_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_10627_e.alloc)._field_Public=_1a7b78d56_IsPub((*_10627_e.alloc)._field_Ident);
	(*_10627_e.alloc)._field_End=(*(_105735_tokens))[(_10707_i - 1LL)];
	(*_10627_e.alloc)._field_Items=_1a85d6a7c_buildEnumItems(_self_, &(_10877_itemTokens));
	return _10627_e;;
}



inline jule::Any _1a85d720e_buildNodeEnumDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _110239_tokens) {
	if ((((*(_110239_tokens)).len() > 3LL) && ((*((*(_110239_tokens))[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
		if (((*((*(_110239_tokens))[3LL]))._field_Id == static_cast<jule::U32>(7LLU))) {
			return jule::Any(_1a85d6340_buildTypeEnumDecl(_self_, _110239_tokens), &__jule_any_type71);;
		};
	};
	return jule::Any(_1a85d6dbd_buildEnumDecl(_self_, _110239_tokens), &__jule_any_type70);;
}



inline jule::Ptr<_1a79940a0_FieldDecl> _1a85d7550_buildField(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _111131_tokens) {
	jule::Ptr<_1a79940a0_FieldDecl> _11127_f = jule::new_ptr<_1a79940a0_FieldDecl>(_1a79940a0_FieldDecl{._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1a797d0de_Expr>(nullptr)});;
	(*_11127_f.alloc)._field_Mutable=((*(_111131_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU));
	if ((*_11127_f.alloc)._field_Mutable) {
		if ((_111131_tokens.len() == 1LL)) {
			_1a85cda52_pushErr(_self_.ptr(), _111131_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_111131_tokens).mut_slice(1LL);;
	};
	(*_11127_f.alloc)._field_Token=_111131_tokens[0LL];
	if (((*((*_11127_f.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a85cda52_pushErr(_self_.ptr(), (*_11127_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_11127_f.alloc)._field_Ident=(*((*_11127_f.alloc)._field_Token))._field_Kind;
	if ((_111131_tokens.len() == 1LL)) {
		_1a85cda52_pushErr(_self_.ptr(), _111131_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_111131_tokens.len() < 3LL) || ((*(_111131_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU)))) {
		_1a85cda52_pushErr(_self_.ptr(), _111131_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_111131_tokens).mut_slice(2LL);;
	jule::I32 _11407_i = 0LL;;
	({
		__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType(_self_, &(_111131_tokens), (&(_11407_i)), true);
		(*_11127_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_11407_i < _111131_tokens.len())) {
		jule::Ptr<_1a79633b0_Token> _11434_token = _111131_tokens[_11407_i];;
		if (((*(_11434_token))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1a85cda52_pushErr(_self_.ptr(), _111131_tokens[_11407_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_11407_i)++;
		if ((_11407_i >= _111131_tokens.len())) {
			_1a85cda52_pushErr(_self_.ptr(), _11434_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_111131_tokens).mut_slice(_11407_i);;
		(*_11127_f.alloc)._field_Default=_1a85ce206_buildExpr(_self_, &(_111131_tokens));
	};
	(*_11127_f.alloc)._field_Public=_1a7b78d56_IsPub((*_11127_f.alloc)._field_Ident);
	return _11127_f;;
}



inline jule::Slice<jule::Ptr<_1a79940a0_FieldDecl>> _1a85d7891_buildStructDeclFields(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _116042_tokens) {
	jule::Slice<jule::Ptr<_1a79940a0_FieldDecl>> _116111_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a85ae4c2_stmt>> _11627_stmts = _1a85ae879_splitStmts(&(_116042_tokens));;
	{
		auto expr = &(_11627_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5d8e42:;
		if (it != expr_end) {
			jule::Ptr<_1a85ae4c2_stmt> _116315_stmt = *it;
			{
				_116042_tokens=(*(_116315_stmt))._field_tokens;
				jule::Ptr<_1a79940a0_FieldDecl> _11658_f = _1a85d7550_buildField(_self_, _116042_tokens);;
				{ jule::Slice<jule::Ptr<_1a79940a0_FieldDecl>> &__jule_push_dest = _116111_fields; __jule_push_dest.push(_11658_f); };
			}
			_iter_next_1ad5d8e42:;
			++it;
			goto _iter_begin_1ad5d8e42;
		}
		_iter_end_1ad5d8e42:;
	};
	return _116111_fields;;
}



inline jule::Ptr<_1a7994996_StructDecl> _1a85d7bd2_buildStructDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _117137_tokens) {
	if (((*(_117137_tokens)).len() < 3LL)) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_117137_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _11777_i = 1LL;;
	jule::Ptr<_1a7994996_StructDecl> _11787_s = jule::new_ptr<_1a7994996_StructDecl>(_1a7994996_StructDecl{._field_Token=(*(_117137_tokens))[_11777_i], ._field_End=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1a79940a0_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>(nullptr)});;
	if (((*((*(_11787_s))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a85cda52_pushErr(_self_.ptr(), (*_11787_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_11777_i)++;
	if ((_11777_i >= (*(_117137_tokens)).len())) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_117137_tokens))[_11777_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _11787_s;;
	};
	(*(_11787_s))._field_Ident=(*((*_11787_s.alloc)._field_Token))._field_Kind;
	jule::Ptr<_1a79633b0_Token> _11923_errorToken = (*(_117137_tokens))[_11777_i];;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _11937_genericsTokens = _1a85cb720_range(&(_11777_i), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _117137_tokens);;
	if ((_11937_genericsTokens != nullptr)) {
		(*_11787_s.alloc)._field_Generics=_1a85d2061_buildGenerics(_self_, &(_11937_genericsTokens), &(_11923_errorToken));
	};
	if ((_11777_i >= (*(_117137_tokens)).len())) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_117137_tokens))[(_11777_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11787_s;;
	};
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _12037_bodyTokens = _1a85cb720_range(&(_11777_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _117137_tokens);;
	if ((_12037_bodyTokens == nullptr)) {
		_1a85cd39d_stop(_self_.ptr());
		_1a85cda52_pushErr(_self_, (*_11787_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11787_s;;
	};
	if ((_11777_i < (*(_117137_tokens)).len())) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_117137_tokens))[_11777_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11787_s.alloc)._field_Public=_1a7b78d56_IsPub((*_11787_s.alloc)._field_Ident);
	(*_11787_s.alloc)._field_Fields=_1a85d7891_buildStructDeclFields(_self_, _12037_bodyTokens);
	(*_11787_s.alloc)._field_End=(*(_117137_tokens))[(_11777_i - 1LL)];
	return _11787_s;;
}



inline void _1a85d7e8a_checkMethodReceiver(_1a85cd06d_parser* _self_, jule::Ptr<_1a798aa47_FnDecl>* _121936_f) {
	if ((*((*(_121936_f))))._field_Statically) {
		if ((((*((*(_121936_f))))._field_Params.len() > 0LL) && _1a798999c_IsSelf((*((*(_121936_f))))._field_Params[0LL].ptr()))) {
			_1a85cda52_pushErr(_self_, (*((*(_121936_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_121936_f))))._field_Params.len() == 0LL)) {
		_1a85cda52_pushErr(_self_, (*((*(_121936_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a79895e5_ParamDecl> _12313_param = (*((*(_121936_f))))._field_Params[0LL];;
	if ((!(_1a798999c_IsSelf(_12313_param.ptr())))) {
		_1a85cda52_pushErr(_self_, (*((*(_121936_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a85d82ed_buildTraitBody(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a79951d3_TraitDecl>* _123836_t, jule::Slice<jule::Ptr<_1a79633b0_Token>> _123860_tokens) {
	jule::Slice<jule::Ptr<_1a85ae4c2_stmt>> _12397_stmts = _1a85ae879_splitStmts(&(_123860_tokens));;
	{
		auto expr = &(_12397_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5ea45e:;
		if (it != expr_end) {
			jule::Ptr<_1a85ae4c2_stmt> _124015_stmt = *it;
			{
				_123860_tokens=(*(_124015_stmt))._field_tokens;
				if ((_123860_tokens.len() == 0LL)) {
					goto _iter_next_1ad5ea45e;
				};
				{
					auto &_match_expr{ (*(_123860_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(29LLU)) {
						_case_begin_1ad5ee111:;
						{
							jule::Ptr<_1a798aa47_FnDecl> _12479_f = _1a85d4be0_buildFn(_self_, &(_123860_tokens), true, true);;
							if ((_12479_f == nullptr)) {
								goto _match_end_1ad5eb7b2;
							};
							_1a85d7e8a_checkMethodReceiver(_self_, &(_12479_f));
							if (((*(_12479_f))._field_Generics.len() > 0LL)) {
								_1a85cda52_pushErr(_self_, (*_12479_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a798aa47_FnDecl>> &__jule_push_dest = (*((*(_123836_t))))._field_Methods; __jule_push_dest.push(_12479_f); };
						}
					}
					else {
						_case_begin_1ad5eb0ca:;
						{
							jule::I32 _12579_i = 0LL;;
							jule::Ptr<_1a7978caa_TypeDecl> _12589_ti;
							jule::Bool _125813_ok;
							({
								__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType(_self_, &(_123860_tokens), (&(_12579_i)), true);
								_12589_ti = __jule_assign_result.__jule_result_arg0;
								_125813_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_125813_ok))) {
								goto _match_end_1ad5eb7b2;
							};
							if ((_12579_i < _123860_tokens.len())) {
								_1a85cda52_pushErr(_self_.ptr(), _123860_tokens[_12579_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> &__jule_push_dest = (*((*(_123836_t))))._field_Inherits; __jule_push_dest.push(_12589_ti); };
						}
					}
					_match_end_1ad5eb7b2:;
				};
			}
			_iter_next_1ad5ea45e:;
			++it;
			goto _iter_begin_1ad5ea45e;
		}
		_iter_end_1ad5ea45e:;
	};
}



inline jule::Ptr<_1a79951d3_TraitDecl> _1a85d863e_buildTraitDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _127036_tokens) {
	if (((*(_127036_tokens)).len() < 3LL)) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_127036_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a79951d3_TraitDecl> _12757_t = jule::new_ptr<_1a79951d3_TraitDecl>(_1a79951d3_TraitDecl{._field_Token=(*(_127036_tokens))[1LL], ._field_End=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a798aa47_FnDecl>>(nullptr)});;
	if (((*((*(_12757_t))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a85cda52_pushErr(_self_.ptr(), (*_12757_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_12757_t))._field_Ident=(*((*_12757_t.alloc)._field_Token))._field_Kind;
	jule::I32 _12837_i = 2LL;;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _12847_bodyTokens = _1a85cb720_range(&(_12837_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _127036_tokens);;
	if ((_12847_bodyTokens == nullptr)) {
		_1a85cd39d_stop(_self_.ptr());
		_1a85cda52_pushErr(_self_, (*_12757_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_12837_i < (*(_127036_tokens)).len())) {
		_1a85cda52_pushErr(_self_.ptr(), (*(_127036_tokens))[_12837_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12757_t.alloc)._field_Public=_1a7b78d56_IsPub((*_12757_t.alloc)._field_Ident);
	_1a85d82ed_buildTraitBody(_self_, &(_12757_t), _12847_bodyTokens);
	(*_12757_t.alloc)._field_End=(*(_127036_tokens))[(_12837_i - 1LL)];
	return _12757_t;;
}



inline jule::Ptr<_1a798aa47_FnDecl> _1a85d8980_buildBindFn(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _130032_tokens) {
	(_130032_tokens).mut_slice(1LL);;
	jule::Ptr<_1a798aa47_FnDecl> _13027_f = _1a85d4be0_buildFn(_self_, &(_130032_tokens), false, true);;
	if ((_13027_f != nullptr)) {
		(*_13027_f.alloc)._field_Public=false;
		(*_13027_f.alloc)._field_Binded=true;
	};
	return _13027_f;;
}



inline jule::Ptr<_1a798bc02_VarDecl> _1a85d8cc1_buildBindVar(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _131033_tokens) {
	(_131033_tokens).mut_slice(1LL);;
	jule::Ptr<_1a798bc02_VarDecl> _13127_v = _1a85d1824_buildVar(_self_, _131033_tokens);;
	if ((_13127_v != nullptr)) {
		(*_13127_v.alloc)._field_Public=false;
		(*_13127_v.alloc)._field_Binded=true;
		if (((*_13127_v.alloc)._field_Expr != nullptr)) {
			_1a85cda52_pushErr(_self_, (*_13127_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _13127_v;;
}



inline jule::Ptr<_1a7994996_StructDecl> _1a85d9112_buildBindStruct(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _132336_tokens) {
	(_132336_tokens).mut_slice(1LL);;
	jule::Ptr<_1a7994996_StructDecl> _13257_s = _1a85d7bd2_buildStructDecl(_self_, &(_132336_tokens));;
	if ((_13257_s != nullptr)) {
		(*_13257_s.alloc)._field_Public=false;
		{
			auto expr = &((*_13257_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad60d7c4:;
			if (it != expr_end) {
				jule::Ptr<_1a79940a0_FieldDecl> _132816_f = *it;
				{
					(*(_132816_f))._field_Public=true;
				}
				_iter_next_1ad60d7c4:;
				++it;
				goto _iter_begin_1ad60d7c4;
			}
			_iter_end_1ad60d7c4:;
		};
		(*_13257_s.alloc)._field_Binded=true;
	};
	return _13257_s;;
}



inline jule::Ptr<_1a7990981_TypeAliasDecl> _1a85d9453_buildBindTypeAlias(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _133739_tokens) {
	(_133739_tokens).mut_slice(1LL);;
	jule::Ptr<_1a7990981_TypeAliasDecl> _13397_t = _1a85d0999_buildTypeAliasDecl(_self_, &(_133739_tokens));;
	if ((_13397_t != nullptr)) {
		(*_13397_t.alloc)._field_Public=false;
		(*_13397_t.alloc)._field_Binded=true;
	};
	return _13397_t;;
}



inline jule::Ptr<_1a7991cd4_UseDecl> _1a85d9794_buildBindUse(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _134733_tokens) {
	if ((_134733_tokens.len() == 1LL)) {
		_1a85cda52_pushErr(_self_.ptr(), _134733_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_134733_tokens).mut_slice(1LL);;
	;
	return _1a85d57b2_buildUseDecl(_self_.ptr(), _134733_tokens, true);;
}



inline jule::Any _1a85d9ad5_buildBind(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _135831_tokens) {
	jule::Ptr<_1a79633b0_Token> _13597_token = (*(_135831_tokens))[0LL];;
	if (((*(_135831_tokens)).len() == 1LL)) {
		_1a85cda52_pushErr(_self_.ptr(), _13597_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_13597_token=(*(_135831_tokens))[1LL];
	{
		auto &_match_expr{ (*(_13597_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1ad614720:;
			{
				return jule::Any(_1a85d8980_buildBindFn(_self_, (*(_135831_tokens))), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1ad614786:;
			{
				return jule::Any(_1a85d8cc1_buildBindVar(_self_, (*(_135831_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1ad614379:;
			{
				return jule::Any(_1a85d9112_buildBindStruct(_self_, (*(_135831_tokens))), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ad6143e0:;
			{
				return jule::Any(_1a85d9453_buildBindTypeAlias(_self_, (*(_135831_tokens))), &__jule_any_type51);;
			}
		}
		else {
			_case_begin_1ad613653:;
			{
				_1a85cda52_pushErr(_self_, _13597_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad614313:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a798aa47_FnDecl> _1a85d9e26_getMethod(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _138231_tokens) {
	jule::I32 _13837_i = 0LL;;
	jule::Ptr<_1a79633b0_Token> _13847_token = (*(_138231_tokens))[_13837_i];;
	if (((*(_13847_token))._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_13837_i + 1LL) >= (*(_138231_tokens)).len())) {
			_1a85cda52_pushErr(_self_.ptr(), _13847_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13837_i)++;
		_13847_token=(*(_138231_tokens))[_13837_i];
	};
	if (((*(_13847_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		if (((_13837_i + 1LL) >= (*(_138231_tokens)).len())) {
			_1a85cda52_pushErr(_self_.ptr(), _13847_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13837_i)++;
		_13847_token=(*(_138231_tokens))[_13837_i];
	};
	if (((*(_13847_token))._field_Id != static_cast<jule::U32>(29LLU))) {
		_1a85cda52_pushErr(_self_.ptr(), _13847_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a85d4be0_buildFn(_self_, _138231_tokens, true, false);;
}



inline void _1a85da289_parseImplBody(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a7995843_Impl>* _141135_ipl, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _141157_tokens) {
	jule::Slice<jule::Ptr<_1a85ae4c2_stmt>> _14127_stmts = _1a85ae879_splitStmts(_141157_tokens);;
	{
		auto expr = &(_14127_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad61c3e8:;
		if (it != expr_end) {
			jule::Ptr<_1a85ae4c2_stmt> _141315_stmt = *it;
			{
				(*(_141157_tokens))=(*(_141315_stmt))._field_tokens;
				jule::Ptr<_1a79633b0_Token> _14158_token = (*(_141157_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_14158_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1ad61d4a4:;
						{
							_1a85ce800_pushDirective(_self_.ptr(), _1a85ce547_buildDirective(_self_, (*(_141157_tokens))));
							goto _iter_next_1ad61c3e8;
						}
					}
					_match_end_1ad61d6e6:;
				};
				{
					auto &_match_expr{ (*(_14158_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(6LLU)) {
						_case_begin_1ad61de11:;
						{
							jule::Ptr<_1a798bc02_VarDecl> _14249_v = _1a85d1824_buildVar(_self_, (*(_141157_tokens)));;
							if ((_14249_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1a798bc02_VarDecl>> &__jule_push_dest = (*((*(_141135_ipl))))._field_Statics; __jule_push_dest.push(_14249_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1ad61e97d:;
						{
							jule::Ptr<_1a798aa47_FnDecl> _14319_f = _1a85d9e26_getMethod(_self_, _141157_tokens);;
							if ((_14319_f != nullptr)) {
								_1a85d7e8a_checkMethodReceiver(_self_, &(_14319_f));
								_1a85dabc4_applyFnMeta(_self_, &(_14319_f));
								{ jule::Slice<jule::Ptr<_1a798aa47_FnDecl>> &__jule_push_dest = (*((*(_141135_ipl))))._field_Methods; __jule_push_dest.push(_14319_f); };
							};
						}
					}
					else {
						_case_begin_1ad61d84a:;
						{
							_1a85cda52_pushErr(_self_, _14158_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_1ad61c3e8;
						}
					}
					_match_end_1ad61dd23:;
				};
			}
			_iter_next_1ad61c3e8:;
			++it;
			goto _iter_begin_1ad61c3e8;
		}
		_iter_end_1ad61c3e8:;
	};
}



inline jule::Ptr<_1a7995843_Impl> _1a85da5ca_buildImpl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _144430_tokens) {
	jule::Ptr<_1a79633b0_Token> _14457_token = _144430_tokens[0LL];;
	if ((_144430_tokens.len() < 2LL)) {
		_1a85cda52_pushErr(_self_.ptr(), _14457_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _14517_i = 1LL;;
	jule::Ptr<_1a7978caa_TypeDecl> _14537_base;
	jule::Bool _145317_ok;
	({
		__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType(_self_, &(_144430_tokens), (&(_14517_i)), true);
		_14537_base = __jule_assign_result.__jule_result_arg0;
		_145317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_145317_ok))) {
		return nullptr;;
	};
	if ((_14517_i >= _144430_tokens.len())) {
		_1a85cda52_pushErr(_self_.ptr(), _14457_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7995843_Impl> _14627_ipl = jule::new_ptr<_1a7995843_Impl>(_1a7995843_Impl{._field_End=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Base=_14537_base, ._field_Dest=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a798aa47_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a798bc02_VarDecl>>(nullptr)});;
	_14457_token=_144430_tokens[_14517_i];
	if (((*(_14457_token))._field_Id != static_cast<jule::U32>(9LLU))) {
		if (((*_14457_token.alloc)._field_Id == static_cast<jule::U32>(72LLU))) {
			std::swap((*(_14627_ipl))._field_Base, (*_14627_ipl.alloc)._field_Dest);
			goto _julec_label_1ad62c507;
		};
		_1a85cd39d_stop(_self_.ptr());
		_1a85cda52_pushErr(_self_, _14457_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_14517_i)++;
	if ((_14517_i >= _144430_tokens.len())) {
		_1a85cd39d_stop(_self_.ptr());
		_1a85cda52_pushErr(_self_, _14457_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType(_self_, &(_144430_tokens), (&(_14517_i)), true);
		(*(_14627_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_145317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_145317_ok))) {
		return nullptr;;
	};
	if ((_14517_i >= _144430_tokens.len())) {
		_1a85cd39d_stop(_self_.ptr());
		_1a85cda52_pushErr(_self_, _14457_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ad62c507:;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _15007_bodyTokens = _1a85cb720_range(&(_14517_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_144430_tokens));;
	if ((_15007_bodyTokens == nullptr)) {
		_1a85cd39d_stop(_self_.ptr());
		_1a85cda52_pushErr(_self_, _14457_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14517_i < _144430_tokens.len())) {
		_1a85cda52_pushErr(_self_.ptr(), _144430_tokens[_14517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*(_14627_ipl))._field_End=_144430_tokens[(_14517_i - 1LL)];
	_1a85da289_parseImplBody(_self_, &(_14627_ipl), &(_15007_bodyTokens));
	return _14627_ipl;;
}



inline jule::Any _1a85da91b_buildNodeData(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _151535_tokens) {
	jule::Ptr<_1a79633b0_Token> _15167_token = (*(_151535_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_15167_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1ad6313da:;
			{
				jule::Ptr<_1a798aa47_FnDecl> _15208_f = _1a85d4be0_buildFn(_self_, _151535_tokens, false, false);;
				if ((_15208_f != nullptr)) {
					(*_15208_f.alloc)._field_Global=true;
				};
				return jule::Any(_15208_f, &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1ad631a7d:;
			{
				return jule::Any(_1a85d1824_buildVar(_self_, (*(_151535_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ad631ae4:;
			{
				return jule::Any(_1a85d0999_buildTypeAliasDecl(_self_, _151535_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1ad631b5a:;
			{
				return _1a85d720e_buildNodeEnumDecl(_self_, _151535_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1ad631022:;
			{
				return jule::Any(_1a85d7bd2_buildStructDecl(_self_, _151535_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1ad631099:;
			{
				return jule::Any(_1a85d863e_buildTraitDecl(_self_, _151535_tokens), &__jule_any_type69);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1ad631121:;
			{
				return jule::Any(_1a85da5ca_buildImpl(_self_, (*(_151535_tokens))), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1ad631198:;
			{
				return _1a85d9ad5_buildBind(_self_, _151535_tokens);;
			}
		}
		else {
			_case_begin_1ad630c14:;
			{
				_1a85cda52_pushErr(_self_, _15167_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad630e9a:;
	};
}



inline void _1a85dabc4_applyFnMeta(_1a85cd06d_parser* _self_, jule::Ptr<_1a798aa47_FnDecl>* _154832_f) {
	(*((*(_154832_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1a85dae7c_applyMeta(_1a85cd06d_parser* _self_, _1a7977ca9_Node* _155330_node) {
	{
		auto &_match_expr{ (*(_155330_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1ad637bc7:;
			{
				jule::Ptr<_1a798bc02_VarDecl> _15568_v = (*(_155330_node))._field_Data.unsafe_cast_ptr<_1a798bc02_VarDecl>();;
				if ((_15568_v == nullptr)) {
					return;;
				};
				(*(_15568_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ad637930:;
			{
				jule::Ptr<_1a798aa47_FnDecl> _15638_f = (*(_155330_node))._field_Data.unsafe_cast_ptr<_1a798aa47_FnDecl>();;
				if ((_15638_f == nullptr)) {
					return;;
				};
				_1a85dabc4_applyFnMeta(_self_, &(_15638_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ad637c71:;
			{
				jule::Ptr<_1a7994996_StructDecl> _15698_sd = (*(_155330_node))._field_Data.unsafe_cast_ptr<_1a7994996_StructDecl>();;
				if ((_15698_sd == nullptr)) {
					return;;
				};
				(*(_15698_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1ad637b3e:;
	};
}



inline void _1a85db235_pushUseDecl(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a7991cd4_UseDecl>* _157833_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7991cd4_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_157833_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1a85cda52_pushErr(_self_, (*((*(_157833_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_1a85cddb5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a85db576_pushMetaNodes(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _158635_tokens) {
	{
		auto &_match_expr{ (*((*(_158635_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1ad63e063:;
			{
				;
				jule::Ptr<_1a7991cd4_UseDecl> _15908_decl = _1a85d57b2_buildUseDecl(_self_.ptr(), (*(_158635_tokens)), false);;
				_1a85db235_pushUseDecl(_self_, &(_15908_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1ad63e0da:;
			{
				if ((((*(_158635_tokens)).len() > 1LL) && ((*((*(_158635_tokens))[1LL]))._field_Id == static_cast<jule::U32>(16LLU)))) {
					jule::Ptr<_1a7991cd4_UseDecl> _15959_decl = _1a85d9794_buildBindUse(_self_, (*(_158635_tokens)));;
					_1a85db235_pushUseDecl(_self_, &(_15959_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1ad63e151:;
			{
				_1a85ce800_pushDirective(_self_, _1a85ce547_buildDirective(_self_, (*(_158635_tokens))));
				return true;;
			}
		}
		_match_end_1ad63de53:;
	};
	return false;;
}



inline _1a7977ca9_Node _1a85db8b7_parseNode(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _160631_st) {
	_1a7977ca9_Node _16077_node = _1a7977ca9_Node{._field_Token=(*(_160631_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1a85db576_pushMetaNodes(_self_, _160631_st)) {
		return _16077_node;;
	};
	jule::Any _16157_data = _1a85da91b_buildNodeData(_self_, _160631_st);;
	if ((_16157_data == nullptr)) {
		return _16077_node;;
	};
	_16077_node._field_Data=_16157_data;
	_1a85dae7c_applyMeta(_self_, &(_16077_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a85cda52_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _16077_node;;
}



inline void _1a85dbb70_appendNode(jule::Ptr<_1a85cd06d_parser> _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _163032_st) {
	if (((*(_163032_st)).len() == 0LL)) {
		return;;
	};
	_1a7977ca9_Node _16347_node = _1a85db8b7_parseNode(_self_, _163032_st);;
	if (((_16347_node._field_Data != nullptr) && (!(_1a85cd634_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1a7977ca9_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16347_node; __jule_collection; }));
	};
}



inline void _1a85dc148_removeRange(_1a85cd06d_parser* _self_, jule::I32 _164027_i, jule::U32 _164035_id, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _164051_tokens, jule::Slice<jule::I32>* _164081_ranges) {
	jule::U32 _16413_close = _1a85cc226_getCloseOfBrace(_164035_id);;
	for (; (_164027_i >= 0LL); (_164027_i)--) {
		{
			jule::Ptr<_1a79633b0_Token> _16434_tok = (*(_164051_tokens))[(*(_164081_ranges))[_164027_i]];;
			if (((*(_16434_tok))._field_Id != _16413_close)) {
				goto _iter_next_1ad649117;
			};
			(*(_164081_ranges))=jule::append((*(_164081_ranges)).slice(0LL, _164027_i),(*(_164081_ranges)).slice((_164027_i + 1LL)));
			goto _iter_end_1ad649117;
		}
	_iter_next_1ad649117:;
	}
	_iter_end_1ad649117:;;
}



inline void _1a85dc566_pushWrongOrderCloseErr(_1a85cd06d_parser* _self_, jule::Ptr<_1a79633b0_Token>* _165239_t, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _165258_tokens, jule::Slice<jule::I32>* _165284_ranges) {
	{
		auto &_match_expr{ (*((*(_165258_tokens))[(*(_165284_ranges))[((*(_165284_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(74LLU)) {
			_case_begin_1ad64b504:;
			{
				_1a85cda52_pushErr(_self_, (*(_165239_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1ad64b57b:;
			{
				_1a85cda52_pushErr(_self_, (*(_165239_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1ad64b5e2:;
			{
				_1a85cda52_pushErr(_self_, (*(_165239_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad64b3e4:;
	};
}



inline void _1a85dca3e_pushRangeClose(_1a85cd06d_parser* _self_, jule::Ptr<_1a79633b0_Token> _166330_t, jule::U32 _166348_left, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _166366_tokens, jule::Slice<jule::I32>* _166396_ranges) {
	jule::I32 _16643_n = (*(_166396_ranges)).len();;
	if ((_16643_n == 0LL)) {
		{
			auto &_match_expr{ (*(_166330_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(77LLU)) {
				_case_begin_1ad64e507:;
				{
					_1a85cda52_pushErr(_self_, _166330_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(73LLU)) {
				_case_begin_1ad64e57e:;
				{
					_1a85cda52_pushErr(_self_, _166330_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(75LLU)) {
				_case_begin_1ad64e5e5:;
				{
					_1a85cda52_pushErr(_self_, _166330_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_1ad64e43b:;
		};
		return;;
	} else if (((*((*(_166366_tokens))[(*(_166396_ranges))[(_16643_n - 1LL)]]))._field_Id != _166348_left)) {
		_1a85dc566_pushWrongOrderCloseErr(_self_, &(_166330_t), _166366_tokens, _166396_ranges);
	};
	_1a85dc148_removeRange(_self_, (_16643_n - 1LL), (*(_166330_t))._field_Id, _166366_tokens, _166396_ranges);
}



inline void _1a85dcce7_checkRanges(_1a85cd06d_parser* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _168128_tokens) {
	jule::Slice<jule::I32> _168211_ranges = nullptr;;
	{
		auto expr = _168128_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad65275d:;
		if (it != expr_end) {
			jule::I32 _16847_i = it - expr->begin();
			jule::Ptr<_1a79633b0_Token> *_168410_token = it;
			{
				{
					auto &_match_expr{ (*((*(_168410_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1ad653693:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _168211_ranges; __jule_push_dest.push(_16847_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ad65372b:;
						{
							_1a85dca3e_pushRangeClose(_self_, (*(_168410_token)), static_cast<jule::U32>(74LLU), _168128_tokens, &(_168211_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU)) {
						_case_begin_1ad653792:;
						{
							_1a85dca3e_pushRangeClose(_self_, (*(_168410_token)), static_cast<jule::U32>(72LLU), _168128_tokens, &(_168211_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1ad653808:;
						{
							_1a85dca3e_pushRangeClose(_self_, (*(_168410_token)), static_cast<jule::U32>(76LLU), _168128_tokens, &(_168211_ranges));
						}
					}
					_match_end_1ad6535c7:;
				};
			}
			_iter_next_1ad65275d:;
			++it;
			_16847_i++;
			goto _iter_begin_1ad65275d;
		}
		_iter_end_1ad65275d:;
	};
	{
		auto expr = &(_168211_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6538c4:;
		if (it != expr_end) {
			jule::I32 _169910_i = *it;
			{
				jule::Ptr<_1a79633b0_Token> _17004_token = (*(_168128_tokens))[_169910_i];;
				{
					auto &_match_expr{ (*(_17004_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ad656575:;
						{
							_1a85cda52_pushErr(_self_, _17004_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1ad6565db:;
						{
							_1a85cda52_pushErr(_self_, _17004_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1ad656652:;
						{
							_1a85cda52_pushErr(_self_, _17004_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_1ad6562de:;
				};
			}
			_iter_next_1ad6538c4:;
			++it;
			goto _iter_begin_1ad6538c4;
		}
		_iter_end_1ad6538c4:;
	};
}



inline void _1a85dd0a0_parse(jule::Ptr<_1a85cd06d_parser> _self_, jule::Ptr<_1a7968e65_Fileset>* _171227_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1a7976deb_AST>(_1a7976deb_AST{._field_File=(*(_171227_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1a7991cd4_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1a7977ca9_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1a85bc788_exprBuilder>(_1a85bc788_exprBuilder{._field_p=_self_});
	_1a85dcce7_checkRanges(_self_, &((*((*(_171227_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a85ae4c2_stmt>> _17257_stmts = _1a85ae879_splitStmts(&((*((*(_171227_f))))._field_Tokens));;
	jule::I32 _17287_i = 0LL;;
	for (; (_17287_i < _17257_stmts.len()); (_17287_i)++) {
		{
			jule::Ptr<_1a85ae4c2_stmt> _17308_stmt = _17257_stmts[_17287_i];;
			if (((*(_17308_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_17308_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U32>(35LLU))) {
				goto _iter_end_1ad65a0c3;
			};
			if ((!(_1bc0b21ae_IsTopDirective((*((*(_17308_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1ad65a0c3;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a79781c7_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a85ce547_buildDirective(_self_, (*(_17308_stmt))._field_tokens); __jule_collection; }));
		}
	_iter_next_1ad65a0c3:;
	}
	_iter_end_1ad65a0c3:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_17287_i < _17257_stmts.len()) && (!(_1a85cd634_stopped(_self_)))); (_17287_i)++) {
		{
			jule::Ptr<_1a85ae4c2_stmt> _17478_stmt = _17257_stmts[_17287_i];;
			_1a85dbb70_appendNode(_self_, &((*(_17478_stmt))._field_tokens));
		}
	_iter_next_1ad65d538:;
	}
	_iter_end_1ad65d538:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a85cda52_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _1a85de7ee_pushErr(_1a85de227_typeBuilder* _self_, jule::Ptr<_1a79633b0_Token> _3123_token, jule::Str _3145_fmt) {
	if ((*(_self_))._field_err) {
		_1a85cda52_pushErr((*(_self_))._field_p.ptr(), _3123_token, _3145_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a85deb62_pushSuggestion(_1a85de227_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args) {
	if ((*(_self_))._field_err) {
		_1a85cddb5_pushSuggestion((*(_self_))._field_p.ptr(), _3830_fmt, _3850_args);
	};
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85dede8_buildNamespace(_1a85de227_typeBuilder* _self_) {
	jule::Ptr<_1a7978caa_TypeDecl> _457_t = jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1a7979a58_NamespaceTypeDecl> _487_ns = jule::new_ptr<_1a7979a58_NamespaceTypeDecl>(_1a7979a58_NamespaceTypeDecl{._field_Namespace=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Kind=jule::Ptr<_1a7978caa_TypeDecl>(nullptr)});;
	(*_487_ns.alloc)._field_Namespace=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((((*((*_487_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_487_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U32>(31LLU)))) {
		_1a85de7ee_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a85deb62_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1a85de7ee_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a85deb62_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(19LLU))) {
		_1a85de7ee_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a85deb62_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1a85de7ee_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a85deb62_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_487_ns.alloc)._field_Kind=_1a85e069b_buildIdent(_self_);
	(*(_457_t))._field_Kind=jule::Any(_487_ns, &__jule_any_type92);
	return _457_t;;
}



inline jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> _1a85e017e_buildGenerics(_1a85de227_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a79633b0_Token> _803_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_803_token))._field_Id != static_cast<jule::U32>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _857_parts = _1a85e0415_identGenerics(_self_);;
	if ((_857_parts.len() == 0LL)) {
		_1a85de7ee_pushErr(_self_, _803_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> _917_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>::alloc(0LL, _857_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7978caa_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad66dc30:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _9215_part = *it;
			{
				jule::I32 _938_j = 0LL;;
				jule::Ptr<_1a7978caa_TypeDecl> _948_t;
				({
					__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType((*(_self_))._field_p, &(_9215_part), (&(_938_j)), true);
					_948_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_938_j < _9215_part.len())) {
					_1a85de7ee_pushErr(_self_, _9215_part[_938_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>> &__jule_push_dest = _917_types; __jule_push_dest.push(_948_t); };
			}
			_iter_next_1ad66dc30:;
			++it;
			goto _iter_begin_1ad66dc30;
		}
		_iter_end_1ad66dc30:;
	};
	return _917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _1a85e0415_identGenerics(_1a85de227_typeBuilder* _self_) {
	jule::I32 _1043_first = (*((*(_self_))._field_i));;
	jule::I32 _1057_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a79633b0_Token> _1074_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1074_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(76LLU)) {
					_case_begin_1ad6723b5:;
					{
						(_1057_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1ad6726e5:;
					{
						(_1057_rangeN)--;
					}
				}
				_match_end_1ad67243c:;
			};
			if ((_1057_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1ad67155c;
			};
		}
	_iter_next_1ad67155c:;
	}
	_iter_end_1ad67155c:;;
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _1197_tokens = (*(_self_))._field_tokens.slice((_1043_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _1207_parts;
	jule::Slice<_1bc0b03aa_Log> _12014_errors;
	({
		__jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a85cbe90_parts(&(_1197_tokens), static_cast<jule::U32>(5LLU), true);
		_1207_parts = __jule_assign_result.__jule_result_arg0;
		_12014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12014_errors);
	};
	return _1207_parts;;
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e069b_buildIdent(_1a85de227_typeBuilder* _self_) {
	jule::Bool _1287_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1287_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return _1a85dede8_buildNamespace(_self_);;
	};
	jule::Ptr<_1a79633b0_Token> _1327_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a79793b5_IdentTypeDecl> _1337_it = jule::new_ptr<_1a79793b5_IdentTypeDecl>(_1a79793b5_IdentTypeDecl{._field_Token=_1327_token, ._field_Ident=(*(_1327_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a7978caa_TypeDecl> _1397_itd = jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1337_it, &__jule_any_type78)});;
	if (((!(_1287_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		(*(_1337_it))._field_Generics=_1a85e017e_buildGenerics(_self_);
		return _1397_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a85de7ee_pushErr(_self_, _1327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a85de7ee_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	jule::Ptr<_1a797967e_SubIdentTypeDecl> _1567_sit = jule::new_ptr<_1a797967e_SubIdentTypeDecl>(_1a797967e_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1a79793b5_IdentTypeDecl>>(nullptr)});;
	(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a79793b5_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1337_it; __jule_collection; }));
	jule::Ptr<_1a7978caa_TypeDecl> _1587_ident = _1a85e069b_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1587_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1ad67d13a:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a79793b5_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1587_ident))._field_Kind.unsafe_cast_ptr<_1a79793b5_IdentTypeDecl>(); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ad6776a6:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,(*((*(_1587_ident))._field_Kind.unsafe_cast_ptr<_1a797967e_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1ad67d0c4:;
	};
	return jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1567_sit, &__jule_any_type88)});;
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e0932_buildCppLink(_1a85de227_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		_1a85de7ee_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1a7978caa_TypeDecl> _1777_t = _1a85e069b_buildIdent(_self_);;
	(*((*(_1777_t))._field_Kind.cast_ptr<_1a79793b5_IdentTypeDecl>(&__jule_any_type78)))._field_Binded=true;
	return _1777_t;;
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e0bb8_buildFn(_1a85de227_typeBuilder* _self_) {
	jule::Ptr<_1a79633b0_Token> _1837_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a798aa47_FnDecl> _1847_f = _1a85d4739_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1847_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a798addd_IsAnon(_1847_f.ptr())))) {
		_1a85de7ee_pushErr(_self_, (*_1847_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=_1837_token, ._field_Kind=jule::Any(_1847_f, &__jule_any_type68)});;
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e0e4e_buildPtr(_1a85de227_typeBuilder* _self_) {
	jule::Ptr<_1a79633b0_Token> _1987_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a85de7ee_pushErr(_self_, _1987_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U32>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1a797a7d4_PtrTypeDecl>(_1a797a7d4_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type74)});;
	};
	jule::Ptr<_1a7978caa_TypeDecl> _2157_elem = _1a85e1ea5_step(_self_);;
	if ((_2157_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1a797a7d4_PtrTypeDecl>(_1a797a7d4_PtrTypeDecl{._field_Elem=_2157_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e11d5_buildSptr(_1a85de227_typeBuilder* _self_) {
	jule::Ptr<_1a79633b0_Token> _2297_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a85de7ee_pushErr(_self_, _2297_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a7978caa_TypeDecl> _2367_elem = _1a85e1ea5_step(_self_);;
	if ((_2367_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=_2297_token, ._field_Kind=jule::Any(jule::new_ptr<_1a7979d55_SptrTypeDecl>(_1a7979d55_SptrTypeDecl{._field_Elem=_2367_elem}), &__jule_any_type75)});;
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e146b_buildSlc(_1a85de227_typeBuilder* _self_) {
	jule::Ptr<_1a79633b0_Token> _2507_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a7978caa_TypeDecl> _2527_elem = _1a85e1ea5_step(_self_);;
	if ((_2527_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=_2507_token, ._field_Kind=jule::Any(jule::new_ptr<_1a797a1da_SlcTypeDecl>(_1a797a1da_SlcTypeDecl{._field_Elem=_2527_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e1702_buildArr(_1a85de227_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _2657_exprTokens = _1a85cb720_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a85de7ee_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1a7978caa_TypeDecl> _2717_elem = _1a85e1ea5_step(_self_);;
	if ((_2717_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a797b076_ArrTypeDecl> _2767_arrt = jule::new_ptr<_1a797b076_ArrTypeDecl>(_1a797b076_ArrTypeDecl{._field_Elem=_2717_elem, ._field_Size=jule::Ptr<_1a797d0de_Expr>(nullptr)});;
	jule::Ptr<_1a79633b0_Token> _2807_token = _2657_exprTokens[0LL];;
	if (((_2657_exprTokens.len() == 1LL) && ((*(_2807_token))._field_Id == static_cast<jule::U32>(39LLU)))) {
	} else {
		(*(_2767_arrt))._field_Size=_1a85ce206_buildExpr((*(_self_))._field_p, &(_2657_exprTokens));
	};
	return jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=_2807_token, ._field_Kind=jule::Any(_2767_arrt, &__jule_any_type72)});;
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e1988_buildMap(_1a85de227_typeBuilder* _self_) {
	jule::Ptr<_1a79633b0_Token> _2947_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a85de7ee_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _3027_keyTokens = _1a85cb720_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a85de7ee_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3027_keyTokens.len() == 0LL)) {
		_1a85de7ee_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1a797b7c4_MapTypeDecl> _3117_mapt = jule::new_ptr<_1a797b7c4_MapTypeDecl>(_1a797b7c4_MapTypeDecl{._field_Key=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1a7978caa_TypeDecl>(nullptr)});;
	jule::I32 _3127_j = 0LL;;
	jule::Ptr<_1a7978caa_TypeDecl> _3137_keyt;
	jule::Bool _31317_ok;
	({
		__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType((*(_self_))._field_p, &(_3027_keyTokens), (&(_3127_j)), (*(_self_))._field_err);
		_3137_keyt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	} else if ((_3127_j < _3027_keyTokens.len())) {
		_1a85de7ee_pushErr(_self_, _3027_keyTokens[_3127_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3117_mapt.alloc)._field_Key=_3137_keyt;
	jule::Ptr<_1a7978caa_TypeDecl> _3217_valt;
	({
		__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_assign_result = _1a85d0658_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3217_valt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	};
	(*_3117_mapt.alloc)._field_Val=_3217_valt;
	return jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=_2947_mapToken, ._field_Kind=jule::Any(_3117_mapt, &__jule_any_type76)});;
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e1c1e_buildEnumerable(_1a85de227_typeBuilder* _self_) {
	jule::Ptr<_1a79633b0_Token> _3337_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1a85de7ee_pushErr(_self_, _3337_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3337_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3337_token))._field_Id == static_cast<jule::U32>(77LLU))) {
		return _1a85e146b_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a85e1702_buildArr(_self_);;
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85e1ea5_step(_1a85de227_typeBuilder* _self_) {
	jule::Ptr<_1a79633b0_Token> _3483_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3483_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1ad69d0a0:;
			{
				return _1a85e069b_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1ad69d48a:;
			{
				return _1a85e0932_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1ad69d501:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_1a7978caa_TypeDecl> _3589_f = _1a85e0bb8_buildFn(_self_);;
					if ((_3589_f != nullptr)) {
						(*((*_3589_f.alloc)._field_Kind.cast_ptr<_1a798aa47_FnDecl>(&__jule_any_type68)))._field_Unsafety=true;
					};
					return _3589_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1ad69d567:;
			{
				return _1a85e0bb8_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ad69d5cd:;
			{
				return _1a85e0e4e_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ad69d655:;
			{
				return _1a85e11d5_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1ad69d6cc:;
			{
				return jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1a7979d55_SptrTypeDecl>(_1a7979d55_SptrTypeDecl{._field_Elem=_1a85e11d5_buildSptr(_self_)}), &__jule_any_type75)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1ad69d754:;
			{
				return _1a85e1c1e_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1ad69d7cb:;
			{
				return _1a85e1988_buildMap(_self_);;
			}
		}
		_match_end_1ad69d127:;
	};
	((*((*(_self_))._field_i)))++;
	_1a85de7ee_pushErr(_self_, _3483_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool _1a85e223b_build(_1a85de227_typeBuilder* _self_) {
	__jule_tuple_x_1a7978caa_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a7978caa_TypeDecl> _3897_root = _1a85e1ea5_step(_self_);;
	if ((_3897_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a85dd963_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3897_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _1a7d61637_CompileInfo_eq(_1a7d61637_CompileInfo *_self_, _1a7d61637_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _1a7d63408_pushErr(_1a7d62d75_directiveEval* _self_, jule::Ptr<_1a79633b0_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args) {
	{ jule::Slice<_1bc0b03aa_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1bc0b03aa_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1bc0b081c_Logf(_2141_fmt, _2161_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _1a7d63804_splitOperans(_1a7d62d75_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _3348_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1a79633b0_Token>>(nullptr); __jule_collection; });;
	jule::I32 _357_i = 0LL;;
	jule::I32 _367_rangeN = 0LL;;
	jule::I32 _377_last = 0LL;;
	for (; (_357_i < ((*(_3348_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1a79633b0_Token> _394_b = (*(_3348_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1ad4ca9c1:;
					{
						(_367_rangeN)++;
						goto _iter_next_1ad4ca042;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1ad4cad01:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1ad4caa48:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1ad4ca042;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1ad4ca042:;
	}
	_iter_end_1ad4ca042:;;
	if ((_377_last < (*(_3348_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last)); };
	} else {
		_1a7d63408_pushErr(_self_, (*(_3348_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1a7d63b45_evalDirectiveIdent(_1a7d62d75_directiveEval* _self_, jule::Str _6430_ident) {
	return (_1a7d62380_findVar((*(_self_))._field_vars, _6430_ident) >= 0LL);;
}



inline jule::Bool _1a7d63e86_evalDirectivePart(_1a7d62d75_directiveEval* _self_, jule::Slice<jule::Ptr<_1a79633b0_Token>> _7037_part) {
	jule::Bool _713_logicalNot = ((*(_7037_part[0LL]))._field_Id == static_cast<jule::U32>(68LLU));;
	if (_713_logicalNot) {
		(_7037_part).mut_slice(1LL);;
	};
	if ((_7037_part.len() > 1LL)) {
		_1a7d63408_pushErr(_self_, _7037_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _817_result = _1a7d63b45_evalDirectiveIdent(_self_, (*(_7037_part[0LL]))._field_Kind);;
	if (_713_logicalNot) {
		_817_result=(!(_817_result));
	};
	return _817_result;;
}



inline jule::Bool _1a7d6421c_eval(_1a7d62d75_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1a7d63408_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _947_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _967_logicalOrParts = _1a7d63804_splitOperans(_self_, static_cast<jule::U32>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_967_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_967_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4d3765:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _10115_part = *it;
			{
				jule::Bool _1028_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> _1038_logicalAndParts = _1a7d63804_splitOperans(_self_, static_cast<jule::U32>(54LLU), &(_10115_part));;
				if ((_1038_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1038_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad4d504c:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1a79633b0_Token>> _10816_andPart = *it;
						{
							jule::Ptr<_1a79633b0_Token> _1095_first = _10816_andPart[0LL];;
							if (((*(_1095_first))._field_Id == static_cast<jule::U32>(74LLU))) {
								jule::Ptr<_1a79633b0_Token> _1116_end = _10816_andPart[(_10816_andPart.len() - 1LL)];;
								if (((*(_1116_end))._field_Id != static_cast<jule::U32>(75LLU))) {
									_1a7d63408_pushErr(_self_, _1095_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_10816_andPart).mut_slice(1LL, (_10816_andPart.len() - 1LL));;
							};
							_1028_and=(_1028_and && _1a7d63e86_evalDirectivePart(_self_, _10816_andPart));
						}
						_iter_next_1ad4d504c:;
						++it;
						goto _iter_begin_1ad4d504c;
					}
					_iter_end_1ad4d504c:;
				};
				_947_result=(_947_result || _1028_and);
			}
			_iter_next_1ad4d3765:;
			++it;
			goto _iter_begin_1ad4d3765;
		}
		_iter_end_1ad4d3765:;
	};
	return _947_result;;
}







inline jule::Bool _1a7d606ad_isPassFileAnnotation(_1a85e332a_Importer* _self_, jule::Str _5136_p) {
	_5136_p=_1bd4370d2_Base(_5136_p);
	jule::I32 _533_n = _5136_p.len();;
	(_5136_p).mut_slice(0LL, (_533_n - _1bd436a4e_Ext(_5136_p).len()));;
	if (_1bd42a9bb_HasSuffix(_5136_p, jule::Str::lit("_test", 5))) {
		if ((_1a7d62380_findVar((*(_self_))._field_vars, jule::Str::lit("test", 4)) == -1LL)) {
			return false;;
		};
		(_5136_p).mut_slice(0LL, (_5136_p.len() - 5LL));;
	};
	jule::Str _687_a1 = jule::Str();;
	jule::Str _717_a2 = jule::Str();;
	jule::I32 _747_i = _1bd42d34d_FindLastByte(_5136_p, '_');;
	if ((_747_i == -1LL)) {
		jule::Bool _778_ok;
		jule::Bool _7716_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7d4a17b_checkOs(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_7716_exist) {
			return _778_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7d454d9_checkArch(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_7716_exist)) || _778_ok);;
	};
	if (((_747_i + 1LL) >= _533_n)) {
		return true;;
	};
	_687_a1=_5136_p.slice((_747_i + 1LL));
	(_5136_p).mut_slice(0LL, _747_i);;
	_747_i=_1bd42d34d_FindLastByte(_5136_p, '_');
	if ((_747_i != -1LL)) {
		_717_a2=_5136_p.slice((_747_i + 1LL));
	};
	if ((_717_a2).empty()) {
		jule::Bool _988_ok;
		jule::Bool _9816_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7d4a17b_checkOs(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_9816_exist) {
			return _988_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7d454d9_checkArch(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9816_exist)) || _988_ok);;
	};
	jule::Bool _1067_ok;
	jule::Bool _10615_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7d454d9_checkArch(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_10615_exist) {
		if ((!(_1067_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7d4a17b_checkOs(_717_a2);
			_1067_ok = __jule_assign_result.__jule_result_arg0;
			_10615_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_10615_exist)) || _1067_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7d4a17b_checkOs(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_10615_exist)) || _1067_ok);;
}



inline jule::Ptr<_1a85e332a_Importer> static__1a85e3759_New(_1a7d61637_CompileInfo _4516_info) {
	jule::Ptr<_1a85e332a_Importer> _467_imp = jule::new_ptr<_1a85e332a_Importer>(_1a85e332a_Importer{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bd43e35e_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1a7d61eb7_initVars(&((*(_467_imp))._field_vars), &(_4516_info));
	return _467_imp;;
}



inline jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>> _1a85e39e0_AllPackages(_1a85e332a_Importer* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a85e3e30_SetModPath(_1a85e332a_Importer* _self_, jule::Str _6226_path) {
	(*(_self_))._field_mod=_6226_path;
}



inline jule::Str _1a85e41b6_GetModPath(_1a85e332a_Importer* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a85e4507_ModById(_1a85e332a_Importer* _self_, jule::I32 _7019_id) {
	return (*(_self_))._field_mods[_7019_id];;
}



inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a85e4848_GetImport(_1a85e332a_Importer* _self_, jule::Str _7425_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4e80e8:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _7515_p = *it;
			{
				if (_1bd4349a3_EqualFold((*(_7515_p))._field_Path, _7425_path)) {
					return _7515_p;;
				};
			}
			_iter_next_1ad4e80e8:;
			++it;
			goto _iter_begin_1ad4e80e8;
		}
		_iter_end_1ad4e80e8:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a7976deb_AST__jule_tuple_s_1bc0b03aa_Log _1a85e4c44_ImportPackage(_1a85e332a_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod) {
	__jule_tuple_sx_1a7976deb_AST__jule_tuple_s_1bc0b03aa_Log __jule_func_result;
	jule::Slice<_1bc2584ba_Dir> _857_dirents = ({
		auto except = static__1bd437c1a_Read(_8429_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_1bc0b03aa_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a85e2d41_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _8429_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<_1bc2584ba_Dir>(nullptr);});
	});;
	if (_8440_updateMod) {
		jule::Str _904_newMod = _1a7b782ea_FindModuleFileDeep(_8429_path);;
		if ((_904_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_904_newMod;
			jule::Slice<_1bc0b03aa_Log> _939_errs = _1a7b785b4_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_939_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _939_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1a7976deb_AST>> _1007_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7976deb_AST>>::alloc(0LL, _857_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7976deb_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4ea34d:;
		if (it != expr_end) {
			_1bc2584ba_Dir _10110_dirent = *it;
			{
				if ((_1bc28abd4_IsDir(&_10110_dirent._field_Stat) || (!(_1bd42a9bb_HasSuffix(_10110_dirent._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1ad4ea34d;
				};
				jule::Str _1074__path = _1bd4367b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _8429_path; (*it++) = _10110_dirent._field_Name; __jule_collection; }));;
				jule::Ptr<_1a7968e65_Fileset> _1088_file = static__1a79692ea_New(_1074__path);;
				{
					_1a796985b_FillMut(_1088_file.ptr(), _1a85e2a33_readBuff((*_1088_file.alloc)._field_Path));
				};
				jule::Slice<_1bc0b03aa_Log> _1108_errors = _1a797699a_Lex(_1088_file, static_cast<jule::I32>(0LL));;
				if ((_1108_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1108_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1a855e939_FileInfo> _1158_finfo = _1a8562750_ParseFile(_1088_file);;
				if (((*(_1158_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1158_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1a7d606ad_isPassFileAnnotation(_self_, _10110_dirent._field_Name)))) {
					goto _iter_next_1ad4ea34d;
				};
				jule::Bool _1254_r;
				jule::Slice<_1bc0b03aa_Log> _12511_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a85e542b_isPassBuildDirectives(_self_, &((*(_1158_finfo))._field_Ast));
					_1254_r = __jule_assign_result.__jule_result_arg0;
					_12511_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_12511_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12511_logs;
					return __jule_func_result;;
				};
				if ((!(_1254_r))) {
					goto _iter_next_1ad4ea34d;
				};
				{ jule::Slice<jule::Ptr<_1a7976deb_AST>> &__jule_push_dest = _1007_asts; __jule_push_dest.push((*(_1158_finfo))._field_Ast); };
			}
			_iter_next_1ad4ea34d:;
			++it;
			goto _iter_begin_1ad4ea34d;
		}
		_iter_end_1ad4ea34d:;
	};
	__jule_func_result.__jule_result_arg0 = _1007_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a85e4eec_Imported(_1a85e332a_Importer* _self_, jule::Ptr<_1a7b5e80e_ImportInfo> _14128_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4ec350:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _14310_p = *it;
			{
				if ((((*(_14310_p))._field_Binded == (*(_14128_imp))._field_Binded) && _1bd4349a3_EqualFold((*_14310_p.alloc)._field_Path, (*_14128_imp.alloc)._field_Path))) {
					return;;
				};
			}
			_iter_next_1ad4ec350:;
			++it;
			goto _iter_begin_1ad4ec350;
		}
		_iter_end_1ad4ec350:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad50382e:;
			if (it != expr_end) {
				jule::I32 _1518_i = it - expr->begin();
				jule::Str _15111_mod = *it;
				{
					if (((*(_self_))._field_mod == _15111_mod)) {
						(*(_14128_imp))._field_ModId=_1518_i;
						goto _julec_label_1ad505d81;
					};
				}
				_iter_next_1ad50382e:;
				++it;
				_1518_i++;
				goto _iter_begin_1ad50382e;
			}
			_iter_end_1ad50382e:;
		};
		(*(_14128_imp))._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1ad505d81:;
	};
	{ jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_14128_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1bc0b03aa_Log _1a85e542b_isPassBuildDirectives(_1a85e332a_Importer* _self_, jule::Ptr<_1a7976deb_AST>* _16842_file) {
	__jule_tuple_bool__jule_tuple_s_1bc0b03aa_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_16842_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad50637b:;
		if (it != expr_end) {
			jule::Ptr<_1a79781c7_Directive> _16915_td = *it;
			{
				if (((*((*(_16915_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_1ad50637b;
				};
				_1a7d62d75_directiveEval _1738_de = _1a7d62d75_directiveEval{._field_logs=jule::Slice<_1bc0b03aa_Log>(nullptr), ._field_d=_16915_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1774_result = _1a7d6421c_eval(&_1738_de);;
				if ((_1738_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1738_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1774_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad50637b:;
			++it;
			goto _iter_begin_1ad50637b;
		}
		_iter_end_1ad50637b:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}








inline jule::Bool _1a7cb4ec5_anyData_eq(_1a7cb4ec5_anyData *_self_, _1a7cb4ec5_anyData _other_) {
	return 
		(_self_->_field_dataPtr == _other_._field_dataPtr) &&
		(_self_->_field_typePtr == _self_->_field_typePtr);
}





inline jule::Ptr<_1a85e9441_ExprInspector> static__1a85e9782_New(void) {
	return jule::new_ptr<_1a85e9441_ExprInspector>(_1a85e9441_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1a85e9a3a_args(_1a85e9441_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args) {
	{
		auto expr = &(_2224_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad565e79:;
		if (it != expr_end) {
			jule::I32 _237_i = it - expr->begin();
			{
				_1a85ea09b_inspect(_self_, &(_2224_args[_237_i]));
			}
			_iter_next_1ad565e79:;
			++it;
			_237_i++;
			goto _iter_begin_1ad565e79;
		}
		_iter_end_1ad565e79:;
	};
}



inline void _1a85e9ce3_InspectStep(_1a85e9441_ExprInspector* _self_, jule::Any* _3339_m) {
	_1a85ea09b_inspect(_self_, _3339_m);
}



inline void _1a85ea09b_inspect(_1a85e9441_ExprInspector* _self_, jule::Any* _3728_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_3728_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_3728_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad567bb2:;
			{
				jule::Ptr<_1a7a638ab_BinaryExpr> _458_b = (*(_3728_m)).cast_ptr<_1a7a638ab_BinaryExpr>(&__jule_any_type113);;
				_1a85ea09b_inspect(_self_, &((*((*(_458_b))._field_Left))._field_Model));
				_1a85ea09b_inspect(_self_, &((*((*_458_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ad567d8d:;
			{
				jule::Ptr<_1a7a63c85_UnaryExpr> _498_u = (*(_3728_m)).cast_ptr<_1a7a63c85_UnaryExpr>(&__jule_any_type112);;
				_1a85ea09b_inspect(_self_, &((*((*(_498_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ad567c28:;
			{
				jule::Ptr<_1a7a64659_StructLitExpr> _528_lit = (*(_3728_m)).cast_ptr<_1a7a64659_StructLitExpr>(&__jule_any_type96);;
				{
					auto expr = &((*(_528_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad56c018:;
					if (it != expr_end) {
						jule::Ptr<_1a7a642b3_StructArgExpr> _5316_arg = *it;
						{
							_1a85ea09b_inspect(_self_, &((*((*(_5316_arg))._field_Expr))._field_Model));
						}
						_iter_next_1ad56c018:;
						++it;
						goto _iter_begin_1ad56c018;
					}
					_iter_end_1ad56c018:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ad567c8e:;
			{
				jule::Ptr<_1a7a64659_StructLitExpr> _578_lit = (*((*(_3728_m)).cast_ptr<_1a7a64956_AllocStructLitExpr>(&__jule_any_type114)))._field_Lit;;
				{
					auto expr = &((*(_578_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad56d668:;
					if (it != expr_end) {
						jule::Ptr<_1a7a642b3_StructArgExpr> _5816_arg = *it;
						{
							_1a85ea09b_inspect(_self_, &((*(*(_5816_arg))._field_Expr.alloc)._field_Model));
						}
						_iter_next_1ad56d668:;
						++it;
						goto _iter_begin_1ad56d668;
					}
					_iter_end_1ad56d668:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ad56818a:;
			{
				jule::Ptr<_1a7a64ed9_CastingExpr> _628_c = (*(_3728_m)).cast_ptr<_1a7a64ed9_CastingExpr>(&__jule_any_type94);;
				_1a85ea09b_inspect(_self_, &((*((*(_628_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ad568212:;
			{
				jule::Ptr<_1a7a6588b_FnCallExpr> _658_fc = (*(_3728_m)).cast_ptr<_1a7a6588b_FnCallExpr>(&__jule_any_type30);;
				_1a85ea09b_inspect(_self_, &((*(_658_fc))._field_Expr));
				_1a85e9a3a_args(_self_, (*_658_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ad568289:;
			{
				jule::Ptr<_1a7a65c65_SliceExpr> _698_s = (*(_3728_m)).cast_ptr<_1a7a65c65_SliceExpr>(&__jule_any_type80);;
				_1a85e9a3a_args(_self_, (*(_698_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ad568311:;
			{
				jule::Ptr<_1a7a68b9c_ArrayExpr> _728_a = (*(_3728_m)).cast_ptr<_1a7a68b9c_ArrayExpr>(&__jule_any_type86);;
				_1a85e9a3a_args(_self_, (*(_728_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ad568388:;
			{
				jule::Ptr<_1a7a6621b_IndexingExpr> _758_i = (*(_3728_m)).cast_ptr<_1a7a6621b_IndexingExpr>(&__jule_any_type43);;
				_1a85ea09b_inspect(_self_, &((*((*(_758_i))._field_Expr))._field_Model));
				_1a85ea09b_inspect(_self_, &((*((*_758_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ad568410:;
			{
				jule::Ptr<_1a7a66e75_MapExpr> _798_mp = (*(_3728_m)).cast_ptr<_1a7a66e75_MapExpr>(&__jule_any_type100);;
				{
					auto expr = &((*(_798_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad574817:;
					if (it != expr_end) {
						jule::Ptr<_1a7a66a9b_KeyValPairExpr> _8016_entry = *it;
						{
							_1a85ea09b_inspect(_self_, &((*(_8016_entry))._field_Key));
							_1a85ea09b_inspect(_self_, &((*_8016_entry.alloc)._field_Val));
						}
						_iter_next_1ad574817:;
						++it;
						goto _iter_begin_1ad574817;
					}
					_iter_end_1ad574817:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad568487:;
			{
				jule::Ptr<_1a7a67508_SlicingExpr> _858_s = (*(_3728_m)).cast_ptr<_1a7a67508_SlicingExpr>(&__jule_any_type93);;
				_1a85ea09b_inspect(_self_, &((*(_858_s))._field_Expr));
				_1a85ea09b_inspect(_self_, &((*_858_s.alloc)._field_Left));
				if (((*_858_s.alloc)._field_Right != nullptr)) {
					_1a85ea09b_inspect(_self_, &((*_858_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad56850e:;
			{
				jule::Ptr<_1a7a67a8b_TraitSubIdentExpr> _928_t = (*(_3728_m)).cast_ptr<_1a7a67a8b_TraitSubIdentExpr>(&__jule_any_type98);;
				_1a85ea09b_inspect(_self_, &((*(_928_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ad568586:;
			{
				jule::Ptr<_1a7a6842c_StructSubIdentExpr> _958_s = (*(_3728_m)).cast_ptr<_1a7a6842c_StructSubIdentExpr>(&__jule_any_type99);;
				_1a85ea09b_inspect(_self_, &((*((*(_958_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1ad56860d:;
			{
				jule::Ptr<_1a7a68e99_TupleExpr> _988_t = (*(_3728_m)).cast_ptr<_1a7a68e99_TupleExpr>(&__jule_any_type83);;
				{
					auto expr = &((*(_988_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad579179:;
					if (it != expr_end) {
						jule::Ptr<_1a7bed89d_Data> _9916_d = *it;
						{
							_1a85ea09b_inspect(_self_, &((*(_9916_d))._field_Model));
						}
						_iter_next_1ad579179:;
						++it;
						goto _iter_begin_1ad579179;
					}
					_iter_end_1ad579179:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ad568685:;
			{
				jule::Ptr<_1a7a6996c_BuiltinNewCallExpr> _1038_b = (*(_3728_m)).cast_ptr<_1a7a6996c_BuiltinNewCallExpr>(&__jule_any_type115);;
				if (((*(_1038_b))._field_Init != nullptr)) {
					_1a85ea09b_inspect(_self_, &((*_1038_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ad56870c:;
			{
				jule::Ptr<_1a7a69296_BuiltinPrintCallExpr> _1088_c = (*(_3728_m)).cast_ptr<_1a7a69296_BuiltinPrintCallExpr>(&__jule_any_type24);;
				_1a85ea09b_inspect(_self_, &((*((*(_1088_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ad568784:;
			{
				jule::Ptr<_1a7a69593_BuiltinPrintlnCallExpr> _1118_c = (*(_3728_m)).cast_ptr<_1a7a69593_BuiltinPrintlnCallExpr>(&__jule_any_type25);;
				_1a85ea09b_inspect(_self_, &((*((*(_1118_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ad56880b:;
			{
				jule::Ptr<_1a7a69d46_BuiltinPanicCallExpr> _1148_c = (*(_3728_m)).cast_ptr<_1a7a69d46_BuiltinPanicCallExpr>(&__jule_any_type26);;
				_1a85ea09b_inspect(_self_, &((*(_1148_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ad568883:;
			{
				jule::Ptr<_1a7a6b94c_BuiltinErrorCallExpr> _1178_c = (*(_3728_m)).cast_ptr<_1a7a6b94c_BuiltinErrorCallExpr>(&__jule_any_type20);;
				_1a85ea09b_inspect(_self_, &((*((*(_1178_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ad56890a:;
			{
				jule::Ptr<_1a7a6a2ec_BuiltinMakeCallExpr> _1208_b = (*(_3728_m)).cast_ptr<_1a7a6a2ec_BuiltinMakeCallExpr>(&__jule_any_type116);;
				if (((*(_1208_b))._field_Len != nullptr)) {
					_1a85ea09b_inspect(_self_, &((*_1208_b.alloc)._field_Len));
				};
				if (((*(_1208_b))._field_Cap != nullptr)) {
					_1a85ea09b_inspect(_self_, &((*_1208_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad568982:;
			{
				jule::Ptr<_1a7a6a6c6_BuiltinAppendCallExpr> _1288_b = (*(_3728_m)).cast_ptr<_1a7a6a6c6_BuiltinAppendCallExpr>(&__jule_any_type23);;
				_1a85ea09b_inspect(_self_, &((*(_1288_b))._field_Dest));
				_1a85ea09b_inspect(_self_, &((*_1288_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ad568a09:;
			{
				jule::Ptr<_1a7a6a9c3_BuiltinLenCallExpr> _1328_l = (*(_3728_m)).cast_ptr<_1a7a6a9c3_BuiltinLenCallExpr>(&__jule_any_type117);;
				_1a85ea09b_inspect(_self_, &((*((*(_1328_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ad568a81:;
			{
				jule::Ptr<_1a7a6acc0_BuiltinCapCallExpr> _1358_c = (*(_3728_m)).cast_ptr<_1a7a6acc0_BuiltinCapCallExpr>(&__jule_any_type118);;
				_1a85ea09b_inspect(_self_, &((*((*(_1358_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ad568b08:;
			{
				jule::Ptr<_1a7a6b199_BuiltinDeleteCallExpr> _1388_b = (*(_3728_m)).cast_ptr<_1a7a6b199_BuiltinDeleteCallExpr>(&__jule_any_type28);;
				_1a85ea09b_inspect(_self_, &((*((*(_1388_b))._field_Dest))._field_Model));
				if (((*_1388_b.alloc)._field_Key != nullptr)) {
					_1a85ea09b_inspect(_self_, &((*(*(_1388_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ad568b80:;
			{
				jule::Ptr<_1a7a6bc49_SizeofExpr> _1448_s = (*(_3728_m)).cast_ptr<_1a7a6bc49_SizeofExpr>(&__jule_any_type119);;
				_1a85ea09b_inspect(_self_, &((*(_1448_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ad568c07:;
			{
				jule::Ptr<_1a7a6c3ed_AlignofExpr> _1478_a = (*(_3728_m)).cast_ptr<_1a7a6c3ed_AlignofExpr>(&__jule_any_type120);;
				_1a85ea09b_inspect(_self_, &((*(_1478_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ad568c7e:;
			{
				jule::Ptr<_1a7a6cc5b_FreeExpr> _1508_f = (*(_3728_m)).cast_ptr<_1a7a6cc5b_FreeExpr>(&__jule_any_type29);;
				_1a85ea09b_inspect(_self_, &((*(_1508_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ad568d06:;
			{
				jule::Ptr<_1a7a6c95e_BackendEmitExpr> _1538_e = (*(_3728_m)).cast_ptr<_1a7a6c95e_BackendEmitExpr>(&__jule_any_type22);;
				_1a85e9a3a_args(_self_, (*(_1538_e))._field_Exprs);
			}
		}
		_match_end_1ad567b4b:;
	};
}



inline void _1a85ea40e_Inspect(_1a85e9441_ExprInspector* _self_, jule::Any* _16128_m, jule::Fn<void,jule::Any*> _16143_f) {
	(*(_self_))._field_handler=_16143_f;
	_1a85ea09b_inspect(_self_, _16128_m);
}








inline jule::Bool _1a8601a0e_MetaStrBuilder_eq(_1a8601a0e_MetaStrBuilder *_self_, _1a8601a0e_MetaStrBuilder _other_) {
	return 
		(_self_->_field_Write == _other_._field_Write) &&
		(_self_->_field_WriteByte == _self_->_field_WriteByte) &&
		(_self_->_field_WriteRune == _self_->_field_WriteRune) &&
		(_self_->_field_WriteStr == _self_->_field_WriteStr);
}






inline jule::Bool _1a86026d0_MetaRuntime_eq(_1a86026d0_MetaRuntime *_self_, _1a86026d0_MetaRuntime _other_) {
	return 
		(_self_->_field_ToStr == _other_._field_ToStr) &&
		(_self_->_field_ArrayCmp == _self_->_field_ArrayCmp) &&
		(_self_->_field_RCAdd == _self_->_field_RCAdd) &&
		(_self_->_field_RCLoad == _self_->_field_RCLoad) &&
		(_self_->_field_RCDrop == _self_->_field_RCDrop) &&
		(_self_->_field_RCAddAtomic == _self_->_field_RCAddAtomic) &&
		(_self_->_field_RCLoadAtomic == _self_->_field_RCLoadAtomic) &&
		(_self_->_field_RCDropAtomic == _self_->_field_RCDropAtomic) &&
		(_self_->_field_RuneCount == _self_->_field_RuneCount) &&
		(_self_->_field_Map == _self_->_field_Map) &&
		(_self_->_field_MapIterator == _self_->_field_MapIterator);
}






inline jule::Bool _1a86031a3_MetaMathCmplx_eq(_1a86031a3_MetaMathCmplx *_self_, _1a86031a3_MetaMathCmplx _other_) {
	return 
		(_self_->_field_Cmplx == _other_._field_Cmplx) &&
		(_self_->_field_CmplxAdd == _self_->_field_CmplxAdd) &&
		(_self_->_field_CmplxSub == _self_->_field_CmplxSub) &&
		(_self_->_field_CmplxMul == _self_->_field_CmplxMul) &&
		(_self_->_field_CmplxDiv == _self_->_field_CmplxDiv) &&
		(_self_->_field_CmplxAddZ == _self_->_field_CmplxAddZ) &&
		(_self_->_field_CmplxSubZ == _self_->_field_CmplxSubZ) &&
		(_self_->_field_CmplxMulZ == _self_->_field_CmplxMulZ) &&
		(_self_->_field_CmplxDivZ == _self_->_field_CmplxDivZ);
}






inline jule::Bool _1a86037ad_Meta_eq(_1a86037ad_Meta *_self_, _1a86037ad_Meta _other_) {
	return 
		(_self_->_field_Runtime == _other_._field_Runtime) &&
		(_self_->_field_StrBuilder == _self_->_field_StrBuilder) &&
		(_self_->_field_MathCmplx == _self_->_field_MathCmplx) &&
		(_self_->_field_EntryPoint == _self_->_field_EntryPoint);
}

inline jule::Ptr<_1a86037ad_Meta> static__1a8603b87_Collect(jule::Ptr<_1a85e5c78_IR> _7124_ir) {
	jule::Ptr<_1a86037ad_Meta> _727_meta = jule::new_ptr<_1a86037ad_Meta>(_1a86037ad_Meta{._field_Runtime=jule::Ptr<_1a86026d0_MetaRuntime>(nullptr), ._field_StrBuilder=jule::Ptr<_1a8601a0e_MetaStrBuilder>(nullptr), ._field_MathCmplx=jule::Ptr<_1a86031a3_MetaMathCmplx>(nullptr), ._field_EntryPoint=jule::Ptr<_1a7a70a83_Fn>(nullptr)});;
	(*_727_meta.alloc)._field_Runtime=static__1a8603e51_CollectRuntime(&(_7124_ir));
	(*_727_meta.alloc)._field_StrBuilder=static__1a860421a_CollectStrBuilder(&(_7124_ir));
	(*_727_meta.alloc)._field_MathCmplx=static__1a86044d4_CollectMathCmplx(&(_7124_ir));
	return _727_meta;;
}



inline jule::Ptr<_1a86026d0_MetaRuntime> static__1a8603e51_CollectRuntime(jule::Ptr<_1a85e5c78_IR>* _8032_ir) {
	jule::Ptr<_1a7b5e80e_ImportInfo> _817_p = _1a85eed1a_SelectImport((*((*(_8032_ir))))._field_Used, jule::Str::lit("std/runtime", 11));;
	if ((_817_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a86026d0_MetaRuntime> _857_meta = jule::new_ptr<_1a86026d0_MetaRuntime>(_1a86026d0_MetaRuntime{._field_ToStr=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_ArrayCmp=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_RCAdd=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_RCLoad=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_RCDrop=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_RCAddAtomic=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_RCLoadAtomic=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_RCDropAtomic=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_RuneCount=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_Map=jule::Ptr<_1a7997adc_Struct>(nullptr), ._field_MapIterator=jule::Ptr<_1a7997adc_Struct>(nullptr)});;
	(*_857_meta.alloc)._field_ToStr=_1a7cb40c3_RuntimeFindFn(&(_817_p), jule::Str::lit("toStr", 5));
	(*_857_meta.alloc)._field_ArrayCmp=_1a7cb40c3_RuntimeFindFn(&(_817_p), jule::Str::lit("arrayCmp", 8));
	(*_857_meta.alloc)._field_RCAdd=(*(_1a7cb40c3_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAdd", 6))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoad=(*(_1a7cb40c3_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoad", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDrop=(*(_1a7cb40c3_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDrop", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCAddAtomic=(*(_1a7cb40c3_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAddAtomic", 12))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoadAtomic=(*(_1a7cb40c3_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoadAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDropAtomic=(*(_1a7cb40c3_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDropAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RuneCount=(*(_1a7cb40c3_RuntimeFindFn(&(_817_p), jule::Str::lit("runeCount", 9))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_Map=_1a7cb448b_RuntimeFindStruct(&(_817_p), jule::Str::lit("_Map", 4));
	(*_857_meta.alloc)._field_MapIterator=_1a7cb448b_RuntimeFindStruct(&(_817_p), jule::Str::lit("mapIterator", 11));
	return _857_meta;;
}



inline jule::Ptr<_1a8601a0e_MetaStrBuilder> static__1a860421a_CollectStrBuilder(jule::Ptr<_1a85e5c78_IR>* _10635_ir) {
	;
	;
	jule::Ptr<_1a7b5e80e_ImportInfo> _1097_p = _1a85eed1a_SelectImport((*((*(_10635_ir))))._field_Used, jule::Str::lit("std/strings", 11));;
	if ((_1097_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a799a97a_StructIns> _1137_b = _1a7c36be4_Struct((*((*(_1a7b60623_FindTypeAlias(_1097_p.ptr(), jule::Str::lit("Builder", 7), false)))._field_TypeSym))._field_Type.ptr());;
	jule::Ptr<_1a8601a0e_MetaStrBuilder> _1147_meta = jule::new_ptr<_1a8601a0e_MetaStrBuilder>(_1a8601a0e_MetaStrBuilder{._field_Write=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_WriteByte=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_WriteRune=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_WriteStr=jule::Ptr<_1a7a73b41_FnIns>(nullptr)});;
	;
	{
		(*_1147_meta.alloc)._field_Write=(*(_1a799b9e2_FindMethod(_1137_b.ptr(), jule::Str::lit("Write", 5), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteByte=(*(_1a799b9e2_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteByte", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteRune=(*(_1a799b9e2_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteRune", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteStr=(*(_1a799b9e2_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteStr", 8), false)))._field_Instances[0LL];
	};
	return _1147_meta;;
}



inline jule::Ptr<_1a86031a3_MetaMathCmplx> static__1a86044d4_CollectMathCmplx(jule::Ptr<_1a85e5c78_IR>* _12334_ir) {
	jule::Ptr<_1a7b5e80e_ImportInfo> _1247_p = _1a85eed1a_SelectImport((*((*(_12334_ir))))._field_Used, jule::Str::lit("std/math/cmplx", 14));;
	if ((_1247_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a86031a3_MetaMathCmplx> _1287_meta = jule::new_ptr<_1a86031a3_MetaMathCmplx>(_1a86031a3_MetaMathCmplx{._field_Cmplx=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_CmplxAdd=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_CmplxSub=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_CmplxMul=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_CmplxDiv=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_CmplxAddZ=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_CmplxSubZ=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_CmplxMulZ=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_CmplxDivZ=jule::Ptr<_1a7a73b41_FnIns>(nullptr)});;
	;
	(*_1287_meta.alloc)._field_Cmplx=(*(_1a7cb448b_RuntimeFindStruct(&(_1247_p), jule::Str::lit("Cmplx", 5))))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAdd=(*(_1a799b9e2_FindMethod((*_1287_meta.alloc)._field_Cmplx.ptr(), jule::Str::lit("Add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSub=(*(_1a799b9e2_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMul=(*(_1a799b9e2_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDiv=(*(_1a799b9e2_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Div", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAddZ=(*(_1a799b9e2_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSubZ=(*(_1a799b9e2_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMulZ=(*(_1a799b9e2_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDivZ=(*(_1a799b9e2_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("div", 3), false)))._field_Instances[0LL];
	return _1287_meta;;
}



















inline jule::Ptr<_1a92036a9_ObjectDeadCode> static__1a9203b93_new(jule::Ptr<_1a85e5c78_IR>* _2521_ir) {
	return jule::new_ptr<_1a92036a9_ObjectDeadCode>(_1a92036a9_ObjectDeadCode{._field_live=_1a92032e1_liveTable{._field_vars=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1a7a73b41_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1a799a97a_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1a7a7b297_Trait>>(nullptr)}, ._field_ir=(*(_2521_ir))});;
}



inline jule::Bool _1ac687b4b_isLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a799a97a_StructIns>* _3127_t) {
	jule::Slice<jule::Ptr<_1a799a97a_StructIns>> _3211_live = nullptr;;
	{
		
{
			_case_begin_1ac6896a8:;
			{
				_3211_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1ac689576:;
	};
	{
		auto expr = &(_3211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac689b1a:;
		if (it != expr_end) {
			jule::I32 _437_i = it - expr->begin();
			{
				if ((_3211_live[_437_i] == (*(_3127_t)))) {
					return true;;
				};
			}
			_iter_next_1ac689b1a:;
			++it;
			_437_i++;
			goto _iter_begin_1ac689b1a;
		}
		_iter_end_1ac689b1a:;
	};
	return false;;
}

inline jule::Bool _1acaca2be_isLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7a73b41_FnIns>* _3127_t) {
	jule::Slice<jule::Ptr<_1a7a73b41_FnIns>> _3211_live = nullptr;;
	{
		
{
			_case_begin_1acacbc71:;
			{
				_3211_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1acacbba5:;
	};
	{
		auto expr = &(_3211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acacbde7:;
		if (it != expr_end) {
			jule::I32 _437_i = it - expr->begin();
			{
				if ((_3211_live[_437_i] == (*(_3127_t)))) {
					return true;;
				};
			}
			_iter_next_1acacbde7:;
			++it;
			_437_i++;
			goto _iter_begin_1acacbde7;
		}
		_iter_end_1acacbde7:;
	};
	return false;;
}

inline jule::Bool _1acad5a5a_isLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7a7b297_Trait>* _3127_t) {
	jule::Slice<jule::Ptr<_1a7a7b297_Trait>> _3211_live = nullptr;;
	{
		
{
			_case_begin_1ad6cb95d:;
			{
				_3211_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1ad6cb7b5:;
	};
	{
		auto expr = &(_3211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6cbac3:;
		if (it != expr_end) {
			jule::I32 _437_i = it - expr->begin();
			{
				if ((_3211_live[_437_i] == (*(_3127_t)))) {
					return true;;
				};
			}
			_iter_next_1ad6cbac3:;
			++it;
			_437_i++;
			goto _iter_begin_1ad6cbac3;
		}
		_iter_end_1ad6cbac3:;
	};
	return false;;
}

inline jule::Bool _1ac68ae3a_isLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7ba4eb4_Var>* _3127_t) {
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _3211_live = nullptr;;
	{
		
{
			_case_begin_1ac68ced6:;
			{
				_3211_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1ac68d15c:;
	};
	{
		auto expr = &(_3211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac68dab9:;
		if (it != expr_end) {
			jule::I32 _437_i = it - expr->begin();
			{
				if ((_3211_live[_437_i] == (*(_3127_t)))) {
					return true;;
				};
			}
			_iter_next_1ac68dab9:;
			++it;
			_437_i++;
			goto _iter_begin_1ac68dab9;
		}
		_iter_end_1ac68dab9:;
	};
	return false;;
}



inline void _1ac68a05a_pushLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a799a97a_StructIns> _5132_t) {
	{
		
{
			_case_begin_1ac68b886:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a799a97a_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5132_t; __jule_collection; }));
			}
		}
		_match_end_1ac68a764:;
	};
}

inline void _1acacb369_pushLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7a73b41_FnIns> _5132_t) {
	{
		
{
			_case_begin_1acace548:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a73b41_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5132_t; __jule_collection; }));
			}
		}
		_match_end_1acacda20:;
	};
}

inline void _1ad6cbb5b_pushLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7a7b297_Trait> _5132_t) {
	{
		
{
			_case_begin_1ad6cdb4c:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a7b297_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5132_t; __jule_collection; }));
			}
		}
		_match_end_1ad6cc266:;
	};
}

inline void _1ac68e713_pushLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7ba4eb4_Var> _5132_t) {
	{
		
{
			_case_begin_1ac690604:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5132_t; __jule_collection; }));
			}
		}
		_match_end_1ac68e34a:;
	};
}



inline void _1a9204545_pushStructAsLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a799a97a_StructIns>* _6438_s) {
	if (_1ac687b4b_isLive(_self_, _6438_s)) {
		return;;
	};
	_1ac68a05a_pushLive(_self_, (*(_6438_s)));
	_1a92047ed_setReferencesAsLive(_self_, &((*((*(_6438_s))))._field_Refers));
	jule::Bool _703_allLive = _1a9206b96_isAllMethodsLive((*((*(_6438_s))))._field_Decl);;
	{
		auto expr = &((*((*(_6438_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac84ba:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _7115_m = *it;
			{
				{
					auto expr = &((*(_7115_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acac9224:;
					if (it != expr_end) {
						jule::Ptr<_1a7a73b41_FnIns> _7216_ins = *it;
						{
							if (_1acaca2be_isLive(_self_, &(_7216_ins))) {
								goto _iter_next_1acac9224;
							};
							if (_703_allLive) {
								_1acacb369_pushLive(_self_, _7216_ins);
								_1a92047ed_setReferencesAsLive(_self_, &((*(_7216_ins))._field_Refers));
								goto _iter_next_1acac9224;
							};
							if (_1a85ebba2_IsTraitMethod(_6438_s, &(_7216_ins))) {
								_1acacb369_pushLive(_self_, _7216_ins);
								_1a92047ed_setReferencesAsLive(_self_, &((*(_7216_ins))._field_Refers));
							};
							;
							jule::Ptr<_1a7a70a83_Fn> _989__str = _1a799b9e2_FindMethod((*(_6438_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_989__str != nullptr) && static__1a7ba623a_Str(_989__str))) {
								jule::Ptr<_1a7a73b41_FnIns> _10010_fins = (*_989__str.alloc)._field_Instances[0LL];;
								_1acacb369_pushLive(_self_, _10010_fins);
								_1a92047ed_setReferencesAsLive(_self_, &((*(_10010_fins))._field_Refers));
							};
						}
						_iter_next_1acac9224:;
						++it;
						goto _iter_begin_1acac9224;
					}
					_iter_end_1acac9224:;
				};
			}
			_iter_next_1acac84ba:;
			++it;
			goto _iter_begin_1acac84ba;
		}
		_iter_end_1acac84ba:;
	};
}



inline void _1a92047ed_setReferencesAsLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7b4c786_ReferenceStack>* _10841_rs) {
	if (((*(_10841_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _1127_i = 0LL;;
	for (; (_1127_i < _1a7b4cee5_Len((*(_10841_rs)).ptr())); (_1127_i)++) {
		{
			jule::Any _1148_ref = _1a7b4d336_At((*(_10841_rs)).ptr(), _1127_i);;
			{
				auto &_match_expr{ _1148_ref };
				
				if (_match_expr.type == &__jule_any_type11) {
					_case_begin_1acad47b2:;
					{
						jule::Ptr<_1a7a7b297_Trait> _1179_t = _1148_ref.unsafe_cast_ptr<_1a7a7b297_Trait>();;
						if (_1acad5a5a_isLive(_self_, &(_1179_t))) {
							goto _iter_next_1acad386b;
						};
						_1ad6cbb5b_pushLive(_self_, _1179_t);
						{
							auto expr = &((*(_1179_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ad6c9cbe:;
							if (it != expr_end) {
								jule::Ptr<_1a7a70a83_Fn> _12217_ins = *it;
								{
									{
										auto expr = &((*(_12217_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ad6cda81:;
										if (it != expr_end) {
											jule::Ptr<_1a7a73b41_FnIns> _12318_mins = *it;
											{
												if (_1acaca2be_isLive(_self_, &(_12318_mins))) {
													goto _iter_next_1ad6cda81;
												};
												_1acacb369_pushLive(_self_, _12318_mins);
												_1a92047ed_setReferencesAsLive(_self_, &((*(_12318_mins))._field_Refers));
											}
											_iter_next_1ad6cda81:;
											++it;
											goto _iter_begin_1ad6cda81;
										}
										_iter_end_1ad6cda81:;
									};
								}
								_iter_next_1ad6c9cbe:;
								++it;
								goto _iter_begin_1ad6c9cbe;
							}
							_iter_end_1ad6c9cbe:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type65) {
					_case_begin_1acad45e7:;
					{
						jule::Ptr<_1a7a73b41_FnIns> _1329_f = _1148_ref.unsafe_cast_ptr<_1a7a73b41_FnIns>();;
						if (_1acaca2be_isLive(_self_, &(_1329_f))) {
							goto _match_end_1acad466e;
						};
						if ((((*(_1329_f))._field_Owner != nullptr) && (!((*((*_1329_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1ac687b4b_isLive(_self_, &((*_1329_f.alloc)._field_Owner))))) {
								_1ac68a05a_pushLive(_self_, (*_1329_f.alloc)._field_Owner);
								_1a92047ed_setReferencesAsLive(_self_, &((*(*(_1329_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1acacb369_pushLive(_self_, _1329_f);
						_1a92047ed_setReferencesAsLive(_self_, &((*(_1329_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1acad4828:;
					{
						jule::Ptr<_1a7ba4eb4_Var> _1459_v = _1148_ref.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
						if (_1ac68ae3a_isLive(_self_, &(_1459_v))) {
							goto _match_end_1acad466e;
						};
						_1ac68e713_pushLive(_self_, _1459_v);
						_1a92047ed_setReferencesAsLive(_self_, &((*(_1459_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type64) {
					_case_begin_1acad488e:;
					{
						jule::Ptr<_1a799a97a_StructIns> _1529_s = _1148_ref.unsafe_cast_ptr<_1a799a97a_StructIns>();;
						_1a9204545_pushStructAsLive(_self_, &(_1529_s));
					}
				}
				_match_end_1acad466e:;
			};
		}
	_iter_next_1acad386b:;
	}
	_iter_end_1acad386b:;;
}



inline void _1a9204aa6_inits(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7b62081_Package>* _15827_pkg) {
	{
		auto expr = &((*((*(_15827_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac69288c:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _15915_file = *it;
			{
				{
					auto expr = &((*(_15915_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac6933a4:;
					if (it != expr_end) {
						jule::Ptr<_1a7a70a83_Fn> _16016_f = *it;
						{
							if ((*(_16016_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1a7a73b41_FnIns> _16210_ins = (*(_16016_f))._field_Instances[0LL];;
								if ((!(_1acaca2be_isLive(_self_, &(_16210_ins))))) {
									_1acacb369_pushLive(_self_, _16210_ins);
								};
								_1a92047ed_setReferencesAsLive(_self_, &((*(_16210_ins))._field_Refers));
							};
						}
						_iter_next_1ac6933a4:;
						++it;
						goto _iter_begin_1ac6933a4;
					}
					_iter_end_1ac6933a4:;
				};
			}
			_iter_next_1ac69288c:;
			++it;
			goto _iter_begin_1ac69288c;
		}
		_iter_end_1ac69288c:;
	};
}



inline void _1a9204d5e_collectLivePackage(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7b62081_Package>* _17240_pkg) {
	_1a9204aa6_inits(_self_, _17240_pkg);
	_1a85e8929_IterFiles(_17240_pkg, jule::__new_closure<void,jule::Ptr<_1a7a76d86_SymTab>*>((void*)__jule_anon_1ac696088, jule::Ptr<__jule_anon_1ac696088_ctx>::make(__jule_anon_1ac696088_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac696088_ctx_handler));
	if (_1bd445b4b_Test) {
		if ((((*((*(_17240_pkg))))._field_Files.len() > 0LL) && _1a85ec026_IsStdPackage((*((*((*((*(_17240_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1a7997adc_Struct> _2029_s = _1a7b6324c_FindStruct((*(_17240_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1a799a97a_StructIns> _2039_ins = (*(_2029_s))._field_Instances[0LL];;
			_1a9204545_pushStructAsLive(_self_, &(_2039_ins));
			{
				auto expr = &((*(_2039_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1acada752:;
				if (it != expr_end) {
					jule::Ptr<_1a7a70a83_Fn> _20517_m = *it;
					{
						{
							auto expr = &((*(_20517_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1acadb258:;
							if (it != expr_end) {
								jule::Ptr<_1a7a73b41_FnIns> _20618_mins = *it;
								{
									if (_1acaca2be_isLive(_self_, &(_20618_mins))) {
										goto _iter_next_1acadb258;
									};
									_1acacb369_pushLive(_self_, _20618_mins);
									_1a92047ed_setReferencesAsLive(_self_, &((*(_20618_mins))._field_Refers));
								}
								_iter_next_1acadb258:;
								++it;
								goto _iter_begin_1acadb258;
							}
							_iter_end_1acadb258:;
						};
					}
					_iter_next_1acada752:;
					++it;
					goto _iter_begin_1acada752;
				}
				_iter_end_1acada752:;
			};
		};
		{
			auto expr = &((*((*(_17240_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acadb973:;
			if (it != expr_end) {
				jule::Ptr<_1a7a76d86_SymTab> _21516_file = *it;
				{
					{
						auto expr = &((*(_21516_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1acadd8ed:;
						if (it != expr_end) {
							jule::Ptr<_1a7a70a83_Fn> _21617_f = *it;
							{
								if (_1a85ed2d0_HasDirective(&((*(_21617_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_1a7a73b41_FnIns> _21811_ins = (*_21617_f.alloc)._field_Instances[0LL];;
									if ((!(_1acaca2be_isLive(_self_, &(_21811_ins))))) {
										_1acacb369_pushLive(_self_, _21811_ins);
									};
									_1a92047ed_setReferencesAsLive(_self_, &((*(_21811_ins))._field_Refers));
								};
							}
							_iter_next_1acadd8ed:;
							++it;
							goto _iter_begin_1acadd8ed;
						}
						_iter_end_1acadd8ed:;
					};
				}
				_iter_next_1acadb973:;
				++it;
				goto _iter_begin_1acadb973;
			}
			_iter_end_1acadb973:;
		};
	};
}



inline void _1a920505c_collectLive(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acada400:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _23015_used = *it;
			{
				if ((!((*(_23015_used))._field_Binded))) {
					_1a9204d5e_collectLivePackage(_self_, &((*_23015_used.alloc)._field_Package));
				};
			}
			_iter_next_1acada400:;
			++it;
			goto _iter_begin_1acada400;
		}
		_iter_end_1acada400:;
	};
	_1a9204d5e_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1a7a70a83_Fn> _2387_main = _1a7b63648_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2387_main != nullptr)) {
		jule::Ptr<_1a7a73b41_FnIns> _2408_ins = (*_2387_main.alloc)._field_Instances[0LL];;
		if ((!(_1acaca2be_isLive(_self_, &(_2408_ins))))) {
			_1acacb369_pushLive(_self_, _2408_ins);
		};
		_1a92047ed_setReferencesAsLive(_self_, &((*(_2408_ins))._field_Refers));
	};
}



inline void _1a9205315_removeDeadGlobals(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>* _24839_vars) {
	jule::I32 _2497_i = 0LL;;
	while ((_2497_i < (*(_24839_vars)).len())) {
		{
			jule::Ptr<_1a7ba4eb4_Var> _2514_v = (*(_24839_vars))[_2497_i];;
			if (_1ac68ae3a_isLive(_self_, &(_2514_v))) {
				(_2497_i)++;
				goto _iter_next_1acae55a3;
			};
			(*(_24839_vars))=jule::append((*(_24839_vars)).slice(0LL, _2497_i),(*(_24839_vars)).slice((_2497_i + 1LL)));
		}
	_iter_next_1acae55a3:;
	}
	_iter_end_1acae55a3:;;
}



inline void _1a92055bd_removeDeadFns(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7a70a83_Fn>>* _26035_funcs) {
	jule::I32 _2617_i = 0LL;;
	while ((_2617_i < (*(_26035_funcs)).len())) {
		{
			jule::Ptr<_1a7a70a83_Fn> _2638_f = (*(_26035_funcs))[_2617_i];;
			jule::I32 _2648_j = 0LL;;
			while ((_2648_j < (*(_2638_f))._field_Instances.len())) {
				{
					jule::Ptr<_1a7a73b41_FnIns> _2665_ins = (*_2638_f.alloc)._field_Instances[_2648_j];;
					if (_1acaca2be_isLive(_self_, &(_2665_ins))) {
						(_2648_j)++;
						goto _iter_next_1ad6d633b;
					};
					(*_2638_f.alloc)._field_Instances=jule::append((*_2638_f.alloc)._field_Instances.slice(0LL, _2648_j),(*_2638_f.alloc)._field_Instances.slice((_2648_j + 1LL)));
				}
			_iter_next_1ad6d633b:;
			}
			_iter_end_1ad6d633b:;;
			if (((*_2638_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_26035_funcs))=jule::append((*(_26035_funcs)).slice(0LL, _2617_i),(*(_26035_funcs)).slice((_2617_i + 1LL)));
				goto _iter_next_1ad6d54e4;
			};
			(_2617_i)++;
		}
	_iter_next_1ad6d54e4:;
	}
	_iter_end_1ad6d54e4:;;
}



inline void _1a9205876_removeDeadStructs(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7997adc_Struct>>* _28139_structs) {
	jule::I32 _2827_i = 0LL;;
	while ((_2827_i < (*(_28139_structs)).len())) {
		{
			jule::Ptr<_1a7997adc_Struct> _2848_s = (*(_28139_structs))[_2827_i];;
			jule::I32 _2858_j = 0LL;;
			while ((_2858_j < (*(_2848_s))._field_Instances.len())) {
				{
					jule::Ptr<_1a799a97a_StructIns> _2879_ins = (*_2848_s.alloc)._field_Instances[_2858_j];;
					_1a92055bd_removeDeadFns(_self_, &((*(_2879_ins))._field_Methods));
					if ((((*_2879_ins.alloc)._field_Methods.len() != 0LL) || _1ac687b4b_isLive(_self_, &(_2879_ins)))) {
						(_2858_j)++;
						goto _iter_next_1ad6d9e99;
					};
					(*_2848_s.alloc)._field_Instances=jule::append((*_2848_s.alloc)._field_Instances.slice(0LL, _2858_j),(*_2848_s.alloc)._field_Instances.slice((_2858_j + 1LL)));
				}
			_iter_next_1ad6d9e99:;
			}
			_iter_end_1ad6d9e99:;;
			if (((*_2848_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_28139_structs))=jule::append((*(_28139_structs)).slice(0LL, _2827_i),(*(_28139_structs)).slice((_2827_i + 1LL)));
				goto _iter_next_1ad6d9152;
			};
			(_2827_i)++;
		}
	_iter_next_1ad6d9152:;
	}
	_iter_end_1ad6d9152:;;
}



inline void _1a9205b2e_removeDeadTraits(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7a7b297_Trait>>* _30338_traits) {
	jule::I32 _3047_i = 0LL;;
	while ((_3047_i < (*(_30338_traits)).len())) {
		{
			jule::Ptr<_1a7a7b297_Trait> _3068_t = (*(_30338_traits))[_3047_i];;
			if ((!(_1acad5a5a_isLive(_self_, &(_3068_t))))) {
				(*(_30338_traits))=jule::append((*(_30338_traits)).slice(0LL, _3047_i),(*(_30338_traits)).slice((_3047_i + 1LL)));
				goto _iter_next_1ad6dd7e9;
			};
			jule::I32 _3118_j = 0LL;;
			while ((_3118_j < (*(_3068_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1a7997adc_Struct> _3135_s = (*_3068_t.alloc)._field_Implemented[_3118_j];;
					if (((*(_3135_s))._field_Instances.len() > 0LL)) {
						(_3118_j)++;
						goto _iter_next_1ad6de245;
					};
					(*_3068_t.alloc)._field_Implemented=jule::append((*_3068_t.alloc)._field_Implemented.slice(0LL, _3118_j),(*_3068_t.alloc)._field_Implemented.slice((_3118_j + 1LL)));
				}
			_iter_next_1ad6de245:;
			}
			_iter_end_1ad6de245:;;
			(_3047_i)++;
		}
	_iter_next_1ad6dd7e9:;
	}
	_iter_end_1ad6dd7e9:;;
}



inline void _1a9205dd7_removeDeadsFile(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7a76d86_SymTab>* _32437_file) {
	_1a92055bd_removeDeadFns(_self_, &((*((*(_32437_file))))._field_Funcs));
	_1a9205876_removeDeadStructs(_self_, &((*((*(_32437_file))))._field_Structs));
	_1a9205b2e_removeDeadTraits(_self_, &((*((*(_32437_file))))._field_Traits));
	_1a9205315_removeDeadGlobals(_self_, &((*((*(_32437_file))))._field_Vars));
}



inline void _1a9206190_removeDeadsPackage(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_, jule::Ptr<_1a7b62081_Package>* _33140_pkg) {
	{
		auto expr = &((*((*(_33140_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6e3c72:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _33215_file = *it;
			{
				_1a9205dd7_removeDeadsFile(_self_, &(_33215_file));
			}
			_iter_next_1ad6e3c72:;
			++it;
			goto _iter_begin_1ad6e3c72;
		}
		_iter_end_1ad6e3c72:;
	};
}



inline void _1a920638d_removeDeads(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6e44c0:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _33815_used = *it;
			{
				if ((!((*(_33815_used))._field_Binded))) {
					_1a9206190_removeDeadsPackage(_self_, &((*_33815_used.alloc)._field_Package));
				};
			}
			_iter_next_1ad6e44c0:;
			++it;
			goto _iter_begin_1ad6e44c0;
		}
		_iter_end_1ad6e44c0:;
	};
	_1a9206190_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1a920658b_elimanate(jule::Ptr<_1a92036a9_ObjectDeadCode> _self_) {
	_1a920505c_collectLive(_self_);
	_1a920638d_removeDeads(_self_);
}








inline jule::Bool _1a92077ce_scopeDeadCode_eq(_1a92077ce_scopeDeadCode *_self_, _1a92077ce_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1a9207ceb_optimizeChild(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2c238_Scope>* _1935_s) {
	jule::Ptr<_1a92077ce_scopeDeadCode> _207_sdc = jule::new_ptr<_1a92077ce_scopeDeadCode>(_1a92077ce_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_1935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1a920a716_optimizeStmts(_207_sdc);
	};
}



inline void _1a92080a4_optimizeBodyChildExceptional(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2c238_Scope>* _2950_s) {
	jule::Ptr<_1a92077ce_scopeDeadCode> _307_sdc = jule::new_ptr<_1a92077ce_scopeDeadCode>(_1a92077ce_scopeDeadCode{._field_parent=jule::Ptr<_1a92077ce_scopeDeadCode>(nullptr), ._field_s=(*(_2950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1a920a716_optimizeStmts(_307_sdc);
	};
}



inline void _1a920835c_optimizeBodyChild(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2c238_Scope>* _3939_s) {
	jule::Ptr<_1a92077ce_scopeDeadCode> _407_sdc = jule::new_ptr<_1a92077ce_scopeDeadCode>(_1a92077ce_scopeDeadCode{._field_parent=jule::Ptr<_1a92077ce_scopeDeadCode>(nullptr), ._field_s=(*(_3939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1a920a716_optimizeStmts(_407_sdc);
	};
}



inline void _1a9208615_optimizeExpr(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Any* _4834_model) {
	_1a920bd66_exprDeadCode _493_edc = static__1a920c284_new(&(_self_));;
	_1a920c53c_optimize(&_493_edc, _4834_model);
}



inline void _1a9208813_eliminateFollowed(_1a92077ce_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1a92077ce_scopeDeadCode> _607_parent = (*(_self_))._field_parent;;
	while ((_607_parent != nullptr)) {
		{
			{
				((*((*(_607_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_607_parent))._field_i + 1LL));;
			};
			_607_parent=(*(_607_parent))._field_parent;
		}
	_iter_next_1acae564c:;
	}
	_iter_end_1acae564c:;;
}



inline void _1a9208abb_pushGoto(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b303a1_GotoSt> _6929_gt) {
	jule::I32 _707_i = 0LL;;
	for (; (_707_i < (*((*(_self_))._field_labels)).len()); (_707_i)++) {
		{
			if (((*(_6929_gt))._field_Ident == (*((*(*(_self_))._field_labels.alloc)[_707_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1acae96c8:;
	}
	_iter_end_1acae96c8:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b303a1_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6929_gt; __jule_collection; }));
}



inline void _1a9208d74_pushLabel(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2ec41_Label> _7930_l) {
	jule::I32 _807_i = 0LL;;
	while ((_807_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_7930_l))._field_Ident == (*((*(*(_self_))._field_gotos.alloc)[_807_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_807_i), (*((*(_self_))._field_gotos)).slice((_807_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1acaeb884;
			};
			(_807_i)++;
		}
	_iter_next_1acaeb884:;
	}
	_iter_end_1acaeb884:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b2ec41_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7930_l; __jule_collection; }));
}



inline void _1a920912c_optimizeRangeIter(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2e0b4_RangeIter> _9238_it) {
	_1a9208615_optimizeExpr(_self_, &((*((*(_9238_it))._field_Expr))._field_Model));
	_1a920835c_optimizeBodyChild(_self_, &((*_9238_it.alloc)._field_Scope));
}



inline void _1a92093d5_optimizeWhileIter(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2d5d0_WhileIter> _9738_it) {
	_1a9208615_optimizeExpr(_self_, &((*(_9738_it))._field_Expr));
	if (((*_9738_it.alloc)._field_Next != nullptr)) {
		_1a920a518_optimizeStmt(_self_, (*_9738_it.alloc)._field_Next);
	};
	_1a920835c_optimizeBodyChild(_self_, &((*_9738_it.alloc)._field_Scope));
}



inline void _1a920968d_optimizeInfIter(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2d129_InfIter> _10536_it) {
	_1a920835c_optimizeBodyChild(_self_, &((*(_10536_it))._field_Scope));
}



inline void _1a9209946_optimizeConditional(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b2cd2c_Conditional> _10940_c) {
	{
		auto expr = &((*(_10940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb03528:;
		if (it != expr_end) {
			jule::Ptr<_1a7b2c612_If> _11015_case = *it;
			{
				if ((_11015_case != nullptr)) {
					_1a9208615_optimizeExpr(_self_, &((*_11015_case.alloc)._field_Expr));
					_1a920835c_optimizeBodyChild(_self_, &((*_11015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1acb03528:;
			++it;
			goto _iter_begin_1acb03528;
		}
		_iter_end_1acb03528:;
	};
	if (((*_10940_c.alloc)._field_Default != nullptr)) {
		if (((*_10940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1a9207ceb_optimizeChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1a920835c_optimizeBodyChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a9209bee_optimizeMatch(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b31c32_Match> _12734_m) {
	{
		auto expr = &((*(_12734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb06a6a:;
		if (it != expr_end) {
			jule::Ptr<_1a7b32529_Case> _12815_case = *it;
			{
				{
					auto expr = &((*(_12815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb07560:;
					if (it != expr_end) {
						jule::Ptr<_1a7bed89d_Data> _12916_expr = *it;
						{
							_1a9208615_optimizeExpr(_self_, &((*(_12916_expr))._field_Model));
						}
						_iter_next_1acb07560:;
						++it;
						goto _iter_begin_1acb07560;
					}
					_iter_end_1acb07560:;
				};
				_1a920835c_optimizeBodyChild(_self_, &((*_12815_case.alloc)._field_Scope));
			}
			_iter_next_1acb06a6a:;
			++it;
			goto _iter_begin_1acb06a6a;
		}
		_iter_end_1acb06a6a:;
	};
	if (((*_12734_m.alloc)._field_Default != nullptr)) {
		if (((*_12734_m.alloc)._field_Cases.len() == 0LL)) {
			_1a9207ceb_optimizeChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1a920835c_optimizeBodyChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a9209ea7_optimizeAssign(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b30c31_Assign> _14535_assign) {
	_1a9208615_optimizeExpr(_self_, &((*((*(_14535_assign))._field_Left))._field_Model));
	_1a9208615_optimizeExpr(_self_, &((*((*_14535_assign.alloc)._field_Right))._field_Model));
}



inline void _1a920a260_optimizeMultiAssign(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Ptr<_1a7b312b4_MultiAssign> _15040_assign) {
	{
		auto expr = &((*(_15040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb0b7d9:;
		if (it != expr_end) {
			jule::Ptr<_1a7bed89d_Data> _15115_l = *it;
			{
				if ((_15115_l != nullptr)) {
					_1a9208615_optimizeExpr(_self_, &((*_15115_l.alloc)._field_Model));
				};
			}
			_iter_next_1acb0b7d9:;
			++it;
			goto _iter_begin_1acb0b7d9;
		}
		_iter_end_1acb0b7d9:;
	};
	_1a9208615_optimizeExpr(_self_, &((*_15040_assign.alloc)._field_Right));
}



inline void _1a920a518_optimizeStmt(jule::Ptr<_1a92077ce_scopeDeadCode> _self_, jule::Any _15933_st) {
	{
		auto &_match_expr{ _15933_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1acb0d445:;
			{
				jule::Ptr<_1a7b2c238_Scope> _1628_scope = _15933_st.unsafe_cast_ptr<_1a7b2c238_Scope>();;
				if ((*(_1628_scope))._field_Deferred) {
					_1a920aa13_eliminateDeadCodeOfScope(_1628_scope);
				} else {
					_1a9207ceb_optimizeChild(_self_, &(_1628_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1acb0d1ae:;
			{
				_1a920912c_optimizeRangeIter(_self_, _15933_st.unsafe_cast_ptr<_1a7b2e0b4_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1acb0d4bc:;
			{
				_1a92093d5_optimizeWhileIter(_self_, _15933_st.unsafe_cast_ptr<_1a7b2d5d0_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1acb0d544:;
			{
				_1a920968d_optimizeInfIter(_self_, _15933_st.unsafe_cast_ptr<_1a7b2d129_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1acb0d5bb:;
			{
				_1a9209946_optimizeConditional(_self_, _15933_st.unsafe_cast_ptr<_1a7b2cd2c_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ad6e5adc:;
			{
				_1a9209bee_optimizeMatch(_self_, _15933_st.unsafe_cast_ptr<_1a7b31c32_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ad6e4701:;
			{
				_1a9209ea7_optimizeAssign(_self_, _15933_st.unsafe_cast_ptr<_1a7b30c31_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad6e5757:;
			{
				_1a920a260_optimizeMultiAssign(_self_, _15933_st.unsafe_cast_ptr<_1a7b312b4_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ad6d4bb9:;
			{
				jule::Ptr<_1a7bed89d_Data> _1838_d = _15933_st.unsafe_cast_ptr<_1a7bed89d_Data>();;
				if ((*_self_.alloc)._field_except) {
					goto _match_end_1acb0d2e1;
				};
				{
					auto &_match_expr{ (*(_1838_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20 || _match_expr.type == &__jule_any_type26) {
						_case_begin_1ad6eae77:;
						{
							_1a9208813_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1ad6eb5d7:;
						{
							_1a9208615_optimizeExpr(_self_, &((*(_1838_d))._field_Model));
						}
					}
					_match_end_1ad6eb571:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ad6d4c30:;
			{
				_1a9208813_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ad6d4944:;
			{
				_1a9208abb_pushGoto(_self_, _15933_st.unsafe_cast_ptr<_1a7b303a1_GotoSt>());
				_1a9208813_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1ad6d49aa:;
			{
				_1a9208d74_pushLabel(_self_, _15933_st.unsafe_cast_ptr<_1a7b2ec41_Label>());
			}
		}
		_match_end_1acb0d2e1:;
	};
}



inline void _1a920a716_optimizeStmts(jule::Ptr<_1a92077ce_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a920a518_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1ac6acd08:;
	}
	_iter_end_1ac6acd08:;;
}








inline jule::Bool _1a920bd66_exprDeadCode_eq(_1a920bd66_exprDeadCode *_self_, _1a920bd66_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1a920bd66_exprDeadCode static__1a920c284_new(jule::Ptr<_1a92077ce_scopeDeadCode>* _1421_s) {
	return _1a920bd66_exprDeadCode{._field_s=(*(_1421_s))};;
}



inline void _1a920c53c_optimize(_1a920bd66_exprDeadCode* _self_, jule::Any* _2025_model) {
	jule::Ptr<_1a85e9441_ExprInspector> _217_inspector = static__1a85e9782_New();;
	_1a85ea40e_Inspect(_217_inspector.ptr(), _2025_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1ac6b0910, jule::Ptr<__jule_anon_1ac6b0910_ctx>::make(__jule_anon_1ac6b0910_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac6b0910_ctx_handler));
}








inline jule::Bool _1a69a1ba2_StrFromBytes_eq(_1a69a1ba2_StrFromBytes *_self_, _1a69a1ba2_StrFromBytes _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a69a1e7c_ExceptionalForwardingExpr_eq(_1a69a1e7c_ExceptionalForwardingExpr *_self_, _1a69a1e7c_ExceptionalForwardingExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a69a2213_FnCallIgnoreExceptionalExpr_eq(_1a69a2213_FnCallIgnoreExceptionalExpr *_self_, _1a69a2213_FnCallIgnoreExceptionalExpr _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}










inline jule::Bool _1a69a292d_SwapExpr_eq(_1a69a292d_SwapExpr *_self_, _1a69a292d_SwapExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1a69a2d07_EmptyCompareExpr_eq(_1a69a2d07_EmptyCompareExpr *_self_, _1a69a2d07_EmptyCompareExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _1a69a3104_RefExpr_eq(_1a69a3104_RefExpr *_self_, _1a69a3104_RefExpr _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _1a69a3643_StrCompExpr_eq(_1a69a3643_StrCompExpr *_self_, _1a69a3643_StrCompExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _1a69a3bc6_MutSlicingExpr_eq(_1a69a3bc6_MutSlicingExpr *_self_, _1a69a3bc6_MutSlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1a69a3ec3_UnsafeBinaryExpr_eq(_1a69a3ec3_UnsafeBinaryExpr *_self_, _1a69a3ec3_UnsafeBinaryExpr _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1a69a42c0_UnsafeIndexingExpr_eq(_1a69a42c0_UnsafeIndexingExpr *_self_, _1a69a42c0_UnsafeIndexingExpr _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1a69a4699_PushToSliceExpr_eq(_1a69a4699_PushToSliceExpr *_self_, _1a69a4699_PushToSliceExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _1a69a4a73_AppendToSliceExpr_eq(_1a69a4a73_AppendToSliceExpr *_self_, _1a69a4a73_AppendToSliceExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _1a69a4e4c_StrRuneIter_eq(_1a69a4e4c_StrRuneIter *_self_, _1a69a4e4c_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _1a69a5249_UnsafeDerefExpr_eq(_1a69a5249_UnsafeDerefExpr *_self_, _1a69a5249_UnsafeDerefExpr _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1a69a5777_UnsafeCastingExpr_eq(_1a69a5777_UnsafeCastingExpr *_self_, _1a69a5777_UnsafeCastingExpr _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1a69a62d3_nilVar_eq(_1a69a62d3_nilVar *_self_, _1a69a62d3_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _1a69a6ab9_pushVar(_1a69a6624_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe) {
	if (((!(_1a912825a_Access)) || (_2323_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6ee596:;
		if (it != expr_end) {
			jule::I32 _287_i = it - expr->begin();
			{
				_1a69a62d3_nilVar *_299_v = &((*(_self_))._field_vars[_287_i]);;
				if (((*(_299_v))._field_var == _2323_var)) {
					(*(_299_v))._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1ad6ee596:;
			++it;
			_287_i++;
			goto _iter_begin_1ad6ee596;
		}
		_iter_end_1ad6ee596:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7005ca:;
		if (it != expr_end) {
			jule::I32 _367_i = it - expr->begin();
			{
				_1a69a62d3_nilVar *_379_v = &((*(_self_))._field_vars[_367_i]);;
				if (((*(_379_v))._field_var == 0LLU)) {
					(*(_379_v))._field_var=_2323_var;
					(*(_379_v))._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1ad7005ca:;
			++it;
			_367_i++;
			goto _iter_begin_1ad7005ca;
		}
		_iter_end_1ad7005ca:;
	};
	{ jule::Slice<_1a69a62d3_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a69a62d3_nilVar{._field_var=_2323_var, ._field_safe=_2337_safe}); };
}



inline jule::Bool _1a69a6e0a_removeVar(_1a69a6624_nils* _self_, jule::Uintptr _4825_var) {
	if ((_4825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad702b82:;
			if (it != expr_end) {
				jule::I32 _508_i = it - expr->begin();
				{
					_1a69a62d3_nilVar *_5110_v = &((*(_self_))._field_vars[_508_i]);;
					if (((*(_5110_v))._field_var == _4825_var)) {
						(*(_5110_v))._field_var=0LLU;
						(*(_5110_v))._field_safe=false;
						return true;;
					};
				}
				_iter_next_1ad702b82:;
				++it;
				_508_i++;
				goto _iter_begin_1ad702b82;
			}
			_iter_end_1ad702b82:;
		};
	};
	return false;;
}



inline jule::Bool _1a69a724b_isSafe(_1a69a6624_nils* _self_, jule::Uintptr _6322_var) {
	if ((_6322_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad7049ca:;
			if (it != expr_end) {
				_1a69a62d3_nilVar _6511_v = *it;
				{
					if ((_6511_v._field_var == _6322_var)) {
						return _6511_v._field_safe;;
					};
				}
				_iter_next_1ad7049ca:;
				++it;
				goto _iter_begin_1ad7049ca;
			}
			_iter_end_1ad7049ca:;
		};
	};
	return false;;
}








inline jule::Bool _1a910e384_scopeOptimizer_eq(_1a910e384_scopeOptimizer *_self_, _1a910e384_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1a910e384_scopeOptimizer> static__1a910e97d_new(jule::Ptr<_1a7b2c238_Scope> _2420_scope) {
	jule::Ptr<_1a910e384_scopeOptimizer> _257_sc = jule::new_ptr<_1a910e384_scopeOptimizer>(_1a910e384_scopeOptimizer{._field_parent=jule::Ptr<_1a910e384_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_2420_scope, ._field_data=jule::new_ptr<_1a91225a6_data>(_1a91225a6_data{._field_boundary=jule::new_ptr<_1a9124861_boundary>(_1a9124861_boundary{._field_vars=jule::Slice<_1a9124520_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1a69a6624_nils>(_1a69a6624_nils{._field_vars=jule::Slice<_1a69a62d3_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1a911e97c_dynamic>(_1a911e97c_dynamic{._field_vars=jule::Slice<_1a911e63b_dynamicVar>(nullptr)})})});;
	return _257_sc;;
}



inline void _1a910ec36_setCurrentStmt(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Any _3635_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_3635_stmt))))));
}



inline void _1a910ee34_removeCurrent(jule::Ptr<_1a910e384_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1a91101ba_isLastStmt(jule::Ptr<_1a910e384_scopeOptimizer> _self_) {
	jule::Ptr<_1a910e384_scopeOptimizer> _467_r = _self_;;
	for (; (_467_r != nullptr); _467_r=(*(_467_r))._field_parent) {
		{
			if ((((*((*_467_r.alloc)._field_scope))._field_Stmts.len() - (*_467_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1ac6cb83d:;
	}
	_iter_end_1ac6cb83d:;;
	return true;;
}



inline jule::Bool _1a9110451_isIter(jule::Ptr<_1a910e384_scopeOptimizer> _self_) {
	jule::Ptr<_1a910e384_scopeOptimizer> _567_r = (*(_self_))._field_parent;;
	for (; (_567_r != nullptr); _567_r=(*(_567_r))._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_567_r))._field_scope))._field_Stmts[(*(_567_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type32) {
					_case_begin_1ac6ce126:;
					{
						return true;;
					}
				}
				_match_end_1ac6ce07c:;
			};
		}
	_iter_next_1ac6cd499:;
	}
	_iter_end_1ac6cd499:;;
	return false;;
}



inline void _1a9110709_optimizeData(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7bed89d_Data> _6833_d) {
	{
		auto &_match_expr{ (*(_6833_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ad7360d3:;
			{
				jule::Ptr<_1a7a6588b_FnCallExpr> _718_m = (*(_6833_d))._field_Model.unsafe_cast_ptr<_1a7a6588b_FnCallExpr>();;
				static__1a9117ab8_optimizeData(&((*(_6833_d))._field_Model), &((*(_self_))._field_data), _self_);
				if (((((((_1a91296ce_Exceptional && (*((*((*(_718_m))._field_Func))._field_Decl))._field_Exceptional) && ((*_718_m.alloc)._field_Except != nullptr)) && ((*(*(_718_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1a85eae48_IsForwarded(&((*_718_m.alloc)._field_Except))) && _1a91101ba_isLastStmt(_self_)) && (!(_1a9110451_isIter(_self_))))) {
					_1a910ec36_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a69a1e7c_ExceptionalForwardingExpr>(_1a69a1e7c_ExceptionalForwardingExpr{._field_Expr=_718_m}), &__jule_any_type121));
				};
				return;;
			}
		}
		_match_end_1ad73605b:;
	};
	static__1a9117ab8_optimizeData(&((*(_6833_d))._field_Model), &((*(_self_))._field_data), _self_);
}



inline void _1a91109b2_optimizeVar(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7ba4eb4_Var> _8732_v) {
	if (((*(_8732_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a69a7c85_isNilValidType((*((*_8732_v.alloc)._field_TypeSym))._field_Type)) && _1a69a79bb_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_8732_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1a69a6ab9_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _1a69a80c6_getNilVar(jule::Any(_8732_v, &__jule_any_type7)), true);
		};
		if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
			jule::Ptr<_1a7c3255d_Type> _969_kind = _1a9121253_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_8732_v.alloc)._field_TypeSym))._field_Type, (*((*(*(_8732_v))._field_Value.alloc)._field_Data))._field_Model);;
			if ((_969_kind != nullptr)) {
				if (_1a9120d24_isDynamicValidType((*(*(_8732_v))._field_TypeSym.alloc)._field_Type)) {
					_1a911ee22_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _1a9121594_getDynamicVar(jule::Any(_8732_v, &__jule_any_type7)), _969_kind);
				};
			};
		};
		static__1a9117ab8_optimizeData(&((*((*(*(_8732_v))._field_Value.alloc)._field_Data))._field_Model), &((*(_self_))._field_data), _self_);
	};
}



inline void _1a9110c6a_optimizeConditional(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b2cd2c_Conditional> _10840_c) {
	_1a91225a6_data _1127_alive = _1a91225a6_data{._field_boundary=jule::Ptr<_1a9124861_boundary>(nullptr), ._field_nils=jule::Ptr<_1a69a6624_nils>(nullptr), ._field_dynamic=jule::Ptr<_1a911e97c_dynamic>(nullptr)};;
	_1a9123662_loadCheckpoint(&_1127_alive, _1a9123123_getCheckpoint((*(_self_))._field_data.ptr()));
	_1a91220ab_dataCheckpoint _1167_checkpoint = _1a9123123_getCheckpoint((*(_self_))._field_data);;
	{
		auto expr = &((*(_10840_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5abb5c:;
		if (it != expr_end) {
			jule::Ptr<_1a7b2c612_If> _11815_elif = *it;
			{
				static__1a9117e5e_optimizeConditionalData(&((*(_11815_elif))._field_Expr), &((*_self_.alloc)._field_data), _self_);
				_1a91144bb_optimizeChild(_self_, (*_11815_elif.alloc)._field_Scope);
				_1a9122d8c_removeDeads(&_1127_alive, &((*_self_.alloc)._field_data));
				_1a9123662_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _1167_checkpoint);
			}
			_iter_next_1ad5abb5c:;
			++it;
			goto _iter_begin_1ad5abb5c;
		}
		_iter_end_1ad5abb5c:;
	};
	if (((*_10840_c.alloc)._field_Default != nullptr)) {
		_1a91144bb_optimizeChild(_self_, (*(*(_10840_c))._field_Default.alloc)._field_Scope);
		_1a9122d8c_removeDeads(&_1127_alive, &((*_self_.alloc)._field_data));
	};
	_1a9123662_loadCheckpoint((*(_self_))._field_data, _1a91233a9_getMutCheckpoint(&_1127_alive));
	if ((!(_1a9128b84_Cond))) {
		return;;
	};
	jule::Bool _1357_constCase = false;;
	{
		auto expr = &((*_10840_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5b08b9:;
		if (it != expr_end) {
			jule::I32 _1388_i = it - expr->begin();
			jule::Ptr<_1a7b2c612_If> _13815_elif = *it;
			{
				if ((!(_1a9114d07_isConstantValidConditionalCase(&(_13815_elif))))) {
					goto _iter_next_1ad5b08b9;
				};
				_1357_constCase=true;
				((*(_10840_c))._field_Elifs).mut_slice(0LL, _1388_i);;
				(*_10840_c.alloc)._field_Default=jule::new_ptr<_1a7b2c986_Else>(_1a7b2c986_Else{._field_Scope=(*(_13815_elif))._field_Scope});
				goto _iter_end_1ad5b08b9;
			}
			_iter_next_1ad5b08b9:;
			++it;
			_1388_i++;
			goto _iter_begin_1ad5b08b9;
		}
		_iter_end_1ad5b08b9:;
	};
	if (((*_10840_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a7b2c612_If>* _1557_i = (&((*_10840_c.alloc)._field_Elifs[0LL]));;
	jule::Ptr<_1a7b2c612_If>* _1563_end = (&((*_10840_c.alloc)._field_Elifs[((*_10840_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1557_i <= _1563_end); (_1557_i)++) {
		{
			{
				if (_1a9115720_isUnreachableConditionalCase(&((*(_1557_i))))) {
					(*(_1557_i))=nullptr;
				};
			};
		}
	_iter_next_1ad5b4071:;
	}
	_iter_end_1ad5b4071:;;
	if (((*_10840_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1357_constCase))) {
		return;;
	};
	jule::I32 _1747_only = -1LL;;
	{
		auto expr = &((*_10840_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5b5b22:;
		if (it != expr_end) {
			jule::I32 _1757_j = it - expr->begin();
			jule::Ptr<_1a7b2c612_If> _17510_elif = *it;
			{
				if ((_17510_elif != nullptr)) {
					if ((_1747_only != -1LL)) {
						return;;
					};
					_1747_only=_1757_j;
				};
			}
			_iter_next_1ad5b5b22:;
			++it;
			_1757_j++;
			goto _iter_begin_1ad5b5b22;
		}
		_iter_end_1ad5b5b22:;
	};
	if ((_1747_only != -1LL)) {
		_1a910ec36_setCurrentStmt(_self_, jule::Any((*((*_10840_c.alloc)._field_Elifs[_1747_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _1a9111188_buildDefaultConstantTrueCase(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b32529_Case> _19149_case, jule::I32* _19173_i, jule::Ptr<_1a7b31c32_Match>* _19186_m) {
	(*(_19149_case))._field_Exprs=nullptr;
	jule::I32 _1933_start = (*(_19173_i));;
	_julec_label_1ad884a8e:;
	for (;;) {
		{
			if (((*((*_19149_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1ad884a39;
			};
			jule::Any *_1999_stmt = &((*((*_19149_case.alloc)._field_Scope))._field_Stmts[((*(*(_19149_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_1999_stmt)) };
				
				if (_match_expr.type == &__jule_any_type46) {
					_case_begin_1ad88695e:;
					{
						((*(_19173_i)))++;
						if (((*(_19173_i)) >= (*((*(_19186_m))))._field_Cases.len())) {
							(*(_1999_stmt))=jule::Any((*((*((*(_19186_m))))._field_Default))._field_Scope, &__jule_any_type19);
							goto _iter_end_1ad884a39;
						};
						_19149_case=(*((*(_19186_m))))._field_Cases[(*(_19173_i))];
						(*(_1999_stmt))=jule::Any((*(_19149_case))._field_Scope, &__jule_any_type19);
					}
				}
				else {
					_case_begin_1ad886a3b:;
					{
						goto _iter_end_1ad884a39;
					}
				}
				_match_end_1ad8868e8:;
			};
		}
	_iter_next_1ad884a39:;
	}
	_iter_end_1ad884a39:;;
	(*((*(_19186_m))))._field_Default=(*((*(_19186_m))))._field_Cases[_1933_start];
	((*((*(_19186_m))))._field_Cases).mut_slice(0LL, _1933_start);;
}



inline void _1a9111441_optimizeMatch(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b31c32_Match> _21734_m) {
	jule::Uintptr _2187_var = 0LLU;;
	if ((_1a9129c40_Dynamic && (*(_21734_m))._field_TypeMatch)) {
		_2187_var=_1a9121594_getDynamicVar((*((*_21734_m.alloc)._field_Expr))._field_Model);
	};
	_1a91225a6_data _2267_alive = _1a91225a6_data{._field_boundary=jule::Ptr<_1a9124861_boundary>(nullptr), ._field_nils=jule::Ptr<_1a69a6624_nils>(nullptr), ._field_dynamic=jule::Ptr<_1a911e97c_dynamic>(nullptr)};;
	_1a9123662_loadCheckpoint(&_2267_alive, _1a9123123_getCheckpoint((*(_self_))._field_data.ptr()));
	_1a91220ab_dataCheckpoint _2307_checkpoint = _1a9123123_getCheckpoint((*(_self_))._field_data);;
	{
		auto expr = &((*(_21734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad88b447:;
		if (it != expr_end) {
			jule::Ptr<_1a7b32529_Case> _23215_case = *it;
			{
				{
					auto expr = &((*(_23215_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad88bdd7:;
					if (it != expr_end) {
						jule::Ptr<_1a7bed89d_Data> _23316_expr = *it;
						{
							static__1a9117e5e_optimizeConditionalData(&((*(_23316_expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
						}
						_iter_next_1ad88bdd7:;
						++it;
						goto _iter_begin_1ad88bdd7;
					}
					_iter_end_1ad88bdd7:;
				};
				if ((((*_23215_case.alloc)._field_Exprs.len() == 1LL) && ((*((*_self_.alloc)._field_data))._field_dynamic != nullptr))) {
					jule::Ptr<_1a7c3255d_Type> _2389_kind = _1a9121253_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_23215_case))._field_Exprs[0LL]))._field_Type, nullptr);;
					if ((_2389_kind != nullptr)) {
						_1a911ee22_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _2187_var, _2389_kind);
					} else {
						_1a9120263_removeVar((*(*(_self_))._field_data.alloc)._field_dynamic.ptr(), _2187_var);
					};
				};
				_1a91144bb_optimizeChild(_self_, (*_23215_case.alloc)._field_Scope);
				_1a9122d8c_removeDeads(&_2267_alive, &((*_self_.alloc)._field_data));
				_1a9123662_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _2307_checkpoint);
			}
			_iter_next_1ad88b447:;
			++it;
			goto _iter_begin_1ad88b447;
		}
		_iter_end_1ad88b447:;
	};
	if (((*_21734_m.alloc)._field_Default != nullptr)) {
		_1a91144bb_optimizeChild(_self_, (*(*(_21734_m))._field_Default.alloc)._field_Scope);
		_1a9122d8c_removeDeads(&_2267_alive, &((*_self_.alloc)._field_data));
	};
	_1a9123662_loadCheckpoint((*(_self_))._field_data, _1a91233a9_getMutCheckpoint(&_2267_alive));
	if ((!(_1a9128b84_Cond))) {
		return;;
	};
	jule::Bool _2607_constCase = false;;
	{
		auto expr = &((*(_21734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad89398d:;
		if (it != expr_end) {
			jule::I32 _26312_i = it - expr->begin();
			jule::Ptr<_1a7b32529_Case> _26319_case = *it;
			{
				if ((!(_1a91153ce_isConstantValidMatchCase(&(_26319_case))))) {
					goto _iter_next_1ad89398d;
				};
				_2607_constCase=true;
				_1a9111188_buildDefaultConstantTrueCase(_self_, _26319_case, &(_26312_i), &(_21734_m));
				goto _iter_end_1ad89398d;
			}
			_iter_next_1ad89398d:;
			++it;
			_26312_i++;
			goto _iter_begin_1ad89398d;
		}
		_iter_end_1ad89398d:;
	};
	if (((*_21734_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a7b32529_Case>* _2777_i = (&((*_21734_m.alloc)._field_Cases[0LL]));;
	jule::Ptr<_1a7b32529_Case>* _2783_end = (&((*_21734_m.alloc)._field_Cases[((*_21734_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2777_i <= _2783_end); (_2777_i)++) {
		{
			{
				if (_1a91159a6_isUnreachableMatchCase(&((*(_2777_i))))) {
					(*(_2777_i))=nullptr;
				};
			};
		}
	_iter_next_1ad896562:;
	}
	_iter_end_1ad896562:;;
	if ((!(_2607_constCase))) {
		return;;
	};
	jule::I32 _2927_only = -1LL;;
	{
		auto expr = &((*_21734_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad897970:;
		if (it != expr_end) {
			jule::I32 _2937_j = it - expr->begin();
			jule::Ptr<_1a7b32529_Case> _29310_case = *it;
			{
				if ((_29310_case != nullptr)) {
					if ((_2927_only != -1LL)) {
						return;;
					};
					_2927_only=_2937_j;
				};
			}
			_iter_next_1ad897970:;
			++it;
			_2937_j++;
			goto _iter_begin_1ad897970;
		}
		_iter_end_1ad897970:;
	};
	if ((_2927_only != -1LL)) {
		_1a910ec36_setCurrentStmt(_self_, jule::Any((*((*_21734_m.alloc)._field_Cases[_2927_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _1a91116e9_optimizeRangeIter(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b2e0b4_RangeIter> _30938_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_30938_it))._field_KeyA != nullptr))) {
		_1a9124d06_pushVar((*((*(_self_))._field_data))._field_boundary, _1a9126c92_getBoundaryVar((*((*_30938_it.alloc)._field_Expr))._field_Model), jule::Any((*_30938_it.alloc)._field_KeyA, &__jule_any_type7));
	};
	_1a9114774_optimizeChildHard(_self_, (*(_30938_it))._field_Scope);
	if (_1a9129987_Iter) {
		{
			auto &_match_expr{ (*((*(_30938_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type94) {
				_case_begin_1ad89c447:;
				{
					jule::Ptr<_1a7a64ed9_CastingExpr> _3219_cem = (*((*(_30938_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a7a64ed9_CastingExpr>();;
					jule::Ptr<_1a7c3b369_Prim> _3225_eprim = _1a7c35671_Prim((*(_3219_cem))._field_ExprType.ptr());;
					if (((_3225_eprim == nullptr) || (!(_1a7c3e834_IsStr(_3225_eprim.ptr()))))) {
						goto _match_end_1ad89c3ae;
					};
					jule::Ptr<_1a7c40868_Slc> _3269_s = _1a7c366c7_Slc((*_3219_cem.alloc)._field_Type.ptr());;
					if ((_3269_s == nullptr)) {
						goto _match_end_1ad89c3ae;
					};
					jule::Ptr<_1a7c3b369_Prim> _3305_prim = _1a7c35671_Prim((*(_3269_s))._field_Elem.ptr());;
					if ((_3305_prim == nullptr)) {
						goto _match_end_1ad89c3ae;
					};
					{
						
						if (_1a7c3cc94_IsU8(_3305_prim.ptr())) {
							_case_begin_1ad8a0d41:;
							{
								(*_30938_it.alloc)._field_Expr=(*_3219_cem.alloc)._field_Expr;
							}
						}
						else if (_1a7c3c777_IsI32(_3305_prim.ptr())) {
							_case_begin_1ad8a101c:;
							{
								static__1a9117ab8_optimizeData(&((*((*_3219_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
								_1a910ec36_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a69a4e4c_StrRuneIter>(_1a69a4e4c_StrRuneIter{._field_Expr=(*_3219_cem.alloc)._field_Expr, ._field_Base=_30938_it}), &__jule_any_type122));
								return;;
							}
						}
						_match_end_1ad89dd1c:;
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type80) {
				_case_begin_1ad89be5d:;
				{
					jule::Ptr<_1a7a65c65_SliceExpr> _3519_slc = (*((*(_30938_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a7a65c65_SliceExpr>();;
					jule::Ptr<_1a7c42b89_Arr> _3529_arr = jule::new_ptr<_1a7c42b89_Arr>(_1a7c42b89_Arr{._field_Auto=false, ._field_N=(*(_3519_slc))._field_Elems.len(), ._field_Elem=(*_3519_slc.alloc)._field_ElemType});;
					(*((*((*_30938_it.alloc)._field_Expr))._field_Type))._field_Kind=jule::Trait(_3529_arr, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data27);
					(*(*(_30938_it))._field_Expr.alloc)._field_Model=jule::Any(jule::new_ptr<_1a7a68b9c_ArrayExpr>(_1a7a68b9c_ArrayExpr{._field_Kind=_3529_arr, ._field_Elems=(*_3519_slc.alloc)._field_Elems}), &__jule_any_type86);
				}
			}
			_match_end_1ad89c3ae:;
		};
	};
	static__1a9117ab8_optimizeData(&((*((*_30938_it.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
}



inline void _1a91119a2_optimizeWhileIter(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b2d5d0_WhileIter> _36638_it) {
	static__1a9117ab8_optimizeData(&((*(_36638_it))._field_Expr), &((*(_self_))._field_data), _self_);
	_1a9114213_optimizeStmt(_self_, (*_36638_it.alloc)._field_Next);
	_1a9114774_optimizeChildHard(_self_, (*_36638_it.alloc)._field_Scope);
}



inline jule::Bool _1a9111ce3_substr(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b30c31_Assign> _37227_a) {
	if (((*((*(_37227_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37227_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad8aada1:;
			{
				jule::Ptr<_1a7a67508_SlicingExpr> _3788_sem = (*((*(_37227_a))._field_Right))._field_Model.unsafe_cast_ptr<_1a7a67508_SlicingExpr>();;
				if (_1a7cb6834_EqualModels((*((*(_37227_a))._field_Left))._field_Model, (*(_3788_sem))._field_Expr)) {
					_1a910ec36_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a69a3bc6_MutSlicingExpr>(_1a69a3bc6_MutSlicingExpr{._field_Token=(*_3788_sem.alloc)._field_Token, ._field_Expr=(*_3788_sem.alloc)._field_Expr, ._field_Left=(*_3788_sem.alloc)._field_Left, ._field_Right=(*_3788_sem.alloc)._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1ad8aad29:;
	};
	return false;;
}



inline jule::Bool _1a9112134_strAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b30c31_Assign> _39230_a) {
	if ((!(_1a9128dc6_Str))) {
		return false;;
	};
	jule::Ptr<_1a7c3b369_Prim> _3963_lp = _1a7c35671_Prim((*((*(_39230_a))._field_Left))._field_Type.ptr());;
	if (((_3963_lp == nullptr) || (!(_1a7c3e834_IsStr(_3963_lp.ptr()))))) {
		return false;;
	};
	return _1a9111ce3_substr(_self_, _39230_a);;
}



inline jule::Bool _1a9112475_sliceAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b30c31_Assign> _40332_a) {
	if (((!(_1a912916d_Slice)) || (_1a7c366c7_Slc((*((*(_40332_a))._field_Left))._field_Type.ptr()) == nullptr))) {
		return false;;
	};
	return _1a9111ce3_substr(_self_, _40332_a);;
}



inline void _1a911272d_optimizePostfix(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b3077a_Postfix> _41136_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1a9126445_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_41136_postfix))._field_Expr);
	};
	static__1a9117ab8_optimizeData(&((*(_41136_postfix))._field_Expr), &((*(_self_))._field_data), _self_);
}



inline jule::Bool _1a9112a6e_cmplxAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b30c31_Assign>* _41833_assign) {
	if ((((!(_1a912a933_StdMathCmplx)) || ((*((*((*(_41833_assign))))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) || ((*(_1a860157a_ProgramMeta))._field_MathCmplx == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a799a97a_StructIns> _4227_s = _1a7c36be4_Struct((*((*((*(_41833_assign))))._field_Left))._field_Type.ptr());;
	if (((_4227_s == nullptr) || (_4227_s != (*((*(_1a860157a_ProgramMeta))._field_MathCmplx))._field_Cmplx))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_41833_assign))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ad8b7a7d:;
			{
				goto _match_end_1ad8b882b;
			}
		}
		else {
			_case_begin_1ad8b8892:;
			{
				return false;;
			}
		}
		_match_end_1ad8b882b:;
	};
	jule::Ptr<_1a7a6588b_FnCallExpr> _4327_fc = (*((*((*(_41833_assign))))._field_Right))._field_Model.cast_ptr<_1a7a6588b_FnCallExpr>(&__jule_any_type30);;
	{
		auto &_match_expr{ (*(_4327_fc))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ad8b8d48:;
			{
				goto _match_end_1ad8b99b4;
			}
		}
		else {
			_case_begin_1ad8b9a2a:;
			{
				return false;;
			}
		}
		_match_end_1ad8b99b4:;
	};
	jule::Ptr<_1a7a6842c_StructSubIdentExpr> _4397_siem = (*(_4327_fc))._field_Expr.cast_ptr<_1a7a6842c_StructSubIdentExpr>(&__jule_any_type99);;
	if ((!(_1a7cb6834_EqualModels((*(*((*(_41833_assign))))._field_Left.alloc)._field_Model, (*((*(_4397_siem))._field_Expr))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_4327_fc))._field_Func };
		
		if (_match_expr == (*((*(_1a860157a_ProgramMeta))._field_MathCmplx))._field_CmplxAdd) {
			_case_begin_1ad8bb7a7:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_1a860157a_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxAddZ;
			}
		}
		else if (_match_expr == (*((*(_1a860157a_ProgramMeta))._field_MathCmplx))._field_CmplxSub) {
			_case_begin_1ad8bb81d:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_1a860157a_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxSubZ;
			}
		}
		else if (_match_expr == (*(*(_1a860157a_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxMul) {
			_case_begin_1ad8bb884:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_1a860157a_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxMulZ;
			}
		}
		else if (_match_expr == (*(*(_1a860157a_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxDiv) {
			_case_begin_1ad8bb90b:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_1a860157a_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxDivZ;
			}
		}
		else {
			_case_begin_1ad8ba92c:;
			{
				return false;;
			}
		}
		_match_end_1ad8bb6ca:;
	};
	(*(_4397_siem))._field_Method=(*_4327_fc.alloc)._field_Func;
	_1a910ec36_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_4327_fc, &__jule_any_type30), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)}), &__jule_any_type21));
	return true;;
}



inline void _1a9112d27_optimizeAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b30c31_Assign> _46035_assign) {
	if ((((*((*(_46035_assign))._field_Op))._field_Id == static_cast<jule::U32>(71LLU)) && _1a7cb6834_EqualModels((*((*_46035_assign.alloc)._field_Left))._field_Model, (*((*_46035_assign.alloc)._field_Right))._field_Model))) {
		_1a910ee34_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		if (_1a912670e_isBoundaryRiskyType((*((*(_46035_assign))._field_Left))._field_Type)) {
			_1a9126445_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_46035_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
		if (_1a69a79bb_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_46035_assign))._field_Right))._field_Model)) {
			if (_1a69a7c85_isNilValidType((*((*_46035_assign.alloc)._field_Left))._field_Type)) {
				;
				_1a69a6ab9_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _1a69a80c6_getNilVar((*(*(_46035_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1a69a7603_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_46035_assign))._field_Left))._field_Model);
		};
	};
	if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
		jule::Ptr<_1a7c3255d_Type> _4848_kind = _1a9121253_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_46035_assign))._field_Right))._field_Type, (*(*(_46035_assign))._field_Right.alloc)._field_Model);;
		if ((_4848_kind != nullptr)) {
			if (_1a9120d24_isDynamicValidType((*((*_46035_assign.alloc)._field_Left))._field_Type)) {
				_1a911ee22_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _1a9121594_getDynamicVar((*(*(_46035_assign))._field_Left.alloc)._field_Model), _4848_kind);
			};
		} else {
			_1a9120a16_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_46035_assign.alloc)._field_Left))._field_Model);
		};
	};
	{
		
		if (_1a9112134_strAssign(_self_, _46035_assign) || _1a9112475_sliceAssign(_self_, _46035_assign) || _1a9112a6e_cmplxAssign(_self_, &(_46035_assign))) {
			_case_begin_1ad8cb795:;
			{
				return;;
			}
		}
		_match_end_1ad8ca321:;
	};
	static__1a9117ab8_optimizeData(&((*((*(_46035_assign))._field_Left))._field_Model), &((*(_self_))._field_data), _self_);
	static__1a9117ab8_optimizeData(&((*((*_46035_assign.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data), _self_);
	{
		auto &_match_expr{ (*((*(_46035_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(47LLU) || _match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU) || _match_expr == static_cast<jule::U32>(45LLU) || _match_expr == static_cast<jule::U32>(46LLU) || _match_expr == static_cast<jule::U32>(40LLU) || _match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1ad8cdb2c:;
			{
				if ((((!(_1a9127ea2_Math)) && (!(_1a9128dc6_Str))) || (_1a7c36be4_Struct((*(*(_46035_assign))._field_Left.alloc)._field_Type.ptr()) != nullptr))) {
					goto _match_end_1ad8cdaa5;
				};
				jule::U32 _5124_oldId;
				jule::Str _51211_oldKind;
				({
					jule::U32 ___jule_assign_arg = (*((*_46035_assign.alloc)._field_Op))._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_46035_assign))._field_Op.alloc)._field_Kind;
					_5124_oldId = ___jule_assign_arg;
					_51211_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_46035_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(40LLU)) {
						_case_begin_1ad8d2339:;
						{
							(*((*_46035_assign.alloc)._field_Op))._field_Id=static_cast<jule::U32>(60LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("+", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(41LLU)) {
						_case_begin_1ad8d1e82:;
						{
							(*((*_46035_assign.alloc)._field_Op))._field_Id=static_cast<jule::U32>(61LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("-", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(43LLU)) {
						_case_begin_1ad8d1ee8:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(63LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(44LLU)) {
						_case_begin_1ad8d205e:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(64LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(45LLU)) {
						_case_begin_1ad8d20d6:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(46LLU)) {
						_case_begin_1ad8d215d:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(57LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(47LLU)) {
						_case_begin_1ad8d21d5:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(67LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("^", 1));
						}
					}
					else {
						_case_begin_1ad8ceed5:;
						{
							__jule_panic_s(jule::Str::lit("opt: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/opt/scope.jule:536:5"));;
						}
					}
					_match_end_1ad8d1d3e:;
				};
				jule::Ptr<_1a7a638ab_BinaryExpr> _5388_b = jule::new_ptr<_1a7a638ab_BinaryExpr>(_1a7a638ab_BinaryExpr{._field_Left=(*_46035_assign.alloc)._field_Left, ._field_Right=(*_46035_assign.alloc)._field_Right, ._field_Op=(*_46035_assign.alloc)._field_Op});;
				jule::Any _5438_model = jule::Any(_5388_b, &__jule_any_type113);;
				static__1a9117ab8_optimizeData(&(_5438_model), &((*_self_.alloc)._field_data), _self_);
				if (((!__jule_any_type113_compare(_5438_model, _5388_b)) || ((*(_5388_b))._field_Op != (*_46035_assign.alloc)._field_Op))) {
					if (((*((*_46035_assign.alloc)._field_Op))._field_Id == static_cast<jule::U32>(67LLU))) {
						_1a910ee34_removeCurrent(_self_);
						return;;
					};
					(*_46035_assign.alloc)._field_Right=jule::new_ptr<_1a7a633b1_OperandExpr>((*(*(_46035_assign))._field_Right.alloc));
					(*(_5388_b))._field_Op=jule::new_ptr<_1a79633b0_Token>((*(*(_5388_b))._field_Op.alloc));
					(*((*_46035_assign.alloc)._field_Op))._field_Id=static_cast<jule::U32>(71LLU);
					(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_46035_assign))._field_Right.alloc)._field_Model=_5438_model;
					return;;
				};
				(*((*_46035_assign.alloc)._field_Op))._field_Id=_5124_oldId;
				(*(*(_46035_assign))._field_Op.alloc)._field_Kind=_51211_oldKind;
				return;;
			}
		}
		_match_end_1ad8cdaa5:;
	};
	if (_1a9127ba5_Append) {
		{
			auto &_match_expr{ (*((*(_46035_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type23) {
				_case_begin_1ad8e03e1:;
				{
					jule::Ptr<_1a7a6a6c6_BuiltinAppendCallExpr> _5699_m = (*((*(_46035_assign))._field_Right))._field_Model.unsafe_cast_ptr<_1a7a6a6c6_BuiltinAppendCallExpr>();;
					if ((!(_1a911d959_areSameLvalueExpr(&((*(*(_46035_assign))._field_Left.alloc)._field_Model), &((*(_5699_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5699_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type80) {
							_case_begin_1ad8e1876:;
							{
								_1a910ec36_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a69a4699_PushToSliceExpr>(_1a69a4699_PushToSliceExpr{._field_Dest=(*(_5699_m))._field_Dest, ._field_Elems=(*(_5699_m))._field_Elements.unsafe_cast_ptr<_1a7a65c65_SliceExpr>()}), &__jule_any_type124));
							}
						}
						else {
							_case_begin_1ad8e214b:;
							{
								_1a910ec36_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a69a4a73_AppendToSliceExpr>(_1a69a4a73_AppendToSliceExpr{._field_Dest=(*(*(_46035_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*(_5699_m))._field_Elements}), &__jule_any_type125));
							}
						}
						_match_end_1ad8e20d5:;
					};
				}
			}
			_match_end_1ad8e0369:;
		};
	};
}



inline void _1a911318a_normalizeAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _59437_assign, jule::Ptr<_1a7a68e99_TupleExpr>* _59470_tup) {
	jule::I32 _5957_i = 0LL;;
	while ((_5957_i < (*((*(_59437_assign))))._field_Left.len())) {
		{
			jule::Ptr<_1a7bed89d_Data> _5978_l = (*((*(_59437_assign))))._field_Left[_5957_i];;
			jule::Ptr<_1a7bed89d_Data> _5988_r = (*((*(_59470_tup))))._field_Datas[_5957_i];;
			if (((_5978_l == nullptr) && (_5988_r != nullptr))) {
				jule::I32 _6065_offset = ((*(_self_))._field_i + 1LL);;
				(*((*_self_.alloc)._field_scope))._field_Stmts=_1ad8ea6b5_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _6065_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5988_r, &__jule_any_type21); __jule_collection; }));
				goto _julec_label_1ad90e4a9;
			};
			if (((_5978_l != nullptr) && (_5988_r != nullptr))) {
				{
					
					if (_1a7bee2d8_IsConst(_5988_r)) {
						_case_begin_1ad907e0e:;
						{
							jule::I32 _6186_offset = ((*(_self_))._field_i + 1LL);;
							(*((*_self_.alloc)._field_scope))._field_Stmts=_1ad8ea6b5_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _6186_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a7b30c31_Assign>(_1a7b30c31_Assign{._field_Left=jule::new_ptr<_1a7a633b1_OperandExpr>(_1a7a633b1_OperandExpr{._field_Type=(*_5978_l.alloc)._field_Type, ._field_Model=(*_5978_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1a7a633b1_OperandExpr>(_1a7a633b1_OperandExpr{._field_Type=(*_5988_r.alloc)._field_Type, ._field_Model=(*_5988_r.alloc)._field_Model}), ._field_Op=(*((*(_59437_assign))))._field_Op}), &__jule_any_type40); __jule_collection; }));
							goto _julec_label_1ad90e4a9;
						}
					}
					else if (_1a7cb6834_EqualModels((*_5978_l.alloc)._field_Model, (*_5988_r.alloc)._field_Model)) {
						_case_begin_1ad907e75:;
						{
							goto _julec_label_1ad90e4a9;
						}
					}
					_match_end_1ad905824:;
				};
				{
					auto &_match_expr{ (*(_5978_l))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_1ad905d1e:;
						{
							jule::Ptr<_1a7ba4eb4_Var> _63610_v = (*(_5978_l))._field_Model.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
							if ((_1a8600117_FindVar(_63610_v, (*((*(_59437_assign))))._field_Decls) == -1LL)) {
								goto _match_end_1ad905ca8;
							};
							{
								auto &_match_expr{ (*(_5988_r))._field_Model };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_1ad90e410:;
									{
										jule::I32 _6497_offset = ((*(_self_))._field_i + 1LL);;
										(*((*_self_.alloc)._field_scope))._field_Stmts=_1ad8ea6b5_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _6497_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_63610_v, &__jule_any_type7); __jule_collection; }));
										goto _julec_label_1ad90e4a9;
									}
								}
								_match_end_1ad90e399:;
							};
						}
					}
					_match_end_1ad905ca8:;
				};
			};
			(_5957_i)++;
			goto _iter_next_1ad8e71b7;
			_julec_label_1ad90e4a9:;
			(*((*(_59437_assign))))._field_Left=jule::append((*((*(_59437_assign))))._field_Left.slice(0LL, _5957_i),(*((*(_59437_assign))))._field_Left.slice((_5957_i + 1LL)));
			(*((*(_59470_tup))))._field_Datas=jule::append((*((*(_59470_tup))))._field_Datas.slice(0LL, _5957_i),(*((*(_59470_tup))))._field_Datas.slice((_5957_i + 1LL)));
		}
	_iter_next_1ad8e71b7:;
	}
	_iter_end_1ad8e71b7:;;
}



inline jule::Bool _1a9113586_tryOptimizeSwap(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _66737_assign, jule::Ptr<_1a7a68e99_TupleExpr>* _66770_tup) {
	jule::Bool __jule_func_result = false;
	if ((((((*((*(_66770_tup))))._field_Datas.len() != 2LL) || ((*((*(_66737_assign))))._field_Left.len() != 2LL)) || ((*((*(_66737_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_66737_assign))))._field_Left[1LL] == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((!(_1a7cb6834_EqualModels((*((*((*(_66737_assign))))._field_Left[0LL]))._field_Model, (*((*((*(_66770_tup))))._field_Datas[1LL]))._field_Model))) || (!(_1a7cb6834_EqualModels((*((*((*(_66737_assign))))._field_Left[1LL]))._field_Model, (*((*((*(_66770_tup))))._field_Datas[0LL]))._field_Model))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a69a292d_SwapExpr> _6777_model = jule::new_ptr<_1a69a292d_SwapExpr>(_1a69a292d_SwapExpr{._field_Left=(*((*(_66737_assign))))._field_Left[0LL], ._field_Right=(*((*(_66737_assign))))._field_Left[1LL]});;
	_1a910ec36_setCurrentStmt(_self_, jule::Any(_6777_model, &__jule_any_type126));
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a91138e9_splitAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _68933_assign, jule::Ptr<_1a7a68e99_TupleExpr>* _68966_tup) {
	{
		auto expr = &((*((*(_68966_tup))))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9189d0:;
		if (it != expr_end) {
			jule::I32 _6957_i = it - expr->begin();
			{
				jule::Ptr<_1a7bed89d_Data> _6964_r = (*((*(_68966_tup))))._field_Datas[_6957_i];;
				jule::Ptr<_1a7bed89d_Data> _6974_l = (*((*(_68933_assign))))._field_Left[_6957_i];;
				if ((_6974_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6974_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1ad91a8a0:;
							{
								goto _match_end_1ad91ab69;
							}
						}
						else {
							_case_begin_1ad91abd0:;
							{
								return;;
							}
						}
						_match_end_1ad91ab69:;
					};
				};
				if ((_6964_r != nullptr)) {
					{
						auto &_match_expr{ (*(_6964_r))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1ad91a75c:;
							{
								goto _match_end_1ad91b6a3;
							}
						}
						else {
							_case_begin_1ad91b719:;
							{
								return;;
							}
						}
						_match_end_1ad91b6a3:;
					};
				};
			}
			_iter_next_1ad9189d0:;
			++it;
			_6957_i++;
			goto _iter_begin_1ad9189d0;
		}
		_iter_end_1ad9189d0:;
	};
	jule::I32 _7163_z = (*(_self_))._field_i;;
	jule::I32 _7177_i = 0LL;;
	_julec_label_1ad91c5b6:;
	while ((_7177_i < (*((*(_68933_assign))))._field_Left.len())) {
		{
			jule::Ptr<_1a7bed89d_Data> _7208_l = (*((*(_68933_assign))))._field_Left[_7177_i];;
			if ((_7208_l == nullptr)) {
				(_7177_i)++;
				goto _iter_next_1ad91c176;
			};
			{
				auto &_match_expr{ (*(_7208_l))._field_Model };
				
				if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1ad91e9c5:;
					{
						goto _match_end_1ad91e541;
					}
				}
				else {
					_case_begin_1ad91e5a7:;
					{
						(_7177_i)++;
						goto _iter_next_1ad91c176;
					}
				}
				_match_end_1ad91e541:;
			};
			jule::Ptr<_1a7ba4eb4_Var> _7324_v = (*(_7208_l))._field_Model.cast_ptr<_1a7ba4eb4_Var>(&__jule_any_type7);;
			{
				auto expr = &((*((*(_68933_assign))))._field_Left);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ad92050e:;
				if (it != expr_end) {
					jule::I32 _7358_j = it - expr->begin();
					jule::Ptr<_1a7bed89d_Data> _73511_jl = *it;
					{
						while ((((_7358_j != _7177_i) && (_73511_jl != nullptr)) && (__jule_any_type7_compare((*(_73511_jl))._field_Model, _7324_v)))) {
							{
								(_7177_i)++;
								goto _iter_next_1ad91c176;
							}
						_iter_next_1ad920e27:;
						}
						_iter_end_1ad920e27:;;
					}
					_iter_next_1ad92050e:;
					++it;
					_7358_j++;
					goto _iter_begin_1ad92050e;
				}
				_iter_end_1ad92050e:;
			};
			{
				auto expr = &((*((*(_68966_tup))))._field_Datas);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ad920b6e:;
				if (it != expr_end) {
					jule::I32 _7428_j = it - expr->begin();
					jule::Ptr<_1a7bed89d_Data> _74211_jl = *it;
					{
						while ((((_7428_j != _7177_i) && (_74211_jl != nullptr)) && (__jule_any_type7_compare((*(_74211_jl))._field_Model, _7324_v)))) {
							{
								(_7177_i)++;
								goto _iter_next_1ad91c176;
							}
						_iter_next_1ad922104:;
						}
						_iter_end_1ad922104:;;
					}
					_iter_next_1ad920b6e:;
					++it;
					_7428_j++;
					goto _iter_begin_1ad920b6e;
				}
				_iter_end_1ad920b6e:;
			};
			jule::Ptr<_1a7bed89d_Data> _7518_r = (*((*(_68966_tup))))._field_Datas[_7177_i];;
			jule::I32 _7564_offset = ((*_self_.alloc)._field_i + 1LL);;
			(*((*_self_.alloc)._field_scope))._field_Stmts=_1ad8ea6b5_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _7564_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a7b30c31_Assign>(_1a7b30c31_Assign{._field_Left=jule::new_ptr<_1a7a633b1_OperandExpr>(_1a7a633b1_OperandExpr{._field_Type=(*_7208_l.alloc)._field_Type, ._field_Model=(*_7208_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1a7a633b1_OperandExpr>(_1a7a633b1_OperandExpr{._field_Type=(*(_7518_r))._field_Type, ._field_Model=(*_7518_r.alloc)._field_Model}), ._field_Op=(*((*(_68933_assign))))._field_Op}), &__jule_any_type40); __jule_collection; }));
			(*((*(_68933_assign))))._field_Left=jule::append((*((*(_68933_assign))))._field_Left.slice(0LL, _7177_i),(*((*(_68933_assign))))._field_Left.slice((_7177_i + 1LL)));
			(*((*(_68966_tup))))._field_Datas=jule::append((*((*(_68966_tup))))._field_Datas.slice(0LL, _7177_i),(*((*(_68966_tup))))._field_Datas.slice((_7177_i + 1LL)));
		}
	_iter_next_1ad91c176:;
	}
	_iter_end_1ad91c176:;;
	(*_self_.alloc)._field_i=_7163_z;
}



inline void _1a9113ba2_optimizeMultiAssign(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b312b4_MultiAssign> _77040_assign) {
	jule::Ptr<_1a7a68e99_TupleExpr> _7757_tup = static_cast<jule::Ptr<_1a7a68e99_TupleExpr>>(nullptr);;
	{
		auto &_match_expr{ (*(_77040_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1ad927b54:;
			{
				_7757_tup=(*(_77040_assign))._field_Right.unsafe_cast_ptr<_1a7a68e99_TupleExpr>();
			}
		}
		_match_end_1ad927acc:;
	};
	if ((_1a9129426_Assign && (_7757_tup != nullptr))) {
		_1a911318a_normalizeAssign(_self_, &(_77040_assign), &(_7757_tup));
		_1a91138e9_splitAssign(_self_, &(_77040_assign), &(_7757_tup));
		_1a9113586_tryOptimizeSwap(_self_, &(_77040_assign), &(_7757_tup));
		if (((*(_77040_assign))._field_Left.len() == 0LL)) {
			_1a910ee34_removeCurrent(_self_);
			return;;
		};
		if (((*(_77040_assign))._field_Left.len() == 1LL)) {
			jule::Ptr<_1a7bed89d_Data> _8099_l = (*(_77040_assign))._field_Left[0LL];;
			{
				auto &_match_expr{ (*(_8099_l))._field_Model };
				
				if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1ad92ac56:;
					{
						jule::Ptr<_1a7ba4eb4_Var> _81210_v = (*(_8099_l))._field_Model.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
						if ((_1a8600117_FindVar(_81210_v, (*_77040_assign.alloc)._field_Decls) >= 0LL)) {
							_1a910ec36_setCurrentStmt(_self_, jule::Any(_81210_v, &__jule_any_type7));
							goto _julec_label_1ad92a904;
						};
					}
				}
				_match_end_1ad92abce:;
			};
			{
				jule::Ptr<_1a7bed89d_Data> _82010_r = (*(_7757_tup))._field_Datas[0LL];;
				_1a910ec36_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7b30c31_Assign>(_1a7b30c31_Assign{._field_Left=jule::new_ptr<_1a7a633b1_OperandExpr>(_1a7a633b1_OperandExpr{._field_Type=(*(_8099_l))._field_Type, ._field_Model=(*_8099_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1a7a633b1_OperandExpr>(_1a7a633b1_OperandExpr{._field_Type=(*(_82010_r))._field_Type, ._field_Model=(*_82010_r.alloc)._field_Model}), ._field_Op=(*_77040_assign.alloc)._field_Op}), &__jule_any_type40));
			};
			_julec_label_1ad92a904:;
			((*_self_.alloc)._field_i)--;
			return;;
		};
	};
	_1a91220ab_dataCheckpoint _8547_checkpoint = _1a9123123_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*(_77040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad93060c:;
		if (it != expr_end) {
			jule::I32 _8568_i = it - expr->begin();
			jule::Ptr<_1a7bed89d_Data> _85615_l = *it;
			{
				if ((_85615_l != nullptr)) {
					if (((*(*(_self_))._field_data.alloc)._field_boundary != nullptr)) {
						if (_1a912670e_isBoundaryRiskyType((*_85615_l.alloc)._field_Type)) {
							_1a9126445_possibleBoundaryRemove(&(_8547_checkpoint._field_boundary), (*_85615_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_7757_tup != nullptr) && _1a69a79bb_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_7757_tup.alloc)._field_Datas[_8568_i]))._field_Model))) {
							if (_1a69a7c85_isNilValidType((*_85615_l.alloc)._field_Type)) {
								;
								_1a69a6ab9_pushVar(_8547_checkpoint._field_nils.ptr(), _1a69a80c6_getNilVar((*_85615_l.alloc)._field_Model), true);
							};
						} else {
							_1a69a7603_possibleNilRemove(&(_8547_checkpoint._field_nils), (*_85615_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_7757_tup != nullptr))) {
						jule::Ptr<_1a7c3255d_Type> _87410_kind = _1a9121253_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_7757_tup.alloc)._field_Datas[_8568_i]))._field_Type, (*((*(_7757_tup))._field_Datas[_8568_i]))._field_Model);;
						if ((_87410_kind != nullptr)) {
							if (_1a9120d24_isDynamicValidType((*_85615_l.alloc)._field_Type)) {
								_1a911ee22_pushVar(_8547_checkpoint._field_dynamic, _1a9121594_getDynamicVar((*_85615_l.alloc)._field_Model), _87410_kind);
							};
						} else {
							_1a9120a16_possibleDynamicRemove(&(_8547_checkpoint._field_dynamic), (*_85615_l.alloc)._field_Model);
						};
					};
					static__1a9117ab8_optimizeData(&((*_85615_l.alloc)._field_Model), &((*_self_.alloc)._field_data), _self_);
				};
			}
			_iter_next_1ad93060c:;
			++it;
			_8568_i++;
			goto _iter_begin_1ad93060c;
		}
		_iter_end_1ad93060c:;
	};
	static__1a9117ab8_optimizeData(&((*_77040_assign.alloc)._field_Right), &((*_self_.alloc)._field_data), _self_);
	_1a9123662_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _8547_checkpoint);
}



inline void _1a9113e5a_optimizeRet(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b330b8_RetSt> _89332_r) {
	static__1a9117ab8_optimizeData(&((*(_89332_r))._field_Expr), &((*(_self_))._field_data), _self_);
	if ((!(_1a91296ce_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_89332_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ad939da8:;
			{
				goto _match_end_1ad939e96;
			}
		}
		else {
			_case_begin_1ad93a00c:;
			{
				return;;
			}
		}
		_match_end_1ad939e96:;
	};
	jule::Ptr<_1a7a6588b_FnCallExpr> _9077_fc = (*_89332_r.alloc)._field_Expr.cast_ptr<_1a7a6588b_FnCallExpr>(&__jule_any_type30);;
	if (((((!((*((*((*(_9077_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*(_9077_fc))._field_Except == nullptr)) || ((*((*(_9077_fc))._field_Except))._field_Stmts.len() != 1LL)) || (!(_1a85eae48_IsForwarded(&((*(_9077_fc))._field_Except)))))) {
		return;;
	};
	_1a910ec36_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a69a1e7c_ExceptionalForwardingExpr>(_1a69a1e7c_ExceptionalForwardingExpr{._field_Expr=_9077_fc}), &__jule_any_type121));
}



inline void _1a9114213_optimizeStmt(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Any _91733_stmt) {
	{
		auto &_match_expr{ _91733_stmt };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad93d2c9:;
			{
				_1a9114774_optimizeChildHard(_self_, _91733_stmt.unsafe_cast_ptr<_1a7b2c238_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ad93d054:;
			{
				_1a9110709_optimizeData(_self_, _91733_stmt.unsafe_cast_ptr<_1a7bed89d_Data>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad93d362:;
			{
				_1a91109b2_optimizeVar(_self_, _91733_stmt.unsafe_cast_ptr<_1a7ba4eb4_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ad93d3d9:;
			{
				_1a9110c6a_optimizeConditional(_self_, _91733_stmt.unsafe_cast_ptr<_1a7b2cd2c_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ad93d461:;
			{
				_1a91116e9_optimizeRangeIter(_self_, _91733_stmt.unsafe_cast_ptr<_1a7b2e0b4_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad93d4d8:;
			{
				_1a91119a2_optimizeWhileIter(_self_, _91733_stmt.unsafe_cast_ptr<_1a7b2d5d0_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ad93d560:;
			{
				_1a9114774_optimizeChildHard(_self_, (*(_91733_stmt.unsafe_cast_ptr<_1a7b2d129_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ad93d5d7:;
			{
				_1a9112d27_optimizeAssign(_self_, _91733_stmt.unsafe_cast_ptr<_1a7b30c31_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad93d65e:;
			{
				_1a9113ba2_optimizeMultiAssign(_self_, _91733_stmt.unsafe_cast_ptr<_1a7b312b4_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ad93d6d6:;
			{
				_1a9111441_optimizeMatch(_self_, _91733_stmt.unsafe_cast_ptr<_1a7b31c32_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ad93d75d:;
			{
				_1a9113e5a_optimizeRet(_self_, _91733_stmt.unsafe_cast_ptr<_1a7b330b8_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ad93d7d5:;
			{
				_1a911272d_optimizePostfix(_self_, _91733_stmt.unsafe_cast_ptr<_1a7b3077a_Postfix>());
			}
		}
		_match_end_1ad93d175:;
	};
}



inline void _1a91144bb_optimizeChild(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b2c238_Scope> _94734_child) {
	jule::Ptr<_1a910e384_scopeOptimizer> _9487_so = static__1a910e97d_new(_94734_child);;
	(*(_9487_so))._field_parent=_self_;
	(*_9487_so.alloc)._field_data=(*(_self_))._field_data;
	_1a9114972_optimize(_9487_so);
}



inline void _1a9114774_optimizeChildHard(jule::Ptr<_1a910e384_scopeOptimizer> _self_, jule::Ptr<_1a7b2c238_Scope> _98338_child) {
	_1a91225a6_data _9867_alive = _1a91225a6_data{._field_boundary=jule::Ptr<_1a9124861_boundary>(nullptr), ._field_nils=jule::Ptr<_1a69a6624_nils>(nullptr), ._field_dynamic=jule::Ptr<_1a911e97c_dynamic>(nullptr)};;
	_1a9123662_loadCheckpoint(&_9867_alive, _1a9123123_getCheckpoint((*(_self_))._field_data.ptr()));
	_1a91144bb_optimizeChild(_self_, _98338_child);
	_1a9122d8c_removeDeads(&_9867_alive, &((*_self_.alloc)._field_data));
	_1a9123662_loadCheckpoint((*(_self_))._field_data, _1a91233a9_getMutCheckpoint(&_9867_alive));
}



inline void _1a9114972_optimize(jule::Ptr<_1a910e384_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a9114213_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1ad948339:;
	}
	_iter_end_1ad948339:;;
}








inline jule::Bool _1a9116c82_exprOptimizer_eq(_1a9116c82_exprOptimizer *_self_, _1a9116c82_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector) &&
		(_self_->_field_scopeOpt == _self_->_field_scopeOpt);
}

inline void static__1a91172e3_optimize(jule::Any* _2326_model) {
	static__1a9117ab8_optimizeData(_2326_model, &(_1a9121c48_emptyData), nullptr);
}



inline jule::Ptr<_1a9116c82_exprOptimizer> static__1a9117722_new(jule::Any* _2721_model, jule::Ptr<_1a91225a6_data>* _2745_d, jule::Ptr<_1a910e384_scopeOptimizer> _2759_s) {
	return jule::new_ptr<_1a9116c82_exprOptimizer>(_1a9116c82_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_2721_model)), ._field_data=(*(_2745_d)), ._field_inspector=static__1a85e9782_New(), ._field_scopeOpt=_2759_s});;
}



inline void static__1a9117ab8_optimizeData(jule::Any* _3630_model, jule::Ptr<_1a91225a6_data>* _3654_d, jule::Ptr<_1a910e384_scopeOptimizer> _3668_s) {
	if (_1a920cae2_exprEnabled) {
		jule::Ptr<_1a9116c82_exprOptimizer> _398_exop = static__1a9117722_new(_3630_model, _3654_d, _3668_s);;
		_1a911d151_do(_398_exop.ptr());
	};
}



inline void static__1a9117e5e_optimizeConditionalData(jule::Any* _4741_model, jule::Ptr<_1a91225a6_data>* _4765_d, jule::Ptr<_1a910e384_scopeOptimizer> _4779_s) {
	if ((!(_1a920cae2_exprEnabled))) {
		return;;
	};
	jule::Ptr<_1a9116c82_exprOptimizer> _527_exop = static__1a9117722_new(_4741_model, _4765_d, _4779_s);;
	{
		auto &_match_expr{ (*(_4741_model)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad958635:;
			{
				goto _match_end_1ad958712;
			}
		}
		else {
			_case_begin_1ad9589dc:;
			{
				_1a911d151_do(_527_exop.ptr());
				return;;
			}
		}
		_match_end_1ad958712:;
	};
	jule::Bool _677_check = true;;
	jule::Ptr<jule::Bool> _687__check = ((jule::Ptr<jule::Bool>)((&(_677_check))));;
	_1a85ea40e_Inspect((*(_527_exop))._field_inspector.ptr(), &((*((*_527_exop.alloc)._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1ad95a923, jule::Ptr<__jule_anon_1ad95a923_ctx>::make(__jule_anon_1ad95a923_ctx{._687__check=_687__check,._527_exop=_527_exop}).as<jule::Uintptr>(), __jule_anon_1ad95a923_ctx_handler));
}



inline jule::Bool _1a91182a0_selfCmpCond(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _10128_m) {
	if (((_1a7c35671_Prim((*((*((*(_10128_m))))._field_Left))._field_Type.ptr()) != nullptr) && _1a7aee75a_IsFloat((*(_1a7c35671_Prim((*((*((*(_10128_m))))._field_Left))._field_Type)))._field_Kind))) {
		return false;;
	};
	if ((!(_1a7cb6834_EqualModels((*((*((*(_10128_m))))._field_Left))._field_Model, (*((*((*(_10128_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_10128_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1ad960ede:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1a7a57a26_NewBool(true), &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1ad961077:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1a7a57a26_NewBool(false), &__jule_any_type15);
				return true;;
			}
		}
		else {
			_case_begin_1ad95edab:;
			{
				return false;;
			}
		}
		_match_end_1ad960d9b:;
	};
}



inline jule::Bool _1a91185e1_boolCond(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _13025_m) {
	jule::Ptr<_1a7c3b369_Prim> _1313_lp = _1a7c35671_Prim((*((*((*(_13025_m))))._field_Left))._field_Type.ptr());;
	if (((_1313_lp == nullptr) || (!(_1a7c3e59d_IsBool(_1313_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_13025_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ad9656ca:;
			{
				std::swap((*((*(_13025_m))))._field_Left, (*((*(_13025_m))))._field_Right);
			}
		}
		else {
			_case_begin_1ad9648a5:;
			{
				{
					auto &_match_expr{ (*((*((*(_13025_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1ad963b90:;
						{
							goto _match_end_1ad9651d0;
						}
					}
					else {
						_case_begin_1ad965246:;
						{
							return false;;
						}
					}
					_match_end_1ad9651d0:;
				};
			}
		}
		_match_end_1ad96483e:;
	};
	jule::Ptr<_1a79ea9a8_Const> _1487_c = (*((*((*(_13025_m))))._field_Right))._field_Model.cast_ptr<_1a79ea9a8_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_13025_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1ad967259:;
			{
				if (_1a7a58e45_ReadBool(_1487_c.ptr())) {
					(*((*(_self_))._field_model))=(*((*((*(_13025_m))))._field_Left))._field_Model;
				} else {
					_1a7a5a52e_SetBool(_1487_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_1487_c, &__jule_any_type15);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1ad967303:;
			{
				if (_1a7a58e45_ReadBool(_1487_c.ptr())) {
					_1a7a5a52e_SetBool(_1487_c, true);
					(*((*(_self_))._field_model))=jule::Any(_1487_c, &__jule_any_type15);
				} else {
					(*((*(_self_))._field_model))=(*((*((*(_13025_m))))._field_Left))._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1ad9653cd:;
		}
		_match_end_1ad9671c1:;
	};
	return false;;
}



inline jule::Bool _1a9118932_arrayCond(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr> _18325_m) {
	jule::Ptr<_1a7c42b89_Arr> _1847_arr = _1a7c36441_Arr((*((*(_18325_m))._field_Left))._field_Type.ptr());;
	if (((_1847_arr == nullptr) || ((*(_1847_arr))._field_N != 0LL))) {
		return false;;
	};
	(*((*(_self_))._field_model))=jule::Any(static__1a7a57a26_NewBool(true), &__jule_any_type15);
	return true;;
}



inline void _1a9118bda_strConv(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a633b1_OperandExpr>* _19824_m) {
	jule::Ptr<_1a7c3b369_Prim> _1993_p = _1a7c35671_Prim((*((*(_19824_m))))._field_Type.ptr());;
	if (((_1993_p == nullptr) || (!(_1a7c3e834_IsStr(_1993_p.ptr()))))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_19824_m))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ad96d86a:;
			{
				jule::Ptr<_1a7a64ed9_CastingExpr> _2068_c = (*((*(_19824_m))))._field_Model.unsafe_cast_ptr<_1a7a64ed9_CastingExpr>();;
				jule::Ptr<_1a7c40868_Slc> _2078_s = _1a7c366c7_Slc((*((*(_2068_c))._field_Expr))._field_Type.ptr());;
				if ((_2078_s == nullptr)) {
					goto _match_end_1ad96d7e3;
				};
				jule::Ptr<_1a7c3b369_Prim> _2114_sp = _1a7c35671_Prim((*(_2078_s))._field_Elem.ptr());;
				if ((_2114_sp == nullptr)) {
					goto _match_end_1ad96d7e3;
				};
				if (_1a7c3cc94_IsU8(_2114_sp.ptr())) {
					jule::Any _2179_model = jule::Any(jule::new_ptr<_1a69a1ba2_StrFromBytes>(_1a69a1ba2_StrFromBytes{._field_Expr=(*(*(_2068_c))._field_Expr.alloc)._field_Model}), &__jule_any_type127);;
					(*((*(_19824_m))))._field_Model=(*(((jule::Any*)((&(_2179_model))))));
				};
			}
		}
		_match_end_1ad96d7e3:;
	};
}



inline jule::Bool _1a911902b_strCond(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _22324_m) {
	jule::Ptr<_1a7c3b369_Prim> _2243_lp = _1a7c35671_Prim((*((*((*(_22324_m))))._field_Left))._field_Type.ptr());;
	if (((_2243_lp == nullptr) || (!(_1a7c3e834_IsStr(_2243_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*((*(_22324_m))))._field_Op))._field_Id != static_cast<jule::U32>(50LLU)) && ((*(*((*(_22324_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_22324_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ad9770e3:;
			{
				std::swap((*((*(_22324_m))))._field_Left, (*((*(_22324_m))))._field_Right);
			}
		}
		else {
			_case_begin_1ad97628a:;
			{
				{
					auto &_match_expr{ (*((*((*(_22324_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1ad975377:;
						{
							goto _match_end_1ad976ab5;
						}
					}
					else {
						_case_begin_1ad976b2b:;
						{
							return false;;
						}
					}
					_match_end_1ad976ab5:;
				};
			}
		}
		_match_end_1ad976224:;
	};
	jule::Ptr<_1a79ea9a8_Const> _2447_c = (*((*((*(_22324_m))))._field_Right))._field_Model.cast_ptr<_1a79ea9a8_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_22324_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1ad976d5c:;
			{
				if ((_1a7a591cb_ReadStr(_2447_c.ptr())).empty()) {
					jule::Any _2489_model = jule::Any(jule::new_ptr<_1a69a2d07_EmptyCompareExpr>(_1a69a2d07_EmptyCompareExpr{._field_Expr=(*((*((*(_22324_m))))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2489_model))))));
					goto _match_end_1ad979c2d;
				};
				jule::Any _2558_model = jule::Any(jule::new_ptr<_1a69a3643_StrCompExpr>(_1a69a3643_StrCompExpr{._field_Left=(*((*((*(_22324_m))))._field_Left))._field_Model, ._field_Right=_2447_c, ._field_NotEq=false}), &__jule_any_type129);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2558_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ad979cd8:;
			{
				if ((_1a7a591cb_ReadStr(_2447_c.ptr())).empty()) {
					jule::Any _2639_model = jule::Any(jule::new_ptr<_1a69a2d07_EmptyCompareExpr>(_1a69a2d07_EmptyCompareExpr{._field_Expr=(*((*((*(_22324_m))))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2639_model))))));
					goto _match_end_1ad979c2d;
				};
				jule::Any _2708_model = jule::Any(jule::new_ptr<_1a69a3643_StrCompExpr>(_1a69a3643_StrCompExpr{._field_Left=(*((*((*(_22324_m))))._field_Left))._field_Model, ._field_Right=_2447_c, ._field_NotEq=true}), &__jule_any_type129);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2708_model))))));
			}
		}
		_match_end_1ad979c2d:;
	};
	return true;;
}



inline jule::Bool _1a911936c_strConcat(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _28126_m) {
	jule::Ptr<_1a7c3b369_Prim> _2823_lp = _1a7c35671_Prim((*((*((*(_28126_m))))._field_Left))._field_Type.ptr());;
	if (((_2823_lp == nullptr) || (!(_1a7c3e834_IsStr(_2823_lp.ptr()))))) {
		return false;;
	};
	if (((*((*((*(_28126_m))))._field_Op))._field_Id != static_cast<jule::U32>(60LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_28126_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad987851:;
			{
				goto _match_end_1ad9884bc;
			}
		}
		else {
			_case_begin_1ad988533:;
			{
				return false;;
			}
		}
		_match_end_1ad9884bc:;
	};
	jule::Ptr<_1a69a2587_StrConcatExpr> _3057_model = jule::new_ptr<_1a69a2587_StrConcatExpr>(_1a69a2587_StrConcatExpr{._field_Parts=jule::Slice<jule::Any>(nullptr)});;
	jule::Fn<void,jule::Any> _30611_step;;
	jule::Fn<void,jule::Any> *_3094__step = &(_30611_step);;
	_30611_step=jule::__new_closure<void,jule::Any>((void*)__jule_anon_1ad98a1e4, jule::Ptr<__jule_anon_1ad98a1e4_ctx>::make(__jule_anon_1ad98a1e4_ctx{._3057_model=_3057_model,._self_=_self_,._3094__step=_3094__step}).as<jule::Uintptr>(), __jule_anon_1ad98a1e4_ctx_handler);
	_30611_step(jule::Any((*(_28126_m)), &__jule_any_type113));
	jule::Any _3407_anyModel = jule::Any(_3057_model, &__jule_any_type130);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_3407_anyModel))))));
	return true;;
}



inline jule::Bool _1a9119823_tryNeutralElement1(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _34535_m, jule::Ptr<_1a79ea9a8_Const> _34561_c, jule::Ptr<_1a7a633b1_OperandExpr>* _34587_nc) {
	if (_1a7a5b7c7_IsStr(_34561_c.ptr())) {
		if ((!(_1a9128dc6_Str))) {
			return false;;
		};
		if (((_1a7a591cb_ReadStr(_34561_c.ptr())).empty() && ((*((*((*(_34535_m))))._field_Op))._field_Id == static_cast<jule::U32>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_34587_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1a9127ea2_Math)) || (_1a7a59c15_AsF64(_34561_c.ptr()) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_34535_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1ad992042:;
			{
				if (((*(_34587_nc)) == (*((*(_34535_m))))._field_Left)) {
					(*((*(_self_))._field_model))=(*((*(_34587_nc))))._field_Model;
					return true;;
				};
				(*((*(_self_))._field_model))=jule::Any(_34561_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ad992bbe:;
			{
				if (_1a7aee75a_IsFloat((*(_1a7c35671_Prim((*((*(_34587_nc))))._field_Type.ptr())))._field_Kind)) {
					goto _match_end_1ad992a7b;
				};
				_1a7a59ebd_SetI64(_34561_c.ptr(), 0LL);
				(*((*(_self_))._field_model))=jule::Any(_34561_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1ad992c35:;
			{
				(*((*(_self_))._field_model))=(*((*(_34587_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1ad992a7b:;
	};
	return false;;
}



inline jule::Bool _1a9119b64_tryNeutralElement(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _39534_m) {
	{
		auto &_match_expr{ (*((*((*(_39534_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ad997e8d:;
			{
				jule::Ptr<_1a79ea9a8_Const> _3998_c = (*((*((*(_39534_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a79ea9a8_Const>();;
				return _1a9119823_tryNeutralElement1(_self_, _39534_m, _3998_c, &((*((*(_39534_m))))._field_Right));;
			}
		}
		_match_end_1ad997e16:;
	};
	{
		auto &_match_expr{ (*((*((*(_39534_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ad998521:;
			{
				jule::Ptr<_1a79ea9a8_Const> _4048_c = (*((*((*(_39534_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a79ea9a8_Const>();;
				return _1a9119823_tryNeutralElement1(_self_, _39534_m, _4048_c, &((*((*(_39534_m))))._field_Left));;
			}
		}
		_match_end_1ad998499:;
	};
	return false;;
}



inline void _1a9119e1c_checkBinaryForBoundary(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _41039_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_41039_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ad99b7bb:;
			{
				jule::Ptr<_1a7a6a9c3_BuiltinLenCallExpr> _4168_blc = (*((*((*(_41039_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a7a6a9c3_BuiltinLenCallExpr>();;
				if ((!(_1a91269c8_isBoundaryValidType((*((*(_4168_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_41039_m))))._field_Op))._field_Id != static_cast<jule::U32>(70LLU)) && ((*(*((*(_41039_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*((*((*(_41039_m))))._field_Op))._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_41039_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1ad99e9de:;
							{
								jule::Ptr<_1a79ea9a8_Const> _42810_c = jule::new_ptr<_1a79ea9a8_Const>((*((*((*((*(_41039_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a79ea9a8_Const>())));;
								_1a7a5e09e_Sub(_42810_c, (*(static__1a7a574d7_NewI64(1LL))));
								_1a9124d06_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _1a9126c92_getBoundaryVar((*((*(_4168_blc))._field_Expr))._field_Model), jule::Any(_42810_c, &__jule_any_type15));
							}
						}
						_match_end_1ad99e967:;
					};
					return;;
				};
				_1a9124d06_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _1a9126c92_getBoundaryVar((*((*(_4168_blc))._field_Expr))._field_Model), (*((*((*(_41039_m))))._field_Right))._field_Model);
				return;;
			}
		}
		_match_end_1ad99b744:;
	};
	{
		auto &_match_expr{ (*((*((*(_41039_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ad99be09:;
			{
				jule::Ptr<_1a7a6a9c3_BuiltinLenCallExpr> _4398_blc = (*((*((*(_41039_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a7a6a9c3_BuiltinLenCallExpr>();;
				if ((!(_1a91269c8_isBoundaryValidType((*((*(_4398_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_41039_m))))._field_Op))._field_Id != static_cast<jule::U32>(69LLU)) && ((*(*((*(_41039_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*((*((*(_41039_m))))._field_Op))._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_41039_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1ad9a6584:;
							{
								jule::Ptr<_1a79ea9a8_Const> _45110_c = jule::new_ptr<_1a79ea9a8_Const>((*((*((*((*(_41039_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a79ea9a8_Const>())));;
								_1a7a5e09e_Sub(_45110_c, (*(static__1a7a574d7_NewI64(1LL))));
								_1a9124d06_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _1a9126c92_getBoundaryVar((*((*(_4398_blc))._field_Expr))._field_Model), jule::Any(_45110_c, &__jule_any_type15));
							}
						}
						_match_end_1ad9a650c:;
					};
					return;;
				};
				_1a9124d06_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _1a9126c92_getBoundaryVar((*((*(_4398_blc))._field_Expr))._field_Model), (*((*((*(_41039_m))))._field_Left))._field_Model);
				return;;
			}
		}
		_match_end_1ad99bd82:;
	};
}



inline void _1a911a1c5_checkBinaryForNil(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _46234_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _4667_var = _1a69a80c6_getNilVar((*((*((*(_46234_m))))._field_Left))._field_Model);;
	if ((_4667_var != 0LLU)) {
		if ((!(_1a69a7c85_isNilValidType((*(*((*(_46234_m))))._field_Left.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_46234_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1ad9abd1a:;
				{
					_1a69a6ab9_pushVar((*((*(_self_))._field_data))._field_nils.ptr(), _4667_var, ((*((*((*(_46234_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1ad9abc93:;
		};
		return;;
	};
	_4667_var=_1a69a80c6_getNilVar((*((*((*(_46234_m))))._field_Right))._field_Model);
	if ((_4667_var != 0LLU)) {
		if ((!(_1a69a7c85_isNilValidType((*(*((*(_46234_m))))._field_Right.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_46234_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1ad9ae48d:;
				{
					_1a69a6ab9_pushVar((*((*(_self_))._field_data))._field_nils.ptr(), _4667_var, ((*((*((*(_46234_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1ad9ae416:;
		};
		return;;
	};
}



inline void _1a911a47d_shift(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr> _49621_m) {
	jule::I32 _4983_z = _1a7ae639a_BitSizeOf((*(_1a7c35671_Prim((*((*(_49621_m))._field_Left))._field_Type.ptr())))._field_Kind);;
	jule::U64 _4993_s = _1a7a5997e_AsU64((*((*_49621_m.alloc)._field_Right))._field_Model.cast_ptr<_1a79ea9a8_Const>(&__jule_any_type15).ptr());;
	if ((_4993_s >= static_cast<jule::U64>(_4983_z))) {
		(*((*(_self_))._field_model))=jule::Any(static__1a7a5775c_NewU64(0LLU), &__jule_any_type15);
		return;;
	};
	jule::Any _5097_model = jule::Any(jule::new_ptr<_1a69a3ec3_UnsafeBinaryExpr>(_1a69a3ec3_UnsafeBinaryExpr{._field_Node=_49621_m}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5097_model))))));
}



inline jule::Bool _1a911a7be_binaryMath(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _51627_m) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7c3b369_Prim> _5203_lp = _1a7c35671_Prim((*((*((*(_51627_m))))._field_Left))._field_Type.ptr());;
	if ((_5203_lp == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7c3b369_Prim> _5243_rp = _1a7c35671_Prim((*((*((*(_51627_m))))._field_Right))._field_Type);;
	if ((_5243_rp == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*((*(_51627_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1ac6d1777:;
			{
				if (((!(_1a7aee419_IsInt((*(_5203_lp))._field_Kind))) || (!(_1a7cb6834_EqualModels((*(*((*(_51627_m))))._field_Left.alloc)._field_Model, (*((*((*(_51627_m))))._field_Right))._field_Model))))) {
					goto _match_end_1ac6d1eb4;
				};
				(*((*(_51627_m))))._field_Op=jule::new_ptr<_1a79633b0_Token>((*(*((*(_51627_m))))._field_Op.alloc));
				(*(*((*(_51627_m))))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
				(*(*((*(_51627_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
				(*((*((*(_51627_m))))._field_Right))._field_Model=jule::Any(static__1a7a5775c_NewU64(1LLU), &__jule_any_type15);
				jule::Any _5438_model = jule::Any(jule::new_ptr<_1a69a3ec3_UnsafeBinaryExpr>(_1a69a3ec3_UnsafeBinaryExpr{._field_Node=(*(_51627_m))}), &__jule_any_type131);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5438_model))))));
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1ac6d206e:;
			{
				if (((!(_1a7aee419_IsInt((*(_5203_lp))._field_Kind))) || (!(_1a7cb6834_EqualModels((*(*((*(_51627_m))))._field_Left.alloc)._field_Model, (*((*((*(_51627_m))))._field_Right))._field_Model))))) {
					goto _match_end_1ac6d1eb4;
				};
				jule::Ptr<_1a79ea9a8_Const> _5528_c = static__1a7a5775c_NewU64(0LLU);;
				(*(_5528_c))._field_Kind=(*(_5203_lp))._field_Kind;
				(*((*(_self_))._field_model))=jule::Any(_5528_c, &__jule_any_type15);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac6d1eb4:;
	};
	{
		auto &_match_expr{ (*((*((*(_51627_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ac6d2107:;
			{
				goto _match_end_1ac6d8be1;
			}
		}
		else {
			_case_begin_1ac6d8c57:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ac6d8be1:;
	};
	{
		auto &_match_expr{ (*((*((*(_51627_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ac6d9a05:;
			{
				jule::Bool _5694_ok;
				jule::U64 _5698_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a911d591_checkForBitShiftOpt(&((*((*(_51627_m))))._field_Left), &((*((*(_51627_m))))._field_Right));
					_5694_ok = __jule_assign_result.__jule_result_arg0;
					_5698_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_5694_ok) {
					(*((*(_51627_m))))._field_Op=jule::new_ptr<_1a79633b0_Token>((*(*((*(_51627_m))))._field_Op.alloc));
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_1a79ea9a8_Const> _5749_c = (*((*((*(_51627_m))))._field_Right))._field_Model.cast_ptr<_1a79ea9a8_Const>(&__jule_any_type15);;
					_1a7a5a276_SetU64(_5749_c.ptr(), _5698_x);
					_1a911a47d_shift(_self_, (*(_51627_m)));
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1ac6d9a6b:;
			{
				jule::Bool _5804_ok;
				jule::U64 _5808_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a911d591_checkForBitShiftOpt(&((*((*(_51627_m))))._field_Left), &((*((*(_51627_m))))._field_Right));
					_5804_ok = __jule_assign_result.__jule_result_arg0;
					_5808_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_5804_ok) {
					(*((*(_51627_m))))._field_Op=jule::new_ptr<_1a79633b0_Token>((*(*((*(_51627_m))))._field_Op.alloc));
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Id=static_cast<jule::U32>(57LLU);
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_1a79ea9a8_Const> _5859_c = (*((*((*(_51627_m))))._field_Right))._field_Model.cast_ptr<_1a79ea9a8_Const>(&__jule_any_type15);;
					_1a7a5a276_SetU64(_5859_c.ptr(), _5808_x);
					_1a911a47d_shift(_self_, (*(_51627_m)));
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1ac6d9ad2:;
			{
				jule::Ptr<_1a79ea9a8_Const> _5918_c = (*((*((*(_51627_m))))._field_Right))._field_Model.cast_ptr<_1a79ea9a8_Const>(&__jule_any_type15);;
				if ((_1a7a59c15_AsF64(_5918_c.ptr()) == 2LL)) {
					(*((*(_51627_m))))._field_Op=jule::new_ptr<_1a79633b0_Token>((*(*((*(_51627_m))))._field_Op.alloc));
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Id=static_cast<jule::U32>(65LLU);
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_1a7a59ebd_SetI64(_5918_c, 1LL);
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ac6d9b48:;
			{
				jule::F64 _6034_s = _1a7a59c15_AsF64((*((*((*(_51627_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a79ea9a8_Const>().ptr());;
				if ((_6034_s == 0LL)) {
					(*((*(_self_))._field_model))=(*((*((*(_51627_m))))._field_Left))._field_Model;
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1ac6d964d:;
			{
				_1a911a47d_shift(_self_, (*(_51627_m)));
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac6d8e22:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ac6d93ea:;
	};
	jule::Any _6177_model = jule::Any(jule::new_ptr<_1a69a3ec3_UnsafeBinaryExpr>(_1a69a3ec3_UnsafeBinaryExpr{._field_Node=(*(_51627_m))}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_6177_model))))));
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a911aa77_binaryStrCommon(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr>* _62432_m) {
	_1a9118bda_strConv(_self_, &((*((*(_62432_m))))._field_Left));
	_1a9118bda_strConv(_self_, &((*((*(_62432_m))))._field_Right));
}



inline void _1a911ad30_binary(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a638ab_BinaryExpr> _62922_m) {
	if (_1a9128dc6_Str) {
		_1a911aa77_binaryStrCommon(_self_, &(_62922_m));
		{
			
			if (_1a911902b_strCond(_self_, &(_62922_m)) || _1a911936c_strConcat(_self_, &(_62922_m))) {
				_case_begin_1ad748524:;
				{
					goto _julec_label_1ad74b659;
				}
			}
			_match_end_1ad7484ad:;
		};
	};
	if ((_1a9129ee8_Array && _1a9118932_arrayCond(_self_, _62922_m))) {
		goto _julec_label_1ad74b659;
	};
	if (_1a9128b84_Cond) {
		{
			
			if (_1a91185e1_boolCond(_self_, &(_62922_m)) || _1a91182a0_selfCmpCond(_self_, &(_62922_m))) {
				_case_begin_1ad74a6e1:;
				{
					goto _julec_label_1ad74b659;
				}
			}
			_match_end_1ad74a59d:;
		};
	};
	if (_1a9119b64_tryNeutralElement(_self_, &(_62922_m))) {
		goto _julec_label_1ad74b659;
	};
	if ((_1a9127ea2_Math && _1a911a7be_binaryMath(_self_, &(_62922_m)))) {
		goto _julec_label_1ad74b659;
	};
	_julec_label_1ad74b659:;
	if (((*((*(_62922_m))._field_Op))._field_Id == static_cast<jule::U32>(55LLU))) {
		_1a91225a6_data _6868_checkpoint = _1a91225a6_data{._field_boundary=jule::Ptr<_1a9124861_boundary>(nullptr), ._field_nils=jule::Ptr<_1a69a6624_nils>(nullptr), ._field_dynamic=jule::Ptr<_1a911e97c_dynamic>(nullptr)};;
		_1a9123662_loadCheckpoint(&_6868_checkpoint, _1a9123123_getCheckpoint((*(_self_))._field_data.ptr()));
		{
			_1a85e9ce3_InspectStep((*(_self_))._field_inspector.ptr(), &((*((*_62922_m.alloc)._field_Left))._field_Model));
		};
		_1a9123662_loadCheckpoint((*(_self_))._field_data, _1a9123123_getCheckpoint(&_6868_checkpoint));
		{
			_1a85e9ce3_InspectStep((*(_self_))._field_inspector.ptr(), &((*((*_62922_m.alloc)._field_Right))._field_Model));
		};
		_1a9123662_loadCheckpoint((*(_self_))._field_data, _1a91233a9_getMutCheckpoint(&_6868_checkpoint));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
	};
}



inline void _1a911b0d8_unary(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a63c85_UnaryExpr> _70621_m) {
	if ((!(_1a91287bb_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_70621_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ad7507b2:;
			{
				{
					auto &_match_expr{ (*((*(_70621_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1ad7517b3:;
						{
							jule::Ptr<_1a7a63c85_UnaryExpr> _7149_um = (*((*(_70621_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a7a63c85_UnaryExpr>();;
							if (((*((*(_7149_um))._field_Op))._field_Id == static_cast<jule::U32>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_7149_um.alloc)._field_Expr))._field_Model;
							};
							return;;
						}
					}
					_match_end_1ad75173b:;
				};
				if (((_1a912825a_Access && ((*((*(_self_))._field_data))._field_nils != nullptr)) && _1a69a7c85_isNilValidType((*((*(_70621_m))._field_Expr))._field_Type))) {
					jule::Uintptr _7245_var = _1a69a80c6_getNilVar((*(*(_70621_m))._field_Expr.alloc)._field_Model);;
					if (_1a69a724b_isSafe((*((*(_self_))._field_data))._field_nils, _7245_var)) {
						jule::Any _72610_model = jule::Any(jule::new_ptr<_1a69a5249_UnsafeDerefExpr>(_1a69a5249_UnsafeDerefExpr{._field_Base=_70621_m}), &__jule_any_type132);;
						(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_72610_model))))));
					} else {
						_1a69a6ab9_pushVar((*((*(_self_))._field_data))._field_nils, _7245_var, true);
					};
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ad750ae2:;
			{
				{
					auto &_match_expr{ (*((*(_70621_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_1ad710640:;
						{
							jule::Ptr<_1a7ba4eb4_Var> _7369_v = (*((*(_70621_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
							if ((*(_7369_v))._field_Reference) {
								jule::Any _73810_model = jule::Any(jule::new_ptr<_1a69a3104_RefExpr>(_1a69a3104_RefExpr{._field_Var=_7369_v}), &__jule_any_type133);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_73810_model))))));
							};
						}
					}
					_match_end_1ad7105b8:;
				};
			}
		}
		_match_end_1ad750a37:;
	};
}



inline void _1a911b391_structureLit(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a64659_StructLitExpr> _74528_m) {
	{
		auto expr = &((*(_74528_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad710ed1:;
		if (it != expr_end) {
			jule::Ptr<_1a7a642b3_StructArgExpr> _74615_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1a912670e_isBoundaryRiskyType((*((*(_74615_arg))._field_Expr))._field_Type)) {
						_1a9126445_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_74615_arg, &__jule_any_type134));
					};
				};
				if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
					_1a69a7603_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_74615_arg))._field_Expr))._field_Model);
				};
				if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
					_1a9120a16_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_74615_arg))._field_Expr))._field_Model);
				};
			}
			_iter_next_1ad710ed1:;
			++it;
			goto _iter_begin_1ad710ed1;
		}
		_iter_end_1ad710ed1:;
	};
}



inline void _1a911b649_casting(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a64ed9_CastingExpr> _76123_m) {
	jule::Bool _7623_valid = _1a9120d24_isDynamicValidType((*(_76123_m))._field_ExprType);;
	jule::Uintptr _7633_var = _1a9121594_getDynamicVar((*((*_76123_m.alloc)._field_Expr))._field_Model);;
	if (((_7623_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1a912065e_isFits((*((*(_self_))._field_data))._field_dynamic, _7633_var, (*_76123_m.alloc)._field_Type))) {
		jule::Any _7658_model = jule::Any(jule::new_ptr<_1a69a5777_UnsafeCastingExpr>(_1a69a5777_UnsafeCastingExpr{._field_Base=_76123_m}), &__jule_any_type135);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_7658_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_dynamic != nullptr) && _7623_valid)) {
		_1a911ee22_pushVar((*((*(_self_))._field_data))._field_dynamic, _7633_var, (*_76123_m.alloc)._field_Type);
	};
}



inline void _1a911b9ac_args(_1a9116c82_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a7a729db_ParamIns>> _77520_params, jule::Slice<jule::Any>* _77552_args) {
	{
		auto expr = _77552_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9e213b:;
		if (it != expr_end) {
			jule::I32 _7768_i = it - expr->begin();
			jule::Any _77615_arg = *it;
			{
				if ((_7768_i >= _77520_params.len())) {
					goto _iter_next_1ad9e213b;
				};
				jule::Ptr<_1a7a729db_ParamIns> _7808_p = _77520_params[_7768_i];;
				if (((*((*(_7808_p))._field_Decl))._field_Mutable && (*(*(_7808_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1a912670e_isBoundaryRiskyType((*_7808_p.alloc)._field_Type)) {
							_1a9126445_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _77615_arg);
						};
					};
					if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
						_1a69a7603_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _77615_arg);
					};
					if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
						_1a9120a16_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _77615_arg);
					};
				};
			}
			_iter_next_1ad9e213b:;
			++it;
			_7768_i++;
			goto _iter_begin_1ad9e213b;
		}
		_iter_end_1ad9e213b:;
	};
}



inline void _1a911bd20_scope(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7b2c238_Scope>* _80022_s, jule::Bool _80039_child) {
	if ((_80039_child && ((*(_self_))._field_scopeOpt != nullptr))) {
		_1a9114774_optimizeChildHard((*(_self_))._field_scopeOpt, (*(_80022_s)));
		return;;
	};
	jule::Ptr<_1a910e384_scopeOptimizer> _8057_scopt = static__1a910e97d_new((*(_80022_s)));;
	if (((*(_self_))._field_data != nullptr)) {
		(*(_8057_scopt))._field_data=jule::new_ptr<_1a91225a6_data>(_1a91225a6_data{._field_boundary=jule::Ptr<_1a9124861_boundary>(nullptr), ._field_nils=jule::Ptr<_1a69a6624_nils>(nullptr), ._field_dynamic=jule::Ptr<_1a911e97c_dynamic>(nullptr)});
		_1a9123662_loadCheckpoint((*(_8057_scopt))._field_data, _1a9123123_getCheckpoint((*(_self_))._field_data));
	};
	_1a9114972_optimize(_8057_scopt);
}



inline void _1a911c0c8_optimizeStrBuilderCall(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a6588b_FnCallExpr>* _81639_m) {
	;
	{
		if (((*((*(_1a860157a_ProgramMeta))._field_StrBuilder))._field_Write == (*((*(_81639_m))))._field_Func)) {
			jule::Any _8239_model = jule::Any(jule::new_ptr<_1a69a2213_FnCallIgnoreExceptionalExpr>(_1a69a2213_FnCallIgnoreExceptionalExpr{._field_Base=(*(_81639_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8239_model))))));
			return;;
		};
	};
	{
		if (((*((*(_1a860157a_ProgramMeta))._field_StrBuilder))._field_WriteByte == (*((*(_81639_m))))._field_Func)) {
			jule::Any _8239_model = jule::Any(jule::new_ptr<_1a69a2213_FnCallIgnoreExceptionalExpr>(_1a69a2213_FnCallIgnoreExceptionalExpr{._field_Base=(*(_81639_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8239_model))))));
			return;;
		};
	};
	{
		if (((*((*(_1a860157a_ProgramMeta))._field_StrBuilder))._field_WriteRune == (*((*(_81639_m))))._field_Func)) {
			jule::Any _8239_model = jule::Any(jule::new_ptr<_1a69a2213_FnCallIgnoreExceptionalExpr>(_1a69a2213_FnCallIgnoreExceptionalExpr{._field_Base=(*(_81639_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8239_model))))));
			return;;
		};
	};
	{
		if (((*((*(_1a860157a_ProgramMeta))._field_StrBuilder))._field_WriteStr == (*((*(_81639_m))))._field_Func)) {
			jule::Any _8239_model = jule::Any(jule::new_ptr<_1a69a2213_FnCallIgnoreExceptionalExpr>(_1a69a2213_FnCallIgnoreExceptionalExpr{._field_Base=(*(_81639_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8239_model))))));
			return;;
		};
	};
}



inline void _1a911c381_lenCall(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a6a9c3_BuiltinLenCallExpr> _83123_m) {
	if ((!(_1a912a4d2_Len))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_83123_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ad75be50:;
			{
				goto _match_end_1ad75c1d6;
			}
		}
		else {
			_case_begin_1ad75c24c:;
			{
				return;;
			}
		}
		_match_end_1ad75c1d6:;
	};
	jule::Ptr<_1a7a64ed9_CastingExpr> _8427_c = (*((*(_83123_m))._field_Expr))._field_Model.cast_ptr<_1a7a64ed9_CastingExpr>(&__jule_any_type94);;
	jule::Ptr<_1a7c3b369_Prim> _8437_prim = _1a7c35671_Prim((*((*(_8427_c))._field_Expr))._field_Type.ptr());;
	if (((_8437_prim == nullptr) || (!(_1a7c3e834_IsStr(_8437_prim.ptr()))))) {
		return;;
	};
	jule::Ptr<_1a7c40868_Slc> _8487_slc = _1a7c366c7_Slc((*_8427_c.alloc)._field_Type.ptr());;
	if ((_8487_slc == nullptr)) {
		return;;
	};
	_8437_prim=_1a7c35671_Prim((*(_8487_slc))._field_Elem.ptr());
	if ((_8437_prim == nullptr)) {
		return;;
	};
	{
		
		if (_1a7c3cc94_IsU8(_8437_prim.ptr())) {
			_case_begin_1ad76085a:;
			{
				(*_83123_m.alloc)._field_Expr=(*_8427_c.alloc)._field_Expr;
			}
		}
		else if (_1a7c3c777_IsI32(_8437_prim.ptr())) {
			_case_begin_1ad7608c1:;
			{
				jule::Ptr<_1a7a73b41_FnIns> _8658_func = (*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_RuneCount;;
				(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1a7a6588b_FnCallExpr>(_1a7a6588b_FnCallExpr{._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Func=_8658_func, ._field_IsCo=false, ._field_Expr=jule::Any(_8658_func, &__jule_any_type65), ._field_Args=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(*(_8427_c))._field_Expr.alloc)._field_Model; __jule_collection; }), ._field_Except=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Assigned=false}), &__jule_any_type30);
			}
		}
		_match_end_1ad760a25:;
	};
}



inline void _1a911c639_funcCall(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a6588b_FnCallExpr> _87424_m) {
	_1a911b9ac_args(_self_, (*((*(_87424_m))._field_Func))._field_Params, &((*_87424_m.alloc)._field_Args));
	if (((*_87424_m.alloc)._field_Except != nullptr)) {
		;
		_1a911bd20_scope(_self_, &((*_87424_m.alloc)._field_Except), true);
	};
	{
		
		if ((_1a912a724_StdStrings && ((*(_1a860157a_ProgramMeta))._field_StrBuilder != nullptr))) {
			_case_begin_1ad764c5a:;
			{
				_1a911c0c8_optimizeStrBuilderCall(_self_, &(_87424_m));
			}
		}
		_match_end_1ad7645a6:;
	};
}



inline void _1a911c8e2_indexing(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a6621b_IndexingExpr> _88824_m) {
	if ((!(_1a912825a_Access))) {
		return;;
	};
	jule::Bool _8933_array = (_1a7c36441_Arr((*((*(_88824_m))._field_Expr))._field_Type.ptr()) != nullptr);;
	if ((_8933_array && _1a7bee2d8_IsConst((*_88824_m.alloc)._field_Index.ptr()))) {
		jule::Any _8968_model = jule::Any(jule::new_ptr<_1a69a42c0_UnsafeIndexingExpr>(_1a69a42c0_UnsafeIndexingExpr{._field_Node=_88824_m}), &__jule_any_type137);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8968_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1a91269c8_isBoundaryValidType((*(*(_88824_m))._field_Expr.alloc)._field_Type))) {
		jule::Uintptr _9024_var = _1a9126c92_getBoundaryVar((*(*(_88824_m))._field_Expr.alloc)._field_Model);;
		if (_1a9125543_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _9024_var, (*((*_88824_m.alloc)._field_Index))._field_Model)) {
			jule::Any _9049_model = jule::Any(jule::new_ptr<_1a69a42c0_UnsafeIndexingExpr>(_1a69a42c0_UnsafeIndexingExpr{._field_Node=_88824_m}), &__jule_any_type137);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9049_model))))));
			return;;
		};
		_1a9124d06_pushVar((*((*(_self_))._field_data))._field_boundary, _9024_var, (*((*_88824_m.alloc)._field_Index))._field_Model);
	};
}



inline void _1a911cb9a_anonFunc(_1a9116c82_exprOptimizer* _self_, jule::Ptr<_1a7a666c2_AnonFnExpr> _91224_m) {
	;
	_1a911bd20_scope(_self_, &((*((*(_91224_m))._field_Func))._field_Scope), false);
}



inline void _1a911ce53_inspectStep(_1a9116c82_exprOptimizer* _self_, jule::Any* _92128_m) {
	(*(_self_))._field_model=((jule::Ptr<jule::Any>)(_92128_m));
	{
		auto &_match_expr{ (*(_92128_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1adb4d693:;
			{
				_1a911ad30_binary(_self_, (*(_92128_m)).cast_ptr<_1a7a638ab_BinaryExpr>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1adb4ce12:;
			{
				_1a911b0d8_unary(_self_, (*(_92128_m)).cast_ptr<_1a7a63c85_UnaryExpr>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1adb4d709:;
			{
				_1a911b391_structureLit(_self_, (*(_92128_m)).cast_ptr<_1a7a64659_StructLitExpr>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1adb4d770:;
			{
				_1a911b649_casting(_self_, (*(_92128_m)).cast_ptr<_1a7a64ed9_CastingExpr>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1adb4d7d6:;
			{
				_1a911c639_funcCall(_self_, (*(_92128_m)).cast_ptr<_1a7a6588b_FnCallExpr>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1adb4d84c:;
			{
				_1a911c381_lenCall(_self_, (*(_92128_m)).cast_ptr<_1a7a6a9c3_BuiltinLenCallExpr>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1adb4d8b3:;
			{
				_1a911c8e2_indexing(_self_, (*(_92128_m)).cast_ptr<_1a7a6621b_IndexingExpr>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1adb4d929:;
			{
				_1a911cb9a_anonFunc(_self_, (*(_92128_m)).cast_ptr<_1a7a666c2_AnonFnExpr>(&__jule_any_type101));
			}
		}
		_match_end_1adb4d583:;
	};
}



inline void _1a911d151_do(_1a9116c82_exprOptimizer* _self_) {
	_1a85ea40e_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1ad9ed6ca, jule::Ptr<__jule_anon_1ad9ed6ca_ctx>::make(__jule_anon_1ad9ed6ca_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad9ed6ca_ctx_handler));
}








inline jule::Bool _1a911e63b_dynamicVar_eq(_1a911e63b_dynamicVar *_self_, _1a911e63b_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _1a911ee22_pushVar(jule::Ptr<_1a911e97c_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1a7c3255d_Type> _2442_kind) {
	if (((!(_1a9129c40_Dynamic)) || (_2424_var == 0LLU))) {
		return;;
	};
	_2442_kind=_1a9121253_isTypeGuaranteedDynamicData(&(_self_), _2442_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad76aba6:;
		if (it != expr_end) {
			jule::I32 _307_i = it - expr->begin();
			{
				_1a911e63b_dynamicVar *_319_v = &((*(_self_))._field_vars[_307_i]);;
				if (((*(_319_v))._field_var == _2424_var)) {
					(*(_319_v))._field_kind=_2442_kind;
					return;;
				};
			}
			_iter_next_1ad76aba6:;
			++it;
			_307_i++;
			goto _iter_begin_1ad76aba6;
		}
		_iter_end_1ad76aba6:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad76be82:;
		if (it != expr_end) {
			jule::I32 _387_i = it - expr->begin();
			{
				_1a911e63b_dynamicVar *_399_v = &((*_self_.alloc)._field_vars[_387_i]);;
				if (((*(_399_v))._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _2424_var;
						jule::Ptr<_1a7c3255d_Type> _1___jule_assign_arg = _2442_kind;
						(*(_399_v))._field_var = ___jule_assign_arg;
						(*(_399_v))._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1ad76be82:;
			++it;
			_387_i++;
			goto _iter_begin_1ad76be82;
		}
		_iter_end_1ad76be82:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1a911e63b_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a911e63b_dynamicVar{._field_var=_2424_var, ._field_kind=_2442_kind}; __jule_collection; }));
}



inline jule::Bool _1a9120263_removeVar(_1a911e97c_dynamic* _self_, jule::Uintptr _4925_var) {
	if ((_4925_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad76e946:;
			if (it != expr_end) {
				jule::I32 _518_i = it - expr->begin();
				{
					_1a911e63b_dynamicVar *_5210_v = &((*(_self_))._field_vars[_518_i]);;
					if (((*(_5210_v))._field_var == _4925_var)) {
						(*(_5210_v))._field_var=0LLU;
						(*(_5210_v))._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1ad76e946:;
				++it;
				_518_i++;
				goto _iter_begin_1ad76e946;
			}
			_iter_end_1ad76e946:;
		};
	};
	return false;;
}



inline jule::Bool _1a912065e_isFits(_1a911e97c_dynamic* _self_, jule::Uintptr _6422_var, jule::Ptr<_1a7c3255d_Type> _6436_kind) {
	if ((_6422_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad7719ae:;
			if (it != expr_end) {
				_1a911e63b_dynamicVar _6611_v = *it;
				{
					if ((_6611_v._field_var == _6422_var)) {
						return ((_6611_v._field_kind != nullptr) && _1a7c32c9a_Equal(_6611_v._field_kind, _6436_kind));;
					};
				}
				_iter_next_1ad7719ae:;
				++it;
				goto _iter_begin_1ad7719ae;
			}
			_iter_end_1ad7719ae:;
		};
	};
	return false;;
}








inline jule::Bool _1a91220ab_dataCheckpoint_eq(_1a91220ab_dataCheckpoint *_self_, _1a91220ab_dataCheckpoint _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}






inline jule::Bool _1a91225a6_data_eq(_1a91225a6_data *_self_, _1a91225a6_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}

inline void _1a9122d8c_removeDeads(_1a91225a6_data* _self_, jule::Ptr<_1a91225a6_data>* _4228_other) {
	if ((((*(_self_))._field_boundary != nullptr) && ((*((*(_4228_other))))._field_boundary != nullptr))) {
		_1ad7732eb__removeDeads(&((*(_self_))._field_boundary), &((*((*(_4228_other))))._field_boundary), 0LLU);
	};
	if ((((*(_self_))._field_nils != nullptr) && ((*((*(_4228_other))))._field_nils != nullptr))) {
		_1ad7751ee__removeDeads(&((*(_self_))._field_nils), &((*((*(_4228_other))))._field_nils), 0LLU);
	};
	if ((((*(_self_))._field_dynamic != nullptr) && ((*((*(_4228_other))))._field_dynamic != nullptr))) {
		_1ad778686__removeDeads(&((*(_self_))._field_dynamic), &((*((*(_4228_other))))._field_dynamic), 0LLU);
	};
}



inline _1a91220ab_dataCheckpoint _1a9123123_getCheckpoint(_1a91225a6_data* _self_) {
	_1a91220ab_dataCheckpoint _577_c = _1a91220ab_dataCheckpoint{._field_boundary=jule::Ptr<_1a9124861_boundary>(nullptr), ._field_nils=jule::Ptr<_1a69a6624_nils>(nullptr), ._field_dynamic=jule::Ptr<_1a911e97c_dynamic>(nullptr)};;
	if (((*(_self_))._field_boundary != nullptr)) {
		_577_c._field_boundary=jule::new_ptr<_1a9124861_boundary>(_1a9124861_boundary{._field_vars=jule::Slice<_1a9124520_boundaryVar>(nullptr)});
		(*_577_c._field_boundary.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1a9124520_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a9124520_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*(*(_self_))._field_boundary.alloc)._field_vars);
		{
			auto expr = &((*_577_c._field_boundary.alloc)._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acbb7356:;
			if (it != expr_end) {
				jule::I32 _618_i = it - expr->begin();
				{
					(*(_577_c._field_boundary))._field_vars[_618_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),(*(_577_c._field_boundary))._field_vars[_618_i]._field_maxSize);
				}
				_iter_next_1acbb7356:;
				++it;
				_618_i++;
				goto _iter_begin_1acbb7356;
			}
			_iter_end_1acbb7356:;
		};
	};
	if (((*(_self_))._field_nils != nullptr)) {
		_577_c._field_nils=jule::new_ptr<_1a69a6624_nils>(_1a69a6624_nils{._field_vars=jule::Slice<_1a69a62d3_nilVar>(nullptr)});
		(*_577_c._field_nils.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1a69a62d3_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a69a62d3_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*(*(_self_))._field_nils.alloc)._field_vars);
	};
	if (((*(_self_))._field_dynamic != nullptr)) {
		_577_c._field_dynamic=jule::new_ptr<_1a911e97c_dynamic>(_1a911e97c_dynamic{._field_vars=jule::Slice<_1a911e63b_dynamicVar>(nullptr)});
		(*_577_c._field_dynamic.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1a911e63b_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a911e63b_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1a7c3255d_Type>(nullptr)}; __jule_collection; }),(*(*(_self_))._field_dynamic.alloc)._field_vars);
	};
	return _577_c;;
}



inline _1a91220ab_dataCheckpoint _1a91233a9_getMutCheckpoint(_1a91225a6_data* _self_) {
	return _1a91220ab_dataCheckpoint{._field_boundary=(*(_self_))._field_boundary, ._field_nils=(*(_self_))._field_nils, ._field_dynamic=(*(_self_))._field_dynamic};;
}



inline void _1a9123662_loadCheckpoint(_1a91225a6_data* _self_, _1a91220ab_dataCheckpoint _8534_c) {
	(*(_self_))._field_boundary=_8534_c._field_boundary;
	(*(_self_))._field_nils=_8534_c._field_nils;
	(*(_self_))._field_dynamic=_8534_c._field_dynamic;
}











inline void _1a9124d06_pushVar(_1a9124861_boundary* _self_, jule::Uintptr _2523_var, jule::Any _2541_maxSize) {
	if (((!(_1a912825a_Access)) || (_2523_var == 0LLU))) {
		return;;
	};
	if ((!(_1a91258c8_isValidBoundaryInfo(_2541_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbcb348:;
		if (it != expr_end) {
			_1a9124520_boundaryVar _3315_v = *it;
			{
				if ((_3315_v._field_var == _2523_var)) {
					{
						auto expr = &(_3315_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1acbcc190:;
						if (it != expr_end) {
							jule::I32 _359_i = it - expr->begin();
							jule::Any _3512_max = *it;
							{
								if (_1a9126115_fitsSize(_2541_maxSize, _3512_max)) {
									_3315_v._field_maxSize[_359_i]=_2541_maxSize;
									return;;
								};
							}
							_iter_next_1acbcc190:;
							++it;
							_359_i++;
							goto _iter_begin_1acbcc190;
						}
						_iter_end_1acbcc190:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3315_v._field_maxSize; __jule_push_dest.push(_2541_maxSize); };
					return;;
				};
			}
			_iter_next_1acbcb348:;
			++it;
			goto _iter_begin_1acbcb348;
		}
		_iter_end_1acbcb348:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbcc932:;
		if (it != expr_end) {
			_1a9124520_boundaryVar _4715_v = *it;
			{
				if ((_4715_v._field_var == 0LLU)) {
					_4715_v._field_var=_2523_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4715_v._field_maxSize; __jule_push_dest.push(_2541_maxSize); };
					return;;
				};
			}
			_iter_next_1acbcc932:;
			++it;
			goto _iter_begin_1acbcc932;
		}
		_iter_end_1acbcc932:;
	};
	{ jule::Slice<_1a9124520_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a9124520_boundaryVar{._field_var=_2523_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2541_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1a9125147_removeVar(_1a9124861_boundary* _self_, jule::Uintptr _5825_var) {
	if ((_5825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acbcee1d:;
			if (it != expr_end) {
				_1a9124520_boundaryVar _6016_v = *it;
				{
					if ((_6016_v._field_var == _5825_var)) {
						_6016_v._field_var=0LLU;
						(_6016_v._field_maxSize).mut_slice(0LL, 0LL);;
						return true;;
					};
				}
				_iter_next_1acbcee1d:;
				++it;
				goto _iter_begin_1acbcee1d;
			}
			_iter_end_1acbcee1d:;
		};
	};
	return false;;
}



inline jule::Bool _1a9125543_fitsMaxSize(_1a9124861_boundary* _self_, jule::Uintptr _7227_var, jule::Any _7241_expr) {
	if ((_7227_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acbd19ad:;
			if (it != expr_end) {
				_1a9124520_boundaryVar _7411_v = *it;
				{
					if ((_7411_v._field_var == _7227_var)) {
						return (_1a9125c91_fitsMaxSize(_7411_v._field_maxSize, _7241_expr) != -1LL);;
					};
				}
				_iter_next_1acbd19ad:;
				++it;
				goto _iter_begin_1acbd19ad;
			}
			_iter_end_1acbd19ad:;
		};
	};
	return false;;
}








inline jule::Bool _1a920ce88_Optimizer_eq(_1a920ce88_Optimizer *_self_, _1a920ce88_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1a920ce88_Optimizer> static__1a920d450_New(jule::Ptr<_1a85e5c78_IR>* _2121_ir) {
	return jule::new_ptr<_1a920ce88_Optimizer>(_1a920ce88_Optimizer{._field_ir=(*(_2121_ir))});;
}



inline void _1a920d708_optimizeExpr(_1a920ce88_Optimizer* _self_, jule::Any* _2733_model) {
	static__1a91172e3_optimize(_2733_model);
}



inline void _1a920d9b1_optimizeGlobal(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7ba4eb4_Var>* _3135_v) {
	if ((!((*((*(_3135_v))))._field_Binded))) {
		_1a920d708_optimizeExpr(_self_, &((*((*((*((*(_3135_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1a920dc69_optimizeFunction(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7a70a83_Fn>* _3737_func) {
	if ((*((*(_3737_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3737_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbdbb0b:;
		if (it != expr_end) {
			jule::Ptr<_1a7a73b41_FnIns> _4115_ins = *it;
			{
				jule::Ptr<_1a910e384_scopeOptimizer> _428_so = static__1a910e97d_new((*(_4115_ins))._field_Scope);;
				_1a9114972_optimize(_428_so);
			}
			_iter_next_1acbdbb0b:;
			++it;
			goto _iter_begin_1acbdbb0b;
		}
		_iter_end_1acbdbb0b:;
	};
}



inline void _1a920e022_optimizeStruct(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7997adc_Struct> _4734_s) {
	if ((*(_4734_s))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_4734_s))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbdd2d3:;
		if (it != expr_end) {
			jule::Ptr<_1a799a97a_StructIns> _5115_ins = *it;
			{
				{
					auto expr = &((*(_5115_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acbddc73:;
					if (it != expr_end) {
						jule::Ptr<_1a7999d53_FieldIns> _5216_f = *it;
						{
							if (((*(_5216_f))._field_Default != nullptr)) {
								_1a920d708_optimizeExpr(_self_, &((*(*(_5216_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1acbddc73:;
						++it;
						goto _iter_begin_1acbddc73;
					}
					_iter_end_1acbddc73:;
				};
				{
					auto expr = &((*_5115_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acbde1e6:;
					if (it != expr_end) {
						jule::Ptr<_1a7a70a83_Fn> _5716_m = *it;
						{
							_1a920dc69_optimizeFunction(_self_, &(_5716_m));
						}
						_iter_next_1acbde1e6:;
						++it;
						goto _iter_begin_1acbde1e6;
					}
					_iter_end_1acbde1e6:;
				};
			}
			_iter_next_1acbdd2d3:;
			++it;
			goto _iter_begin_1acbdd2d3;
		}
		_iter_end_1acbdd2d3:;
	};
}



inline void _1a920e2ca_optimizeGlobals(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7b62081_Package>* _6336_p) {
	{
		auto expr = &((*((*(_6336_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbdd756:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _6415_f = *it;
			{
				{
					auto expr = &((*(_6415_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acbe1380:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba4eb4_Var> _6516_v = *it;
						{
							_1a920d9b1_optimizeGlobal(_self_, &(_6516_v));
						}
						_iter_next_1acbe1380:;
						++it;
						goto _iter_begin_1acbe1380;
					}
					_iter_end_1acbe1380:;
				};
			}
			_iter_next_1acbdd756:;
			++it;
			goto _iter_begin_1acbdd756;
		}
		_iter_end_1acbdd756:;
	};
}



inline void _1a920e583_optimizeFunctions(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7b62081_Package>* _7138_p) {
	{
		auto expr = &((*((*(_7138_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbe1858:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _7215_f = *it;
			{
				{
					auto expr = &((*(_7215_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acbe277c:;
					if (it != expr_end) {
						jule::Ptr<_1a7a70a83_Fn> _7316_func = *it;
						{
							_1a920dc69_optimizeFunction(_self_, &(_7316_func));
						}
						_iter_next_1acbe277c:;
						++it;
						goto _iter_begin_1acbe277c;
					}
					_iter_end_1acbe277c:;
				};
			}
			_iter_next_1acbe1858:;
			++it;
			goto _iter_begin_1acbe1858;
		}
		_iter_end_1acbe1858:;
	};
}



inline void _1a920e83b_optimizeStructs(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7b62081_Package>* _7936_p) {
	{
		auto expr = &((*((*(_7936_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbe2c55:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _8015_f = *it;
			{
				{
					auto expr = &((*(_8015_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acbe3b79:;
					if (it != expr_end) {
						jule::Ptr<_1a7997adc_Struct> _8116_s = *it;
						{
							_1a920e022_optimizeStruct(_self_, _8116_s);
						}
						_iter_next_1acbe3b79:;
						++it;
						goto _iter_begin_1acbe3b79;
					}
					_iter_end_1acbe3b79:;
				};
				{
					auto expr = &((*_8015_f.alloc)._field_TypeAliases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acbe411e:;
					if (it != expr_end) {
						jule::Ptr<_1a7c31848_TypeAlias> _8416_ta = *it;
						{
							if (((*(_8416_ta))._field_Strict && (!((*_8416_ta.alloc)._field_Binded)))) {
								_1a920e022_optimizeStruct(_self_, (*((*((*((*_8416_ta.alloc)._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)))._field_Decl);
							};
						}
						_iter_next_1acbe411e:;
						++it;
						goto _iter_begin_1acbe411e;
					}
					_iter_end_1acbe411e:;
				};
			}
			_iter_next_1acbe2c55:;
			++it;
			goto _iter_begin_1acbe2c55;
		}
		_iter_end_1acbe2c55:;
	};
}



inline void _1a920eae4_optimizePackage(_1a920ce88_Optimizer* _self_, jule::Ptr<_1a7b62081_Package>* _9236_p) {
	_1a920e2ca_optimizeGlobals(_self_, _9236_p);
	_1a920e583_optimizeFunctions(_self_, _9236_p);
	_1a920e83b_optimizeStructs(_self_, _9236_p);
}



inline void _1a920ece2_Optimize(_1a920ce88_Optimizer* _self_) {
	_1a9210056_detectEnabled();
	if (_1a91278ec_Deadcode) {
		_1a9206888_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1a920cd01_scopeEnabled || _1a920cae2_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acbe75b7:;
			if (it != expr_end) {
				jule::Ptr<_1a7b5e80e_ImportInfo> _10816_u = *it;
				{
					if ((!((*(_10816_u))._field_Binded))) {
						_1a920eae4_optimizePackage(_self_, &((*_10816_u.alloc)._field_Package));
					};
				}
				_iter_next_1acbe75b7:;
				++it;
				goto _iter_begin_1acbe75b7;
			}
			_iter_end_1acbe75b7:;
		};
		_1a920eae4_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1a91278ec_Deadcode) {
		_1a920b6a1_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _1aa889822_AbsTime_eq(_1aa889822_AbsTime *_self_, _1aa889822_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _1aa889ee8_Time_eq(_1aa889ee8_Time *_self_, _1aa889ee8_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1aa889ee8_Time static__1aa88a3d3_Unix(jule::U64 _9117_sec) {
	return _1aa889ee8_Time{._field_sec=_9117_sec};;
}



inline _1aa889ee8_Time static__1aa88a5e2_Now(void) {
	return static__1aa88a3d3_Unix(_1aa88c0d8_unix());;
}



inline _1aa889822_AbsTime _1aa88bcca_Abs(_1aa889ee8_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (static_cast<jule::U64>(_1aa888c83_mdays[static_cast<jule::I32>(_1697_months)]) <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=static_cast<jule::U64>(_1aa888c83_mdays[static_cast<jule::I32>(_1697_months)]);
		}
	_iter_next_1acc1e556:;
	}
	_iter_end_1acc1e556:;;
	_1aa889822_AbsTime _1747_t = _1aa889822_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LL + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}




















inline jule::Bool _1a92120ad_scopeCoder_eq(_1a92120ad_scopeCoder *_self_, _1a92120ad_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1a92120ad_scopeCoder> static__1a9212795_new(jule::Ptr<_1aa897544_ObjectCoder>* _3721_oc) {
	return jule::new_ptr<_1a92120ad_scopeCoder>(_1a92120ad_scopeCoder{._field_oc=(*(_3721_oc))});;
}



inline void _1baa43b0e_iterHead(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2e0b4_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a9127600_Copy && _1a9219eea_isCopyOptimizable(&((*((*(_4429_it))))._field_Expr)))) {
		(*(_4441_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_4429_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1baa46d21:;
				{
					jule::Ptr<_1a7ba4eb4_Var> _535_v = (*((*((*(_4429_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
					if ((*(_535_v))._field_Reference) {
						_1a922bb22_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
						goto _match_end_1baa47492;
					};
					goto _case_begin_1baa47508;
				}
			}
			else {
				_case_begin_1baa47508:;
				{
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a922bb22_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1baa47492:;
		};
	} else {
		_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_4441_ref))) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_4441_ref))) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, _4452_begin);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
}



inline void _1a9212e6b_rangeIndexIter(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2e0b4_RangeIter>* _9336_it) {
	_1bc0a106b_Builder _947_sb = static__1bc0a18b8_New(64LL);;
	static__1a9235ea0_iterBegin(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _963_begin = _1bc0a28ca_Str(&_947_sb);;
	_1bc0a2ac8_Clear(&_947_sb);
	static__1a9236577_iterNext(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _993_next = _1bc0a28ca_Str(&_947_sb);;
	jule::Bool _1017_ref = false;;
	_1baa43b0e_iterHead(_self_, _9336_it, &(_1017_ref), _963_begin);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		_1aa89eb9a_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1baa5446b, jule::Ptr<__jule_anon_1baa5446b_ctx>::make(__jule_anon_1baa5446b_ctx{._self_=_self_,._1017_ref=_1017_ref}).as<jule::Uintptr>(), __jule_anon_1baa5446b_ctx_handler));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1aa898611_indent((*(_self_))._field_oc);
	};
	if (((*((*(_9336_it))))._field_KeyB != nullptr)) {
		(*(*((*(_9336_it))))._field_KeyB.alloc)._field_Reference=(_1a9127600_Copy && _1a921a3b3_isIterCopyOptimizable(&((*((*(_9336_it))))._field_Expr), &((*((*(_9336_it))))._field_KeyB)));
		_1aa89eb9a_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1baa57e75, jule::Ptr<__jule_anon_1baa57e75_ctx>::make(__jule_anon_1baa57e75_ctx{._self_=_self_,._9336_it=_9336_it}).as<jule::Uintptr>(), __jule_anon_1baa57e75_ctx_handler));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1aa898611_indent((*(_self_))._field_oc);
	};
	_1a9219291_scope(_self_, (*((*(_9336_it))))._field_Scope);
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, _993_next);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1aa898611_indent((*(_self_))._field_oc);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		static__1a9235bb4_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_9336_it))))._field_KeyA);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1aa898611_indent((*(_self_))._field_oc);
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1aa897c5e_write((*(_self_))._field_oc, _963_begin);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1aa898611_indent((*(_self_))._field_oc);
	static__1a923628b_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_9336_it))));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9213224_rangeHashmapIter(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2e0b4_RangeIter>* _16038_it) {
	_1bc0a106b_Builder _1617_sb = static__1bc0a18b8_New(64LL);;
	static__1a9235ea0_iterBegin(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1633_begin = _1bc0a28ca_Str(&_1617_sb);;
	_1bc0a2ac8_Clear(&_1617_sb);
	static__1a9236577_iterNext(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1663_next = _1bc0a28ca_Str(&_1617_sb);;
	jule::Ptr<_1a7c4200c_Map> _1687__map = _1a7c37497_Map((*((*((*(_16038_it))))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1a799a97a_StructIns> _1697_ins = _1a85ee886_FindStructGenericInstance(&((*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_1687__map))._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1a7a73b41_FnIns> _1717_f = (*(_1a799b9e2_FindMethod(_1697_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_1a799a97a_StructIns> _1737_iterator = _1a85ee886_FindStructGenericInstance(&((*(*(_1a860157a_ProgramMeta))._field_Runtime.alloc)._field_MapIterator), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_1687__map.alloc)._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_1a7a73b41_FnIns> _1747_nextCall = (*(_1a799b9e2_FindMethod(_1737_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	;
	;
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa8aa634_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1737_iterator);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__1a923493d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1717_f));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_16038_it))))._field_Expr.alloc)._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, _1633_begin);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa8ab844_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1a923493d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result.__jule_result_arg0", 36));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	if (((*((*(_16038_it))))._field_KeyA != nullptr)) {
		_1aa89eb9a_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ad7849a0, jule::Ptr<__jule_anon_1ad7849a0_ctx>::make(__jule_anon_1ad7849a0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad7849a0_ctx_handler));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1aa898611_indent((*(_self_))._field_oc);
	};
	if (((*((*(_16038_it))))._field_KeyB != nullptr)) {
		_1aa89eb9a_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1ad786e8b, jule::Ptr<__jule_anon_1ad786e8b_ctx>::make(__jule_anon_1ad786e8b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad786e8b_ctx_handler));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1aa898611_indent((*(_self_))._field_oc);
	};
	_1a9219291_scope(_self_, (*((*(_16038_it))))._field_Scope);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, _1663_next);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1aa897c5e_write((*(_self_))._field_oc, _1633_begin);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1aa898611_indent((*(_self_))._field_oc);
	static__1a923628b_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_16038_it))));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a92134cc_strRuneIter(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a69a4e4c_StrRuneIter> _24132_it) {
	_1bc0a106b_Builder _2427_sb = static__1bc0a18b8_New(64LL);;
	static__1a9235ea0_iterBegin(&(_2427_sb), static_cast<jule::Uintptr>((*(_24132_it))._field_Base));
	jule::Str _2443_begin = _1bc0a28ca_Str(&_2427_sb);;
	_1bc0a2ac8_Clear(&_2427_sb);
	static__1a9236577_iterNext(&(_2427_sb), static_cast<jule::Uintptr>((*_24132_it.alloc)._field_Base));
	jule::Str _2473_next = _1bc0a28ca_Str(&_2427_sb);;
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	jule::Bool _2537_ref = false;;
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a9127600_Copy && _1a9219eea_isCopyOptimizable(&((*_24132_it.alloc)._field_Expr)))) {
		_2537_ref=true;
		{
			auto &_match_expr{ (*((*(_24132_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1adb53ba4:;
				{
					jule::Ptr<_1a7ba4eb4_Var> _2595_v = (*((*(_24132_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
					if ((*(_2595_v))._field_Reference) {
						_1a922bb22_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1adb54325;
					};
					goto _case_begin_1adb5438b;
				}
			}
			else {
				_case_begin_1adb5438b:;
				{
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a922bb22_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1adb54325:;
		};
	} else {
		_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2537_ref) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2537_ref) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1aa898611_indent((*(_self_))._field_oc);
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1aa89eb9a_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1adb60ce3, jule::Ptr<__jule_anon_1adb60ce3_ctx>::make(__jule_anon_1adb60ce3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1adb60ce3_ctx_handler));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1aa898611_indent((*(_self_))._field_oc);
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_1aa898611_indent((*(_self_))._field_oc);
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyB != nullptr)) {
		_1aa89eb9a_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1aa898611_indent((*(_self_))._field_oc);
	};
	_1aa897c5e_write((*(_self_))._field_oc, _2443_begin);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyB != nullptr)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__1a9235bb4_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1a9219291_scope(_self_, (*((*_24132_it.alloc)._field_Base))._field_Scope);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, _2473_next);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1aa898611_indent((*(_self_))._field_oc);
	if (((*(*(_24132_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1a9235bb4_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyA);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1aa898611_indent((*(_self_))._field_oc);
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1aa897c5e_write((*(_self_))._field_oc, _2443_begin);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9213785_ifCase(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2c612_If> _35327_i) {
	if (((*(_35327_i))._field_Expr != nullptr)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35327_i.alloc)._field_Expr);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1a9219291_scope(_self_, (*(_35327_i))._field_Scope);
}



inline void _1a9213a3d_conditional(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2cd2c_Conditional> _36232_c) {
	jule::Bool _3637_writed = false;;
	{
		auto expr = &((*(_36232_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada1d40e:;
		if (it != expr_end) {
			jule::Ptr<_1a7b2c612_If> _36415_elif = *it;
			{
				if ((_36415_elif == nullptr)) {
					goto _iter_next_1ada1d40e;
				};
				if (_3637_writed) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3637_writed=true;
				_1a9213785_ifCase(_self_, _36415_elif);
			}
			_iter_next_1ada1d40e:;
			++it;
			goto _iter_begin_1ada1d40e;
		}
		_iter_end_1ada1d40e:;
	};
	if (((*_36232_c.alloc)._field_Default != nullptr)) {
		if (_3637_writed) {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1a9219291_scope(_self_, (*(*(_36232_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1a9213ce6_infIter(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2d129_InfIter> _38228_it) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1a9219291_scope(_self_, (*(_38228_it))._field_Scope);
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aa898611_indent((*(_self_))._field_oc);
	static__1a9236577_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1aa898611_indent((*(_self_))._field_oc);
	static__1a923628b_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a921409e_whileIter(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2d5d0_WhileIter> _39930_it) {
	if ((((*(_39930_it))._field_Expr != nullptr) && ((*_39930_it.alloc)._field_Next == nullptr))) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39930_it))._field_Expr != nullptr)) {
			_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		};
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_39930_it))._field_Next != nullptr)) {
			_1a9218c30_st(_self_, (*_39930_it.alloc)._field_Next);
		};
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39930_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1a9219291_scope(_self_, (*(_39930_it))._field_Scope);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	static__1a9236577_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1aa898611_indent((*(_self_))._field_oc);
	static__1a923628b_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a9214357_rangeIter(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2e0b4_RangeIter> _43830_it) {
	{
		
		if ((_1a7c366c7_Slc((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ad79b9b7:;
			{
				_1a9212e6b_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_1a7c36441_Arr((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ad79b676:;
			{
				_1a9212e6b_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_1a7c37497_Map((*((*(_43830_it))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_1ad79b6dc:;
			{
				_1a9213224_rangeHashmapIter(_self_, &(_43830_it));
			}
		}
		else {
			_case_begin_1ad7947d4:;
			{
				_1a9212e6b_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		_match_end_1ad79b566:;
	};
}



inline void _1a9214610_cont(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2e3b1_ContSt> _45121_c) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a9236577_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_45121_c))._field_It);
}



inline void _1a92148b8_label(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2ec41_Label> _45622_l) {
	static__1a9236863_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45622_l));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1a9214b71_gotoSt(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b303a1_GotoSt> _46123_gt) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a9236863_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_46123_gt))._field_Label));
}



inline void _1a9214e29_postfix(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b3077a_Postfix> _46628_p) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46628_p))._field_Expr);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1aa897c5e_write((*(_self_))._field_oc, (*_46628_p.alloc)._field_Op);
}



inline void _1a92151d2_assignLeft(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Any* _47332_model) {
	{
		auto &_match_expr{ (*(_47332_model)) };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ad7a5828:;
			{
				jule::Ptr<_1a7a6621b_IndexingExpr> _4768_iem = (*(_47332_model)).cast_ptr<_1a7a6621b_IndexingExpr>(&__jule_any_type43);;
				jule::Ptr<_1a7c4200c_Map> _4774__map = _1a7c37497_Map((*((*(_4768_iem))._field_Expr))._field_Type.ptr());;
				if ((_4774__map == nullptr)) {
					goto _match_end_1ad7a57b2;
				};
				jule::Ptr<_1a799a97a_StructIns> _4838_ins = _1a85ee886_FindStructGenericInstance(&((*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4774__map))._field_Key; (*it++) = (*_4774__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1a7a73b41_FnIns> _4858_f = (*(_1a799b9e2_FindMethod(_4838_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1a923493d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4858_f));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_4768_iem))._field_Expr.alloc)._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_1bd44650e_Production))) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1aa89a3e3_locInfo((*(_self_))._field_oc, &((*_4768_iem.alloc)._field_Token));
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1a9222453_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4768_iem.alloc)._field_Index))._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1ad7a57b2:;
	};
	_1a9222453_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_47332_model)));
}



inline void _1a921548a_shl(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b30c31_Assign> _50424_a) {
	_1a92151d2_assignLeft(_self_, &((*((*(_50424_a))._field_Left))._field_Model));
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1a9220c04_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_50424_a.alloc)._field_Left), &((*_50424_a.alloc)._field_Right));
}



inline void _1a9215743_shr(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b30c31_Assign> _51024_a) {
	_1a92151d2_assignLeft(_self_, &((*((*(_51024_a))._field_Left))._field_Model));
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1a9221067_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51024_a.alloc)._field_Left), &((*_51024_a.alloc)._field_Right));
}



inline void _1a92159eb_divByZeroAssign(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b30c31_Assign> _51636_a) {
	_1a92151d2_assignLeft(_self_, &((*((*(_51636_a))._field_Left))._field_Model));
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1a921ede0_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51636_a.alloc)._field_Op), &((*_51636_a.alloc)._field_Left), &((*_51636_a.alloc)._field_Right));
}



inline void _1a9215ca4_assign(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b30c31_Assign> _52227_a) {
	{
		auto &_match_expr{ (*((*(_52227_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1adb7b902:;
			{
				if (_1bd4462bc_Safety) {
					_1a92159eb_divByZeroAssign(_self_, _52227_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1adb7b979:;
			{
				_1a921548a_shl(_self_, _52227_a);
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1adb7b9e0:;
			{
				_1a9215743_shr(_self_, _52227_a);
				return;;
			}
		}
		_match_end_1adb7b836:;
	};
	jule::U32 _5417_op = (*((*(_52227_a))._field_Op))._field_Id;;
	jule::Str _5427_kind = (*(*(_52227_a))._field_Op.alloc)._field_Kind;;
	if (((*(*(_52227_a))._field_Op.alloc)._field_Id == static_cast<jule::U32>(38LLU))) {
		_5417_op=static_cast<jule::U32>(71LLU);
		_5427_kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
	};
	_1a92151d2_assignLeft(_self_, &((*((*_52227_a.alloc)._field_Left))._field_Model));
	_1aa897c5e_write((*_self_.alloc)._field_oc, _5427_kind);
	_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_52227_a.alloc)._field_Right))._field_Model);
}



inline void _1a921605c_mapLookupAssign(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _55337_a) {
	jule::Ptr<_1a7a6621b_IndexingExpr> _5557_iem = (*((*(_55337_a))))._field_Right.cast_ptr<_1a7a6621b_IndexingExpr>(&__jule_any_type43);;
	jule::Ptr<_1a7c4200c_Map> _5567__map = _1a7c37497_Map((*((*(_5557_iem))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1a799a97a_StructIns> _5587_ins = _1a85ee886_FindStructGenericInstance(&((*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5567__map))._field_Key; (*it++) = (*_5567__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1a7a73b41_FnIns> _5607_f = (*(_1a799b9e2_FindMethod(_5587_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__1a923493d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5607_f));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a92151d2_assignLeft(_self_, &((*(*(_5557_iem))._field_Expr.alloc)._field_Model));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_5557_iem.alloc)._field_Index))._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_55337_a))))._field_Left[0LL] != nullptr)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a9222453_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_55337_a))))._field_Left[0LL]))._field_Model);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_55337_a))))._field_Left[1LL] != nullptr)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a9222453_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_55337_a))))._field_Left[1LL]))._field_Model);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9216315_multiAssignTup(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _58536_a) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1aa898215_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1a7a68e99_TupleExpr> _5957_tup = (*((*(_58536_a))))._field_Right.cast_ptr<_1a7a68e99_TupleExpr>(&__jule_any_type83);;
	{
		auto expr = &((*(_5957_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada30bd5:;
		if (it != expr_end) {
			jule::I32 _5978_i = it - expr->begin();
			jule::Ptr<_1a7bed89d_Data> _59715_r = *it;
			{
				_1aa898611_indent((*(_self_))._field_oc);
				jule::Ptr<_1a7bed89d_Data> _5998_l = (*((*(_58536_a))))._field_Left[_5978_i];;
				if ((_5998_l != nullptr)) {
					{
						auto &_match_expr{ (*(_5998_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1ada33b94:;
							{
								jule::Ptr<_1a7ba4eb4_Var> _60310_v = (*(_5998_l))._field_Model.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
								if ((!((*(_60310_v))._field_Reference))) {
									goto _match_end_1ada33b2d;
								};
								{
									auto expr = &((*((*(_58536_a))))._field_Decls);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ada34b0c:;
									if (it != expr_end) {
										jule::Ptr<_1a7ba4eb4_Var> _61013_dv = *it;
										{
											if ((_60310_v == _61013_dv)) {
												goto _julec_label_1ada34a52;
											};
										}
										_iter_next_1ada34b0c:;
										++it;
										goto _iter_begin_1ada34b0c;
									}
									_iter_end_1ada34b0c:;
								};
								goto _match_end_1ada33b2d;
								_julec_label_1ada34a52:;
								static__1a9235bb4_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _60310_v);
								_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
								_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_59715_r))._field_Model);
								_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
								(*((*(_58536_a))))._field_Left[_5978_i]=nullptr;
								goto _iter_next_1ada30bd5;
							}
						}
						_match_end_1ada33b2d:;
					};
					_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_5998_l.alloc)._field_Type);
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1a9233e15_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a921184e_assignArgName, static_cast<jule::Uintptr>(_5978_i));
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_59715_r))._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ada30bd5:;
			++it;
			_5978_i++;
			goto _iter_begin_1ada30bd5;
		}
		_iter_end_1ada30bd5:;
	};
	{
		auto expr = &((*((*(_58536_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9b709a:;
		if (it != expr_end) {
			jule::I32 _6398_i = it - expr->begin();
			jule::Ptr<_1a7bed89d_Data> _63915_l = *it;
			{
				if ((_63915_l == nullptr)) {
					goto _iter_next_1ad9b709a;
				};
				_1aa898611_indent((*(_self_))._field_oc);
				_1a92151d2_assignLeft(_self_, &((*(_63915_l))._field_Model));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1a9233e15_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a921184e_assignArgName, static_cast<jule::Uintptr>(_6398_i));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad9b709a:;
			++it;
			_6398_i++;
			goto _iter_begin_1ad9b709a;
		}
		_iter_end_1ad9b709a:;
	};
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a92165bd_multiAssignFn(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b312b4_MultiAssign>* _65535_a) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	jule::Ptr<_1a7a6588b_FnCallExpr> _6607_f = (*((*(_65535_a))))._field_Right.cast_ptr<_1a7a6588b_FnCallExpr>(&__jule_any_type30);;
	_1aa8b232d_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6607_f))._field_Func))._field_Result));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_65535_a))))._field_Right);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1a7c4145c_Tuple> _6667_tup = _1a7c3772d_Tup((*(*(_6607_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_65535_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9c0aed:;
		if (it != expr_end) {
			jule::I32 _6678_i = it - expr->begin();
			jule::Ptr<_1a7bed89d_Data> _66715_l = *it;
			{
				if ((_66715_l == nullptr)) {
					goto _iter_next_1ad9c0aed;
				};
				;
				_1aa898611_indent((*(_self_))._field_oc);
				_1a92151d2_assignLeft(_self_, &((*(_66715_l))._field_Model));
				{
					
					if (_1a7c32c9a_Equal((*(_6667_tup))._field_Types[_6678_i], (*_66715_l.alloc)._field_Type)) {
						_case_begin_1ad9c894c:;
						{
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_6678_i));
						}
					}
					else if (_1a85eb520_IsAny(&((*_66715_l.alloc)._field_Type))) {
						_case_begin_1ad9c3a8a:;
						{
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_6678_i));
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_1aa899766_pushAnyType((*(_self_))._field_oc, (*(_6667_tup))._field_Types[_6678_i])));
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1ad9c2a67:;
						{
							if ((_1a7c37211_Trait((*(_6667_tup))._field_Types[_6678_i].ptr()) != nullptr)) {
								_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1a7a7b297_Trait> _68810_t1 = _1a7c37211_Trait((*_66715_l.alloc)._field_Type.ptr());;
								jule::Ptr<_1a7a7b297_Trait> _68910_t2 = _1a7c37211_Trait((*(_6667_tup))._field_Types[_6678_i].ptr());;
								_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_6678_i));
								_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1aa89a13a_pushAndWriteMaskMapper((*(_self_))._field_oc, _68810_t1, _68910_t2);
								_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1ad9c39e1;
							};
							jule::Ptr<_1a7a7b297_Trait> _6975_t = _1a7c37211_Trait((*_66715_l.alloc)._field_Type.ptr());;
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_6678_i));
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1a9234c29_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _6975_t);
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_1a85ee18d_FindTraitTypeOffset(_6975_t, (*(_6667_tup))._field_Types[_6678_i])));
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1ad9c39e1:;
				};
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad9c0aed:;
			++it;
			_6678_i++;
			goto _iter_begin_1ad9c0aed;
		}
		_iter_end_1ad9c0aed:;
	};
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a9216876_multiAssign(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b312b4_MultiAssign> _71432_a) {
	{
		auto expr = &((*(_71432_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9d2390:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> _71715_d = *it;
			{
				_1aa89eb9a_varInitExpr((*(_self_))._field_oc, &(_71715_d), nullptr);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1aa898611_indent((*(_self_))._field_oc);
			}
			_iter_next_1ad9d2390:;
			++it;
			goto _iter_begin_1ad9d2390;
		}
		_iter_end_1ad9d2390:;
	};
	{
		auto &_match_expr{ (*(_71432_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ad9d2b21:;
			{
				_1a921605c_mapLookupAssign(_self_, &(_71432_a));
				return;;
			}
		}
		_match_end_1ad9d2aaa:;
	};
	{
		auto &_match_expr{ (*(_71432_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1ad9d4b67:;
			{
				_1a9216315_multiAssignTup(_self_, &(_71432_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ad9d4590:;
			{
				_1a92165bd_multiAssignFn(_self_, &(_71432_a));
			}
		}
		else {
			_case_begin_1ad9d4518:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:736:4"));;
			}
		}
		_match_end_1ad9d4260:;
	};
}



inline jule::Fn<void> _1a9216bb7_matchExpr(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b31c32_Match> _74030_m) {
	if ((!(_1a7bee2d8_IsConst((*(_74030_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1ad9d6b9c, jule::Ptr<__jule_anon_1ad9d6b9c_ctx>::make(__jule_anon_1ad9d6b9c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad9d6b9c_ctx_handler);;
	};
	if (((!(_1a7a5b541_IsBool((*((*(_74030_m))._field_Expr))._field_Constant.ptr()))) || (!(_1a7a58e45_ReadBool((*((*(_74030_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1ad9d7ecd, jule::Ptr<__jule_anon_1ad9d7ecd_ctx>::make(__jule_anon_1ad9d7ecd_ctx{._self_=_self_,._74030_m=_74030_m}).as<jule::Uintptr>(), __jule_anon_1ad9d7ecd_ctx_handler);;
	};
	return nullptr;;
}



inline void _1a921702a_case(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b31c32_Match> _75025_m, jule::Ptr<_1a7b32529_Case> _75046_c) {
	if ((((*(_75046_c))._field_Exprs.len() != 0LL) && (!((*(_75025_m))._field_Comptime)))) {
		if ((((*_75025_m.alloc)._field_Cases.len() > 0LL) && ((*(_75025_m))._field_Cases[0LL] == _75046_c))) {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_75046_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1baac7379:;
			if (it != expr_end) {
				jule::I32 _7579_i = it - expr->begin();
				jule::Ptr<_1a7bed89d_Data> _75716_expr = *it;
				{
					{
						
						if ((!((*_75025_m.alloc)._field_TypeMatch))) {
							_case_begin_1baad0184:;
							{
								jule::Fn<void> _7606_caseExpr = _1a9216bb7_matchExpr(_self_, _75025_m);;
								if (_1a7bee629_GoodOperand((*_75025_m.alloc)._field_Expr.ptr(), &(_75716_expr))) {
									if ((_7606_caseExpr != nullptr)) {
										_7606_caseExpr();
										_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1a9222453_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_75716_expr))._field_Model);
								} else {
									_1a9222453_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_75716_expr))._field_Model);
									if ((_7606_caseExpr != nullptr)) {
										_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7606_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1baac8116:;
							{
								_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1a7c3255d_Type> _77610_tk = (*(_75716_expr))._field_Model.cast_ptr<_1a7c3255d_Type>(&__jule_any_type85);;
								if ((_1a7c37211_Trait((*((*_75025_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
									_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1a921db69_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1a7c35907_Sptr((*(_75716_expr))._field_Type) != nullptr));
									_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1a9234c29_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a7c37211_Trait((*((*(_75025_m))._field_Expr))._field_Type));
									_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_1a85ee18d_FindTraitTypeOffset(_1a7c37211_Trait((*((*(_75025_m))._field_Expr))._field_Type), (*_75716_expr.alloc)._field_Type)));
									_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I32 _7867_j = _1aa899766_pushAnyType((*(_self_))._field_oc, _77610_tk);;
									_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_7867_j));
								};
							}
						}
						_match_end_1baac8006:;
					};
					if ((((*_75046_c.alloc)._field_Exprs.len() - _7579_i) > 1LL)) {
						_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1baac7379:;
				++it;
				_7579_i++;
				goto _iter_begin_1baac7379;
			}
			_iter_end_1baac7379:;
		};
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_75025_m))._field_Default == _75046_c) && ((*_75025_m.alloc)._field_Cases.len() != 0LL))) {
		_1aa898611_indent((*(_self_))._field_oc);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aa898611_indent((*(_self_))._field_oc);
	static__1a9236e3a_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_75046_c));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_75046_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1aa898611_indent((*(_self_))._field_oc);
		_1a9219291_scope(_self_, (*_75046_c.alloc)._field_Scope);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a92172d3_matchSt(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b31c32_Match> _82028_m) {
	if ((((*(_82028_m))._field_Cases.len() == 0LL) && ((*_82028_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*(_82028_m))._field_Comptime && (((*_82028_m.alloc)._field_Default == nullptr) || ((*((*((*_82028_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	if (((!((*(_82028_m))._field_Comptime)) && (!(_1a7bee2d8_IsConst((*_82028_m.alloc)._field_Expr.ptr()))))) {
		if ((_1a9127600_Copy && _1a9219eea_isCopyOptimizable(&((*_82028_m.alloc)._field_Expr)))) {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_82028_m))._field_Expr.alloc)._field_Model);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1aa898611_indent((*(_self_))._field_oc);
	};
	if (((*(_82028_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_82028_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1baae35c6:;
			if (it != expr_end) {
				jule::Ptr<_1a7b32529_Case> _84816_c = *it;
				{
					if ((_84816_c == nullptr)) {
						goto _iter_next_1baae35c6;
					};
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1aa898611_indent((*(_self_))._field_oc);
					_1a921702a_case(_self_, _82028_m, _84816_c);
				}
				_iter_next_1baae35c6:;
				++it;
				goto _iter_begin_1baae35c6;
			}
			_iter_end_1baae35c6:;
		};
	};
	if (((*(_82028_m))._field_Default != nullptr)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a921702a_case(_self_, _82028_m, (*_82028_m.alloc)._field_Default);
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aa898611_indent((*(_self_))._field_oc);
	static__1a9236b4e_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_82028_m));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a921758b_fallSt(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b32c22_FallSt> _87523_f) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a9236e3a_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_87523_f))._field_DestCase);
}



inline void _1a9217844_breakSt(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2e78a_BreakSt> _88024_b) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_88024_b))._field_It != 0LLU)) {
		static__1a923628b_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_88024_b.alloc)._field_It);
	} else {
		static__1a9236b4e_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_88024_b))._field_Mtch);
	};
}



inline void _1a9217aec_setResult(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b330b8_RetSt> _88930_r) {
	if (((*((*((*((*(_88930_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_88930_r.alloc)._field_Expr);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1aa898611_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_88930_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1baaed405:;
			{
				jule::Slice<jule::Ptr<_1a7bed89d_Data>> _8998_datas = (*((*(_88930_r))._field_Expr.unsafe_cast_ptr<_1a7a68e99_TupleExpr>()))._field_Datas;;
				{
					auto expr = &(_8998_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bab02030:;
					if (it != expr_end) {
						jule::I32 _9008_i = it - expr->begin();
						jule::Ptr<_1a7bed89d_Data> _90011_data = *it;
						{
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_9008_i));
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_90011_data))._field_Model);
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1aa898611_indent((*(_self_))._field_oc);
						}
						_iter_next_1bab02030:;
						++it;
						_9008_i++;
						goto _iter_begin_1bab02030;
					}
					_iter_end_1bab02030:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bab00bdd:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1a922bb22_model((*(*(_self_))._field_oc.alloc)._field_ec, (*(_88930_r))._field_Expr);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1bab00b77:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:913:4"));;
			}
		}
		_match_end_1bab00b11:;
	};
}



inline void _1a9217da5_retSt(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b330b8_RetSt> _91726_r) {
	if (_1a7a71039_IsVoid((*((*(_91726_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_91726_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_91726_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_91726_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_91726_r))._field_Func.alloc)._field_Result);
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_91726_r.alloc)._field_Expr);
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_91726_r.alloc)._field_Expr);
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_91726_r))._field_Expr != nullptr)) {
		_1a9217aec_setResult(_self_, _91726_r);
	};
	if ((*((*((*(_91726_r))._field_Func))._field_Decl))._field_Exceptional) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1aa8b232d_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_91726_r))._field_Func.alloc)._field_Result));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1a921815d_var(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7ba4eb4_Var> _95324_v) {
	if ((!((*(_95324_v))._field_Constant))) {
		_1aa89ee53_var((*(_self_))._field_oc, _95324_v);
	};
}



inline void _1a9218416_mutSlicing(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a69a3bc6_MutSlicingExpr> _95931_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_95931_m))._field_Expr);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_1bd44650e_Production))) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1aa89a3e3_locInfo((*(_self_))._field_oc, &((*_95931_m.alloc)._field_Token));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a9222453_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_95931_m.alloc)._field_Left);
	if (((*_95931_m.alloc)._field_Right != nullptr)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a9222453_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_95931_m.alloc)._field_Right);
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a92186be_swap(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a69a292d_SwapExpr> _97625_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1a9222453_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_97625_m))._field_Left))._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a9222453_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_97625_m.alloc)._field_Right))._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9218977_exceptionalForwarding(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a69a1e7c_ExceptionalForwardingExpr> _98442_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1a9223d7d_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_98442_m))._field_Expr));
}



inline void _1a9218c30_st(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Any _99023_st) {
	if ((_99023_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _99023_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bab1e129:;
			{
				_1a9219291_scope(_self_, _99023_st.unsafe_cast_ptr<_1a7b2c238_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bab1e3d2:;
			{
				_1a921815d_var(_self_, _99023_st.unsafe_cast_ptr<_1a7ba4eb4_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bab1e448:;
			{
				_1a922bb22_model((*((*_self_.alloc)._field_oc))._field_ec, (*(_99023_st.unsafe_cast_ptr<_1a7bed89d_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bab1eb63:;
			{
				_1a9213a3d_conditional(_self_, _99023_st.unsafe_cast_ptr<_1a7b2cd2c_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bab1ebc9:;
			{
				_1a9213ce6_infIter(_self_, _99023_st.unsafe_cast_ptr<_1a7b2d129_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bab1ec40:;
			{
				_1a921409e_whileIter(_self_, _99023_st.unsafe_cast_ptr<_1a7b2d5d0_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bab1eca6:;
			{
				_1a9214357_rangeIter(_self_, _99023_st.unsafe_cast_ptr<_1a7b2e0b4_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bab1ed1c:;
			{
				_1a9214610_cont(_self_, _99023_st.unsafe_cast_ptr<_1a7b2e3b1_ContSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1bab1ed83:;
			{
				_1a92148b8_label(_self_, _99023_st.unsafe_cast_ptr<_1a7b2ec41_Label>());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bab1ede9:;
			{
				_1a9214b71_gotoSt(_self_, _99023_st.unsafe_cast_ptr<_1a7b303a1_GotoSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1bab1ee60:;
			{
				_1a9214e29_postfix(_self_, _99023_st.unsafe_cast_ptr<_1a7b3077a_Postfix>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bab1eec6:;
			{
				_1a9215ca4_assign(_self_, _99023_st.unsafe_cast_ptr<_1a7b30c31_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bab2003c:;
			{
				_1a9216876_multiAssign(_self_, _99023_st.unsafe_cast_ptr<_1a7b312b4_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bab200b4:;
			{
				_1a92172d3_matchSt(_self_, _99023_st.unsafe_cast_ptr<_1a7b31c32_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bab2013b:;
			{
				_1a921758b_fallSt(_self_, _99023_st.unsafe_cast_ptr<_1a7b32c22_FallSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bab201b3:;
			{
				_1a9217844_breakSt(_self_, _99023_st.unsafe_cast_ptr<_1a7b2e78a_BreakSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1bab2023a:;
			{
				_1a9217da5_retSt(_self_, _99023_st.unsafe_cast_ptr<_1a7b330b8_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1bab202b2:;
			{
				_1a9229092_pushToSlice((*((*(_self_))._field_oc))._field_ec, _99023_st.unsafe_cast_ptr<_1a69a4699_PushToSliceExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1bab20339:;
			{
				_1a922934a_appendToSlice((*((*(_self_))._field_oc))._field_ec, _99023_st.unsafe_cast_ptr<_1a69a4a73_AppendToSliceExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1bab203b1:;
			{
				_1a9218416_mutSlicing(_self_, _99023_st.unsafe_cast_ptr<_1a69a3bc6_MutSlicingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1bab20438:;
			{
				_1a92186be_swap(_self_, _99023_st.unsafe_cast_ptr<_1a69a292d_SwapExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1bab204b0:;
			{
				_1a9218977_exceptionalForwarding(_self_, _99023_st.unsafe_cast_ptr<_1a69a1e7c_ExceptionalForwardingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1bab20537:;
			{
				_1a92134cc_strRuneIter(_self_, _99023_st.unsafe_cast_ptr<_1a69a4e4c_StrRuneIter>());
			}
		}
		else {
			_case_begin_1bab1de5e:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1bab1dde8:;
	};
}



inline void _1a9218ed8_scopeStmts(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2c238_Scope>* _104632_s) {
	{
		auto expr = &((*((*(_104632_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab2c2ad:;
		if (it != expr_end) {
			jule::Any _104715_st = *it;
			{
				_1aa898611_indent((*(_self_))._field_oc);
				_1a9218c30_st(_self_, _104715_st);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bab2c2ad:;
			++it;
			goto _iter_begin_1bab2c2ad;
		}
		_iter_end_1bab2c2ad:;
	};
}



inline void _1a9219291_scope(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7b2c238_Scope> _105526_s) {
	_1aa898215_addIndent((*(_self_))._field_oc);
	if ((*(_105526_s))._field_Deferred) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9218ed8_scopeStmts(_self_, &(_105526_s));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_105526_s))._field_Deferred) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1a9219549_commonFuncScope(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7a73b41_FnIns>* _107037_f) {
	if ((!(_1a7a71039_IsVoid((*((*(_107037_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1a7c4145c_Tuple> _10728_tup = _1a7c3772d_Tup((*((*(_107037_f))))._field_Result.ptr());;
		if ((_10728_tup != nullptr)) {
			_1aa898611_indent((*(_self_))._field_oc);
			_1aa8b1b57_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10728_tup);
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_10728_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bab3400c:;
				if (it != expr_end) {
					jule::I32 _107710_i = it - expr->begin();
					jule::Ptr<_1a7c3255d_Type> _107717_t = *it;
					{
						if (_1aa8b450b_shouldInitialized(&(_107717_t))) {
							_1aa898611_indent((*(_self_))._field_oc);
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_107710_i));
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a922ccdd_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _107717_t);
							_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1bab3400c:;
					++it;
					_107710_i++;
					goto _iter_begin_1bab3400c;
				}
				_iter_end_1bab3400c:;
			};
		} else if (((*((*(*((*(_107037_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1aa898611_indent((*(_self_))._field_oc);
			_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_107037_f))))._field_Result);
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1aa8b450b_shouldInitialized(&((*((*(_107037_f))))._field_Result))) {
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a922ccdd_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_107037_f))))._field_Result);
			};
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1a9218ed8_scopeStmts(_self_, &((*((*(_107037_f))))._field_Scope));
	if (((*((*((*(_107037_f))))._field_Decl))._field_Exceptional && _1a7a71039_IsVoid((*((*(_107037_f))))._field_Decl))) {
		_1aa898611_indent((*_self_.alloc)._field_oc);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1a92198ac_anonFuncScope(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7a666c2_AnonFnExpr> _111034_m, jule::Str _111056_ident) {
	if (((*((*(_111034_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11143_closure = _1a85eb861_IsClosure(&(_111034_m));;
	if (_11143_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a7ba4eb4_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1a7ba4eb4_Var>>((void*)__jule_anon_1bab42c74, jule::Ptr<__jule_anon_1bab42c74_ctx>::make(__jule_anon_1bab42c74_ctx{._self_=_self_,._111034_m=_111034_m}).as<jule::Uintptr>(), __jule_anon_1bab42c74_ctx_handler); __jule_collection; }));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aa898215_addIndent((*(_self_))._field_oc);
	if (_11143_closure) {
		_1aa898611_indent((*(_self_))._field_oc);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1aa897c5e_write((*(_self_))._field_oc, _111056_ident);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1aa897c5e_write((*(_self_))._field_oc, _111056_ident);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1a9219549_commonFuncScope(_self_, &((*(_111034_m))._field_Func));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11143_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1a9219b65_funcScope(jule::Ptr<_1a92120ad_scopeCoder> _self_, jule::Ptr<_1a7a73b41_FnIns> _114230_f) {
	if (((*(_114230_f))._field_Scope == nullptr)) {
		return;;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1a9219549_commonFuncScope(_self_, &(_114230_f));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_1a921d20c_exprCoder> static__1a921d608_new(jule::Ptr<_1aa897544_ObjectCoder>* _5021_oc) {
	return jule::new_ptr<_1a921d20c_exprCoder>(_1a921d20c_exprCoder{._field_oc=(*(_5021_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a7ba4eb4_Var>>>(nullptr)});;
}



inline void _1a921d8b1_string(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a79ea9a8_Const>* _5624_c) {
	jule::Str _573_content = _1a7a591cb_ReadStr((*(_5624_c)).ptr());;
	if ((_573_content.len() == 0LL)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _623_len = _1a4a0393c_FmtInt(static_cast<jule::I64>(_573_content.len()), 10LL);;
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1a922da9c_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _573_content);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1aa897c5e_write((*(_self_))._field_oc, _623_len);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a921db69_boolean(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Bool _7124_b) {
	if (_7124_b) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1a921dd67_nilLit(jule::Ptr<_1a921d20c_exprCoder> _self_) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1a921e1a8_ftoaSpecialCases(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::F64* _8334_x) {
	{
		
		if (_1a49a7e74_IsNaN((*(_8334_x)))) {
			_case_begin_1bab64d62:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1a49a8606_IsInf((*(_8334_x)), 1LL)) {
			_case_begin_1bab64e0b:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1a49a8606_IsInf((*(_8334_x)), -1LL)) {
			_case_begin_1bab64e83:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1bab64cda:;
			{
				return false;;
			}
		}
		_match_end_1bab64bca:;
	};
	return true;;
}



inline void _1a921e461_float32(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a79ea9a8_Const>* _9725_c) {
	jule::F64 _983_x = _1a7a59c15_AsF64((*(_9725_c)).ptr());;
	if (_1a921e1a8_ftoaSpecialCases(_self_, &(_983_x))) {
		return;;
	};
	{
		
		if ((_983_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1bab684d6:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_983_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1bab681b7:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1bab68151:;
			{
				_1a922de43_ftoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _983_x, 32LL);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1bab67bbc:;
	};
}



inline void _1a921e719_float64(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a79ea9a8_Const>* _11625_c) {
	jule::F64 _1173_x = _1a7a59c15_AsF64((*(_11625_c)).ptr());;
	if (_1a921e1a8_ftoaSpecialCases(_self_, &(_1173_x))) {
		return;;
	};
	{
		
		if ((_1173_x == jule::MAX_F64)) {
			_case_begin_1bab6c100:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1173_x == jule::MIN_F64)) {
			_case_begin_1bab6b907:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1bab6b572:;
			{
				_1a922de43_ftoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1173_x, 64LL);
			}
		}
		_match_end_1bab6b0dd:;
	};
}



inline void _1a921e9c2_constant(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a79ea9a8_Const> _13429_c) {
	{
		
		if (_1a7a5b7c7_IsStr(_13429_c.ptr())) {
			_case_begin_1bab6d71c:;
			{
				_1a921d8b1_string(_self_, &(_13429_c));
			}
		}
		else if (_1a7a5b541_IsBool(_13429_c.ptr())) {
			_case_begin_1bab6d783:;
			{
				_1a921db69_boolean(_self_, _1a7a58e45_ReadBool(_13429_c));
			}
		}
		else if (_1a7a5ba5d_IsF64(_13429_c)) {
			_case_begin_1bab6d7e9:;
			{
				{
					
					if (((*_13429_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1bab71236:;
						{
							_1a921e461_float32(_self_, &(_13429_c));
						}
					}
					else {
						_case_begin_1bab70d90:;
						{
							_1a921e719_float64(_self_, &(_13429_c));
						}
					}
					_match_end_1bab70c80:;
				};
			}
		}
		else if (_1a7a5b024_IsI64(_13429_c)) {
			_case_begin_1bab6d860:;
			{
				_1a922e22e_itoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1a7a58928_ReadI64(_13429_c));
			}
		}
		else if (_1a7a5b2aa_IsU64(_13429_c)) {
			_case_begin_1bab6d8c6:;
			{
				_1a922e51a_utoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a7a58bae_ReadU64(_13429_c));
			}
		}
		else if (_1a7a5bce4_IsNil(_13429_c)) {
			_case_begin_1bab6d93c:;
			{
				_1a921dd67_nilLit(_self_);
			}
		}
		else {
			_case_begin_1bab6d6a6:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1bab6d596:;
	};
}



inline void _1a921ede0_divByZeroBinary(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a79633b0_Token>* _15833_op, jule::Ptr<_1a7a633b1_OperandExpr>* _15857_l, jule::Ptr<_1a7a633b1_OperandExpr>* _15885_r) {
	;
	;
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_15857_l))))._field_Type);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a9222453_possibleRefExpr(_self_, (*((*(_15857_l))))._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_15885_r))))._field_Type);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a9222453_possibleRefExpr(_self_, (*((*(_15885_r))))._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_1bd44650e_Production))) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_1aa89a3e3_locInfo((*(_self_))._field_oc, _15833_op);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_15857_l))))._field_Type);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_15833_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1bab7bd24:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1bab80575:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1bab804cb:;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1a92205d8__unsafeBinary(jule::Ptr<_1a921d20c_exprCoder> _self_, _1bc0a106b_Builder* _19735_buf, jule::Str* _19759_l, jule::Str* _19768_r, jule::Ptr<_1a7c3255d_Type>* _1988_lk, jule::Ptr<_1a7c3255d_Type>* _19830_rk, jule::U32 _19847_op, jule::Str _19862_kind) {
	if ((_1a7c36be4_Struct((*(_1988_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1a799a97a_StructIns> _2008_s = _1a7c36be4_Struct((*(_1988_lk)).ptr());;
		_1a922eb69_structBinary(_19735_buf, &(_2008_s), _19759_l, _19768_r, _19847_op, _19862_kind);
		return;;
	};
	if (((_19847_op == static_cast<jule::U32>(50LLU)) || (_19847_op == static_cast<jule::U32>(51LLU)))) {
		{
			
			if (_1a85eb520_IsAny(_1988_lk)) {
				_case_begin_1bab84ee7:;
				{
					if (((!(_1a7c336d5_IsNil((*(_19830_rk)).ptr()))) && (!(_1a85eb520_IsAny(_19830_rk))))) {
						({
							auto except = _1bc0a2303_WriteByte(_19735_buf, '(');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:212:6"));
						});
						if ((_19847_op == static_cast<jule::U32>(51LLU))) {
							({
								auto except = _1bc0a2303_WriteByte(_19735_buf, '!');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:214:7"));
							});
						};
						jule::I32 _2166_i = _1aa899766_pushAnyType((*(_self_))._field_oc, (*(_19830_rk)));;
						({
							auto except = _1bc0a204a_WriteStr(_19735_buf, jule::Str::lit("__jule_any_type", 15));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:217:6"));
							(except.result);
						});
						({
							auto except = _1bc0a204a_WriteStr(_19735_buf, _1a4a03c06_Itoa(_2166_i));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:218:6"));
							(except.result);
						});
						({
							auto except = _1bc0a204a_WriteStr(_19735_buf, jule::Str::lit("_compare(", 9));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:219:6"));
							(except.result);
						});
						({
							auto except = _1bc0a204a_WriteStr(_19735_buf, (*(_19759_l)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:220:6"));
							(except.result);
						});
						({
							auto except = _1bc0a204a_WriteStr(_19735_buf, jule::Str::lit(", ", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:221:6"));
							(except.result);
						});
						({
							auto except = _1bc0a204a_WriteStr(_19735_buf, (*(_19768_r)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:222:6"));
							(except.result);
						});
						({
							auto except = _1bc0a204a_WriteStr(_19735_buf, jule::Str::lit("))", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:223:6"));
							(except.result);
						});
						return;;
					};
				}
			}
			else if ((_1a7c36441_Arr((*(_1988_lk)).ptr()) != nullptr)) {
				_case_begin_1bab85091:;
				{
					jule::Ptr<_1a7c42b89_Arr> _2295_arr = _1a7c36441_Arr((*(_1988_lk)).ptr());;
					jule::Ptr<_1a7a73b41_FnIns> _2309_ins = _1a85ee512_FindFnGenericInstance(&((*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_ArrayCmp), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_2295_arr))._field_Elem; __jule_collection; }));;
					if ((_19847_op == static_cast<jule::U32>(51LLU))) {
						({
							auto except = _1bc0a2303_WriteByte(_19735_buf, '!');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:232:6"));
						});
					};
					static__1a923493d_funcIns(_19735_buf, &(_2309_ins));
					({
						auto except = _1bc0a2303_WriteByte(_19735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:235:5"));
					});
					({
						auto except = _1bc0a204a_WriteStr(_19735_buf, (*(_19759_l)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:236:5"));
						(except.result);
					});
					({
						auto except = _1bc0a204a_WriteStr(_19735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:237:5"));
						(except.result);
					});
					({
						auto except = _1bc0a204a_WriteStr(_19735_buf, (*(_19768_r)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:238:5"));
						(except.result);
					});
					({
						auto except = _1bc0a204a_WriteStr(_19735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:239:5"));
						(except.result);
					});
					({
						auto except = _1bc0a204a_WriteStr(_19735_buf, _1a4a03c06_Itoa((*_2295_arr.alloc)._field_N));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:240:5"));
						(except.result);
					});
					({
						auto except = _1bc0a2303_WriteByte(_19735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:241:5"));
					});
					return;;
				}
			}
			_match_end_1bab84e09:;
		};
	};
	{
		auto &_match_expr{ _19847_op };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1bab85129:;
			{
				jule::Ptr<_1a7c3b369_Prim> _2494_lp = _1a7c35671_Prim((*(_1988_lk)).ptr());;
				if (((_2494_lp != nullptr) && _1a7aee150_IsUnsigInt((*_2494_lp.alloc)._field_Kind))) {
					({
						auto except = _1bc0a2303_WriteByte(_19735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:251:5"));
					});
					_1aa8a7da1_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _19735_buf, _2494_lp);
					({
						auto except = _1bc0a2303_WriteByte(_19735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:253:5"));
					});
				};
			}
		}
		_match_end_1bab88c43:;
	};
	({
		auto except = _1bc0a2303_WriteByte(_19735_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:257:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(_19735_buf, (*(_19759_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:258:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(_19735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:259:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(_19735_buf, _19862_kind);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:260:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(_19735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:261:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(_19735_buf, (*(_19768_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:262:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(_19735_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:263:3"));
	});
}



inline void _1a9220891_unsafeBinary(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a638ab_BinaryExpr> _26633_m) {
	jule::I32 _2673_i = _1bc0a2d5e_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _2687_oldbuf = _1bc0a337b_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1a9222453_possibleRefExpr(_self_, (*((*(_26633_m))._field_Left))._field_Model);
	jule::Str _2703_l = __jule_bytesToStr(_1bc0a337b_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2673_i));;
	{
		_1bc0a3634_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2687_oldbuf);
	};
	_1a9222453_possibleRefExpr(_self_, (*((*_26633_m.alloc)._field_Right))._field_Model);
	jule::Str _2733_r = __jule_bytesToStr(_1bc0a337b_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2673_i));;
	{
		_1bc0a3634_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2687_oldbuf);
	};
	_1a92205d8__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2703_l), &(_2733_r), &((*(*(_26633_m))._field_Left.alloc)._field_Type), &((*(*(_26633_m))._field_Right.alloc)._field_Type), (*((*_26633_m.alloc)._field_Op))._field_Id, (*(*(_26633_m))._field_Op.alloc)._field_Kind);
}



inline void _1a9220c04_shl(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a633b1_OperandExpr>* _27825_l, jule::Ptr<_1a7a633b1_OperandExpr>* _27853_r) {
	;
	;
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_27825_l))))._field_Type);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a9222453_possibleRefExpr(_self_, (*((*(_27825_l))))._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_27853_r))))._field_Type);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a9222453_possibleRefExpr(_self_, (*((*(_27853_r))))._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_27825_l))))._field_Type);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_1a7ae639a_BitSizeOf((*(_1a7c35671_Prim((*((*(_27825_l))))._field_Type.ptr())))._field_Kind)));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1a9221067_shr(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a633b1_OperandExpr>* _30625_l, jule::Ptr<_1a7a633b1_OperandExpr>* _30653_r) {
	;
	;
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_30625_l))))._field_Type);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a9222453_possibleRefExpr(_self_, (*((*(_30625_l))))._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_30653_r))))._field_Type);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a9222453_possibleRefExpr(_self_, (*((*(_30653_r))))._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_30625_l))))._field_Type);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_1a7ae639a_BitSizeOf((*(_1a7c35671_Prim((*((*(_30625_l))))._field_Type.ptr())))._field_Kind)));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1a9221320_binary(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a638ab_BinaryExpr> _33427_m) {
	{
		auto &_match_expr{ (*((*(_33427_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1babb1540:;
			{
				if (_1bd4462bc_Safety) {
					_1a921ede0_divByZeroBinary(_self_, &((*(_33427_m))._field_Op), &((*_33427_m.alloc)._field_Left), &((*_33427_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1babb15b7:;
			{
				_1a9220c04_shl(_self_, &((*(_33427_m))._field_Left), &((*_33427_m.alloc)._field_Right));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1babb162d:;
			{
				_1a9221067_shr(_self_, &((*_33427_m.alloc)._field_Left), &((*_33427_m.alloc)._field_Right));
				return;;
			}
		}
		_match_end_1babb1474:;
	};
	_1a9220891_unsafeBinary(_self_, _33427_m);
}



inline void _1a92215c8_var(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7ba4eb4_Var> _35124_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babb4675:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1a7ba4eb4_Var>> _35210_prefix = *it;
			{
				if (_35210_prefix(_35124_m)) {
					return;;
				};
			}
			_iter_next_1babb4675:;
			++it;
			goto _iter_begin_1babb4675;
		}
		_iter_end_1babb4675:;
	};
	if ((*(_35124_m))._field_Binded) {
		jule::Ptr<_1a79781c7_Directive> _3584_d = _1a85ece17_FindDirective(&((*_35124_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_3584_d != nullptr)) {
			_1aa898017_writeBytes((*_self_.alloc)._field_oc, _1aa8a5343_concatAllParts((*_3584_d.alloc)._field_Args));
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a9235bb4_var(&((*((*_self_.alloc)._field_oc))._field_Buf), _35124_m);
}



inline void _1a9221881_structureIns(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a799a97a_StructIns> _36733_m) {
	_1aa8aa634_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _36733_m);
}



inline void _1a9221b39_unary(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a63c85_UnaryExpr> _37126_m) {
	{
		auto &_match_expr{ (*((*(_37126_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1babb8a20:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1a9222453_possibleRefExpr(_self_, (*((*(_37126_m))._field_Expr))._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1babb9119:;
			{
				if ((_1bd44650e_Production || (_1a7c35907_Sptr((*((*(_37126_m))._field_Expr))._field_Type.ptr()) == nullptr))) {
					goto _match_end_1babb901a;
				};
				_1a9222453_possibleRefExpr(_self_, (*((*(_37126_m))._field_Expr))._field_Model);
				_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1aa89a3e3_locInfo((*(_self_))._field_oc, &((*_37126_m.alloc)._field_Op));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1babb901a:;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1aa897c5e_write((*(_self_))._field_oc, (*((*(_37126_m))._field_Op))._field_Kind);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9222453_possibleRefExpr(_self_, (*((*_37126_m.alloc)._field_Expr))._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a9221de2_structureLit(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a64659_StructLitExpr> _39533_m) {
	jule::Bool _3963_binded = _1a85ec6b9_IsStructBinded((*(_39533_m))._field_Strct);;
	if (_3963_binded) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1a9221881_structureIns(_self_, (*_39533_m.alloc)._field_Strct);
	if (_3963_binded) {
		_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4077_inited = false;;
	_julec_label_1babc2463:;
	{
		auto expr = &((*((*_39533_m.alloc)._field_Strct))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babc373e:;
		if (it != expr_end) {
			jule::Ptr<_1a7999d53_FieldIns> _40915_f = *it;
			{
				{
					auto expr = &((*_39533_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1babc4388:;
					if (it != expr_end) {
						jule::Ptr<_1a7a642b3_StructArgExpr> _41016_arg = *it;
						{
							if (((*(_41016_arg))._field_Field == _40915_f)) {
								if (_4077_inited) {
									_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1a92358c8_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_40915_f))._field_Decl));
								_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1a9222453_possibleRefExpr(_self_, (*((*_41016_arg.alloc)._field_Expr))._field_Model);
								_4077_inited=true;
								goto _iter_next_1babc373e;
							};
						}
						_iter_next_1babc4388:;
						++it;
						goto _iter_begin_1babc4388;
					}
					_iter_end_1babc4388:;
				};
				if (_3963_binded) {
					_4077_inited=false;
					goto _iter_next_1babc373e;
				};
				if (_4077_inited) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4077_inited=_1a922be63_handleFieldByDefault(_self_, &(_40915_f));
			}
			_iter_next_1babc373e:;
			++it;
			goto _iter_begin_1babc373e;
		}
		_iter_end_1babc373e:;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a922219a_allocStructure(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a64956_AllocStructLitExpr> _43935_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1a9221881_structureIns(_self_, (*((*(_43935_m))._field_Lit))._field_Strct);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a9221de2_structureLit(_self_, (*_43935_m.alloc)._field_Lit);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9222453_possibleRefExpr(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Any _44732_expr) {
	{
		auto &_match_expr{ _44732_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1babcb25d:;
			{
				jule::Ptr<_1a7ba4eb4_Var> _4504_v = _44732_expr.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
				if ((*(_4504_v))._field_Reference) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1a922bb22_model(_self_, _44732_expr);
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1babcb1e7:;
	};
	_1a922bb22_model(_self_, _44732_expr);
}



inline void _1a9222871_castTraitFromTrait(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a64ed9_CastingExpr>* _46140_m, jule::Ptr<_1a7a7b297_Trait> _46167_t1, jule::Ptr<_1a7a7b297_Trait> _46189_t2) {
	_1a9222453_possibleRefExpr(_self_, (*((*((*(_46140_m))))._field_Expr))._field_Model);
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1aa89a13a_pushAndWriteMaskMapper((*(_self_))._field_oc, _46167_t1, _46189_t2);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9222b29_casting(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a64ed9_CastingExpr> _47428_m) {
	if (_1a7c34043_ActualEqual((*(_47428_m))._field_Type, (*_47428_m.alloc)._field_ExprType)) {
		_1a9222453_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
		return;;
	};
	{
		
		if (_1a85eb520_IsAny(&((*(_47428_m))._field_Type))) {
			_case_begin_1babd1d35:;
			{
				if (_1a7c336d5_IsNil((*_47428_m.alloc)._field_ExprType.ptr())) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1a7c361aa_TypeEnum((*_47428_m.alloc)._field_ExprType.ptr()) != nullptr)) {
					_1a9222453_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I32 _4904_i = _1aa899766_pushAnyType((*(_self_))._field_oc, (*_47428_m.alloc)._field_ExprType);;
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_47428_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1babd3a07:;
						{
							jule::Ptr<_1a7c3b369_Prim> _4945_prim = _1a7c35671_Prim((*_47428_m.alloc)._field_ExprType.ptr());;
							if (((_4945_prim != nullptr) && _1a7aee419_IsInt((*_4945_prim.alloc)._field_Kind))) {
								_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1aa8a7da1_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _4945_prim);
								_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1a9222453_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
								_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1babd5c29;
							};
							goto _case_begin_1babd5c90;
						}
					}
					else {
						_case_begin_1babd5c90:;
						{
							_1a9222453_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
						}
					}
					_match_end_1babd5c29:;
				};
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_4904_i));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1a85eb520_IsAny(&((*(_47428_m))._field_ExprType))) {
			_case_begin_1babd1dac:;
			{
				_1a9222453_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
				_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a7c35907_Sptr((*_47428_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a7c35907_Sptr((*(_47428_m))._field_Type)))._field_Elem);
				} else {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
				};
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1bd44650e_Production))) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1aa89a3e3_locInfo((*(_self_))._field_oc, &((*_47428_m.alloc)._field_Token));
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_1aa899766_pushAnyType((*(_self_))._field_oc, (*_47428_m.alloc)._field_Type)));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a7c35b8d_Ptr((*_47428_m.alloc)._field_ExprType.ptr()) != nullptr) || (_1a7c35b8d_Ptr((*(_47428_m))._field_Type) != nullptr)) {
			_case_begin_1babd1e23:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1a9222453_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1a7c37211_Trait((*(_47428_m))._field_ExprType) != nullptr)) {
			_case_begin_1babd1e89:;
			{
				if ((_1a7c37211_Trait((*_47428_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1a9222871_castTraitFromTrait(_self_, &(_47428_m), _1a7c37211_Trait((*(_47428_m))._field_Type), _1a7c37211_Trait((*(_47428_m))._field_ExprType));
					return;;
				};
				_1a9222453_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1a7c35907_Sptr((*_47428_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a7c35907_Sptr((*(_47428_m))._field_Type)))._field_Elem);
				} else {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
				};
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1bd44650e_Production))) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1aa89a3e3_locInfo((*(_self_))._field_oc, &((*_47428_m.alloc)._field_Token));
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1a9234c29_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a7c37211_Trait((*(_47428_m))._field_ExprType));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_1a85ee18d_FindTraitTypeOffset(_1a7c37211_Trait((*(_47428_m))._field_ExprType), (*_47428_m.alloc)._field_Type)));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a7c37211_Trait((*(_47428_m))._field_Type) != nullptr)) {
			_case_begin_1babd2000:;
			{
				_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a9222453_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1a9234c29_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a7c37211_Trait((*_47428_m.alloc)._field_Type.ptr()));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_1a85ee18d_FindTraitTypeOffset(_1a7c37211_Trait((*(_47428_m))._field_Type), (*_47428_m.alloc)._field_ExprType)));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1babd1939:;
	};
	jule::Ptr<_1a7c3b369_Prim> _5767_prim = _1a7c35671_Prim((*(_47428_m))._field_Type.ptr());;
	if (((_5767_prim != nullptr) && _1a7c3e834_IsStr(_5767_prim))) {
		jule::Ptr<_1a7c3b369_Prim> _5788_eprim = _1a7c35671_Prim((*_47428_m.alloc)._field_ExprType.ptr());;
		if (((_5788_eprim != nullptr) && (_5767_prim != nullptr))) {
			if (_1a7c3cc94_IsU8(_5788_eprim)) {
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_1a9222453_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
			_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_1a7c40868_Slc> _5898_slc = _1a7c366c7_Slc((*(_47428_m))._field_ExprType);;
		if ((_5898_slc != nullptr)) {
			_5788_eprim=_1a7c35671_Prim((*_5898_slc.alloc)._field_Elem.ptr());
			if (_1a7c3c777_IsI32(_5788_eprim.ptr())) {
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_1a9222453_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
			_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_5767_prim=_1a7c35671_Prim((*_47428_m.alloc)._field_ExprType.ptr());
	if (((_5767_prim != nullptr) && _1a7c3e834_IsStr(_5767_prim))) {
		jule::Ptr<_1a7c40868_Slc> _6058_slc = _1a7c366c7_Slc((*(_47428_m))._field_Type);;
		if ((_6058_slc != nullptr)) {
			_5767_prim=_1a7c35671_Prim((*_6058_slc.alloc)._field_Elem.ptr());
			if (_1a7c3c777_IsI32(_5767_prim.ptr())) {
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_1a9222453_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
			_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a9222453_possibleRefExpr(_self_, (*((*_47428_m.alloc)._field_Expr))._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9222dd2_args(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6588b_FnCallExpr>* _62626_m) {
	jule::I32 _6277_j = 0LL;;
	if (((((*((*((*(_62626_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_62626_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*((*((*(_62626_m))))._field_Func))._field_Params.len() > 0LL) && _1a7a6e70d_IsSelf((*((*(*((*(_62626_m))))._field_Func.alloc)._field_Params[0LL]))._field_Decl.ptr())))) {
		(_6277_j)++;
	};
	{
		auto expr = &((*((*(_62626_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac17b7e:;
		if (it != expr_end) {
			jule::I32 _6327_i = it - expr->begin();
			jule::Any _63210_arg = *it;
			{
				jule::Ptr<_1a7a729db_ParamIns> _6334_p = (*((*((*(_62626_m))))._field_Func))._field_Params[_6277_j];;
				if ((((*(_6334_p))._field_Decl != nullptr) && (*(*(_6334_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _63210_arg };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1bac1b589:;
							{
								jule::Ptr<_1a7ba4eb4_Var> _6376_v = _63210_arg.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
								if ((*(_6376_v))._field_Reference) {
									_1a922bb22_model(_self_, _63210_arg);
									goto _julec_label_1bac1de60;
								};
							}
						}
						_match_end_1bac1b523:;
					};
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a922bb22_model(_self_, _63210_arg);
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1bac1de60;
				};
				_1a9222453_possibleRefExpr(_self_, _63210_arg);
				_julec_label_1bac1de60:;
				if ((((*((*(_62626_m))))._field_Args.len() - _6327_i) > 1LL)) {
					_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
				(_6277_j)++;
			}
			_iter_next_1bac17b7e:;
			++it;
			_6327_i++;
			goto _iter_begin_1bac17b7e;
		}
		_iter_end_1bac17b7e:;
	};
}



inline void _1a922318a_modelForCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Any _65733_expr) {
	{
		auto &_match_expr{ _65733_expr };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bac1a533:;
			{
				_1a92267ba_funcIns(_self_, _65733_expr.unsafe_cast_ptr<_1a7a73b41_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bac1e537:;
			{
				jule::Ptr<_1a7a6842c_StructSubIdentExpr> _6638_ssie = _65733_expr.unsafe_cast_ptr<_1a7a6842c_StructSubIdentExpr>();;
				if (((*(_6638_ssie))._field_Method != nullptr)) {
					_1a92267ba_funcIns(_self_, (*_6638_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1bac1a4bc:;
	};
	_1a9222453_possibleRefExpr(_self_, _65733_expr);
}



inline void _1a9223443_pushCallInf(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6588b_FnCallExpr>* _67229_m) {
	if ((_1bd44650e_Production || (!((*((*((*(_67229_m))))._field_Func))._field_Anon)))) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_67229_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_67229_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1bac23937:;
				{
					if (_1a85ec6b9_IsStructBinded((*((*((*((*(_67229_m))))._field_Expr.unsafe_cast_ptr<_1a7a6842c_StructSubIdentExpr>()))._field_Field))._field_Owner)) {
						_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1bac238c1:;
		};
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1aa89a3e3_locInfo((*(_self_))._field_oc, &((*((*(_67229_m))))._field_Token));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_67229_m))))._field_Args.len() != 0LL)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1a9223784_isWrapped(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6588b_FnCallExpr>* _69531_m) {
	if ((((!(_1a7a75109_IsBuiltin((*((*(_69531_m))))._field_Func.ptr()))) && ((*((*(*((*(_69531_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1a7a6e70d_IsSelf((*((*((*((*(_69531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_69531_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1bac28321:;
				{
					jule::Ptr<_1a7a6842c_StructSubIdentExpr> _6999_ssie = (*((*(_69531_m))))._field_Expr.unsafe_cast_ptr<_1a7a6842c_StructSubIdentExpr>();;
					if ((*((*(_6999_ssie))._field_Expr))._field_Lvalue) {
						return false;;
					};
					{
						
						if (_1a7a6e994_IsRef((*((*((*((*(_69531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1a7c35907_Sptr((*((*(_6999_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1bac2a598:;
							{
								return false;;
							}
						}
						else {
							_case_begin_1bac29971:;
							{
								{
									auto &_match_expr{ (*((*((*(_6999_ssie))._field_Expr))._field_Type))._field_Kind };
									
									if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
										_case_begin_1bac2a4ee:;
										{
											_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
											_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_6999_ssie))._field_Expr))._field_Type);
											_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" _wrap_copy = ", 14));
											_1a922bb22_model(_self_, (*(*(_6999_ssie))._field_Expr.alloc)._field_Model);
											_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
											return true;;
										}
									}
									_match_end_1bac2a488:;
								};
							}
						}
						_match_end_1bac29421:;
					};
				}
			}
			_match_end_1bac282aa:;
		};
	};
	return false;;
}



inline jule::Bool _1a9223ac5_writeReceiver(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Any _72434_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _72434_m };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bac362da:;
			{
				_1a9222453_possibleRefExpr(_self_, (*((*(_72434_m.unsafe_cast_ptr<_1a7a63c85_UnaryExpr>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1bac36c47:;
			{
				_1a9222453_possibleRefExpr(_self_, (*((*((*(_72434_m.unsafe_cast_ptr<_1a69a5249_UnsafeDerefExpr>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bac36483:;
			{
				_1a9222453_possibleRefExpr(_self_, _72434_m);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bac3641c:;
	};
}



inline void _1a9223d7d_pureFuncCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6588b_FnCallExpr>* _73834_m) {
	jule::Bool _7393_wrapped = _1a9223784_isWrapped(_self_, _73834_m);;
	_1a922318a_modelForCall(_self_, (*((*(_73834_m))))._field_Expr);
	if ((!(_1a7a75109_IsBuiltin((*((*(_73834_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_73834_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_73834_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1a85ed2d0_HasDirective(&((*(*((*((*(_73834_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_73834_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bac3a894:;
					if (it != expr_end) {
						jule::I32 _74511_i = it - expr->begin();
						jule::Ptr<_1a7c30b77_InsGeneric> _74518_g = *it;
						{
							_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_74518_g))._field_Type);
							if ((((*(*((*(_73834_m))))._field_Func.alloc)._field_Generics.len() - _74511_i) > 1LL)) {
								_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1bac3a894:;
						++it;
						_74511_i++;
						goto _iter_begin_1bac3a894;
					}
					_iter_end_1bac3a894:;
				};
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1a9223443_pushCallInf(_self_, _73834_m);
	if (((*((*((*(_73834_m))))._field_Func))._field_AsAnon && (!((*(*((*(_73834_m))))._field_Func.alloc)._field_Anon)))) {
		_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_73834_m))))._field_Args.len() > 0LL)) {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1a7a75109_IsBuiltin((*((*(_73834_m))))._field_Func.ptr()))) && ((*((*(*((*(_73834_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1a7a6e70d_IsSelf((*((*((*((*(_73834_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_73834_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1bac42648:;
				{
					jule::Ptr<_1a7a6842c_StructSubIdentExpr> _7699_ssie = (*((*(_73834_m))))._field_Expr.unsafe_cast_ptr<_1a7a6842c_StructSubIdentExpr>();;
					{
						
						if (_1a7a6e994_IsRef((*((*((*((*(_73834_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1bac44282:;
							{
								_1a9223ac5_writeReceiver(_self_, (*((*(_7699_ssie))._field_Expr))._field_Model);
							}
						}
						else {
							_case_begin_1bac43616:;
							{
								{
									auto &_match_expr{ (*((*((*(_7699_ssie))._field_Expr))._field_Type))._field_Kind };
									
									if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)) {
										_case_begin_1bac47bc0:;
										{
											jule::Bool _7787_safe = _1a9223ac5_writeReceiver(_self_, (*((*(_7699_ssie))._field_Expr))._field_Model);;
											if (_7787_safe) {
												_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".ptr(", 5));
												if ((!(_1bd44650e_Production))) {
													_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
													_1aa89a3e3_locInfo((*(_self_))._field_oc, &((*((*(_73834_m))))._field_Token));
													_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
												};
												_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
											};
										}
									}
									else {
										_case_begin_1bac4421b:;
										{
											{
												auto &_match_expr{ (*((*((*(_7699_ssie))._field_Expr))._field_Type))._field_Kind };
												
												if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
													_case_begin_1bac44c99:;
													{
														{
															auto &_match_expr{ (*((*(_7699_ssie))._field_Expr))._field_Model };
															
															if (_match_expr.type == &__jule_any_type7) {
																_case_begin_1bac455c4:;
																{
																	jule::Ptr<_1a7ba4eb4_Var> _7939_v = (*((*(_7699_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
																	if ((*(_7939_v))._field_Reference) {
																		goto _match_end_1bac45a69;
																	};
																	goto _case_begin_1bac45ad0;
																}
															}
															else {
																_case_begin_1bac45ad0:;
																{
																	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
																}
															}
															_match_end_1bac45a69:;
														};
													}
												}
												_match_end_1bac44c33:;
											};
											if (_7393_wrapped) {
												_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit("_wrap_copy", 10));
											} else if ((_1a7c35b8d_Ptr((*((*(_7699_ssie))._field_Expr))._field_Type.ptr()) == nullptr)) {
												_1a922bb22_model(_self_, (*(*(_7699_ssie))._field_Expr.alloc)._field_Model);
											} else {
												_1a9222453_possibleRefExpr(_self_, (*((*((*(*(_7699_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1a7a63c85_UnaryExpr>(&__jule_any_type112)))._field_Expr))._field_Model);
											};
										}
									}
									_match_end_1bac441a5:;
								};
							}
						}
						_match_end_1bac4358e:;
					};
					if (((*((*(_73834_m))))._field_Args.len() > 0LL)) {
						_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1bac422e6:;
				{
					_1a9222453_possibleRefExpr(_self_, (*((*((*(_73834_m))))._field_Expr.unsafe_cast_ptr<_1a7a67a8b_TraitSubIdentExpr>()))._field_Expr);
					_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_73834_m))))._field_Args.len() > 0LL)) {
						_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1bac425c1:;
		};
	};
	_1a9222dd2_args(_self_, _73834_m);
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if (_7393_wrapped) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1a9224136_coFuncCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6588b_FnCallExpr>* _83232_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	;
	;
	jule::Str _8397_i = jule::Str();;
	if ((((*((*((*(_83232_m))))._field_Func))._field_Params.len() > 0LL) || (*((*((*(_83232_m))))._field_Func))._field_AsAnon)) {
		_8397_i=_1a4a03c06_Itoa(_1aa898c93_pushCoSpawn((*(_self_))._field_oc, (*((*(_83232_m))))._field_Func));
		jule::Str _8424_t = (jule::Str::lit("__jule_cospawn_argdata", 22) + _8397_i);;
		_1aa897c5e_write((*(_self_))._field_oc, _8424_t);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" *", 2));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = new (std::nothrow) ", 22));
		_1aa897c5e_write((*(_self_))._field_oc, _8424_t);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; if (!", 7));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(") __jule_panic((", 16));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("*)\"memory allocation failed for concurrent call\", 44);\n", 55));
		_1aa898611_indent((*(_self_))._field_oc);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__juleCoFunc", 12));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
		_1a922318a_modelForCall(_self_, (*((*(_83232_m))))._field_Expr);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		{
			auto expr = &((*((*((*(_83232_m))))._field_Func))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bac5db1a:;
			if (it != expr_end) {
				jule::I32 _8648_j = it - expr->begin();
				{
					_1aa898611_indent((*(_self_))._field_oc);
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__juleCoParam", 13));
					_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_8648_j));
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_1a9222453_possibleRefExpr(_self_, (*((*(_83232_m))))._field_Args[_8648_j]);
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				}
				_iter_next_1bac5db1a:;
				++it;
				_8648_j++;
				goto _iter_begin_1bac5db1a;
			}
			_iter_end_1bac5db1a:;
		};
		_1aa898611_indent((*(_self_))._field_oc);
	};
	if (!(_8397_i).empty()) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_coSpawn((void*)", 22));
	if ((_8397_i).empty()) {
		static__1a923493d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_83232_m))))._field_Func));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, (jule::Str::lit("__jule_cospawn_method", 21) + _8397_i));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if ((_8397_i).empty()) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("NULL", 4));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(void*)", 7));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_8397_i).empty()) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(") { delete ", 11));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; __jule_panic((", 16));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("*)\"thread creation failed for concurrent call\", 42); }", 54));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9224499_writeUseExpr(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a73b41_FnIns>* _91034_f, jule::Ptr<_1a7bed89d_Data> _91055_d) {
	if ((_1a7c3772d_Tup((*(_91055_d))._field_Type.ptr()) == nullptr)) {
		_1a9222453_possibleRefExpr(_self_, (*_91055_d.alloc)._field_Model);
		_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1a7a68e99_TupleExpr> _9167_tup = (*(_91055_d))._field_Model.cast_ptr<_1a7a68e99_TupleExpr>(&__jule_any_type83);;
	_1aa8b1b57_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1a7c3772d_Tup((*((*(_91034_f))))._field_Result.ptr()));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_9167_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac7080d:;
		if (it != expr_end) {
			jule::I32 _9197_i = it - expr->begin();
			jule::Ptr<_1a7bed89d_Data> _91910_data = *it;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_9197_i));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1a9222453_possibleRefExpr(_self_, (*(_91910_data))._field_Model);
				if ((((*(_9167_tup))._field_Datas.len() - _9197_i) > 1LL)) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bac7080d:;
			++it;
			_9197_i++;
			goto _iter_begin_1bac7080d;
		}
		_iter_end_1bac7080d:;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1a922480c_funcCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6588b_FnCallExpr> _93129_m, jule::Bool _93151_ignoreExceptional) {
	if ((*(_93129_m))._field_IsCo) {
		_1a9224136_coFuncCall(_self_, &(_93129_m));
		return;;
	};
	if (((_1a7a75109_IsBuiltin((*(_93129_m))._field_Func.ptr()) || (!((*((*((*(_93129_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_93129_m))._field_Except != nullptr) && ((*((*_93129_m.alloc)._field_Except))._field_Stmts.len() == 0LL)))) {
		_1a9223d7d_pureFuncCall(_self_, &(_93129_m));
		return;;
	};
	if (_93151_ignoreExceptional) {
		_1a9223d7d_pureFuncCall(_self_, &(_93129_m));
		if (((*((*(_93129_m))._field_Func))._field_Result != nullptr)) {
			_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".result", 7));
		};
		return;;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1a9223d7d_pureFuncCall(_self_, &(_93129_m));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aa898611_indent((*(_self_))._field_oc);
	if (((*(_93129_m))._field_Except != nullptr)) {
		if ((((*((*_93129_m.alloc)._field_Func))._field_Result == nullptr) || (!((*_93129_m.alloc)._field_Assigned)))) {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1a9219291_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_93129_m.alloc)._field_Except);
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _9695_forwarded = _1a85eae48_IsForwarded(&((*_93129_m.alloc)._field_Except));;
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_9695_forwarded) {
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _9749_stmt = (*(*(_93129_m))._field_Except.alloc)._field_Stmts[((*(*(_93129_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _9749_stmt };
				
				if (_match_expr.type == &__jule_any_type21) {
					_case_begin_1bac80664:;
					{
						((*((*(_93129_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_93129_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1aa898215_addIndent((*(_self_))._field_oc);
						_1a9218ed8_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_93129_m.alloc)._field_Except));
						_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1aa898611_indent((*(_self_))._field_oc);
						_1a9224499_writeUseExpr(_self_, &((*_93129_m.alloc)._field_Func), _9749_stmt.unsafe_cast_ptr<_1a7bed89d_Data>());
						_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1aa898413_doneIndent((*(_self_))._field_oc);
						_1aa898611_indent((*(_self_))._field_oc);
						_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1bac80730:;
					{
						_1a9219291_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_93129_m.alloc)._field_Except);
					}
				}
				_match_end_1bac805ed:;
			};
			if (_9695_forwarded) {
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1a922ccdd_initExpr(_self_, (*((*_93129_m.alloc)._field_Func))._field_Result);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1aa898413_doneIndent((*(_self_))._field_oc);
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_1aa89a3e3_locInfo((*(_self_))._field_oc, &((*(_93129_m))._field_Token));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1a7a71039_IsVoid((*((*_93129_m.alloc)._field_Func))._field_Decl.ptr())))) {
			_1aa898611_indent((*(_self_))._field_oc);
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1aa898413_doneIndent((*(_self_))._field_oc);
	};
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a9224ab5_slice(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a65c65_SliceExpr> _101426_m) {
	if (((*(_101426_m))._field_Elems.len() == 0LL)) {
		_1aa8a9787_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_101426_m.alloc)._field_ElemType);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1aa8a9787_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_101426_m))._field_ElemType);
	jule::Str _10223_size = _1a4a03c06_Itoa((*_101426_m.alloc)._field_Elems.len());;
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1aa897c5e_write((*(_self_))._field_oc, _10223_size);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1aa897c5e_write((*(_self_))._field_oc, _10223_size);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_101426_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac945ac:;
		if (it != expr_end) {
			jule::I32 _10327_i = it - expr->begin();
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1a9222453_possibleRefExpr(_self_, (*(_101426_m))._field_Elems[_10327_i]);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1bac945ac:;
			++it;
			_10327_i++;
			goto _iter_begin_1bac945ac;
		}
		_iter_end_1bac945ac:;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1a9224d6d_indexing(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6621b_IndexingExpr> _104329_m) {
	{
		auto &_match_expr{ (*((*(_104329_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1bac98528:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_1bd44650e_Production))) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1aa89a3e3_locInfo((*(_self_))._field_oc, &((*(_104329_m))._field_Token));
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _10544_s = _1a7a591cb_ReadStr((*((*(_104329_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a79ea9a8_Const>().ptr());;
				_1a922da9c_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _10544_s);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_10544_s.len()));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a9222453_possibleRefExpr(_self_, (*((*(_104329_m))._field_Index))._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1bac984b2:;
	};
	{
		
		if ((_1a7c37497_Map((*((*(_104329_m))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bac9e92a:;
			{
				jule::Ptr<_1a7c4200c_Map> _10678__map = _1a7c37497_Map((*((*(_104329_m))._field_Expr))._field_Type);;
				jule::Ptr<_1a799a97a_StructIns> _10688_ins = _1a85ee886_FindStructGenericInstance(&((*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_10678__map))._field_Key; (*it++) = (*_10678__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1a7a73b41_FnIns> _10708_f = (*(_1a799b9e2_FindMethod(_10688_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__1a923493d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_10708_f));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a9222453_possibleRefExpr(_self_, (*(*(_104329_m))._field_Expr.alloc)._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a9222453_possibleRefExpr(_self_, (*((*_104329_m.alloc)._field_Index))._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_1bd44650e_Production || (_1a7c35b8d_Ptr((*((*(_104329_m))._field_Expr))._field_Type.ptr()) != nullptr) || _1a85eb256_IsExprComesFromBind(&((*_104329_m.alloc)._field_Expr))) {
			_case_begin_1bac98935:;
			{
				_1a9222453_possibleRefExpr(_self_, (*(*(_104329_m))._field_Expr.alloc)._field_Model);
				_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1a9222453_possibleRefExpr(_self_, (*((*_104329_m.alloc)._field_Index))._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1bac9e83c:;
			{
				_1a9222453_possibleRefExpr(_self_, (*(*(_104329_m))._field_Expr.alloc)._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1aa89a3e3_locInfo((*(_self_))._field_oc, &((*_104329_m.alloc)._field_Token));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1a9222453_possibleRefExpr(_self_, (*(*(_104329_m))._field_Index.alloc)._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1bac9bc35:;
	};
}



inline void _1a9225126_unsafeIndexing(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a42c0_UnsafeIndexingExpr> _109435_m) {
	_1a9222453_possibleRefExpr(_self_, (*((*((*(_109435_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_1bd44650e_Production || (_1a7c35b8d_Ptr((*(*((*(_109435_m))._field_Node))._field_Expr.alloc)._field_Type.ptr()) != nullptr) || (_1a7c37497_Map((*((*((*(_109435_m))._field_Node))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_1bacabaad:;
			{
				_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1a9222453_possibleRefExpr(_self_, (*((*(*(_109435_m))._field_Node.alloc)._field_Index))._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1baca8d63:;
			{
				_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1a9222453_possibleRefExpr(_self_, (*((*(*(_109435_m))._field_Node.alloc)._field_Index))._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1bacab6c3:;
	};
}



inline void _1a92253ce_anonFunc(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a666c2_AnonFnExpr> _111129_m) {
	jule::Bool _11123_closure = _1a85eb861_IsClosure(&(_111129_m));;
	jule::Str _11133_ident = _1aa899425_pushAnonFn((*(_self_))._field_oc, &(_111129_m));;
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1aa8abba7_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_111129_m))._field_Func);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1aa897c5e_write((*(_self_))._field_oc, _11133_ident);
	if (_11123_closure) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1aa897c5e_write((*(_self_))._field_oc, _11133_ident);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1aa897c5e_write((*(_self_))._field_oc, _11133_ident);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_111129_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bacb690e:;
			if (it != expr_end) {
				jule::I32 _11259_i = it - expr->begin();
				jule::Ptr<_1a7ba4eb4_Var> _112516_v = *it;
				{
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1a9235bb4_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _112516_v);
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a92215c8_var(_self_, _112516_v);
					if ((((*_111129_m.alloc)._field_Captured.len() - _11259_i) > 1LL)) {
						_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1bacb690e:;
				++it;
				_11259_i++;
				goto _iter_begin_1bacb690e;
			}
			_iter_end_1bacb690e:;
		};
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1aa897c5e_write((*(_self_))._field_oc, _11133_ident);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1a9225687_mapExpr(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a66e75_MapExpr> _114228_m) {
	jule::Ptr<_1a799a97a_StructIns> _11437_ins = _1a85ee886_FindStructGenericInstance(&((*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_114228_m))._field_Kind))._field_Key; (*it++) = (*(*(_114228_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1a7a73b41_FnIns> _11457_maker = (*(_1a799b9e2_FindMethod(_11437_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_114228_m.alloc)._field_Entries.len() == 0LL)) {
		static__1a923493d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_11457_maker));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_1a7a73b41_FnIns> _11527_f = (*(_1a799b9e2_FindMethod(_11437_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1aa8a9e5d_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_114228_m.alloc)._field_Kind);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1a923493d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11457_maker));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_114228_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bacc3db1:;
		if (it != expr_end) {
			jule::Ptr<_1a7a66a9b_KeyValPairExpr> _116215_pair = *it;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1a923493d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11527_f));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a9222453_possibleRefExpr(_self_, (*(_116215_pair))._field_Key);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_1a9222453_possibleRefExpr(_self_, (*_116215_pair.alloc)._field_Val);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1bacc3db1:;
			++it;
			goto _iter_begin_1bacc3db1;
		}
		_iter_end_1bacc3db1:;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1a9225940_slicing(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a67508_SlicingExpr> _117728_m) {
	_1a9222453_possibleRefExpr(_self_, (*(_117728_m))._field_Expr);
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_1bd44650e_Production))) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1aa89a3e3_locInfo((*(_self_))._field_oc, &((*_117728_m.alloc)._field_Token));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a9222453_possibleRefExpr(_self_, (*_117728_m.alloc)._field_Left);
	if (((*_117728_m.alloc)._field_Right != nullptr)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a9222453_possibleRefExpr(_self_, (*_117728_m.alloc)._field_Right);
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9225be8_traitSub(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a67a8b_TraitSubIdentExpr> _119329_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1a9234c29_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_119329_m))._field_Trt);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1a9222453_possibleRefExpr(_self_, (*_119329_m.alloc)._field_Expr);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_1bd44650e_Production))) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1aa89a3e3_locInfo((*(_self_))._field_oc, &((*_119329_m.alloc)._field_Token));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1a9234652_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_119329_m.alloc)._field_Method));
}



inline void _1a9225ea1_structureSub(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6842c_StructSubIdentExpr> _120933_m) {
	_1a9222453_possibleRefExpr(_self_, (*((*(_120933_m))._field_Expr))._field_Model);
	if (((*_120933_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1a92358c8_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_120933_m.alloc)._field_Field))._field_Decl));
}



inline void _1a9226259_array(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a68b9c_ArrayExpr> _121826_m) {
	if ((((*((*(_121826_m))._field_Kind))._field_N == 0LL) || (((*(_121826_m))._field_Elems.len() == 0LL) && (!(_1aa8b4231_ableToInit(&((*((*_121826_m.alloc)._field_Kind))._field_Elem))))))) {
		_1aa8aa997_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_121826_m))._field_Kind);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_121826_m))._field_Elems.len() == 2LL) && ((*(_121826_m))._field_Elems[1LL] == nullptr))) {
		_1aa8aa997_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_121826_m.alloc)._field_Kind);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a9222453_possibleRefExpr(_self_, (*(_121826_m))._field_Elems[0LL]);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1aa8aa997_array((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_121826_m))._field_Kind);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_121826_m.alloc)._field_Elems.len() != (*((*_121826_m.alloc)._field_Kind))._field_N)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_121826_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bace13a6:;
		if (it != expr_end) {
			jule::I32 _12517_i = it - expr->begin();
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1a9222453_possibleRefExpr(_self_, (*(_121826_m))._field_Elems[_12517_i]);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1bace13a6:;
			++it;
			_12517_i++;
			goto _iter_begin_1bace13a6;
		}
		_iter_end_1bace13a6:;
	};
	if ((((*_121826_m.alloc)._field_Elems.len() != (*((*_121826_m.alloc)._field_Kind))._field_N) && _1aa8b4231_ableToInit(&((*(*(_121826_m))._field_Kind.alloc)._field_Elem)))) {
		_1a922c4c4_fillCollectionByDefault(_self_, &((*(*(_121826_m))._field_Kind.alloc)._field_Elem));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1a9226512_funcInsCommon(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a73b41_FnIns> _126834_m) {
	_1aa8ac01a_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _126834_m);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a92267ba_funcIns(_self_, _126834_m);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a92267ba_funcIns(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a73b41_FnIns> _127528_m) {
	if ((((*(_127528_m))._field_Decl != nullptr) && (*(*(_127528_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1a79781c7_Directive> _12774_d = _1a85ece17_FindDirective(&((*(*(_127528_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_12774_d != nullptr)) {
			_1aa898017_writeBytes((*(_self_))._field_oc, _1aa8a5343_concatAllParts((*_12774_d.alloc)._field_Args));
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a923493d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_127528_m));
}



inline void _1a9226a73_tuple(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a68e99_TupleExpr> _128626_m) {
	{
		auto expr = &((*(_128626_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bacec208:;
		if (it != expr_end) {
			jule::I32 _12878_i = it - expr->begin();
			jule::Ptr<_1a7bed89d_Data> _128715_d = *it;
			{
				_1a9222453_possibleRefExpr(_self_, (*(_128715_d))._field_Model);
				_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_128626_m))._field_Datas.len() - _12878_i) > 1LL)) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1aa898611_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1bacec208:;
			++it;
			_12878_i++;
			goto _iter_begin_1bacec208;
		}
		_iter_end_1bacec208:;
	};
}



inline void _1a9226d2b_newCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6996c_BuiltinNewCallExpr> _129728_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_129728_m))._field_Type);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_129728_m.alloc)._field_Init != nullptr)) {
		_1a9222453_possibleRefExpr(_self_, (*_129728_m.alloc)._field_Init);
	} else if (_1aa8b4231_ableToInit(&((*_129728_m.alloc)._field_Type))) {
		_1a922ccdd_initExpr(_self_, (*_129728_m.alloc)._field_Type);
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a92270d4_printCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a69296_BuiltinPrintCallExpr> _130930_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::print(", 12));
	jule::Ptr<_1a7a73b41_FnIns> _13117_f = _1a85ee512_FindFnGenericInstance(&((*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_130930_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1a923493d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13117_f));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9222453_possibleRefExpr(_self_, (*(*(_130930_m))._field_Expr.alloc)._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a922738c_printlnCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a69593_BuiltinPrintlnCallExpr> _131832_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::println(", 14));
	jule::Ptr<_1a7a73b41_FnIns> _13207_f = _1a85ee512_FindFnGenericInstance(&((*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_131832_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1a923493d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13207_f));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9222453_possibleRefExpr(_self_, (*(*(_131832_m))._field_Expr.alloc)._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a9227645_panicCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a69d46_BuiltinPanicCallExpr> _132730_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_1a9222453_possibleRefExpr(_self_, (*(_132730_m))._field_Expr);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1aa89a3e3_locInfo((*(_self_))._field_oc, &((*_132730_m.alloc)._field_Token));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a92278ed_errorCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6b94c_BuiltinErrorCallExpr> _133530_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1a7a71039_IsVoid((*((*(_133530_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_133530_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1bad0d66a:;
				{
					jule::Ptr<_1a7ba4eb4_Var> _13405_v = (*((*(_133530_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
					if (((*(_13405_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1bad0d604:;
		};
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1aa8b232d_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_133530_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_133530_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1bad12b03:;
				{
					jule::Ptr<_1a7ba4eb4_Var> _13525_v = (*((*(_133530_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
					if (((*(_13525_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1bad12a8c:;
		};
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1a9222453_possibleRefExpr(_self_, (*((*(_133530_m))._field_Err))._field_Model);
	jule::I32 _13613_i = _1aa899766_pushAnyType((*(_self_))._field_oc, (*(*(_133530_m))._field_Err.alloc)._field_Type);;
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_13613_i));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1a9227ba6_copyCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6b573_BuiltinCopyCallExpr> _136729_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1a9222453_possibleRefExpr(_self_, (*((*(_136729_m))._field_Dest))._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a9222453_possibleRefExpr(_self_, (*((*_136729_m.alloc)._field_Src))._field_Model);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9227e5e_lenCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6a9c3_BuiltinLenCallExpr> _137528_m) {
	jule::Ptr<_1a7c4200c_Map> _13767__map = _1a7c37497_Map((*((*(_137528_m))._field_Expr))._field_Type.ptr());;
	if ((_13767__map != nullptr)) {
		jule::Ptr<_1a799a97a_StructIns> _13788_ins = _1a85ee886_FindStructGenericInstance(&((*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_13767__map.alloc)._field_Key; (*it++) = (*_13767__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_1a7a73b41_FnIns> _13808_f = (*(_1a799b9e2_FindMethod(_13788_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__1a923493d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_13808_f));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a9222453_possibleRefExpr(_self_, (*(*(_137528_m))._field_Expr.alloc)._field_Model);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a9222453_possibleRefExpr(_self_, (*(*(_137528_m))._field_Expr.alloc)._field_Model);
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1a9228217_capCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6acc0_BuiltinCapCallExpr> _139128_m) {
	_1a9222453_possibleRefExpr(_self_, (*((*(_139128_m))._field_Expr))._field_Model);
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1a92284c0_deleteCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6b199_BuiltinDeleteCallExpr> _139631_m) {
	jule::Ptr<_1a7c4200c_Map> _13977__map = _1a7c37497_Map((*((*(_139631_m))._field_Dest))._field_Type.ptr());;
	if ((_13977__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1399:4"));;
	};
	jule::Ptr<_1a799a97a_StructIns> _14017_ins = _1a85ee886_FindStructGenericInstance(&((*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13977__map))._field_Key; (*it++) = (*_13977__map.alloc)._field_Val; __jule_collection; }));;
	;
	if (((*_139631_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_1a7a73b41_FnIns> _14048_f = (*(_1a799b9e2_FindMethod(_14017_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__1a923493d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14048_f));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a9222453_possibleRefExpr(_self_, (*(*(_139631_m))._field_Dest.alloc)._field_Model);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a9222453_possibleRefExpr(_self_, (*(*(_139631_m))._field_Key.alloc)._field_Model);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_1a7a73b41_FnIns> _14128_f = (*(_1a799b9e2_FindMethod(_14017_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__1a923493d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14128_f));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a9222453_possibleRefExpr(_self_, (*(*(_139631_m))._field_Dest.alloc)._field_Model);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a9228778_makeCallSlice(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6a2ec_BuiltinMakeCallExpr>* _142035_m) {
	jule::Ptr<_1a7c40868_Slc> _14217_slice = _1a7c366c7_Slc((*((*(_142035_m))))._field_Type.ptr());;
	jule::Bool _14223_init = _1aa8b4231_ableToInit(&((*(_14217_slice))._field_Elem));;
	if (_14223_init) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_142035_m))))._field_Type);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a9222453_possibleRefExpr(_self_, (*((*(_142035_m))))._field_Len);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_142035_m))))._field_Cap != nullptr)) {
		_1a9222453_possibleRefExpr(_self_, (*((*(_142035_m))))._field_Cap);
	} else {
		_1a9222453_possibleRefExpr(_self_, (*((*(_142035_m))))._field_Len);
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14223_init))) {
		return;;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a922c77c_initCollection(_self_, &((*_14217_slice.alloc)._field_Elem));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1a9228a31_makeCallStr(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6a2ec_BuiltinMakeCallExpr>* _144433_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a9222453_possibleRefExpr(_self_, (*((*(_144433_m))))._field_Len);
	if (((*((*(_144433_m))))._field_Cap != nullptr)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a9222453_possibleRefExpr(_self_, (*((*(_144433_m))))._field_Cap);
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9228cd9_makeCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6a2ec_BuiltinMakeCallExpr> _145529_m) {
	if ((_1a7c366c7_Slc((*(_145529_m))._field_Type.ptr()) != nullptr)) {
		_1a9228778_makeCallSlice(_self_, &(_145529_m));
		return;;
	};
	_1a9228a31_makeCallStr(_self_, &(_145529_m));
}



inline void _1a9229092_pushToSlice(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a4699_PushToSliceExpr> _146332_m) {
	;
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1aa8a9787_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_146332_m))._field_Elems))._field_ElemType);
	jule::Bool _14717_ptr = false;;
	{
		auto &_match_expr{ (*(_146332_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bad36561:;
			{
				jule::Ptr<_1a7a63c85_UnaryExpr> _14758_u = (*(_146332_m))._field_Dest.unsafe_cast_ptr<_1a7a63c85_UnaryExpr>();;
				if ((_1a7c35b8d_Ptr((*((*(_14758_u))._field_Expr))._field_Type.ptr()) != nullptr)) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1a9222453_possibleRefExpr(_self_, (*(*(_14758_u))._field_Expr.alloc)._field_Model);
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_14717_ptr=true;
					goto _match_end_1bad38299;
				};
				goto _case_begin_1bad38310;
			}
		}
		else {
			_case_begin_1bad38310:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1a9222453_possibleRefExpr(_self_, (*_146332_m.alloc)._field_Dest);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1bad38299:;
	};
	if (((*(*(_146332_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_14717_ptr) {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1a9222453_possibleRefExpr(_self_, (*((*(_146332_m))._field_Elems))._field_Elems[0LL]);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_14717_ptr) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa((*(*(_146332_m))._field_Elems.alloc)._field_Elems.len()));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_146332_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad41a77:;
		if (it != expr_end) {
			jule::Any _150915_e = *it;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_14717_ptr) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1a9222453_possibleRefExpr(_self_, _150915_e);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1bad41a77:;
			++it;
			goto _iter_begin_1bad41a77;
		}
		_iter_end_1bad41a77:;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a922934a_appendToSlice(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a4a73_AppendToSliceExpr> _152334_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9222453_possibleRefExpr(_self_, (*(_152334_m))._field_Dest);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1a9222453_possibleRefExpr(_self_, (*_152334_m.alloc)._field_Slice);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a9229603_appendCall(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6a6c6_BuiltinAppendCallExpr> _153131_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1a9222453_possibleRefExpr(_self_, (*(_153131_m))._field_Dest);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1a9222453_possibleRefExpr(_self_, (*_153131_m.alloc)._field_Elements);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a92298ab_sizeof(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6bc49_SizeofExpr> _153927_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1a9222453_possibleRefExpr(_self_, (*(_153927_m))._field_Expr);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9229b64_alignof(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6c3ed_AlignofExpr> _154528_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1a9222453_possibleRefExpr(_self_, (*(_154528_m))._field_Expr);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9229e1c_runeLit(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6c5da_RuneExpr> _155124_m) {
	if (((*(_155124_m))._field_Code <= 127LL)) {
		({
			auto except = _1bc0a2303_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1553:4"));
		});
		jule::Str _15548_b = _1a922d481_sbtoa(static_cast<jule::U8>((*_155124_m.alloc)._field_Code));;
		if (_15548_b.equal("'", 1)) {
			({
				auto except = _1bc0a2303_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1556:5"));
			});
		};
		({
			auto except = _1bc0a204a_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15548_b);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1558:4"));
			(except.result);
		});
		({
			auto except = _1bc0a2303_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1559:4"));
		});
		return;;
	};
	_1a922e22e_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>((*(_155124_m))._field_Code));
}



inline void _1a922a1c5_structureStatic(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a687c3_StructStaticIdentExpr> _156536_m) {
	static__1a923493d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_156536_m))._field_Method));
}



inline void _1a922a47d_backendEmit(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6c95e_BackendEmitExpr> _156932_m) {
	if (((*(_156932_m))._field_Exprs.len() == 0LL)) {
		_1aa897c5e_write((*(_self_))._field_oc, (*_156932_m.alloc)._field_Code);
		return;;
	};
	jule::I32 _15743_n = _1bc0a2d5e_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::Any> _15757_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*(_156932_m))._field_Exprs.len(), (*(_156932_m))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_156932_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad51b75:;
		if (it != expr_end) {
			jule::I32 _15768_i = it - expr->begin();
			jule::Any _157615_expr = *it;
			{
				_1a9222453_possibleRefExpr(_self_, _157615_expr);
				jule::Slice<jule::U8> _15788_buf = _1bc0a337b_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_15757_args[_15768_i]=jule::Any(__jule_bytesToStr(_15788_buf.slice(_15743_n)), &__jule_any_type5);
				{
					_1bc0a3634_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15788_buf.slice(0LL, _15743_n));
				};
			}
			_iter_next_1bad51b75:;
			++it;
			_15768_i++;
			goto _iter_begin_1bad51b75;
		}
		_iter_end_1bad51b75:;
	};
	_1aa897c5e_write((*(_self_))._field_oc, _1a7ca5081_Format((*_156932_m.alloc)._field_Code, _15757_args));
}



inline void _1a922a736_free(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7a6cc5b_FreeExpr> _158525_m) {
	_1a9222453_possibleRefExpr(_self_, (*(_158525_m))._field_Expr);
	if (_1bd445e04_RC) {
		_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1a922a9de_strComp(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a3643_StrCompExpr> _159428_m) {
	if ((*(_159428_m))._field_NotEq) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _15983_s = _1a7a591cb_ReadStr((*(_159428_m))._field_Right.ptr());;
	_1a9222453_possibleRefExpr(_self_, (*_159428_m.alloc)._field_Left);
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".equal(", 7));
	_1a922da9c_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _15983_s);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_15983_s.len()));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_159428_m.alloc)._field_NotEq) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a922ac97_emptyCompare(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a2d07_EmptyCompareExpr> _161033_m) {
	if ((*(_161033_m))._field_Neg) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9222453_possibleRefExpr(_self_, (*(_161033_m))._field_Expr);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1a922b050_unsafeDeref(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a5249_UnsafeDerefExpr> _161932_m) {
	{
		
		if ((_1a7c35907_Sptr((*((*((*(_161932_m))._field_Base))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bad60535:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a9222453_possibleRefExpr(_self_, (*(*((*(_161932_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1bad6016c:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1626:4"));;
			}
		}
		_match_end_1bad6005c:;
	};
}



inline void _1a922b308_unsafeCasting(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a5777_UnsafeCastingExpr> _163034_m) {
	{
		
		if (_1a85eb520_IsAny(&((*((*(_163034_m))._field_Base))._field_ExprType))) {
			_case_begin_1bad631c5:;
			{
				_1a9222453_possibleRefExpr(_self_, (*((*(*(_163034_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1a7c35907_Sptr((*(*(_163034_m))._field_Base.alloc)._field_Type.ptr()) != nullptr)) {
					_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a7c35907_Sptr((*((*(_163034_m))._field_Base))._field_Type)))._field_Elem);
				} else {
					_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_163034_m))._field_Base.alloc)._field_Type);
				};
				_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1bad62d0c:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1643:4"));;
			}
		}
		_match_end_1bad62bec:;
	};
}



inline void _1a922b5b1_strConcat(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a2587_StrConcatExpr> _164730_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("({ jule::Int size = 0; ", 23));
	{
		auto expr = &((*(_164730_m))._field_Parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad690cc:;
		if (it != expr_end) {
			jule::I32 _16497_i = it - expr->begin();
			jule::Any _164910_p = *it;
			{
				jule::Str _16504_ident = (jule::Str::lit("part", 4) + _1a4a03c06_Itoa(_16497_i));;
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str ", 10));
				_1aa897c5e_write((*(_self_))._field_oc, _16504_ident);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = std::move(", 13));
				_1a9222453_possibleRefExpr(_self_, _164910_p);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("); size += ", 11));
				_1aa897c5e_write((*(_self_))._field_oc, _16504_ident);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".len(); ", 8));
			}
			_iter_next_1bad690cc:;
			++it;
			_16497_i++;
			goto _iter_begin_1bad690cc;
		}
		_iter_end_1bad690cc:;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Slice<jule::U8> buf; buf.alloc_new(0, size); ", 51));
	{
		auto expr = &((*_164730_m.alloc)._field_Parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad68d35:;
		if (it != expr_end) {
			jule::I32 _16607_i = it - expr->begin();
			{
				jule::Str _16614_ident = (jule::Str::lit("part", 4) + _1a4a03c06_Itoa(_16607_i));;
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("buf.append(", 11));
				_1aa897c5e_write((*(_self_))._field_oc, _16614_ident);
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1bad68d35:;
			++it;
			_16607_i++;
			goto _iter_begin_1bad68d35;
		}
		_iter_end_1bad68d35:;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); })", 128));
}



inline void _1a922b869_strFromBytes(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a69a1ba2_StrFromBytes> _166933_m) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::unsafe_from_bytes(", 29));
	_1a9222453_possibleRefExpr(_self_, (*(_166933_m))._field_Expr);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a922bb22_model(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Any _167526_m) {
	{
		auto &_match_expr{ _167526_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1adb88348:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, _167526_m.unsafe_cast<jule::Str>());
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1adb886bc:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, (*(_167526_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1adb88733:;
			{
				_1aa8ac37d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _167526_m.unsafe_cast_ptr<_1a7c3255d_Type>());
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1adb88799:;
			{
				_1a921e9c2_constant(_self_, _167526_m.unsafe_cast_ptr<_1a79ea9a8_Const>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1adb88810:;
			{
				_1a92215c8_var(_self_, _167526_m.unsafe_cast_ptr<_1a7ba4eb4_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1adb88876:;
			{
				_1a9221881_structureIns(_self_, _167526_m.unsafe_cast_ptr<_1a799a97a_StructIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1adb888dc:;
			{
				_1a9226512_funcInsCommon(_self_, _167526_m.unsafe_cast_ptr<_1a7a73b41_FnIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1adb894d1:;
			{
				_1a9220891_unsafeBinary(_self_, (*(_167526_m.unsafe_cast_ptr<_1a69a3ec3_UnsafeBinaryExpr>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1adb89547:;
			{
				_1a9221320_binary(_self_, _167526_m.unsafe_cast_ptr<_1a7a638ab_BinaryExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1adb895ad:;
			{
				_1a9221b39_unary(_self_, _167526_m.unsafe_cast_ptr<_1a7a63c85_UnaryExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1adb89624:;
			{
				_1a9221de2_structureLit(_self_, _167526_m.unsafe_cast_ptr<_1a7a64659_StructLitExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1adb8968a:;
			{
				_1a922219a_allocStructure(_self_, _167526_m.unsafe_cast_ptr<_1a7a64956_AllocStructLitExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1adb89701:;
			{
				_1a9222b29_casting(_self_, _167526_m.unsafe_cast_ptr<_1a7a64ed9_CastingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1adb89778:;
			{
				_1a922480c_funcCall(_self_, _167526_m.unsafe_cast_ptr<_1a7a6588b_FnCallExpr>(), false);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1adb89800:;
			{
				_1a9224ab5_slice(_self_, _167526_m.unsafe_cast_ptr<_1a7a65c65_SliceExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1adb89877:;
			{
				_1a9226259_array(_self_, _167526_m.unsafe_cast_ptr<_1a7a68b9c_ArrayExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1adb898ee:;
			{
				_1a9225126_unsafeIndexing(_self_, _167526_m.unsafe_cast_ptr<_1a69a42c0_UnsafeIndexingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1adb89976:;
			{
				_1a9224d6d_indexing(_self_, _167526_m.unsafe_cast_ptr<_1a7a6621b_IndexingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1adb899ed:;
			{
				_1a92253ce_anonFunc(_self_, _167526_m.unsafe_cast_ptr<_1a7a666c2_AnonFnExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1adb89a75:;
			{
				_1a9225687_mapExpr(_self_, _167526_m.unsafe_cast_ptr<_1a7a66e75_MapExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1adb89aec:;
			{
				_1a9225940_slicing(_self_, _167526_m.unsafe_cast_ptr<_1a7a67508_SlicingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1adb89b74:;
			{
				_1a9225be8_traitSub(_self_, _167526_m.unsafe_cast_ptr<_1a7a67a8b_TraitSubIdentExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1adb89beb:;
			{
				_1a9225ea1_structureSub(_self_, _167526_m.unsafe_cast_ptr<_1a7a6842c_StructSubIdentExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1adb89c73:;
			{
				_1a9226a73_tuple(_self_, _167526_m.unsafe_cast_ptr<_1a7a68e99_TupleExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1adb89cea:;
			{
				_1a92270d4_printCall(_self_, _167526_m.unsafe_cast_ptr<_1a7a69296_BuiltinPrintCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1adb89d72:;
			{
				_1a922738c_printlnCall(_self_, _167526_m.unsafe_cast_ptr<_1a7a69593_BuiltinPrintlnCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1adb89de9:;
			{
				_1a9226d2b_newCall(_self_, _167526_m.unsafe_cast_ptr<_1a7a6996c_BuiltinNewCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1adb89e71:;
			{
				_1a9227645_panicCall(_self_, _167526_m.unsafe_cast_ptr<_1a7a69d46_BuiltinPanicCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1adb89ee8:;
			{
				_1a92278ed_errorCall(_self_, _167526_m.unsafe_cast_ptr<_1a7a6b94c_BuiltinErrorCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1adb8a070:;
			{
				_1a9228cd9_makeCall(_self_, _167526_m.unsafe_cast_ptr<_1a7a6a2ec_BuiltinMakeCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1adb8a0e7:;
			{
				_1a9229603_appendCall(_self_, _167526_m.unsafe_cast_ptr<_1a7a6a6c6_BuiltinAppendCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1adb8a16e:;
			{
				_1a9227ba6_copyCall(_self_, _167526_m.unsafe_cast_ptr<_1a7a6b573_BuiltinCopyCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1adb8a1e6:;
			{
				_1a9227e5e_lenCall(_self_, _167526_m.unsafe_cast_ptr<_1a7a6a9c3_BuiltinLenCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1adb8a26d:;
			{
				_1a9228217_capCall(_self_, _167526_m.unsafe_cast_ptr<_1a7a6acc0_BuiltinCapCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1adb8a2e5:;
			{
				_1a92284c0_deleteCall(_self_, _167526_m.unsafe_cast_ptr<_1a7a6b199_BuiltinDeleteCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1adb8a36c:;
			{
				_1a92298ab_sizeof(_self_, _167526_m.unsafe_cast_ptr<_1a7a6bc49_SizeofExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1adb8a3e4:;
			{
				_1a9229b64_alignof(_self_, _167526_m.unsafe_cast_ptr<_1a7a6c3ed_AlignofExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1adb8a46b:;
			{
				_1a9229e1c_runeLit(_self_, _167526_m.unsafe_cast_ptr<_1a7a6c5da_RuneExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1adb8a4e3:;
			{
				_1a922a1c5_structureStatic(_self_, _167526_m.unsafe_cast_ptr<_1a7a687c3_StructStaticIdentExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1adb8a56a:;
			{
				_1a922a47d_backendEmit(_self_, _167526_m.unsafe_cast_ptr<_1a7a6c95e_BackendEmitExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1adb8a5e2:;
			{
				_1a922a736_free(_self_, _167526_m.unsafe_cast_ptr<_1a7a6cc5b_FreeExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1adb8a669:;
			{
				_1a922a9de_strComp(_self_, _167526_m.unsafe_cast_ptr<_1a69a3643_StrCompExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1adb8a6e1:;
			{
				_1a92215c8_var(_self_, (*(_167526_m.unsafe_cast_ptr<_1a69a3104_RefExpr>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1adb8a768:;
			{
				_1a922ac97_emptyCompare(_self_, _167526_m.unsafe_cast_ptr<_1a69a2d07_EmptyCompareExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1adb8a7e0:;
			{
				_1a922b050_unsafeDeref(_self_, _167526_m.unsafe_cast_ptr<_1a69a5249_UnsafeDerefExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1adb8a867:;
			{
				_1a922b308_unsafeCasting(_self_, _167526_m.unsafe_cast_ptr<_1a69a5777_UnsafeCastingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1adb8a8de:;
			{
				_1a922480c_funcCall(_self_, (*(_167526_m.unsafe_cast_ptr<_1a69a2213_FnCallIgnoreExceptionalExpr>()))._field_Base, true);
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1adb8a966:;
			{
				_1a922b5b1_strConcat(_self_, _167526_m.unsafe_cast_ptr<_1a69a2587_StrConcatExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1adb8a9dd:;
			{
				_1a922b869_strFromBytes(_self_, _167526_m.unsafe_cast_ptr<_1a69a1ba2_StrFromBytes>());
			}
		}
		else {
			_case_begin_1adb88656:;
			{
				_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1adb885e0:;
	};
}



inline jule::Bool _1a922be63_handleFieldByDefault(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7999d53_FieldIns>* _178142_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_178142_f))))._field_Default != nullptr)) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1a92358c8_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_178142_f))))._field_Decl));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1a9222453_possibleRefExpr(_self_, (*(*((*(_178142_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1aa8b4231_ableToInit(&((*((*(_178142_f))))._field_Type))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1a92358c8_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_178142_f))))._field_Decl));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1a922ccdd_initExpr(_self_, (*((*(_178142_f))))._field_Type);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a922c21b_initStructLit(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a799a97a_StructIns>* _180235_s) {
	if (_1a85ec6b9_IsStructBinded((*(_180235_s)))) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a9221881_structureIns(_self_, (*(_180235_s)));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1a9221881_structureIns(_self_, (*(_180235_s)));
	_1aa897c5e_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	jule::Bool _18117_inited = false;;
	{
		auto expr = &((*((*(_180235_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbacb75:;
		if (it != expr_end) {
			jule::Ptr<_1a7999d53_FieldIns> _181215_f = *it;
			{
				if (_18117_inited) {
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_18117_inited=_1a922be63_handleFieldByDefault(_self_, &(_181215_f));
			}
			_iter_next_1adbacb75:;
			++it;
			goto _iter_begin_1adbacb75;
		}
		_iter_end_1adbacb75:;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a922c4c4_fillCollectionByDefault(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7c3255d_Type>* _182445_elem) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a922ccdd_initExpr(_self_, (*(_182445_elem)));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1a922c77c_initCollection(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7c3255d_Type>* _183936_elem) {
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1a922c4c4_fillCollectionByDefault(_self_, _183936_elem);
}



inline void _1a922ca35_initArray(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7c42b89_Arr>* _185331_arr) {
	if (((*((*(_185331_arr))))._field_N == 0LL)) {
		_1aa8aa997_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_185331_arr)));
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1aa8aa997_array((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_185331_arr)));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1a922c77c_initCollection(_self_, &((*((*(_185331_arr))))._field_Elem));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1a922ccdd_initExpr(jule::Ptr<_1a921d20c_exprCoder> _self_, jule::Ptr<_1a7c3255d_Type> _186729_t) {
	if (_1a7c34dbd_NilCompatible(_186729_t.ptr())) {
		if ((_1a7c37497_Map(_186729_t) != nullptr)) {
			_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186729_t);
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_1a7c35b8d_Ptr(_186729_t.ptr()) != nullptr)) {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186729_t);
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1a7c4145c_Tuple> _18827_tup = _1a7c3772d_Tup(_186729_t.ptr());;
	if ((_18827_tup != nullptr)) {
		_1aa8b1b57_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _18827_tup);
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_18827_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adbc4c8b:;
			if (it != expr_end) {
				jule::I32 _18869_i = it - expr->begin();
				jule::Ptr<_1a7c3255d_Type> _188616_tt = *it;
				{
					if ((!(_1aa8b450b_shouldInitialized(&(_188616_tt))))) {
						goto _iter_next_1adbc4c8b;
					};
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1aa897c5e_write((*(_self_))._field_oc, _1a4a03c06_Itoa(_18869_i));
					_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a922ccdd_initExpr(_self_, _188616_tt);
					if ((((*(_18827_tup))._field_Types.len() - _18869_i) > 1LL)) {
						_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1adbc4c8b:;
				++it;
				_18869_i++;
				goto _iter_begin_1adbc4c8b;
			}
			_iter_end_1adbc4c8b:;
		};
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1a7a7d94d_Enum> _19017_enm = _1a7c35e24_Enum(_186729_t);;
	if ((_19017_enm != nullptr)) {
		_1a922bb22_model(_self_, (*((*((*((*_19017_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1a7c3b369_Prim> _19063_prim = _1a7c35671_Prim(_186729_t);;
	if ((_19063_prim != nullptr)) {
		if (_1a7aee9e1_IsNum((*_19063_prim.alloc)._field_Kind)) {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1a7c3e59d_IsBool(_19063_prim)) {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1a7c3e834_IsStr(_19063_prim)) {
			_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1a7c36441_Arr(_186729_t) != nullptr)) {
		jule::Ptr<_1a7c42b89_Arr> _19188_arr = _1a7c36441_Arr(_186729_t);;
		_1a922ca35_initArray(_self_, &(_19188_arr));
		return;;
	};
	jule::Ptr<_1a799a97a_StructIns> _19227_s = _1a7c36be4_Struct(_186729_t);;
	if ((_19227_s != nullptr)) {
		_1a922c21b_initStructLit(_self_, &(_19227_s));
		return;;
	};
	_1aa8ac37d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186729_t);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _1a92308d4_TestCoder_eq(_1a92308d4_TestCoder *_self_, _1a92308d4_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1a92308d4_TestCoder> static__1a9230d8a_New(jule::Ptr<_1aa897544_ObjectCoder>* _2021_oc) {
	return jule::new_ptr<_1a92308d4_TestCoder>(_1a92308d4_TestCoder{._field_t=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_oc=(*(_2021_oc))});;
}



inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a9231121_findTestingPackage(jule::Ptr<_1a92308d4_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbd4273:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _2715_imp = *it;
			{
				if ((*(_2715_imp))._field_LinkPath.equal("std/testing", 11)) {
					return _2715_imp;;
				};
			}
			_iter_next_1adbd4273:;
			++it;
			goto _iter_begin_1adbd4273;
		}
		_iter_end_1adbd4273:;
	};
	return nullptr;;
}



inline void _1a92313c9_appendTest(jule::Ptr<_1a92308d4_TestCoder> _self_, jule::Ptr<_1a7a73b41_FnIns> _3531_f) {
	_1aa898611_indent((*(_self_))._field_oc);
	_1a9231b16_callTmReset(_self_);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_1a922da9c_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_3531_f))._field_Decl))._field_Ident);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_1aa898611_indent((*(_self_))._field_oc);
	static__1a923493d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3531_f));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1a9231682_appendPackageTests(jule::Ptr<_1a92308d4_TestCoder> _self_, jule::Ptr<_1a7b62081_Package>* _5040_p) {
	{
		auto expr = &((*((*(_5040_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbda950:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _5115_file = *it;
			{
				{
					auto expr = &((*(_5115_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adbdb467:;
					if (it != expr_end) {
						jule::Ptr<_1a7a70a83_Fn> _5216_f = *it;
						{
							if (_1a85ed2d0_HasDirective(&((*(_5216_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_1a92313c9_appendTest(_self_, (*_5216_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1adbdb467:;
						++it;
						goto _iter_begin_1adbdb467;
					}
					_iter_end_1adbdb467:;
				};
			}
			_iter_next_1adbda950:;
			++it;
			goto _iter_begin_1adbda950;
		}
		_iter_end_1adbda950:;
	};
}



inline jule::Bool _1a9231918_readyTestingPackage(jule::Ptr<_1a92308d4_TestCoder> _self_) {
	jule::Ptr<_1a7b5e80e_ImportInfo> _617_p = _1a9231121_findTestingPackage(_self_);;
	if ((_617_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_1a7b60a1e_FindStruct(_617_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_1a799b9e2_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1a799b9e2_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1a799b9e2_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1a9231b16_callTmReset(jule::Ptr<_1a92308d4_TestCoder> _self_) {
	static__1a9234652_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a9231d14_callTmFailed(jule::Ptr<_1a92308d4_TestCoder> _self_) {
	static__1a9234652_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a9232012_callTmSkipped(jule::Ptr<_1a92308d4_TestCoder> _self_) {
	static__1a9234652_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a9232210_Serialize(jule::Ptr<_1a92308d4_TestCoder> _self_) {
	_1aa8a4cb0_serializeHead((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	if ((!(_1a9231918_readyTestingPackage(_self_)))) {
		_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
		_1aa898413_doneIndent((*(_self_))._field_oc);
		_1aa8a409a_end((*(_self_))._field_oc);
		return;;
	};
	_1bc0a106b_Builder _1097_tb = static__1bc0a18b8_New(40LL);;
	_1aa8aa634_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1097_tb), (*_self_.alloc)._field_t);
	_1aa8a8577_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _1bc0a337b_Buf(&_1097_tb));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1aa898017_writeBytes((*(_self_))._field_oc, _1bc0a337b_Buf(&_1097_tb));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1aa898215_addIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1a9231d14_callTmFailed(_self_);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1a9232012_callTmSkipped(_self_);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1a9231682_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1aa898413_doneIndent((*(_self_))._field_oc);
	_1aa898611_indent((*(_self_))._field_oc);
	_1aa897c5e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1aa8a409a_end((*(_self_))._field_oc);
}








inline jule::Bool _1a9233530_identCoder_eq(_1a9233530_identCoder *_self_, _1a9233530_identCoder _other_) { return true; }

inline void static__1a9233a6e_writeIdentTo(_1bc0a106b_Builder* _2630_buf, jule::Str* _2654_ident) {
	{
		auto expr = _2654_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc0c81d:;
		if (it != expr_end) {
			jule::U8 *_2710_b = it;
			{
				if (((*(_2710_b)) >= 128LLU)) {
					goto _julec_label_1adc0cba3;
				};
			}
			_iter_next_1adc0c81d:;
			++it;
			goto _iter_begin_1adc0c81d;
		}
		_iter_end_1adc0c81d:;
	};
	({
		auto except = _1bc0a204a_WriteStr(_2630_buf, (*(_2654_ident)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:34:3"));
		(except.result);
	});
	return;;
	_julec_label_1adc0cba3:;
	{
		auto expr = _2654_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _3710_r;
		_iter_begin_1adc0d753:;
		__jule_runeStep(it, end - it, &_3710_r, &len);
		if (it < end) {
			{
				if ((_3710_r < 128LL)) {
					({
						auto except = _1bc0a2303_WriteByte(_2630_buf, static_cast<jule::U8>(_3710_r));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:41:5"));
					});
					goto _iter_next_1adc0d753;
				};
				({
					auto except = _1bc0a204a_WriteStr(_2630_buf, _1a4a0393c_FmtInt(static_cast<jule::I64>(_3710_r), 15LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:45:4"));
					(except.result);
				});
			}
			_iter_next_1adc0d753:;
			it += len;
			goto _iter_begin_1adc0d753;
		}
	};
}



inline void static__1a9233e15_toOut(_1bc0a106b_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr) {
	({
		auto except = _1bc0a2303_WriteByte(_5423_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:55:3"));
	});
	if ((_5458_addr != 0LLU)) {
		({
			auto except = _1bc0a204a_WriteStr(_5423_buf, _1a4a03574_FmtUint(static_cast<jule::U64>(_5458_addr), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:57:4"));
			(except.result);
		});
		({
			auto except = _1bc0a2303_WriteByte(_5423_buf, '_');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:58:4"));
		});
	};
	static__1a9233a6e_writeIdentTo(_5423_buf, &(_5446_ident));
}



inline void static__1a9234366_toLocal(_1bc0a106b_Builder* _6925_buf, jule::I32 _6948_row, jule::I32 _6958_col, jule::Str* _6969_ident) {
	({
		auto except = _1bc0a2303_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:70:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(_6925_buf, _1a4a03c06_Itoa(_6948_row));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:71:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_6925_buf, _1a4a03c06_Itoa(_6958_col));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:72:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:73:3"));
	});
	static__1a9233a6e_writeIdentTo(_6925_buf, _6969_ident);
}



inline void static__1a9234652_func(_1bc0a106b_Builder* _7722_buf, jule::Ptr<_1a7a70a83_Fn>* _7750_f) {
	{
		
		if ((*((*(_7750_f))))._field_Binded) {
			_case_begin_1adc12999:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_7722_buf, (*((*(_7750_f))))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:80:4"));
					(except.result);
				});
				return;;
			}
		}
		else if (_1a7a712c0_IsMethod((*(_7750_f)).ptr())) {
			_case_begin_1adc12a43:;
			{
				if ((*((*(_7750_f))))._field_Statically) {
					({
						auto except = _1bc0a204a_WriteStr(_7722_buf, jule::Str::lit("static_", 7));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:84:5"));
						(except.result);
					});
				};
			}
		}
		_match_end_1adc12878:;
	};
	jule::Ptr<_1a79781c7_Directive> _873_export = _1a85ece17_FindDirective(&((*((*(_7750_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_873_export != nullptr)) {
		({
			auto except = _1bc0a204a_WriteStr(_7722_buf, (*((*_873_export.alloc)._field_Args[0LL]))._field_Kind);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:89:4"));
			(except.result);
		});
		return;;
	};
	static__1a9233e15_toOut(_7722_buf, (*((*(_7750_f))))._field_Ident, static_cast<jule::Uintptr>((*(_7750_f))));
}



inline void static__1a923493d_funcIns(_1bc0a106b_Builder* _9525_buf, jule::Ptr<_1a7a73b41_FnIns>* _9553_f) {
	if (_1a7a75109_IsBuiltin((*(_9553_f)).ptr())) {
		({
			auto except = _1bc0a204a_WriteStr(_9525_buf, jule::Str::lit("jule::", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:99:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:100:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*((*(_9553_f))))._field_Decl))._field_Binded || ((*((*(_9553_f))))._field_Generics.len() == 0LL))) {
		static__1a9234652_func(_9525_buf, &((*((*(_9553_f))))._field_Decl));
		return;;
	};
	static__1a9233e15_toOut(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>((*(_9553_f))));
}



inline void static__1a9234c29_traitDecl(_1bc0a106b_Builder* _11027_buf, jule::Ptr<_1a7a7b297_Trait> _11050_t) {
	static__1a9233e15_toOut(_11027_buf, (*(_11050_t))._field_Ident, static_cast<jule::Uintptr>(_11050_t));
}



inline void static__1a9235015_param(_1bc0a106b_Builder* _11423_buf, jule::Ptr<_1a7a6e0ae_Param>* _11447_p) {
	if ((_1a7966061_IsAnonIdent((*((*(_11447_p))))._field_Ident) || _1a7965c97_IsIgnoreIdent((*((*(_11447_p))))._field_Ident))) {
		return;;
	};
	if (_1a7a6e70d_IsSelf((*(_11447_p)).ptr())) {
		({
			auto except = _1bc0a204a_WriteStr(_11423_buf, jule::Str::lit("_self_", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:119:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*(_11447_p))))._field_Token == nullptr)) {
		static__1a9234366_toLocal(_11423_buf, 0LL, 0LL, &((*((*(_11447_p))))._field_Ident));
		return;;
	};
	static__1a9234366_toLocal(_11423_buf, (*((*((*(_11447_p))))._field_Token))._field_Row, (*(*((*(_11447_p))))._field_Token.alloc)._field_Column, &((*((*(_11447_p))))._field_Ident));
}



inline void static__1a9235301_structure(_1bc0a106b_Builder* _12927_buf, jule::Ptr<_1a7997adc_Struct>* _12951_s) {
	if ((*((*(_12951_s))))._field_Binded) {
		if ((!(_1a85ed2d0_HasDirective(&((*((*(_12951_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			({
				auto except = _1bc0a204a_WriteStr(_12927_buf, jule::Str::lit("struct ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:132:5"));
				(except.result);
			});
		};
		({
			auto except = _1bc0a204a_WriteStr(_12927_buf, (*((*(_12951_s))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:134:4"));
			(except.result);
		});
		return;;
	};
	static__1a9233e15_toOut(_12927_buf, (*((*(_12951_s))))._field_Ident, static_cast<jule::Uintptr>((*(_12951_s))));
}



inline void static__1a92355dc_structureIns(_1bc0a106b_Builder* _14030_buf, jule::Ptr<_1a799a97a_StructIns>* _14054_s) {
	if (((*((*((*(_14054_s))))._field_Decl))._field_Binded || ((*((*(_14054_s))))._field_Generics.len() == 0LL))) {
		static__1a9235301_structure(_14030_buf, &((*((*(_14054_s))))._field_Decl));
		return;;
	};
	static__1a9233e15_toOut(_14030_buf, (*((*((*(_14054_s))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>((*(_14054_s))));
}



inline void static__1a92358c8_field(_1bc0a106b_Builder* _14823_buf, jule::Ptr<_1a7996800_Field>* _14847_f) {
	if ((*((*((*(_14847_f))))._field_Owner))._field_Binded) {
		({
			auto except = _1bc0a204a_WriteStr(_14823_buf, (*((*(_14847_f))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:150:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1bc0a204a_WriteStr(_14823_buf, jule::Str::lit("_field_", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:153:3"));
		(except.result);
	});
	static__1a9233a6e_writeIdentTo(_14823_buf, &((*((*(_14847_f))))._field_Ident));
}



inline void static__1a9235bb4_var(_1bc0a106b_Builder* _15821_buf, jule::Ptr<_1a7ba4eb4_Var> _15848_v) {
	{
		
		if ((*(_15848_v))._field_Binded) {
			_case_begin_1adc22514:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_15821_buf, (*_15848_v.alloc)._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:161:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1adc22cc8:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_15821_buf, jule::Str::lit("except.error", 12));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:163:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1adc22d3e:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_15821_buf, jule::Str::lit("_self_", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:165:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_RetOrder == -1LL)) {
			_case_begin_1adc21e2b:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result", 18));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:169:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_RetOrder >= 0LL)) {
			_case_begin_1adc21e92:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:171:4"));
					(except.result);
				});
				({
					auto except = _1bc0a204a_WriteStr(_15821_buf, _1a4a03c06_Itoa((*_15848_v.alloc)._field_RetOrder));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:172:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_Scope != nullptr)) {
			_case_begin_1adc22008:;
			{
				static__1a9234366_toLocal(_15821_buf, (*((*_15848_v.alloc)._field_Token))._field_Row, (*(*(_15848_v))._field_Token.alloc)._field_Column, &((*_15848_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1adc21db5:;
			{
				jule::Ptr<_1a79781c7_Directive> _1764_export = _1a85ece17_FindDirective(&((*_15848_v.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1764_export != nullptr)) {
					({
						auto except = _1bc0a204a_WriteStr(_15821_buf, (*((*_1764_export.alloc)._field_Args[0LL]))._field_Kind);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:178:5"));
						(except.result);
					});
					return;;
				};
				static__1a9233e15_toOut(_15821_buf, (*_15848_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_15848_v));
			}
		}
		_match_end_1adc21ca5:;
	};
}



inline void static__1a9235ea0_iterBegin(_1bc0a106b_Builder* _18527_buf, jule::Uintptr _18550_it) {
	({
		auto except = _1bc0a204a_WriteStr(_18527_buf, jule::Str::lit("_iter_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:186:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_18527_buf, _1a4a03574_FmtUint(static_cast<jule::U64>(_18550_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:187:3"));
		(except.result);
	});
}



inline void static__1a923628b_iterEnd(_1bc0a106b_Builder* _19025_buf, jule::Uintptr _19048_it) {
	({
		auto except = _1bc0a204a_WriteStr(_19025_buf, jule::Str::lit("_iter_end_", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:191:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_19025_buf, _1a4a03574_FmtUint(static_cast<jule::U64>(_19048_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:192:3"));
		(except.result);
	});
}



inline void static__1a9236577_iterNext(_1bc0a106b_Builder* _19526_buf, jule::Uintptr _19549_it) {
	({
		auto except = _1bc0a204a_WriteStr(_19526_buf, jule::Str::lit("_iter_next_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:196:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_19526_buf, _1a4a03574_FmtUint(static_cast<jule::U64>(_19549_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:197:3"));
		(except.result);
	});
}



inline void static__1a9236863_label(_1bc0a106b_Builder* _20023_buf, jule::Uintptr _20046_u) {
	({
		auto except = _1bc0a204a_WriteStr(_20023_buf, jule::Str::lit("_julec_label_", 13));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:201:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_20023_buf, _1a4a03574_FmtUint(static_cast<jule::U64>(_20046_u), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:202:3"));
		(except.result);
	});
}



inline void static__1a9236b4e_matchEnd(_1bc0a106b_Builder* _20526_buf, jule::Uintptr _20549_m) {
	({
		auto except = _1bc0a204a_WriteStr(_20526_buf, jule::Str::lit("_match_end_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:206:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_20526_buf, _1a4a03574_FmtUint(static_cast<jule::U64>(_20549_m), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:207:3"));
		(except.result);
	});
}



inline void static__1a9236e3a_caseBegin(_1bc0a106b_Builder* _21027_buf, jule::Uintptr _21050_c) {
	({
		auto except = _1bc0a204a_WriteStr(_21027_buf, jule::Str::lit("_case_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:211:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_21027_buf, _1a4a03574_FmtUint(static_cast<jule::U64>(_21050_c), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:212:3"));
		(except.result);
	});
}








inline jule::Bool _1aa894c8e_SerializationInfo_eq(_1aa894c8e_SerializationInfo *_self_, _1aa894c8e_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _1aa8951ac_traitCast_eq(_1aa8951ac_traitCast *_self_, _1aa8951ac_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _1aa895586_anonHash_eq(_1aa895586_anonHash *_self_, _1aa895586_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}










inline jule::Bool _1aa895ca1_metadata_eq(_1aa895ca1_metadata *_self_, _1aa895ca1_metadata _other_) {
	return 
		(_self_->_field_concurrent == _other_._field_concurrent);
}





inline jule::Ptr<_1aa897544_ObjectCoder> static__1aa8979a6_New(jule::Ptr<_1a85e5c78_IR>* _11921_ir, _1aa894c8e_SerializationInfo _11935_info) {
	jule::Ptr<_1aa897544_ObjectCoder> _1207_oc = jule::new_ptr<_1aa897544_ObjectCoder>(_1aa897544_ObjectCoder{._field_Buf=_1bc0a106b_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_1bc0a106b_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_1bc0a106b_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_1bc0a106b_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_1bc0a106b_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_coSpawnObj=_1bc0a106b_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_11921_ir)), ._field_info=_11935_info, ._field_anons=jule::Slice<jule::Ptr<_1aa895586_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1a7c3255d_Type>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__1acc4303b_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1a7c3255d_Type>>(nullptr), ._field_traitCastMap=jule::Slice<_1aa8951ac_traitCast>(nullptr), ._field_coSpawnMap=jule::Slice<jule::Ptr<_1a7a73b41_FnIns>>(nullptr), ._field_traitMap=jule::Slice<jule::Ptr<_1aa8959a4_traitHash>>(nullptr), ._field_traitMetMap=static__1ba9816c8_make(), ._field_ec=jule::Ptr<_1a921d20c_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1a92120ad_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1aa8a717a_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0, ._field_meta=_1aa895ca1_metadata{._field_concurrent=false}});;
	(*(_1207_oc))._field_ec=static__1a921d608_new(&(_1207_oc));
	(*(_1207_oc))._field_sc=static__1a9212795_new(&(_1207_oc));
	(*(_1207_oc))._field_tc=static__1aa8a76ca_new(&(_1207_oc));
	return _1207_oc;;
}



inline void _1aa897c5e_write(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Str _13222_s) {
	({
		auto except = _1bc0a204a_WriteStr(&(*(_self_))._field_Buf, _13222_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:133:3"));
		(except.result);
	});
}



inline void _1aa898017_writeBytes(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Slice<jule::U8> _13627_b) {
	({
		auto except = _1bc0a1c09_Write(&(*(_self_))._field_Buf, _13627_b);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:137:3"));
		(except.result);
	});
}



inline void _1aa898215_addIndent(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1aa898413_doneIndent(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1aa898611_indent(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	({
		auto except = _1bc0a1c09_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:152:3"));
		(except.result);
	});
}



inline jule::I32 _1aa898952_findAnyType(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7c3255d_Type>* _15533_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc35549:;
		if (it != expr_end) {
			jule::I32 _1568_i = it - expr->begin();
			jule::Ptr<_1a7c3255d_Type> _15615_at = *it;
			{
				if (_1a7c32c9a_Equal(_15615_at, (*(_15533_t)))) {
					return _1568_i;;
				};
			}
			_iter_next_1adc35549:;
			++it;
			_1568_i++;
			goto _iter_begin_1adc35549;
		}
		_iter_end_1adc35549:;
	};
	return -1LL;;
}



inline jule::I32 _1aa898c93_pushCoSpawn(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a73b41_FnIns> _16432_f) {
	{
		auto expr = &((*(_self_))._field_coSpawnMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc360d8:;
		if (it != expr_end) {
			jule::I32 _1657_i = it - expr->begin();
			jule::Ptr<_1a7a73b41_FnIns> _16510_sf = *it;
			{
				if (((*(_16510_sf))._field_Params.len() == (*(_16432_f))._field_Params.len())) {
					{
						auto expr = &((*_16510_sf.alloc)._field_Params);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1adc37b78:;
						if (it != expr_end) {
							jule::I32 _1679_j = it - expr->begin();
							jule::Ptr<_1a7a729db_ParamIns> *_16712_sp = it;
							{
								if ((!(_1a7c32c9a_Equal((*((*(_16712_sp))))._field_Type, (*((*(_16510_sf))._field_Params[_1679_j]))._field_Type)))) {
									goto _iter_end_1adc37b78;
								};
							}
							_iter_next_1adc37b78:;
							++it;
							_1679_j++;
							goto _iter_begin_1adc37b78;
						}
						_iter_end_1adc37b78:;
					};
					return _1657_i;;
				};
			}
			_iter_next_1adc360d8:;
			++it;
			_1657_i++;
			goto _iter_begin_1adc360d8;
		}
		_iter_end_1adc360d8:;
	};
	jule::I32 _1753_i = (*_self_.alloc)._field_coSpawnMap.len();;
	jule::Str _1763_is = _1a4a03c06_Itoa(_1753_i);;
	(*_self_.alloc)._field_coSpawnMap=jule::append((*_self_.alloc)._field_coSpawnMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a73b41_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16432_f; __jule_collection; }));
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:178:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:179:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1763_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:180:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("{\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:181:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:184:3"));
	});
	_1aa8ac01a_func((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_coSpawnObj), _16432_f);
	({
		auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:186:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:187:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:188:3"));
	});
	({
		auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:189:3"));
	});
	{
		auto expr = &((*(_16432_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc3d112:;
		if (it != expr_end) {
			jule::I32 _1928_j = it - expr->begin();
			jule::Ptr<_1a7a729db_ParamIns> _19215_p = *it;
			{
				({
					auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:193:4"));
				});
				_1aa8ac37d_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_coSpawnObj), (*(_19215_p))._field_Type);
				({
					auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:195:4"));
				});
				({
					auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:196:4"));
					(except.result);
				});
				({
					auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1a4a03c06_Itoa(_1928_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:197:4"));
					(except.result);
				});
				({
					auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:198:4"));
				});
				({
					auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:199:4"));
				});
			}
			_iter_next_1adc3d112:;
			++it;
			_1928_j++;
			goto _iter_begin_1adc3d112;
		}
		_iter_end_1adc3d112:;
	};
	({
		auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '}');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:201:3"));
	});
	({
		auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:202:3"));
	});
	({
		auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:203:3"));
	});
	{
		
		if ((_1bd43eded_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1adc4314a:;
			{
				({
					auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("unsigned long ", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:207:4"));
					(except.result);
				});
			}
		}
		else if (_1bc0b4810_IsUnix(_1bd43eded_OS)) {
			_case_begin_1adc42d1a:;
			{
				({
					auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("void *", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:209:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1adc39a7b:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:211:4"));;
			}
		}
		_match_end_1adc42ca4:;
	};
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_method", 21));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:213:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1763_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:214:3"));
		(except.result);
	});
	;
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(void *", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:216:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:217:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param) {\n", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:218:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:219:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:220:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1763_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:221:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" *", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:222:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:223:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" = (", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:224:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:225:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1763_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:226:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("*)", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:227:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:228:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param;\n", 8));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:229:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:230:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:231:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:232:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:233:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:234:3"));
		(except.result);
	});
	{
		auto expr = &((*_16432_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc4aac0:;
		if (it != expr_end) {
			jule::I32 _2377_j = it - expr->begin();
			{
				({
					auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:238:4"));
					(except.result);
				});
				({
					auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:239:4"));
					(except.result);
				});
				({
					auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:240:4"));
					(except.result);
				});
				({
					auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1a4a03c06_Itoa(_2377_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:241:4"));
					(except.result);
				});
				if ((((*_16432_f.alloc)._field_Params.len() - _2377_j) > 1LL)) {
					({
						auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:243:5"));
						(except.result);
					});
				};
			}
			_iter_next_1adc4aac0:;
			++it;
			_2377_j++;
			goto _iter_begin_1adc4aac0;
		}
		_iter_end_1adc4aac0:;
	};
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(");\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:246:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:248:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("delete ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:249:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:250:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(";\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:251:3"));
		(except.result);
	});
	{
		
		if ((_1bd43eded_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1adc5018a:;
			{
				({
					auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:254:4"));
				});
				({
					auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return 0;\n", 10));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:255:4"));
					(except.result);
				});
			}
		}
		else if (_1bc0b4810_IsUnix(_1bd43eded_OS)) {
			_case_begin_1adc4ed27:;
			{
				({
					auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:257:4"));
				});
				({
					auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return NULL;\n", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:258:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1adc450b4:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:260:4"));;
			}
		}
		_match_end_1adc4ecb1:;
	};
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("}\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:262:3"));
		(except.result);
	});
	return _1753_i;;
}



inline jule::I32 _1aa8990d4_pushDealloc(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7c3255d_Type> _26732_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc52687:;
		if (it != expr_end) {
			jule::I32 _2687_i = it - expr->begin();
			jule::Ptr<_1a7c3255d_Type> _26810_dt = *it;
			{
				if (_1a7c32c9a_Equal(_26810_dt, _26732_t)) {
					return _2687_i;;
				};
			}
			_iter_next_1adc52687:;
			++it;
			_2687_i++;
			goto _iter_begin_1adc52687;
		}
		_iter_end_1adc52687:;
	};
	jule::I32 _2733_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _26732_t; __jule_collection; }));
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:275:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_deallocObj, _1a4a03c06_Itoa(_2733_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:276:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:277:3"));
		(except.result);
	});
	_1aa8ac37d_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _26732_t);
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:279:3"));
		(except.result);
	});
	return _2733_i;;
}



inline jule::Str _1aa899425_pushAnonFn(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a666c2_AnonFnExpr>* _28332_m) {
	jule::Str __jule_func_result;
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*((*(_28332_m))))._field_Func))._field_CalledCo);
	jule::Bool _2863_closure = _1a85eb861_IsClosure(_28332_m);;
	if (_2863_closure) {
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("struct ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:289:4"));
			(except.result);
		});
		jule::I32 _2904_l = _1bc0a2d5e_Len(&(*_self_.alloc)._field_anonObj);;
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:291:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anonObj, _1a4a03574_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28332_m))))._field_Func)), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:292:4"));
			(except.result);
		});
		__jule_func_result=__jule_bytesToStr(_1bc0a337b_Buf(&(*_self_.alloc)._field_anonObj).slice(_2904_l));
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:294:4"));
			(except.result);
		});
		{
			auto expr = &((*((*(_28332_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adc5a52a:;
			if (it != expr_end) {
				jule::Ptr<_1a7ba4eb4_Var> _29516_v = *it;
				{
					({
						auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:296:5"));
					});
					_1aa8ac37d_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_29516_v))._field_TypeSym))._field_Type);
					({
						auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:298:5"));
					});
					if ((*_29516_v.alloc)._field_Reference) {
						({
							auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:300:6"));
						});
					};
					static__1a9235bb4_var(&((*_self_.alloc)._field_anonObj), _29516_v);
					({
						auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:303:5"));
						(except.result);
					});
				}
				_iter_next_1adc5a52a:;
				++it;
				goto _iter_begin_1adc5a52a;
			}
			_iter_end_1adc5a52a:;
		};
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:305:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:308:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:309:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:310:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:311:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:312:4"));
			(except.result);
		});
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1a4a03574_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28332_m))))._field_Func)), 15LL);
	};
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa895586_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aa895586_anonHash>(_1aa895586_anonHash{._field_expr=(*(_28332_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1aa8a02b6_anonFuncInsDecl(_self_, _28332_m, __jule_func_result);
	({
		auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:321:3"));
	});
	return __jule_func_result;;
}



inline jule::I32 _1aa899766_pushAnyType(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7c3255d_Type> _32532_t) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result=_1aa898952_findAnyType(_self_, &(_32532_t));
	if ((__jule_func_result != -1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32532_t; __jule_collection; }));
	jule::Str _3323_si = _1a4a03c06_Itoa(__jule_func_result);;
	if ((_1a7c35907_Sptr(_32532_t.ptr()) != nullptr)) {
		_1bc0a106b_Builder _3348_elemKind = static__1bc0a18b8_New(40LL);;
		_1aa8ac37d_kind((*_self_.alloc)._field_tc.ptr(), &(_3348_elemKind), (*(_1a7c35907_Sptr(_32532_t)))._field_Elem);
		jule::I32 _3384_di = _1aa8990d4_pushDealloc(_self_, (*(_1a7c35907_Sptr(_32532_t)))._field_Elem);;
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:341:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:342:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:343:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:344:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _1a4a03c06_Itoa(_3384_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:345:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:346:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:349:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:350:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:351:4"));
			(except.result);
		});
		_1aa8a8577_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _1bc0a337b_Buf(&_3348_elemKind));
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:353:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:354:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:355:4"));
			(except.result);
		});
	} else {
		_1bc0a106b_Builder _3578_kindB = static__1bc0a18b8_New(40LL);;
		_1aa8ac37d_kind((*_self_.alloc)._field_tc.ptr(), &(_3578_kindB), _32532_t);
		jule::Str _3594_kind = _1bc0a28ca_Str(&_3578_kindB);;
		jule::I32 _3624_di = _1aa8990d4_pushDealloc(_self_, _32532_t);;
		jule::Str _3678_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
		_3678_lmodel+=_3594_kind;
		_3678_lmodel+=jule::Str::lit("*>(", 3);
		jule::Str _3708_rmodel = _3678_lmodel;;
		_3708_rmodel+=jule::Str::lit("other)", 6);
		_3678_lmodel+=jule::Str::lit("alloc)", 6);
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:374:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:375:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { ", 41));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:376:4"));
			(except.result);
		});
		if (_1a7c3461a_Comparable(_32532_t.ptr())) {
			({
				auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("return ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:378:5"));
				(except.result);
			});
			_1a92205d8__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_3678_lmodel), &(_3708_rmodel), &(_32532_t), &(_32532_t), static_cast<jule::U32>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			({
				auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:380:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_panic((", 14));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:382:5"));
				(except.result);
			});
			({
				auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::U8", 8));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:383:5"));
				(except.result);
			});
			({
				auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*)\"runtime: comparing uncomparable type \" \"", 43));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:384:5"));
				(except.result);
			});
			jule::I32 _3859_n = _1bc0a2d5e_Len(&(*_self_.alloc)._field_anyObj);;
			_1a922d76c_cstrBytes(&((*_self_.alloc)._field_anyObj), _1a7c32959_Str(_32532_t.ptr()));
			_3859_n=(_1bc0a2d5e_Len(&(*_self_.alloc)._field_anyObj) - _3859_n);
			_3859_n+=37LL;
			({
				auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("\", ", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:389:5"));
				(except.result);
			});
			({
				auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _1a4a03c06_Itoa(_3859_n));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:390:5"));
				(except.result);
			});
			({
				auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("); return false; }\n", 19));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:391:5"));
				(except.result);
			});
		};
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:395:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:396:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:397:4"));
			(except.result);
		});
		jule::Ptr<_1a7a73b41_FnIns> _3988_f = _1a85ee512_FindFnGenericInstance(&((*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32532_t; __jule_collection; }));;
		static__1a923493d_funcIns(&((*_self_.alloc)._field_anyObj), &(_3988_f));
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:400:4"));
			(except.result);
		});
		if ((_1a7c35b8d_Ptr(_32532_t.ptr()) == nullptr)) {
			({
				auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:402:5"));
				(except.result);
			});
			({
				auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _3594_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:403:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _3594_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:405:5"));
				(except.result);
			});
			({
				auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:406:5"));
				(except.result);
			});
		};
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:408:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:411:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:412:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:413:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:414:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _1a4a03c06_Itoa(_3624_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:415:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_any_type", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:416:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:417:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, .to_str=__jule_any_type", 28));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:418:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:419:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:420:4"));
			(except.result);
		});
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1aa899a1e_pushResultIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a73b41_FnIns>* _42535_f) {
	jule::Str _4263_s = __jule_bytesToStr(_1aa8b263b_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_42535_f))))._field_Result)));;
	jule::Bool _4276_ok;
	_1acc43701_lookup((*_self_.alloc)._field_resultMap, _4263_s, nullptr, &(_4276_ok));
	if (_4276_ok) {
		return;;
	};
	(*_1acc439a9_set(((*_self_.alloc)._field_resultMap).ptr(), _4263_s))=false;
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:432:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_resultDecls, _4263_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:433:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:434:3"));
		(except.result);
	});
	{
		auto expr = &((*(_1a7c3772d_Tup((*((*(_42535_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc7e6e7:;
		if (it != expr_end) {
			jule::I32 _4358_i = it - expr->begin();
			jule::Ptr<_1a7c3255d_Type> _43515_t = *it;
			{
				({
					auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:436:4"));
				});
				_1aa8ac37d_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _43515_t);
				({
					auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:438:4"));
				});
				({
					auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:439:4"));
					(except.result);
				});
				({
					auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_resultDecls, _1a4a03c06_Itoa(_4358_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:440:4"));
					(except.result);
				});
				({
					auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:441:4"));
					(except.result);
				});
			}
			_iter_next_1adc7e6e7:;
			++it;
			_4358_i++;
			goto _iter_begin_1adc7e6e7;
		}
		_iter_end_1adc7e6e7:;
	};
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:443:3"));
		(except.result);
	});
}



inline void _1aa899cc7_pushResult(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a70a83_Fn>* _44632_f) {
	if ((_1a7a71039_IsVoid((*(_44632_f)).ptr()) || ((*((*((*(_44632_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _4507_n = (*((*(_44632_f))))._field_Instances.len();;
	if (((*((*(_44632_f))))._field_Generics.len() == 0LL)) {
		_4507_n=1LL;
	};
	{
		auto expr = (*((*(_44632_f))))._field_Instances.slice(0LL, _4507_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1adc84741:;
		if (it != expr_end) {
			jule::Ptr<_1a7a73b41_FnIns> _45415_ins = *it;
			{
				_1aa899a1e_pushResultIns(_self_, &(_45415_ins));
			}
			_iter_next_1adc84741:;
			++it;
			goto _iter_begin_1adc84741;
		}
		_iter_end_1adc84741:;
	};
}



inline void _1aa89a13a_pushAndWriteMaskMapper(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a7b297_Trait> _45943_t1, jule::Ptr<_1a7a7b297_Trait> _45965_t2) {
	_1bc0a106b_Builder _4607_ident = static__1bc0a18b8_New(32LL);;
	({
		auto except = _1bc0a204a_WriteStr(&_4607_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:461:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&_4607_ident, _1a4a03574_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_45965_t2)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:462:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&_4607_ident, jule::Str::lit("_to_", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:463:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&_4607_ident, _1a4a03574_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_45943_t1)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:464:3"));
		(except.result);
	});
	({
		auto except = _1bc0a1c09_Write(&(*(_self_))._field_Buf, _1bc0a337b_Buf(&_4607_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:465:3"));
		(except.result);
	});
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc87524:;
		if (it != expr_end) {
			_1aa8951ac_traitCast _46810_m = *it;
			{
				if (((_46810_m._field_t1 == _45943_t1) && (_46810_m._field_t2 == _45965_t2))) {
					return;;
				};
			}
			_iter_next_1adc87524:;
			++it;
			goto _iter_begin_1adc87524;
		}
		_iter_end_1adc87524:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1aa8951ac_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa8951ac_traitCast{._field_t1=_45943_t1, ._field_t2=_45965_t2}; __jule_collection; }));
	;
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:478:3"));
		(except.result);
	});
	({
		auto except = _1bc0a1c09_Write(&(*_self_.alloc)._field_anyObj, _1bc0a337b_Buf(&_4607_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:479:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:480:3"));
		(except.result);
	});
	_1bc0a106b_Builder _4827_t1Ident = static__1bc0a18b8_New(16LL);;
	_1bc0a106b_Builder _4837_t2Ident = static__1bc0a18b8_New(16LL);;
	static__1a9234c29_traitDecl(&(_4827_t1Ident), _45943_t1);
	static__1a9234c29_traitDecl(&(_4837_t2Ident), _45965_t2);
	{
		auto expr = &((*(_45943_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc87c2d:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> _48715_s1 = *it;
			{
				{
					auto expr = &((*(_45965_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adc8bb44:;
					if (it != expr_end) {
						jule::Ptr<_1a7997adc_Struct> _48811_s2 = *it;
						{
							if ((_48715_s1 == _48811_s2)) {
								{
									auto expr = &((*(_48715_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1adc8cabd:;
									if (it != expr_end) {
										jule::Ptr<_1a799a97a_StructIns> _49018_s1i = *it;
										{
											jule::I32 _4917_i1 = _1a85edd19_FindTraitTypeOffsetS(_45943_t1, _49018_s1i);;
											jule::I32 _4927_i2 = _1a85edd19_FindTraitTypeOffsetS(_45965_t2, _49018_s1i);;
											({
												auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:493:7"));
												(except.result);
											});
											({
												auto except = _1bc0a1c09_Write(&(*_self_.alloc)._field_anyObj, _1bc0a337b_Buf(&_4837_t2Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:494:7"));
												(except.result);
											});
											({
												auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:495:7"));
												(except.result);
											});
											({
												auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _1a4a03c06_Itoa(_4927_i2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:496:7"));
												(except.result);
											});
											({
												auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:497:7"));
												(except.result);
											});
											({
												auto except = _1bc0a1c09_Write(&(*_self_.alloc)._field_anyObj, _1bc0a337b_Buf(&_4827_t1Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:498:7"));
												(except.result);
											});
											({
												auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:499:7"));
												(except.result);
											});
											({
												auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, _1a4a03c06_Itoa(_4917_i1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:500:7"));
												(except.result);
											});
											({
												auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:501:7"));
												(except.result);
											});
										}
										_iter_next_1adc8cabd:;
										++it;
										goto _iter_begin_1adc8cabd;
									}
									_iter_end_1adc8cabd:;
								};
							};
						}
						_iter_next_1adc8bb44:;
						++it;
						goto _iter_begin_1adc8bb44;
					}
					_iter_end_1adc8bb44:;
				};
			}
			_iter_next_1adc87c2d:;
			++it;
			goto _iter_begin_1adc87c2d;
		}
		_iter_end_1adc87c2d:;
	};
	({
		auto except = _1bc0a204a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:506:3"));
		(except.result);
	});
}



inline void _1aa89a3e3_locInfo(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a79633b0_Token>* _51025_t) {
	jule::Str *_5114_loc = &((*((*((*(_51025_t))))._field_File))._field_Path);;
	if (_1bd44650e_Production) {
		{
			
			if (_1bd42a647_HasPrefix((*(_5114_loc)), _1bd43e35e_PathStdlib)) {
				_case_begin_1adc931bc:;
				{
					_1a922d76c_cstrBytes(&((*(_self_))._field_Buf), (*(_5114_loc)).slice((_1bd4374ab_Dir(_1bd43e35e_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1bd42a647_HasPrefix((*(_5114_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1adc92d6a:;
				{
					_1a922d76c_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5114_loc)).slice((_1bd4374ab_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1adc92d04:;
				{
					_1a922d76c_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5114_loc)));
				}
			}
			_match_end_1adc92c27:;
		};
	} else {
		_1a922d76c_cstrBytes(&((*(_self_))._field_Buf), (*(_5114_loc)));
	};
	_1aa897c5e_write(_self_, jule::Str::lit(":", 1));
	_1aa897c5e_write(_self_, _1a4a03c06_Itoa((*((*(_51025_t))))._field_Row));
	_1aa897c5e_write(_self_, jule::Str::lit(":", 1));
	_1aa897c5e_write(_self_, _1a4a03c06_Itoa((*((*(_51025_t))))._field_Column));
}



inline void _1aa89a5e1_head(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	_1aa889ee8_Time _5373_time = static__1aa88a5e2_Now();;
	_1aa889822_AbsTime _5383_abs = _1aa88bcca_Abs(&_5373_time);;
	_1aa897c5e_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1aa897c5e_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1aa897c5e_write(_self_, jule::Str::lit("jule0.1.1 @master", 17));
	_1aa897c5e_write(_self_, jule::Str::lit("\n", 1));
	_1aa897c5e_write(_self_, jule::Str::lit("// Date: ", 9));
	_1aa897c5e_write(_self_, _1a4a03574_FmtUint(_5383_abs._field_Day, 10LL));
	_1aa897c5e_write(_self_, jule::Str::lit("/", 1));
	_1aa897c5e_write(_self_, _1a4a03574_FmtUint(_5383_abs._field_Month, 10LL));
	_1aa897c5e_write(_self_, jule::Str::lit("/", 1));
	_1aa897c5e_write(_self_, _1a4a03574_FmtUint(_5383_abs._field_Year, 10LL));
	_1aa897c5e_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1aa897c5e_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1aa897c5e_write(_self_, jule::Str::lit(" ", 1));
	_1aa897c5e_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1aa897c5e_write(_self_, jule::Str::lit("\n\n", 2));
	if (_1bd44650e_Production) {
		_1aa897c5e_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1bd445e04_RC))) {
		_1aa897c5e_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1bd4462bc_Safety))) {
		_1aa897c5e_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1aa89a899_links(_self_, true);
	_1aa897c5e_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1aa897c5e_write(_self_, _1bd43eb45_PathApi);
	_1aa897c5e_write(_self_, jule::Str::lit("\"\n\n", 3));
	_1aa89a899_links(_self_, false);
}



inline void _1aa89a899_links(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Bool _57722_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adca03d8:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _57810_used = *it;
			{
				{
					
					if ((!((*(_57810_used))._field_Binded))) {
						_case_begin_1bad8b550:;
						{
							goto _iter_next_1adca03d8;
						}
					}
					else if (_1bc065382_IsStdHeaderPath((*(_57810_used))._field_Path)) {
						_case_begin_1bad8b5d8:;
						{
							if ((!(_57722_std))) {
								goto _iter_next_1adca03d8;
							};
							_1aa897c5e_write(_self_, jule::Str::lit("#include ", 9));
							_1aa897c5e_write(_self_, (*_57810_used.alloc)._field_Path);
							_1aa897c5e_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1bc06565c_IsValidHeaderExt(_1bd436a4e_Ext((*_57810_used.alloc)._field_Path))) {
						_case_begin_1bad8b64e:;
						{
							if (_57722_std) {
								goto _iter_next_1adca03d8;
							};
							_1aa897c5e_write(_self_, jule::Str::lit("#include \"", 10));
							_1aa897c5e_write(_self_, (*_57810_used.alloc)._field_Path);
							_1aa897c5e_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1adca1153:;
				};
			}
			_iter_next_1adca03d8:;
			++it;
			goto _iter_begin_1adca03d8;
		}
		_iter_end_1adca03d8:;
	};
}



inline void _1aa89ab52_prepareStructure(_1aa897544_ObjectCoder* _self_, jule::Ptr<_1a7997adc_Struct>* _60037_s) {
	{
		auto expr = &((*((*(_60037_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adca0350:;
		if (it != expr_end) {
			jule::Ptr<_1a799a97a_StructIns> _60115_ins = *it;
			{
				{
					auto expr = &((*(_60115_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bad902bd:;
					if (it != expr_end) {
						jule::Ptr<_1a7a70a83_Fn> _60216_m = *it;
						{
							if ((*(_60216_m))._field_Statically) {
								goto _iter_next_1bad902bd;
							};
							{
								auto expr = &((*(_60216_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bad90e17:;
								if (it != expr_end) {
									jule::Ptr<_1a7a73b41_FnIns> _60617_mins = *it;
									{
										jule::Ptr<_1a7a729db_ParamIns> _60710_p = (*(_60617_mins))._field_Params[0LL];;
										_1bc0a106b_Builder _60810_kind = static__1bc0a18b8_New(40LL);;
										_1aa8ac37d_kind((*(_self_))._field_tc.ptr(), &(_60810_kind), (*(_60710_p))._field_Type);
										if ((!(_1a7a6e994_IsRef((*_60710_p.alloc)._field_Decl.ptr())))) {
											({
												auto except = _1bc0a204a_WriteStr(&_60810_kind, jule::Str::lit("*", 1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:611:7"));
												(except.result);
											});
										};
										(*_60710_p.alloc)._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa8a6564_customType>(_1aa8a6564_customType{._field_kind=_1bc0a28ca_Str(&_60810_kind)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data29)});
									}
									_iter_next_1bad90e17:;
									++it;
									goto _iter_begin_1bad90e17;
								}
								_iter_end_1bad90e17:;
							};
						}
						_iter_next_1bad902bd:;
						++it;
						goto _iter_begin_1bad902bd;
					}
					_iter_end_1bad902bd:;
				};
			}
			_iter_next_1adca0350:;
			++it;
			goto _iter_begin_1adca0350;
		}
		_iter_end_1adca0350:;
	};
}



inline void _1aa89ad50_prepareStructures(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad8ed6c:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> _62415_s = *it;
			{
				if (((*(_62415_s))._field_Token != nullptr)) {
					_1aa89ab52_prepareStructure(_self_.ptr(), &(_62415_s));
				};
			}
			_iter_next_1bad8ed6c:;
			++it;
			goto _iter_begin_1bad8ed6c;
		}
		_iter_end_1bad8ed6c:;
	};
}



inline void _1aa89b108_structurePlainDecl(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7997adc_Struct>* _63140_s) {
	{
		auto expr = &((*((*(_63140_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad955e2:;
		if (it != expr_end) {
			jule::Ptr<_1a799a97a_StructIns> _63215_ins = *it;
			{
				_1aa897c5e_write(_self_, jule::Str::lit("struct ", 7));
				static__1a92355dc_structureIns(&((*_self_.alloc)._field_Buf), &(_63215_ins));
				_1aa897c5e_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bad955e2:;
			++it;
			goto _iter_begin_1bad955e2;
		}
		_iter_end_1bad955e2:;
	};
}



inline void _1aa89b306_structurePlainDecls(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad96aaa:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> _64015_s = *it;
			{
				if (((*(_64015_s))._field_Token != nullptr)) {
					_1aa89b108_structurePlainDecl(_self_, &(_64015_s));
				};
			}
			_iter_next_1bad96aaa:;
			++it;
			goto _iter_begin_1bad96aaa;
		}
		_iter_end_1bad96aaa:;
	};
}



inline void _1aa89b5ae_fieldDecl(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7999d53_FieldIns>* _64731_f) {
	_1aa8ac37d_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_64731_f))))._field_Type);
	_1aa897c5e_write(_self_, jule::Str::lit(" ", 1));
	static__1a92358c8_field(&((*_self_.alloc)._field_Buf), &((*((*(_64731_f))))._field_Decl));
	_1aa897c5e_write(_self_, jule::Str::lit(";", 1));
}



inline void _1aa89b9cc_structureOperatorEq(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Str _65436_ident, jule::Ptr<_1a799a97a_StructIns>* _65453_s, jule::Bool _65474_decl) {
	if ((!((*((*(_65453_s))))._field_Comparable))) {
		return;;
	};
	_1aa897c5e_write(_self_, jule::Str::lit("\n", 1));
	if (_1a9128513_Inline) {
		_1aa897c5e_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1aa897c5e_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1aa897c5e_write(_self_, _65436_ident);
	_1aa897c5e_write(_self_, jule::Str::lit("_eq", 3));
	_1aa897c5e_write(_self_, jule::Str::lit("(", 1));
	_1aa897c5e_write(_self_, _65436_ident);
	_1aa897c5e_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1aa897c5e_write(_self_, _65436_ident);
	_1aa897c5e_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_65474_decl) {
		_1aa897c5e_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1aa897c5e_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_65453_s))))._field_Fields.len() == 0LL)) {
		_1aa897c5e_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1aa898215_addIndent(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit("\n", 1));
	_1aa898611_indent(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit("return ", 7));
	_1aa898215_addIndent(_self_);
	jule::Bool _6857_writed = false;;
	jule::Str _6887_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _6897_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_65453_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bada2643:;
		if (it != expr_end) {
			jule::Ptr<_1a7999d53_FieldIns> _69115_f = *it;
			{
				jule::Ptr<_1a799a97a_StructIns> _6934_strct = _1a7c36be4_Struct((*(_69115_f))._field_Type.ptr());;
				if ((((_6934_strct != nullptr) && ((*_6934_strct.alloc)._field_Decl != nullptr)) && (*(*(_6934_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1bada2643;
				};
				if (_6857_writed) {
					_1aa897c5e_write(_self_, jule::Str::lit(" &&", 3));
				};
				_6857_writed=true;
				_1aa897c5e_write(_self_, jule::Str::lit("\n", 1));
				_1aa898611_indent(_self_);
				_1bc0a106b_Builder _7048_fIdent = static__1bc0a18b8_New((*((*_69115_f.alloc)._field_Decl))._field_Ident.len());;
				static__1a92358c8_field(&(_7048_fIdent), &((*_69115_f.alloc)._field_Decl));
				_6887_lmodel+=jule::Str::unsafe_from_bytes(_1bc0a337b_Buf(&_7048_fIdent));
				_6897_rmodel+=jule::Str::unsafe_from_bytes(_1bc0a337b_Buf(&_7048_fIdent));
				_1a92205d8__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_6887_lmodel), &(_6897_rmodel), &((*_69115_f.alloc)._field_Type), &((*_69115_f.alloc)._field_Type), static_cast<jule::U32>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_6887_lmodel).mut_slice(0LL, (_6887_lmodel.len() - _1bc0a2d5e_Len(&_7048_fIdent)));;
				_6897_rmodel=_6887_lmodel.slice(0LL, (_6897_rmodel.len() - _1bc0a2d5e_Len(&_7048_fIdent)));
			}
			_iter_next_1bada2643:;
			++it;
			goto _iter_begin_1bada2643;
		}
		_iter_end_1bada2643:;
	};
	_1aa898413_doneIndent(_self_);
	if ((!(_6857_writed))) {
		_1aa897c5e_write(_self_, jule::Str::lit("true", 4));
	};
	_1aa897c5e_write(_self_, jule::Str::lit(";\n", 2));
	_1aa898413_doneIndent(_self_);
	_1aa898611_indent(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1aa89bd40_structureOperators(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a799a97a_StructIns>* _72240_s, jule::Bool _72261_decl) {
	_1bc0a106b_Builder _7237_sb = static__1bc0a18b8_New(40LL);;
	static__1a92355dc_structureIns(&(_7237_sb), _72240_s);
	jule::Str _7253_ident = _1bc0a28ca_Str(&_7237_sb);;
	_1aa89b9cc_structureOperatorEq(_self_, _7253_ident, _72240_s, _72261_decl);
}



inline void _1aa89c0e8_structureInsDecl(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a799a97a_StructIns>* _73138_s) {
	_1aa897c5e_write(_self_, jule::Str::lit("struct ", 7));
	static__1a92355dc_structureIns(&((*_self_.alloc)._field_Buf), _73138_s);
	_1aa897c5e_write(_self_, jule::Str::lit(" {\n", 3));
	_1aa898215_addIndent(_self_);
	{
		auto expr = &((*((*(_73138_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badac8e5:;
		if (it != expr_end) {
			jule::Ptr<_1a7999d53_FieldIns> _73715_f = *it;
			{
				_1aa898611_indent(_self_);
				_1aa89b5ae_fieldDecl(_self_, &(_73715_f));
				_1aa897c5e_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1badac8e5:;
			++it;
			goto _iter_begin_1badac8e5;
		}
		_iter_end_1badac8e5:;
	};
	_1aa898413_doneIndent(_self_);
	_1aa898611_indent(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit("};", 2));
	;
	_1aa89bd40_structureOperators(_self_, _73138_s, true);
}



inline void _1aa89c3a1_structureDecl(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7997adc_Struct>* _75135_s) {
	{
		auto expr = &((*((*(_75135_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badb03cb:;
		if (it != expr_end) {
			jule::Ptr<_1a799a97a_StructIns> _75215_ins = *it;
			{
				_1aa89c0e8_structureInsDecl(_self_, &(_75215_ins));
			}
			_iter_next_1badb03cb:;
			++it;
			goto _iter_begin_1badb03cb;
		}
		_iter_end_1badb03cb:;
	};
}



inline void _1aa89c59e_structureDecls(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badb0b29:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> _75815_s = *it;
			{
				if (((*(_75815_s))._field_Token != nullptr)) {
					_1aa89c3a1_structureDecl(_self_, &(_75815_s));
					_1aa897c5e_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1badb0b29:;
			++it;
			goto _iter_begin_1badb0b29;
		}
		_iter_end_1badb0b29:;
	};
}



inline void _1aa89c857_structureMethodDecls1(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7997adc_Struct>* _76643_s) {
	{
		auto expr = &((*((*(_76643_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badb1cc3:;
		if (it != expr_end) {
			jule::Ptr<_1a799a97a_StructIns> _76715_ins = *it;
			{
				{
					auto expr = &((*(_76715_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1badb3742:;
					if (it != expr_end) {
						jule::Ptr<_1a7a70a83_Fn> _76816_m = *it;
						{
							_1aa899cc7_pushResult(_self_, &(_76816_m));
							_1aa89d704_funcDecl(_self_, &(_76816_m), false);
						}
						_iter_next_1badb3742:;
						++it;
						goto _iter_begin_1badb3742;
					}
					_iter_end_1badb3742:;
				};
			}
			_iter_next_1badb1cc3:;
			++it;
			goto _iter_begin_1badb1cc3;
		}
		_iter_end_1badb1cc3:;
	};
}



inline void _1aa89ca55_structureMethodDecls(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badb49a7:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> _77615_s = *it;
			{
				if (((*(_77615_s))._field_Token != nullptr)) {
					_1aa89c857_structureMethodDecls1(_self_, &(_77615_s));
				};
			}
			_iter_next_1badb49a7:;
			++it;
			goto _iter_begin_1badb49a7;
		}
		_iter_end_1badb49a7:;
	};
}



inline void _1aa89d02d_funcHead(jule::Ptr<_1aa897544_ObjectCoder> _self_, _1bc0a106b_Builder* _78630_buf, jule::Ptr<_1a7a73b41_FnIns>* _78658_f, jule::Bool _78675_ptr, jule::Str _78686_ident) {
	if ((((!(_78675_ptr)) && _1a9128513_Inline) && (!(_1a7a71556_IsEntryPoint((*((*(_78658_f))))._field_Decl.ptr()))))) {
		({
			auto except = _1bc0a204a_WriteStr(_78630_buf, jule::Str::lit("inline ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:788:4"));
			(except.result);
		});
	};
	_1aa8ab844_funcInsResult((*(_self_))._field_tc.ptr(), _78630_buf, _78658_f);
	if (_78675_ptr) {
		({
			auto except = _1bc0a204a_WriteStr(_78630_buf, jule::Str::lit("(*", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:792:4"));
			(except.result);
		});
		static__1a923493d_funcIns(_78630_buf, _78658_f);
		({
			auto except = _1bc0a2303_WriteByte(_78630_buf, ')');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:794:4"));
		});
	} else {
		({
			auto except = _1bc0a2303_WriteByte(_78630_buf, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:796:4"));
		});
		if ((_78686_ident).empty()) {
			static__1a923493d_funcIns(_78630_buf, _78658_f);
		} else {
			({
				auto except = _1bc0a204a_WriteStr(_78630_buf, _78686_ident);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:800:5"));
				(except.result);
			});
		};
	};
}



inline void _1aa89d391_funcDeclIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a73b41_FnIns>* _80533_f, jule::Bool _80550_ptr) {
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*(_80533_f))))._field_CalledCo);
	_1aa898611_indent(_self_);
	_1aa89d02d_funcHead(_self_, &((*_self_.alloc)._field_Buf), _80533_f, _80550_ptr, jule::Str());
	_1aa89e837_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _80533_f);
	_1aa897c5e_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1aa89d704_funcDecl(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a70a83_Fn>* _81330_f, jule::Bool _81344_ptr) {
	{
		auto expr = &((*((*(_81330_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badbb6d4:;
		if (it != expr_end) {
			jule::Ptr<_1a7a73b41_FnIns> _81415_c = *it;
			{
				_1aa89d391_funcDeclIns(_self_, &(_81415_c), _81344_ptr);
			}
			_iter_next_1badbb6d4:;
			++it;
			goto _iter_begin_1badbb6d4;
		}
		_iter_end_1badbb6d4:;
	};
}



inline void _1aa89d9ac_funcDeclTrait(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a70a83_Fn>* _81935_f) {
	{
		auto expr = &((*((*(_81935_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badbc075:;
		if (it != expr_end) {
			jule::Ptr<_1a7a73b41_FnIns> _82015_c = *it;
			{
				jule::Ptr<_1a7c3255d_Type> _8218_k = (*((*(_82015_c))._field_Params[0LL]))._field_Type;;
				(*((*(_82015_c))._field_Params[0LL]))._field_Type=_1aa8949b4_generalGCPtr;
				_1aa89d391_funcDeclIns(_self_, &(_82015_c), true);
				(*((*(_82015_c))._field_Params[0LL]))._field_Type=_8218_k;
			}
			_iter_next_1badbc075:;
			++it;
			goto _iter_begin_1badbc075;
		}
		_iter_end_1badbc075:;
	};
}



inline void _1aa89dbaa_funcDecls(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	_1a85e86c6_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a7b62081_Package>*>((void*)__jule_anon_1badc0287, jule::Ptr<__jule_anon_1badc0287_ctx>::make(__jule_anon_1badc0287_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1badc0287_ctx_handler));
}



inline void _1aa89de63_traitDataTypeMethods(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1aa8959a4_traitHash>* _84142_hash) {
	{
		auto expr = &((*((*(_84142_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badc0b7d:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _84215_m = *it;
			{
				jule::Ptr<_1a7a73b41_FnIns> _8438_ins = (*(_84215_m))._field_Instances[0LL];;
				{
					auto expr = (*(_8438_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1badc4599:;
					if (it != expr_end) {
						jule::I32 _8449_i = it - expr.begin();
						jule::Ptr<_1a7a729db_ParamIns> _84416_ip = *it;
						{
							if (_1a7966061_IsAnonIdent((*((*(_84416_ip))._field_Decl))._field_Ident)) {
								(*(*(_84416_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1a4a03c06_Itoa(_8449_i));
							};
						}
						_iter_next_1badc4599:;
						++it;
						_8449_i++;
						goto _iter_begin_1badc4599;
					}
					_iter_end_1badc4599:;
				};
				_1aa899cc7_pushResult(_self_, &(_84215_m));
				_1aa89d9ac_funcDeclTrait(_self_, &(_84215_m));
			}
			_iter_next_1badc0b7d:;
			++it;
			goto _iter_begin_1badc0b7d;
		}
		_iter_end_1badc0b7d:;
	};
}



inline void _1aa89e161_traitDataTypes(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badc2333:;
		if (it != expr_end) {
			jule::Ptr<_1aa8959a4_traitHash> _85515_hash = *it;
			{
				_1aa897c5e_write(_self_, jule::Str::lit("struct ", 7));
				static__1a9234c29_traitDecl(&((*_self_.alloc)._field_Buf), (*(_85515_hash))._field_traitDecl);
				_1aa897c5e_write(_self_, jule::Str::lit("MptrData {\n", 11));
				_1aa898215_addIndent(_self_);
				_1aa898611_indent(_self_);
				_1aa897c5e_write(_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1aa89de63_traitDataTypeMethods(_self_, &(_85515_hash));
				_1aa898413_doneIndent(_self_);
				_1aa898611_indent(_self_);
				_1aa897c5e_write(_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1badc2333:;
			++it;
			goto _iter_begin_1badc2333;
		}
		_iter_end_1badc2333:;
	};
}



inline void _1aa89e4c4_paramIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, _1bc0a106b_Builder* _86930_buf, jule::Ptr<_1a7a729db_ParamIns>* _86958_p) {
	_1aa8ab16d_paramIns((*(_self_))._field_tc.ptr(), _86930_buf, _86958_p);
	({
		auto except = _1bc0a2303_WriteByte(_86930_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:871:3"));
	});
	static__1a9235015_param(_86930_buf, &((*((*(_86958_p))))._field_Decl));
}



inline void _1aa89e837_paramsIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, _1bc0a106b_Builder* _87531_buf, jule::Ptr<_1a7a73b41_FnIns>* _87559_f) {
	if (((!((*((*(_87559_f))))._field_AsAnon)) && ((*((*(_87559_f))))._field_Params.len() == 0LL))) {
		({
			auto except = _1bc0a204a_WriteStr(_87531_buf, jule::Str::lit("(void)", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:877:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1bc0a2303_WriteByte(_87531_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:880:3"));
	});
	if ((*((*(_87559_f))))._field_AsAnon) {
		({
			auto except = _1bc0a204a_WriteStr(_87531_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:882:4"));
			(except.result);
		});
		if (((*((*(_87559_f))))._field_Params.len() > 0LL)) {
			({
				auto except = _1bc0a204a_WriteStr(_87531_buf, jule::Str::lit(", ", 2));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:884:5"));
				(except.result);
			});
		};
	};
	{
		auto expr = &((*((*(_87559_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badccbe0:;
		if (it != expr_end) {
			jule::I32 _8878_i = it - expr->begin();
			jule::Ptr<_1a7a729db_ParamIns> _88715_p = *it;
			{
				_1aa89e4c4_paramIns(_self_, _87531_buf, &(_88715_p));
				if ((((*((*(_87559_f))))._field_Params.len() - _8878_i) > 1LL)) {
					({
						auto except = _1bc0a204a_WriteStr(_87531_buf, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:890:5"));
						(except.result);
					});
				};
			}
			_iter_next_1badccbe0:;
			++it;
			_8878_i++;
			goto _iter_begin_1badccbe0;
		}
		_iter_end_1badccbe0:;
	};
	({
		auto except = _1bc0a2303_WriteByte(_87531_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:893:3"));
	});
}



inline void _1aa89eb9a_varInitExpr(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7ba4eb4_Var>* _89633_v, jule::Fn<void> _89648_init) {
	if ((*((*(_89633_v))))._field_Statically) {
		_1aa897c5e_write(_self_, jule::Str::lit("static ", 7));
	};
	_1aa8ac37d_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_89633_v))))._field_TypeSym))._field_Type);
	_1aa897c5e_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_89633_v))))._field_Reference) {
		_1aa897c5e_write(_self_, jule::Str::lit("*", 1));
	};
	static__1a9235bb4_var(&((*_self_.alloc)._field_Buf), (*(_89633_v)));
	if ((_89648_init != nullptr)) {
		_1aa897c5e_write(_self_, jule::Str::lit(" = ", 3));
		_89648_init();
	};
	_1aa897c5e_write(_self_, jule::Str::lit(";", 1));
}



inline void _1aa89ee53_var(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7ba4eb4_Var> _91424_v) {
	if (_1a7965c97_IsIgnoreIdent((*(_91424_v))._field_Ident)) {
		return;;
	};
	if ((((*(_91424_v))._field_Value != nullptr) && ((*(*(_91424_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_91424_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_91424_v.alloc)._field_Reference) {
				_1aa89eb9a_varInitExpr(_self_, &(_91424_v), jule::__new_closure<void>((void*)__jule_anon_1badd4cd5, jule::Ptr<__jule_anon_1badd4cd5_ctx>::make(__jule_anon_1badd4cd5_ctx{._self_=_self_,._91424_v=_91424_v}).as<jule::Uintptr>(), __jule_anon_1badd4cd5_ctx_handler));
			} else {
				_1aa89eb9a_varInitExpr(_self_, &(_91424_v), jule::__new_closure<void>((void*)__jule_anon_1badd6dc5, jule::Ptr<__jule_anon_1badd6dc5_ctx>::make(__jule_anon_1badd6dc5_ctx{._self_=_self_,._91424_v=_91424_v}).as<jule::Uintptr>(), __jule_anon_1badd6dc5_ctx_handler));
			};
			return;;
		};
		_1aa89eb9a_varInitExpr(_self_, &(_91424_v), nullptr);
		return;;
	};
	if ((*(_91424_v))._field_Reference) {
		_1aa89eb9a_varInitExpr(_self_, &(_91424_v), jule::__new_closure<void>((void*)__jule_anon_1badd95d1, jule::Ptr<__jule_anon_1badd95d1_ctx>::make(__jule_anon_1badd95d1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1badd95d1_ctx_handler));
		return;;
	};
	if (_1aa8b450b_shouldInitialized(&((*((*(_91424_v))._field_TypeSym))._field_Type))) {
		_1aa89eb9a_varInitExpr(_self_, &(_91424_v), jule::__new_closure<void>((void*)__jule_anon_1badda77a, jule::Ptr<__jule_anon_1badda77a_ctx>::make(__jule_anon_1badda77a_ctx{._self_=_self_,._91424_v=_91424_v}).as<jule::Uintptr>(), __jule_anon_1badda77a_ctx_handler));
		return;;
	};
	_1aa89eb9a_varInitExpr(_self_, &(_91424_v), nullptr);
}



inline void _1aa8a02b6_anonFuncInsDecl(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a666c2_AnonFnExpr>* _94537_m, jule::Str _94559_ident) {
	_1aa89d02d_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_94537_m))))._field_Func), false, _94559_ident);
	_1aa89e837_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_94537_m))))._field_Func));
	({
		auto except = _1bc0a2303_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:948:3"));
	});
}



inline void _1aa8a0629_anonFuncIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a666c2_AnonFnExpr>* _95133_m, jule::Str _95155_ident) {
	_1aa89d02d_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95133_m))))._field_Func), false, _95155_ident);
	_1aa89e837_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95133_m))))._field_Func));
	_1aa897c5e_write(_self_, jule::Str::lit(" ", 1));
	_1a92198ac_anonFuncScope((*_self_.alloc)._field_sc, (*(_95133_m)), _95155_ident);
	if (((*((*((*(_95133_m))))._field_Func))._field_Scope != nullptr)) {
		_1aa897c5e_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1aa8a098c_funcIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a73b41_FnIns> _96128_f, jule::Str _96145_ident) {
	_1aa89d02d_funcHead(_self_, &((*_self_.alloc)._field_Buf), &(_96128_f), false, _96145_ident);
	_1aa89e837_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &(_96128_f));
	_1aa897c5e_write(_self_, jule::Str::lit(" ", 1));
	_1a9219b65_funcScope((*_self_.alloc)._field_sc, _96128_f);
	if (((*(_96128_f))._field_Scope != nullptr)) {
		_1aa897c5e_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1aa8a0c45_func(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a70a83_Fn>* _97126_f) {
	{
		auto expr = &((*((*(_97126_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bade3eae:;
		if (it != expr_end) {
			jule::Ptr<_1a7a73b41_FnIns> _97215_ins = *it;
			{
				_1aa8a098c_funcIns(_self_, _97215_ins, jule::Str());
			}
			_iter_next_1bade3eae:;
			++it;
			goto _iter_begin_1bade3eae;
		}
		_iter_end_1bade3eae:;
	};
}



inline void _1aa8a10a8_funcTrait(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a799a97a_StructIns>* _97727_s, jule::Ptr<_1a7a73b41_FnIns>* _97753_f) {
	(*((*(_97753_f))))._field_Scope=nullptr;
	_1bc0a106b_Builder _9807_nident = static__1bc0a18b8_New(30LL);;
	({
		auto except = _1bc0a204a_WriteStr(&_9807_nident, jule::Str::lit("__jule_trait_method_", 20));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:981:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&_9807_nident, _1a4a03574_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_97753_f)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:982:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&_9807_nident, jule::Str::lit("_", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:983:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(&_9807_nident, _1a4a03574_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_97727_s)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:984:3"));
		(except.result);
	});
	jule::Ptr<_1a7c3255d_Type> _9867_k = (*((*((*(_97753_f))))._field_Params[0LL]))._field_Type;;
	(*((*((*(_97753_f))))._field_Params[0LL]))._field_Type=_1aa8949b4_generalGCPtr;
	_1aa8a098c_funcIns(_self_, (*(_97753_f)), _1bc0a28ca_Str(&_9807_nident));
	(*((*((*(_97753_f))))._field_Params[0LL]))._field_Type=_9867_k;
}



inline __jule_tuple_x_1a7a73b41_FnIns__jule_tuple_bool _1aa8a13e9_findTraitMetMap(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a70a83_Fn>* _99237_m) {
	__jule_tuple_x_1a7a73b41_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a7a73b41_FnIns> _9937_mins = (*((*(_99237_m))))._field_Instances[0LL];;
	{
		_1ba989abb_mapIterator it = _1ba98280b_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_1bade9668:;
		__jule_tuple_px_1a7a73b41_FnIns__jule_tuple_psuintptr __iterator_result = _1ba98a0b6_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_1a7a73b41_FnIns> _99412_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_99412_f))._field_Decl))._field_Public == (*((*(_99237_m))))._field_Public) && ((*(*(_99412_f))._field_Decl.alloc)._field_Ident == (*((*(_99237_m))))._field_Ident)) && _1a7a7479b_EqualFn(_99412_f, &(_9937_mins)))) {
					__jule_func_result.__jule_result_arg0 = _99412_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1bade9668:;
			goto _iter_begin_1bade9668;
		}
		_iter_end_1bade9668:;
	};
	__jule_func_result.__jule_result_arg0 = _9937_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1aa8a175c_traitWrapper(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a7b297_Trait>* _100434_t, jule::Ptr<_1a7a70a83_Fn>* _100456_m) {
	_julec_label_1badebd52:;
	{
		auto expr = &((*((*(_100434_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badec00b:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> _100615_imp = *it;
			{
				jule::Ptr<_1a7a73b41_FnIns> _10078_mepf;
				jule::Bool _100714_exist;
				({
					__jule_tuple_x_1a7a73b41_FnIns__jule_tuple_bool __jule_assign_result = _1aa8a13e9_findTraitMetMap(_self_, _100456_m);
					_10078_mepf = __jule_assign_result.__jule_result_arg0;
					_100714_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_100714_exist) {
					jule::Slice<jule::Uintptr> _10109_vals = _1ba981ee2_get((*(_self_))._field_traitMetMap, _10078_mepf);;
					{
						auto expr = &(_10109_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1badee085:;
						if (it != expr_end) {
							jule::Uintptr _101112_val = *it;
							{
								if ((_101112_val == static_cast<jule::Uintptr>(_100615_imp))) {
									goto _iter_next_1badec00b;
								};
							}
							_iter_next_1badee085:;
							++it;
							goto _iter_begin_1badee085;
						}
						_iter_end_1badee085:;
					};
					(*_1ba982146_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10078_mepf))=jule::append(_10109_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_100615_imp); __jule_collection; }));
				} else {
					(*_1ba982146_set(((*(_self_))._field_traitMetMap).ptr(), _10078_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_100615_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_100615_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1badee87c:;
					if (it != expr_end) {
						jule::Ptr<_1a799a97a_StructIns> _102116_ins = *it;
						{
							_1aa8a10a8_funcTrait(_self_, &(_102116_ins), &(_10078_mepf));
							;
							jule::Ptr<_1a7a70a83_Fn> _10259_sm = _1a799b9e2_FindMethod(_102116_ins.ptr(), (*((*(_100456_m))))._field_Ident, false);;
							if (((_10259_sm == nullptr) || ((*(_10259_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1aa898215_addIndent(_self_);
							_1aa897c5e_write(_self_, jule::Str::lit("{\n", 2));
							_1aa898611_indent(_self_);
							if (((*((*(_100456_m))))._field_Exceptional || (!(_1a7a71039_IsVoid((*(_100456_m)).ptr()))))) {
								_1aa897c5e_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1a9234652_func(&((*_self_.alloc)._field_Buf), &(_10259_sm));
							_1aa897c5e_write(_self_, jule::Str::lit("(", 1));
							_1aa897c5e_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1aa8aa634_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _102116_ins);
							_1aa897c5e_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _10425_ptr = (!(_1a7a6e994_IsRef((*((*(_100456_m))))._field_Params[0LL].ptr())));;
							if (_10425_ptr) {
								_1aa897c5e_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_100456_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1bae07313:;
								if (it != expr_end) {
									jule::Ptr<_1a7a6e0ae_Param> _104612_mp = *it;
									{
										_1aa897c5e_write(_self_, jule::Str::lit(", ", 2));
										static__1a9235015_param(&((*_self_.alloc)._field_Buf), &(_104612_mp));
									}
									_iter_next_1bae07313:;
									++it;
									goto _iter_begin_1bae07313;
								}
								_iter_end_1bae07313:;
							};
							_1aa897c5e_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1aa898413_doneIndent(_self_);
						}
						_iter_next_1badee87c:;
						++it;
						goto _iter_begin_1badee87c;
					}
					_iter_end_1badee87c:;
				};
			}
			_iter_next_1badec00b:;
			++it;
			goto _iter_begin_1badec00b;
		}
		_iter_end_1badec00b:;
	};
}



inline void _1aa8a195a_traitWrappers(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae03540:;
		if (it != expr_end) {
			jule::Ptr<_1aa8959a4_traitHash> _105715_hash = *it;
			{
				if (((*((*(_105715_hash))._field_traitDecl))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1bae03540;
				};
				{
					auto expr = &((*(_105715_hash))._field_methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bae092c1:;
					if (it != expr_end) {
						jule::Ptr<_1a7a70a83_Fn> _106116_m = *it;
						{
							_1aa8a175c_traitWrapper(_self_, &((*(_105715_hash))._field_traitDecl), &(_106116_m));
						}
						_iter_next_1bae092c1:;
						++it;
						goto _iter_begin_1bae092c1;
					}
					_iter_end_1bae092c1:;
				};
			}
			_iter_next_1bae03540:;
			++it;
			goto _iter_begin_1bae03540;
		}
		_iter_end_1bae03540:;
	};
}



inline void _1aa8a1cbd_traitDataMethods(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1aa8959a4_traitHash>* _106838_hash, jule::Ptr<_1a799a97a_StructIns> _106856_s) {
	{
		auto expr = &((*((*(_106838_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae08864:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _106915_m = *it;
			{
				_1aa898611_indent(_self_);
				_1aa897c5e_write(_self_, jule::Str::lit(".", 1));
				static__1a9234652_func(&((*_self_.alloc)._field_Buf), &(_106915_m));
				_1aa897c5e_write(_self_, jule::Str::lit("=__jule_trait_method_", 21));
				jule::Ptr<_1a7a73b41_FnIns> _10744_mepf;
				jule::Bool _107410_exist;
				({
					__jule_tuple_x_1a7a73b41_FnIns__jule_tuple_bool __jule_assign_result = _1aa8a13e9_findTraitMetMap(_self_, &(_106915_m));
					_10744_mepf = __jule_assign_result.__jule_result_arg0;
					_107410_exist = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_107410_exist))) {
					__jule_panic_s(jule::Str::lit("cxx: implementation mistake, [traitDataMethods] could not found MepMap record", 77) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1076:5"));;
				};
				_1aa897c5e_write(_self_, _1a4a03574_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10744_mepf)), 15LL));
				_1aa897c5e_write(_self_, jule::Str::lit("_", 1));
				_1aa897c5e_write(_self_, _1a4a03574_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_106856_s)), 15LL));
				_1aa897c5e_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1bae08864:;
			++it;
			goto _iter_begin_1bae08864;
		}
		_iter_end_1bae08864:;
	};
}



inline void _1aa8a21db_traitData(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1aa8959a4_traitHash>* _108631_hash, jule::I32 _108649_i, jule::Ptr<_1a799a97a_StructIns>* _108662_s) {
	_1bc0a106b_Builder _10877_ident = static__1bc0a18b8_New((*((*((*(_108631_hash))))._field_traitDecl))._field_Ident.len());;
	static__1a9234c29_traitDecl(&(_10877_ident), (*((*(_108631_hash))))._field_traitDecl);
	_1aa897c5e_write(_self_, jule::Str::lit("static ", 7));
	_1aa898017_writeBytes(_self_, _1bc0a337b_Buf(&_10877_ident));
	_1aa897c5e_write(_self_, jule::Str::lit("MptrData ", 9));
	_1aa898017_writeBytes(_self_, _1bc0a337b_Buf(&_10877_ident));
	_1aa897c5e_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1aa897c5e_write(_self_, _1a4a03c06_Itoa(_108649_i));
	_1aa897c5e_write(_self_, jule::Str::lit(" {\n", 3));
	_1aa898215_addIndent(_self_);
	_1aa898611_indent(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1aa897c5e_write(_self_, _1a4a03c06_Itoa(_1aa8990d4_pushDealloc(_self_, jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_108662_s)), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)}))));
	_1aa897c5e_write(_self_, jule::Str::lit(",\n", 2));
	_1aa8a1cbd_traitDataMethods(_self_, _108631_hash, (*(_108662_s)));
	_1aa898413_doneIndent(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1aa8a23d9_traitDatas(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae15167:;
		if (it != expr_end) {
			jule::Ptr<_1aa8959a4_traitHash> _110815_hash = *it;
			{
				jule::I32 _11098_i = 0LL;;
				{
					auto expr = &((*((*(_110815_hash))._field_traitDecl))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bae160e1:;
					if (it != expr_end) {
						jule::Ptr<_1a7997adc_Struct> _111016_s = *it;
						{
							{
								auto expr = &((*(_111016_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bae16c18:;
								if (it != expr_end) {
									jule::Ptr<_1a799a97a_StructIns> _111117_ins = *it;
									{
										_1aa8a21db_traitData(_self_, &(_110815_hash), _11098_i, &(_111117_ins));
										(_11098_i)++;
									}
									_iter_next_1bae16c18:;
									++it;
									goto _iter_begin_1bae16c18;
								}
								_iter_end_1bae16c18:;
							};
						}
						_iter_next_1bae160e1:;
						++it;
						goto _iter_begin_1bae160e1;
					}
					_iter_end_1bae160e1:;
				};
			}
			_iter_next_1bae15167:;
			++it;
			goto _iter_begin_1bae15167;
		}
		_iter_end_1bae15167:;
	};
}



inline void _1aa8a25d7_globalDecls(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae16069:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> _112015_v = *it;
			{
				_1aa8ac37d_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_112015_v))._field_TypeSym))._field_Type);
				_1aa897c5e_write(_self_, jule::Str::lit(" ", 1));
				static__1a9235bb4_var(&((*_self_.alloc)._field_Buf), _112015_v);
				_1aa897c5e_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bae16069:;
			++it;
			goto _iter_begin_1bae16069;
		}
		_iter_end_1bae16069:;
	};
}



inline void _1aa8a27d5_decls(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	_1aa89b306_structurePlainDecls(_self_);
	_1aa89c59e_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1bc0a2d5e_Len(&(*_self_.alloc)._field_Buf);
	_1aa89ca55_structureMethodDecls(_self_);
	_1aa89dbaa_funcDecls(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit("\n\n", 2));
	_1aa89e161_traitDataTypes(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1bc0a2d5e_Len(&(*_self_.alloc)._field_Buf);
	_1aa8a195a_traitWrappers(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit("\n\n", 2));
	_1aa8a23d9_traitDatas(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1bc0a2d5e_Len(&(*_self_.alloc)._field_Buf);
	_1aa8a25d7_globalDecls(_self_);
}



inline void _1aa8a2a8d_structureMethods(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a799a97a_StructIns>* _114638_s) {
	{
		auto expr = &((*((*(_114638_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae1de0c:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _114715_f = *it;
			{
				_1aa8a0c45_func(_self_, &(_114715_f));
				_1aa897c5e_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1bae1de0c:;
			++it;
			goto _iter_begin_1bae1de0c;
		}
		_iter_end_1bae1de0c:;
	};
}



inline void _1aa8a2d46_structureIns(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a799a97a_StructIns>* _115334_s) {
	if (((*((*(_115334_s))))._field_Source == nullptr)) {
		;
		_1aa89bd40_structureOperators(_self_, _115334_s, false);
	};
	_1aa8a2a8d_structureMethods(_self_, _115334_s);
}



inline void _1aa8a30ee_structure(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7997adc_Struct>* _116231_s) {
	{
		auto expr = &((*((*(_116231_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae217a0:;
		if (it != expr_end) {
			jule::Ptr<_1a799a97a_StructIns> _116315_ins = *it;
			{
				_1aa8a2d46_structureIns(_self_, &(_116315_ins));
				_1aa897c5e_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1bae217a0:;
			++it;
			goto _iter_begin_1bae217a0;
		}
		_iter_end_1bae217a0:;
	};
}



inline void _1aa8a32ec_structures(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae2175b:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> _117015_s = *it;
			{
				if (((*(_117015_s))._field_Token != nullptr)) {
					_1aa8a30ee_structure(_self_, &(_117015_s));
					_1aa897c5e_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1bae2175b:;
			++it;
			goto _iter_begin_1bae2175b;
		}
		_iter_end_1bae2175b:;
	};
}



inline void _1aa8a34ea_funcs(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	_1a85e86c6_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a7b62081_Package>*>((void*)__jule_anon_1bae24a5b, jule::Ptr<__jule_anon_1bae24a5b_ctx>::make(__jule_anon_1bae24a5b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bae24a5b_ctx_handler));
}



inline void _1aa8a37a3_pushInit(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7b62081_Package>* _120130_pkg) {
	_1a85e8929_IterFiles(_120130_pkg, jule::__new_closure<void,jule::Ptr<_1a7a76d86_SymTab>*>((void*)__jule_anon_1bae25dc0, jule::Ptr<__jule_anon_1bae25dc0_ctx>::make(__jule_anon_1bae25dc0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bae25dc0_ctx_handler));
}



inline void _1aa8a39a1_anonHashes(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	_julec_label_1bae26aa2:;
	jule::Slice<jule::Ptr<_1aa895586_anonHash>> _12187_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12187_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae2a7ba:;
		if (it != expr_end) {
			jule::Ptr<_1aa895586_anonHash> _122015_h = *it;
			{
				_1aa8a0629_anonFuncIns(_self_, &((*(_122015_h))._field_expr), (*_122015_h.alloc)._field_ident);
			}
			_iter_next_1bae2a7ba:;
			++it;
			goto _iter_begin_1bae2a7ba;
		}
		_iter_end_1bae2a7ba:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1bae26aa2;
	};
}



inline void _1aa8a3b9e_initGlobals(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae2d48d:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> _122915_v = *it;
			{
				({
					auto except = _1bc0a2303_WriteByte(&(*(_self_))._field_Buf, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1230:4"));
				});
				static__1a9235bb4_var(&((*_self_.alloc)._field_Buf), _122915_v);
				_1aa897c5e_write(_self_, jule::Str::lit(" = ", 3));
				_1a922bb22_model((*_self_.alloc)._field_ec, (*((*((*(_122915_v))._field_Value))._field_Data))._field_Model);
				_1aa897c5e_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bae2d48d:;
			++it;
			goto _iter_begin_1bae2d48d;
		}
		_iter_end_1bae2d48d:;
	};
}



inline void _1aa8a3d9c_initCaller(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	_1aa897c5e_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1aa898215_addIndent(_self_);
	_1a85e86c6_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1a7b62081_Package>*>((void*)__jule_anon_1bae32184, jule::Ptr<__jule_anon_1bae32184_ctx>::make(__jule_anon_1bae32184_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bae32184_ctx_handler));
	_1aa898413_doneIndent(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1aa8a409a_end(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	_1aa897c5e_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_1aa897c5e_write(_self_, jule::Str::lit("\n\n", 2));
	_1aa8a3b9e_initGlobals(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_1bd445b4b_Test) {
		_1aa897c5e_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		static__1a9234652_func(&((*_self_.alloc)._field_Buf), &((*(_1a860157a_ProgramMeta))._field_EntryPoint));
		_1aa897c5e_write(_self_, jule::Str::lit("();", 3));
	};
	_1aa897c5e_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1aa8a4353_buildTraitHash(jule::Ptr<_1aa897544_ObjectCoder> _self_, jule::Ptr<_1a7a7b297_Trait>* _127336_t) {
	jule::Ptr<_1aa8959a4_traitHash> _12747_hash = jule::new_ptr<_1aa8959a4_traitHash>(_1aa8959a4_traitHash{._field_traitDecl=(*(_127336_t)), ._field_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a70a83_Fn>>::alloc(0LL, (*((*(_127336_t))))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7a70a83_Fn>(nullptr); __jule_collection; })});;
	_1a85e8c15_IterTraitMethods(_127336_t, jule::__new_closure<void,jule::Ptr<_1a7a70a83_Fn>*>((void*)__jule_anon_1bae371de, jule::Ptr<__jule_anon_1bae371de_ctx>::make(__jule_anon_1bae371de_ctx{._12747_hash=_12747_hash}).as<jule::Uintptr>(), __jule_anon_1bae371de_ctx_handler));
	(*(_self_))._field_traitMap=jule::append((*_self_.alloc)._field_traitMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa8959a4_traitHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _12747_hash; __jule_collection; }));
}



inline void _1aa8a4551_buildTraitHashes(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	_1a85e86c6_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a7b62081_Package>*>((void*)__jule_anon_1bae39741, jule::Ptr<__jule_anon_1bae39741_ctx>::make(__jule_anon_1bae39741_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bae39741_ctx_handler));
}



inline void _1aa8a48b4_insertBuf(jule::Ptr<_1aa897544_ObjectCoder> _self_, _1bc0a106b_Builder* _130331_buf, jule::I32 _130354_pos) {
	if ((_1bc0a2d5e_Len(_130331_buf) > 0LL)) {
		jule::Slice<jule::U8> _13058_ibuf = _1bc0a337b_Buf(&(*(_self_))._field_Buf);;
		_13058_ibuf=_1bae3cda4_Insert(_13058_ibuf, _130354_pos, _1bc0a337b_Buf(_130331_buf));
		{
			_1bc0a3634_SetBuf(&(*_self_.alloc)._field_Buf, _13058_ibuf);
		};
	};
}



inline void _1aa8a4ab2_implementRC(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	if ((*(_self_))._field_meta._field_concurrent) {
		_1aa8a098c_funcIns(_self_, (*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_RCAddAtomic, jule::Str::lit("__jule_RCAdd", 12));
		_1aa8a098c_funcIns(_self_, (*(*(_1a860157a_ProgramMeta))._field_Runtime.alloc)._field_RCLoadAtomic, jule::Str::lit("__jule_RCLoad", 13));
		_1aa8a098c_funcIns(_self_, (*(*(_1a860157a_ProgramMeta))._field_Runtime.alloc)._field_RCDropAtomic, jule::Str::lit("__jule_RCDrop", 13));
	} else {
		_1aa8a098c_funcIns(_self_, (*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_RCAdd, jule::Str());
		_1aa8a098c_funcIns(_self_, (*(*(_1a860157a_ProgramMeta))._field_Runtime.alloc)._field_RCLoad, jule::Str());
		_1aa8a098c_funcIns(_self_, (*(*(_1a860157a_ProgramMeta))._field_Runtime.alloc)._field_RCDrop, jule::Str());
	};
}



inline void _1aa8a4cb0_serializeHead(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	_1aa8a4551_buildTraitHashes(_self_);
	_1aa89ad50_prepareStructures(_self_);
	_1aa89a5e1_head(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit("\n", 1));
	_1aa8a27d5_decls(_self_);
	_1aa8a48b4_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1bc0a2d5e_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1bc0a2d5e_Len(&(*_self_.alloc)._field_resultDecls);
	_1aa897c5e_write(_self_, jule::Str::lit("\n", 1));
	_1aa8a32ec_structures(_self_);
	_1aa8a34ea_funcs(_self_);
	_1aa8a3d9c_initCaller(_self_);
	_1aa897c5e_write(_self_, jule::Str::lit("\n\n", 2));
	_1aa8a39a1_anonHashes(_self_);
	_1aa8a4ab2_implementRC(_self_);
	_1aa8a48b4_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1bc0a2d5e_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1bc0a2d5e_Len(&(*_self_.alloc)._field_deallocObj);
	_1aa8a48b4_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1bc0a2d5e_Len(&(*_self_.alloc)._field_anyObj);
	_1aa8a48b4_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1bc0a2d5e_Len(&(*_self_.alloc)._field_anonObj);
	_1aa8a48b4_insertBuf(_self_, &((*_self_.alloc)._field_coSpawnObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1bc0a2d5e_Len(&(*_self_.alloc)._field_coSpawnObj);
}



inline void _1aa8a4ead_Serialize(jule::Ptr<_1aa897544_ObjectCoder> _self_) {
	_1aa8a4cb0_serializeHead(_self_);
	_1aa8a409a_end(_self_);
}








inline jule::Bool _1aa8a6564_customType_eq(_1aa8a6564_customType *_self_, _1aa8a6564_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1aa8a693d_Str(_1aa8a6564_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1aa8a6c7e_Equal(jule::Ptr<_1aa8a6564_customType> _self_, jule::Ptr<_1a7c3255d_Type> _2518_k) {
	return false;;
}








inline jule::Bool _1aa8a717a_typeCoder_eq(_1aa8a717a_typeCoder *_self_, _1aa8a717a_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1aa8a717a_typeCoder> static__1aa8a76ca_new(jule::Ptr<_1aa897544_ObjectCoder>* _5021_oc) {
	jule::Ptr<_1aa8a717a_typeCoder> _517_tc = jule::new_ptr<_1aa8a717a_typeCoder>(_1aa8a717a_typeCoder{._field_oc=(*(_5021_oc)), ._field_rc=jule::Ptr<_1aa8aec65_resultCoder>(nullptr)});;
	(*(_517_tc))._field_rc=static__1aa8b0271_new(&(_517_tc));
	return _517_tc;;
}



inline void _1aa8a7a3d_toType(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _5727_buf, jule::Str _5754_id) {
	if ((_5754_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_5754_id=_1a7ae60d1_RealKindOf(_5754_id);
	};
	({
		auto except = _1bc0a204a_WriteStr(_5727_buf, jule::Str::lit("jule::", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:61:3"));
		(except.result);
	});
	if (((97LL <= _5754_id[0LL]) && (_5754_id[0LL] <= 122LLU))) {
		({
			auto except = _1bc0a2303_WriteByte(_5727_buf, (jule::U8)(_5754_id[0LL] - 32LLU));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:63:4"));
		});
	} else {
		({
			auto except = _1bc0a2303_WriteByte(_5727_buf, _5754_id[0LL]);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:65:4"));
		});
	};
	({
		auto except = _1bc0a204a_WriteStr(_5727_buf, _5754_id.slice(1LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:67:3"));
		(except.result);
	});
}



inline void _1aa8a7da1_prim(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _7125_buf, jule::Ptr<_1a7c3b369_Prim> _7148_p) {
	_1aa8a7a3d_toType(_self_, _7125_buf, (*(_7148_p))._field_Kind);
}



inline void _1aa8a8214_tuple(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _7626_buf, jule::Ptr<_1a7c4145c_Tuple> _7653_t) {
	({
		auto except = _1bc0a204a_WriteStr(_7626_buf, jule::Str::lit("std::tuple<", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:77:3"));
		(except.result);
	});
	{
		auto expr = &((*(_7653_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7ae634:;
		if (it != expr_end) {
			jule::I32 _788_i = it - expr->begin();
			jule::Ptr<_1a7c3255d_Type> _7815_tk = *it;
			{
				_1aa8ac37d_kind(_self_, _7626_buf, _7815_tk);
				if ((((*(_7653_t))._field_Types.len() - _788_i) > 1LL)) {
					({
						auto except = _1bc0a2303_WriteByte(_7626_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:81:5"));
					});
				};
			}
			_iter_next_1ad7ae634:;
			++it;
			_788_i++;
			goto _iter_begin_1ad7ae634;
		}
		_iter_end_1ad7ae634:;
	};
	({
		auto except = _1bc0a2303_WriteByte(_7626_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:84:3"));
	});
}



inline void _1aa8a8577_asSptr(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem) {
	({
		auto except = _1bc0a204a_WriteStr(_8827_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:89:3"));
		(except.result);
	});
	({
		auto except = _1bc0a1c09_Write(_8827_buf, _8850_elem);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:90:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(_8827_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:91:3"));
	});
}



inline void _1aa8a88da_sptr(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _9525_buf, jule::Ptr<_1a7c3ed95_Sptr> _9552_sptr) {
	({
		auto except = _1bc0a204a_WriteStr(_9525_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:96:3"));
		(except.result);
	});
	_1aa8ac37d_kind(_self_, _9525_buf, (*(_9552_sptr))._field_Elem);
	({
		auto except = _1bc0a2303_WriteByte(_9525_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:98:3"));
	});
}



inline void _1aa8a8c4d_ptr(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _10224_buf, jule::Ptr<_1a7c4365c_Ptr> _10251_p) {
	;
	if (_1a7c441c9_IsUnsafe(_10251_p.ptr())) {
		({
			auto except = _1bc0a204a_WriteStr(_10224_buf, jule::Str::lit("void*", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:105:4"));
			(except.result);
		});
	} else {
		_1aa8ac37d_kind(_self_, _10224_buf, (*(_10251_p))._field_Elem);
		({
			auto except = _1bc0a204a_WriteStr(_10224_buf, jule::Str::lit("*", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:108:4"));
			(except.result);
		});
	};
}



inline void _1aa8a90b1_enumDecl(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _11329_buf, jule::Ptr<_1a7a7d94d_Enum> _11356_e) {
	_1aa8ac37d_kind(_self_, _11329_buf, (*((*(_11356_e))._field_TypeSym))._field_Type);
}



inline void _1aa8a9424_typeEnumDecl(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _11833_buf, jule::Ptr<_1a7a80158_TypeEnum> _11860_e) {
	({
		auto except = _1bc0a204a_WriteStr(_11833_buf, jule::Str::lit("jule::Any", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:119:3"));
		(except.result);
	});
}



inline void _1aa8a9787_asSlice(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _12228_buf, jule::Ptr<_1a7c3255d_Type> _12255_elem) {
	({
		auto except = _1bc0a204a_WriteStr(_12228_buf, jule::Str::lit("jule::Slice<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:123:3"));
		(except.result);
	});
	_1aa8ac37d_kind(_self_, _12228_buf, _12255_elem);
	({
		auto except = _1bc0a2303_WriteByte(_12228_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:125:3"));
	});
}



inline void _1aa8a9aea_slice(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _12926_buf, jule::Ptr<_1a7c40868_Slc> _12953_s) {
	_1aa8a9787_asSlice(_self_, _12926_buf, (*(_12953_s))._field_Elem);
}



inline void _1aa8a9e5d_mapType(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _13428_buf, jule::Ptr<_1a7c4200c_Map> _13455_m) {
	jule::Ptr<_1a799a97a_StructIns> _1357_ins = _1a85ee886_FindStructGenericInstance(&((*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13455_m))._field_Key; (*it++) = (*_13455_m.alloc)._field_Val; __jule_collection; }));;
	({
		auto except = _1bc0a204a_WriteStr(_13428_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:136:3"));
		(except.result);
	});
	static__1a92355dc_structureIns(_13428_buf, &(_1357_ins));
	({
		auto except = _1bc0a204a_WriteStr(_13428_buf, jule::Str::lit(">", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:138:3"));
		(except.result);
	});
}



inline void _1aa8aa634_structureIns(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _14733_buf, jule::Ptr<_1a799a97a_StructIns> _14760_s) {
	if ((!((*((*(_14760_s))._field_Decl))._field_Binded))) {
		if (((*_14760_s.alloc)._field_Source != nullptr)) {
			_1aa8ac37d_kind(_self_, _14733_buf, (*_14760_s.alloc)._field_Source);
		} else {
			static__1a92355dc_structureIns(_14733_buf, &(_14760_s));
		};
		return;;
	};
	jule::Ptr<_1a79781c7_Directive> _1563_d = _1a85ece17_FindDirective(&((*((*(_14760_s))._field_Decl))._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1563_d != nullptr)) {
		({
			auto except = _1bc0a1c09_Write(_14733_buf, _1aa8a5343_concatAllParts((*_1563_d.alloc)._field_Args));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:158:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(_14733_buf, jule::Str::lit("::", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:159:4"));
			(except.result);
		});
	};
	static__1a92355dc_structureIns(_14733_buf, &(_14760_s));
	if (((*_14760_s.alloc)._field_Generics.len() > 0LL)) {
		({
			auto except = _1bc0a2303_WriteByte(_14733_buf, '<');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:163:4"));
		});
		{
			auto expr = &((*_14760_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1baa6ace0:;
			if (it != expr_end) {
				jule::I32 _1649_i = it - expr->begin();
				jule::Ptr<_1a7c30b77_InsGeneric> _16416_g = *it;
				{
					_1aa8ac37d_kind(_self_, _14733_buf, (*(_16416_g))._field_Type);
					if ((((*_14760_s.alloc)._field_Generics.len() - _1649_i) > 1LL)) {
						({
							auto except = _1bc0a2303_WriteByte(_14733_buf, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:167:6"));
						});
					};
				}
				_iter_next_1baa6ace0:;
				++it;
				_1649_i++;
				goto _iter_begin_1baa6ace0;
			}
			_iter_end_1baa6ace0:;
		};
		({
			auto except = _1bc0a2303_WriteByte(_14733_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:170:4"));
		});
	};
}



inline void _1aa8aa997_array(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _17526_buf, jule::Ptr<_1a7c42b89_Arr> _17553_a) {
	({
		auto except = _1bc0a204a_WriteStr(_17526_buf, jule::Str::lit("jule::Array<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:176:3"));
		(except.result);
	});
	_1aa8ac37d_kind(_self_, _17526_buf, (*(_17553_a))._field_Elem);
	({
		auto except = _1bc0a2303_WriteByte(_17526_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:178:3"));
	});
	({
		auto except = _1bc0a204a_WriteStr(_17526_buf, _1a4a03c06_Itoa((*_17553_a.alloc)._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:179:3"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(_17526_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:180:3"));
	});
}



inline void _1aa8ab16d_paramIns(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _19829_buf, jule::Ptr<_1a7a729db_ParamIns>* _19857_p) {
	if ((*((*((*(_19857_p))))._field_Decl))._field_Variadic) {
		({
			auto except = _1bc0a204a_WriteStr(_19829_buf, jule::Str::lit("jule::Slice<", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:200:4"));
			(except.result);
		});
		_1aa8ac37d_kind(_self_, _19829_buf, (*((*(_19857_p))))._field_Type);
		({
			auto except = _1bc0a2303_WriteByte(_19829_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:202:4"));
		});
	} else {
		_1aa8ac37d_kind(_self_, _19829_buf, (*((*(_19857_p))))._field_Type);
	};
	if ((*((*((*(_19857_p))))._field_Decl))._field_Reference) {
		({
			auto except = _1bc0a2303_WriteByte(_19829_buf, '*');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:207:4"));
		});
	};
}



inline void _1aa8ab844_funcInsResult(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _23034_s, jule::Ptr<_1a7a73b41_FnIns>* _23060_f) {
	if (_1a7a71039_IsVoid((*((*(_23060_f))))._field_Decl.ptr())) {
		if ((*(*((*(_23060_f))))._field_Decl.alloc)._field_Exceptional) {
			({
				auto except = _1bc0a204a_WriteStr(_23034_s, jule::Str::lit("jule::VoidExceptional", 21));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:233:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1bc0a204a_WriteStr(_23034_s, jule::Str::lit("void", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:235:5"));
				(except.result);
			});
		};
		return;;
	};
	if ((*((*((*(_23060_f))))._field_Decl))._field_Exceptional) {
		({
			auto except = _1bc0a204a_WriteStr(_23034_s, jule::Str::lit("jule::Exceptional<", 18));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:240:4"));
			(except.result);
		});
		_1aa8b232d_codeMut1((*(_self_))._field_rc.ptr(), _23034_s, &((*((*(_23060_f))))._field_Result));
		({
			auto except = _1bc0a2303_WriteByte(_23034_s, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:242:4"));
		});
		return;;
	};
	_1aa8b232d_codeMut1((*(_self_))._field_rc.ptr(), _23034_s, &((*((*(_23060_f))))._field_Result));
}



inline void _1aa8abba7_anonFunc(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _24829_buf, jule::Ptr<_1a7a73b41_FnIns> _24856_f) {
	if ((((*(_24856_f))._field_Result != nullptr) && (_1a7c3772d_Tup((*(_24856_f))._field_Result) != nullptr))) {
		_1aa899a1e_pushResultIns((*(_self_))._field_oc, &(_24856_f));
	};
	_1aa8ab844_funcInsResult(_self_, _24829_buf, &(_24856_f));
	if (((*(_24856_f))._field_Params.len() == 0LL)) {
		return;;
	};
	({
		auto except = _1bc0a2303_WriteByte(_24829_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:256:3"));
	});
	{
		auto expr = &((*(_24856_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa7c395:;
		if (it != expr_end) {
			jule::I32 _2578_i = it - expr->begin();
			jule::Ptr<_1a7a729db_ParamIns> _25715_param = *it;
			{
				if (_1a7a6e70d_IsSelf((*(_25715_param))._field_Decl.ptr())) {
					goto _iter_next_1baa7c395;
				};
				_1aa8ab16d_paramIns(_self_, _24829_buf, &(_25715_param));
				if ((((*(_24856_f))._field_Params.len() - _2578_i) > 1LL)) {
					({
						auto except = _1bc0a2303_WriteByte(_24829_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:263:5"));
					});
				};
			}
			_iter_next_1baa7c395:;
			++it;
			_2578_i++;
			goto _iter_begin_1baa7c395;
		}
		_iter_end_1baa7c395:;
	};
}



inline void _1aa8ac01a_func(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _26925_buf, jule::Ptr<_1a7a73b41_FnIns> _26952_f) {
	({
		auto except = _1bc0a204a_WriteStr(_26925_buf, jule::Str::lit("jule::Fn<", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:270:3"));
		(except.result);
	});
	_1aa8abba7_anonFunc(_self_, _26925_buf, _26952_f);
	({
		auto except = _1bc0a2303_WriteByte(_26925_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:272:3"));
	});
}



inline void _1aa8ac37d_kind(_1aa8a717a_typeCoder* _self_, _1bc0a106b_Builder* _27625_buf, jule::Ptr<_1a7c3255d_Type> _27652_k) {
	{
		
		if ((_1a7c36be4_Struct(_27652_k.ptr()) != nullptr)) {
			_case_begin_1baa80ae6:;
			{
				_1aa8aa634_structureIns(_self_, _27625_buf, _1a7c36be4_Struct(_27652_k));
				return;;
			}
		}
		else if (_1a7c3344e_Binded(_27652_k.ptr())) {
			_case_begin_1baa80b90:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_27625_buf, _1a86003d1_GetBindIdent(_27652_k));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:285:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1a7c35671_Prim(_27652_k) != nullptr)) {
			_case_begin_1baa80c06:;
			{
				_1aa8a7da1_prim(_self_, _27625_buf, _1a7c35671_Prim(_27652_k));
				return;;
			}
		}
		else if ((_1a7c3772d_Tup(_27652_k) != nullptr)) {
			_case_begin_1baa80c6c:;
			{
				_1aa8a8214_tuple(_self_, _27625_buf, _1a7c3772d_Tup(_27652_k));
				return;;
			}
		}
		else if ((_1a7c35907_Sptr(_27652_k) != nullptr)) {
			_case_begin_1baa80cd3:;
			{
				_1aa8a88da_sptr(_self_, _27625_buf, _1a7c35907_Sptr(_27652_k));
				return;;
			}
		}
		else if ((_1a7c35b8d_Ptr(_27652_k) != nullptr)) {
			_case_begin_1baa80d5a:;
			{
				_1aa8a8c4d_ptr(_self_, _27625_buf, _1a7c35b8d_Ptr(_27652_k));
				return;;
			}
		}
		else if ((_1a7c35e24_Enum(_27652_k) != nullptr)) {
			_case_begin_1baa80dd2:;
			{
				_1aa8a90b1_enumDecl(_self_, _27625_buf, _1a7c35e24_Enum(_27652_k));
				return;;
			}
		}
		else if ((_1a7c361aa_TypeEnum(_27652_k) != nullptr)) {
			_case_begin_1baa80e59:;
			{
				_1aa8a9424_typeEnumDecl(_self_, _27625_buf, _1a7c361aa_TypeEnum(_27652_k));
				return;;
			}
		}
		else if ((_1a7c366c7_Slc(_27652_k) != nullptr)) {
			_case_begin_1baa80ed1:;
			{
				_1aa8a9aea_slice(_self_, _27625_buf, _1a7c366c7_Slc(_27652_k));
				return;;
			}
		}
		else if ((_1a7c37497_Map(_27652_k) != nullptr)) {
			_case_begin_1baa81058:;
			{
				_1aa8a9e5d_mapType(_self_, _27625_buf, _1a7c37497_Map(_27652_k));
				return;;
			}
		}
		else if ((_1a7c37211_Trait(_27652_k) != nullptr)) {
			_case_begin_1baa810d0:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_27625_buf, jule::Str::lit("jule::Trait", 11));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:312:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1a7c36441_Arr(_27652_k) != nullptr)) {
			_case_begin_1baa81157:;
			{
				_1aa8aa997_array(_self_, _27625_buf, _1a7c36441_Arr(_27652_k));
				return;;
			}
		}
		else if ((_1a7c3695d_Fn(_27652_k) != nullptr)) {
			_case_begin_1baa811ce:;
			{
				_1aa8ac01a_func(_self_, _27625_buf, _1a7c3695d_Fn(_27652_k));
				return;;
			}
		}
		_match_end_1baa80909:;
	};
	{
		auto &_match_expr{ (*(_27652_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data29)) {
			_case_begin_1baa81267:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_27625_buf, (*((*(_27652_k))._field_Kind.cast_ptr<_1aa8a6564_customType>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data29)))._field_kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:323:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1baa896b0:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_27625_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:325:4"));
					(except.result);
				});
			}
		}
		_match_end_1baa89649:;
	};
}








inline jule::Bool _1aa8aec65_resultCoder_eq(_1aa8aec65_resultCoder *_self_, _1aa8aec65_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1aa8aec65_resultCoder> static__1aa8b0271_new(jule::Ptr<_1aa8a717a_typeCoder>* _34421_tc) {
	return jule::new_ptr<_1aa8aec65_resultCoder>(_1aa8aec65_resultCoder{._field_tc=(*(_34421_tc))});;
}



inline void _1aa8b05d4_ptr(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _34824_s, jule::Ptr<_1a7c4365c_Ptr> _34849_p) {
	({
		auto except = _1bc0a204a_WriteStr(_34824_s, jule::Str::lit("p", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:349:3"));
		(except.result);
	});
	_1aa8b1eba_codeMut(_self_, _34824_s, &((*(_34849_p))._field_Elem));
}



inline void _1aa8b0947_sptr(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _35325_s, jule::Ptr<_1a7c3ed95_Sptr> _35350_p) {
	({
		auto except = _1bc0a204a_WriteStr(_35325_s, jule::Str::lit("x", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:354:3"));
		(except.result);
	});
	_1aa8b1eba_codeMut(_self_, _35325_s, &((*(_35350_p))._field_Elem));
}



inline void _1aa8b0caa_mapType(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _35828_s, jule::Ptr<_1a7c4200c_Map> _35853_p) {
	({
		auto except = _1bc0a204a_WriteStr(_35828_s, jule::Str::lit("m", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:359:3"));
		(except.result);
	});
	_1aa8b1eba_codeMut(_self_, _35828_s, &((*(_35853_p))._field_Key));
	_1aa8b1eba_codeMut(_self_, _35828_s, &((*_35853_p.alloc)._field_Val));
}



inline void _1aa8b111d_slice(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _36426_s, jule::Ptr<_1a7c40868_Slc> _36451_slc) {
	({
		auto except = _1bc0a204a_WriteStr(_36426_s, jule::Str::lit("s", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:365:3"));
		(except.result);
	});
	_1aa8b1eba_codeMut(_self_, _36426_s, &((*(_36451_slc))._field_Elem));
}



inline void _1aa8b1481_arr(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _36924_s, jule::Ptr<_1a7c42b89_Arr> _36949_arr) {
	({
		auto except = _1bc0a204a_WriteStr(_36924_s, jule::Str::lit("a", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:370:3"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_36924_s, _1a4a0393c_FmtInt(static_cast<jule::I64>((*(_36949_arr))._field_N), 16LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:371:3"));
		(except.result);
	});
	_1aa8b1eba_codeMut(_self_, _36924_s, &((*_36949_arr.alloc)._field_Elem));
}



inline void _1aa8b17e4_func(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _37525_s, jule::Ptr<_1a7a73b41_FnIns> _37550_f) {
	({
		auto except = _1bc0a204a_WriteStr(_37525_s, jule::Str::lit("f", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:376:3"));
		(except.result);
	});
	{
		auto expr = &((*(_37550_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa91d5a:;
		if (it != expr_end) {
			jule::Ptr<_1a7a729db_ParamIns> _37715_p = *it;
			{
				if ((*((*(_37715_p))._field_Decl))._field_Reference) {
					({
						auto except = _1bc0a204a_WriteStr(_37525_s, jule::Str::lit("r", 1));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:379:5"));
						(except.result);
					});
				};
				_1aa8b1eba_codeMut(_self_, _37525_s, &((*(_37715_p))._field_Type));
			}
			_iter_next_1baa91d5a:;
			++it;
			goto _iter_begin_1baa91d5a;
		}
		_iter_end_1baa91d5a:;
	};
	if (((*_37550_f.alloc)._field_Result != nullptr)) {
		_1aa8b1eba_codeMut(_self_, _37525_s, &((*_37550_f.alloc)._field_Result));
	};
}



inline void _1aa8b1b57_tup(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _38824_s, jule::Ptr<_1a7c4145c_Tuple> _38849_tup) {
	{
		auto expr = &((*(_38849_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa941c0:;
		if (it != expr_end) {
			jule::Ptr<_1a7c3255d_Type> _38915_t = *it;
			{
				({
					auto except = _1bc0a204a_WriteStr(_38824_s, jule::Str::lit("__jule_tuple_", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:390:4"));
					(except.result);
				});
				_1aa8b1eba_codeMut(_self_, _38824_s, &(_38915_t));
			}
			_iter_next_1baa941c0:;
			++it;
			goto _iter_begin_1baa941c0;
		}
		_iter_end_1baa941c0:;
	};
}



inline void _1aa8b1eba_codeMut(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _39528_s, jule::Ptr<_1a7c3255d_Type>* _39554_t) {
	if (_1a7c3344e_Binded((*(_39554_t)).ptr())) {
		({
			auto except = _1bc0a204a_WriteStr(_39528_s, jule::Str::lit("b", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:404:4"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(_39528_s, _1a86003d1_GetBindIdent((*(_39554_t))));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:405:4"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39554_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data28)) {
			_case_begin_1baa95842:;
			{
				_1aa8b05d4_ptr(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1a7c4365c_Ptr>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)) {
			_case_begin_1baa963ae:;
			{
				_1aa8b0947_sptr(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1a7c3ed95_Sptr>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data26)) {
			_case_begin_1baa96425:;
			{
				_1aa8b0caa_mapType(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1a7c4200c_Map>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data24)) {
			_case_begin_1baa9648b:;
			{
				_1aa8b111d_slice(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1a7c40868_Slc>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data27)) {
			_case_begin_1baa96502:;
			{
				_1aa8b1481_arr(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1a7c42b89_Arr>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data1)) {
			_case_begin_1baa96953:;
			{
				_1aa8b17e4_func(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1a7a73b41_FnIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data3)) {
			_case_begin_1baa969b9:;
			{
				jule::Ptr<_1a7a7d94d_Enum> _4224_te = (*((*(_39554_t))))._field_Kind.cast_ptr<_1a7a7d94d_Enum>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data3);;
				static__1a9233e15_toOut(_39528_s, (*(_4224_te))._field_Ident, static_cast<jule::Uintptr>(_4224_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data4)) {
			_case_begin_1baa96a30:;
			{
				jule::Ptr<_1a7a80158_TypeEnum> _4254_te = (*((*(_39554_t))))._field_Kind.cast_ptr<_1a7a80158_TypeEnum>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data4);;
				static__1a9233e15_toOut(_39528_s, (*(_4254_te))._field_Ident, static_cast<jule::Uintptr>(_4254_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
			_case_begin_1baa96a96:;
			{
				jule::Ptr<_1a799a97a_StructIns> _4288_si = (*((*(_39554_t))))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);;
				static__1a92355dc_structureIns(_39528_s, &(_4288_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data2)) {
			_case_begin_1baa96b0c:;
			{
				jule::Ptr<_1a7a7b297_Trait> _4318_trt = (*((*(_39554_t))))._field_Kind.cast_ptr<_1a7a7b297_Trait>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data2);;
				static__1a9234c29_traitDecl(_39528_s, _4318_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)) {
			_case_begin_1baa96b73:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_39528_s, (*((*((*(_39554_t))))._field_Kind.cast_ptr<_1a7c3b369_Prim>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:434:4"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data25)) {
			_case_begin_1baa96bd9:;
			{
				_1aa8b1b57_tup(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1a7c4145c_Tuple>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1baa96348:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/type.jule:438:4"));;
			}
		}
		_match_end_1baa962d2:;
	};
}



inline void _1aa8b232d_codeMut1(_1aa8aec65_resultCoder* _self_, _1bc0a106b_Builder* _44229_s, jule::Ptr<_1a7c3255d_Type>* _44255_t) {
	jule::Ptr<_1a7c4145c_Tuple> _4437_tup = _1a7c3772d_Tup((*(_44255_t)).ptr());;
	if ((_4437_tup != nullptr)) {
		_1aa8b1b57_tup(_self_, _44229_s, _4437_tup);
	} else {
		_1aa8ac37d_kind((*(_self_))._field_tc.ptr(), _44229_s, (*(_44255_t)));
	};
}



inline jule::Slice<jule::U8> _1aa8b263b_code(_1aa8aec65_resultCoder* _self_, jule::Ptr<_1a7c3255d_Type>* _45125_t) {
	_1bc0a106b_Builder _4527_s = static__1bc0a18b8_New(20LL);;
	_1aa8b1eba_codeMut(_self_, &(_4527_s), _45125_t);
	return _1bc0a337b_Buf(&_4527_s);;
}








inline jule::Bool _1baaa1e8b_Flag_eq(_1baaa1e8b_Flag *_self_, _1baaa1e8b_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1baaa22ee_Name(_1baaa1e8b_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1baaa2442_What(_1baaa1e8b_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1baaa2585_Reset(_1baaa1e8b_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1baaa26c8_Short(_1baaa1e8b_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1baaa5214_Flag_eq(_1baaa5214_Flag *_self_, _1baaa5214_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1baaa53bd_Name(_1baaa5214_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1baaa56cb_What(_1baaa5214_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1baaa581e_Reset(_1baaa5214_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1baaa5962_Short(_1baaa5214_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1baaa8459_Flag_eq(_1baaa8459_Flag *_self_, _1baaa8459_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1baaa8613_Name(_1baaa8459_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1baaa8921_What(_1baaa8459_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1baaa8a64_Reset(_1baaa8459_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1baaa8ba7_Short(_1baaa8459_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1baaab6e3_Flag_eq(_1baaab6e3_Flag *_self_, _1baaab6e3_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1baaab89c_Name(_1baaab6e3_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1baaabbaa_What(_1baaab6e3_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1baaabced_Reset(_1baaab6e3_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1baaabe41_Short(_1baaab6e3_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1baaae938_Flag_eq(_1baaae938_Flag *_self_, _1baaae938_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1baaaeae2_Name(_1baaae938_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1baaaee00_What(_1baaae938_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1baab0043_Reset(_1baaae938_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1baab0186_Short(_1baaae938_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_1aa924d63_FlagSet> static__1aa925182_New(void) {
	return jule::new_ptr<_1aa924d63_FlagSet>(_1aa924d63_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1aa925638_FindFlag(_1aa924d63_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baab6b82:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1aa923290_CommonFlagMptrData*)_7215_flag.safe_type())->_1aa8e1659_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1baab6b82:;
			++it;
			goto _iter_begin_1baab6b82;
		}
		_iter_end_1baab6b82:;
	};
	return nullptr;;
}



inline jule::Trait _1aa925979_FindFlagShort(_1aa924d63_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baab7215:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1aa923290_CommonFlagMptrData*)_8215_flag.safe_type())->_1aa8e179c_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1baab7215:;
			++it;
			goto _iter_begin_1baab7215;
		}
		_iter_end_1baab7215:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1aa926051_Parse(_1aa924d63_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1aa927827_argParser _1167_ap = _1aa927827_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1aa928d56_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1baaae938_Flag> _1bae957ad_addFlagCommon(_1aa924d63_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1aa925638_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1aa925979_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1baaae938_Flag> _1407_flag = jule::new_ptr<_1baaae938_Flag>(_1baaae938_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1aa923290_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1baaab6e3_Flag> _1bae9de8c_addFlagCommon(_1aa924d63_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1aa925638_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1aa925979_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1baaab6e3_Flag> _1407_flag = jule::new_ptr<_1baaab6e3_Flag>(_1baaab6e3_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1aa923290_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1bae9327d_AddVar(_1aa924d63_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1baaae938_Flag> _1717_flag = _1bae957ad_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1bae9b9a1_AddVar(_1aa924d63_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1baaab6e3_Flag> _1717_flag = _1bae9de8c_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1baee8a20_parseInteger(_1aa927827_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1baeeb2d6:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1bd42a647_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1baeeb616:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1bd42a647_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1baeeb67c:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1bd42a647_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1baeeae84:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1baeeaeea:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1baeeae1d:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1baeead0d:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1bb00131e_parseInteger(_1aa927827_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1bb003bb2:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1bd42a647_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1bb003ee2:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1bd42a647_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1bb004058:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1bd42a647_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1bb003860:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1bb0038c6:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bb0037e9:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bb0036d9:;
	};
	return __jule_func_result;;
}



inline jule::Str _1aa928174_getData(_1aa927827_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1aa9283e9_processFlag(_1aa927827_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aa923290_CommonFlag_mptr_data3)) {
			_case_begin_1baabdc77:;
			{
				jule::Ptr<_1baaab6e3_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1baaab6e3_Flag>((jule::Trait::Type*)&_1aa923290_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1baabdb78:;
	};
	jule::Str _2203_data = _1aa928174_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_1aa923290_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1aa8e1659_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression missing", 20)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aa923290_CommonFlag_mptr_data0)) {
			_case_begin_1baee7ac9:;
			{
				jule::Ptr<_1baaa1e8b_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1baaa1e8b_Flag>((jule::Trait::Type*)&_1aa923290_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1baee8a20_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1baeec34d, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_1aa923290_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1aa8e1659_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid signed integer", 41)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aa923290_CommonFlag_mptr_data1)) {
			_case_begin_1baee7535:;
			{
				jule::Ptr<_1baaa5214_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1baaa5214_Flag>((jule::Trait::Type*)&_1aa923290_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1bb00131e_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1bb004c29, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_1aa923290_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1aa8e1659_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid unsigned integer", 43)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aa923290_CommonFlag_mptr_data2)) {
			_case_begin_1baee7b40:;
			{
				jule::Ptr<_1baaa8459_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1baaa8459_Flag>((jule::Trait::Type*)&_1aa923290_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1a49e8cb7_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_1aa923290_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1aa8e1659_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid floating-point", 41)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aa923290_CommonFlag_mptr_data4)) {
			_case_begin_1baee7ba6:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1baaae938_Flag>((jule::Trait::Type*)&_1aa923290_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1baee7458:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1aa9286a2_singleDash(_1aa927827_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1bb00a603:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1aa925979_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move((*(_25227_arg))); size += part0.len(); jule::Str part1 = std::move(jule::Str::lit(": flag is not exist: ", 21)); size += part1.len(); jule::Str part2 = std::move(__jule_strFromRune(_25710_r)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
				({
					auto except = _1aa9283e9_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1bb00a603:;
			it += len;
			goto _iter_begin_1bb00a603;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1aa92895a_doubleDash(_1aa927827_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	jule::Trait _2707_flag = _1aa925638_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type5)};
	};
	return _1aa9283e9_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1aa928b58_tryArg(_1aa927827_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1aa92895a_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1aa9286a2_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1aa928d56_parse(_1aa927827_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1aa928b58_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1bb010d67:;
	}
	_iter_end_1bb010d67:;;
	return jule::VoidExceptional{};
}







inline __jule_tuple_x_1a85e5c78_IR__jule_tuple_s_1bc0b03aa_Log static__1a85e6251_Build(jule::Str _3018_path, jule::I32 _3029_flags) {
	__jule_tuple_x_1a85e5c78_IR__jule_tuple_s_1bc0b03aa_Log __jule_func_result;
	jule::Ptr<_1a85e332a_Importer> _317_importer = static__1a85e3759_New(_1a85e7c03_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1a7976deb_AST>> _337_files;
	jule::Slice<_1bc0b03aa_Log> _3318_logs;
	({
		__jule_tuple_sx_1a7976deb_AST__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a85e4c44_ImportPackage(_317_importer.ptr(), _3018_path, true);
		_337_files = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Str _373_root = _3018_path;;
	if ((_337_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7976deb_AST> _457_firstFile = _337_files[0LL];;
	_1a85e7eab_pushRuntimeToAST(&(_457_firstFile));
	jule::Ptr<_1a7b62081_Package> _487_pkg;
	({
		__jule_tuple_x_1a7b62081_Package__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a7c54d22_AnalyzePackage(_337_files, jule::Trait(_317_importer, (jule::Trait::Type*)&_1a7b5b80b_Importer_mptr_data0), _3029_flags);
		_487_pkg = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1a85e5c78_IR> _537_ir = jule::new_ptr<_1a85e5c78_IR>(_1a85e5c78_IR{._field_Root=_373_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_487_pkg, ._field_Runtime=jule::Ptr<_1a7b5e80e_ImportInfo>(nullptr), ._field_Used=_1a85e39e0_AllPackages(_317_importer.ptr()), ._field_Ordered=_1a8604c87_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1a7997adc_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr)}});;
	(*(_537_ir))._field_Passes=_1a85e79e4_getAllUniquePasses(&((*_537_ir.alloc)._field_Main), (*_537_ir.alloc)._field_Used);
	(*_537_ir.alloc)._field_Runtime=(*((*(_487_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _537_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a85e673a_appendStructs(_1a85e5c78_IR* _self_, jule::Ptr<_1a7b62081_Package>* _6830_p, jule::Slice<jule::Ptr<_1a7997adc_Struct>>* _6854_buffer) {
	{
		auto expr = &((*((*(_6830_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad549534:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _6915_f = *it;
			{
				{
					auto expr = &((*(_6915_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad54a029:;
					if (it != expr_end) {
						jule::Ptr<_1a7997adc_Struct> _7016_s = *it;
						{
							if ((!((*(_7016_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1a7997adc_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push(_7016_s); };
							};
						}
						_iter_next_1ad54a029:;
						++it;
						goto _iter_begin_1ad54a029;
					}
					_iter_end_1ad54a029:;
				};
				{
					auto expr = &((*_6915_f.alloc)._field_TypeAliases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad54a3e2:;
					if (it != expr_end) {
						jule::Ptr<_1a7c31848_TypeAlias> _7516_ta = *it;
						{
							if (((!((*(_7516_ta))._field_Binded)) && (*_7516_ta.alloc)._field_Strict)) {
								{ jule::Slice<jule::Ptr<_1a7997adc_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push((*((*((*((*_7516_ta.alloc)._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)))._field_Decl); };
							};
						}
						_iter_next_1ad54a3e2:;
						++it;
						goto _iter_begin_1ad54a3e2;
					}
					_iter_end_1ad54a3e2:;
				};
			}
			_iter_next_1ad549534:;
			++it;
			goto _iter_begin_1ad549534;
		}
		_iter_end_1ad549534:;
	};
}



inline jule::Slice<jule::Ptr<_1a7997adc_Struct>> _1a85e69c1_GetAllStructures(_1a85e5c78_IR* _self_) {
	jule::Slice<jule::Ptr<_1a7997adc_Struct>> _8611_buffer = nullptr;;
	_1a85e673a_appendStructs(_self_, &((*(_self_))._field_Main), &(_8611_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad54beb5:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _8815_u = *it;
			{
				if ((!((*(_8815_u))._field_Binded))) {
					_1a85e673a_appendStructs(_self_, &((*_8815_u.alloc)._field_Package), &(_8611_buffer));
				};
			}
			_iter_next_1ad54beb5:;
			++it;
			goto _iter_begin_1ad54beb5;
		}
		_iter_end_1ad54beb5:;
	};
	return _8611_buffer;;
}



inline void _1a85e6d34_appendGlobals(_1a85e5c78_IR* _self_, jule::Ptr<_1a7b62081_Package>* _9630_p, jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>* _9654_buffer) {
	{
		auto expr = &((*((*(_9630_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad54e160:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _9715_f = *it;
			{
				{
					auto expr = &((*(_9715_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad54eb55:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba4eb4_Var> _9816_v = *it;
						{
							if (((((*(_9816_v))._field_Token != nullptr) && (!((*_9816_v.alloc)._field_Binded))) && (!((*_9816_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> &__jule_push_dest = (*(_9654_buffer)); __jule_push_dest.push(_9816_v); };
							};
						}
						_iter_next_1ad54eb55:;
						++it;
						goto _iter_begin_1ad54eb55;
					}
					_iter_end_1ad54eb55:;
				};
			}
			_iter_next_1ad54e160:;
			++it;
			goto _iter_begin_1ad54e160;
		}
		_iter_end_1ad54e160:;
	};
}



inline jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _1a85e70ba_GetAllGlobals(_1a85e5c78_IR* _self_) {
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _10911_buffer = nullptr;;
	_1a85e6d34_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10911_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad551492:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _11115_u = *it;
			{
				if ((!((*(_11115_u))._field_Binded))) {
					_1a85e6d34_appendGlobals(_self_, &((*_11115_u.alloc)._field_Package), &(_10911_buffer));
				};
			}
			_iter_next_1ad551492:;
			++it;
			goto _iter_begin_1ad551492;
		}
		_iter_end_1ad551492:;
	};
	return _10911_buffer;;
}



inline void _1a85e72b8_Order(_1a85e5c78_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1a85e70ba_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1a85e69c1_GetAllStructures(_self_);
	_1ad552eee_order((*(_self_))._field_Ordered._field_Globals);
	_1ad55372a_order((*(_self_))._field_Ordered._field_Structs);
}








inline jule::Bool _1bc2584ba_Dir_eq(_1bc2584ba_Dir *_self_, _1bc2584ba_Dir _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		_1bc28a7c7_Stat_eq(&_self_->_field_Stat, _self_->_field_Stat);
}

inline jule::Exceptional<jule::Slice<_1bc2584ba_Dir>> static__1bd437c1a_Read(jule::Str _1117_path) {
	jule::Slice<_1bc2584ba_Dir> __jule_func_result;
	jule::Slice<jule::U16> _123_utf16Path = _1d747a32b_UTF16FromStr(_1bd4367b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1117_path; (*it++) = jule::Str::lit("*", 1); __jule_collection; })));;
	WIN32_FIND_DATAW _137_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _143_handle = _1d7792698_FindFirstFile((&(_123_utf16Path[0LL])), (&(_137_data)));;
	if ((_143_handle == 4294967295LLU)) {
		return jule::Exceptional<jule::Slice<_1bc2584ba_Dir>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			_1bc2584ba_Dir _198_entry = _1bc2584ba_Dir{._field_Name=_1d747a8c0_U16PtrToStr(((jule::U16*)(_137_data.cFileName))), ._field_Stat=_1bc28a7c7_Stat{._field_mode=0LL, ._field_size=0}};;
			_198_entry._field_Stat=({
				auto except = static__1bd43dbbb_Of(_1bd4367b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1117_path; (*it++) = _198_entry._field_Name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<_1bc2584ba_Dir>>{.error=except.error};
				} _1bc28a7c7_Stat{._field_mode=0LL, ._field_size=0};});
			});
			{ jule::Slice<_1bc2584ba_Dir> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_198_entry); };
			if ((_1d7792a1c_FindNextFile(_143_handle, (&(_137_data))) == 0LL)) {
				goto _iter_end_1aaebce11;
			};
		}
	_iter_next_1aaebce11:;
	}
	_iter_end_1aaebce11:;;
	_1d7792cd6_FindClose(_143_handle);
	return jule::Exceptional<jule::Slice<_1bc2584ba_Dir>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1bd437e18_Create(jule::Str _3319_path) {
	jule::Slice<jule::U16> _383_utf16Path = _1d747a32b_UTF16FromStr(_3319_path);;
	if ((!(_1d7790399_CreateDirectory((&(_383_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_1bc2850c9_getLastFsErrorWindows(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1bd438149_Remove(jule::Str _4519_path) {
	jule::Slice<jule::U16> _463_utf16Path = _1d747a32b_UTF16FromStr(_4519_path);;
	if ((!(_1d7790663_RemoveDirectory((&(_463_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_1bc2850c9_getLastFsErrorWindows(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}







inline jule::Ptr<_1bc259059_Cmd> static__1bc2594aa_New(jule::Str _3516_path) {
	return jule::new_ptr<_1bc259059_Cmd>(_1bc259059_Cmd{._field_attrs=_1bc28335d_cmdAttrs{}, ._field_path=_3516_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _1bc2596a8_Spawn(_1bc259059_Cmd* _self_) {
	return _1bc283715_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1bc259b3c_Wait(_1bc259059_Cmd* _self_) {
	return _1bc283b99_wait(_self_);
}



inline jule::VoidExceptional _1bc283715_spawn(_1bc259059_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		__jule_panic_s(jule::Str::lit("process: command is already spawned", 35) + jule::Str("\nlocation: std/os/cmd_windows.jule:43:4"));;
	};
	STARTUPINFOW _457_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _467_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_457_startupInfo)), sizeof(STARTUPINFOW));
		ZeroMemory((&(_467_processInfo)), sizeof(PROCESS_INFORMATION));
	};
	_457_startupInfo.cb=sizeof(STARTUPINFOW);
	jule::Slice<jule::Str> _527_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	_527_args[0LL]=(*(_self_))._field_path;
	(_527_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _553_argv = _1d747a32b_UTF16FromStr(_1bc2842d7_makeCmdLine(_527_args));;
	jule::Slice<jule::U16> _563_env = ({
		auto except = _1bc2846b1_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _577_envp = (&(_563_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_577_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_553_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _577_envp, nullptr, (&(_457_startupInfo)), (&(_467_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_1bc284b12_getLastCmdError(), &__jule_any_type139)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_467_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_467_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1bc283b99_wait(_1bc259059_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		__jule_panic_s(jule::Str::lit("process: command is not spawned", 31) + jule::Str("\nlocation: std/os/cmd_windows.jule:86:4"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _897_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_897_exitCode)));
		_1d778dc16_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess)));
		_1d778dc16_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread)));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I32>{.result=static_cast<jule::I32>(_897_exitCode)};;
}







inline jule::I32 _1d747934c_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return ((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL);;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _1d7479616_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = (55296LL + ((_7819_r >> 10LL) & 1023LL));
	__jule_func_result.__jule_result_arg1 = (56320LL + (_7819_r & 1023LL));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _1d7479957_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I32 _886_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa93ace1:;
		if (it != expr_end) {
			jule::I32 *_899_v = it;
			{
				if (((*(_899_v)) >= 65536LL)) {
					(_886_n)++;
				};
			}
			_iter_next_1aa93ace1:;
			++it;
			goto _iter_begin_1aa93ace1;
		}
		_iter_end_1aa93ace1:;
	};
	jule::Slice<jule::U16> _956_a = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_886_n, _886_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_886_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa93bdbe:;
		if (it != expr_end) {
			jule::I32 *_979_v = it;
			{
				{
					
					if (((0LL <= (*(_979_v))) && ((*(_979_v)) < 55296LL)) || ((57344LL <= (*(_979_v))) && ((*(_979_v)) < 65536LL))) {
						_case_begin_1aa93ce14:;
						{
							_956_a[_886_n]=static_cast<jule::U16>((*(_979_v)));
							(_886_n)++;
						}
					}
					else if (((65536LL <= (*(_979_v))) && ((*(_979_v)) <= 1114111LL))) {
						_case_begin_1aa93cb28:;
						{
							jule::I32 _1054_r1;
							jule::I32 _1058_r2;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _1d7479616_EncodeRune((*(_979_v)));
								_1054_r1 = __jule_assign_result.__jule_result_arg0;
								_1058_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_956_a[_886_n]=static_cast<jule::U16>(_1054_r1);
							_956_a[(_886_n + 1LL)]=static_cast<jule::U16>(_1058_r2);
							_886_n+=2LL;
						}
					}
					else {
						_case_begin_1aa93c782:;
						{
							_956_a[_886_n]=static_cast<jule::U16>(65533LLU);
							(_886_n)++;
						}
					}
					_match_end_1aa93c672:;
				};
			}
			_iter_next_1aa93bdbe:;
			++it;
			goto _iter_begin_1aa93bdbe;
		}
		_iter_end_1aa93bdbe:;
	};
	return _956_a.slice(0LL, _886_n);;
}



inline jule::Slice<jule::I32> _1d7479bdd_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1206_a = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1216_n = 0LL;;
	jule::I32 _1226_i = 0LL;;
	for (; (_1226_i < _11911_s.len()); (_1226_i)++) {
		{
			jule::U16 _1243_r = _11911_s[_1226_i];;
			{
				
				if ((_1243_r < 55296LLU) || (57344LL <= _1243_r)) {
					_case_begin_1aa942226:;
					{
						_1206_a[_1216_n]=static_cast<jule::I32>(_1243_r);
					}
				}
				else if (((((_1243_r < 56320LLU) && ((_1226_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1226_i + 1LL)])) && (_11911_s[(_1226_i + 1LL)] < 57344LLU))) {
					_case_begin_1aa941ee5:;
					{
						_1206_a[_1216_n]=_1d747934c_DecodeRune(static_cast<jule::I32>(_1243_r), static_cast<jule::I32>(_11911_s[(_1226_i + 1LL)]));
						(_1226_i)++;
					}
				}
				else {
					_case_begin_1aa941b2c:;
					{
						_1206_a[_1216_n]=65533LL;
					}
				}
				_match_end_1aa941ab6:;
			};
			(_1216_n)++;
		}
	_iter_next_1aa940873:;
	}
	_iter_end_1aa940873:;;
	return _1206_a.slice(0LL, _1216_n);;
}



inline jule::Slice<jule::U16> _1d747a062_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1aa944965:;
			{
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_14929_r); __jule_collection; }));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1aa944a0e:;
			{
				jule::I32 _1563_r1;
				jule::I32 _1567_r2;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _1d7479616_EncodeRune(_14929_r);
					_1563_r1 = __jule_assign_result.__jule_result_arg0;
					_1567_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_1563_r1); (*it++) = static_cast<jule::U16>(_1567_r2); __jule_collection; }));;
			}
		}
		_match_end_1aa944877:;
	};
	return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 65533LLU; __jule_collection; }));;
}



inline jule::Slice<jule::U16> _1d747a32b_UTF16FromStr(jule::Str _1017_s) {
	;
	jule::Slice<jule::I32> _162_runes = __jule_strToRunes(_1017_s);;
	jule::Slice<jule::U16> _176_buff = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _162_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_162_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9660a2:;
		if (it != expr_end) {
			jule::I32 *_189_r = it;
			{
				if (((*(_189_r)) == 0LL)) {
					goto _iter_end_1aa9660a2;
				};
				_176_buff=_1d747a062_AppendRune(_176_buff, (*(_189_r)));
			}
			_iter_next_1aa9660a2:;
			++it;
			goto _iter_begin_1aa9660a2;
		}
		_iter_end_1aa9660a2:;
	};
	return _1d747a062_AppendRune(_176_buff, 0LL);;
}



inline jule::Str _1d747a606_UTF16ToStr(jule::Slice<jule::U16> _3015_s) {
	if ((_3015_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _346_codePage = _3015_s;;
	{
		auto expr = &(_3015_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9686ae:;
		if (it != expr_end) {
			jule::I32 _356_i = it - expr->begin();
			jule::U16 *_359_v = it;
			{
				if (((*(_359_v)) == 0LLU)) {
					(_346_codePage).mut_slice(0LL, _356_i);;
					goto _iter_end_1aa9686ae;
				};
			}
			_iter_next_1aa9686ae:;
			++it;
			_356_i++;
			goto _iter_begin_1aa9686ae;
		}
		_iter_end_1aa9686ae:;
	};
	return __jule_runesToStr(_1d7479bdd_Decode(_346_codePage));;
}



inline jule::Str _1d747a8c0_U16PtrToStr(jule::U16* _4623_s) {
	if ((_4623_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5110_codePage;;
	jule::I32 _526_i = 0LL;;
	for (; ; (_526_i)++) {
		{
			jule::U16 _543_r = _4623_s[_526_i];;
			if ((_543_r == 0LLU)) {
				return __jule_runesToStr(_1d7479bdd_Decode(_5110_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5110_codePage; __jule_push_dest.push(_543_r); };
		}
	_iter_next_1aa969605:;
	}
	_iter_end_1aa969605:;;
	return jule::Str();;
}



inline jule::Str _1d747b7c2_Str(jule::U8* _108_b, jule::I32 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1aa9745cc_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _1d7492909_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1aa9745cc_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _1d7492b90_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1d747b7c2_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _1d7492e59_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline jule::I32 _1d774742d_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _1d778d94c_GetStdHandle(jule::Uintptr _6517_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_6517_stdh)));;
}



inline jule::Bool _1d778dc16_CloseHandle(jule::Uintptr _6623_stdh) {
	return CloseHandle(((void*)(_6623_stdh)));;
}



inline jule::I32 _1d778e08a_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat) {
	return _wstat(((wchar_t*)(_6917_path)), ((struct _stat*)(_6933_stat)));;
}



inline jule::I32 _1d778e4b9_Wopen(jule::U16* _7417_path, jule::I32 _7429_flag, jule::I32 _7440_mode) {
	return _wopen(((wchar_t*)((&(_7417_path[0LL])))), _7429_flag, _7440_mode);;
}



inline jule::U32 _1d778e6c8_GetLastError(void) {
	return GetLastError();;
}



inline jule::U32 _1d778ea4c_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff) {
	return GetCurrentDirectoryW(_8331_bufflen, ((wchar_t*)(_8349_buff)));;
}



inline jule::Bool _1d77900d0_DeleteFile(jule::U16* _9422_path) {
	return DeleteFileW(((wchar_t*)(_9422_path)));;
}



inline jule::Bool _1d7790399_CreateDirectory(jule::U16* _9927_path) {
	return CreateDirectoryW(((wchar_t*)(_9927_path)), nullptr);;
}



inline jule::Bool _1d7790663_RemoveDirectory(jule::U16* _10427_path) {
	return RemoveDirectoryW(((wchar_t*)(_10427_path)));;
}



inline jule::U32 _1d7790b4c_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1102_buff, jule::U16** _11014_fname) {
	return GetFullPathNameW(((wchar_t*)(_10927_path)), _10939_bufflen, ((wchar_t*)(_1102_buff)), ((wchar_t**)(_11014_fname)));;
}



inline jule::Bool _1d7790ec1_GetConsoleMode(jule::Uintptr _11519_handle, jule::I32* _11540_mode) {
	return GetConsoleMode(((HANDLE)(_11519_handle)), ((DWORD*)(_11540_mode)));;
}



inline jule::Bool _1d77915cb_SetConsoleMode(jule::Uintptr _12019_handle, jule::I32 _12035_mode) {
	return SetConsoleMode(((HANDLE)(_12019_handle)), static_cast<DWORD>(_12035_mode));;
}



inline jule::Bool _1d7791b2b_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::U32 _12554_toWrite, jule::U32* _1267_written, void* _12621_reserved) {
	return WriteConsoleW(((HANDLE)(_12524_handle)), ((void*)(_12540_buffer)), static_cast<DWORD>(_12554_toWrite), ((DWORD*)((*(_1267_written)))), _12621_reserved);;
}



inline jule::Bool _1d7792115_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::U32 _13357_toRead, jule::U32* _1347_readed) {
	return ReadConsoleW(((HANDLE)(_13323_handle)), ((void*)(_13343_buffer)), static_cast<DWORD>(_13357_toRead), ((DWORD*)(_1347_readed)), nullptr);;
}



inline jule::Uintptr _1d7792698_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data) {
	return ((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14525_path)), ((WIN32_FIND_DATAW*)(_14541_data)))));;
}



inline jule::I32 _1d7792a1c_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data) {
	return FindNextFileW(((HANDLE)(_15024_h)), ((WIN32_FIND_DATAW*)(_15039_data)));;
}



inline jule::I32 _1d7792cd6_FindClose(jule::Uintptr _15514_h) {
	return FindClose(((HANDLE)(_15514_h)));;
}



inline jule::I32 _1d77a7a98_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I32 _1d77a7e72_Close(jule::I32 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I32 _1d77a8329_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _1d77a855a_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline __jule_tuple_i32__jule_tuple_int _1d78ac906_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _1d78ab66e_first[static_cast<jule::I32>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1952_sz = static_cast<jule::I32>((_1872_x & 7LLU));;
	_1d78abc24_acceptRange _1962_accept = _1d78ac0ba_acceptRanges[static_cast<jule::I32>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1d78acc47_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _1d78ab66e_first[static_cast<jule::I32>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2422_sz = static_cast<jule::I32>((_2342_x & 7LLU));;
	_1d78abc24_acceptRange _2432_accept = _1d78ac0ba_acceptRanges[static_cast<jule::I32>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1d78ad297_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _3212_end = _31722_s.len();;
	jule::I32 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_1d78ae9b3_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1aaa1cea0;
			};
		}
	_iter_next_1aaa1cea0:;
	}
	_iter_end_1aaa1cea0:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78acc47_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I32 _1d78ad561_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1aaa21745:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1aaa2147b:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1aaa21503:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1aaa2157a:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1aaa21602:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1aaa210d5:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1aaa20ee7:;
			{
				return -1LL;;
			}
		}
		_match_end_1aaa20de8:;
	};
}



inline jule::I32 _1d78ad9e5_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3762_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3762_i <= 127LLU)) {
			_case_begin_1aaa25a68:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(_37434_r);
				return 1LL;;
			}
		}
		else if ((_3762_i <= 2047LLU)) {
			_case_begin_1aaa23e95:;
			{
				_37419_p[0LL]=(192LLU | static_cast<jule::U8>((_37434_r >> 6LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 2LL;;
			}
		}
		else if ((_3762_i > 1114111LLU) || ((55296LL <= _3762_i) && (_3762_i <= 57343LLU))) {
			_case_begin_1aaa260c9:;
			{
				_37434_r=65533LL;
				goto _case_begin_1aaa26140;
			}
		}
		else if ((_3762_i <= 65535LLU)) {
			_case_begin_1aaa26140:;
			{
				_37419_p[0LL]=(224LLU | static_cast<jule::U8>((_37434_r >> 12LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 3LL;;
			}
		}
		else {
			_case_begin_1aaa23acc:;
			{
				_37419_p[0LL]=(240LLU | static_cast<jule::U8>((_37434_r >> 18LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[3LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 4LL;;
			}
		}
		_match_end_1aaa23a55:;
	};
}



inline jule::Slice<jule::U8> _1d78adce2_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _1d78ae166_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1d78ae166_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1aaa2bc06:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1aaa2bc6c:;
			{
				_41242_r=128LL;
				goto _case_begin_1aaa2b94d;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1aaa2b94d:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1aaa2b4ca:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1aaa2b453:;
	};
}



inline jule::I32 _1d78ae6e9_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1aaa35d75;
			};
			jule::U8 _4823_x = _1d78ab66e_first[static_cast<jule::I32>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1aaa35d75;
			};
			jule::I32 _4877_size = static_cast<jule::I32>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1aaa35d75;
			};
			_1d78abc24_acceptRange _4923_accept = _1d78ac0ba_acceptRanges[static_cast<jule::I32>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1aaa35d75:;
	}
	_iter_end_1aaa35d75:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d78ae9b3_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _1bbebb21c_LeadingZeros64(jule::U64 _5919_x) {
	return (64LL - _1bbec3aa4_Len64(_5919_x));;
}



inline jule::I32 _1bbebc163_TrailingZeros(jule::U32 _8118_x) {
	{
		return _1bbebca48_TrailingZeros32(static_cast<jule::U32>(_8118_x));;
	};
}



inline jule::I32 _1bbebca48_TrailingZeros32(jule::U32 _10320_x) {
	if ((_10320_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(_1bbebb816__DE_BRUIJN32_TAB[static_cast<jule::I32>(((jule::U32)((_10320_x & (-(_10320_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I32 _1bbebcd12_TrailingZeros64(jule::U64 _11220_x) {
	if ((_11220_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(_1bbebbdee__DE_BRUIJN64_TAB[static_cast<jule::I32>(((jule::U64)((_11220_x & (-(_11220_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I32 _1bbec37da_Len32(jule::U32 _35014_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35014_x >= 65536LLU)) {
		_35014_x=(_35014_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35014_x >= 256LLU)) {
		_35014_x=(_35014_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_35014_x))));
	return __jule_func_result;;
}



inline jule::I32 _1bbec3aa4_Len64(jule::U64 _36414_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36414_x >= 4294967296LLU)) {
		_36414_x=(_36414_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36414_x >= 65536LLU)) {
		_36414_x=(_36414_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36414_x >= 256LLU)) {
		_36414_x=(_36414_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_36414_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1bbec4841_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41310_x + _41318_y) + _41326_carry);
	__jule_func_result.__jule_result_arg1=(((_41310_x & _41318_y) | ((_41310_x | _41318_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1bbec614a_Mul64(jule::U64 _49710_x, jule::U64 _49718_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _4992_x0 = (_49710_x & 4294967295LLU);;
	jule::U64 _5002_x1 = (_49710_x >> 32LLU);;
	jule::U64 _5012_y0 = (_49718_y & 4294967295LLU);;
	jule::U64 _5022_y1 = (_49718_y >> 32LLU);;
	jule::U64 _5032_w0 = (jule::U64)(_4992_x0 * _5012_y0);;
	jule::U64 _5042_t = (jule::U64)((jule::U64)(_5002_x1 * _5012_y0) + (_5032_w0 >> 32LLU));;
	jule::U64 _5056_w1 = (_5042_t & 4294967295LLU);;
	jule::U64 _5062_w2 = (_5042_t >> 32LLU);;
	_5056_w1+=(jule::U64)(_4992_x0 * _5022_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5002_x1 * _5022_y1) + _5062_w2) + (_5056_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49710_x * _49718_y);
	return __jule_func_result;;
}



inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args) {
	return _1d78c1970__coSpawn(_1319_func, _1334_args);;
}



inline jule::U64 _1d7410de9_f64bits(jule::F64 _612_f) {
	return (*(((jule::U64*)((&(_612_f))))));;
}



inline jule::I32 _1d74117e0_randInt(jule::U64 _716_seed, jule::I32 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U32 _172_p2 = static_cast<jule::U32>(_162_p1);;
	return ({ jule::I32 __jule_x = static_cast<jule::I32>((({ jule::U32 __jule_x = _172_p2; jule::U32 __jule_y = 1LLU; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I32 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x % __jule_y)); });;
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I32>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_1a9418748:;
	}
	_iter_end_1a9418748:;;
	jule::I32 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1a9419a57:;
	}
	_iter_end_1a9419a57:;;
	return _1d7492e59_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _522_n = _1d7494268_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _1d7492e59_StrFromBytes(_516_buf);;
}



inline jule::I32 _1d7494268_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I32 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_1a941dd7a:;
	}
	_iter_end_1a941dd7a:;;
	jule::I32 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_1d7495412_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	;
	jule::U64 _832_bits = _1d7410de9_f64bits(_8017_f);;
	jule::Bool _842_neg = ((_832_bits >> 63LLU) != 0LLU);;
	jule::I32 _852_exp = (static_cast<jule::I32>((_832_bits >> 52LLU)) & 2047LLU);;
	jule::U64 _862_mant = (_832_bits & 4503599627370495LLU);;
	if ((_852_exp == 2047LLU)) {
		{
			
			if ((_862_mant != 0LLU)) {
				_case_begin_1aa479687:;
				{
					return jule::Str::lit("NaN", 3);;
				}
			}
			else if (_842_neg) {
				_case_begin_1aa479434:;
				{
					return jule::Str::lit("-Inf", 4);;
				}
			}
			else {
				_case_begin_1aa478e7d:;
				{
					return jule::Str::lit("+Inf", 4);;
				}
			}
			_match_end_1aa478da1:;
		};
	};
	;
	jule::I32 _1032_n = 26LL;;
	jule::Slice<jule::U8> _1046_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_1032_n, _1032_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1056_j = 0LL;;
	if (_842_neg) {
		_1046_buf[0LL]='-';
		(_1056_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _1122_intPart = static_cast<jule::U64>(_8017_f);;
	_1056_j+=_1d7494268_u64ToBuf(_1046_buf.slice(_1056_j), _1122_intPart);
	_1046_buf[_1056_j]='.';
	jule::F64 _1166_fracPart = (_8017_f - static_cast<jule::F64>(_1122_intPart));;
	jule::I32 _1176_i = 0LL;;
	for (; (_1176_i < 4LL); (_1176_i)++) {
		{
			_1166_fracPart*=10LL;
			jule::I32 _1203_digit = static_cast<jule::I32>(_1166_fracPart);;
			(_1056_j)++;
			_1046_buf[_1056_j]=static_cast<jule::U8>(('0' + _1203_digit));
			_1166_fracPart-=static_cast<jule::F64>(_1203_digit);
		}
	_iter_next_1aa47c547:;
	}
	_iter_end_1aa47c547:;;
	for (; (_1056_j >= 0LL); (_1056_j)--) {
		{
			if ((_1046_buf[_1056_j] != '0')) {
				goto _iter_end_1aa47d449;
			};
		}
	_iter_next_1aa47d449:;
	}
	_iter_end_1aa47d449:;;
	if ((_1046_buf[_1056_j] != '.')) {
		(_1056_j)++;
	};
	(_1046_buf).mut_slice(0LL, _1056_j);;
	return _1d7492e59_StrFromBytes(_1046_buf);;
}



inline jule::Str _1bae68a6c_arrToStr(jule::Slice<jule::U8> _14216_x) {
	jule::Slice<jule::U8> _1436_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_14216_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae6a189:;
		if (it != expr_end) {
			jule::I32 _1456_i = it - expr->begin();
			jule::U8 *_1459_z = it;
			{
				if ((_1456_i > 0LL)) {
					(_1436_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1436_buf).append(_1ab6daead_toStr((*(_1459_z))));;
			}
			_iter_next_1bae6a189:;
			++it;
			_1456_i++;
			goto _iter_begin_1bae6a189;
		}
		_iter_end_1bae6a189:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push(']'); };
	return _1d7492e59_StrFromBytes(_1436_buf);;
}



inline jule::Str _1bae5b851_structToStr(_1bc0a106b_Builder _17519_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1bae5e36a:;
				{
					;
					{
						
{
							_case_begin_1bae60943:;
							{
								;
								;
							}
						}
						_match_end_1bae60624:;
					};
				}
			}
			_match_end_1bae5e8ed:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1966_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1bae62a44:;
				{
					(_1966_buf).append(_1bae63072_toStr(_17519_x._field_buf));;
				}
			}
			_match_end_1bae62714:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('}'); };
	return _1d7492e59_StrFromBytes(_1966_buf);;
}



inline jule::Str _1aaacc5ae_toStr(jule::Any _21613_x) {
	;
	{
		
{
			_case_begin_1aaacd758:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aaacd626:;
	};
	{
		
{
			_case_begin_1aaace094:;
			{
				return _21613_x.type->to_str(_21613_x.data.alloc);;
			}
		}
		_match_end_1aaace56c:;
	};
}

inline jule::Str _1aab19673_toStr(jule::Str _21613_x) {
	;
	;
	{
		
{
			_case_begin_1aab1a92c:;
			{
				return _21613_x;;
			}
		}
		_match_end_1aab1aa1a:;
	};
}

inline jule::Str _1aaec0e25_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1aaec2b3b:;
			{
				return _1aaec7190_toStr(_21613_x);;
			}
		}
		_match_end_1aaec2146:;
	};
}

inline jule::Str _1aaec7190_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1aaec88ab:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1aaec848d:;
	};
}

inline jule::Str _1aa7692c3_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1aa76ae51:;
			{
				return _1aaec7190_toStr(_21613_x);;
			}
		}
		_match_end_1aa76a45b:;
	};
}

inline jule::Str _1ab6c4617_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ab6c63b6:;
			{
				return _1aaec7190_toStr(_21613_x);;
			}
		}
		_match_end_1ab6c58c1:;
	};
}

inline jule::Str _1ab6daead_toStr(jule::U8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ab6dc773:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1ab6dc29a:;
	};
}

inline jule::Str _1ab6db72d_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ab6e2404:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1ab6e2008:;
	};
}

inline jule::Str _1ab797971_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1ab7995dd:;
			{
				return _1aaec7190_toStr(_21613_x);;
			}
		}
		_match_end_1ab798ae8:;
	};
}

inline jule::Str _1abb653b0_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1abb66966:;
			{
				return __jule_i64ToStr(_21613_x);;
			}
		}
		_match_end_1abb66537:;
	};
}

inline jule::Str _1abb6568a_toStr(jule::U64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1abb6c31d:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1abb6bd45:;
	};
}

inline jule::Str _1abb6b10d_toStr(jule::Bool _21613_x) {
	;
	;
	{
		
{
			_case_begin_1abb721be:;
			{
				return __jule_boolToStr(_21613_x);;
			}
		}
		_match_end_1abb71b19:;
	};
}

inline jule::Str _1abb72675_toStr(jule::F64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1abb73d6e:;
			{
				return __jule_f64ToStr(_21613_x);;
			}
		}
		_match_end_1abb73885:;
	};
}

inline jule::Str _1abc2149e_toStr(jule::F32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1abc22d1e:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_1abc227d0:;
	};
}

inline jule::Str _1abc219cc_toStr(jule::I8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1abc27b7b:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1abc2774c:;
	};
}

inline jule::Str _1abc24804_toStr(jule::I16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1abc2d764:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1abc2d335:;
	};
}

inline jule::Str _1abc32e2d_toStr(jule::U8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1abc3545d:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1abc34e85:;
	};
}

inline jule::Str _1abc35eec_toStr(jule::U16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1abc3a50c:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1abc3a034:;
	};
}

inline jule::Str _1abc3b09b_toStr(jule::U32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1abc405ab:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1abc400d3:;
	};
}

inline jule::Str _1abe1b8db_toStr(jule::Ptr<_1a7ba4eb4_Var> _21613_x) {
	;
	{
		
{
			_case_begin_1abe1c9b9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abe1c887:;
	};
	{
		
{
			_case_begin_1abe1da75:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1abe1d7cd:;
	};
}

inline jule::Str _1abe1dcd9_toStr(jule::Ptr<_1a7c31848_TypeAlias> _21613_x) {
	;
	{
		
{
			_case_begin_1abe1ed62:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abe1ec30:;
	};
	{
		
{
			_case_begin_1abe20ed9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1abe1ec96:;
	};
}

inline jule::Str _1abe2124d_toStr(jule::Ptr<_1a7997adc_Struct> _21613_x) {
	;
	{
		
{
			_case_begin_1abe2345e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abe2332c:;
	};
	{
		
{
			_case_begin_1abe245d6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1abe23393:;
	};
}

inline jule::Str _1abe214c3_toStr(jule::Ptr<_1a7a70a83_Fn> _21613_x) {
	;
	{
		
{
			_case_begin_1abe269e5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abe26907:;
	};
	{
		
{
			_case_begin_1abe27bd3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1abe27782:;
	};
}

inline jule::Str _1abe28035_toStr(jule::Ptr<_1a7a7b297_Trait> _21613_x) {
	;
	{
		
{
			_case_begin_1abe2a2bd:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abe2a18b:;
	};
	{
		
{
			_case_begin_1abe2b445:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1abe2a202:;
	};
}

inline jule::Str _1abe28266_toStr(jule::Ptr<_1a7a7d94d_Enum> _21613_x) {
	;
	{
		
{
			_case_begin_1abe2d5ac:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abe2d447:;
	};
	{
		
{
			_case_begin_1abe2e712:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1abe2e327:;
	};
}

inline jule::Str _1abe2b6dc_toStr(jule::Ptr<_1a7a80158_TypeEnum> _21613_x) {
	;
	{
		
{
			_case_begin_1abe303d3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abe302a1:;
	};
	{
		
{
			_case_begin_1abe32825:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1abe3245c:;
	};
}

inline jule::Str _1abe4d269_toStr(jule::Ptr<_1a7996800_Field> _21613_x) {
	;
	{
		
{
			_case_begin_1abe4e3be:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abe4e28c:;
	};
	{
		
{
			_case_begin_1abe5047a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1abe501d3:;
	};
}

inline jule::Str _1abe5e885_toStr(jule::Ptr<_1a79ea9a8_Const> _21613_x) {
	;
	{
		
{
			_case_begin_1abe609da:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abe608a8:;
	};
	{
		
{
			_case_begin_1abe61a96:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1abe617ee:;
	};
}

inline jule::Str _1abe77c99_toStr(jule::Ptr<_1a7a7cde2_EnumItem> _21613_x) {
	;
	{
		
{
			_case_begin_1abe78ddd:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abe78cab:;
	};
	{
		
{
			_case_begin_1abe79e99:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1abe79c02:;
	};
}

inline jule::Str _1abe88947_toStr(jule::Ptr<_1a7a6e0ae_Param> _21613_x) {
	;
	{
		
{
			_case_begin_1abe89d33:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abc22417:;
	};
	{
		
{
			_case_begin_1abe8ae77:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1abc2247d:;
	};
}

inline jule::Str _1ac06e742_toStr(jule::Ptr<_1a79793b5_IdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac070ce8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac070bb6:;
	};
	{
		
{
			_case_begin_1ac071da4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac071b0c:;
	};
}

inline jule::Str _1ac092611_toStr(jule::Ptr<_1a7b312b4_MultiAssign> _21613_x) {
	;
	{
		
{
			_case_begin_1ac093865:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac093733:;
	};
	{
		
{
			_case_begin_1ac094921:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac094679:;
	};
}

inline jule::Str _1ac09a240_toStr(jule::Ptr<_1a797dbd3_TupleExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac09b7a2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac09b670:;
	};
	{
		
{
			_case_begin_1ac09c85d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac09c5b6:;
	};
}

inline jule::Str _1ac0a745b_toStr(jule::Ptr<_1a7987758_AssignSt> _21613_x) {
	;
	{
		
{
			_case_begin_1ac0a856c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac0a843a:;
	};
	{
		
{
			_case_begin_1ac0a9628:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac0a9381:;
	};
}

inline jule::Str _1ac0a8a78_toStr(jule::Ptr<_1a797d0de_Expr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac0aa162:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac0aa030:;
	};
	{
		
{
			_case_begin_1ac0ab361:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac0aa096:;
	};
}

inline jule::Str _1ac0a8da8_toStr(jule::Ptr<_1a7b3077a_Postfix> _21613_x) {
	;
	{
		
{
			_case_begin_1ac0ab96b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac0ab839:;
	};
	{
		
{
			_case_begin_1ac0ae41e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac0ab8a0:;
	};
}

inline jule::Str _1ac0b3643_toStr(jule::Ptr<_1a7b30c31_Assign> _21613_x) {
	;
	{
		
{
			_case_begin_1ac0ae7a4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac0ae6b6:;
	};
	{
		
{
			_case_begin_1ac0b1b4c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac0b150e:;
	};
}

inline jule::Str _1ac0b5dd7_toStr(jule::Ptr<_1a7bed89d_Data> _21613_x) {
	;
	{
		
{
			_case_begin_1ac0b209d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac0b1eb0:;
	};
	{
		
{
			_case_begin_1ac0b46cc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac0b2e39:;
	};
}

inline jule::Str _1ac0b86e2_toStr(jule::Ptr<_1a7a6588b_FnCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac0b5711:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac0b5601:;
	};
	{
		
{
			_case_begin_1ac0b7a43:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac0b5667:;
	};
}

inline jule::Str _1ac0d250d_toStr(jule::Ptr<_1a7b2ec41_Label> _21613_x) {
	;
	{
		
{
			_case_begin_1ac0d3630:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac0d34ed:;
	};
	{
		
{
			_case_begin_1ac0d46db:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac0d4444:;
	};
}

inline jule::Str _1ac100608_toStr(jule::Ptr<_1a7b2c238_Scope> _21613_x) {
	;
	{
		
{
			_case_begin_1ac10175d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac10162b:;
	};
	{
		
{
			_case_begin_1ac102819:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac102572:;
	};
}

inline jule::Str _1ac109722_toStr(jule::Ptr<_1a7a6b94c_BuiltinErrorCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac10a822:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac10a6e0:;
	};
	{
		
{
			_case_begin_1ac10b8cd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac10b636:;
	};
}

inline jule::Str _1ac10c846_toStr(jule::Ptr<_1a7a6c95e_BackendEmitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac10d814:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac10d6d2:;
	};
	{
		
{
			_case_begin_1ac110b35:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac10d748:;
	};
}

inline jule::Str _1ac10ceb7_toStr(jule::Ptr<_1a7a6a6c6_BuiltinAppendCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac11131c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac1111da:;
	};
	{
		
{
			_case_begin_1ac11243e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac111251:;
	};
}

inline jule::Str _1ac10ddb9_toStr(jule::Ptr<_1a7a69296_BuiltinPrintCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac1128e5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac1127d5:;
	};
	{
		
{
			_case_begin_1ac114c49:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac11372b:;
	};
}

inline jule::Str _1ac112c25_toStr(jule::Ptr<_1a7a69593_BuiltinPrintlnCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac114e03:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac115d05:;
	};
	{
		
{
			_case_begin_1ac1162bc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac1152dd:;
	};
}

inline jule::Str _1ac11540e_toStr(jule::Ptr<_1a7a69d46_BuiltinPanicCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac117697:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac118588:;
	};
	{
		
{
			_case_begin_1ac118ac7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac117a82:;
	};
}

inline jule::Str _1ac117ba3_toStr(jule::Ptr<_1a7a6b573_BuiltinCopyCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac119e3b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac11acd8:;
	};
	{
		
{
			_case_begin_1ac11b36b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac11a326:;
	};
}

inline jule::Str _1ac11dcdb_toStr(jule::Ptr<_1a7a6b199_BuiltinDeleteCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac11c6d0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac11d57c:;
	};
	{
		
{
			_case_begin_1ac11db10:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac11caba:;
	};
}

inline jule::Str _1ac11cbdb_toStr(jule::Ptr<_1a7a6cc5b_FreeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac120bde:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac10e34d:;
	};
	{
		
{
			_case_begin_1ac121195:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac10e3b4:;
	};
}

inline jule::Str _1ac12a875_toStr(jule::Ptr<_1a7b2cd2c_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_1ac12b9ca:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac12b898:;
	};
	{
		
{
			_case_begin_1ac12ca86:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac12c7de:;
	};
}

inline jule::Str _1ac135c8c_toStr(jule::Ptr<_1a7b2d129_InfIter> _21613_x) {
	;
	{
		
{
			_case_begin_1ac136de2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac136cb0:;
	};
	{
		
{
			_case_begin_1ac137e9d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac137c06:;
	};
}

inline jule::Str _1ac137d49_toStr(jule::Ptr<_1a7b2d5d0_WhileIter> _21613_x) {
	;
	{
		
{
			_case_begin_1ac136155:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac136078:;
	};
	{
		
{
			_case_begin_1ac139136:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac1361bb:;
	};
}

inline jule::Str _1ac140e51_toStr(jule::Ptr<_1a7b2e0b4_RangeIter> _21613_x) {
	;
	{
		
{
			_case_begin_1ac1420a6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac141e74:;
	};
	{
		
{
			_case_begin_1ac143162:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac142dba:;
	};
}

inline jule::Str _1ac150911_toStr(jule::Ptr<_1a798d176_WhileKind> _21613_x) {
	;
	{
		
{
			_case_begin_1ac151a33:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac151901:;
	};
	{
		
{
			_case_begin_1ac152ade:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac152847:;
	};
}

inline jule::Str _1ac15333c_toStr(jule::Ptr<_1a798da7d_RangeKind> _21613_x) {
	;
	{
		
{
			_case_begin_1ac15434e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac15421c:;
	};
	{
		
{
			_case_begin_1ac155482:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac1552a6:;
	};
}

inline jule::Str _1ac2cea7e_toStr(jule::Ptr<_1a7b2e3b1_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_1ac2d0bd4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac2d0aa2:;
	};
	{
		
{
			_case_begin_1ac2d1c90:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac2d19e8:;
	};
}

inline jule::Str _1ac2d848e_toStr(jule::Ptr<_1a7b303a1_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_1ac2d95e4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac2d94b2:;
	};
	{
		
{
			_case_begin_1ac2da6a0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac2da408:;
	};
}

inline jule::Str _1ac32185c_toStr(jule::Ptr<_1a797e909_IdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac32297e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac32284c:;
	};
	{
		
{
			_case_begin_1ac323a3a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac323793:;
	};
}

inline jule::Str _1ac345b28_toStr(jule::Ptr<_1a7a6621b_IndexingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac346c4a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac346b18:;
	};
	{
		
{
			_case_begin_1ac347d06:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac347a5e:;
	};
}

inline jule::Str _1ac38e2d1_toStr(jule::Ptr<_1a7b31c32_Match> _21613_x) {
	;
	{
		
{
			_case_begin_1ac390436:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac390304:;
	};
	{
		
{
			_case_begin_1ac3914e2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac39124a:;
	};
}

inline jule::Str _1ac3a327e_toStr(jule::Ptr<_1a7b32c22_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3a477a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3a4648:;
	};
	{
		
{
			_case_begin_1ac3a5836:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3a558e:;
	};
}

inline jule::Str _1ac3bd4b9_toStr(jule::Ptr<_1a7b2e78a_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3be19b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3be069:;
	};
	{
		
{
			_case_begin_1ac3c0257:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3beeb0:;
	};
}

inline jule::Str _1ac3c4349_toStr(jule::Ptr<_1a7b330b8_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3c549e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3c536c:;
	};
	{
		
{
			_case_begin_1ac3c655a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3c62b3:;
	};
}

inline jule::Str _1ac3d139a_toStr(jule::Ptr<_1a7988da8_ScopeTree> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3d24bc:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3d238a:;
	};
	{
		
{
			_case_begin_1ac3d3578:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3d32d1:;
	};
}

inline jule::Str _1ac3d29c8_toStr(jule::Ptr<_1a798bc02_VarDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3d4139:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3d4007:;
	};
	{
		
{
			_case_begin_1ac3d52c2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3d406d:;
	};
}

inline jule::Str _1ac3d1653_toStr(jule::Ptr<_1a7990981_TypeAliasDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3d5701:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3d5613:;
	};
	{
		
{
			_case_begin_1ac3d813d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3d5a42:;
	};
}

inline jule::Str _1ac3d8ca9_toStr(jule::Ptr<_1a7990167_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3da7a0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3da6b2:;
	};
	{
		
{
			_case_begin_1ac3db98d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3db53c:;
	};
}

inline jule::Str _1ac3d8da8_toStr(jule::Ptr<_1a798c84b_Iter> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3dd60a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3dd51c:;
	};
	{
		
{
			_case_begin_1ac3de793:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3dd74d:;
	};
}

inline jule::Str _1ac3e37ec_toStr(jule::Ptr<_1a798e331_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3debc2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3dead4:;
	};
	{
		
{
			_case_begin_1ac3e260e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3e0013:;
	};
}

inline jule::Str _1ac3e6668_toStr(jule::Ptr<_1a798638e_LabelSt> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3e27c9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3e3258:;
	};
	{
		
{
			_case_begin_1ac3e527c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3e30d2:;
	};
}

inline jule::Str _1ac3e9270_toStr(jule::Ptr<_1a7986768_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3e5c1c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3e5ada:;
	};
	{
		
{
			_case_begin_1ac3e80e8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3e5b51:;
	};
}

inline jule::Str _1ac3e7d62_toStr(jule::Ptr<_1a7991751_MatchCase> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3ea46e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3e8a77:;
	};
	{
		
{
			_case_begin_1ac3eb5e6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3eb20b:;
	};
}

inline jule::Str _1ac3ea97a_toStr(jule::Ptr<_1a7986a65_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3ebb9b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3eba69:;
	};
	{
		
{
			_case_begin_1ac3ee4c8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3ebad0:;
	};
}

inline jule::Str _1ac3edc69_toStr(jule::Ptr<_1a798de57_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_1ac3ee891:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac3ee75e:;
	};
	{
		
{
			_case_begin_1ac402267:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac3ee819:;
	};
}

inline jule::Str _1ac406337_toStr(jule::Ptr<_1a798c0cb_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_1ac40270c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac4025ca:;
	};
	{
		
{
			_case_begin_1ac4050d3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac402685:;
	};
}

inline jule::Str _1ac4091a3_toStr(jule::Ptr<_1a797d9b3_UseExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac405578:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac405446:;
	};
	{
		
{
			_case_begin_1ac407e4e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac405501:;
	};
}

inline jule::Str _1ac4b3702_toStr(jule::Ptr<_1a7995843_Impl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac4b4824:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac4b46e2:;
	};
	{
		
{
			_case_begin_1ac59a9e8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac5997d8:;
	};
}

inline jule::Str _1ac59c489_toStr(jule::Ptr<_1a7994996_StructDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac59d457:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac59d37a:;
	};
	{
		
{
			_case_begin_1ac5a0789:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac5a0316:;
	};
}

inline jule::Str _1ac5a0e93_toStr(jule::Ptr<_1a798aa47_FnDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac71108c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac710e5a:;
	};
	{
		
{
			_case_begin_1ac712148:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac711da1:;
	};
}

inline jule::Str _1ac7126cb_toStr(jule::Ptr<_1a79951d3_TraitDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac7136ee:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac7135bc:;
	};
	{
		
{
			_case_begin_1ac714876:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac713633:;
	};
}

inline jule::Str _1ac71715e_toStr(jule::Ptr<_1a7992d4b_EnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac7180d8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac717ea6:;
	};
	{
		
{
			_case_begin_1ac71a382:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac71a0da:;
	};
}

inline jule::Str _1ac71a904_toStr(jule::Ptr<_1a7993cd6_TypeEnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac71b88e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac71b75c:;
	};
	{
		
{
			_case_begin_1ac71ca16:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac71b7c3:;
	};
}

inline jule::Str _1ac7434ed_toStr(jule::Ptr<_1a7a6842c_StructSubIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac744730:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac7445ed:;
	};
	{
		
{
			_case_begin_1ac7457db:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac745544:;
	};
}

inline jule::Str _1ac743ba2_toStr(jule::Ptr<_1a7a63c85_UnaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac746cc6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac746b94:;
	};
	{
		
{
			_case_begin_1ac747e4d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac746c0a:;
	};
}

inline jule::Str _1ac7752bb_toStr(jule::Ptr<_1a7a73b41_FnIns> _21613_x) {
	;
	{
		
{
			_case_begin_1ac776421:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac7762de:;
	};
	{
		
{
			_case_begin_1ac7774cc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac777235:;
	};
}

inline jule::Str _1aca0a62d_toStr(jule::Ptr<_1a797b7c4_MapTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1aca0b750:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aca0b61d:;
	};
	{
		
{
			_case_begin_1aca0c80b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aca0c564:;
	};
}

inline jule::Str _1aca0e92e_toStr(jule::Ptr<_1a797a4d7_TupleTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac54ddca:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac54ced9:;
	};
	{
		
{
			_case_begin_1ac5500c9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac54eae0:;
	};
}

inline jule::Str _1ac60cc36_toStr(jule::Ptr<_1a797b076_ArrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac60dd69:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac60dc37:;
	};
	{
		
{
			_case_begin_1ac60ee25:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac60eb7d:;
	};
}

inline jule::Str _1ac612b1a_toStr(jule::Ptr<_1a797a1da_SlcTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac614e08:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac614cc6:;
	};
	{
		
{
			_case_begin_1ac615eb4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac615c1c:;
	};
}

inline jule::Str _1aca0ec92_toStr(jule::Ptr<_1a797a7d4_PtrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1aca1227d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aca1214b:;
	};
	{
		
{
			_case_begin_1aca13339:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aca13092:;
	};
}

inline jule::Str _1aca17aad_toStr(jule::Ptr<_1a7979d55_SptrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1aca18be1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aca18aae:;
	};
	{
		
{
			_case_begin_1aca19c9c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aca19a05:;
	};
}

inline jule::Str _1acb2d6a7_toStr(jule::Ptr<_1a7980575_VariadicExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1acb2e70d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acb2e5cb:;
	};
	{
		
{
			_case_begin_1acb307b9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1acb30522:;
	};
}

inline jule::Str _1acb32d2c_toStr(jule::Ptr<_1a7a65c65_SliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1acb35ba9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acb35a77:;
	};
	{
		
{
			_case_begin_1acb36c65:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1acb369bd:;
	};
}

inline jule::Str _1acb51d29_toStr(jule::Ptr<_1a798280d_FieldExprPair> _21613_x) {
	;
	{
		
{
			_case_begin_1acb52e4b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acb52d19:;
	};
	{
		
{
			_case_begin_1acb54007:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1acb53c60:;
	};
}

inline jule::Str _1acb5a32c_toStr(jule::Ptr<_1a7983e19_KeyValPair> _21613_x) {
	;
	{
		
{
			_case_begin_1acb5b44e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acb5b31c:;
	};
	{
		
{
			_case_begin_1acb5c50a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1acb5c263:;
	};
}

inline jule::Str _1acba0c79_toStr(jule::Ptr<_1a7a68e99_TupleExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1acba1dce:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acba1c9c:;
	};
	{
		
{
			_case_begin_1acba2e8a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1acba2be3:;
	};
}

inline jule::Str _1ac57e229_toStr(jule::Ptr<_1a7a64956_AllocStructLitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac58037e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac58024c:;
	};
	{
		
{
			_case_begin_1ac58143a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac581193:;
	};
}

inline jule::Str _1acc802ed_toStr(jule::Ptr<_1a7a64ed9_CastingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1acc81453:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acc81321:;
	};
	{
		
{
			_case_begin_1acc8250e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1acc82267:;
	};
}

inline jule::Str _1acc97579_toStr(jule::Ptr<_1a7a687c3_StructStaticIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1acc9857a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acc98448:;
	};
	{
		
{
			_case_begin_1acc99636:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1acc9938e:;
	};
}

inline jule::Str _1acc9a33a_toStr(jule::Ptr<_1a7981202_SubIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1acc9bd64:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acc9bc32:;
	};
	{
		
{
			_case_begin_1acc9e10d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1acc9c282:;
	};
}

inline jule::Str _1ac61868c_toStr(jule::Ptr<_1a7a64659_StructLitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac61a99c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac61a86a:;
	};
	{
		
{
			_case_begin_1ac61ba58:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac61b7b1:;
	};
}

inline jule::Str _1accb01eb_toStr(jule::Ptr<_1a7a6c5da_RuneExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1accb1351:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1accb121e:;
	};
	{
		
{
			_case_begin_1accb240c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1accb2165:;
	};
}

inline jule::Str _1ac64010e_toStr(jule::Ptr<_1a799a97a_StructIns> _21613_x) {
	;
	{
		
{
			_case_begin_1ac641264:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac641132:;
	};
	{
		
{
			_case_begin_1ac642320:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac642078:;
	};
}

inline jule::Str _1aca58a88_toStr(jule::Ptr<_1a7c3255d_Type> _21613_x) {
	;
	{
		
{
			_case_begin_1aca59bdd:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aca59aab:;
	};
	{
		
{
			_case_begin_1aca5ac99:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aca5aa02:;
	};
}

inline jule::Str _1ac86d88c_toStr(jule::Ptr<_1a7a68b9c_ArrayExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac86e9e2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac86e8b0:;
	};
	{
		
{
			_case_begin_1ac870a9d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac870806:;
	};
}

inline jule::Str _1ac8a9422_toStr(jule::Ptr<_1a797967e_SubIdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac8aa577:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac8aa445:;
	};
	{
		
{
			_case_begin_1ac8ab633:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac8ab38b:;
	};
}

inline jule::Str _1ac8ac59b_toStr(jule::Ptr<_1a798019b_UnaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac8ad5e1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac8ad4ae:;
	};
	{
		
{
			_case_begin_1ac8b0967:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac8ad525:;
	};
}

inline jule::Str _1ac8b4b47_toStr(jule::Ptr<_1a7978caa_TypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac8b795d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac8b782b:;
	};
	{
		
{
			_case_begin_1ac8b8ae6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac8b7892:;
	};
}

inline jule::Str _1ac8baad7_toStr(jule::Ptr<_1a7980d28_NamespaceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac8bddd7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac8bdca5:;
	};
	{
		
{
			_case_begin_1ac8bee93:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac8bebeb:;
	};
}

inline jule::Str _1ac8c1b54_toStr(jule::Ptr<_1a7979a58_NamespaceTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ac8c2ccb:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac8c2b99:;
	};
	{
		
{
			_case_begin_1ac8c511e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac8c2c10:;
	};
}

inline jule::Str _1ac90c95e_toStr(jule::Ptr<_1a7a67508_SlicingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac90da5e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac90d92c:;
	};
	{
		
{
			_case_begin_1ac90eb1a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac90e873:;
	};
}

inline jule::Str _1ac97a735_toStr(jule::Ptr<_1a7984645_SliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ac97b857:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac97b725:;
	};
	{
		
{
			_case_begin_1ac97c913:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ac97c66b:;
	};
}

inline jule::Str _1acd36e65_toStr(jule::Ptr<_1a7a67a8b_TraitSubIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1acd380a9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acd37e77:;
	};
	{
		
{
			_case_begin_1acd39165:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1acd38dbd:;
	};
}

inline jule::Str _1ab242790_toStr(jule::Ptr<_1a7a66e75_MapExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ab2442ec:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab2441ba:;
	};
	{
		
{
			_case_begin_1ab2453a8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab245111:;
	};
}

inline jule::Str _1ab255165_toStr(jule::Ptr<_1a7a666c2_AnonFnExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ab2562a9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab256177:;
	};
	{
		
{
			_case_begin_1ab257365:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab2570bd:;
	};
}

inline jule::Str _1ab25bd81_toStr(jule::Ptr<_1a797d3a8_RangeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ab25cea3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab25cd71:;
	};
	{
		
{
			_case_begin_1ab25e05e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab25dcb7:;
	};
}

inline jule::Str _1ab25d4ae_toStr(jule::Ptr<_1a797e079_LitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ab26033a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab26024c:;
	};
	{
		
{
			_case_begin_1ab261528:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab2610c7:;
	};
}

inline jule::Str _1ab261b00_toStr(jule::Ptr<_1a797e453_UnsafeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ab2649e3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab2648b1:;
	};
	{
		
{
			_case_begin_1ab266d03:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab264927:;
	};
}

inline jule::Str _1ab2668b3_toStr(jule::Ptr<_1a79850a2_IndexingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ab267cd2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab267b7d:;
	};
	{
		
{
			_case_begin_1ab268e48:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab268a5d:;
	};
}

inline jule::Str _1ab26cea2_toStr(jule::Ptr<_1a7985712_SlicingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ab269960:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab26982d:;
	};
	{
		
{
			_case_begin_1ab26bd08:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab269894:;
	};
}

inline jule::Str _1ab268d16_toStr(jule::Ptr<_1a798094e_CastExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ab26c19e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab26c06c:;
	};
	{
		
{
			_case_begin_1ab26ea75:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab26c127:;
	};
}

inline jule::Str _1ab26cc1b_toStr(jule::Ptr<_1a7983138_StructLit> _21613_x) {
	;
	{
		
{
			_case_begin_1ab271ea6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab2705ae:;
	};
	{
		
{
			_case_begin_1ab2730b7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab272c43:;
	};
}

inline jule::Str _1ab2724b2_toStr(jule::Ptr<_1a7981d18_FnCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ab2754e8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab2753b6:;
	};
	{
		
{
			_case_begin_1ab276670:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab27542c:;
	};
}

inline jule::Str _1ab275d9a_toStr(jule::Ptr<_1a79835de_BraceLit> _21613_x) {
	;
	{
		
{
			_case_begin_1ab279211:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab2790ce:;
	};
	{
		
{
			_case_begin_1ab27a3bb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab279145:;
	};
}

inline jule::Str _1ab27971c_toStr(jule::Ptr<_1a79816a8_BinaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ab27c764:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab27c632:;
	};
	{
		
{
			_case_begin_1ab27d8db:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab27c698:;
	};
}

inline jule::Str _1acab0826_toStr(jule::Ptr<_1a7a638ab_BinaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1acab198c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acab185a:;
	};
	{
		
{
			_case_begin_1acab2a48:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1acab27a1:;
	};
}

inline jule::Str _1ad19e3cb_toStr(jule::Ptr<_1a7a6996c_BuiltinNewCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad1a0531:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad1a03ee:;
	};
	{
		
{
			_case_begin_1ad1a15dc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad1a1345:;
	};
}

inline jule::Str _1ad1b4897_toStr(jule::Ptr<_1a7a6a2ec_BuiltinMakeCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad1b59ec:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad1b58ba:;
	};
	{
		
{
			_case_begin_1ad1b6aa8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad1b6811:;
	};
}

inline jule::Str _1ad1e8ba6_toStr(jule::Ptr<_1a7a6a9c3_BuiltinLenCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad1e9d0b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad1e9bc9:;
	};
	{
		
{
			_case_begin_1ad1eadb7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad1eab20:;
	};
}

inline jule::Str _1ad21342e_toStr(jule::Ptr<_1a7a6acc0_BuiltinCapCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad214584:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad214452:;
	};
	{
		
{
			_case_begin_1ad215640:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad215398:;
	};
}

inline jule::Str _1ad25850c_toStr(jule::Ptr<_1a7a6bc49_SizeofExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad259596:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad259464:;
	};
	{
		
{
			_case_begin_1ad25a652:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad25a3aa:;
	};
}

inline jule::Str _1ad26211a_toStr(jule::Ptr<_1a7a6c3ed_AlignofExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad2631a4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad263072:;
	};
	{
		
{
			_case_begin_1ad264260:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad263eb8:;
	};
}

inline jule::Str _1ad744234_toStr(jule::Ptr<_1a69a1e7c_ExceptionalForwardingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad745378:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad745246:;
	};
	{
		
{
			_case_begin_1ad746434:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad74618c:;
	};
}

inline jule::Str _1ad8a37d3_toStr(jule::Ptr<_1a69a4e4c_StrRuneIter> _21613_x) {
	;
	{
		
{
			_case_begin_1ad8a4927:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad8a47e5:;
	};
	{
		
{
			_case_begin_1ad8a59d3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad8a573b:;
	};
}

inline jule::Str _1ad8ad5ce_toStr(jule::Ptr<_1a69a3bc6_MutSlicingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad8ae723:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad8ae5e1:;
	};
	{
		
{
			_case_begin_1ad8b07ce:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad8b0537:;
	};
}

inline jule::Str _1ad8e345a_toStr(jule::Ptr<_1a69a4a73_AppendToSliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad8e459e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad8e446c:;
	};
	{
		
{
			_case_begin_1ad8e565a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad8e53b3:;
	};
}

inline jule::Str _1ad8e598a_toStr(jule::Ptr<_1a69a4699_PushToSliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad8e6b01:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad8e69be:;
	};
	{
		
{
			_case_begin_1ad8e7c78:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad8e6a35:;
	};
}

inline jule::Str _1ad917308_toStr(jule::Ptr<_1a69a292d_SwapExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad91845d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad91832b:;
	};
	{
		
{
			_case_begin_1ad919519:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad919272:;
	};
}

inline jule::Str _1ad9721ed_toStr(jule::Ptr<_1a69a1ba2_StrFromBytes> _21613_x) {
	;
	{
		
{
			_case_begin_1ad973353:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad973221:;
	};
	{
		
{
			_case_begin_1ad97440e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad974167:;
	};
}

inline jule::Str _1ad97b746_toStr(jule::Ptr<_1a69a2d07_EmptyCompareExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad97c89b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad97c769:;
	};
	{
		
{
			_case_begin_1ad97d957:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad97d6b0:;
	};
}

inline jule::Str _1ad97e1d8_toStr(jule::Ptr<_1a69a3643_StrCompExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad98034e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad98021c:;
	};
	{
		
{
			_case_begin_1ad981509:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad980283:;
	};
}

inline jule::Str _1ad98a502_toStr(jule::Ptr<_1a69a2587_StrConcatExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad98e193:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad98e061:;
	};
	{
		
{
			_case_begin_1ad99024e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad98eea7:;
	};
}

inline jule::Str _1ad9b3481_toStr(jule::Ptr<_1a69a3ec3_UnsafeBinaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad9b4581:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad9b444e:;
	};
	{
		
{
			_case_begin_1ad9b563c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad9b5395:;
	};
}

inline jule::Str _1ad754e6a_toStr(jule::Ptr<_1a69a5249_UnsafeDerefExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad7560c0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad755e8d:;
	};
	{
		
{
			_case_begin_1ad75717b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad756dd4:;
	};
}

inline jule::Str _1ad712642_toStr(jule::Ptr<_1a69a3104_RefExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad713797:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad713665:;
	};
	{
		
{
			_case_begin_1ad714853:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad7145ab:;
	};
}

inline jule::Str _1ad715aa7_toStr(jule::Ptr<_1a7a642b3_StructArgExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad716c0c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad716aca:;
	};
	{
		
{
			_case_begin_1ad718e40:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad718b21:;
	};
}

inline jule::Str _1ad71d186_toStr(jule::Ptr<_1a69a5777_UnsafeCastingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad71e2ca:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad71e198:;
	};
	{
		
{
			_case_begin_1ad720386:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad7200de:;
	};
}

inline jule::Str _1ad9eae36_toStr(jule::Ptr<_1a69a2213_FnCallIgnoreExceptionalExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad9ec08b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad9ebe59:;
	};
	{
		
{
			_case_begin_1ad9ed147:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad9ecda0:;
	};
}

inline jule::Str _1ad767653_toStr(jule::Ptr<_1a69a42c0_UnsafeIndexingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad7687a8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad768676:;
	};
	{
		
{
			_case_begin_1ad769864:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad7695bc:;
	};
}

inline jule::Str _1adb8b7e1_toStr(jule::Ptr<jule::Str> _21613_x) {
	;
	{
		
{
			_case_begin_1adb8c87a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1adb8c748:;
	};
	{
		
{
			_case_begin_1adb8d936:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1adb8d68e:;
	};
}

inline jule::Str _1bae546c3_toStr(_1bc0a106b_Builder _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bae57c48:;
			{
				return _1bae5b851_structToStr(_21613_x);;
			}
		}
		_match_end_1bae57396:;
	};
}

inline jule::Str _1bae63072_toStr(jule::Slice<jule::U8> _21613_x) {
	;
	{
		
{
			_case_begin_1bae64381:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bae64282:;
	};
	{
		
{
			_case_begin_1bae6543c:;
			{
				return _1bae68a6c_arrToStr(_21613_x);;
			}
		}
		_match_end_1bae65096:;
	};
}

inline jule::Str _1bae67a5a_toStr(jule::Str _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bae5aad6:;
			{
				return _1aab19673_toStr(_21613_x);;
			}
		}
		_match_end_1bae6b5db:;
	};
}

inline jule::Str _1bae6b83e_toStr(jule::Str _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bae583a8:;
			{
				return _1aab19673_toStr(_21613_x);;
			}
		}
		_match_end_1bae5772b:;
	};
}



inline void _1d7495412_rev(jule::Slice<jule::U8> _26512_b) {
	jule::I32 _2666_i = 0LL;;
	for (; (_2666_i < (_26512_b.len() >> 1LL)); (_2666_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _26512_b[((_26512_b.len() - 1LL) - _2666_i)];
				jule::U8 _1___jule_assign_arg = _26512_b[_2666_i];
				_26512_b[_2666_i] = ___jule_assign_arg;
				_26512_b[((_26512_b.len() - 1LL) - _2666_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1aa47880c:;
	}
	_iter_end_1aa47880c:;;
}



inline jule::Bool _1aaaeb622_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1aaaed4d1:;
	}
	_iter_end_1aaaed4d1:;;
	return true;;
}

inline jule::Bool _1aab4bcb0_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1aab4d61e:;
	}
	_iter_end_1aab4d61e:;;
	return true;;
}

inline jule::Bool _1ab8e8ae4_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1ab8ea497:;
	}
	_iter_end_1ab8ea497:;;
	return true;;
}

inline jule::Bool _1acc45219_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1acc47084:;
	}
	_iter_end_1acc47084:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I32 _1328_n) {
	__jule_writeStderr(_1d7492909_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_1aa9745cc_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_1d7492909_StrBytes(jule::Str::lit("\n", 1)));
	_1d77a855a_Exit(2LL);
}



inline void _1d78b0695__handleRW(jule::Slice<jule::U8>* _1115_b) {
}



inline jule::I32 _1d78b0a5d_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_1545_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _192_utf16Buf = _1d747a32b_UTF16FromStr(_1d7492b90_BytesStr(_1545_buf));;
	jule::U32 _206_written = static_cast<jule::U32>(0LLU);;
	jule::Bool _212_ok = _1d7791b2b_WriteConsole(_1524_handle, (&(_192_utf16Buf[0LL])), static_cast<jule::U32>(_192_utf16Buf.len()), &(_206_written), nullptr);;
	if ((!(_212_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	__jule_func_result = _1545_buf.len();
	return __jule_func_result;;
}



inline jule::I32 _1d78b0dd2_readConsole(jule::Uintptr _3023_handle, jule::Slice<jule::U8> _3048_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_3048_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _346_codepage = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_3048_buf.len(), _3048_buf.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _356_readed = static_cast<jule::U32>(0LLU);;
	jule::Bool _362_ok = _1d7792115_ReadConsole(_3023_handle, (&(_346_codepage[0LL])), static_cast<jule::U32>(_346_codepage.len()), &(_356_readed));;
	if ((!(_362_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::I32> _412_runes = _1d7479bdd_Decode(_346_codepage.slice(0LL, static_cast<jule::I32>(_356_readed)));;
	__jule_func_result=0LL;
	{
		auto expr = &(_412_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa6c354b:;
		if (it != expr_end) {
			jule::I32 *_439_r = it;
			{
				jule::I32 _443_size = _1d78ad561_RuneLen((*(_439_r)));;
				if (((__jule_func_result + _443_size) > _3048_buf.len())) {
					goto _iter_end_1aa6c354b;
				};
				_1d78ad9e5_EncodeRune(_3048_buf.slice(__jule_func_result), (*(_439_r)));
				__jule_func_result+=_443_size;
			}
			_iter_next_1aa6c354b:;
			++it;
			goto _iter_begin_1aa6c354b;
		}
		_iter_end_1aa6c354b:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::I32 __jule_writeStdout(jule::Slice<jule::U8> _5816_buf) {
	_1d78c09c4_handleRW(&(_5816_buf));
	return _1d78b0a5d_writeConsole(_1d778d3db_STDOUT, _5816_buf);;
}



inline jule::I32 __jule_writeStderr(jule::Slice<jule::U8> _6616_buf) {
	_1d78c09c4_handleRW(&(_6616_buf));
	return _1d78b0a5d_writeConsole(_1d778d6d8_STDERR, _6616_buf);;
}



inline jule::I32 __jule_readStdin(jule::Slice<jule::U8> _7418_buf) {
	_1d78c09c4_handleRW(&(_7418_buf));
	return _1d78b0dd2_readConsole(_1d778d144_STDIN, _7418_buf);;
}



inline jule::U32 _1a94290a5_atomicLoad(jule::U32* _3525_p, jule::I32 _3532_mo) {
	jule::U32 _3610_tmp = 0;;
	__atomic_load(_3525_p, (&(_3610_tmp)), _3532_mo);
	return _3610_tmp;;
}



inline jule::U32 _1a9429270_atomicAdd(jule::U32* _4628_p, jule::U32 _4635_delta, jule::I32 _4645_mo) {
	jule::U32 __jule_func_result = 0;
	__jule_func_result = __atomic_fetch_add(_4628_p, _4635_delta, _4645_mo);
	return __jule_func_result;;
}



inline jule::Slice<jule::Str> _1d78b7b53_args(void) {
	wchar_t* _166_cmdl = GetCommandLineW();;
	wchar_t** _176_argvw = CommandLineToArgvW(_166_cmdl, ((signed*)((&(__jule_argc)))));;
	jule::Slice<jule::Str> _186_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_186_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa6c9e26:;
		if (it != expr_end) {
			jule::I32 _196_i = it - expr->begin();
			{
				_186_args[_196_i]=_1d747a8c0_U16PtrToStr(((jule::U16*)(_176_argvw[_196_i])));
			}
			_iter_next_1aa6c9e26:;
			++it;
			_196_i++;
			goto _iter_begin_1aa6c9e26;
		}
		_iter_end_1aa6c9e26:;
	};
	{
		LocalFree(_176_argvw);
	};
	return _186_args;;
}



inline jule::Str _1d78b8109_executable(void) {
	;
	jule::Slice<jule::U16> _486_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(260LL, 260LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _492_n = GetModuleFileNameW(nullptr, ((wchar_t*)((&(_486_buf[0LL])))), 260LL);;
	if ((_492_n > 0LL)) {
		_486_buf[_492_n]=0LLU;
		return _1d747a8c0_U16PtrToStr((&(_486_buf[0LL])));;
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_windows.jule:54:2"));;
}



inline jule::U32* __jule_RCNew(void) {
	;
	;
	jule::U32* _256_p = ((jule::U32*)(malloc(4LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline jule::U32 __jule_RCLoadAtomic(jule::U32* _4625_p) {
	return _1a94290a5_atomicLoad(_4625_p, 5LL);;
}



inline void __jule_RCAddAtomic(jule::U32* _6328_p) {
	_1a9429270_atomicAdd(_6328_p, 1LLU, 5LL);
}



inline jule::Bool __jule_RCDropAtomic(jule::U32* _8429_p) {
	return (_1a9429270_atomicAdd(_8429_p, jule::MAX_U64, 5LL) > 1LLU);;
}



inline void __jule_RCFree(jule::U32* _9219_p) {
	free(_9219_p);
}



inline jule::I32 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I32 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I32 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_1aa481969:;
	}
	_iter_end_1aa481969:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _1d7492e59_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_4415_runes.len() << 2LLU)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa48660b:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_1d78adce2_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_1aa48660b:;
			++it;
			goto _iter_begin_1aa48660b;
		}
		_iter_end_1aa48660b:;
	};
	return _1d7492e59_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _1d78ae6e9_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I32 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78acc47_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1aa48708a:;
	}
	_iter_end_1aa48708a:;;
	return _556_buf;;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _1d7492e59_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_1d78adce2_AppendRune(_846_buf, _8316_r);
	return _1d7492e59_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I32 _9430_n, jule::I32* _9442_r, jule::I32* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _1aa9745cc_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78ac906_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78ac906_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline jule::I32 __jule_runeCount(jule::Str _10514_s) {
	return _1d78ae6e9_RuneCountStr(_10514_s);;
}



inline void _1d78c09c4_handleRW(jule::Slice<jule::U8>* _814_b) {
	_1d78b0695__handleRW(_814_b);
}



inline jule::Bool _1d78c1970__coSpawn(void* _1020_func, void* _1035_args) {
	void* _112_handle = CreateThread(nullptr, 0LL, (unsigned long(*)(void*))(_1020_func), _1035_args, 0LL, nullptr);;
	if ((_112_handle == nullptr)) {
		return false;;
	};
	_1d778dc16_CloseHandle(((jule::Uintptr)(_112_handle)));
	return true;;
}



inline jule::U64 _1bbddaee9_hash128to64(_1bbddab42_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _1bbddb307_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__1bbdd7512_DecodeU64(_5312_bytes);;
}



inline jule::U32 _1bbddb5c1_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__1bbdd6ad8_DecodeU32(_5412_bytes);;
}



inline jule::U64 _1bbddb912_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _1bbddbc53_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _1bbddaee9_hash128to64(_1bbddab42_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _1bbddc0c7_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _1bbddc506_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _1bbddc98a_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I32 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_1bbddb307_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _1bbddb307_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_1bbddc0c7_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_1bbddc0c7_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _1bbddc506_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_1bbddb5c1_fetch32(_7517_bytes));;
		return _1bbddc506_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_1bbddb5c1_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = _7517_bytes[0LL];;
		jule::U8 _933_b = _7517_bytes[(_7532_n >> 1LL)];;
		jule::U8 _943_c = _7517_bytes[(_7532_n - 1LL)];;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I32 _963_z = (_7532_n + (static_cast<jule::I32>(_943_c) << 2LL));;
		return (jule::U64)(_1bbddb912_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _1bbddab42_u128 _1bbddcd42_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I32 _10334_n, _1bbddab42_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I32 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_1bbddb912_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _1bbddc98a_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_1bbddb912_shiftMix((jule::U64)(_1046_a + _1bbddb307_fetch64(_10319_bytes)));
		} else {
			_1076_d=_1bbddb912_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_1bbddbc53_hashLen16((jule::U64)(_1bbddb307_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_1bbddbc53_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _1bbddb307_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_1bbddb912_shiftMix((jule::U64)(_1bbddb307_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_1bbddb912_shiftMix((jule::U64)(_1bbddb307_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_1aa490923;
				};
			}
		_iter_next_1aa490923:;
		}
		_iter_end_1aa490923:;;
	};
	_1046_a=_1bbddbc53_hashLen16(_1046_a, _1066_c);
	_1056_b=_1bbddbc53_hashLen16(_1076_d, _1056_b);
	return _1bbddab42_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_1bbddbc53_hashLen16(_1056_b, _1046_a)};;
}



inline _1bbddab42_u128 _1bbddd491_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_1bbddc0c7_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_1bbddc0c7_rotate64(_14563_a, 44LLU);
	return _1bbddab42_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _1bbddab42_u128 _1bbddd8c0_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _1bbddd491_weakHashLen32WithSeeds(_1bbddb307_fetch64(_15529_bytes), _1bbddb307_fetch64(_15529_bytes.slice(8LL)), _1bbddb307_fetch64(_15529_bytes.slice(16LL)), _1bbddb307_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _1bbddab42_u128 _1bbdddcee_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I32 _16040_n, _1bbddab42_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _1bbddcd42_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I32 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_1bbddab42_u128 _16910_v = _1bbddab42_u128{._field_hi=0, ._field_lo=0};;
	_1bbddab42_u128 _17010_w = _1bbddab42_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_1bbddc0c7_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _1bbddb307_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_1bbddc0c7_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _1bbddb307_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_1bbddc0c7_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_1bbddc0c7_rotate64((jule::U64)(_1716_x + _1bbddb307_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_1bbddc0c7_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1bbddb307_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1bbddc0c7_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1bbddb307_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1bbddb307_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1bbddc0c7_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1bbddd8c0_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1bbddd8c0_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1bbddb307_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_1bbddc0c7_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1bbddb307_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1bbddc0c7_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1bbddb307_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1bbddb307_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1bbddc0c7_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1bbddd8c0_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1bbddd8c0_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1bbddb307_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_1aa978a76;
			};
		}
	_iter_next_1aa978a76:;
	}
	_iter_end_1aa978a76:;;
	_1716_x+=(jule::U64)(_1bbddc0c7_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _1bbddc0c7_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _1bbddc0c7_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I32 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_1bbddc0c7_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_1bbddb307_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _1bbddb307_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_1bbddd8c0_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_1aaab49e7:;
	}
	_iter_end_1aaab49e7:;;
	_1716_x=_1bbddbc53_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_1bbddbc53_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _1bbddab42_u128{._field_hi=(jule::U64)(_1bbddbc53_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_1bbddbc53_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _1bbdde0b8_hash(jule::Slice<jule::U8> _23413_bytes) {
	_1bbddab42_u128 _2356_sum = _1bbddab42_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_1bbdddcee_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _1bbddab42_u128{._field_hi=_1bbddb307_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_1bbddb307_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_1bbdddcee_hashWithSeed(_23413_bytes, _23413_bytes.len(), _1bbddab42_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _1bbddaee9_hash128to64(_2356_sum);;
}



inline jule::U64 _1bbeca7c0_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _1bbecb1d8_hasZeroByte((_1bbecb46e_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _1bbecaacd_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _1bbecb1d8_hasZeroByte((_1bbecb46e_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _1bbecad97_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_1bbebcd12_TrailingZeros64((*(_6419_b))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _1bbecb1d8_hasZeroByte(jule::U64 _7016_x) {
	return (((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU);;
}



inline jule::U64 _1bbecb46e_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I32 _1bbecb738_numGroups(jule::I32 _7914_n) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result=(((_7914_n + 4LL) - 1LL) >> 2LLU);
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _1bbecb947_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaabe826:;
		if (it != expr_end) {
			jule::I32 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_1aaabe826:;
			++it;
			_886_i++;
			goto _iter_begin_1aaabe826;
		}
		_iter_end_1aaabe826:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _1bbecbd21_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = ((_9414_h & 18446744073709551488LLU) >> 7LLU);
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _1bbecc11d_probeStart(jule::U64 _9815_hi, jule::I32 _9823_groups) {
	return _1bbecc492_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _1bbecc492_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline jule::I32 _1bc274b57_findLastByte(jule::U8* _2117_begin, jule::U8* _2135_end, jule::U8 _2147_b) {
	jule::U8* _226_it = _2135_end;;
	for (; (_226_it >= _2117_begin); (_226_it)--) {
		{
			{
				if (((*(_226_it)) == _2147_b)) {
					return ((jule::I32)((_226_it - _2117_begin)));;
				};
			};
		}
	_iter_next_1aaae09ac:;
	}
	_iter_end_1aaae09ac:;;
	return -1LL;;
}



inline jule::I32 _1bc280008_FindByteStr(jule::Str _4416_s, jule::U8 _4424_b) {
	{
		auto expr = &(_4416_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaae2a14:;
		if (it != expr_end) {
			jule::I32 _466_i = it - expr->begin();
			jule::U8 *_469_se = it;
			{
				if (((*(_469_se)) == _4424_b)) {
					return _466_i;;
				};
			}
			_iter_next_1aaae2a14:;
			++it;
			_466_i++;
			goto _iter_begin_1aaae2a14;
		}
		_iter_end_1aaae2a14:;
	};
	return -1LL;;
}



inline jule::I32 _1bc28037c_FindLastByteStr(jule::Str _5520_s, jule::U8 _5528_b) {
	if ((_5520_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1bc274b57_findLastByte((&(_5520_s[0LL])), (&(_5520_s[(_5520_s.len() - 1LL)])), _5528_b);;
}



inline jule::Str _1bc297be1_Getwd(void) {
	jule::Array<jule::U16,261> _910_buf = ({ auto __jule_collection = jule::Array<jule::U16,261>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _102_n = _1d778ea4c_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_910_buf[0LL])));;
	if ((_102_n == 0LLU)) {
		return jule::Str();;
	};
	return _1d747a8c0_U16PtrToStr((&(_910_buf[0LL])));;
}



inline jule::Bool _1bd3b24e1_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1bd420263__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1bd428c83_isExcludingLatin(_1bd3bb4b7_Letter, _7613_r);;
}



inline jule::Bool _1bd428106_is16(jule::Slice<_1bd426368_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab59929a:;
			if (it != expr_end) {
				jule::I32 _1937_i = it - expr->begin();
				{
					_1bd426368_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1ab59929a:;
				++it;
				_1937_i++;
				goto _iter_begin_1ab59929a;
			}
			_iter_end_1ab59929a:;
		};
		return false;;
	};
	jule::I32 _2086_lo = 0LL;;
	jule::I32 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I32 _2113_m = (_2086_lo + ((_2096_hi - _2086_lo) >> 1LLU));;
			_1bd426368_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1ab598c5b:;
	}
	_iter_end_1ab598c5b:;;
	return false;;
}



inline jule::Bool _1bd42847a_is32(jule::Slice<_1bd426896_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab5a079b:;
			if (it != expr_end) {
				jule::I32 _2307_i = it - expr->begin();
				{
					_1bd426896_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1ab5a079b:;
				++it;
				_2307_i++;
				goto _iter_begin_1ab5a079b;
			}
			_iter_end_1ab5a079b:;
		};
		return false;;
	};
	jule::I32 _2456_lo = 0LL;;
	jule::I32 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I32 _2483_m = (_2456_lo + ((_2466_hi - _2456_lo) >> 1LLU));;
			_1bd426896_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1ab59c27b:;
	}
	_iter_end_1ab59c27b:;;
	return false;;
}



inline jule::Bool _1bd428c83_isExcludingLatin(jule::Ptr<_1bd426d19_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1bd426368_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I32 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _1bd428106_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1bd426896_Range32> *_2873_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _1bd42847a_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1bd428ec5_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1bd420263__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1bd428c83_isExcludingLatin(_1bd3c2787_Upper, _29512_r);;
}



inline jule::I32 _1bd4296bd_convertCase(jule::I32 _31316_case, jule::I32 _31327_r, jule::Ptr<_1bd425db2_CaseRange> _31336_cr) {
	jule::I32 _3142_delta = (*(_31336_cr))._field_Delta[_31316_case];;
	if ((_3142_delta > 1114111LL)) {
		return (static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo) + (((_31327_r - static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo)) & -2LL) | static_cast<jule::I32>((_31316_case & 1LL))));;
	};
	return (_31327_r + _3142_delta);;
}



inline jule::Ptr<_1bd425db2_CaseRange> _1bd429a42_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1bd425db2_CaseRange> _33329_caseRange) {
	jule::I32 _3356_lo = 0LL;;
	jule::I32 _3366_hi = _33329_caseRange.len();;
	while ((_3356_lo < _3366_hi)) {
		{
			jule::I32 _3383_m = static_cast<jule::I32>((static_cast<jule::U32>((_3356_lo + _3366_hi)) >> 1LLU));;
			jule::Ptr<_1bd425db2_CaseRange> _3397_cr = ((jule::Ptr<_1bd425db2_CaseRange>)((&(_33329_caseRange[_3383_m]))));;
			if (((static_cast<jule::I32>((*(_3397_cr))._field_Lo) <= _33320_r) && (_33320_r <= static_cast<jule::I32>((*_3397_cr.alloc)._field_Hi)))) {
				return _3397_cr;;
			};
			if ((_33320_r < static_cast<jule::I32>((*(_3397_cr))._field_Lo))) {
				_3366_hi=_3383_m;
			} else {
				_3356_lo=(_3383_m + 1LL);
			};
		}
	_iter_next_1ab5b1911:;
	}
	_iter_end_1ab5b1911:;;
	return nullptr;;
}



inline jule::I32 _1bd429d0b_SimpleFold(jule::I32 _37015_r) {
	if (((_37015_r < 0LL) || (_37015_r > 1114111LL))) {
		return _37015_r;;
	};
	if ((static_cast<jule::I32>(_37015_r) < 128LL)) {
		return static_cast<jule::I32>(_1bd422045_asciiFold[_37015_r]);;
	};
	jule::I32 _3806_lo = 0LL;;
	jule::I32 _3816_hi = _1bd422331_caseOrbit.len();;
	while ((_3806_lo < _3816_hi)) {
		{
			jule::I32 _3833_m = static_cast<jule::I32>((static_cast<jule::U32>((_3806_lo + _3816_hi)) >> 1LLU));;
			if ((static_cast<jule::I32>(_1bd422331_caseOrbit[_3833_m]._field_from) < _37015_r)) {
				_3806_lo=(_3833_m + 1LL);
			} else {
				_3816_hi=_3833_m;
			};
		}
	_iter_next_1ab5b5a36:;
	}
	_iter_end_1ab5b5a36:;;
	if (((_3806_lo < _1bd422331_caseOrbit.len()) && (static_cast<jule::I32>(_1bd422331_caseOrbit[_3806_lo]._field_from) == _37015_r))) {
		return static_cast<jule::I32>(_1bd422331_caseOrbit[_3806_lo]._field_to);;
	};
	jule::Ptr<_1bd425db2_CaseRange> _3972_cr = _1bd429a42_lookupCaseRange(_37015_r, _1bd41eb8b_CaseRanges);;
	if ((_3972_cr != nullptr)) {
		jule::I32 _3993_l = _1bd4296bd_convertCase(1LL, _37015_r, _3972_cr);;
		if ((_3993_l != _37015_r)) {
			return _3993_l;;
		};
		return _1bd4296bd_convertCase(0LL, _37015_r, _3972_cr);;
	};
	return _37015_r;;
}



inline jule::Str _1bd42a27e_Repeat(jule::Str _1111_s, jule::I32 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I32 __jule_x = 2147483647LL; jule::I32 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("strings: repeat: integer buffer size overflow", 45) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_1bc0a106b_Builder _186_ss = static__1bc0a18b8_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			({
				auto except = _1bc0a204a_WriteStr(&_186_ss, _1111_s);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:20:3"));
				(except.result);
			});
		}
	_iter_next_1ab5c85a4:;
	}
	_iter_end_1ab5c85a4:;;
	return _1bc0a28ca_Str(&_186_ss);;
}



inline jule::Bool _1bd42a647_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1bd42a9bb_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I32 _1bd42ae72_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1bd42a647_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1ab5cc168:;
	}
	_iter_end_1ab5cc168:;;
	return -1LL;;
}



inline jule::I32 _1bd42b2b3_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1bd42ae72_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I32 _1bd42b6e2_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i) {
	jule::I32 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1ab5ce434:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I32 _697_k = _636_j;;
			jule::I32 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I32 ___jule_assign_arg = (_697_k + 1LL);
				jule::I32 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1ab5cdc4c;
					};
				}
			_iter_next_1ab5d0b3e:;
			}
			_iter_end_1ab5d0b3e:;;
			return _636_j;;
		}
	_iter_next_1ab5cdc4c:;
	}
	_iter_end_1ab5cdc4c:;;
	return -1LL;;
}



inline jule::I32 _1bd42ba66_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1bd42b6e2_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I32 _1bd42d34d_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1bc28037c_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I32 _1bd42d6c2_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I32 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I32 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78acc47_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1ab5d7c45:;
	}
	_iter_end_1ab5d7c45:;;
	return -1LL;;
}



inline jule::I32 _1bd42e0eb_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I32 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I32 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78acc47_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1bd42d6c2_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1ab5db056:;
	}
	_iter_end_1ab5db056:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1bd42e78e_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n) {
	jule::I32 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I32 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I32 _2293_j = _1bd42ae72_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1ab5e1149;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1ab5e1149:;
	}
	_iter_end_1ab5e1149:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Slice<jule::Str> _1bd42eb13_SplitAll(jule::Str _24413_s, jule::Str _24421_sub) {
	return _1bd42e78e_Split(_24413_s, _24421_sub, -1LL);;
}



inline jule::Bool _1bd42ee87_Contains(jule::Str _24913_s, jule::Str _24921_sub) {
	return (_1bd42ae72_FindAt(_24913_s, _24921_sub, 0LL) != -1LL);;
}



inline jule::Bool _1bd430a04_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes) {
	return (_1bd42e0eb_FindAny(_26416_s, _26424_runes) != -1LL);;
}



inline jule::I32 _1bd430d78_Count(jule::Str _27010_s, jule::Str _27018_sub) {
	if ((_27018_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2746_n = 0LL;;
	jule::I32 _2756_i = 0LL;;
	for (;;) {
		{
			jule::I32 _2773_j = _1bd42ae72_FindAt(_27010_s, _27018_sub, _2756_i);;
			if ((_2773_j == -1LL)) {
				goto _iter_end_1ab5e61c6;
			};
			(_2746_n)++;
			_2756_i=(_2773_j + _27018_sub.len());
		}
	_iter_next_1ab5e61c6:;
	}
	_iter_end_1ab5e61c6:;;
	return _2746_n;;
}



inline jule::Str _1bd431362_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I32 _29044_n) {
	if (((_29044_n == 0LL) || (_29020_sub == _29030_new))) {
		return _29012_s;;
	};
	jule::I32 _2952_m = _1bd430d78_Count(_29012_s, _29020_sub);;
	if ((_2952_m == 0LL)) {
		return _29012_s;;
	};
	if (((_29044_n < 0LL) || (_2952_m < _29044_n))) {
		_29044_n=_2952_m;
	};
	_1bc0a106b_Builder _3036_ss = static__1bc0a18b8_New(((_29012_s.len() + (_29044_n * (_29030_new.len() - _29020_sub.len()))) + 1LL));;
	jule::I32 _3046_i = 0LL;;
	for (; (_29044_n > 0LL); (_29044_n)--) {
		{
			jule::I32 _3063_j = _1bd42ae72_FindAt(_29012_s, _29020_sub, _3046_i);;
			if ((_3063_j == -1LL)) {
				goto _iter_end_1ab5e9c24;
			};
			({
				auto except = _1bc0a204a_WriteStr(&_3036_ss, _29012_s.slice(_3046_i, _3063_j));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:310:3"));
				(except.result);
			});
			({
				auto except = _1bc0a204a_WriteStr(&_3036_ss, _29030_new);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:311:3"));
				(except.result);
			});
			_3046_i=(_3063_j + _29020_sub.len());
		}
	_iter_next_1ab5e9c24:;
	}
	_iter_end_1ab5e9c24:;;
	({
		auto except = _1bc0a204a_WriteStr(&_3036_ss, _29012_s.slice(_3046_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:314:2"));
		(except.result);
	});
	return _1bc0a28ca_Str(&_3036_ss);;
}



inline jule::Str _1bd431791_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new) {
	return _1bd431362_Replace(_32015_s, _32023_sub, _32033_new, -1LL);;
}



inline jule::Str _1bd43251c_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset) {
	jule::I32 _3546_i = 0LL;;
	while ((_3546_i < _35317_s.len())) {
		{
			jule::I32 _3563_r;
			jule::I32 _3566_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78acc47_DecodeRuneStr(_35317_s.slice(_3546_i));
				_3563_r = __jule_assign_result.__jule_result_arg0;
				_3566_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1bd42d6c2_FindRune(_35325_cutset, _3563_r) == -1LL)) {
				return _35317_s.slice(_3546_i);;
			};
			_3546_i+=_3566_n;
		}
	_iter_next_1ab600466:;
	}
	_iter_end_1ab600466:;;
	return jule::Str();;
}



inline jule::Str _1bd432891_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset) {
	jule::I32 _3686_i = _36714_s.len();;
	while ((_3686_i > 0LL)) {
		{
			jule::I32 _3703_r;
			jule::I32 _3706_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78ad297_DecodeLastRuneStr(_36714_s.slice(0LL, _3686_i));
				_3703_r = __jule_assign_result.__jule_result_arg0;
				_3706_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1bd42d6c2_FindRune(_36722_cutset, _3703_r) == -1LL)) {
				return _36714_s.slice(0LL, _3686_i);;
			};
			_3686_i-=_3706_n;
		}
	_iter_next_1ab6020a0:;
	}
	_iter_end_1ab6020a0:;;
	return jule::Str();;
}



inline jule::Str _1bd432e9b_Trim(jule::Str _3819_s, jule::Str _38117_cutset) {
	return _1bd43251c_TrimLeft(_1bd432891_TrimRight(_3819_s, _38117_cutset), _38117_cutset);;
}



inline jule::Bool _1bd4349a3_EqualFold(jule::Str _5518_s, jule::Str _5530_t) {
	jule::I32 _576_i = 0LL;;
	for (; ((_576_i < _5518_s.len()) && (_576_i < _5530_t.len())); (_576_i)++) {
		{
			jule::U8 _597_sr = _5518_s[_576_i];;
			jule::U8 _607_tr = _5530_t[_576_i];;
			if (((_597_sr | _607_tr) >= 128LLU)) {
				goto _julec_label_1ab60bc58;
			};
			if ((_607_tr == _597_sr)) {
				goto _iter_next_1ab609041;
			};
			if ((_607_tr < _597_sr)) {
				std::swap(_607_tr, _597_sr);
			};
			if (((('A' <= _597_sr) && (_597_sr <= 'Z')) && (_607_tr == (jule::U8)((jule::U8)(_597_sr + 'a') - 'A')))) {
				goto _iter_next_1ab609041;
			};
			return false;;
		}
	_iter_next_1ab609041:;
	}
	_iter_end_1ab609041:;;
	return (_5518_s.len() == _5530_t.len());;
	_julec_label_1ab60bc58:;
	(_5518_s).mut_slice(_576_i);;
	(_5530_t).mut_slice(_576_i);;
	{
		auto expr = &(_5518_s);
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _8614_sr;
		_iter_begin_1ab60c275:;
		__jule_runeStep(it, end - it, &_8614_sr, &len);
		if (it < end) {
			{
				if ((_5530_t.len() == 0LL)) {
					return false;;
				};
				jule::I32 _9311_tr = 0;;
				if ((_5530_t[0LL] < 128LLU)) {
					({
						jule::I32 ___jule_assign_arg = static_cast<jule::I32>(_5530_t[0LL]);
						jule::Str _1___jule_assign_arg = _5530_t.slice(1LL);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				} else {
					jule::I32 _974_r;
					jule::I32 _977_size;
					({
						__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78acc47_DecodeRuneStr(_5530_t);
						_974_r = __jule_assign_result.__jule_result_arg0;
						_977_size = __jule_assign_result.__jule_result_arg1;
					});
					({
						jule::I32 ___jule_assign_arg = _974_r;
						jule::Str _1___jule_assign_arg = _5530_t.slice(_977_size);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				};
				if ((_9311_tr == _8614_sr)) {
					goto _iter_next_1ab60c275;
				};
				if ((_9311_tr < _8614_sr)) {
					std::swap(_9311_tr, _8614_sr);
				};
				if ((_9311_tr < 128LL)) {
					if (((('A' <= _8614_sr) && (_8614_sr <= 'Z')) && (_9311_tr == ((_8614_sr + 'a') - 'A')))) {
						goto _iter_next_1ab60c275;
					};
					return false;;
				};
				jule::I32 _1237_r = _1bd429d0b_SimpleFold(_8614_sr);;
				while (((_1237_r != _8614_sr) && (_1237_r < _9311_tr))) {
					{
						_1237_r=_1bd429d0b_SimpleFold(_1237_r);
					}
				_iter_next_1ab60ca06:;
				}
				_iter_end_1ab60ca06:;;
				if ((_1237_r == _9311_tr)) {
					goto _iter_next_1ab60c275;
				};
				return false;;
			}
			_iter_next_1ab60c275:;
			it += len;
			goto _iter_begin_1ab60c275;
		}
	};
	return (_5530_t.len() == 0LL);;
}



inline jule::Bool _1bc3395ac_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _1bc3398ba_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _1bc339b84_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return (jule::U8)(_5512_c - 32LL);;
	};
	return _5512_c;;
}



inline jule::I32 _1bc33a25b_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _882_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _882_c) && (_882_c <= 'z')) || (('A' <= _882_c) && (_882_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_1bc3398ba_isSlash(_8318_path[0LL]))) || (!(_1bc3398ba_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _962_p1;
	jule::Str _9610_rest;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bc33a525_cutPath(_8318_path.slice(2LL));
		_962_p1 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _976_p2 = jule::Str();;
	jule::Bool _986_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bc33a525_cutPath(_9610_rest);
		_976_p2 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
		_986_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_986_ok))) {
		return _8318_path.len();;
	};
	if (((!_962_p1.equal(".", 1)) && (!_962_p1.equal("?", 1)))) {
		return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
	};
	if (((((_976_p2.len() == 3LL) && (_1bc339b84_toUpper(_976_p2[0LL]) == 'U')) && (_1bc339b84_toUpper(_976_p2[1LL]) == 'N')) && (_1bc339b84_toUpper(_976_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bc33a525_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bc33a525_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
			_986_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_986_ok))) {
			return _8318_path.len();;
		};
	};
	return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1bc33a525_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae7e037:;
		if (it != expr_end) {
			jule::I32 _1216_i = it - expr->begin();
			{
				if (_1bc3398ba_isSlash(_12012_path[_1216_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1216_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1216_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1aae7e037:;
			++it;
			_1216_i++;
			goto _iter_begin_1aae7e037;
		}
		_iter_end_1aae7e037:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1bc33a7de_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1302_utf16Name = _1d747a32b_UTF16FromStr(_12913_name);;
	jule::U16* _1312_p = (&(_1302_utf16Name[0LL]));;
	jule::U32 _1326_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _1347_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(static_cast<jule::I32>(_1326_n), static_cast<jule::I32>(_1326_n)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
			_1326_n=_1d7790b4c_GetFullPathName(_1312_p, static_cast<jule::U32>(_1347_buf.len()), (&(_1347_buf[0LL])), nullptr);
			if ((_1326_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1326_n <= static_cast<jule::U32>(_1347_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _1d747a606_UTF16ToStr(_1347_buf.slice(0LL, static_cast<jule::I32>(_1326_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1aae81127:;
	}
	_iter_end_1aae81127:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1bc33abb8_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bc33a7de_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1bd435da0_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1bc33ae0a_join(jule::Slice<jule::Str> _1609_elem) {
	_1bc0a106b_Builder _1616_s = static__1bc0a18b8_New(16LL);;
	jule::U8 _1626_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_1609_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae85329:;
		if (it != expr_end) {
			jule::Str _16314_e = *it;
			{
				{
					
					if ((_1bc0a2d5e_Len(&_1616_s) == 0LL)) {
						_case_begin_1aae86193:;
					}
					else if (_1bc3398ba_isSlash(_1626_lastChar)) {
						_case_begin_1aae865e4:;
						{
							while (((_16314_e.len() > 0LL) && _1bc3398ba_isSlash(_16314_e[0LL]))) {
								{
									(_16314_e).mut_slice(1LL);;
								}
							_iter_next_1aae86e41:;
							}
							_iter_end_1aae86e41:;;
						}
					}
					else if ((_1626_lastChar == ':')) {
						_case_begin_1aae85d63:;
					}
					else {
						_case_begin_1aae85cec:;
						{
							({
								auto except = _1bc0a2303_WriteByte(&_1616_s, '\\');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/filepath/path_windows.jule:187:4"));
							});
							_1626_lastChar='\\';
						}
					}
					_match_end_1aae85bdc:;
				};
				if ((_16314_e.len() > 0LL)) {
					({
						auto except = _1bc0a204a_WriteStr(&_1616_s, _16314_e);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/filepath/path_windows.jule:191:4"));
						(except.result);
					});
					_1626_lastChar=_16314_e[(_16314_e.len() - 1LL)];
				};
			}
			_iter_next_1aae85329:;
			++it;
			goto _iter_begin_1aae85329;
		}
		_iter_end_1aae85329:;
	};
	if ((_1bc0a2d5e_Len(&_1616_s) == 0LL)) {
		return jule::Str();;
	};
	return _1bd435da0_Clean(_1bc0a28ca_Str(&_1616_s));;
}



inline jule::Str _1bd435da0_Clean(jule::Str _10814_path) {
	jule::Str _1092_originalPath = _10814_path;;
	jule::I32 _1102_volLen = _1bc33a25b_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1102_volLen);;
	if ((_10814_path).empty()) {
		if ((((_1102_volLen > 1LL) && _1bc3395ac_IsPathSep(_1092_originalPath[0LL])) && _1bc3395ac_IsPathSep(_1092_originalPath[1LL]))) {
			return _1bd436477_FromSlash(_1092_originalPath);;
		};
		return (_1092_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1192_rooted = _1bc3395ac_IsPathSep(_10814_path[0LL]);;
	jule::I32 _1262_n = _10814_path.len();;
	_1bd435014_lazyBuff _1276_out = _1bd435014_lazyBuff{._field_path=_10814_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1092_originalPath, ._field_volLen=_1102_volLen};;
	jule::I32 _13213_dotdot = 0LL;;
	jule::I32 _1326_r = 0LL;;
	if (_1192_rooted) {
		_1bd435784_append(&_1276_out, 92LLU);
		_13213_dotdot=1LL;
		_1326_r=1LL;
	};
	while ((_1326_r < _1262_n)) {
		{
			{
				
				if (_1bc3395ac_IsPathSep(_10814_path[_1326_r])) {
					_case_begin_1aae91775:;
					{
						(_1326_r)++;
					}
				}
				else if (((_10814_path[_1326_r] == '.') && (((_1326_r + 1LL) == _1262_n) || _1bc3395ac_IsPathSep(_10814_path[(_1326_r + 1LL)])))) {
					_case_begin_1aae8e4dc:;
					{
						(_1326_r)++;
					}
				}
				else if ((((_10814_path[_1326_r] == '.') && (_10814_path[(_1326_r + 1LL)] == '.')) && (((_1326_r + 2LL) == _1262_n) || _1bc3395ac_IsPathSep(_10814_path[(_1326_r + 2LL)])))) {
					_case_begin_1aae8e553:;
					{
						_1326_r+=2LL;
						{
							
							if ((_1276_out._field_w > _13213_dotdot)) {
								_case_begin_1aae9579b:;
								{
									(_1276_out._field_w)--;
									while (((_1276_out._field_w > _13213_dotdot) && (!(_1bc3395ac_IsPathSep(_1bd4354cb_index(&_1276_out, _1276_out._field_w)))))) {
										{
											(_1276_out._field_w)--;
										}
									_iter_next_1aae9614d:;
									}
									_iter_end_1aae9614d:;;
								}
							}
							else if ((!(_1192_rooted))) {
								_case_begin_1aae95845:;
								{
									if ((_1276_out._field_w > 0LL)) {
										_1bd435784_append(&_1276_out, 92LLU);
									};
									_1bd435784_append(&_1276_out, '.');
									_1bd435784_append(&_1276_out, '.');
									_13213_dotdot=_1276_out._field_w;
								}
							}
							_match_end_1aae95416:;
						};
					}
				}
				else {
					_case_begin_1aae8e476:;
					{
						if (((_1192_rooted && (_1276_out._field_w != 1LL)) || ((!(_1192_rooted)) && (_1276_out._field_w != 0LL)))) {
							_1bd435784_append(&_1276_out, 92LLU);
						};
						if ((((_1276_out._field_w == 0LL) && (_1276_out._field_volLen == 0LL)) && (_1326_r != 0LL))) {
							jule::I32 _1759_i = _1326_r;;
							for (; ((_1759_i < _1262_n) && (!(_1bc3395ac_IsPathSep(_10814_path[_1759_i])))); (_1759_i)++) {
								{
									if ((_10814_path[_1759_i] == ':')) {
										_1bd435784_append(&_1276_out, '.');
										_1bd435784_append(&_1276_out, 92LLU);
										goto _iter_end_1aae90ea0;
									};
								}
							_iter_next_1aae90ea0:;
							}
							_iter_end_1aae90ea0:;;
						};
						for (; ((_1326_r < _1262_n) && (!(_1bc3395ac_IsPathSep(_10814_path[_1326_r])))); (_1326_r)++) {
							{
								_1bd435784_append(&_1276_out, _10814_path[_1326_r]);
							}
						_iter_next_1aae9080c:;
						}
						_iter_end_1aae9080c:;;
					}
				}
				_match_end_1aae8dde3:;
			};
		}
	_iter_next_1aae8dad5:;
	}
	_iter_end_1aae8dad5:;;
	if ((_1276_out._field_w == 0LL)) {
		_1bd435784_append(&_1276_out, '.');
	};
	return _1bd436477_FromSlash(_1bd435a1a_string(&_1276_out));;
}



inline jule::Str _1bd436477_FromSlash(jule::Str _21114_path) {
	;
	return _1bd431791_ReplaceAll(_21114_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1));;
}



inline jule::Str _1bd4367b8_Join(jule::Slice<jule::Str> _2259_elem) {
	return _1bc33ae0a_join(_2259_elem);;
}



inline jule::Str _1bd436a4e_Ext(jule::Str _2308_path) {
	jule::I32 _2316_i = (_2308_path.len() - 1LL);;
	for (; ((_2316_i >= 0LL) && (!(_1bc3395ac_IsPathSep(_2308_path[_2316_i])))); (_2316_i)--) {
		{
			if ((_2308_path[_2316_i] == '.')) {
				return _2308_path.slice(_2316_i);;
			};
		}
	_iter_next_1aae9989e:;
	}
	_iter_end_1aae9989e:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1bd436d18_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1bc33abb8_abs(_2458_path));
return __jule_func_result;;
}



inline jule::Str _1bd4370d2_Base(jule::Str _25113_path) {
	if ((_25113_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25113_path.len() > 0LL) && _1bc3395ac_IsPathSep(_25113_path[(_25113_path.len() - 1LL)]))) {
		{
			(_25113_path).mut_slice(0LL, (_25113_path.len() - 1LL));;
		}
	_iter_next_1aae9b3a6:;
	}
	_iter_end_1aae9b3a6:;;
	(_25113_path).mut_slice(_1bd4376ed_VolumeName(_25113_path).len());;
	jule::I32 _2626_i = (_25113_path.len() - 1LL);;
	while (((_2626_i >= 0LL) && (!(_1bc3395ac_IsPathSep(_25113_path[_2626_i]))))) {
		{
			(_2626_i)--;
		}
	_iter_next_1aae9b1ec:;
	}
	_iter_end_1aae9b1ec:;;
	if ((_2626_i >= 0LL)) {
		(_25113_path).mut_slice((_2626_i + 1LL));;
	};
	if ((_25113_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25113_path;;
}



inline jule::Str _1bd4374ab_Dir(jule::Str _2828_path) {
	jule::Str _2832_vol = _1bd4376ed_VolumeName(_2828_path);;
	jule::I32 _2846_i = (_2828_path.len() - 1LL);;
	while (((_2846_i >= _2832_vol.len()) && (!(_1bc3395ac_IsPathSep(_2828_path[_2846_i]))))) {
		{
			(_2846_i)--;
		}
	_iter_next_1aae9e62e:;
	}
	_iter_end_1aae9e62e:;;
	jule::Str _2882_dir = _1bd435da0_Clean(_2828_path.slice(_2832_vol.len(), (_2846_i + 1LL)));;
	if ((_2882_dir.equal(".", 1) && (_2832_vol.len() > 2LL))) {
		return _2832_vol;;
	};
	return (_2832_vol + _2882_dir);;
}



inline jule::Str _1bd4376ed_VolumeName(jule::Str _30015_path) {
	return _1bd436477_FromSlash(_30015_path.slice(0LL, _1bc33a25b_volumeNameLen(_30015_path)));;
}



inline void _1bc28401d_appendEscapeArg(_1bc0a106b_Builder* _10225_s, jule::Str _10246_arg) {
	if ((_10246_arg.len() == 0LL)) {
		({
			auto except = _1bc0a204a_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:104:3"));
			(except.result);
		});
		return;;
	};
	jule::Bool _1086_needsBackslash = false;;
	jule::Bool _1096_hasSpace = false;;
	jule::I32 _1106_i = 0LL;;
	for (; (_1106_i < _10246_arg.len()); (_1106_i)++) {
		{
			{
				auto &_match_expr{ _10246_arg[_1106_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1a94a762d:;
					{
						_1086_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1a94a792a:;
					{
						_1096_hasSpace=true;
					}
				}
				_match_end_1a94a7809:;
			};
		}
	_iter_next_1a94a7287:;
	}
	_iter_end_1a94a7287:;;
	if (((!(_1086_needsBackslash)) && (!(_1096_hasSpace)))) {
		({
			auto except = _1bc0a204a_WriteStr(_10225_s, _10246_arg);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:122:3"));
			(except.result);
		});
		return;;
	};
	if ((!(_1086_needsBackslash))) {
		({
			auto except = _1bc0a2303_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:127:3"));
		});
		({
			auto except = _1bc0a204a_WriteStr(_10225_s, _10246_arg);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:128:3"));
			(except.result);
		});
		({
			auto except = _1bc0a2303_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:129:3"));
		});
		return;;
	};
	if (_1096_hasSpace) {
		({
			auto except = _1bc0a2303_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:134:3"));
		});
	};
	jule::I32 _1366_slashes = 0LL;;
	_1106_i=0LL;
	for (; (_1106_i < _10246_arg.len()); (_1106_i)++) {
		{
			jule::U8 _1393_c = _10246_arg[_1106_i];;
			{
				auto &_match_expr{ _1393_c };
				
				if (_match_expr == '\\') {
					_case_begin_1a94aace6:;
					{
						(_1366_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1a94aada1:;
					{
						for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
							{
								({
									auto except = _1bc0a2303_WriteByte(_10225_s, '\\');
									if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:145:5"));
								});
							}
						_iter_next_1a94ab5aa:;
						}
						_iter_end_1a94ab5aa:;;
						({
							auto except = _1bc0a2303_WriteByte(_10225_s, '\\');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:147:4"));
						});
					}
				}
				else {
					_case_begin_1a94aa851:;
					{
						_1366_slashes=0LL;
					}
				}
				_match_end_1a94aa961:;
			};
			({
				auto except = _1bc0a2303_WriteByte(_10225_s, _1393_c);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:151:3"));
			});
		}
	_iter_next_1a94aa015:;
	}
	_iter_end_1a94aa015:;;
	if (_1096_hasSpace) {
		for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
			{
				({
					auto except = _1bc0a2303_WriteByte(_10225_s, '\\');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:155:4"));
				});
			}
		_iter_next_1aaec2289:;
		}
		_iter_end_1aaec2289:;;
		({
			auto except = _1bc0a2303_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:157:3"));
		});
	};
}



inline jule::Str _1bc2842d7_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_1bc0a106b_Builder _1646_s = static__1bc0a18b8_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaec5e2a:;
		if (it != expr_end) {
			jule::Str *_1659_arg = it;
			{
				if ((_1bc0a2d5e_Len(&_1646_s) > 0LL)) {
					({
						auto except = _1bc0a2303_WriteByte(&_1646_s, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:167:4"));
					});
				};
				_1bc28401d_appendEscapeArg(&(_1646_s), (*(_1659_arg)));
			}
			_iter_next_1aaec5e2a:;
			++it;
			goto _iter_begin_1aaec5e2a;
		}
		_iter_end_1aaec5e2a:;
	};
	return _1bc0a28ca_Str(&_1646_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _1bc2846b1_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1d7479957_Encode(({ auto __jule_collection = jule::Slice<jule::I32>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 0LL; __jule_collection; }))};;
	};
	jule::I32 _1836_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaec3994:;
		if (it != expr_end) {
			jule::Str *_1849_s = it;
			{
				if ((_1bc280008_FindByteStr((*(_1849_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type139)};
				};
				_1836_n+=((*(_1849_s)).len() + 1LL);
			}
			_iter_next_1aaec3994:;
			++it;
			goto _iter_begin_1aaec3994;
		}
		_iter_end_1aaec3994:;
	};
	(_1836_n)++;
	jule::Slice<jule::U16> _1916_b = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _1836_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaec4115:;
		if (it != expr_end) {
			jule::Str *_1929_s = it;
			{
				{
					auto expr = _1929_s;
					jule::U8 *it = expr->begin();
					const jule::U8 *end = it + expr->len();
					jule::Int len;
					jule::I32 _19310_c;
					_iter_begin_1aaec5996:;
					__jule_runeStep(it, end - it, &_19310_c, &len);
					if (it < end) {
						{
							_1916_b=_1d747a062_AppendRune(_1916_b, _19310_c);
						}
						_iter_next_1aaec5996:;
						it += len;
						goto _iter_begin_1aaec5996;
					}
				};
				_1916_b=_1d747a062_AppendRune(_1916_b, 0LL);
			}
			_iter_next_1aaec4115:;
			++it;
			goto _iter_begin_1aaec4115;
		}
		_iter_end_1aaec4115:;
	};
	_1916_b=_1d747a062_AppendRune(_1916_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1916_b};;
}



inline jule::I32 _1bc284903_cmdErrorFromCode(jule::I32 _20221_code) {
	{
		auto &_match_expr{ _20221_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1aaecdb36:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1aaecd87d:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1aaec3477:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1aaec3d5c:;
	};
}



inline jule::I32 _1bc284b12_getLastCmdError(void) {
	return _1bc284903_cmdErrorFromCode(static_cast<jule::I32>(_1d778e6c8_GetLastError()));;
}



inline jule::I32 _1bc2850c9_getLastFsErrorWindows(void) {
	jule::U32 _102_err = _1d778e6c8_GetLastError();;
	{
		auto &_match_expr{ _102_err };
		
		if (_match_expr == 2LL || _match_expr == 3LL || _match_expr == 123LL) {
			_case_begin_1ab6bd6ee:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 5LL || _match_expr == 16LL || _match_expr == 33LL || _match_expr == 50LL) {
			_case_begin_1ab6bd204:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 19LL) {
			_case_begin_1ab6bd26a:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1ab6bd2d1:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 145LL) {
			_case_begin_1ab6bd347:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else if (_match_expr == 183LL) {
			_case_begin_1ab6bd468:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 206LL) {
			_case_begin_1ab6bd4ce:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 87LL) {
			_case_begin_1ab6bd545:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else {
			_case_begin_1aaece928:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1aaecea38:;
	};
}



inline jule::I32 _1bc28565c_getLastOsError(void) {
	jule::U32 _92_err = _1d778e6c8_GetLastError();;
	{
		auto &_match_expr{ _92_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1aa7601a9:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aa76989a:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1aa760d14:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1aa760d7a:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else {
			_case_begin_1aa76a36d:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		_match_end_1aa768e60:;
	};
}



inline jule::Bool _1bc28cd6d_isConsoleHandle(jule::Uintptr _9020_handle) {
	return (((_9020_handle == _1d778d144_STDIN) || (_9020_handle == _1d778d3db_STDOUT)) || (_9020_handle == _1d778d6d8_STDERR));;
}



inline void _1bc29ae47_Exit(jule::I32 _119_code) {
	_1d77a855a_Exit(_119_code);
}



inline jule::Str _1bc29b1ab_Executable(void) {
	return _1d78b8109_executable();;
}



inline jule::Slice<jule::Str> _1bc29b376_Args(void) {
	return _1d78b7b53_args();;
}



inline jule::Exceptional<jule::Str> _1bc29b7d8_Getwd(void) {
	jule::Str _332_wd = _1bc297be1_Getwd();;
	if ((_332_wd).empty()) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_1bc28565c_getLastOsError(), &__jule_any_type140)};
	};
	return jule::Exceptional<jule::Str>{.result=_332_wd};;
}



inline jule::I32 _1bd43d407_getLastFsError(void) {
	jule::I32 _412_err = _1d774742d_GetLastErrno();;
	{
		auto &_match_expr{ _412_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a94b8bc2:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a94b8d59:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1a94a067b:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1a94a06e2:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a94ab137:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a94ab19d:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1a94ab214:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a94ab27a:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a94b89a2:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a94b8a18:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a94b8a7e:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a94b8ae5:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a94b9134:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a94b919a:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a94b9211:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1a94b9277:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a94b92dd:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a94b9354:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a94b93ba:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a94b9431:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1a94b9497:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a94b951e:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a94b9596:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a94b961d:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a94b9695:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1a94b971c:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1a94b9794:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1a94b981b:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1a94b75c7:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1a94b7819:;
	};
}



inline jule::Bool _1bc065382_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1bc06565c_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1bbed639c_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6d6daa:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1ab6d6daa:;
			++it;
			goto _iter_begin_1ab6d6daa;
		}
		_iter_end_1ab6d6daa:;
	};
	return false;;
}



inline jule::Bool _1bc065926_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1bbed648a_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6d8d13:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1ab6d8d13:;
			++it;
			goto _iter_begin_1ab6d8d13;
		}
		_iter_end_1ab6d8d13:;
	};
	{
		auto expr = &(_1bc0651c8_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6d9a6c:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1ab6d9a6c:;
			++it;
			goto _iter_begin_1ab6d9a6c;
		}
		_iter_end_1ab6d9a6c:;
	};
	return false;;
}



inline jule::Str _1bc0b081c_Logf(jule::Str _3259_fmt, jule::Slice<jule::Any> _32522_args) {
	return _1bc0b12ac_applyFmt(_3259_fmt, _32522_args);;
}



inline jule::Str _1bc0b0b2a_argToStr(jule::Any _32913_arg) {
	{
		auto &_match_expr{ _32913_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab6dac38:;
			{
				return _32913_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1ab6daa3a:;
			{
				return __jule_strFromByte(_32913_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab6daaa1:;
			{
				return __jule_strFromRune(_32913_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1ab6d9d9c:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1ab6d9d36:;
	};
}



inline jule::I32 _1bc0b0de4_findNextFmt(jule::Str _34216_fmt) {
	{
		auto expr = &(_34216_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa78493c:;
		if (it != expr_end) {
			jule::I32 _3436_i = it - expr->begin();
			jule::U8 *_3439_b = it;
			{
				if (((*(_3439_b)) == '@')) {
					return _3436_i;;
				};
			}
			_iter_next_1aa78493c:;
			++it;
			_3436_i++;
			goto _iter_begin_1aa78493c;
		}
		_iter_end_1aa78493c:;
	};
	return -1LL;;
}



inline jule::Str _1bc0b12ac_applyFmt(jule::Str _35117_fmt, jule::Slice<jule::Any> _35127_args) {
	_1bc0a106b_Builder _3526_s = static__1bc0a18b8_New(32LL);;
	{
		auto expr = &(_35127_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa785c6d:;
		if (it != expr_end) {
			jule::Any *_3539_arg = it;
			{
				jule::I32 _3543_i = _1bc0b0de4_findNextFmt(_35117_fmt);;
				if ((_3543_i == -1LL)) {
					goto _iter_end_1aa785c6d;
				};
				({
					auto except = _1bc0a204a_WriteStr(&_3526_s, _35117_fmt.slice(0LL, _3543_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:358:3"));
					(except.result);
				});
				({
					auto except = _1bc0a204a_WriteStr(&_3526_s, _1bc0b0b2a_argToStr((*(_3539_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:359:3"));
					(except.result);
				});
				(_35117_fmt).mut_slice((_3543_i + 1LL));;
			}
			_iter_next_1aa785c6d:;
			++it;
			goto _iter_begin_1aa785c6d;
		}
		_iter_end_1aa785c6d:;
	};
	({
		auto except = _1bc0a204a_WriteStr(&_3526_s, _35117_fmt);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:362:2"));
		(except.result);
	});
	return _1bc0a28ca_Str(&_3526_s);;
}



inline jule::Bool _1bc0b21ae_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _1bc0b35cd_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _1bc0b38db_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _1bc0b3ba5_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _1bc0b3ee6_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _1bc0b427c_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _1bc0b4546_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _1bc0b4810_IsUnix(jule::Str _5511_os) {
	return (_1bc0b38db_IsDarwin(_5511_os) || _1bc0b3ba5_IsLinux(_5511_os));;
}



inline jule::Bool _1bc0b4bd9_Is32Bit(jule::Str _5812_arch) {
	return _1bc0b3ee6_IsI386(_5812_arch);;
}



inline jule::Bool _1bc0b4e2b_Is64Bit(jule::Str _6112_arch) {
	return (_1bc0b427c_IsAmd64(_6112_arch) || _1bc0b4546_IsArm64(_6112_arch));;
}



inline void _1bd4402e9_init(void) {
	jule::Str _256_path = _1bc29b1ab_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("build: executable file cannot found", 35) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_1bd43e848_PathWd=({
			auto except = _1bc29b7d8_Getwd();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("build: working directory path cannot found", 42) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_1bd43e5b2_PathExec=_1bd4374ab_Dir(_256_path);
		_1bd43e35e_PathStdlib=_1bd4367b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _1bd43e5b2_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_1bd43eb45_PathApi=_1bd4367b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _1bd43e5b2_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _1a499e773_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1a499ea81_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1a499ed4a_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1a49a018b_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1a49a26ee_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1aad02a04:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1a49a8606_IsInf(_4714_f, 0LL) || _1a49a7e74_IsNaN(_4714_f)) {
			_case_begin_1aad02a9d:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1aad02916:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a49a88c0_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1a499ed4a_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1a49a018b_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1a49a7b66_NaN(void) {
	return _1a49a018b_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1a49a7e74_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1a49a823d_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1a49a018b_F64FromBits(9218868437227405312LLU);;
	};
	return _1a49a018b_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1a49a8606_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1a49a88c0_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1a49aac79_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1a49aa394_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1a49a7e74_IsNaN(_1118_x) || _1a49a8606_IsInf(_1118_x, 1LL)) {
			_case_begin_1aad3d534:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1aad3d5cd:;
			{
				return _1a49a7b66_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1aad3d644:;
			{
				return _1a49a823d_Inf(-1LL);;
			}
		}
		_match_end_1aad3d468:;
	};
	jule::F64 _1336_f1;
	jule::I32 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a49a26ee_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1a49aac79_Abs(jule::F64 _438_x) {
	return _1a49a018b_F64FromBits((_1a499ed4a_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1a49b27ec_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1a49aac79_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1ab6ecb07:;
		}
		_iter_end_1ab6ecb07:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1a49b3105_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I32 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a49a26ee_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1a49aa394_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1a49dc173_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize) {
	return _1d7492e59_StrFromBytes(_1a49dc75b_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1a49e0b16_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1a49dc75b_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a49dae96_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1ab79ba52:;
			{
				_886_bits=static_cast<jule::U64>(_1a499e773_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1a49dae96_floatInfo>)((&(_1a49db35e_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab79bab8:;
			{
				_886_bits=_1a499ed4a_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1a49dae96_floatInfo>)((&(_1a49db65b_f64info))));
			}
		}
		else {
			_case_begin_1ab79a556:;
			{
				__jule_panic_s(jule::Str::lit("conv: illegal bitSize", 21) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1ab79b337:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U32 __jule_y = (jule::U32)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I32 _1026_exp = (static_cast<jule::I32>(({ jule::U64 __jule_x = _886_bits; jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & (({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == (({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)) {
			_case_begin_1ab7a1bcd:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1ab7a34a4:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1ab7a351a:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1ab7a2c56:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1ab7a2b46:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ab7a1c44:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1ab7a0da8:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_1ab7a0eeb:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1a49dec8b_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1a49e041d_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	;
	_1a49dbae0_decimalSlice _1376_digs = _1a49dbae0_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1a49ea89b_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), &((*_8910_flt.alloc)));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab7a60de:;
				{
					_8758_prec=_1a49e0b16_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab7a7211:;
				{
					_8758_prec=_1a49e0b16_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab7a7277:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1ab7a719a:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I32 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab7a91be:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab7a928a:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1ab7a8c29:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1ab7a8d39:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1a49e95e2_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1a49e9a87_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1a49dce65_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	return _1a49dd63b_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1a49dce65_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _1a49dae96_floatInfo* _18824_flt) {
	_1a49ee680_decimal _1896_d = _1a49ee680_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1a49eea6a_assign(&_1896_d, _1882_mant);
	_1a49eed23_shift(&_1896_d, (_18813_exp - static_cast<jule::I32>((*(_18824_flt))._field_mantbits)));
	_1a49dbae0_decimalSlice _1926_digs = _1a49dbae0_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1a49dda59_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1a49dbae0_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab7aedd9:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab7b0c0e:;
				{
					_18733_prec=_1a49e0b16_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab7b0c75:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1ab7b0add:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab7aeb0e:;
				{
					_1a4a0063c_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab7aeb75:;
				{
					_1a4a0063c_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab7aebdb:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1a4a0063c_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1ab7b220a:;
		};
		_1926_digs=_1a49dbae0_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1a49dd63b_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1a49dd63b_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1a49dbae0_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1ab7b52eb:;
			{
				return _1a49de0ed_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ab7b5362:;
			{
				return _1a49de5d7_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1ab7b53c8:;
			{
				jule::I32 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I32 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1a49de0ed_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1a49de5d7_fmtF(_22418_dst, _22447_neg, _2252_digs, _1a49e0b16_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1ab7b5241:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1a49dda59_roundShortest(_1a49ee680_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1a49dae96_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1a49ee680_decimal _2926_upper = _1a49ee680_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1a49eea6a_assign(&_2926_upper, (jule::U64)((jule::U64)(_26235_mant << 1LLU) + 1LLU));
	_1a49eed23_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I32 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)((jule::U64)(_26235_mant << 1LLU) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1a49ee680_decimal _3116_lower = _1a49ee680_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1a49eea6a_assign(&_3116_lower, (jule::U64)((jule::U64)(_3026_mantlo << 1LLU) + 1LLU));
	_1a49eed23_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I32 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I32 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1ab7c1329;
			};
			jule::I32 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = '0';;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = '0';;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = '0';;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1ab7c6087:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1ab7c6131:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1ab7c6197:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1ab7c5eaa:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1ab7c892a:;
					{
						_1a4a0063c_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1ab7c89c4:;
					{
						_1a4a000cb_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1ab7c8a3a:;
					{
						_1a4a00384_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1ab7c620d:;
			};
		}
	_iter_next_1ab7c1329:;
	}
	_iter_end_1ab7c1329:;;
}



inline jule::Slice<jule::U8> _1a49de0ed_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1a49dbae0_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I32 _4177_i = 1LL;;
		jule::I32 _4183_m = _1a49e0792_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1ab7cc874:;
		}
		_iter_end_1ab7cc874:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I32 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1ab7cec1c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1ab7ceda4:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1ab7ce6ab:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I32 __jule_x = _4306_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1ab7ce1c2:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1a49de5d7_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1a49dbae0_decimalSlice _45637_d, jule::I32 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I32 _4647_m = _1a49e0792_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1ab622e4a:;
		}
		_iter_end_1ab622e4a:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I32 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = '0';;
				jule::I32 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1ab624204:;
		}
		_iter_end_1ab624204:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1a49dec8b_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1a49dae96_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_s_1aa9372d7_byte__jule_tuple_str __jule_assign_result = _1a4a04872_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I32>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_s_1aa9372d7_byte__jule_tuple_str __jule_assign_result = _1a4a04872_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1a49e041d_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _1a49dae96_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1ab6296d2:;
	}
	_iter_end_1ab6296d2:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U32 _5263_shift = static_cast<jule::U32>((_51126_prec << 2LLU));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1ab62e154:;
		}
		_iter_end_1ab62e154:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I32 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1ab630b4a:;
		}
		_iter_end_1ab630b4a:;;
	};
	jule::U8 _5716_ch = 'P';;
	if ((_51137_fmt == _1a49e17a4_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1ab633543:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1ab632bc4:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1ab632443:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1ab6326eb:;
	};
	return _51113_dst;;
}



inline jule::I32 _1a49e0792_min(jule::I32 _5968_a, jule::I32 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I32 _1a49e0b16_max(jule::I32 _6038_a, jule::I32 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1a49e17a4_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1a42be813_ConvError _1a49e1c27_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1a42be813_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1ab638b53:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1ab637ee8:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1a49e17a4_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1ab63a517:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a49e17a4_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1ab63a605:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a49e17a4_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1ab63a1b5:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1ab63a14e:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1ab63a072:;
					};
				};
			}
		}
		else {
			_case_begin_1ab637e71:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1ab637d72:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=32LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1ab63e51b:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ab63e32e:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1ab63d3d8:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_1ab63de99:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1ab63e010:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab639c31:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1ab640440:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6413a8:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1ab64271c:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1a49e17a4_lower(_1099_c)) && (_1a49e17a4_lower(_1099_c) <= 'z'))) {
						_case_begin_1ab64261d:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1a49e17a4_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1ab642695:;
						{
							goto _iter_next_1ab6413a8;
						}
					}
					else {
						_case_begin_1ab64219a:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1ab642123:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1ab6413a8:;
			++it;
			goto _iter_begin_1ab6413a8;
		}
		_iter_end_1ab6413a8:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1a49e2156_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I32 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1a42be813_ConvError __jule_assign_result = _1a49e1c27_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type142)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1a49e260c_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type142)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I32 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1a42be813_ConvError __jule_assign_result = _1a49e1c27_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I32>(0LL)) && (_18710_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type142)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=32LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = static_cast<jule::U32>((_17240_bitSize - 1LL)); ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type142)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type142)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1a49e329a_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1a49a018b_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _572_clz = _1bbebb21c_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U32 __jule_y = static_cast<jule::U32>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bbec614a_Mul64(_4122_man, _1a49e407b_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bbec614a_Mul64(_4122_man, _1a49e407b_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		_6315_xLo=_6817_mergedLo;
		_636_xHi=_687_mergedHi;
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1a49a018b_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a49e3685_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1a499ea81_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1322_clz = _1bbebb21c_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U32 __jule_y = static_cast<jule::U32>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bbec614a_Mul64(_11022_man, _1a49e407b_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bbec614a_Mul64(_11022_man, _1a49e407b_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		_13816_x_lo=_14318_merged_lo;
		_1386_x_hi=_1437_merged_hi;
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1a499ea81_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _1a49e53ac_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I32 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I32 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1ab6659b5:;
	}
	_iter_end_1ab6659b5:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a49e56ba_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _736_sign = 1LL;;
	jule::I32 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1ab6692c1:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1ab669348;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1ab669348:;
			{
				jule::I32 _887_caseN = _1a49e53ac_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1a49a823d_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1ab6693ae:;
			{
				if ((_1a49e53ac_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1a49a7b66_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ab669227:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a49e5984_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1ab66e65b:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1ab66e914:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1ab66e826:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I32 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1a49e17a4_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I32 _1346_nd = 0LL;;
	jule::I32 _1356_ndMant = 0LL;;
	jule::I32 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1ab6747e8:;
					{
						goto _iter_next_1ab673c7b;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1ab674892:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1ab678b2c;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1ab673c7b;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1ab674908:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1ab673c7b;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ab673c7b;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1a49e17a4_lower(_1383_c))) && (_1a49e17a4_lower(_1383_c) <= 'f'))) {
					_case_begin_1ab67496e:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1a49e17a4_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ab673c7b;
					}
				}
				_match_end_1ab67470a:;
			};
			goto _iter_end_1ab673c7b;
		}
	_iter_next_1ab673c7b:;
	}
	_iter_end_1ab673c7b:;;
	_julec_label_1ab678b2c:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1a49e17a4_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I32 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1ab67ba20;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I32>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1ab67ba20:;
		}
		_iter_end_1ab67ba20:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1a49e74d0_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U32 __jule_y = _1a49db65b_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1ab68482a:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1ab684891:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1a49e6897_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1a49e6897_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1ab684907:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _1a49e6897_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab68473c:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a49e790e_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U32 __jule_y = _1a49db35e_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1ab688950:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1ab6889b6:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1a49e6bc7_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1a49e6bc7_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1ab688a2c:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _1a49e6bc7_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab688862:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1a42be813_ConvError _1a49e7ea3_atofHex(_1a49dae96_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1a42be813_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5572_maxExp = ((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I32 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I32>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (jule::U32)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1ab68c206:;
	}
	_iter_end_1ab68c206:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (jule::U32)((jule::U32)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1ab68e439:;
	}
	_iter_end_1ab68e439:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1ab68e7d0:;
	}
	_iter_end_1ab68e7d0:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I32 _6036_err = static_cast<jule::I32>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & (({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL))); jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_1a49dae96_floatInfo_eq(&(*(_55613_flt)), _1a49db35e_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a499ea81_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1a49a018b_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a42be813_ConvError _1a49e837c_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1a42be813_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I32 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a49e56ba_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I32 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I32 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a49e5984_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1a42be813_ConvError __jule_assign_result = _1a49e7ea3_atofHex(&(_1a49db35e_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a49e790e_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a49e3685_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a49e3685_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a49ee680_decimal _6676_d = _1a49ee680_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1a49e6149_set(&_6676_d, _1d7492909_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a49e648a_floatBits(&_6676_d, &(_1a49db35e_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1a499ea81_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a42be813_ConvError _1a49e85be_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a42be813_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I32 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a49e56ba_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I32 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I32 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a49e5984_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1a42be813_ConvError __jule_assign_result = _1a49e7ea3_atofHex(&(_1a49db65b_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a49e74d0_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a49e329a_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a49e329a_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a49ee680_decimal _7246_d = _1a49ee680_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1a49e6149_set(&_7246_d, _1d7492909_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a49e648a_floatBits(&_7246_d, &(_1a49db65b_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1a49a018b_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a42be813_ConvError _1a49e8943_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a42be813_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I32 _7386_n;
		jule::I32 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1a42be813_ConvError __jule_assign_result = _1a49e837c_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a49e85be_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1a49e8cb7_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I32 _7695_n;
	jule::I32 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a42be813_ConvError __jule_assign_result = _1a49e8943_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I32>(0LL)) || (_7698_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type142)};
	};
	if ((_7698_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type142)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1a49e95e2_ryuFtoaFixed32(_1a49dbae0_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with negative prec", 46) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with prec > 9", 41) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		(*(_4924_d))._field_dp=0LL;
		(*(_4924_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _626_e2 = _4956_exp;;
	jule::I32 _632_b = _1bbec37da_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U32 __jule_y = static_cast<jule::U32>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(_632_b - 25LL);
	};
	jule::I32 _742_q = (((-(_1a49eab32_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I32 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a49ec529_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult64bitPow10", 54) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1a49ecccc_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U32 _942_extra = static_cast<jule::U32>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _942_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U32 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1a49ea3c3_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1a49e9a87_ryuFtoaFixed64(_1a49dbae0_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed64 called with prec > 18", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		(*(_12124_d))._field_dp=0LL;
		(*(_12124_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _1316_e2 = _12156_exp;;
	jule::I32 _1322_b = _1bbec3aa4_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U32 __jule_y = static_cast<jule::U32>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(_1322_b - 55LL);
	};
	jule::I32 _1462_q = (((-(_1a49eab32_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I32 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a49ec958_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1a49ecccc_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U32 _1662_extra = static_cast<jule::U32>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _1662_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U32 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1a49ea3c3_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1a49ea3c3_formatDecimal(_1a49dbae0_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2012_max = _1a49e9dc8_u64pow10[_20088_prec];;
	jule::I32 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1ab99063b:;
	}
	_iter_end_1ab99063b:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U32 _2296_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=_20088_prec;
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((jule::U32)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1ab99370a:;
	}
	_iter_end_1ab99370a:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1ab993d9d:;
	}
	_iter_end_1ab993d9d:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1a49ea89b_ryuFtoaShortest(_1a49dbae0_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1a49dae96_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		(*(_26125_d))._field_dp=0LL;
		(*(_26125_d))._field_nd=0LL;
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1bbebcd12_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U32 __jule_y = static_cast<jule::U32>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_1a49eb979_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I32 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1a49eb32a_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1a49eb979_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I32 _2792_q = (_1a49eab32_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1a49dae96_floatInfo_eq(&(*(_26168_flt)), _1a49db35e_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a49ec529_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a49ec529_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a49ec529_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a49ec958_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a49ec958_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a49ec958_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		_2886_du0=false;
		_2876_dc0=false;
		_2866_dl0=false;
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1a49ecccc_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1a49ecccc_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1a49ecccc_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U32 _3252_extra = static_cast<jule::U32>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _3252_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1a49eb979_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I32 _1a49eab32_mulByLog2Log10(jule::I32 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I32 _1a49eadeb_mulByLog10Log2(jule::I32 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a49eb32a_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1a49dae96_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1a49eb979_ryuDigits(_1a49dbae0_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a49ed096_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a49ed096_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a49ed096_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1a49ec0ea_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1a49ec0ea_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _4287_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1ab9b6882:;
		}
		_iter_end_1ab9b6882:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I32>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I32>((jule::U32)(9LL - _4287_n));
		_1a49ec0ea_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1ab9b8eb1:;
	}
	_iter_end_1ab9b8eb1:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1ab9b71e0:;
	}
	_iter_end_1ab9b71e0:;;
}



inline void _1a49ec0ea_ryuDigits32(_1a49dbae0_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I32 _4606_trimmed = 0LL;;
	jule::I32 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1ab9bba41;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I32>(_47114_cdigit);
			_4556_upper=_4723_u;
			_45458_central=_4717_c;
			_45442_lower=_4703_l;
		}
	_iter_next_1ab9bba41:;
	}
	_iter_end_1ab9bba41:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I32 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1ab9c2915:;
	}
	_iter_end_1ab9c2915:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a49ec529_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult64bitPow10: power of 10 is out of range", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1a49e407b_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bbec614a_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1a49eadeb_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a49ec958_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult128bitPow10: power of 10 is out of range", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1a49e407b_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1a49eadeb_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bbec614a_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bbec614a_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bbec4841_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a49ecccc_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1ab9d0637:;
	}
	_iter_end_1ab9d0637:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1a49ed096_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _6072_hi;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bbec614a_Mul64((_60214_x >> 1LLU), 9903520314283042200LLU);
		_6072_hi = __jule_assign_result.__jule_result_arg0;
	});
	jule::U64 _6082_q = (_6072_hi >> 28LLU);;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(_6082_q);
	__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((jule::U64)(_60214_x - (jule::U64)(_6082_q * 1000000000LL)));
	return __jule_func_result;;
}



inline void _1a4a00ecd_trim(_1a49ee680_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1ab9d3ecb:;
	}
	_iter_end_1ab9d3ecb:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1a4a012b9_rightShift(_1a49ee680_decimal* _28420_a, jule::U32 _28432_k) {
	jule::I32 _2856_r = 0LL;;
	jule::I32 _2866_w = 0LL;;
	jule::U32 _2896_n = static_cast<jule::U32>(0LLU);;
	for (; (({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U32)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1ab9d74da:;
				}
				_iter_end_1ab9d74da:;;
				goto _iter_end_1ab9d5708;
			};
			jule::U32 _3033_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1ab9d5708:;
	}
	_iter_end_1ab9d5708:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U32 _3082_mask = (jule::U32)(static_cast<jule::U32>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _28432_k; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U32 _3123_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			jule::U32 _3133_dig = ({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1ab9d8123:;
	}
	_iter_end_1ab9d8123:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U32 _3223_dig = ({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U32)(_2896_n * 10LLU);
		}
	_iter_next_1ab9da444:;
	}
	_iter_end_1ab9da444:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1a4a00ecd_trim(_28420_a);
}



inline jule::Bool _1a4a01770_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s) {
	jule::I32 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1ab9dd117:;
	}
	_iter_end_1ab9dd117:;;
	return false;;
}



inline void _1a4a01a28_leftShift(_1a49ee680_decimal* _35219_a, jule::U32 _35231_k) {
	jule::I32 _3536_delta = _1a49ee097_leftCheats[static_cast<jule::I32>(_35231_k)]._field_delta;;
	if (_1a4a01770_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1a49ee097_leftCheats[static_cast<jule::I32>(_35231_k)]._field_cutoff))) {
		(_3536_delta)--;
	};
	jule::I32 _3586_r = (*(_35219_a))._field_nd;;
	jule::I32 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U32 _3626_n = static_cast<jule::U32>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U32 __jule_x = (jule::U32)(static_cast<jule::U32>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U32 __jule_y = _35231_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
			jule::U32 _3663_quo = (_3626_n / 10LLU);;
			jule::U32 _3673_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1ab9e15e3:;
	}
	_iter_end_1ab9e15e3:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U32 _3793_quo = (_3626_n / 10LLU);;
			jule::U32 _3803_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1ab9e39ad:;
	}
	_iter_end_1ab9e39ad:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1a4a00ecd_trim(_35219_a);
}



inline jule::Bool _1a4a01d9c_shouldRoundUp(_1a49ee680_decimal* _39919_a, jule::I32 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1a4a03574_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1a4a04047_small(static_cast<jule::I32>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_s_1aa9372d7_byte__jule_tuple_str __jule_assign_result = _1a4a04872_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1a4a0393c_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1a4a04047_small(static_cast<jule::I32>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_s_1aa9372d7_byte__jule_tuple_str __jule_assign_result = _1a4a04872_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1a4a03c06_Itoa(jule::I32 _819_i) {
	return _1a4a0393c_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1a4a04047_small(jule::I32 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1d7492e59_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1a4a042cd_isPowerOfTwo(jule::I32 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_s_1aa9372d7_byte__jule_tuple_str _1a4a04872_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_s_1aa9372d7_byte__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("conv: illegal base", 18) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1aba28cce:;
			{
				{
					while ((_10533_u >= 1000000000LL)) {
						{
							jule::U64 _1325_q = (_10533_u / 1000000000LL);;
							jule::U32 _1339_us = static_cast<jule::U32>((jule::U64)(_10533_u - (jule::U64)(_1325_q * 1000000000LL)));;
							jule::I32 _1349_j = 4LL;;
							for (; (_1349_j > 0LL); (_1349_j)--) {
								{
									jule::U32 _1366_is = (jule::U32)(({ jule::U32 __jule_x = _1339_us; jule::U32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) << 1LLU);;
									_1339_us=(_1339_us / 100LLU);
									_1126_i-=2LL;
									_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1366_is + 1LLU)));
									_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1366_is));
								}
							_iter_next_1aba2b892:;
							}
							_iter_end_1aba2b892:;;
							(_1126_i)--;
							_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)((jule::U32)(_1339_us << 1LLU) + 1LLU)));
							_10533_u=_1325_q;
						}
					_iter_next_1aba2ae57:;
					}
					_iter_end_1aba2ae57:;;
				};
				jule::U32 _1547_us = static_cast<jule::U32>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U32 _1564_is = (jule::U32)(({ jule::U32 __jule_x = _1547_us; jule::U32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) << 1LLU);;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1564_is));
					}
				_iter_next_1aba2ac26:;
				}
				_iter_end_1aba2ac26:;;
				jule::U32 _1643_is = (jule::U32)(_1547_us << 1LLU);;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1643_is));
				};
			}
		}
		else if (_1a4a042cd_isPowerOfTwo(_10541_base)) {
			_case_begin_1aba291ec:;
			{
				jule::U32 _1793_shift = (static_cast<jule::U32>(_1bbebc163_TrailingZeros(static_cast<jule::U32>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U32 _1813_m = (jule::U32)(static_cast<jule::U32>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>((static_cast<jule::U32>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U32 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_1aba33734:;
				}
				_iter_end_1aba33734:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		else {
			_case_begin_1aba2822e:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1aba28ecc:;
				}
				_iter_end_1aba28ecc:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		_match_end_1aba28680:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I32 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_1d7492e59_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline void _1a4a06225_Throw(jule::Str _910_msg) {
	jule::println(_1aab19673_toStr(_910_msg));
	_1bc29ae47_Exit(1LL);
}



inline jule::Bool _1a7963aec_IsUnaryOp(jule::U32 _33314_id) {
	{
		auto expr = &(_1a78b0670_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba84895:;
		if (it != expr_end) {
			jule::U32 *_3349_op = it;
			{
				if ((_33314_id == (*(_3349_op)))) {
					return true;;
				};
			}
			_iter_next_1aba84895:;
			++it;
			goto _iter_begin_1aba84895;
		}
		_iter_end_1aba84895:;
	};
	return false;;
}



inline jule::Bool _1a7963e0a_IsBinOp(jule::U32 _34312_id) {
	{
		auto expr = &(_1a78b094a_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba84da1:;
		if (it != expr_end) {
			jule::U32 *_3449_op = it;
			{
				if ((_34312_id == (*(_3449_op)))) {
					return true;;
				};
			}
			_iter_next_1aba84da1:;
			++it;
			goto _iter_begin_1aba84da1;
		}
		_iter_end_1aba84da1:;
	};
	return false;;
}



inline jule::Bool _1a7964515_IsStr(jule::Str _36310_k) {
	return (!(_36310_k).empty() && ((_36310_k[0LL] == '\"') || _1a796479b_IsRawStr(_36310_k)));;
}



inline jule::Bool _1a796479b_IsRawStr(jule::Str _36613_k) {
	return (!(_36613_k).empty() && (_36613_k[0LL] == '`'));;
}



inline jule::Bool _1a7964a65_IsRune(jule::Str _37011_k) {
	return (!(_37011_k).empty() && (_37011_k[0LL] == '\''));;
}



inline jule::Bool _1a796544a_IsFloat(jule::Str _37912_k) {
	if (_1bd42a647_HasPrefix(_37912_k, jule::Str::lit("0x", 2))) {
		return _1bd430a04_ContainsAny(_37912_k, jule::Str::lit(".pP", 3));;
	};
	return _1bd430a04_ContainsAny(_37912_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1a7965714_IsNum(jule::Str _38710_k) {
	if ((_38710_k).empty()) {
		return false;;
	};
	jule::U8 _3922_b = _38710_k[0LL];;
	return ((_3922_b == '.') || (('0' <= _3922_b) && (_3922_b <= '9')));;
}



inline jule::Bool _1a7965c97_IsIgnoreIdent(jule::Str _40218_ident) {
	return (_40218_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _1a7966061_IsAnonIdent(jule::Str _40516_ident) {
	return (_40516_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _1a79665e4_IsSpace(jule::I32 _41812_r) {
	{
		auto expr = &(_1a78b0461_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba8c44c:;
		if (it != expr_end) {
			jule::I32 *_4199_cr = it;
			{
				if ((_41812_r == (*(_4199_cr)))) {
					return true;;
				};
			}
			_iter_next_1aba8c44c:;
			++it;
			goto _iter_begin_1aba8c44c;
		}
		_iter_end_1aba8c44c:;
	};
	return false;;
}



inline jule::Bool _1a7966ade_IsLetter(jule::I32 _42813_r) {
	return _1bd3b24e1_IsLetter(_42813_r);;
}



inline jule::Bool _1a7967062_IsKeyword(jule::Str _44814_s) {
	{
		auto expr = &(_1a796b671_keywords);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba8ec24:;
		if (it != expr_end) {
			_1a796b286_kindPair *_4499_op = it;
			{
				if ((_44814_s == (*(_4499_op))._field_kind)) {
					return true;;
				};
			}
			_iter_next_1aba8ec24:;
			++it;
			goto _iter_begin_1aba8ec24;
		}
		_iter_end_1aba8ec24:;
	};
	return false;;
}



inline jule::Bool _1a796732b_IsDecimal(jule::I32 _45814_r) {
	return (('0' <= _45814_r) && (_45814_r <= '9'));;
}



inline jule::Bool _1a79675e5_IsBinary(jule::I32 _46113_r) {
	return ((_46113_r == '0') || (_46113_r == '1'));;
}



inline jule::Bool _1a79678ae_IsOctal(jule::I32 _46412_r) {
	return (('0' <= _46412_r) && (_46412_r <= '7'));;
}



inline jule::Bool _1a7967b78_IsHex(jule::I32 _46710_r) {
	{
		
		if ((('0' <= _46710_r) && (_46710_r <= '9'))) {
			_case_begin_1aba91b8d:;
			{
				return true;;
			}
		}
		else if ((('a' <= _46710_r) && (_46710_r <= 'f'))) {
			_case_begin_1aba91c26:;
			{
				return true;;
			}
		}
		else if ((('A' <= _46710_r) && (_46710_r <= 'F'))) {
			_case_begin_1aba91c9d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aba91b27:;
			{
				return false;;
			}
		}
		_match_end_1aba9150b:;
	};
}



inline jule::Bool _1a7967e42_IsAssign(jule::U32 _48213_id) {
	return ((((((((_48213_id == static_cast<jule::U32>(1LLU)) || (_48213_id == static_cast<jule::U32>(27LLU))) || (_48213_id == static_cast<jule::U32>(30LLU))) || (_48213_id == static_cast<jule::U32>(32LLU))) || (_48213_id == static_cast<jule::U32>(24LLU))) || (_48213_id == static_cast<jule::U32>(74LLU))) || (_48213_id == static_cast<jule::U32>(62LLU))) || (_48213_id == static_cast<jule::U32>(65LLU)));;
}



inline jule::Bool _1a796820b_IsPostfixOp(jule::U32 _49416_id) {
	{
		auto expr = &(_1a795c893_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba94b3b:;
		if (it != expr_end) {
			jule::U32 *_4959_op = it;
			{
				if ((_49416_id == (*(_4959_op)))) {
					return true;;
				};
			}
			_iter_next_1aba94b3b:;
			++it;
			goto _iter_begin_1aba94b3b;
		}
		_iter_end_1aba94b3b:;
	};
	return false;;
}



inline jule::Bool _1a79684c5_IsAssignOp(jule::U32 _50415_id) {
	if (_1a796820b_IsPostfixOp(_50415_id)) {
		return true;;
	};
	{
		auto expr = &(_1a795cb7e_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba95e7d:;
		if (it != expr_end) {
			jule::U32 *_5089_op = it;
			{
				if ((_50415_id == (*(_5089_op)))) {
					return true;;
				};
			}
			_iter_next_1aba95e7d:;
			++it;
			goto _iter_begin_1aba95e7d;
		}
		_iter_end_1aba95e7d:;
	};
	return false;;
}



inline _1bc0b03aa_Log _1a796bee0_makeErr(jule::I32 _10112_row, jule::I32 _10122_col, jule::Ptr<_1a7968e65_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args) {
	return _1bc0b03aa_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_10112_row, ._field_Column=_10122_col, ._field_Path=(*((*(_10133_f))))._field_Path, ._field_Text=_1bc0b081c_Logf(_10146_fmt, _10166_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1a796c3a8_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix) {
	if (((*(_11120_bytes)).len() < _11135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaa143e:;
		if (it != expr_end) {
			jule::I32 _1156_i = it - expr->begin();
			{
				if (((*(_11120_bytes))[_1156_i] != _11135_prefix[_1156_i])) {
					return false;;
				};
			}
			_iter_next_1abaa143e:;
			++it;
			_1156_i++;
			goto _iter_begin_1abaa143e;
		}
		_iter_end_1abaa143e:;
	};
	return true;;
}



inline jule::Str _1a796c72c_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I32 _12332_i) {
	jule::Str __jule_func_result;
	(_12332_i)++;
	if ((_12332_i >= (*(_12315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1296_b = (*(_12315_txt))[_12332_i];;
	if ((_1296_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1296_b == '+') || (_1296_b == '-'))) {
		(_12332_i)++;
		if ((_12332_i >= (*(_12315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12315_txt))[_12332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1432_first = _12332_i;;
	for (; (_12332_i < (*(_12315_txt)).len()); (_12332_i)++) {
		{
			_1296_b=(*(_12315_txt))[_12332_i];
			if (((_1296_b != '_') && (!(_1a796732b_IsDecimal(static_cast<jule::I32>(_1296_b)))))) {
				goto _iter_end_1abaa43ba;
			};
		}
	_iter_next_1abaa43ba:;
	}
	_iter_end_1abaa43ba:;;
	if ((_12332_i == _1432_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = _1d7492e59_StrFromBytes((*(_12315_txt)).slice(0LL, _12332_i));
	return __jule_func_result;;
}



inline jule::Str _1a796cae5_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I32 _15728_i) {
	return _1a796c72c_floatFmtE(_15715_txt, _15728_i);;
}



inline jule::Str _1a796ce69_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I32 _16136_i) {
	if (((*(_16119_txt))[_16136_i] != '.')) {
		return jule::Str();;
	};
	(_16136_i)++;
	_julec_label_1abaa5e27:;
	for (; (_16136_i < (*(_16119_txt)).len()); (_16136_i)++) {
		{
			jule::U8 _1693_b = (*(_16119_txt))[_16136_i];;
			{
				
				if ((_1693_b == '_') || _1a796732b_IsDecimal(static_cast<jule::I32>(_1693_b))) {
					_case_begin_1abaa7005:;
					{
						goto _iter_next_1abaa5d06;
					}
				}
				else if (_1a796e7ea_isFloatFmtP(_1693_b, _16136_i)) {
					_case_begin_1abaa709e:;
					{
						return _1a796cae5_floatFmtP(_16119_txt, _16136_i);;
					}
				}
				else {
					_case_begin_1abaa6e7d:;
					{
						goto _iter_end_1abaa5d06;
					}
				}
				_match_end_1abaa6e17:;
			};
		}
	_iter_next_1abaa5d06:;
	}
	_iter_end_1abaa5d06:;;
	return jule::Str();;
}



inline jule::Str _1a796d2dd_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I32 _18236_i) {
	_18236_i+=2LL;
	return _1a796c72c_floatFmtE(_18219_txt, _18236_i);;
}



inline jule::Str _1a796d662_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I32 _18735_i) {
	(_18735_i)++;
	return _1a796c72c_floatFmtE(_18718_txt, _18735_i);;
}



inline jule::Str _1a796dae6_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I32 _19231_i) {
	jule::Str __jule_func_result;
	(_19231_i)++;
	if ((_19231_i >= (*(_19214_txt)).len())) {
		__jule_func_result = _1d7492e59_StrFromBytes((*(_19214_txt)));
		return __jule_func_result;;
	};
	if (((*(_19214_txt))[_19231_i] == '_')) {
		(_19231_i)--;
		__jule_func_result = _1d7492e59_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
		return __jule_func_result;;
	};
	for (; (_19231_i < (*(_19214_txt)).len()); (_19231_i)++) {
		{
			jule::U8 _2023_b = (*(_19214_txt))[_19231_i];;
			if (((_19231_i > 1LL) && ((_2023_b == 'e') || (_2023_b == 'E')))) {
				__jule_func_result = _1a796c72c_floatFmtE(_19214_txt, _19231_i);
				return __jule_func_result;;
			};
			if (((_2023_b != '_') && (!(_1a796732b_IsDecimal(static_cast<jule::I32>(_2023_b)))))) {
				goto _iter_end_1abaa9568;
			};
		}
	_iter_next_1abaa9568:;
	}
	_iter_end_1abaa9568:;;
	if ((_19231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1d7492e59_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
	return __jule_func_result;;
}



inline jule::Str _1a796dd38_commonNum(jule::Slice<jule::U8>* _21715_txt) {
	jule::Str __jule_func_result;
	jule::I32 _2186_i = 0LL;;
	_julec_label_1abaabe2d:;
	for (; (_2186_i < (*(_21715_txt)).len()); (_2186_i)++) {
		{
			jule::U8 _2213_b = (*(_21715_txt))[_2186_i];;
			{
				
				if ((_2213_b == '.')) {
					_case_begin_1abaacb87:;
					{
						__jule_func_result = _1a796dae6_floatNum(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((_2213_b == '_')) {
					_case_begin_1abaacc31:;
					{
						goto _iter_next_1abaac060;
					}
				}
				else if (_1a796e476_isFloatFmtE(_2213_b, _2186_i)) {
					_case_begin_1abaacc97:;
					{
						__jule_func_result = _1a796c72c_floatFmtE(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1a796732b_IsDecimal(static_cast<jule::I32>(_2213_b))))) {
					_case_begin_1abaacd0d:;
					{
						goto _iter_end_1abaac060;
					}
				}
				_match_end_1abaacaaa:;
			};
		}
	_iter_next_1abaac060:;
	}
	_iter_end_1abaac060:;;
	if ((_2186_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1d7492e59_StrFromBytes((*(_21715_txt)).slice(0LL, _2186_i));
	return __jule_func_result;;
}



inline jule::Str _1a796e102_binaryNum(jule::Slice<jule::U8>* _24015_txt) {
	jule::Str __jule_func_result;
	if ((!(_1a796c3a8_bytesHasPrefix(_24015_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_24015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _2496_i = 2LL;;
	for (; (_2496_i < (*(_24015_txt)).len()); (_2496_i)++) {
		{
			if ((((*(_24015_txt))[_2496_i] != '_') && (!(_1a79675e5_IsBinary(static_cast<jule::I32>((*(_24015_txt))[_2496_i])))))) {
				goto _iter_end_1abab05c4;
			};
		}
	_iter_next_1abab05c4:;
	}
	_iter_end_1abab05c4:;;
	if ((_2496_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1d7492e59_StrFromBytes((*(_24015_txt)).slice(0LL, _2496_i));
	return __jule_func_result;;
}



inline jule::Bool _1a796e476_isFloatFmtE(jule::U8 _26216_b, jule::I32 _26225_i) {
	return ((_26225_i > 0LL) && ((_26216_b == 'e') || (_26216_b == 'E')));;
}



inline jule::Bool _1a796e7ea_isFloatFmtP(jule::U8 _26616_b, jule::I32 _26625_i) {
	return ((_26625_i > 0LL) && ((_26616_b == 'p') || (_26616_b == 'P')));;
}



inline jule::Bool _1a796eb6e_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I32 _27038_i) {
	if (((*(_27021_txt))[_27038_i] != '.')) {
		return false;;
	};
	(_27038_i)++;
	_julec_label_1abab3088:;
	for (; (_27038_i < (*(_27021_txt)).len()); (_27038_i)++) {
		{
			jule::U8 _2773_b = (*(_27021_txt))[_27038_i];;
			{
				
				if ((_2773_b == '_') || _1a796732b_IsDecimal(static_cast<jule::I32>(_2773_b))) {
					_case_begin_1abab41dd:;
					{
						goto _iter_next_1abab3693;
					}
				}
				else if (_1a796e7ea_isFloatFmtP(_2773_b, _27038_i)) {
					_case_begin_1abab4287:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1abab4166:;
					{
						goto _iter_end_1abab3693;
					}
				}
				_match_end_1abab4100:;
			};
		}
	_iter_next_1abab3693:;
	}
	_iter_end_1abab3693:;;
	return false;;
}



inline jule::Bool _1a796eee3_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I32 _29133_i) {
	{
		
		if (((*(_29120_txt)).len() < 3LL)) {
			_case_begin_1abab5376:;
			{
				goto _case_begin_1abab3929;
			}
		}
		else if (((*(_29120_txt))[_29133_i] != '.')) {
			_case_begin_1abab3929:;
			{
				goto _case_begin_1abab3990;
			}
		}
		else if ((((*(_29120_txt))[(_29133_i + 1LL)] != 'p') && ((*(_29120_txt))[(_29133_i + 1LL)] != 'P'))) {
			_case_begin_1abab3990:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1abab3891:;
			{
				return true;;
			}
		}
		_match_end_1abab3792:;
	};
}



inline jule::Bool _1a7970367_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I32 _30434_i) {
	{
		
		if (((*(_30421_txt)).len() < 4LL)) {
			_case_begin_1abab6dc2:;
			{
				goto _case_begin_1abab6e38;
			}
		}
		else if (((*(_30421_txt))[_30434_i] != '.')) {
			_case_begin_1abab6e38:;
			{
				goto _case_begin_1abab6eb0;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 1LL)] != 'f') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'F'))) {
			_case_begin_1abab6eb0:;
			{
				goto _case_begin_1abab7037;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 2LL)] != 'p') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'P'))) {
			_case_begin_1abab7037:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1abab69a4:;
			{
				return true;;
			}
		}
		_match_end_1abab6894:;
	};
}



inline jule::Str _1a7970862_octalNum(jule::Slice<jule::U8>* _31914_txt) {
	jule::Str __jule_func_result;
	if (((*(_31914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _3276_octalStart = 1LL;;
	jule::Bool _3296_o = false;;
	if (((*(_31914_txt))[1LL] == 'o')) {
		if (((*(_31914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3276_octalStart)++;
		_3296_o=true;
	};
	jule::I32 _3386_i = _3276_octalStart;;
	for (; (_3386_i < (*(_31914_txt)).len()); (_3386_i)++) {
		{
			jule::U8 _3403_b = (*(_31914_txt))[_3386_i];;
			if ((_3403_b == '.')) {
				if (_3296_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1a796dae6_floatNum(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (_1a796e476_isFloatFmtE(_3403_b, _3386_i)) {
				__jule_func_result = _1a796c72c_floatFmtE(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (((_3403_b != '_') && (!(_1a79678ae_IsOctal(static_cast<jule::I32>(_3403_b)))))) {
				goto _iter_end_1ababb448;
			};
		}
	_iter_next_1ababb448:;
	}
	_iter_end_1ababb448:;;
	if ((_3386_i == _3276_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1d7492e59_StrFromBytes((*(_31914_txt)).slice(0LL, _3386_i));
	return __jule_func_result;;
}



inline jule::Str _1a7970a3d_hexNum(jule::Slice<jule::U8>* _36112_txt) {
	jule::Str __jule_func_result;
	if (((*(_36112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36112_txt))[0LL] != '0') || (((*(_36112_txt))[1LL] != 'x') && ((*(_36112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3706_i = 2LL;;
	_julec_label_1a94e9384:;
	for (; (_3706_i < (*(_36112_txt)).len()); (_3706_i)++) {
		{
			jule::U8 _3733_b = (*(_36112_txt))[_3706_i];;
			{
				
				if (_1a796eee3_isFloatFmtDotp(_36112_txt, _3706_i)) {
					_case_begin_1a94ea000:;
					{
						__jule_func_result = _1a796d662_floatFmtDotp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1a7970367_isFloatFmtDotfp(_36112_txt, _3706_i)) {
					_case_begin_1a94ea099:;
					{
						__jule_func_result = _1a796d2dd_floatFmtDotfp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1a796e7ea_isFloatFmtP(_3733_b, _3706_i)) {
					_case_begin_1a94ea110:;
					{
						__jule_func_result = _1a796cae5_floatFmtP(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1a796eb6e_isFloatFmtDotnp(_36112_txt, _3706_i)) {
					_case_begin_1a94ea176:;
					{
						__jule_func_result = _1a796ce69_floatFmtDotnp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (((_3733_b != '_') && (!(_1a7967b78_IsHex(static_cast<jule::I32>(_3733_b)))))) {
					_case_begin_1a94ea1dc:;
					{
						goto _iter_end_1a94e942d;
					}
				}
				_match_end_1a94e9e12:;
			};
		}
	_iter_next_1a94e942d:;
	}
	_iter_end_1a94e942d:;;
	if ((_3706_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1d7492e59_StrFromBytes((*(_36112_txt)).slice(0LL, _3706_i));
	return __jule_func_result;;
}



inline jule::Str _1a7970d90_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I32 _39428_n) {
	jule::Str __jule_func_result;
	if (((*(_39415_txt)).len() < _39428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _4006_i = 2LL;;
	for (; (_4006_i < _39428_n); (_4006_i)++) {
		{
			if ((!(_1a7967b78_IsHex(static_cast<jule::I32>((*(_39415_txt))[_4006_i]))))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1ab96878a:;
	}
	_iter_end_1ab96878a:;;
	__jule_func_result=_1d7492e59_StrFromBytes((*(_39415_txt)).slice(0LL, _39428_n));
	return __jule_func_result;;
}



inline jule::Str _1a7971159_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt) {
	return _1a7970d90_hexEscape(_41227_txt, 10LL);;
}



inline jule::Str _1a7971423_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt) {
	return _1a7970d90_hexEscape(_41730_txt, 6LL);;
}



inline jule::Str _1a79716dc_hexByteEscape(jule::Slice<jule::U8>* _42219_txt) {
	return _1a7970d90_hexEscape(_42219_txt, 4LL);;
}



inline jule::Str _1a79719a6_byteEscape(jule::Slice<jule::U8>* _42716_txt) {
	jule::Str __jule_func_result;
	if (((*(_42716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1a79678ae_IsOctal(static_cast<jule::I32>((*(_42716_txt))[1LL])))) || (!(_1a79678ae_IsOctal(static_cast<jule::I32>((*(_42716_txt))[2LL]))))) || (!(_1a79678ae_IsOctal(static_cast<jule::I32>((*(_42716_txt))[3LL])))))) {
		return __jule_func_result;;
	};
	__jule_func_result = _1d7492e59_StrFromBytes((*(_42716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1bc0b03aa_Log> _1a797699a_Lex(jule::Ptr<_1a7968e65_Fileset> _80712_f, jule::I32 _80725_mode) {
	if ((_80712_f == nullptr)) {
		return nullptr;;
	};
	_1a7972226_lex _8126_lex = _1a7972226_lex{._field_mode=_80725_mode, ._field_tokens=jule::Slice<jule::Ptr<_1a79633b0_Token>>(nullptr), ._field_file=_80712_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_1bc0b03aa_Log>(nullptr)};;
	_1a7975070_newLine(&_8126_lex);
	_1a7972d4d_lex(&_8126_lex);
	if ((_8126_lex._field_errors.len() > 0LL)) {
		return _8126_lex._field_errors;;
	};
	(*(_80712_f))._field_Tokens=_8126_lex._field_tokens;
	return nullptr;;
}



inline void _1a7a6103a_lshiftUnsig(_1a79ea9a8_Const* _58821_c, _1a79ea9a8_Const* _58832_x) {
	jule::U64 _5892_l = _1a7a5997e_AsU64(_58821_c);;
	jule::U64 _5902_r = _1a7a5997e_AsU64(_58832_x);;
	_1a7a5a276_SetU64(_58821_c, ({ jule::U64 __jule_x = _5892_l; jule::U64 __jule_y = _5902_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _1a7a6136a_rshiftUnsig(_1a79ea9a8_Const* _59421_c, _1a79ea9a8_Const* _59432_x) {
	jule::U64 _5952_l = _1a7a5997e_AsU64(_59421_c);;
	jule::U64 _5962_r = _1a7a5997e_AsU64(_59432_x);;
	_1a7a5a276_SetU64(_59421_c, ({ jule::U64 __jule_x = _5952_l; jule::U64 __jule_y = _5962_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Str _1a7ae60d1_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1abbcab2e:;
			{
				return _1a7ae55ec_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1abbcabb7:;
			{
				return _1a7ae58a5_SysUint;;
			}
		}
		else {
			_case_begin_1abbc7d4b:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1abbc770d:;
	};
}



inline jule::I32 _1a7ae639a_BitSizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1abbcbe0a:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1abbcc14c:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1abbcc1c4:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1abbcbe82:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1abbcc009:;
			{
				return _1a7ae5388_BitSize;;
			}
		}
		else {
			_case_begin_1abbcbc2e:;
			{
				return -1LL;;
			}
		}
		_match_end_1abbcbd50:;
	};
}



inline jule::Str _1a7ae66db_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1abbce78c:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1abbcec76:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1abbcecdc:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1abbce803:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_1abbceb44:;
			{
				return jule::Str();;
			}
		}
		_match_end_1abbce6c1:;
	};
}



inline jule::Str _1a7ae6972_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1abbd023d:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1abbd1519:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1abbd1580:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1abbd02a4:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_1abbce87a:;
			{
				return jule::Str();;
			}
		}
		_match_end_1abbd0e20:;
	};
}



inline jule::Str _1a7ae6c3b_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1abbd310e:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1abbd2c46:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_1abbd032b:;
			{
				return jule::Str();;
			}
		}
		_match_end_1abbd264c:;
	};
}



inline jule::Bool _1a7ae7841_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _1a49e8cb7_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _1a7ae7b0a_BitSizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1abbd7dd3:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1abbd781c:;
			{
				return 64LLU;;
			}
		}
		_match_end_1abbd7003:;
	};
}



inline jule::I32 _1a7ae7dc4_BitSizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1abbd8b81:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1abbd880c:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1abbd8873:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1abbd81ad:;
			{
				return 64LLU;;
			}
		}
		_match_end_1abbd86b9:;
	};
}



inline jule::I32 _1a7ae818d_BitSizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1abbda6bb:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1abbda347:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1abbda3ad:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1abbd9be8:;
			{
				return 64LLU;;
			}
		}
		_match_end_1abbda204:;
	};
}



inline void _1a7ae8336_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1bd4401a6_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1abbdb513:;
				{
					_1a7ae5388_BitSize=64LLU;
					_1a7ae55ec_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_1a7ae58a5_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1abbdb29e:;
				{
					_1a7ae5388_BitSize=32LLU;
					_1a7ae55ec_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_1a7ae58a5_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_1abbdb612:;
		};
	};
}



inline void _1a7ae84ac_init(void) {
	_1a7ae8336_UpdateTarget();
}



inline jule::I64 _1a7aec071_MinI(jule::Str _6113_k) {
	_6113_k=_1a7ae60d1_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1abbdd955:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1abbdd9bb:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1abbdda32:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1abbdda98:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1abbda9a7:;
			{
				return 0LL;;
			}
		}
		_match_end_1abbdb953:;
	};
}



inline jule::I64 _1a7aec37e_MaxI(jule::Str _7913_k) {
	_7913_k=_1a7ae60d1_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1abbe02e7:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1abbe035d:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1abbe03c4:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1abbe044b:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1abbe0083:;
			{
				return 0LL;;
			}
		}
		_match_end_1abbde24c:;
	};
}



inline jule::U64 _1a7aec648_MaxU(jule::Str _9713_k) {
	_9713_k=_1a7ae60d1_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1abbe1c00:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1abbe1c66:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1abbe1ccc:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1abbe1d43:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1abbe197a:;
			{
				return 0LLU;;
			}
		}
		_match_end_1abbe0b44:;
	};
}



inline jule::F64 _1a7aec989_Min(jule::Str _11512_k) {
	_11512_k=_1a7ae60d1_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1a7aec071_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1abbe464d:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1abbe41ca:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1abbe395a:;
			{
				return 0LL;;
			}
		}
		_match_end_1abbe3eee:;
	};
}



inline jule::F64 _1a7aecc20_Max(jule::Str _13312_k) {
	_13312_k=_1a7ae60d1_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1a7aec37e_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1a7aec648_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1abbe5e02:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1abbe660b:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1abbe6232:;
			{
				return 0LL;;
			}
		}
		_match_end_1abbe5d8b:;
	};
}



inline jule::Bool _1a7aedd42_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _1a7aee150_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _1a7aee419_IsInt(jule::Str _4610_k) {
	return (_1a7aedd42_IsSigInt(_4610_k) || _1a7aee150_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1a7aee75a_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _1a7aee9e1_IsNum(jule::Str _5610_k) {
	return (_1a7aee419_IsInt(_5610_k) || _1a7aee75a_IsFloat(_5610_k));;
}



inline jule::Bool _1a7aeecaa_IsSigNum(jule::Str _6113_k) {
	return (_1a7aedd42_IsSigInt(_6113_k) || _1a7aee75a_IsFloat(_6113_k));;
}



inline jule::Bool _1a7b78020_FindModuleFile(jule::Slice<_1bc2584ba_Dir>* _1420_dirents) {
	{
		auto expr = _1420_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbec568:;
		if (it != expr_end) {
			_1bc2584ba_Dir *_159_d = it;
			{
				if (((!(_1bc28abd4_IsDir(&(*(_159_d))._field_Stat))) && (*(_159_d))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1abbec568:;
			++it;
			goto _iter_begin_1abbec568;
		}
		_iter_end_1abbec568:;
	};
	return false;;
}



inline jule::Str _1a7b782ea_FindModuleFileDeep(jule::Str _2627_path) {
	for (;;) {
		{
			jule::Slice<_1bc2584ba_Dir> _287_dirents = ({
				auto except = static__1bd437c1a_Read(_2627_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1abbecea3;
				} jule::Slice<_1bc2584ba_Dir>(nullptr);});
			});;
			jule::Bool _323_exist = _1a7b78020_FindModuleFile(&(_287_dirents));;
			if (_323_exist) {
				return _2627_path;;
			};
			jule::I32 _373_n = _2627_path.len();;
			_2627_path=_1bd4374ab_Dir(_2627_path);
			if ((_2627_path.len() == _373_n)) {
				goto _iter_end_1abbecea3;
			};
		}
	_iter_next_1abbecea3:;
	}
	_iter_end_1abbecea3:;;
	return jule::Str();;
}



inline jule::Slice<_1bc0b03aa_Log> _1a7b785b4_CheckModuleFile(jule::Str* _4821_path) {
	jule::Slice<jule::U8> _492_bytes = ({
		auto except = static__1bc289287_Read(_1bd4367b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4821_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_1bc0b03aa_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bc0b03aa_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _552_s = _1bd432e9b_Trim(_1d7492b90_BytesStr(_492_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_552_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_1bc0b03aa_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bc0b03aa_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1a7b78d56_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78acc47_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1bd428ec5_IsUpper(_142_r);;
}



inline jule::Bool _1a7bd5126_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1a7bbbaad_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I32 _247_i = 0LL;;
		_216_r=_1a7bd7997_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78acc47_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1a7bd704b_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1a7bd738c_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc092de:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1abc092de;
				};
			}
			_iter_next_1abc092de:;
			++it;
			goto _iter_begin_1abc092de;
		}
		_iter_end_1abc092de:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1a7bd7d3d_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I32 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78acc47_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_1d78adce2_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1abc0b08d:;
	}
	_iter_end_1abc0b08d:;;
	return _1d7492e59_StrFromBytes(_686_s);;
}



inline __jule_tuple__1aa9372d7_byte__jule_tuple_bool _1a7bd7623_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple__1aa9372d7_byte__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1abc0d711:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1abc0dde8:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1abc0de5e:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1abc0dec5:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1abc0e03b:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1abc0e0b3:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1abc0e13a:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1abc0e1b2:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1abc0e239:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1abc0e2b1:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1abc0dc61:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1a7bd7997_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple__1aa9372d7_byte__jule_tuple_bool __jule_assign_result = _1a7bd7623_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1abc141a6:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1a49e2156_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1abc13d10:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1a49e2156_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1abc1368e:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1a49e2156_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1abc12a01:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1a49e2156_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1abc125a0:;
	};
}



inline void _1a7bd7d3d_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i) {
	jule::I32 _1462_r = _1a7bd7997_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_1d78adce2_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I32 _1a7c9a395_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I32 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I32 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78ac906_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_1abc1b378:;
	}
	_iter_end_1abc1b378:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1a7ca1e3a_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I32 _292_start = (*(_2824_i));;
	jule::I32 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I32 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78ac906_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_1abc1d479:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1abc1e117:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1abc1dee6:;
			};
		}
	_iter_next_1abc1d08e:;
	}
	_iter_end_1abc1d08e:;;
	return nullptr;;
}



inline void _1a7ca2226_FmtByDefault(_1bc0a106b_Builder* _4822_buf, jule::Any* _4846_arg) {
	if (((*(_4846_arg)) == nullptr)) {
		({
			auto except = _1bc0a204a_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:50:3"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*(_4846_arg)) };
		
		if (_match_expr.type == &__jule_any_type143) {
			_case_begin_1abc1d347:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_4822_buf, _1a49dc173_FmtFloat(static_cast<jule::F64>((*(_4846_arg)).cast<jule::F32>(&__jule_any_type143)), 'g', -1LL, 32LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:55:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1abc20e71:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_4822_buf, _1a49dc173_FmtFloat((*(_4846_arg)).cast<jule::F64>(&__jule_any_type6), 'g', -1LL, 64LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:57:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type144) {
			_case_begin_1abc210c5:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_4822_buf, _1a4a0393c_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I8>(&__jule_any_type144)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:59:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type145) {
			_case_begin_1abc2113b:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_4822_buf, _1a4a0393c_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I16>(&__jule_any_type145)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:61:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1abc2068a:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_4822_buf, _1a4a0393c_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:63:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1abc20701:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_4822_buf, _1a4a0393c_FmtInt((*(_4846_arg)).cast<jule::I64>(&__jule_any_type2), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:65:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type146) {
			_case_begin_1abc20767:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_4822_buf, _1a4a03574_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U8>(&__jule_any_type146)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:67:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type147) {
			_case_begin_1abc207cd:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_4822_buf, _1a4a03574_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U16>(&__jule_any_type147)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:69:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type148) {
			_case_begin_1abc2124b:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_4822_buf, _1a4a03574_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U32>(&__jule_any_type148)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:71:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1abc212b2:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_4822_buf, _1a4a03574_FmtUint((*(_4846_arg)).cast<jule::U64>(&__jule_any_type3), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:73:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1abc21339:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_4822_buf, (*(_4846_arg)).cast<jule::Str>(&__jule_any_type5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:75:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1abc213b1:;
			{
				if ((*(_4846_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					({
						auto except = _1bc0a204a_WriteStr(_4822_buf, jule::Str::lit("true", 4));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:78:4"));
						(except.result);
					});
				} else {
					({
						auto except = _1bc0a204a_WriteStr(_4822_buf, jule::Str::lit("false", 5));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:80:4"));
						(except.result);
					});
				};
			}
		}
		else {
			_case_begin_1abc200c4:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_4822_buf, _1aaacc5ae_toStr((*(_4846_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:83:3"));
					(except.result);
				});
			}
		}
		_match_end_1abc2005d:;
	};
}



inline void _1a7ca2644_applyFmtByDefault(_1bc0a106b_Builder* _8727_buf, jule::I32* _8755_j, jule::Slice<jule::Any> _8763_args) {
	jule::Any _882_arg = _8763_args[(*(_8755_j))];;
	((*(_8755_j)))++;
	_1a7ca2226_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _1a7ca2a62_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1bc0a106b_Builder* _9536_buf, jule::I32* _9564_j, jule::Slice<jule::Any> _9572_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1a7ca2644_applyFmtByDefault(_9536_buf, _9564_j, _9572_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		({
			auto except = _1bc0a204a_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:107:3"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1bc0a1c09_Write(_9536_buf, (*(_9518_fmt)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:110:2"));
		(except.result);
	});
}



inline jule::Slice<jule::U8> _1a7ca2dd6_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _1d7492909_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I32 _1216_i = _1a7c9a395_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I32 _1256_j = 0LL;;
	jule::I32 _1266_last = 0LL;;
	_1bc0a106b_Builder _1276_buf = static__1bc0a18b8_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_1a7c9a395_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			({
				auto except = _1bc0a1c09_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:129:3"));
				(except.result);
			});
			jule::Slice<jule::U8> _1307_format = _1a7ca1e3a_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_1abc50e18;
			};
			_1a7ca2a62_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				({
					auto except = _1bc0a1c09_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:136:4"));
					(except.result);
				});
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_1abc50e18;
			};
			_1266_last=_1216_i;
		}
	_iter_next_1abc50e18:;
	}
	_iter_end_1abc50e18:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		({
			auto except = _1bc0a1c09_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:144:3"));
			(except.result);
		});
	};
	return _1bc0a337b_Buf(&_1276_buf);;
}



inline jule::Str _1a7ca5081_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _1d7492e59_StrFromBytes(_1a7ca2dd6_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1a7a70a83_Fn> _1a76466ae_runtimeFindFn(jule::Ptr<_1a7b5e80e_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_1a7a70a83_Fn> _126_f = _1a7b60e1a_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 109) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_1a7997adc_Struct> _1a7646c0e_runtimeFindStruct(jule::Ptr<_1a7b5e80e_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_1a7997adc_Struct> _256_f = _1a7b60a1e_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 107) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _1a7a75e1d_parameterUsesGenerics(jule::Ptr<_1a7a729db_ParamIns>* _40231_p, jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>* _40246_generics) {
	if (_1a7a6e70d_IsSelf((*((*(_40231_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1a7c4e404_kindUsesGenerics(&((*((*(_40231_p))))._field_Type), _40246_generics);;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b24a49_buildAsComptimeMethodData(jule::Ptr<_1a7a73b41_FnIns>* _203135_f) {
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203135_f)), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7b24c58_findComptimePackage(jule::Ptr<_1a7b7c0bd_sema>* _203929_s) {
	return _1a7b7c596_SelectPackage((*(_203929_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>>((void*)__jule_anon1abe48671, nullptr, nullptr));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b250cc_buildComptimeTypeInfoData(jule::Ptr<_1a7b7c0bd_sema>* _204535_s, jule::Ptr<_1a7c3255d_Type>* _204550_t) {
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7b7b4c9_pushComptimeTypeInfo((*((*(_204535_s))))._field_meta.ptr(), _204550_t), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7b2541d_buildComptimeValue(jule::Ptr<_1a7bed89d_Data>* _205328_d) {
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b16e6a_comptimeValue>(_1a7b16e6a_comptimeValue{._field_data=(*(_205328_d))}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Str _1a7b28245_toStrConstraints(jule::Ptr<_1a7c30b77_InsGeneric> _14321_g) {
	_1bc0a106b_Builder _1446_sb = static__1bc0a18b8_New(128LL);;
	{
		auto expr = &((*(_14321_g))._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac05e017:;
		if (it != expr_end) {
			jule::I32 _1456_i = it - expr->begin();
			jule::Ptr<_1a7c3255d_Type> *_1459_c = it;
			{
				({
					auto except = _1bc0a204a_WriteStr(&_1446_sb, _1a7c32959_Str((*(_1459_c)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:146:3"));
					(except.result);
				});
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					({
						auto except = _1bc0a204a_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:148:4"));
						(except.result);
					});
				};
			}
			_iter_next_1ac05e017:;
			++it;
			_1456_i++;
			goto _iter_begin_1ac05e017;
		}
		_iter_end_1ac05e017:;
	};
	return _1bc0a28ca_Str(&_1446_sb);;
}



inline jule::Bool _1a7b2860d_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a7c3255d_Type>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_1ac060d93:;
			{
				jule::Ptr<_1a7c3b369_Prim> _1573_prim = _1a7c35671_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1a7aeecaa_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_1ac060e09:;
			{
				jule::Ptr<_1a7c3b369_Prim> _1633_prim = _1a7c35671_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1a7aee150_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_1ac060e70:;
			{
				jule::Ptr<_1a7c3b369_Prim> _1693_prim = _1a7c35671_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1a7aee75a_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_1ac060ed6:;
			{
				jule::Ptr<_1a7c3b369_Prim> _1753_prim = _1a7c35671_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1a7aee9e1_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_1ac0611c3:;
			{
				return _1a7c348a1_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_1ac061239:;
			{
				return (!(_1a7c348a1_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_1ac0612a0:;
			{
				return _1a7c3461a_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_1ac061316:;
			{
				return _1a7c34b37_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1ac05cd4b:;
			{
				return false;;
			}
		}
		_match_end_1ac060c3e:;
	};
}



inline jule::Bool _1a7b288c7_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1a7b2660b_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac067361:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1ac067361:;
			++it;
			goto _iter_begin_1ac067361;
		}
		_iter_end_1ac067361:;
	};
	return false;;
}



inline jule::Ptr<_1a7b34938_scopeChecker> _1a7b2b2ae_newScopeCheckerBase(jule::Ptr<_1a7b7c0bd_sema>* _3229_s, jule::Ptr<_1a7a73b41_FnIns> _3243_owner) {
	return jule::new_ptr<_1a7b34938_scopeChecker>(_1a7b34938_scopeChecker{._field_calledFrom=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_s=(*(_3229_s)), ._field_owner=_3243_owner, ._field_parent=jule::Ptr<_1a7b34938_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1a7a76d86_SymTab>(_1a7a76d86_SymTab{._field_File=jule::Ptr<_1a7968e65_Fileset>(nullptr), ._field_Passes=jule::Slice<_1a7b4dcd7_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1a7997adc_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1a7a70a83_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1a7a7b297_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1a7a7d94d_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1a7a80158_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1a7b29246_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_tree=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1a7b33948_result>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1a7b3356e_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1a7b303a1_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1a7b34938_scopeChecker> _1a7b2b677_newScopeChecker(jule::Ptr<_1a7b7c0bd_sema>* _4025_s, jule::Ptr<_1a7a73b41_FnIns> _4039_owner) {
	jule::Ptr<_1a7b34938_scopeChecker> _416_base = _1a7b2b2ae_newScopeCheckerBase(_4025_s, _4039_owner);;
	(*(_416_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a7b3356e_scopeLabel>>>(nullptr);
	(*_416_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a7b303a1_GotoSt>>>(nullptr);
	return _416_base;;
}



inline jule::U32 _1a7b470cc_removeEqFromOp(jule::U32 _208319_op) {
	{
		auto &_match_expr{ _208319_op };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1ac081cb5:;
			{
				return static_cast<jule::U32>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1ac081d2b:;
			{
				return static_cast<jule::U32>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1ac081da3:;
			{
				return static_cast<jule::U32>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1ac081e2a:;
			{
				return static_cast<jule::U32>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1ac0820e5:;
			{
				return static_cast<jule::U32>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1ac08215b:;
			{
				return static_cast<jule::U32>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1ac0821c2:;
			{
				return static_cast<jule::U32>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1ac082249:;
			{
				return static_cast<jule::U32>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1ac0822c1:;
			{
				return static_cast<jule::U32>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1ac08238c:;
			{
				return static_cast<jule::U32>(66LLU);;
			}
		}
		else {
			_case_begin_1ac080a61:;
			{
				return _208319_op;;
			}
		}
		_match_end_1ac080cd6:;
	};
}



inline void _1a7b47385_makeComptimeRange(jule::Ptr<_1a7bed89d_Data>* _211227_d) {
	{
		
		if ((_1a7c37c4a_comptimeStructFields((*((*(_211227_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ac082777:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b00e65_comptimeRange>(_1a7b00e65_comptimeRange{._field_kind=jule::Trait(_1a7c37c4a_comptimeStructFields((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data5)});
			}
		}
		else if ((_1a7c38267_comptimeEnumFields((*((*(_211227_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ac085acc:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b00e65_comptimeRange>(_1a7b00e65_comptimeRange{._field_kind=jule::Trait(_1a7c38267_comptimeEnumFields((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data5)});
			}
		}
		else if ((_1a7c39037_comptimeTypeInfos((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_1ac085b43:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b00e65_comptimeRange>(_1a7b00e65_comptimeRange{._field_kind=jule::Trait(_1a7c39037_comptimeTypeInfos((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data5)});
			}
		}
		else if ((_1a7c38784_comptimeParams((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_1ac0827dd:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b00e65_comptimeRange>(_1a7b00e65_comptimeRange{._field_kind=jule::Trait(_1a7c38784_comptimeParams((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data5)});
			}
		}
		else if ((_1a7c39554_comptimeStatics((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_1ac082854:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b00e65_comptimeRange>(_1a7b00e65_comptimeRange{._field_kind=jule::Trait(_1a7c39554_comptimeStatics((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data5)});
			}
		}
		else if ((_1a7c3a5aa_comptimeFiles((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_1ac0828ba:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b00e65_comptimeRange>(_1a7b00e65_comptimeRange{._field_kind=jule::Trait(_1a7c3a5aa_comptimeFiles((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data5)});
			}
		}
		else if ((_1a7c3a08d_comptimeDecls((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_1ac0861b5:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b00e65_comptimeRange>(_1a7b00e65_comptimeRange{._field_kind=jule::Trait(_1a7c3a08d_comptimeDecls((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1a7b00c45_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1ac082711:;
			{
				(*((*(_211227_d))))._field_Decl=true;
			}
		}
		_match_end_1ac0857d0:;
	};
}



inline jule::Bool _1a7b4761b_canComptimeMatch(jule::Ptr<_1a7bed89d_Data>* _213526_d) {
	if ((!(_1a7bebe62_isGoodValueToInfer(_213526_d)))) {
		return false;;
	};
	return (_1a7bee2d8_IsConst((*(_213526_d)).ptr()) || (_1a7c392bd_comptimeTypeInfo((*((*(_213526_d))))._field_Type.ptr()) != nullptr));;
}



inline jule::Bool _1a7b478d5_stmtIsDef(jule::Any* _214315_stmt) {
	{
		auto &_match_expr{ (*(_214315_stmt)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac090de5:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ac092248:;
			{
				jule::Ptr<_1a7b312b4_MultiAssign> _21483_ma = (*(_214315_stmt)).cast_ptr<_1a7b312b4_MultiAssign>(&__jule_any_type44);;
				return ((*(_21483_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_1ac091ce7:;
			{
				return false;;
			}
		}
		_match_end_1ac091c81:;
	};
}



inline jule::I32 _1a7b47c59_countMatchType(jule::Ptr<_1a7b31c32_Match>* _215520_m, jule::Ptr<_1a7c3255d_Type>* _215532_t) {
	jule::I32 _21566_n = 0LL;;
	_julec_label_1ac094c40:;
	{
		auto expr = &((*((*(_215520_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac095180:;
		if (it != expr_end) {
			jule::Ptr<_1a7b32529_Case> *_21589_c = it;
			{
				if (((*(_21589_c)) == nullptr)) {
					goto _iter_next_1ac095180;
				};
				{
					auto expr = &((*((*(_21589_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac09601b:;
					if (it != expr_end) {
						jule::Ptr<_1a7bed89d_Data> *_216210_expr = it;
						{
							if (((*(_216210_expr)) == nullptr)) {
								goto _iter_end_1ac095180;
							};
							if (_1a7c32c9a_Equal((*(_215532_t)), (*((*(_216210_expr))))._field_Model.cast_ptr<_1a7c3255d_Type>(&__jule_any_type85))) {
								(_21566_n)++;
							};
						}
						_iter_next_1ac09601b:;
						++it;
						goto _iter_begin_1ac09601b;
					}
					_iter_end_1ac09601b:;
				};
			}
			_iter_next_1ac095180:;
			++it;
			goto _iter_begin_1ac095180;
		}
		_iter_end_1ac095180:;
	};
	return _21566_n;;
}



inline jule::Ptr<_1a7b3356e_scopeLabel> _1a7b481dd_findLabelParent(jule::Str* _217921_ident, jule::Ptr<_1a7b34938_scopeChecker> _217937_scope) {
	jule::Ptr<_1a7b3356e_scopeLabel> _21806_label = _1a7b38d05_findLabelScope(_217937_scope, _217921_ident);;
	while ((_21806_label == nullptr)) {
		{
			if ((((*_217937_scope.alloc)._field_parent == nullptr) || ((*_217937_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_217937_scope=(*(_217937_scope))._field_parent;
			_21806_label=_1a7b38d05_findLabelScope(_217937_scope, _217921_ident);
		}
	_iter_next_1ac096439:;
	}
	_iter_end_1ac096439:;;
	return _21806_label;;
}



inline jule::Bool _1a7b48919_checkAssignMut(jule::Ptr<_1a7b7c0bd_sema>* _222624_s, jule::Ptr<_1a7bed89d_Data>* _222635_left, jule::Ptr<_1a7bed89d_Data> _222652_right, jule::Ptr<_1a79633b0_Token> _222666_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_222635_left))))._field_Mutable))) {
			_case_begin_1ac09de36:;
			{
				_1a7b7eec2_pushErr((*(_222624_s)).ptr(), _222666_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_222652_right != nullptr) && (!((*_222652_right.alloc)._field_Mutable))) && _1a7c348a1_Mutable((*_222652_right.alloc)._field_Type.ptr()))) {
			_case_begin_1ac09ded0:;
			{
				_1a7b7eec2_pushErr((*(_222624_s)).ptr(), _222666_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_222652_right))._field_Type), &__jule_any_type5); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac09ddae:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac09dcd2:;
	};
}



inline jule::Bool _1a7b48e03_checkAssign(jule::Ptr<_1a7b7c0bd_sema>* _223921_s, jule::Ptr<_1a7bed89d_Data>* _223936_left, jule::Ptr<_1a7bed89d_Data> _223953_right, jule::Ptr<_1a79633b0_Token> _223967_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7a73b41_FnIns> _22402_f = _1a7c3695d_Fn((*((*(_223936_left))))._field_Type.ptr());;
	if ((((_22402_f != nullptr) && ((*_22402_f.alloc)._field_Decl != nullptr)) && (*(*(_22402_f))._field_Decl.alloc)._field_Global)) {
		_1a7b7eec2_pushErr((*(_223921_s)).ptr(), _223967_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1a7bee2d8_IsConst((*(_223936_left)).ptr())) {
			_case_begin_1ac0a4d1b:;
			{
				_1a7b7eec2_pushErr((*(_223921_s)).ptr(), _223967_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_1a7b80335_pushSuggestion((*(_223921_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_223936_left))))._field_Lvalue))) {
			_case_begin_1ac0a4d93:;
			{
				_1a7b7eec2_pushErr((*(_223921_s)).ptr(), _223967_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ac0a3c2c:;
	};
	__jule_func_result = _1a7b48919_checkAssignMut(_223921_s, _223936_left, _223953_right, _223967_op);
	return __jule_func_result;;
}



inline jule::Bool _1a7b491bc_isValidAstStForNextSt(jule::Any* _225731_n) {
	{
		auto &_match_expr{ (*(_225731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ac0a6ec7:;
			{
				return (!((*((*(_225731_n)).cast_ptr<_1a7987758_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ac09e079:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac0a2e6d:;
			{
				return false;;
			}
		}
		_match_end_1ac0a4e09:;
	};
}



inline jule::Bool _1a7b49486_isValidStForNextSt(jule::Any* _226824_st) {
	{
		auto &_match_expr{ (*(_226824_st)) };
		
		if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type44) {
			_case_begin_1ac0b0354:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ac0b0585:;
			{
				{
					auto &_match_expr{ (*((*(_226824_st)).cast_ptr<_1a7bed89d_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1ac0b2114:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ac0b2455:;
						{
							return false;;
						}
					}
					_match_end_1ac0b23de:;
				};
			}
		}
		else {
			_case_begin_1ac0a7758:;
			{
				return false;;
			}
		}
		_match_end_1ac0a78bd:;
	};
}



inline jule::Ptr<_1a7c3a962_TypeSym> _1a7b4e14a_buildType(jule::Ptr<_1a7978caa_TypeDecl> _6918_t) {
	if ((_6918_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=_6918_t, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr)});;
}



inline jule::Ptr<_1a7beea25_Value> _1a7b4e458_buildExpr(jule::Ptr<_1a797d0de_Expr> _7818_expr) {
	if ((_7818_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=_7818_expr, ._field_Data=jule::Ptr<_1a7bed89d_Data>(nullptr)});;
}



inline jule::Ptr<_1a7c31848_TypeAlias> _1a7b4e722_buildTypeAlias(jule::Ptr<_1a7990981_TypeAliasDecl> _8723_decl) {
	return jule::new_ptr<_1a7c31848_TypeAlias>(_1a7c31848_TypeAlias{._field_Scope=(*(_8723_decl))._field_Scope, ._field_Strict=(*_8723_decl.alloc)._field_Strict, ._field_Public=(*_8723_decl.alloc)._field_Public, ._field_Binded=(*_8723_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_8723_decl.alloc)._field_Token, ._field_Ident=(*_8723_decl.alloc)._field_Ident, ._field_TypeSym=_1a7b4e14a_buildType((*_8723_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1a7996800_Field> _1a7b4ea63_buildField(jule::Ptr<_1a79940a0_FieldDecl> _9919_decl) {
	return jule::new_ptr<_1a7996800_Field>(_1a7996800_Field{._field_Owner=jule::Ptr<_1a7997adc_Struct>(nullptr), ._field_Token=(*(_9919_decl))._field_Token, ._field_Public=(*_9919_decl.alloc)._field_Public, ._field_Mutable=(*_9919_decl.alloc)._field_Mutable, ._field_Ident=(*_9919_decl.alloc)._field_Ident, ._field_TypeSym=_1a7b4e14a_buildType((*_9919_decl.alloc)._field_Kind), ._field_Default=(*_9919_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1a7996800_Field>> _1a7b4ece9_buildFields(jule::Slice<jule::Ptr<_1a79940a0_FieldDecl>>* _11021_decls) {
	jule::Slice<jule::Ptr<_1a7996800_Field>> _1116_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7996800_Field>>::alloc(0LL, (*(_11021_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7996800_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _11021_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac47189c:;
		if (it != expr_end) {
			jule::Ptr<_1a79940a0_FieldDecl> _11214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7996800_Field>> &__jule_push_dest = _1116_fields; __jule_push_dest.push(_1a7b4ea63_buildField(_11214_decl)); };
			}
			_iter_next_1ac47189c:;
			++it;
			goto _iter_begin_1ac47189c;
		}
		_iter_end_1ac47189c:;
	};
	return _1116_fields;;
}



inline jule::Ptr<_1a7997adc_Struct> _1a7b500b3_buildStruct(jule::Ptr<_1a7994996_StructDecl> _11820_decl) {
	return jule::new_ptr<_1a7997adc_Struct>(_1a7997adc_Struct{._field_sema=jule::Ptr<_1a7b7c0bd_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1a7997adc_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1a7997adc_Struct>>(nullptr), ._field_Token=(*(_11820_decl))._field_Token, ._field_Ident=(*_11820_decl.alloc)._field_Ident, ._field_Fields=_1a7b4ece9_buildFields(&((*_11820_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1a7a70a83_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr), ._field_Public=(*_11820_decl.alloc)._field_Public, ._field_Binded=(*_11820_decl.alloc)._field_Binded, ._field_Directives=(*_11820_decl.alloc)._field_Directives, ._field_Generics=(*_11820_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1a7a7b297_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a799a97a_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1a7a6e0ae_Param> _1a7b5037c_buildParam(jule::Ptr<_1a79895e5_ParamDecl> _13019_decl) {
	return jule::new_ptr<_1a7a6e0ae_Param>(_1a7a6e0ae_Param{._field_Token=(*(_13019_decl))._field_Token, ._field_Mutable=(*_13019_decl.alloc)._field_Mutable, ._field_Variadic=(*_13019_decl.alloc)._field_Variadic, ._field_Reference=(*_13019_decl.alloc)._field_Reference, ._field_TypeSym=_1a7b4e14a_buildType((*_13019_decl.alloc)._field_Kind), ._field_Ident=(*_13019_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1a7a6e0ae_Param>> _1a7b50756_buildParams(jule::Slice<jule::Ptr<_1a79895e5_ParamDecl>>* _14121_decls) {
	jule::Slice<jule::Ptr<_1a7a6e0ae_Param>> _1426_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a6e0ae_Param>>::alloc(0LL, (*(_14121_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7a6e0ae_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _14121_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac47587e:;
		if (it != expr_end) {
			jule::Ptr<_1a79895e5_ParamDecl> _14314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7a6e0ae_Param>> &__jule_push_dest = _1426_params; __jule_push_dest.push(_1a7b5037c_buildParam(_14314_decl)); };
			}
			_iter_next_1ac47587e:;
			++it;
			goto _iter_begin_1ac47587e;
		}
		_iter_end_1ac47587e:;
	};
	return _1426_params;;
}



inline jule::Ptr<_1a7a6d9e8_RetType> _1a7b50998_buildRetType(jule::Ptr<_1a797bb9d_RetTypeDecl> _14921_decl) {
	if ((((*(_14921_decl))._field_Idents == nullptr) && ((*_14921_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7a6d9e8_RetType>(_1a7a6d9e8_RetType{._field_TypeSym=_1a7b4e14a_buildType((*(_14921_decl))._field_Kind), ._field_Idents=(*_14921_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1a7a70a83_Fn> _1a7b50c62_buildFunc(jule::Ptr<_1a798aa47_FnDecl> _15918_decl) {
	return jule::new_ptr<_1a7a70a83_Fn>(_1a7a70a83_Fn{._field_sema=jule::Ptr<_1a7b7c0bd_sema>(nullptr), ._field_Token=(*(_15918_decl))._field_Token, ._field_Global=(*_15918_decl.alloc)._field_Global, ._field_Unsafety=(*_15918_decl.alloc)._field_Unsafety, ._field_Public=(*_15918_decl.alloc)._field_Public, ._field_Binded=(*_15918_decl.alloc)._field_Binded, ._field_Statically=(*_15918_decl.alloc)._field_Statically, ._field_Exceptional=(*_15918_decl.alloc)._field_Exceptional, ._field_Ident=(*_15918_decl.alloc)._field_Ident, ._field_Directives=(*_15918_decl.alloc)._field_Directives, ._field_Scope=(*_15918_decl.alloc)._field_Scope, ._field_Generics=(*_15918_decl.alloc)._field_Generics, ._field_Result=_1a7b50998_buildRetType((*_15918_decl.alloc)._field_Result), ._field_Params=_1a7b50756_buildParams(&((*_15918_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1a7997adc_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a7a73b41_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1a7a70a83_Fn>> _1a7b5102b_buildMethods(jule::Slice<jule::Ptr<_1a798aa47_FnDecl>>* _17722_decls) {
	jule::Slice<jule::Ptr<_1a7a70a83_Fn>> _1786_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a70a83_Fn>>::alloc(0LL, (*(_17722_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7a70a83_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _17722_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac47a8b7:;
		if (it != expr_end) {
			jule::Ptr<_1a798aa47_FnDecl> _17914_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7a70a83_Fn>> &__jule_push_dest = _1786_methods; __jule_push_dest.push(_1a7b50c62_buildFunc(_17914_decl)); };
			}
			_iter_next_1ac47a8b7:;
			++it;
			goto _iter_begin_1ac47a8b7;
		}
		_iter_end_1ac47a8b7:;
	};
	return _1786_methods;;
}



inline jule::Slice<jule::Ptr<_1a7c3a962_TypeSym>> _1a7b512e5_buildTraitInherits(jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>* _18528_inherits) {
	jule::Slice<jule::Ptr<_1a7c3a962_TypeSym>> _1866_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3a962_TypeSym>>::alloc(0LL, (*(_18528_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c3a962_TypeSym>(nullptr); __jule_collection; });;
	{
		auto expr = _18528_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac47bd5d:;
		if (it != expr_end) {
			jule::Ptr<_1a7978caa_TypeDecl> _18714_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7c3a962_TypeSym>> &__jule_push_dest = _1866_symbols; __jule_push_dest.push(_1a7b4e14a_buildType(_18714_it)); };
			}
			_iter_next_1ac47bd5d:;
			++it;
			goto _iter_begin_1ac47bd5d;
		}
		_iter_end_1ac47bd5d:;
	};
	return _1866_symbols;;
}



inline jule::Ptr<_1a7a7b297_Trait> _1a7b515ae_buildTrait(jule::Ptr<_1a79951d3_TraitDecl> _19319_decl) {
	return jule::new_ptr<_1a7a7b297_Trait>(_1a7a7b297_Trait{._field_Token=(*(_19319_decl))._field_Token, ._field_Ident=(*_19319_decl.alloc)._field_Ident, ._field_Public=(*_19319_decl.alloc)._field_Public, ._field_Inherits=_1a7b512e5_buildTraitInherits(&((*_19319_decl.alloc)._field_Inherits)), ._field_Methods=_1a7b5102b_buildMethods(&((*_19319_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1a7997adc_Struct>>(nullptr)});;
}



inline jule::Ptr<_1a7a7cde2_EnumItem> _1a7b51878_buildEnumItem(jule::Ptr<_1a799228a_EnumItemDecl> _20322_decl) {
	return jule::new_ptr<_1a7a7cde2_EnumItem>(_1a7a7cde2_EnumItem{._field_Token=(*(_20322_decl))._field_Token, ._field_Ident=(*_20322_decl.alloc)._field_Ident, ._field_Value=_1a7b4e458_buildExpr((*_20322_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1a7a7cde2_EnumItem>> _1a7b51b42_buildEnumItems(jule::Slice<jule::Ptr<_1a799228a_EnumItemDecl>>* _21124_decls) {
	jule::Slice<jule::Ptr<_1a7a7cde2_EnumItem>> _2126_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a7cde2_EnumItem>>::alloc(0LL, (*(_21124_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7a7cde2_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _21124_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac480081:;
		if (it != expr_end) {
			jule::Ptr<_1a799228a_EnumItemDecl> _21314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7a7cde2_EnumItem>> &__jule_push_dest = _2126_items; __jule_push_dest.push(_1a7b51878_buildEnumItem(_21314_decl)); };
			}
			_iter_next_1ac480081:;
			++it;
			goto _iter_begin_1ac480081;
		}
		_iter_end_1ac480081:;
	};
	return _2126_items;;
}



inline jule::Ptr<_1a7a7d94d_Enum> _1a7b5213c_buildEnum(jule::Ptr<_1a7992d4b_EnumDecl> _21918_decl) {
	return jule::new_ptr<_1a7a7d94d_Enum>(_1a7a7d94d_Enum{._field_Token=(*(_21918_decl))._field_Token, ._field_Public=(*_21918_decl.alloc)._field_Public, ._field_Ident=(*_21918_decl.alloc)._field_Ident, ._field_TypeSym=_1a7b4e14a_buildType((*_21918_decl.alloc)._field_Kind), ._field_Items=_1a7b51b42_buildEnumItems(&((*_21918_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a7a7ea81_TypeEnumItem> _1a7b52318_buildTypeEnumItem(jule::Ptr<_1a7993676_TypeEnumItemDecl> _22926_decl) {
	return jule::new_ptr<_1a7a7ea81_TypeEnumItem>(_1a7a7ea81_TypeEnumItem{._field_Token=(*(_22926_decl))._field_Token, ._field_Ident=(*_22926_decl.alloc)._field_Ident, ._field_TypeSym=_1a7b4e14a_buildType((*_22926_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1a7a7ea81_TypeEnumItem>> _1a7b525b0_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a7993676_TypeEnumItemDecl>>* _23728_decls) {
	jule::Slice<jule::Ptr<_1a7a7ea81_TypeEnumItem>> _2386_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a7ea81_TypeEnumItem>>::alloc(0LL, (*(_23728_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7a7ea81_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23728_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4832a4:;
		if (it != expr_end) {
			jule::Ptr<_1a7993676_TypeEnumItemDecl> _23914_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7a7ea81_TypeEnumItem>> &__jule_push_dest = _2386_items; __jule_push_dest.push(_1a7b52318_buildTypeEnumItem(_23914_decl)); };
			}
			_iter_next_1ac4832a4:;
			++it;
			goto _iter_begin_1ac4832a4;
		}
		_iter_end_1ac4832a4:;
	};
	return _2386_items;;
}



inline jule::Ptr<_1a7a80158_TypeEnum> _1a7b52879_buildTypeEnum(jule::Ptr<_1a7993cd6_TypeEnumDecl> _24522_decl) {
	return jule::new_ptr<_1a7a80158_TypeEnum>(_1a7a80158_TypeEnum{._field_Token=(*(_24522_decl))._field_Token, ._field_Public=(*_24522_decl.alloc)._field_Public, ._field_Ident=(*_24522_decl.alloc)._field_Ident, ._field_Items=_1a7b525b0_buildTypeEnumItems(&((*_24522_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a7ba4eb4_Var> _1a7b52b43_buildVar(jule::Ptr<_1a798bc02_VarDecl> _25417_decl) {
	return jule::new_ptr<_1a7ba4eb4_Var>(_1a7ba4eb4_Var{._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Token=(*(_25417_decl))._field_Token, ._field_Ident=(*_25417_decl.alloc)._field_Ident, ._field_Binded=(*_25417_decl.alloc)._field_Binded, ._field_Constant=(*_25417_decl.alloc)._field_Constant, ._field_Mutable=(*_25417_decl.alloc)._field_Mutable, ._field_Public=(*_25417_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_25417_decl.alloc)._field_Statically, ._field_Reference=(*_25417_decl.alloc)._field_Reference, ._field_TypeSym=_1a7b4e14a_buildType((*_25417_decl.alloc)._field_Kind), ._field_Value=_1a7b4e458_buildExpr((*_25417_decl.alloc)._field_Expr), ._field_Refers=static__1a7b4cae9_new(), ._field_Directives=(*_25417_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _1a7b52e0c_buildVars(jule::Slice<jule::Ptr<_1a798bc02_VarDecl>> _27118_decls) {
	jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _2726_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>::alloc(0LL, _27118_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7ba4eb4_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_27118_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac487a7d:;
		if (it != expr_end) {
			jule::Ptr<_1a798bc02_VarDecl> _27314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> &__jule_push_dest = _2726_vars; __jule_push_dest.push(_1a7b52b43_buildVar(_27314_decl)); };
			}
			_iter_next_1ac487a7d:;
			++it;
			goto _iter_begin_1ac487a7d;
		}
		_iter_end_1ac487a7d:;
	};
	return _2726_vars;;
}



inline jule::Ptr<_1a7b29246_Impl> _1a7b531c6_buildImpl(jule::Ptr<_1a7995843_Impl> _27918_decl) {
	return jule::new_ptr<_1a7b29246_Impl>(_1a7b29246_Impl{._field_Base=(*(_27918_decl))._field_Base, ._field_Dest=(*_27918_decl.alloc)._field_Dest, ._field_Methods=_1a7b5102b_buildMethods(&((*_27918_decl.alloc)._field_Methods)), ._field_Statics=_1a7b52e0c_buildVars((*_27918_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1a7b599e6_isImplicitImport(jule::Ptr<_1a7b5e80e_ImportInfo> _79221_imp) {
	return ((*((*(_79221_imp))._field_Decl))._field_Token == nullptr);;
}



inline jule::Ptr<_1a7a76d86_SymTab> _1a7b5bb4c_findVarFileInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _4430_files, jule::Ptr<_1a7ba4eb4_Var>* _4449_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac72a815:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _4514_f = *it;
			{
				if ((_1a7a7942c_findVar1(_4514_f.ptr(), _4449_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1ac72a815:;
			++it;
			goto _iter_begin_1ac72a815;
		}
		_iter_end_1ac72a815:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7ba4eb4_Var> _1a7b5c0c0_findVarInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac72baad:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _5614_f = *it;
			{
				jule::Ptr<_1a7ba4eb4_Var> _577_v = _1a7a7779e_FindVar(_5614_f.ptr(), (*(_5545_ident)), _5557_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1ac72baad:;
			++it;
			goto _iter_begin_1ac72baad;
		}
		_iter_end_1ac72baad:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7c31848_TypeAlias> _1a7b5c4ee_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac72c11e:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _6814_f = *it;
			{
				jule::Ptr<_1a7c31848_TypeAlias> _697_ta = _1a7a77b9a_FindTypeAlias(_6814_f.ptr(), (*(_6751_ident)), _6763_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1ac72c11e:;
			++it;
			goto _iter_begin_1ac72c11e;
		}
		_iter_end_1ac72c11e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7997adc_Struct> _1a7b5c9a5_findStructInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac72d64d:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _8014_f = *it;
			{
				jule::Ptr<_1a7997adc_Struct> _817_s = _1a7a78096_FindStruct(_8014_f.ptr(), (*(_7948_ident)), _7960_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1ac72d64d:;
			++it;
			goto _iter_begin_1ac72d64d;
		}
		_iter_end_1ac72d64d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a70a83_Fn> _1a7b5cda1_findFnInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac72eb7c:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _9214_file = *it;
			{
				jule::Ptr<_1a7a70a83_Fn> _937_f = _1a7a78492_FindFn(_9214_file.ptr(), (*(_9144_ident)), _9156_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1ac72eb7c:;
			++it;
			goto _iter_begin_1ac72eb7c;
		}
		_iter_end_1ac72eb7c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a7b297_Trait> _1a7b5d225_findTraitInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _10328_files, jule::Str* _10347_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac730ebe:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _10414_f = *it;
			{
				jule::Ptr<_1a7a7b297_Trait> _1057_t = _1a7a787d3_FindTrait(_10414_f.ptr(), (*(_10347_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1ac730ebe:;
			++it;
			goto _iter_begin_1ac730ebe;
		}
		_iter_end_1ac730ebe:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a7d94d_Enum> _1a7b5d599_findEnumInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _11527_files, jule::Str* _11546_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7322de:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _11614_f = *it;
			{
				jule::Ptr<_1a7a7d94d_Enum> _1177_e = _1a7a78b24_FindEnum(_11614_f.ptr(), (*(_11546_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1ac7322de:;
			++it;
			goto _iter_begin_1ac7322de;
		}
		_iter_end_1ac7322de:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a80158_TypeEnum> _1a7b5da2d_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _12731_files, jule::Str* _12750_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac733642:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _12814_f = *it;
			{
				jule::Ptr<_1a7a80158_TypeEnum> _1297_e = _1a7a78e65_FindTypeEnum(_12814_f.ptr(), (*(_12750_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1ac733642:;
			++it;
			goto _iter_begin_1ac733642;
		}
		_iter_end_1ac733642:;
	};
	return nullptr;;
}



inline jule::Bool _1a7b6455b_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p) {
	return _1bd42a647_HasPrefix((*(_33318_f)), _1bd4367b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1bd43e35e_PathStdlib; (*it++) = _33326_p; __jule_collection; })));;
}



inline jule::Bool _1a7b7951b_isValidModelForRef(jule::Any* _1528_m) {
	{
		auto &_match_expr{ (*(_1528_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac742ad5:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ac742ec0:;
			{
				jule::Ptr<_1a7a6842c_StructSubIdentExpr> _207_model = (*(_1528_m)).cast_ptr<_1a7a6842c_StructSubIdentExpr>(&__jule_any_type99);;
				return (((*(_207_model))._field_Field != nullptr) && _1a7b7951b_isValidModelForRef(&((*((*_207_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ac743036:;
			{
				jule::Ptr<_1a7a63c85_UnaryExpr> _237_unary = (*(_1528_m)).cast_ptr<_1a7a63c85_UnaryExpr>(&__jule_any_type112);;
				if (((*((*(_237_unary))._field_Op))._field_Id != static_cast<jule::U32>(62LLU))) {
					return false;;
				};
				if ((_1a7c35b8d_Ptr((*((*(_237_unary))._field_Expr))._field_Type.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1a7c35907_Sptr((*((*(_237_unary))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _1a7b7951b_isValidModelForRef(&((*((*(_237_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ac74309c:;
			{
				jule::Ptr<_1a7a6621b_IndexingExpr> _377_indexing = (*(_1528_m)).cast_ptr<_1a7a6621b_IndexingExpr>(&__jule_any_type43);;
				if ((_1a7c36441_Arr((*((*(_377_indexing))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _1a7b7951b_isValidModelForRef(&((*((*(_377_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1ac742a6e:;
			{
				return false;;
			}
		}
		_match_end_1ac742673:;
	};
}



inline _1bc0b03aa_Log _1a7b79a49_compilerErr(jule::Ptr<_1a79633b0_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args) {
	_1bc0b03aa_Log _506_log = _1bc0b03aa_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_4917_token))))._field_Row, ._field_Column=(*((*(_4917_token))))._field_Column, ._field_Path=(*((*((*(_4917_token))))._field_File))._field_Path, ._field_Text=_1bc0b081c_Logf(_4951_fmt, _4971_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4939_line) {
		_506_log._field_Line=_1a796a450_GetRow((*((*(_4917_token))))._field_File, (*((*(_4917_token))))._field_Row);
	};
	return _506_log;;
}



inline void _1a7b79d35_appendRetVars(jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>* _6323_dest, jule::Ptr<_1a7a73b41_FnIns>* _6342_f) {
	if ((_1a7a71039_IsVoid((*((*(_6342_f))))._field_Decl.ptr()) || ((*((*(_6342_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a7c3255d_Type>> _686_types = _1a7a74d73_Types((*(_6342_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_6342_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac752c27:;
		if (it != expr_end) {
			jule::I32 _697_i = it - expr->begin();
			jule::Ptr<_1a79633b0_Token> _6914_ident = *it;
			{
				if ((_1a7965c97_IsIgnoreIdent((*(_6914_ident))._field_Kind) || _1a7966061_IsAnonIdent((*(_6914_ident))._field_Kind))) {
					goto _iter_next_1ac752c27;
				};
				{ jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> &__jule_push_dest = (*(_6323_dest)); __jule_push_dest.push(jule::new_ptr<_1a7ba4eb4_Var>(_1a7ba4eb4_Var{._field_Scope=(*((*(_6342_f))))._field_Scope, ._field_Token=_6914_ident, ._field_Ident=(*(_6914_ident))._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=_686_types[_697_i]}), ._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_RetOrder=_697_i, ._field_Depends=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr)})); };
			}
			_iter_next_1ac752c27:;
			++it;
			_697_i++;
			goto _iter_begin_1ac752c27;
		}
		_iter_end_1ac752c27:;
	};
	if ((((*(*((*((*(_6342_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6323_dest)).len() == 1LL))) {
		(*((*(_6323_dest))[((*(_6323_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1a7b7a165_appendParamVars(jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>* _9325_dest, jule::Ptr<_1a7a73b41_FnIns>* _9344_f) {
	if (((*((*(_9344_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9344_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac757446:;
		if (it != expr_end) {
			jule::Ptr<_1a7a729db_ParamIns> _9814_p = *it;
			{
				if ((_1a7965c97_IsIgnoreIdent((*((*(_9814_p))._field_Decl))._field_Ident) || _1a7966061_IsAnonIdent((*((*(_9814_p))._field_Decl))._field_Ident))) {
					goto _iter_next_1ac757446;
				};
				jule::Ptr<_1a7ba4eb4_Var> _1037_v = jule::new_ptr<_1a7ba4eb4_Var>(_1a7ba4eb4_Var{._field_Scope=(*((*(_9344_f))))._field_Scope, ._field_Token=(*(*(_9814_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_9814_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_9814_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*((*(_9814_p))._field_Decl))._field_Reference, ._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr)}), ._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr)});;
				{
					
					if (_1a7a6e70d_IsSelf((*(_9814_p))._field_Decl)) {
						_case_begin_1ac75b2b3:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9344_f))))._field_Owner, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)});
							(*_1037_v.alloc)._field_Reference=(!(_1a7a6e994_IsRef((*(_9814_p))._field_Decl)));
							if (_1a7a6e994_IsRef((*(_9814_p))._field_Decl)) {
								((*(_1037_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1037_v))._field_TypeSym.alloc)._field_Type))._field_Kind=jule::Trait(jule::new_ptr<_1a7c3ed95_Sptr>(_1a7c3ed95_Sptr{._field_Elem=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1037_v))._field_TypeSym))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_9814_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1ac75ae94:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c40868_Slc>(_1a7c40868_Slc{._field_Elem=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*((*_9814_p.alloc)._field_Type))._field_Kind})}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1ac75ae2d:;
						{
							(*(*(_1037_v))._field_TypeSym.alloc)._field_Type=(*_9814_p.alloc)._field_Type;
						}
					}
					_match_end_1ac75ad0c:;
				};
				{ jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> &__jule_push_dest = (*(_9325_dest)); __jule_push_dest.push(_1037_v); };
			}
			_iter_next_1ac757446:;
			++it;
			goto _iter_begin_1ac757446;
		}
		_iter_end_1ac757446:;
	};
}



inline void _1a7b7a451_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>* _15134_dest, jule::Ptr<_1a7a73b41_FnIns>* _15159_f) {
	jule::I32 _1526_size = (*((*(_15159_f))))._field_Generics.len();;
	if (((*((*((*(_15159_f))))._field_Decl))._field_Owner != nullptr)) {
		_1526_size+=(*(*((*((*(_15159_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1526_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15159_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac763980:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			jule::Ptr<_1a7c30b77_InsGeneric> _16114_g = *it;
			{
				if ((_16114_g == nullptr)) {
					goto _iter_next_1ac763980;
				};
				jule::Ptr<_1a7985eb5_GenericDecl> _1657_decl = (*((*((*(_15159_f))))._field_Decl))._field_Generics[_1617_i];;
				{ jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> &__jule_push_dest = (*(_15134_dest)); __jule_push_dest.push(jule::new_ptr<_1a7c31848_TypeAlias>(_1a7c31848_TypeAlias{._field_Scope=(*(*((*(_15159_f))))._field_Decl.alloc)._field_Scope, ._field_Strict=false, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1657_decl.alloc)._field_Token, ._field_Ident=(*(_1657_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=(*(_16114_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1ac763980:;
			++it;
			_1617_i++;
			goto _iter_begin_1ac763980;
		}
		_iter_end_1ac763980:;
	};
	if (((*((*((*(_15159_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_1a799a97a_StructIns> _1777_owner = (*((*(_15159_f))))._field_Owner;;
		{
			auto expr = &((*(_1777_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac7655ec:;
			if (it != expr_end) {
				jule::I32 _1788_i = it - expr->begin();
				jule::Ptr<_1a7c30b77_InsGeneric> _17815_g = *it;
				{
					jule::Ptr<_1a7985eb5_GenericDecl> _1798_decl = (*((*(_1777_owner))._field_Decl))._field_Generics[_1788_i];;
					{ jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>> &__jule_push_dest = (*(_15134_dest)); __jule_push_dest.push(jule::new_ptr<_1a7c31848_TypeAlias>(_1a7c31848_TypeAlias{._field_Scope=(*(*((*(_15159_f))))._field_Decl.alloc)._field_Scope, ._field_Strict=false, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1798_decl.alloc)._field_Token, ._field_Ident=(*(_1798_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=(*(_17815_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1ac7655ec:;
				++it;
				_1788_i++;
				goto _iter_begin_1ac7655ec;
			}
			_iter_end_1ac7655ec:;
		};
	};
}



inline jule::Ptr<_1a7a76d86_SymTab> _1a7b7a7c5_findFile(jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>* _19218_files, jule::Ptr<_1a7968e65_Fileset>* _19237_handler) {
	{
		auto expr = _19218_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac765c90:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _19314_fl = *it;
			{
				if (((*(_19314_fl))._field_File == (*(_19237_handler)))) {
					return _19314_fl;;
				};
			}
			_iter_next_1ac765c90:;
			++it;
			goto _iter_begin_1ac765c90;
		}
		_iter_end_1ac765c90:;
	};
	return nullptr;;
}



inline void _1a7b7ab6b_pushSuggestion(_1bc0b03aa_Log* _20130_log, jule::Str _20148_fmt, jule::Slice<jule::Any> _20168_args) {
	(*(_20130_log))._field_Suggestion=_1bc0b081c_Logf(_20148_fmt, _20168_args);
}



inline void _1a7ba2e18_pushImplemented(jule::Ptr<_1a7a7b297_Trait> _277624_t, jule::Ptr<_1a7997adc_Struct>* _277640_d) {
	_julec_label_1ac76b449:;
	{
		
		if (((*(_277624_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1ac76c1e7:;
			{
				{
					auto expr = &((*_277624_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac76cb65:;
					if (it != expr_end) {
						jule::Ptr<_1a7997adc_Struct> _278010_s = *it;
						{
							if ((_278010_s == (*(_277640_d)))) {
								goto _match_end_1ac76b69c;
							};
						}
						_iter_next_1ac76cb65:;
						++it;
						goto _iter_begin_1ac76cb65;
					}
					_iter_end_1ac76cb65:;
				};
				goto _case_begin_1ac76b757;
			}
		}
		else {
			_case_begin_1ac76b757:;
			{
				(*(_277624_t))._field_Implemented=jule::append((*_277624_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7997adc_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_277640_d)); __jule_collection; }));
			}
		}
		_match_end_1ac76b69c:;
	};
	{
		auto expr = &((*(_277624_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac76d02d:;
		if (it != expr_end) {
			jule::Ptr<_1a7c3a962_TypeSym> _278914_i = *it;
			{
				_1a7ba2e18_pushImplemented(_1a7c37211_Trait((*(_278914_i))._field_Type.ptr()), _277640_d);
			}
			_iter_next_1ac76d02d:;
			++it;
			goto _iter_begin_1ac76d02d;
		}
		_iter_end_1ac76d02d:;
	};
}



inline void _1a7ba3204_pushImplements(jule::Ptr<_1a7997adc_Struct>* _279424_s, jule::Ptr<_1a7a7b297_Trait> _279440_t) {
	_julec_label_1ac76da23:;
	{
		
		if (((*((*(_279424_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1ac76ec66:;
			{
				{
					auto expr = &((*((*(_279424_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac7706d4:;
					if (it != expr_end) {
						jule::Ptr<_1a7a7b297_Trait> _279810_b = *it;
						{
							if ((_279810_b == _279440_t)) {
								goto _match_end_1ac76e21b;
							};
						}
						_iter_next_1ac7706d4:;
						++it;
						goto _iter_begin_1ac7706d4;
					}
					_iter_end_1ac7706d4:;
				};
				goto _case_begin_1ac76e2c6;
			}
		}
		else {
			_case_begin_1ac76e2c6:;
			{
				{ jule::Slice<jule::Ptr<_1a7a7b297_Trait>> &__jule_push_dest = (*((*(_279424_s))))._field_Implements; __jule_push_dest.push(_279440_t); };
			}
		}
		_match_end_1ac76e21b:;
	};
	{
		auto expr = &((*(_279440_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac770a9c:;
		if (it != expr_end) {
			jule::Ptr<_1a7c3a962_TypeSym> _280714_i = *it;
			{
				_1a7ba3204_pushImplements(_279424_s, _1a7c37211_Trait((*(_280714_i))._field_Type.ptr()));
			}
			_iter_next_1ac770a9c:;
			++it;
			goto _iter_begin_1ac770a9c;
		}
		_iter_end_1ac770a9c:;
	};
}



inline void _1a7ba3655_pushRuntimeToStr(jule::Ptr<_1a7b7c0bd_sema>* _281226_s, jule::Ptr<_1a7c3255d_Type>* _281241_t, jule::Ptr<_1a79633b0_Token>* _281256_token, jule::Ptr<_1a7b4c786_ReferenceStack> _28136_refers) {
	if (((((*((*((*(_281226_s))))._field_meta))._field_runtime == nullptr) || _1a7c336d5_IsNil((*(_281241_t)).ptr())) || (_28136_refers == nullptr))) {
		return;;
	};
	jule::Ptr<_1a7a73b41_FnIns> _28176_f = _1a7a72090_instanceForce(_1a76466ae_runtimeFindFn(&((*((*((*(_281226_s))))._field_meta))._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_28176_f))._field_Generics=jule::append((*_28176_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a7c30b77_InsGeneric>(_1a7c30b77_InsGeneric{._field_Type=(*(_281241_t)), ._field_Constraint=jule::Slice<jule::Ptr<_1a7c3255d_Type>>(nullptr)}); __jule_collection; }));
	jule::Bool _28192_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7b9c918_checkGenericFn((*(_281226_s)), &(_28176_f), _281256_token);
		_28192_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_28192_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:2821:3"));;
	};
	_1a7b4d5de_Push(_28136_refers.ptr(), jule::Any(_28176_f, &__jule_any_type65));
}



inline jule::Bool _1a7ba391e_isValidImpAlias(jule::Str _282824_alias) {
	jule::Bool __jule_func_result = false;
	if (_1a7965c97_IsIgnoreIdent(_282824_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (_1a7967062_IsKeyword(_282824_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::I32 _28356_r;
	jule::I32 _283513_size;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78acc47_DecodeRuneStr(_282824_alias);
		_28356_r = __jule_assign_result.__jule_result_arg0;
		_283513_size = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28356_r != '_') && (!(_1a7966ade_IsLetter(_28356_r))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	for (;;) {
		{
			(_282824_alias).mut_slice(_283513_size);;
			if ((_282824_alias.len() == 0LL)) {
				goto _iter_end_1ac776dd3;
			};
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d78acc47_DecodeRuneStr(_282824_alias);
				_28356_r = __jule_assign_result.__jule_result_arg0;
				_283513_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_28356_r != '_') && (!((('0' <= _28356_r) && (_28356_r <= '9'))))) && (!(_1a7966ade_IsLetter(_28356_r))))) {
				__jule_func_result = false;
				return __jule_func_result;;
			};
		}
	_iter_next_1ac776dd3:;
	}
	_iter_end_1ac776dd3:;;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7bd848c_traitHasReferenceReceiver(jule::Ptr<_1a7a7b297_Trait>* _1631_t) {
	{
		auto expr = &((*((*(_1631_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5de1e0:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> *_179_f = it;
			{
				if ((*((*(_179_f))))._field_Statically) {
					goto _iter_next_1ac5de1e0;
				};
				jule::Ptr<_1a7a6e0ae_Param> _233_p = (*((*(_179_f))))._field_Params[0LL];;
				if ((_1a7a6e994_IsRef(_233_p.ptr()) && _1a7a6e70d_IsSelf(_233_p))) {
					return true;;
				};
			}
			_iter_next_1ac5de1e0:;
			++it;
			goto _iter_begin_1ac5de1e0;
		}
		_iter_end_1ac5de1e0:;
	};
	return false;;
}



inline jule::Bool _1a7bd8855_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1a7bed89d_Data>* _3133_d) {
	jule::Str _322_value = _1a49dc173_FmtFloat(_1a7a59c15_AsF64((*((*(_3133_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1a7ae7841_CheckBitFloat(_322_value, _1a7ae639a_BitSizeOf((*(_3121_kind))));;
}



inline jule::Bool _1a7bd8bc9_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1a7bed89d_Data>* _3630_d) {
	jule::F64 _372_min = _1a7aec989_Min(_3618_kind);;
	jule::F64 _382_max = _1a7aecc20_Max(_3618_kind);;
	{
		
		if (_1a7a5ba5d_IsF64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1ac5e2c60:;
			{
				jule::F64 _413_x = _1a7a59462_ReadF64((*((*(_3630_d))))._field_Constant);;
				jule::F64 _423_i;
				jule::F64 _426_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a49b27ec_Modf(_413_x);
					_423_i = __jule_assign_result.__jule_result_arg0;
					_426_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_426_frac != 0LL)) {
					return false;;
				};
				return ((_423_i >= _372_min) && (_423_i <= _382_max));;
			}
		}
		else if (_1a7a5b2aa_IsU64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1ac5e2cc6:;
			{
				jule::F64 _483_x = _1a7a59c15_AsF64((*((*(_3630_d))))._field_Constant);;
				if ((_483_x <= _382_max)) {
					return true;;
				};
			}
		}
		else if (_1a7a5b024_IsI64((*((*(_3630_d))))._field_Constant)) {
			_case_begin_1ac5e2d4d:;
			{
				jule::F64 _533_x = _1a7a59c15_AsF64((*((*(_3630_d))))._field_Constant);;
				return ((_372_min <= _533_x) && (_533_x <= _382_max));;
			}
		}
		_match_end_1ac5e2b3e:;
	};
	return false;;
}



inline jule::Bool _1a7bd9092_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1a7bed89d_Data>* _5932_d) {
	jule::F64 _602_max = _1a7aecc20_Max(_5920_kind);;
	if (((*((*(_5932_d))))._field_IsRune && (_5920_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _1a7bd5126_IsAscii(static_cast<jule::I32>(_1a7a58928_ReadI64((*((*(_5932_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1a7a5ba5d_IsF64((*((*(_5932_d))))._field_Constant.ptr())) {
			_case_begin_1ac5e899c:;
			{
				jule::F64 _673_x = _1a7a59462_ReadF64((*((*(_5932_d))))._field_Constant);;
				if ((_673_x < 0LL)) {
					return false;;
				};
				jule::F64 _713_i;
				jule::F64 _716_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a49b27ec_Modf(_673_x);
					_713_i = __jule_assign_result.__jule_result_arg0;
					_716_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_716_frac != 0LL)) {
					return false;;
				};
				return (_713_i <= _602_max);;
			}
		}
		else if (_1a7a5b2aa_IsU64((*((*(_5932_d))))._field_Constant.ptr())) {
			_case_begin_1ac5e8a13:;
			{
				jule::F64 _773_x = _1a7a59c15_AsF64((*((*(_5932_d))))._field_Constant);;
				if ((_773_x <= _602_max)) {
					return true;;
				};
			}
		}
		else if (_1a7a5b024_IsI64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1ac5e8a79:;
			{
				jule::F64 _823_x = _1a7a59c15_AsF64((*((*(_5932_d))))._field_Constant);;
				return ((0LL <= _823_x) && (_823_x <= _602_max));;
			}
		}
		_match_end_1ac5e7a01:;
	};
	return false;;
}



inline jule::Bool _1a7bd9416_intAssignable(jule::Str _8818_kind, jule::Ptr<_1a7bed89d_Data>* _8830_d) {
	{
		
		if (_1a7aedd42_IsSigInt(_8818_kind)) {
			_case_begin_1ac9e167a:;
			{
				return _1a7bd8bc9_sigAssignable(_8818_kind, _8830_d);;
			}
		}
		else if (_1a7aee150_IsUnsigInt(_8818_kind)) {
			_case_begin_1ac9e1724:;
			{
				return _1a7bd9092_unsigAssignable(_8818_kind, _8830_d);;
			}
		}
		else {
			_case_begin_1ac9e1614:;
			{
				return false;;
			}
		}
		_match_end_1ac9e1504:;
	};
}



inline void _1a7be590b_checkMutRiskOfStructLit(jule::Ptr<_1a7b7c0bd_sema>* _93833_s, jule::Ptr<_1a7a64659_StructLitExpr>* _93844_m) {
	{
		auto expr = &((*((*(_93844_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9e2868:;
		if (it != expr_end) {
			jule::Ptr<_1a7a642b3_StructArgExpr> *_9399_arg = it;
			{
				if ((*((*((*((*(_9399_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1ac9e2868;
				};
				if (((!((*((*((*(_9399_arg))))._field_Expr))._field_Mutable)) && _1a7c348a1_Mutable((*(*((*(_9399_arg))))._field_Expr.alloc)._field_Type.ptr()))) {
					_1a7b7eec2_pushErr((*(_93833_s)).ptr(), (*(*(_9399_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*((*(_9399_arg))))._field_Expr))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1ac9e2868:;
			++it;
			goto _iter_begin_1ac9e2868;
		}
		_iter_end_1ac9e2868:;
	};
}



inline jule::Ptr<_1a7c3255d_Type> _1a7bebb10_lenKind(void) {
	return _1a7ca77d1_primInt;;
}



inline jule::Bool _1a7bebe62_isGoodValueToInfer(jule::Ptr<_1a7bed89d_Data>* _143224_d) {
	return (!(_1a7bedcbb_IsNil((*(_143224_d)).ptr())));;
}



inline jule::Ptr<_1a79781c7_Directive> _1a7c28cd5_findDirective(jule::Slice<jule::Ptr<_1a79781c7_Directive>>* _439523_directives, jule::Str _439554_d) {
	{
		auto expr = _439523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac57211d:;
		if (it != expr_end) {
			jule::Ptr<_1a79781c7_Directive> _439614_dr = *it;
			{
				if (((*((*(_439614_dr))._field_Tag))._field_Kind == _439554_d)) {
					return _439614_dr;;
				};
			}
			_iter_next_1ac57211d:;
			++it;
			goto _iter_begin_1ac57211d;
		}
		_iter_end_1ac57211d:;
	};
	return nullptr;;
}



inline jule::Any _1a7c2919d_findBuiltinsImport(jule::Str* _440424_ident, jule::Ptr<_1a7b5e80e_ImportInfo> _440436_imp) {
	return _1a7caab25_findPackageBuiltinDef(&((*(_440436_imp))._field_LinkPath), _440424_ident);;
}



inline void _1a7c293ce_fitBitsize(jule::Ptr<_1a7bed89d_Data>* _441320_d) {
	jule::Ptr<_1a7c3b369_Prim> _44146_prim = _1a7c35671_Prim((*((*(_441320_d))))._field_Type.ptr());;
	jule::I32 _44152_z = _1a7ae639a_BitSizeOf(_1a7c3b6dd_Str(_44146_prim.ptr()));;
	{
		
		if (_1a7a5b024_IsI64((*((*(_441320_d))))._field_Constant.ptr())) {
			_case_begin_1ac57486d:;
			{
				jule::I32 _44183_k = _1a7ae7dc4_BitSizeOfInt(_1a7a58928_ReadI64((*((*(_441320_d))))._field_Constant));;
				if (((_44183_k > _44152_z) || _1a7aee150_IsUnsigInt((*_44146_prim.alloc)._field_Kind))) {
					(*(*((*(_441320_d))))._field_Constant.alloc)._field_Kind=_1a7ae66db_IntFromBits(_44183_k);
					(*((*(_441320_d))))._field_Type=(*((*(_1a7ca9b35_findBuiltinTypeAlias((*(*((*(_441320_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1a7a5b2aa_IsU64((*((*(_441320_d))))._field_Constant.ptr())) {
			_case_begin_1ac5748d4:;
			{
				jule::I32 _44243_k = _1a7ae818d_BitSizeOfUint(_1a7a58bae_ReadU64((*((*(_441320_d))))._field_Constant));;
				if (((_44243_k > _44152_z) || _1a7aedd42_IsSigInt((*_44146_prim.alloc)._field_Kind))) {
					(*(*((*(_441320_d))))._field_Constant.alloc)._field_Kind=_1a7ae6972_UintFromBits(_44243_k);
					(*((*(_441320_d))))._field_Type=(*((*(_1a7ca9b35_findBuiltinTypeAlias((*(*((*(_441320_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1a7a5ba5d_IsF64((*((*(_441320_d))))._field_Constant)) {
			_case_begin_1ac57495b:;
			{
				if ((_44152_z == 64LLU)) {
					return;;
				};
				jule::I32 _44343_k = _1a7ae7b0a_BitSizeOfFloat(_1a7a59462_ReadF64((*((*(_441320_d))))._field_Constant));;
				if ((_44343_k > _44152_z)) {
					(*(*((*(_441320_d))))._field_Constant.alloc)._field_Kind=_1a7ae6c3b_FloatFromBits(_44343_k);
					(*((*(_441320_d))))._field_Type=(*((*(_1a7ca9b35_findBuiltinTypeAlias((*(*((*(_441320_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		_match_end_1ac57472a:;
	};
}



inline void _1a7c2970e_makeStructLitAlloc(jule::Ptr<_1a7bed89d_Data>* _444228_d, jule::Ptr<_1a7a64659_StructLitExpr>* _444243_lit) {
	(*((*(_444228_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c3ed95_Sptr>(_1a7c3ed95_Sptr{._field_Elem=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_444243_lit))))._field_Strct, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)});
	(*((*(_444228_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a64956_AllocStructLitExpr>(_1a7a64956_AllocStructLitExpr{._field_Lit=(*(_444243_lit))}), &__jule_any_type114);
}



inline jule::Ptr<_1a7ba4eb4_Var> _1a7c29a83_buildErrorVar(jule::Ptr<_1a7b2c238_Scope>* _445323_s, jule::Ptr<_1a7981d18_FnCallExpr>* _445339_fc) {
	return jule::new_ptr<_1a7ba4eb4_Var>(_1a7ba4eb4_Var{._field_Scope=(*(_445323_s)), ._field_Token=(*((*(_445339_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1a7ca9b35_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_TypeSym, ._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr)});;
}



inline jule::Any _1a7c29e07_findBuiltinsSema(jule::Str* _446822_ident, jule::Ptr<_1a7b7c0bd_sema> _446838_s) {
	jule::Str _44706_ppath = _1a7969ae2_Dir((*((*(_446838_s))._field_file))._field_File.ptr());;
	if (_1bd42a647_HasPrefix(_44706_ppath, _1bd43e35e_PathStdlib)) {
		(_44706_ppath).mut_slice(_1bd43e35e_PathStdlib.len());;
		_44706_ppath=(jule::Str::lit("std", 3) + _1bd431791_ReplaceAll(_44706_ppath, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
		return _1a7caab25_findPackageBuiltinDef(&(_44706_ppath), _446822_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1a7c2a1c1_isOkForShifting(jule::Ptr<_1a7bed89d_Data>* _448325_d) {
	if (_1a7bee2d8_IsConst((*(_448325_d)).ptr())) {
		{
			
			if (_1a7a5b024_IsI64((*((*(_448325_d))))._field_Constant.ptr())) {
				_case_begin_1ac58553d:;
				{
					return (_1a7a58928_ReadI64((*((*(_448325_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1a7a5b2aa_IsU64((*((*(_448325_d))))._field_Constant.ptr())) {
				_case_begin_1ac58420c:;
				{
					return true;;
				}
			}
			else if (_1a7a5ba5d_IsF64((*((*(_448325_d))))._field_Constant)) {
				_case_begin_1ac584273:;
				{
					return (_1a7a59462_ReadF64((*((*(_448325_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1ac584174:;
				{
					return false;;
				}
			}
			_match_end_1ac584097:;
		};
	};
	jule::Ptr<_1a7c3b369_Prim> _44962_prim = _1a7c35671_Prim((*((*(_448325_d))))._field_Type.ptr());;
	return ((_44962_prim != nullptr) && _1a7aee419_IsInt(_1a7c3b6dd_Str(_44962_prim.ptr())));;
}



inline jule::Bool _1a7c2a59a_isInstancedStruct(jule::Ptr<_1a799a97a_StructIns> _450022_s) {
	return ((*((*(_450022_s))._field_Decl))._field_Generics.len() == (*_450022_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1a7c2a897_isPtrArithmeticCompatible(jule::Ptr<_1a7bed89d_Data>* _450435_l, jule::Ptr<_1a7bed89d_Data>* _450450_r) {
	jule::Ptr<_1a7c4365c_Ptr> _45052_ptr = _1a7c35b8d_Ptr((*((*(_450450_r))))._field_Type.ptr());;
	if ((_45052_ptr != nullptr)) {
		return _1a7c32c9a_Equal((*(_1a7c35b8d_Ptr((*((*(_450435_l))))._field_Type)))._field_Elem, (*_45052_ptr.alloc)._field_Elem);;
	};
	if ((_1a7bee2d8_IsConst((*(_450450_r)).ptr()) && (*((*(_450450_r))))._field_untyped)) {
		return (_1a7bd9416_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _450450_r) || _1a7bd9416_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _450450_r));;
	};
	_1a7bd9900_typeCompatibilityChecker _45146_tcc = _1a7bd9900_typeCompatibilityChecker{._field_s=jule::Ptr<_1a7b7c0bd_sema>(nullptr), ._field_dest=_1a7ca77d1_primInt, ._field_src=(*((*(_450450_r))))._field_Type, ._field_errorToken=jule::Ptr<_1a79633b0_Token>(nullptr)};;
	if (_1a7bdb0e9_check(&_45146_tcc)) {
		return true;;
	};
	_45146_tcc._field_dest=_1a7ca7418_primUint;
	return _1a7bdb0e9_check(&_45146_tcc);;
}



inline void _1a7c2ada3_applyRuntimeToStr(jule::Ptr<_1a7b7c0bd_sema>* _452527_s, jule::Ptr<_1a7c3255d_Type>* _452542_from, jule::Ptr<_1a7c3255d_Type>* _452560_to, jule::Ptr<_1a79633b0_Token>* _45267_token, jule::Ptr<_1a7b4c786_ReferenceStack> _452633_refers) {
	jule::Ptr<_1a7c3b369_Prim> _45272_prim = _1a7c35671_Prim((*(_452560_to)).ptr());;
	if ((_45272_prim != nullptr)) {
		if (_1a7c3eaba_IsAny(_45272_prim)) {
			_1a7ba3655_pushRuntimeToStr(_452527_s, _452542_from, _45267_token, _452633_refers);
		};
		return;;
	};
	if ((_1a7c361aa_TypeEnum((*(_452560_to)).ptr()) != nullptr)) {
		_1a7ba3655_pushRuntimeToStr(_452527_s, _452542_from, _45267_token, _452633_refers);
		return;;
	};
}



inline void _1a7c2b3ae_applyCastKindModel(jule::Ptr<_1a7b7c0bd_sema>* _454028_s, jule::Ptr<_1a7bed89d_Data>* _454043_d, jule::Ptr<_1a7c3255d_Type>* _454058_t, jule::Ptr<_1a79633b0_Token>* _45417_token, jule::Ptr<_1a7b4c786_ReferenceStack> _454133_refers) {
	_1a7c2ada3_applyRuntimeToStr(_454028_s, &((*((*(_454043_d))))._field_Type), _454058_t, _45417_token, _454133_refers);
	(*((*(_454043_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a64ed9_CastingExpr>(_1a7a64ed9_CastingExpr{._field_Token=(*(_45417_token)), ._field_Expr=jule::new_ptr<_1a7bed89d_Data>((*((*(_454043_d))))), ._field_Type=(*(_454058_t)), ._field_ExprType=(*((*(_454043_d))))._field_Type}), &__jule_any_type94);
}



inline void _1a7c2b8ba_applyCastKind(jule::Ptr<_1a7b7c0bd_sema>* _455123_s, jule::Ptr<_1a7bed89d_Data>* _455138_d, jule::Ptr<_1a7c3255d_Type>* _455153_t, jule::Ptr<_1a79633b0_Token>* _45527_token, jule::Ptr<_1a7b4c786_ReferenceStack> _455233_refers) {
	_1a7c2b3ae_applyCastKindModel(_455123_s, _455138_d, _455153_t, _45527_token, _455233_refers);
	(*((*(_455138_d))))._field_Type=(*(_455153_t));
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c2bac9_buildVoidData(void) {
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca6549_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Str _1a7c2c0b3_checkDataForIntegerIndexing(jule::Ptr<_1a7b7c0bd_sema>* _456337_s, jule::Ptr<_1a7bed89d_Data>* _456352_d, jule::Ptr<_1a79633b0_Token>* _45647_token, jule::Ptr<_1a7b4c786_ReferenceStack> _456433_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_456352_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_1a7c35671_Prim((*((*(_456352_d))))._field_Type.ptr()) == nullptr)) {
			_case_begin_1acc835dc:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_1a7aee419_IsInt(_1a7c3b6dd_Str(_1a7c35671_Prim((*((*(_456352_d))))._field_Type.ptr()).ptr()))))) {
			_case_begin_1acc83653:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_1a7bee2d8_IsConst((*(_456352_d)).ptr())) {
			_case_begin_1acc836b9:;
			{
				if ((_1a7a59c15_AsF64((*((*(_456352_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_1a7c35671_Prim((*((*(_456352_d))))._field_Type) == nullptr) || _1a7bee2d8_IsConst((*(_456352_d)).ptr()) || (_1a7ae60d1_RealKindOf(_1a7c3b6dd_Str(_1a7c35671_Prim((*((*(_456352_d))))._field_Type).ptr())) != _1a7ae60d1_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_1acc83730:;
			{
				_1a7c2b8ba_applyCastKind(_456337_s, _456352_d, &(_1a7ca77d1_primInt), _45647_token, _456433_refers);
			}
		}
		_match_end_1acc831ad:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _1a7c2c5be_applyCastModelByEnum(jule::Ptr<_1a7b7c0bd_sema>* _458930_s, jule::Ptr<_1a7bed89d_Data>* _458945_d, jule::Ptr<_1a7a7d94d_Enum> _458959_e, jule::Ptr<_1a79633b0_Token>* _45907_token, jule::Ptr<_1a7b4c786_ReferenceStack> _459033_refers) {
	if ((_458959_e == nullptr)) {
		return;;
	};
	_1a7c2b3ae_applyCastKindModel(_458930_s, _458945_d, &((*((*(_458959_e))._field_TypeSym))._field_Type), _45907_token, _459033_refers);
}



inline void _1a7c2cadb_castConstByType(jule::Str* _459721_t, jule::Ptr<_1a7bed89d_Data>* _459734_d) {
	{
		
		if (_1a7aedd42_IsSigInt((*(_459721_t)))) {
			_case_begin_1acc8a5c2:;
			{
				{
					auto _match_expr{ _1a7ae639a_BitSizeOf(_1a7ae60d1_RealKindOf((*(_459721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1acc8b194:;
						{
							_1a7a59ebd_SetI64((*((*(_459734_d))))._field_Constant.ptr(), _1a7a596e8_AsI64((*((*(_459734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1acc8b22c:;
						{
							_1a7a59ebd_SetI64((*((*(_459734_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1a7a596e8_AsI64((*((*(_459734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1acc8b293:;
						{
							_1a7a59ebd_SetI64((*((*(_459734_d))))._field_Constant, static_cast<jule::I64>(static_cast<jule::I16>(_1a7a596e8_AsI64((*((*(_459734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1acc8b309:;
						{
							_1a7a59ebd_SetI64((*((*(_459734_d))))._field_Constant, static_cast<jule::I64>(static_cast<jule::I8>(_1a7a596e8_AsI64((*((*(_459734_d))))._field_Constant))));
						}
					}
					_match_end_1acc8b12d:;
				};
			}
		}
		else if (_1a7aee150_IsUnsigInt((*(_459721_t)))) {
			_case_begin_1acc8a66b:;
			{
				{
					auto _match_expr{ _1a7ae639a_BitSizeOf(_1a7ae60d1_RealKindOf((*(_459721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1acc90275:;
						{
							_1a7a5a276_SetU64((*((*(_459734_d))))._field_Constant.ptr(), _1a7a5997e_AsU64((*((*(_459734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1acc902ec:;
						{
							_1a7a5a276_SetU64((*((*(_459734_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1a7a5997e_AsU64((*((*(_459734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1acc90363:;
						{
							_1a7a5a276_SetU64((*((*(_459734_d))))._field_Constant, static_cast<jule::U64>(static_cast<jule::U16>(_1a7a5997e_AsU64((*((*(_459734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1acc903c9:;
						{
							_1a7a5a276_SetU64((*((*(_459734_d))))._field_Constant, static_cast<jule::U64>(static_cast<jule::U8>(_1a7a5997e_AsU64((*((*(_459734_d))))._field_Constant))));
						}
					}
					_match_end_1acc9020e:;
				};
			}
		}
		else if (_1a7aee75a_IsFloat((*(_459721_t)))) {
			_case_begin_1acc8a6d2:;
			{
				{
					auto _match_expr{ _1a7ae639a_BitSizeOf(_1a7ae60d1_RealKindOf((*(_459721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1acc933bb:;
						{
							_1a7a5aa90_SetF64((*((*(_459734_d))))._field_Constant, _1a7a59c15_AsF64((*((*(_459734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1acc94367:;
						{
							_1a7a5aa90_SetF64((*((*(_459734_d))))._field_Constant, static_cast<jule::F64>(static_cast<jule::F32>(_1a7a59c15_AsF64((*((*(_459734_d))))._field_Constant))));
						}
					}
					_match_end_1acc9097e:;
				};
			}
		}
		_match_end_1acc8a45c:;
	};
}



inline void _1a7c2ccb7_updateModelToGenericIns(jule::Any* _463133_m, jule::Ptr<_1a7a73b41_FnIns>* _463147_f) {
	{
		auto &_match_expr{ (*(_463133_m)) };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1acc947a7:;
			{
				(*(_463133_m))=jule::Any((*(_463147_f)), &__jule_any_type65);
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1acc95863:;
			{
				(*((*(_463133_m)).cast_ptr<_1a7a6842c_StructSubIdentExpr>(&__jule_any_type99)))._field_Method=(*(_463147_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1acc9481d:;
			{
				(*((*(_463133_m)).cast_ptr<_1a7a687c3_StructStaticIdentExpr>(&__jule_any_type97)))._field_Method=(*(_463147_f));
			}
		}
		_match_end_1acc8b903:;
	};
}



inline jule::Bool _1a7c2d13b_pushSubIdentFromExpr(jule::Any _464229_expr, jule::Ptr<_1a797967e_SubIdentTypeDecl>* _464255_t) {
	{
		auto &_match_expr{ _464229_expr };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1acc99779:;
			{
				jule::Ptr<_1a797e909_IdentExpr> _46457_e = _464229_expr.unsafe_cast_ptr<_1a797e909_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a79793b5_IdentTypeDecl>> &__jule_push_dest = (*((*(_464255_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a79793b5_IdentTypeDecl>(_1a79793b5_IdentTypeDecl{._field_Token=(*(_46457_e))._field_Token, ._field_Ident=(*_46457_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1acc997e0:;
			{
				jule::Ptr<_1a7981202_SubIdentExpr> _46517_e = _464229_expr.unsafe_cast_ptr<_1a7981202_SubIdentExpr>();;
				if ((!(_1a7c2d13b_pushSubIdentFromExpr((*((*(_46517_e))._field_Expr))._field_Kind, _464255_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1a79793b5_IdentTypeDecl>> &__jule_push_dest = (*((*(_464255_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a79793b5_IdentTypeDecl>(_1a79793b5_IdentTypeDecl{._field_Token=(*(_46517_e))._field_Ident, ._field_Ident=(*((*_46517_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a7978caa_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1acc9c5d4:;
			{
				return false;;
			}
		}
		_match_end_1acc9c56d:;
	};
	return true;;
}



inline jule::Str _1a7c2d405_constoa(jule::Ptr<_1a79ea9a8_Const>* _466513_c) {
	{
		
		if (_1a7a5b024_IsI64((*(_466513_c)).ptr())) {
			_case_begin_1acc9d6e5:;
			{
				return _1a4a0393c_FmtInt(_1a7a58928_ReadI64((*(_466513_c)).ptr()), 10LL);;
			}
		}
		else if (_1a7a5b2aa_IsU64((*(_466513_c)).ptr())) {
			_case_begin_1acca00dc:;
			{
				return _1a4a03574_FmtUint(_1a7a58bae_ReadU64((*(_466513_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1acca0076:;
			{
				return jule::Str();;
			}
		}
		_match_end_1acc9a8ce:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7c2d999_evalEnumStatic(jule::Ptr<_1a7b7c0bd_sema>* _467624_s, jule::Ptr<_1a7a7d94d_Enum>* _467639_enm, jule::Ptr<_1a7a7cde2_EnumItem>* _467656_item, jule::Ptr<_1a79633b0_Token>* _46777_token, jule::Ptr<_1a7b4c786_ReferenceStack> _467733_refers) {
	jule::Ptr<_1a7bed89d_Data> _46786_d = jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_467639_enm)), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
	if (((*(_467656_item)) != nullptr)) {
		(*(_46786_d))._field_Constant=jule::new_ptr<_1a79ea9a8_Const>((*(*((*((*((*(_467656_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46786_d.alloc)._field_Model=jule::Any((*_46786_d.alloc)._field_Constant, &__jule_any_type15);
		_1a7c2c5be_applyCastModelByEnum(_467624_s, &(_46786_d), (*(_467639_enm)), _46777_token, _467733_refers);
	};
	return _46786_d;;
}



inline jule::Ptr<_1a7a64659_StructLitExpr> _1a7c2dc63_isLitBased(jule::Any* _469420_m) {
	{
		auto &_match_expr{ (*(_469420_m)) };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ac617cc9:;
			{
				return (*(_469420_m)).cast_ptr<_1a7a64659_StructLitExpr>(&__jule_any_type96);;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ac6180e8:;
			{
				return (*((*(_469420_m)).cast_ptr<_1a7a64956_AllocStructLitExpr>(&__jule_any_type114)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ac61815e:;
			{
				jule::Ptr<_1a7a6842c_StructSubIdentExpr> _47017_ssi = (*(_469420_m)).cast_ptr<_1a7a6842c_StructSubIdentExpr>(&__jule_any_type99);;
				return _1a7c2dc63_isLitBased(&((*((*(_47017_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ac617d40:;
			{
				jule::Ptr<_1a7a64ed9_CastingExpr> _47047_c = (*(_469420_m)).cast_ptr<_1a7a64ed9_CastingExpr>(&__jule_any_type94);;
				return _1a7c2dc63_isLitBased(&((*((*(_47047_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1ac60ac23:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac60abac:;
	};
}



inline void _1a7c2e04e_makeImplicitDeref(jule::Ptr<_1a7bed89d_Data>* _471127_d, jule::Ptr<_1a79633b0_Token> _471141_baseToken) {
	jule::Ptr<_1a7a63c85_UnaryExpr> _47126_unary = jule::new_ptr<_1a7a63c85_UnaryExpr>(_1a7a63c85_UnaryExpr{._field_Expr=jule::new_ptr<_1a7bed89d_Data>((*((*(_471127_d))))), ._field_Op=jule::new_ptr<_1a79633b0_Token>((*(_471141_baseToken)))});;
	(*((*(_47126_unary))._field_Op))._field_Id=static_cast<jule::U32>(62LLU);
	(*(*(_47126_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_471127_d))))._field_Model=jule::Any(_47126_unary, &__jule_any_type112);
}



inline void _1ac8d0a64_updateRefer(jule::Ptr<_1a7b4c786_ReferenceStack> _472223_ref, jule::Ptr<_1a7a73b41_FnIns>* _472246_old, jule::Ptr<_1a7a73b41_FnIns>* _472259_new) {
	{
		auto expr = &((*(_472223_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8d23c3:;
		if (it != expr_end) {
			jule::I32 _47236_i = it - expr->begin();
			jule::Any _47239_sym = *it;
			{
				if ((jule::Any((*(_472246_old)), &__jule_any_type65) == _47239_sym)) {
					(*(_472223_ref))._field_buffer[_47236_i]=jule::Any((*(_472259_new)), &__jule_any_type65);
				};
			}
			_iter_next_1ac8d23c3:;
			++it;
			_47236_i++;
			goto _iter_begin_1ac8d23c3;
		}
		_iter_end_1ac8d23c3:;
	};
}



inline void _1a7c2e6d1_makeVariadic(jule::Ptr<_1a7bed89d_Data>* _473022_d, jule::Ptr<_1a7c3255d_Type> _473036_elem) {
	(*((*(_473022_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=(*(_473036_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_473036_elem.alloc)._field_Kind});
}



inline jule::Bool _1a7c2eb10_isVarCaptured(jule::Ptr<_1a7b34938_scopeChecker> _474318_r, jule::Ptr<_1a7b34938_scopeChecker> _474340_s, jule::Ptr<_1a7ba4eb4_Var> _474358_v) {
	if (((*(_474358_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_474340_s))._field_scope == (*(_474358_v))._field_Scope)) {
				return false;;
			};
			if ((((*(_474340_s))._field_parent == nullptr) || (_474340_s == _474318_r))) {
				goto _iter_end_1aca2dc28;
			};
			_474340_s=(*(_474340_s))._field_parent;
		}
	_iter_next_1aca2dc28:;
	}
	_iter_end_1aca2dc28:;;
	return true;;
}



inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a7c2ee84_findNamespace(jule::Trait _476022_lookup, jule::Str _476038_namespace) {
	return ((_1a7c5342a_LookupMptrData*)_476022_lookup.safe_type())->_1a7c51714_SelectPackage(_476022_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1a7b5e80e_ImportInfo>>((void*)__jule_anon_1aca30ae8, jule::Ptr<__jule_anon_1aca30ae8_ctx>::make(__jule_anon_1aca30ae8_ctx{._476038_namespace=_476038_namespace}).as<jule::Uintptr>(), __jule_anon_1aca30ae8_ctx_handler));;
}



inline jule::Bool _1a7c4e404_kindUsesGenerics(jule::Ptr<_1a7c3255d_Type>* _178826_k, jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>* _178837_generics) {
	{
		auto expr = _178837_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acabc9cb:;
		if (it != expr_end) {
			jule::Ptr<_1a7985eb5_GenericDecl> *_17899_g = it;
			{
				if (static__1a7c4e008_exist(&((*((*(_17899_g))))._field_Ident), _178826_k)) {
					return true;;
				};
			}
			_iter_next_1acabc9cb:;
			++it;
			goto _iter_begin_1acabc9cb;
		}
		_iter_end_1acabc9cb:;
	};
	return false;;
}



inline jule::Bool _1a7c4e7bc_hasDirective(jule::Slice<jule::Ptr<_1a79781c7_Directive>>* _179822_directives, jule::Str _179853_tag) {
	{
		auto expr = _179822_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acabd092:;
		if (it != expr_end) {
			jule::Ptr<_1a79781c7_Directive> _179914_dr = *it;
			{
				if (((*((*(_179914_dr))._field_Tag))._field_Kind == _179853_tag)) {
					return true;;
				};
			}
			_iter_next_1acabd092:;
			++it;
			goto _iter_begin_1acabd092;
		}
		_iter_end_1acabd092:;
	};
	return false;;
}



inline jule::Bool _1a7c4ea86_canGetPtr(jule::Ptr<_1a7bed89d_Data>* _180719_d) {
	return (*((*(_180719_d))))._field_Lvalue;;
}



inline jule::Bool _1a7c4edc7_isBuiltinStrConvertable(jule::Ptr<_1a7c3255d_Type>* _181033_t) {
	return ((((!(_1a7c3396b_Void((*(_181033_t)).ptr()))) && (_1a7c3695d_Fn((*(_181033_t)).ptr()) == nullptr)) && (_1a7c3772d_Tup((*(_181033_t)).ptr()) == nullptr)) && (!(_1a7c379b4_comptime((*(_181033_t)).ptr()))));;
}



inline jule::Ptr<_1a7c3b369_Prim> _1a7c5015d_buildPrimType(jule::Str _181418_kind) {
	return jule::new_ptr<_1a7c3b369_Prim>(_1a7c3b369_Prim{._field_Kind=_181418_kind});;
}



inline void _1a7c50933_applyImplicitCast(jule::Ptr<_1a7b7c0bd_sema>* _184227_s, jule::Ptr<_1a7c3255d_Type>* _184242_dest, jule::Ptr<_1a7bed89d_Data>* _184260_d, jule::Ptr<_1a79633b0_Token>* _18437_token, jule::Ptr<_1a7b4c786_ReferenceStack> _184333_refers) {
	if (_1a7c336d5_IsNil((*((*(_184260_d))))._field_Type.ptr())) {
		return;;
	};
	jule::Ptr<_1a7c3b369_Prim> _18472_destPrim = _1a7c35671_Prim((*(_184242_dest)).ptr());;
	if (((_18472_destPrim != nullptr) && _1a7c3eaba_IsAny(_18472_destPrim))) {
		jule::Ptr<_1a7c3b369_Prim> _18493_prim = _1a7c35671_Prim((*((*(_184260_d))))._field_Type.ptr());;
		if (((_18493_prim == nullptr) || (!(_1a7c3eaba_IsAny(_18493_prim.ptr()))))) {
			_1a7c2b8ba_applyCastKind(_184227_s, _184260_d, _184242_dest, _18437_token, _184333_refers);
		};
		return;;
	};
	jule::Ptr<_1a7a7b297_Trait> _18562_dt = _1a7c37211_Trait((*(_184242_dest)).ptr());;
	if ((_18562_dt != nullptr)) {
		jule::Ptr<_1a7a7b297_Trait> _18583_bt = _1a7c37211_Trait((*((*(_184260_d))))._field_Type.ptr());;
		if (((_18583_bt == nullptr) || (_18583_bt != _18562_dt))) {
			_1a7c2b3ae_applyCastKindModel(_184227_s, _184260_d, _184242_dest, _18437_token, _184333_refers);
			return;;
		};
	};
	if (((_1a7c361aa_TypeEnum((*(_184242_dest)).ptr()) != nullptr) && (_1a7c361aa_TypeEnum((*((*(_184260_d))))._field_Type.ptr()) == nullptr))) {
		_1a7c2b3ae_applyCastKindModel(_184227_s, _184260_d, _184242_dest, _18437_token, _184333_refers);
		return;;
	};
}



inline jule::Bool _1a7c50d0c_validTypeForXof(jule::Ptr<_1a7c3255d_Type>* _187225_t) {
	return ((((!(_1a7c3396b_Void((*(_187225_t)).ptr()))) && (_1a7c3695d_Fn((*(_187225_t)).ptr()) == nullptr)) && (_1a7c3772d_Tup((*(_187225_t)).ptr()) == nullptr)) && (!(_1a7c379b4_comptime((*(_187225_t)).ptr()))));;
}



inline jule::Ptr<_1a799a97a_StructIns> _1a7c51109_initNewStructType(jule::Str _187822_ident, jule::Ptr<_1a7c3255d_Type> _187838_source) {
	jule::Ptr<_1a7997adc_Struct> _18796_s = jule::new_ptr<_1a7997adc_Struct>(_1a7997adc_Struct{._field_sema=jule::Ptr<_1a7b7c0bd_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1a7997adc_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1a7997adc_Struct>>(nullptr), ._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1a7996800_Field>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a7a70a83_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>(nullptr), ._field_Implements=jule::Slice<jule::Ptr<_1a7a7b297_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a799a97a_StructIns>>(nullptr)});;
	(*_18796_s.alloc)._field_Ident=_187822_ident;
	jule::Ptr<_1a799a97a_StructIns> _18816_ins = _1a799800a_instance(_18796_s);;
	_1a799834b_appendInstance(_18796_s, &(_18816_ins));
	(*(_18816_ins))._field_Source=_187838_source;
	(*_18816_ins.alloc)._field_Comparable=_1a7c3461a_Comparable(_187838_source.ptr());
	(*_18816_ins.alloc)._field_Mutable=_1a7c348a1_Mutable(_187838_source);
	return _18816_ins;;
}



inline __jule_tuple_x_1a7a76d86_SymTab__jule_tuple_s_1bc0b03aa_Log _1a7c5410c_buildSymbols(jule::Ptr<_1a7976deb_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1a7b5378c_symBuilder> _1667_owner) {
	__jule_tuple_x_1a7a76d86_SymTab__jule_tuple_s_1bc0b03aa_Log __jule_func_result;
	jule::Ptr<_1a7b5378c_symBuilder> _176_sb = jule::new_ptr<_1a7b5378c_symBuilder>(_1a7b5378c_symBuilder{._field_owner=_1667_owner, ._field_importer=(*(_1643_importer)), ._field_errors=jule::Slice<_1bc0b03aa_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1a7a76d86_SymTab>(nullptr)});;
	_1a7b5962d_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1a7c5443c_collectImplicitImports(jule::Ptr<_1a7b7c0bd_sema>* _3132_s, jule::Ptr<_1a7a76d86_SymTab>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad14bae8:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1a7b599e6_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1ad14bae8;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std/runtime", 11)) {
						_case_begin_1ad14cd5d:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1ad14c401:;
						{
							__jule_panic_s(jule::Str::lit("sema: implementation mistake in implicit import collection, this panic call should be unreachable", 97) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1ad14c995:;
				};
			}
			_iter_next_1ad14bae8:;
			++it;
			goto _iter_begin_1ad14bae8;
		}
		_iter_end_1ad14bae8:;
	};
}



inline __jule_tuple_x_1a7b62081_Package__jule_tuple_s_1bc0b03aa_Log _1a7c5486b_analyzePackage(jule::Slice<jule::Ptr<_1a7976deb_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I32* _4570_flags) {
	__jule_tuple_x_1a7b62081_Package__jule_tuple_s_1bc0b03aa_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1a7a76d86_SymTab>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7a76d86_SymTab>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad14de91:;
		if (it != expr_end) {
			jule::Ptr<_1a7976deb_AST> _4814_f = *it;
			{
				jule::Ptr<_1a7a76d86_SymTab> _497_table;
				jule::Slice<_1bc0b03aa_Log> _4918_errors;
				({
					__jule_tuple_x_1a7a76d86_SymTab__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a7c5410c_buildSymbols(&(_4814_f), _4549_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1a7a76d86_SymTab>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1ad14de91:;
			++it;
			goto _iter_begin_1ad14de91;
		}
		_iter_end_1ad14de91:;
	};
	jule::Ptr<_1a7b7c0bd_sema> _566_sema = jule::new_ptr<_1a7b7c0bd_sema>(_1a7b7c0bd_sema{._field_errors=jule::Slice<_1bc0b03aa_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1a7a76d86_SymTab>>(nullptr), ._field_file=jule::Ptr<_1a7a76d86_SymTab>(nullptr), ._field_flags=(*(_4570_flags)), ._field_meta=jule::new_ptr<_1a7b7b034_commonSemaMeta>(_1a7b7b034_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1a7b10d65_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1a7b5e80e_ImportInfo>(nullptr)}), ._field_step=0LL});;
	jule::Ptr<_1a7a76d86_SymTab> _636_firstTable = _476_tables[0LL];;
	_1a7c5443c_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1a7ba10d1_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7b62081_Package> _716_pkg = jule::new_ptr<_1a7b62081_Package>(_1a7b62081_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a7b62081_Package__jule_tuple_s_1bc0b03aa_Log _1a7c54d22_AnalyzePackage(jule::Slice<jule::Ptr<_1a7976deb_AST>> _9523_files, jule::Trait _9547_importer, jule::I32 _9567_flags) {
	__jule_tuple_x_1a7b62081_Package__jule_tuple_s_1bc0b03aa_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a7c5486b_analyzePackage(&(_9523_files), &(_9547_importer), &(_9567_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1a7a73b41_FnIns> _1a7ca59dd_findBuiltinFunc(jule::Str* _2021_ident) {
	{
		auto &_match_expr{ (*(_2021_ident)) };
		
		if (_match_expr == jule::Str::lit("print", 5)) {
			_case_begin_1ad158709:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _2314_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cab3c8_builtinCallerPrint), ._field_reloaded=false});;
				return _2314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("println", 7)) {
			_case_begin_1ad158770:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _2614_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cab807_builtinCallerPrintln), ._field_reloaded=false});;
				return _2614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1ad1587d6:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _2914_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cabc36_builtinCallerNew), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1ad15884c:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _3214_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cac165_builtinCallerPanic), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1ad158a17:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _3514_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cac594_builtinCallerMake), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1ad158a7d:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _3814_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cacc04_builtinCallerAppend), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1ad158ae4:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _4114_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cad50c_builtinCallerCopy), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1ad158b5a:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _4414_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7caeba1_builtinCallerLen), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1ad158bd2:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _4714_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cb0454_builtinCallerCap), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1ad158cd1:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _5014_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cb0d6c_builtinCallerDelete), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else {
			_case_begin_1ad156905:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad158583:;
	};
}



inline jule::Ptr<_1a7c31848_TypeAlias> _1a7ca5e3e_primTypeAlias(jule::Str _5718_ident, jule::Ptr<_1a7c3255d_Type>* _5735_k, jule::Bool _5745_strict) {
	if ((!(_5745_strict))) {
		return jule::new_ptr<_1a7c31848_TypeAlias>(_1a7c31848_TypeAlias{._field_Scope=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_Strict=false, ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Ident=_5718_ident, ._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=(*(_5735_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr)});;
	};
	jule::Ptr<_1a799a97a_StructIns> _676_s = _1a7c51109_initNewStructType(_5718_ident, (*(_5735_k)));;
	(*(_676_s))._field_Checked=true;
	(*((*_676_s.alloc)._field_Decl))._field_Public=true;
	return jule::new_ptr<_1a7c31848_TypeAlias>(_1a7c31848_TypeAlias{._field_Scope=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_Strict=false, ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Ident=_5718_ident, ._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_676_s, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)})}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1a7ba4eb4_Var> _1a7ca97e4_findBuiltinVar(jule::Str* _9820_ident) {
	{
		auto &_match_expr{ (*(_9820_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1ad1621d5:;
			{
				static jule::Ptr<_1a7ba4eb4_Var> _10114_v = jule::new_ptr<_1a7ba4eb4_Var>(_1a7ba4eb4_Var{._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=_1a7ca624c_primNil}), ._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a7a582b8_NewNil()})}), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr)});;
				return _10114_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1ad16227e:;
			{
				static jule::Ptr<_1a7ba4eb4_Var> _11614_v = jule::new_ptr<_1a7ba4eb4_Var>(_1a7ba4eb4_Var{._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1a7ca9b35_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a7a57a26_NewBool(true)})}), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr)});;
				return _11614_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1ad162306:;
			{
				static jule::Ptr<_1a7ba4eb4_Var> _13014_v = jule::new_ptr<_1a7ba4eb4_Var>(_1a7ba4eb4_Var{._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1a7ca9b35_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1a7beea25_Value>(_1a7beea25_Value{._field_Expr=jule::Ptr<_1a797d0de_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=true, ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a7a57a26_NewBool(false)})}), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a7ba4eb4_Var>>(nullptr)});;
				return _13014_v;;
			}
		}
		else {
			_case_begin_1ad160b2e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad1620e7:;
	};
}



inline jule::Ptr<_1a7c31848_TypeAlias> _1a7ca9b35_findBuiltinTypeAlias(jule::Str _14825_ident) {
	{
		auto &_match_expr{ _14825_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1ad167097:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _15114_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("any", 3), &(_1a7ca6802_primAny), false);;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1ad1671eb:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _15414_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("str", 3), &(_1a7ca6aee_primStr), false);;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1ad167262:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _15714_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("bool", 4), &(_1a7ca6da7_primBool), false);;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ad16732d:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _16014_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("uintptr", 7), &(_1a7ca7160_primUintptr), false);;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ad167394:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _16314_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("uint", 4), &(_1a7ca7418_primUint), false);;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ad16740a:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _16614_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("int", 3), &(_1a7ca77d1_primInt), false);;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ad167482:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _16914_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("i8", 2), &(_1a7ca7a23_primI8), false);;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ad167509:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _17214_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("i16", 3), &(_1a7ca7cba_primI16), false);;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ad1675e7:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _17514_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("i32", 3), &(_1a7ca8073_primI32), false);;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ad16766e:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _17814_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("i64", 3), &(_1a7ca832b_primI64), false);;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ad1676e6:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _18114_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("u8", 2), &(_1a7ca85d4_primU8), false);;
				return _18114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ad16776d:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _18414_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("u16", 3), &(_1a7ca888c_primU16), false);;
				return _18414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ad1677e5:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _18714_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("u32", 3), &(_1a7ca8b45_primU32), false);;
				return _18714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ad16786c:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _19014_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("u64", 3), &(_1a7ca912e_primU64), false);;
				return _19014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ad1678e4:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _19314_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("f32", 3), &(_1a7ca9371_primF32), false);;
				return _19314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ad16796b:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _19614_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("f64", 3), &(_1a7ca9580_primF64), false);;
				return _19614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4)) {
			_case_begin_1ad1679e3:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _19914_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("byte", 4), &(_1a7ca85d4_primU8), true);;
				return _19914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4)) {
			_case_begin_1ad167a6a:;
			{
				static jule::Ptr<_1a7c31848_TypeAlias> _20214_t = _1a7ca5e3e_primTypeAlias(jule::Str::lit("rune", 4), &(_1a7ca8073_primI32), false);;
				return _20214_t;;
			}
		}
		else {
			_case_begin_1ad16289a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad162988:;
	};
}



inline jule::Any _1a7ca9dbb_findBuiltinDef(jule::Str* _20920_ident) {
	jule::Ptr<_1a7ba4eb4_Var> _2106_v = _1a7ca97e4_findBuiltinVar(_20920_ident);;
	if ((_2106_v != nullptr)) {
		return jule::Any(_2106_v, &__jule_any_type7);;
	};
	jule::Ptr<_1a7a73b41_FnIns> _2146_f = _1a7ca59dd_findBuiltinFunc(_20920_ident);;
	if ((_2146_f != nullptr)) {
		return jule::Any(_2146_f, &__jule_any_type65);;
	};
	jule::Ptr<_1a7c31848_TypeAlias> _2186_ta = _1a7ca9b35_findBuiltinTypeAlias((*(_20920_ident)));;
	if ((_2186_ta != nullptr)) {
		return jule::Any(_2186_ta, &__jule_any_type8);;
	};
	return nullptr;;
}



inline jule::Any _1a7caa185_findBuiltinDefStdMem(jule::Str* _22526_ident) {
	{
		auto &_match_expr{ (*(_22526_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1ad174eea:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _22814_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cb3017_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_22814_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1ad174d52:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _23114_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cb3446_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_23114_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1ad174db8:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _23414_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cb3875_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_23414_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_1ad17455a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad17489b:;
	};
}



inline jule::Any _1a7caa44e_findBuiltinDefStdComptime(jule::Str* _24131_ident) {
	{
		auto &_match_expr{ (*(_24131_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1ad174abb:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _24414_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cb129b_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_24414_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1ad177030:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _24714_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cb16ca_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_24714_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1ad1770a7:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _25014_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cb1b09_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_25014_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1ad174b43:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _25314_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cb227a_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_25314_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1ad174bba:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _25614_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cb26a9_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_25614_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1ad1771ea:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _25914_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a7a70a83_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cb2ad8_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_25914_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_1ad176e64:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad176cbb:;
	};
}



inline jule::Any _1a7caa828_findBuiltinDefStdJuleIntegrated(jule::Str* _26637_ident) {
	{
		auto &_match_expr{ (*(_26637_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1ad177492:;
			{
				static jule::Ptr<_1a7a73b41_FnIns> _26914_f = jule::new_ptr<_1a7a73b41_FnIns>(_1a7a73b41_FnIns{._field_Owner=jule::Ptr<_1a799a97a_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1a7a70a83_Fn>(_1a7a70a83_Fn{._field_sema=jule::Ptr<_1a7b7c0bd_sema>(nullptr), ._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7985eb5_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7985eb5_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1a7a6d9e8_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a6e0ae_Param>>(nullptr), ._field_Owner=jule::Ptr<_1a7997adc_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a7a73b41_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1a7c30b77_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a7a729db_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a7c3255d_Type>(nullptr), ._field_Scope=jule::Ptr<_1a7b2c238_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a7b4c786_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a7bed89d_Data>,jule::Ptr<_1a7c0086c_eval>*,jule::Ptr<_1a7981d18_FnCallExpr>*,jule::Ptr<_1a7bed89d_Data>*>(_1a7cb3ca4_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_26914_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_1ad177283:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad17b1ee:;
	};
}



inline jule::Any _1a7caab25_findPackageBuiltinDef(jule::Str* _28127_linkPath, jule::Str* _28143_ident) {
	{
		auto &_match_expr{ (*(_28127_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std/comptime", 12)) {
			_case_begin_1ad17c970:;
			{
				return _1a7caa44e_findBuiltinDefStdComptime(_28143_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/mem", 7)) {
			_case_begin_1ad17c9d6:;
			{
				return _1a7caa185_findBuiltinDefStdMem(_28143_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/jule/integrated", 19)) {
			_case_begin_1ad17ca4c:;
			{
				return _1a7caa828_findBuiltinDefStdJuleIntegrated(_28143_ident);;
			}
		}
		else {
			_case_begin_1ad17b7c6:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad17b6e9:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7caae99_builtinCallerError(jule::Ptr<_1a7c0086c_eval>* _29428_e, jule::Ptr<_1a7981d18_FnCallExpr>* _29443_fc) {
	if (((*((*(_29443_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr((*(_29428_e)).ptr(), (*((*(_29443_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_29443_fc))))._field_Args.len() > 1LL)) {
		_1a7c00d45_pushErr((*(_29428_e)).ptr(), (*((*((*(_29443_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a7bed89d_Data> _3026_expr = _1a7c204d5_evalExpr((*(_29428_e)), (*((*(_29443_fc))))._field_Args[0LL]);;
	if ((_3026_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a79633b0_Token> _3076_token = (*((*((*(_29443_fc))))._field_Args[0LL]))._field_Token;;
	if (_1a7bedcbb_IsNil(_3026_expr.ptr())) {
		_1a7c00d45_pushErr((*(_29428_e)).ptr(), _3076_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_1a7b91aa5_checkValidityForInitExpr((*((*(_29428_e))))._field_s, true, false, &(_1a7ca6802_primAny), &(_3026_expr), &(_3076_token))))) {
		return nullptr;;
	};
	_1a7c2ada3_applyRuntimeToStr(&((*((*(_29428_e))))._field_s), &((*(_3026_expr))._field_Type), &(_1a7ca6802_primAny), &(_3076_token), _1a7c03d7b_getOwnerRefers((*(_29428_e)).ptr()));
	jule::Ptr<_1a7bed89d_Data> _3206_d = _1a7c2bac9_buildVoidData();;
	(*(_3206_d))._field_Model=jule::Any(jule::new_ptr<_1a7a6b94c_BuiltinErrorCallExpr>(_1a7a6b94c_BuiltinErrorCallExpr{._field_Func=jule::Ptr<_1a7a73b41_FnIns>(nullptr), ._field_Err=_3026_expr}), &__jule_any_type20);
	return _3206_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cab3c8_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _32528_e, jule::Ptr<_1a7981d18_FnCallExpr>* _32543_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	if (((*((*(_32543_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr((*(_32528_e)).ptr(), (*((*(_32543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_32543_fc))))._field_Args.len() > 1LL)) {
		_1a7c00d45_pushErr((*(_32528_e)).ptr(), (*((*((*(_32543_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("print", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a797d0de_Expr> _3346_arg = (*((*(_32543_fc))))._field_Args[0LL];;
	jule::Ptr<_1a7bed89d_Data> _3356_expr = _1a7c204d5_evalExpr((*(_32528_e)), _3346_arg);;
	if ((_3356_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7c4edc7_isBuiltinStrConvertable(&((*(_3356_expr))._field_Type))))) {
		_1a7c00d45_pushErr((*(_32528_e)).ptr(), (*(_3346_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7ba3655_pushRuntimeToStr(&((*((*(_32528_e))))._field_s), &((*(_3356_expr))._field_Type), &((*(_3346_arg))._field_Token), _1a7c03d7b_getOwnerRefers((*(_32528_e)).ptr()));
	jule::Ptr<_1a7bed89d_Data> _3476_d = _1a7c2bac9_buildVoidData();;
	(*(_3476_d))._field_Model=jule::Any(jule::new_ptr<_1a7a69296_BuiltinPrintCallExpr>(_1a7a69296_BuiltinPrintCallExpr{._field_Expr=_3356_expr}), &__jule_any_type24);
	return _3476_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cab807_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _35230_e, jule::Ptr<_1a7981d18_FnCallExpr>* _35245_fc, jule::Ptr<_1a7bed89d_Data>* _35272_d) {
	(*(_35272_d))=_1a7cab3c8_builtinCallerPrint(nullptr, _35230_e, _35245_fc, _35272_d);
	if (((*(_35272_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_35272_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a69593_BuiltinPrintlnCallExpr>(_1a7a69593_BuiltinPrintlnCallExpr{._field_Expr=(*((*((*(_35272_d))))._field_Model.cast_ptr<_1a7a69296_BuiltinPrintCallExpr>(&__jule_any_type24)))._field_Expr}), &__jule_any_type25);
	return (*(_35272_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cabc36_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _36426_e, jule::Ptr<_1a7981d18_FnCallExpr>* _36441_fc, jule::Ptr<_1a7bed89d_Data>* _36468_d) {
	if (((*((*(_36441_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr((*(_36426_e)).ptr(), (*((*(_36441_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_36441_fc))))._field_Args.len() > 2LL)) {
		_1a7c00d45_pushErr((*(_36426_e)).ptr(), (*((*((*(_36441_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a7bed89d_Data> _3736_t = _1a7c1ea12_eval1((*(_36426_e)), (*((*(_36441_fc))))._field_Args[0LL]);;
	if ((_3736_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3736_t))._field_Decl))) {
		_1a7c00d45_pushErr((*(_36426_e)).ptr(), (*((*((*(_36441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*((*(_36468_d))))._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c3ed95_Sptr>(_1a7c3ed95_Sptr{._field_Elem=(*(_3736_t))._field_Type}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)});
	if (((*((*(_36441_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a7c3255d_Type> _3907_old = (*((*(_36426_e))))._field_prefix;;
		(*((*(_36426_e))))._field_prefix=(*_3736_t.alloc)._field_Type;
		jule::Ptr<_1a7bed89d_Data> _3937_init = _1a7c204d5_evalExpr((*(_36426_e)), (*((*(_36441_fc))))._field_Args[1LL]);;
		(*((*(_36426_e))))._field_prefix=_3907_old;
		if ((_3937_init != nullptr)) {
			jule::Ptr<_1a79633b0_Token> _3988_token = (*((*((*(_36441_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1a7b91aa5_checkValidityForInitExpr((*((*(_36426_e))))._field_s, (*((*(_36426_e))))._field_target._field_mutable, false, &((*_3736_t.alloc)._field_Type), &(_3937_init), &(_3988_token));
			_1a7b8c320_checkAssignType((*((*(_36426_e))))._field_s, false, &((*_3736_t.alloc)._field_Type), &(_3937_init), _3988_token, _1a7c03d7b_getOwnerRefers((*(_36426_e)).ptr()));
			(*((*(_36468_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a6996c_BuiltinNewCallExpr>(_1a7a6996c_BuiltinNewCallExpr{._field_Type=(*_3736_t.alloc)._field_Type, ._field_Init=(*(_3937_init))._field_Model}), &__jule_any_type115);
		};
	} else {
		(*((*(_36468_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a6996c_BuiltinNewCallExpr>(_1a7a6996c_BuiltinNewCallExpr{._field_Type=(*_3736_t.alloc)._field_Type, ._field_Init=jule::Any(nullptr)}), &__jule_any_type115);
	};
	return (*(_36468_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cac165_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _41828_e, jule::Ptr<_1a7981d18_FnCallExpr>* _41843_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	if (((*((*(_41843_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr((*(_41828_e)).ptr(), (*((*(_41843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_41843_fc))))._field_Args.len() > 1LL)) {
		_1a7c00d45_pushErr((*(_41828_e)).ptr(), (*((*((*(_41843_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a7bed89d_Data> _4276_expr = _1a7c204d5_evalExpr((*(_41828_e)), (*((*(_41843_fc))))._field_Args[0LL]);;
	if ((_4276_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a7c35671_Prim((*(_4276_expr))._field_Type.ptr()) == nullptr) || (!(_1a7c3e834_IsStr(_1a7c35671_Prim((*(_4276_expr))._field_Type.ptr()).ptr()))))) {
		_1a7c00d45_pushErr((*(_41828_e)).ptr(), (*((*(_41843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7bed89d_Data> _4366_d = _1a7c2bac9_buildVoidData();;
	(*(_4366_d))._field_Model=jule::Any(jule::new_ptr<_1a7a69d46_BuiltinPanicCallExpr>(_1a7a69d46_BuiltinPanicCallExpr{._field_Token=(*((*(_41843_fc))))._field_Token, ._field_Expr=(*(_4276_expr))._field_Model}), &__jule_any_type26);
	return _4366_d;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cac594_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _44427_e, jule::Ptr<_1a7981d18_FnCallExpr>* _44442_fc, jule::Ptr<_1a7bed89d_Data>* _44469_d) {
	if (((*((*(_44442_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44442_fc))))._field_Args.len() == 1LL)) {
			_1a7c00d45_pushErr((*(_44427_e)).ptr(), (*((*(_44442_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1a7c00d45_pushErr((*(_44427_e)).ptr(), (*((*(_44442_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_44442_fc))))._field_Args.len() > 3LL)) {
		_1a7c00d45_pushErr((*(_44427_e)).ptr(), (*((*((*(_44442_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7bed89d_Data> _4576_t = _1a7c1e6c1_evalExprKind((*(_44427_e)), (*((*((*(_44442_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4576_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4576_t))._field_Decl))) {
		_1a7c00d45_pushErr((*(_44427_e)).ptr(), (*((*((*(_44442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1a7c366c7_Slc((*(_4576_t))._field_Type.ptr()) == nullptr)) {
		_1a7c00d45_pushErr((*(_44427_e)).ptr(), (*((*((*(_44442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_4576_t))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_44469_d))))._field_Type=(*(_4576_t))._field_Type;
	jule::Ptr<_1a7bed89d_Data> _4726_lenExpr = _1a7c204d5_evalExpr(_1a7b8b8b3_evalp((*((*(_44427_e))))._field_s, (*((*(_44427_e))))._field_lookup, (*_4576_t.alloc)._field_Type), (*((*(_44442_fc))))._field_Args[1LL]);;
	if ((_4726_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1a7c09aeb_checkIntegerIndexingByData((*(_44427_e)).ptr(), &(_4726_lenExpr), (*((*((*(_44442_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1a7a6a2ec_BuiltinMakeCallExpr> _4796_model = jule::new_ptr<_1a7a6a2ec_BuiltinMakeCallExpr>(_1a7a6a2ec_BuiltinMakeCallExpr{._field_Type=(*_4576_t.alloc)._field_Type, ._field_Len=(*(_4726_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_44469_d))))._field_Model=jule::Any(_4796_model, &__jule_any_type116);
	if (((*((*(_44442_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1a7bed89d_Data> _4857_capExpr = _1a7c204d5_evalExpr(_1a7b8b8b3_evalp((*((*(_44427_e))))._field_s, (*((*(_44427_e))))._field_lookup, (*_4576_t.alloc)._field_Type), (*((*(_44442_fc))))._field_Args[2LL]);;
		if ((_4857_capExpr == nullptr)) {
			return (*(_44469_d));;
		};
		_1a7c09aeb_checkIntegerIndexingByData((*(_44427_e)).ptr(), &(_4857_capExpr), (*((*((*(_44442_fc))))._field_Args[2LL]))._field_Token);
		(*(_4796_model))._field_Cap=(*(_4857_capExpr))._field_Model;
	};
	return (*(_44469_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cacc04_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _49529_e, jule::Ptr<_1a7981d18_FnCallExpr>* _49544_fc, jule::Ptr<_1a7bed89d_Data>* _49571_d) {
	if (((*((*(_49544_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49544_fc))))._field_Args.len() == 1LL)) {
			_1a7c00d45_pushErr((*(_49529_e)).ptr(), (*((*(_49544_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1a7c00d45_pushErr((*(_49529_e)).ptr(), (*((*(_49544_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a797d0de_Expr> _5056_firstArg = (*((*(_49544_fc))))._field_Args[0LL];;
	jule::Ptr<_1a7bed89d_Data> _5066_t = _1a7c204d5_evalExpr((*(_49529_e)), _5056_firstArg);;
	if ((_5066_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7c40868_Slc> _5116_s = _1a7c366c7_Slc((*(_5066_t))._field_Type.ptr());;
	if ((_5116_s == nullptr)) {
		_1a7c00d45_pushErr((*(_49529_e)).ptr(), (*(_5056_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1a7b91aa5_checkValidityForInitExpr((*((*(_49529_e))))._field_s, true, false, &((*_5066_t.alloc)._field_Type), &(_5066_t), &((*(_5056_firstArg))._field_Token))) {
		_1a7b8c320_checkAssignType((*((*(_49529_e))))._field_s, false, &((*(_5066_t))._field_Type), &(_5066_t), (*_5056_firstArg.alloc)._field_Token, _1a7c03d7b_getOwnerRefers((*(_49529_e)).ptr()));
	};
	jule::Ptr<_1a7c3255d_Type> _5266_prefix = (*((*(_49529_e))))._field_prefix;;
	(*((*(_49529_e))))._field_prefix=(*_5066_t.alloc)._field_Type;
	__JULE_DEFER({
		(*((*(_49529_e))))._field_prefix=_5266_prefix;
	});;
	(*(_49571_d))=jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=(*_5066_t.alloc)._field_Type, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});
	jule::Ptr<_1a797d0de_Expr> _5346_secondArg = (*((*(_49544_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5346_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ad1c3d18:;
			{
				if (((*((*(_49544_fc))))._field_Args.len() > 2LL)) {
					_1a7c00d45_pushErr((*(_49529_e)).ptr(), (*((*((*(_49544_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a7bed89d_Data> _5417_e1 = _1a7c204d5_evalExpr((*(_49529_e)), (*((*(_5346_secondArg))._field_Kind.unsafe_cast_ptr<_1a7980575_VariadicExpr>()))._field_Expr);;
				if ((_5417_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1a7c35671_Prim((*(_5116_s))._field_Elem.ptr()) != nullptr) && _1a7c3cc94_IsU8(_1a7c35671_Prim((*(_5116_s))._field_Elem).ptr()))) {
					if (((_1a7c35671_Prim((*(_5417_e1))._field_Type) != nullptr) && _1a7c3e834_IsStr(_1a7c35671_Prim((*(_5417_e1))._field_Type).ptr()))) {
						_1a7c2e6d1_makeVariadic(&(_5417_e1), _1a7ca85d4_primU8);
						(*((*(_49571_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a6a6c6_BuiltinAppendCallExpr>(_1a7a6a6c6_BuiltinAppendCallExpr{._field_Dest=(*_5066_t.alloc)._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type23);
						return (*(_49571_d));;
					};
				};
				if ((!(_1a7c353da_Variadicable((*(_5417_e1))._field_Type)))) {
					_1a7c00d45_pushErr((*(_49529_e)).ptr(), (*(_5346_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_5417_e1))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1a7c2e6d1_makeVariadic(&(_5417_e1), (*(_5116_s))._field_Elem);
				(*(*(_5417_e1))._field_Type.alloc)._field_Variadic=false;
				if (_1a7b91aa5_checkValidityForInitExpr((*((*(_49529_e))))._field_s, true, false, &((*_5116_s.alloc)._field_Elem), &(_5417_e1), &((*(_5346_secondArg))._field_Token))) {
					(*(*(_5417_e1))._field_Type.alloc)._field_Variadic=true;
					_1a7b8c320_checkAssignType((*((*(_49529_e))))._field_s, false, &((*_5116_s.alloc)._field_Elem), &(_5417_e1), (*_5346_secondArg.alloc)._field_Token, _1a7c03d7b_getOwnerRefers((*(_49529_e)).ptr()));
				} else {
					(*(*(_5417_e1))._field_Type.alloc)._field_Variadic=true;
				};
				(*((*(_49571_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a6a6c6_BuiltinAppendCallExpr>(_1a7a6a6c6_BuiltinAppendCallExpr{._field_Dest=(*_5066_t.alloc)._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type23);
				return (*(_49571_d));;
			}
		}
		_match_end_1ad1c3c91:;
	};
	jule::Ptr<_1a7bed89d_Data> _5846_e1 = _1a7c204d5_evalExpr((*(_49529_e)), _5346_secondArg);;
	if ((_5846_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7a65c65_SliceExpr> _5896_slice = jule::new_ptr<_1a7a65c65_SliceExpr>(_1a7a65c65_SliceExpr{._field_ElemType=(*(_5116_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49544_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_49544_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad1d0d47:;
		if (it != expr_end) {
			jule::Ptr<_1a797d0de_Expr> _59314_arg = *it;
			{
				_5846_e1=_1a7c204d5_evalExpr((*(_49529_e)), _59314_arg);
				if ((_5846_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5846_e1))._field_Type.alloc)._field_Variadic) {
					_1a7c00d45_pushErr((*(_49529_e)).ptr(), (*(_59314_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_1a7b91aa5_checkValidityForInitExpr((*((*(_49529_e))))._field_s, true, false, &((*_5116_s.alloc)._field_Elem), &(_5846_e1), &((*(_59314_arg))._field_Token))) {
					_1a7b8c320_checkAssignType((*((*(_49529_e))))._field_s, false, &((*_5116_s.alloc)._field_Elem), &(_5846_e1), (*_59314_arg.alloc)._field_Token, _1a7c03d7b_getOwnerRefers((*(_49529_e)).ptr()));
				};
				(*(_5896_slice))._field_Elems=jule::append((*_5896_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5846_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1ad1d0d47:;
			++it;
			goto _iter_begin_1ad1d0d47;
		}
		_iter_end_1ad1d0d47:;
	};
	(*((*(_49571_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a6a6c6_BuiltinAppendCallExpr>(_1a7a6a6c6_BuiltinAppendCallExpr{._field_Dest=(*_5066_t.alloc)._field_Model, ._field_Elements=jule::Any(_5896_slice, &__jule_any_type80)}), &__jule_any_type23);
	return (*(_49571_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cad0cd_callerCopySlice(jule::Ptr<_1a7bed89d_Data>* _61525_dest, jule::Ptr<_1a7c0086c_eval>* _61543_e, jule::Ptr<_1a7981d18_FnCallExpr>* _61558_fc, jule::Ptr<_1a7bed89d_Data>* _61585_d) {
	if ((!((*((*(_61525_dest))))._field_Mutable))) {
		_1a7c00d45_pushErr((*(_61543_e)).ptr(), (*((*((*(_61558_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7bed89d_Data> _6206_src = _1a7c204d5_evalExpr((*(_61543_e)), (*((*(_61558_fc))))._field_Args[1LL]);;
	if ((_6206_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7c40868_Slc> _6246_slc = _1a7c366c7_Slc((*(_6206_src))._field_Type.ptr());;
	if ((_6246_slc != nullptr)) {
		if (((!((*_6206_src.alloc)._field_Mutable)) && _1a7c348a1_Mutable((*_6246_slc.alloc)._field_Elem.ptr()))) {
			_1a7c00d45_pushErr((*(_61543_e)).ptr(), (*((*((*(_61558_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_1a7c32c9a_Equal((*((*(_61525_dest))))._field_Type, (*_6206_src.alloc)._field_Type)))) {
			_1a7c00d45_pushErr((*(_61543_e)).ptr(), (*((*((*(_61558_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_61525_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_6206_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1a7c3b369_Prim> _6343_destPrim = _1a7c35671_Prim((*(_1a7c366c7_Slc((*((*(_61525_dest))))._field_Type)))._field_Elem.ptr());;
		jule::Ptr<_1a7c3b369_Prim> _6353_prim = _1a7c35671_Prim((*(_6206_src))._field_Type);;
		if (((((_6343_destPrim == nullptr) || (_6353_prim == nullptr)) || (!(_1a7c3e834_IsStr(_6353_prim.ptr())))) || (!(_1a7c3cc94_IsU8(_6343_destPrim.ptr()))))) {
			_1a7c00d45_pushErr((*(_61543_e)).ptr(), (*((*((*(_61558_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*((*(_61525_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_6206_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*(_61585_d))))._field_Type=_1a7bebb10_lenKind();
	(*((*(_61585_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a6b573_BuiltinCopyCallExpr>(_1a7a6b573_BuiltinCopyCallExpr{._field_Dest=(*(_61525_dest)), ._field_Src=_6206_src}), &__jule_any_type27);
	return (*(_61585_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cad50c_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _64927_e, jule::Ptr<_1a7981d18_FnCallExpr>* _64942_fc, jule::Ptr<_1a7bed89d_Data>* _64969_d) {
	if (((*((*(_64942_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_64942_fc))))._field_Args.len() == 1LL)) {
			_1a7c00d45_pushErr((*(_64927_e)).ptr(), (*((*(_64942_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1a7c00d45_pushErr((*(_64927_e)).ptr(), (*((*(_64942_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_64942_fc))))._field_Args.len() > 2LL)) {
		_1a7c00d45_pushErr((*(_64927_e)).ptr(), (*((*((*(_64942_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a7bed89d_Data> _6626_dest = _1a7c204d5_evalExpr((*(_64927_e)), (*((*(_64942_fc))))._field_Args[0LL]);;
	{
		
		if ((_6626_dest == nullptr)) {
			_case_begin_1ad1e715a:;
			{
				return nullptr;;
			}
		}
		else if ((_1a7c366c7_Slc((*(_6626_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ad1e71c1:;
			{
				return _1a7cad0cd_callerCopySlice(&(_6626_dest), _64927_e, _64942_fc, _64969_d);;
			}
		}
		else {
			_case_begin_1ad1e6038:;
			{
				_1a7c00d45_pushErr((*(_64927_e)).ptr(), (*((*((*(_64942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad1e261c:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cad881_callerLenSlice(jule::Ptr<_1a7bed89d_Data>* _67424_expr, jule::Ptr<_1a7bed89d_Data>* _67442_d) {
	(*((*(_67442_d))))._field_Type=_1a7bebb10_lenKind();
	(*((*(_67442_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a6a9c3_BuiltinLenCallExpr>(_1a7a6a9c3_BuiltinLenCallExpr{._field_Expr=(*(_67424_expr))}), &__jule_any_type117);
	return (*(_67442_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cadc05_callerLenMap(jule::Ptr<_1a7bed89d_Data>* _68222_expr, jule::Ptr<_1a7bed89d_Data>* _68240_d) {
	(*((*(_68240_d))))._field_Type=_1a7bebb10_lenKind();
	(*((*(_68240_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a6a9c3_BuiltinLenCallExpr>(_1a7a6a9c3_BuiltinLenCallExpr{._field_Expr=(*(_68222_expr))}), &__jule_any_type117);
	return (*(_68240_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cae079_callerLenArr(jule::Ptr<_1a7bed89d_Data>* _69022_expr, jule::Ptr<_1a7bed89d_Data>* _69040_d) {
	(*((*(_69040_d))))._field_Type=_1a7bebb10_lenKind();
	(*((*(_69040_d))))._field_Constant=static__1a7a574d7_NewI64(static_cast<jule::I64>((*(_1a7c36441_Arr((*((*(_69022_expr))))._field_Type.ptr())))._field_N));
	(*((*(_69040_d))))._field_Model=jule::Any((*((*(_69040_d))))._field_Constant, &__jule_any_type15);
	return (*(_69040_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cae3ed_callerLenStr(jule::Ptr<_1a7bed89d_Data>* _69722_expr, jule::Ptr<_1a7bed89d_Data>* _69740_d) {
	(*((*(_69740_d))))._field_Type=_1a7bebb10_lenKind();
	if (_1a7bee2d8_IsConst((*(_69722_expr)).ptr())) {
		(*((*(_69740_d))))._field_Constant=static__1a7a574d7_NewI64(static_cast<jule::I64>(_1a7a591cb_ReadStr((*((*(_69722_expr))))._field_Constant.ptr()).len()));
		(*((*(_69740_d))))._field_Model=jule::Any((*((*(_69740_d))))._field_Constant, &__jule_any_type15);
	} else {
		(*((*(_69740_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a6a9c3_BuiltinLenCallExpr>(_1a7a6a9c3_BuiltinLenCallExpr{._field_Expr=(*(_69722_expr))}), &__jule_any_type117);
	};
	return (*(_69740_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cae772_callerLenComptime(jule::Ptr<_1a7bed89d_Data>* _71027_d, jule::I32 _71037_n) {
	(*((*(_71027_d))))._field_Type=_1a7bebb10_lenKind();
	(*((*(_71027_d))))._field_Constant=static__1a7a574d7_NewI64(static_cast<jule::I64>(_71037_n));
	(*((*(_71027_d))))._field_Model=jule::Any((*((*(_71027_d))))._field_Constant, &__jule_any_type15);
	return (*(_71027_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7caeba1_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _71726_e, jule::Ptr<_1a7981d18_FnCallExpr>* _71741_fc, jule::Ptr<_1a7bed89d_Data>* _71768_d) {
	if (((*((*(_71741_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr((*(_71726_e)).ptr(), (*((*(_71741_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_71741_fc))))._field_Args.len() > 1LL)) {
		_1a7c00d45_pushErr((*(_71726_e)).ptr(), (*((*((*(_71741_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a7bed89d_Data> _7256_dest = _1a7c20194_evalExpr1((*(_71726_e)), (*((*(_71741_fc))))._field_Args[0LL]);;
	{
		
		if ((_7256_dest == nullptr)) {
			_case_begin_1ad206ce6:;
			{
				return nullptr;;
			}
		}
		else if ((_1a7c366c7_Slc((*(_7256_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ad206d5c:;
			{
				return _1a7cad881_callerLenSlice(&(_7256_dest), _71768_d);;
			}
		}
		else if ((_1a7c36441_Arr((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1ad206dc3:;
			{
				return _1a7cae079_callerLenArr(&(_7256_dest), _71768_d);;
			}
		}
		else if ((_1a7c37497_Map((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1ad206e39:;
			{
				return _1a7cadc05_callerLenMap(&(_7256_dest), _71768_d);;
			}
		}
		else if (((_1a7c35671_Prim((*(_7256_dest))._field_Type) != nullptr) && _1a7c3e834_IsStr(_1a7c35671_Prim((*(_7256_dest))._field_Type).ptr()))) {
			_case_begin_1ad205c3a:;
			{
				return _1a7cae3ed_callerLenStr(&(_7256_dest), _71768_d);;
			}
		}
		else if ((_1a7c37c4a_comptimeStructFields((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1ad205ca1:;
			{
				return _1a7cae772_callerLenComptime(_71768_d, (*(_1a7c37c4a_comptimeStructFields((*(_7256_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1a7c38267_comptimeEnumFields((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1ad205d17:;
			{
				return _1a7cae772_callerLenComptime(_71768_d, (*(_1a7c38267_comptimeEnumFields((*(_7256_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1a7c39037_comptimeTypeInfos((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1ad205d7d:;
			{
				return _1a7cae772_callerLenComptime(_71768_d, (*(_1a7c39037_comptimeTypeInfos((*(_7256_dest))._field_Type)))._field_types.len());;
			}
		}
		else if ((_1a7c38784_comptimeParams((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1ad207005:;
			{
				return _1a7cae772_callerLenComptime(_71768_d, (*(_1a7c38784_comptimeParams((*(_7256_dest))._field_Type)))._field_params.len());;
			}
		}
		else if ((_1a7c39554_comptimeStatics((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1ad20706b:;
			{
				return _1a7cae772_callerLenComptime(_71768_d, (*(_1a7c39554_comptimeStatics((*(_7256_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1a7c3a5aa_comptimeFiles((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1ad2070d2:;
			{
				return _1a7cae772_callerLenComptime(_71768_d, (*(_1a7c3a5aa_comptimeFiles((*(_7256_dest))._field_Type)))._field_files.len());;
			}
		}
		else if ((_1a7c3a08d_comptimeDecls((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1ad207148:;
			{
				return _1a7cae772_callerLenComptime(_71768_d, (*(_1a7c3a08d_comptimeDecls((*(_7256_dest))._field_Type)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1ad205bc4:;
			{
				_1a7c00d45_pushErr((*(_71726_e)).ptr(), (*((*((*(_71741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad2037a4:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb0025_callerCapSlice(jule::Ptr<_1a7bed89d_Data>* _75724_expr, jule::Ptr<_1a7bed89d_Data>* _75742_d) {
	(*((*(_75742_d))))._field_Type=_1a7bebb10_lenKind();
	(*((*(_75742_d))))._field_Model=jule::Any(jule::new_ptr<_1a7a6acc0_BuiltinCapCallExpr>(_1a7a6acc0_BuiltinCapCallExpr{._field_Expr=(*(_75724_expr))}), &__jule_any_type118);
	return (*(_75742_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb0454_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _76526_e, jule::Ptr<_1a7981d18_FnCallExpr>* _76541_fc, jule::Ptr<_1a7bed89d_Data>* _76568_d) {
	if (((*((*(_76541_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr((*(_76526_e)).ptr(), (*((*(_76541_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_76541_fc))))._field_Args.len() > 1LL)) {
		_1a7c00d45_pushErr((*(_76526_e)).ptr(), (*((*((*(_76541_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a7bed89d_Data> _7736_dest = _1a7c204d5_evalExpr((*(_76526_e)), (*((*(_76541_fc))))._field_Args[0LL]);;
	{
		
		if ((_7736_dest == nullptr)) {
			_case_begin_1ad218412:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7736_dest))._field_Decl) {
			_case_begin_1ad21a29e:;
			{
				_1a7c00d45_pushErr((*(_76526_e)).ptr(), (*((*((*(_76541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a7c366c7_Slc((*_7736_dest.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1ad21a315:;
			{
				return _1a7cb0025_callerCapSlice(&(_7736_dest), _76568_d);;
			}
		}
		else {
			_case_begin_1ad218027:;
			{
				_1a7c00d45_pushErr((*(_76526_e)).ptr(), (*((*((*(_76541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad216ed2:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb093d_callerDeleteMap(jule::Ptr<_1a7c0086c_eval>* _78825_e, jule::Ptr<_1a7981d18_FnCallExpr>* _78840_fc, jule::Ptr<_1a7bed89d_Data>* _78867_expr, jule::Ptr<_1a7bed89d_Data>* _78885_d) {
	if ((!((*((*(_78867_expr))))._field_Mutable))) {
		_1a7c00d45_pushErr((*(_78825_e)).ptr(), (*((*((*(_78840_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_78885_d))=_1a7c2bac9_buildVoidData();
	jule::Ptr<_1a7a6b199_BuiltinDeleteCallExpr> _7936_model = jule::new_ptr<_1a7a6b199_BuiltinDeleteCallExpr>(_1a7a6b199_BuiltinDeleteCallExpr{._field_Dest=(*(_78867_expr)), ._field_Key=jule::Ptr<_1a7bed89d_Data>(nullptr)});;
	if (((*((*(_78840_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a7bed89d_Data> _7977_key = _1a7c204d5_evalExpr((*(_78825_e)), (*((*(_78840_fc))))._field_Args[1LL]);;
		{
			
			if ((_7977_key == nullptr)) {
				_case_begin_1ad22089d:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7977_key))._field_Decl) {
				_case_begin_1ad220914:;
				{
					_1a7c00d45_pushErr((*(_78825_e)).ptr(), (*((*((*(_78840_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1ad21e46d:;
				{
					;
					jule::Ptr<_1a7c3255d_Type> _8068_keyType = (*(_1a7c37497_Map((*((*(_78867_expr))))._field_Type.ptr())))._field_Key;;
					if ((!(_1a7b8c320_checkAssignType((*((*(_78825_e))))._field_s, false, &(_8068_keyType), &(_7977_key), (*((*((*(_78840_fc))))._field_Args[1LL]))._field_Token, _1a7c03d7b_getOwnerRefers((*(_78825_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_1ad21e407:;
		};
		(*(_7936_model))._field_Key=_7977_key;
	};
	(*((*(_78885_d))))._field_Model=jule::Any(_7936_model, &__jule_any_type28);
	return (*(_78885_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb0d6c_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _81729_e, jule::Ptr<_1a7981d18_FnCallExpr>* _81744_fc, jule::Ptr<_1a7bed89d_Data>* _81771_d) {
	if (((*((*(_81744_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr((*(_81729_e)).ptr(), (*((*(_81744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_81744_fc))))._field_Args.len() > 2LL)) {
		_1a7c00d45_pushErr((*(_81729_e)).ptr(), (*((*((*(_81744_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a7bed89d_Data> _8256_dest = _1a7c204d5_evalExpr((*(_81729_e)), (*((*(_81744_fc))))._field_Args[0LL]);;
	{
		
		if ((_8256_dest == nullptr)) {
			_case_begin_1ad228037:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8256_dest))._field_Decl) {
			_case_begin_1ad22809d:;
			{
				_1a7c00d45_pushErr((*(_81729_e)).ptr(), (*((*((*(_81744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a7c37497_Map((*_8256_dest.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1ad228114:;
			{
				return _1a7cb093d_callerDeleteMap(_81729_e, _81744_fc, &(_8256_dest), _81771_d);;
			}
		}
		else {
			_case_begin_1ad226e15:;
			{
				_1a7c00d45_pushErr((*(_81729_e)).ptr(), (*((*((*(_81744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad2241ba:;
	};
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb129b_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _84040_e, jule::Ptr<_1a7981d18_FnCallExpr>* _84055_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	if (((*((*(_84055_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr((*(_84040_e)).ptr(), (*((*(_84055_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_84055_fc))))._field_Args.len() > 1LL)) {
		_1a7c00d45_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a7bed89d_Data> _8496_d = _1a7c1e6c1_evalExprKind((*(_84040_e)), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8496_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7a73b41_FnIns> _8532_f = _1a7c3695d_Fn((*(_8496_d))._field_Type.ptr());;
	if ((_8532_f != nullptr)) {
		if (_1a7a75109_IsBuiltin(_8532_f)) {
			_1a7c00d45_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8532_f.alloc)._field_Generics.len() != (*((*_8532_f.alloc)._field_Decl))._field_Generics.len())) {
			_1a7c00d45_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1a799a97a_StructIns> _8642_s = _1a7c36be4_Struct((*(_8496_d))._field_Type);;
	if (((_8642_s != nullptr) && ((*_8642_s.alloc)._field_Generics.len() != (*((*_8642_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1a7c00d45_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1a7c379b4_comptime((*(_8496_d))._field_Type)) {
		_1a7c00d45_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_8496_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a7b250cc_buildComptimeTypeInfoData(&((*((*(_84040_e))))._field_s), &((*_8496_d.alloc)._field_Type));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb16ca_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _87641_e, jule::Ptr<_1a7981d18_FnCallExpr>* _87656_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	if (((*((*(_87656_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr((*(_87641_e)).ptr(), (*((*(_87656_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_87656_fc))))._field_Args.len() > 1LL)) {
		_1a7c00d45_pushErr((*(_87641_e)).ptr(), (*((*((*(_87656_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a7bed89d_Data> _8846_d = _1a7c204d5_evalExpr((*(_87641_e)), (*((*(_87656_fc))))._field_Args[0LL]);;
	if ((_8846_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7bebe62_isGoodValueToInfer(&(_8846_d))))) {
		_1a7c00d45_pushErr((*(_87641_e)).ptr(), (*((*((*(_87656_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_8846_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a7b2541d_buildComptimeValue(&(_8846_d));;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb1b09_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _89638_e, jule::Ptr<_1a7981d18_FnCallExpr>* _89653_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	if (((*((*(_89653_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_89638_e)).ptr(), (*((*((*(_89653_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a79ea9a8_Const> _9006_constant = static__1a7a574d7_NewI64(static_cast<jule::I64>((*((*((*(_89653_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca77d1_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9006_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9006_constant});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb227a_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _90838_e, jule::Ptr<_1a7981d18_FnCallExpr>* _90853_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	if (((*((*(_90853_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_90838_e)).ptr(), (*((*((*(_90853_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b1b645_comptimeFile>(_1a7b1b645_comptimeFile{._field_file=(*((*((*(_90838_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb26a9_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _92139_e, jule::Ptr<_1a7981d18_FnCallExpr>* _92154_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	if (((*((*(_92154_fc))))._field_Args.len() > 0LL)) {
		_1a7c00d45_pushErr((*(_92139_e)).ptr(), (*((*((*(_92154_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7b19bc6_comptimeFiles>(_1a7b19bc6_comptimeFiles{._field_files=(*((*((*(_92139_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb2ad8_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _93443_e, jule::Ptr<_1a7981d18_FnCallExpr>* _93458_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	if (((*((*(_93458_fc))))._field_Args.len() > 2LL)) {
		_1a7c00d45_pushErr((*(_93443_e)).ptr(), (*((*((*(_93458_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_93458_fc))))._field_Args.len() == 0LL)) {
		_1a7c00d45_pushErr((*(_93443_e)).ptr(), (*((*(_93458_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_93458_fc))))._field_Args.len() == 1LL)) {
		_1a7c00d45_pushErr((*(_93443_e)).ptr(), (*((*(_93458_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_93458_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ad24674d:;
			{
				goto _match_end_1ad247210;
			}
		}
		else {
			_case_begin_1ad247287:;
			{
				_1a7c00d45_pushErr((*(_93443_e)).ptr(), (*((*((*(_93458_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1a7c011a8_pushSuggestion((*(_93443_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad247210:;
	};
	jule::Ptr<_1a79633b0_Token> _9556_ident = (*((*((*((*(_93458_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1a797e909_IdentExpr>(&__jule_any_type41)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_93443_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1)) {
			_case_begin_1ad249740:;
			{
				goto _match_end_1ad249971;
			}
		}
		else {
			_case_begin_1ad2499d7:;
			{
				_1a7c00d45_pushErr((*(_93443_e)).ptr(), (*((*(_93458_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ad249971:;
	};
	jule::Ptr<_1a7b34938_scopeChecker> _9646_sc = (*((*(_93443_e))))._field_lookup.cast_ptr<_1a7b34938_scopeChecker>((jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data1);;
	jule::Ptr<_1a7c31848_TypeAlias> _9656_alias = jule::new_ptr<_1a7c31848_TypeAlias>(_1a7c31848_TypeAlias{._field_Scope=(*(_9646_sc))._field_tree, ._field_Strict=false, ._field_Public=_1a7b78d56_IsPub((*(_9556_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9556_ident, ._field_Ident=(*_9556_ident.alloc)._field_Kind, ._field_TypeSym=jule::new_ptr<_1a7c3a962_TypeSym>(_1a7c3a962_TypeSym{._field_Decl=jule::Ptr<_1a7978caa_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1a7c3255d_Type>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>(nullptr)});;
	jule::Ptr<_1a7bed89d_Data> _9756_t = _1a7c1ea12_eval1((*(_93443_e)), (*((*(_93458_fc))))._field_Args[1LL]);;
	if ((_9756_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9756_t))._field_Decl) {
		(*((*(_9656_alias))._field_TypeSym))._field_Type=(*_9756_t.alloc)._field_Type;
	} else {
		jule::Ptr<_1a7b10d65_comptimeTypeInfo> _9827_cti = _1a7c392bd_comptimeTypeInfo((*(_9756_t))._field_Type.ptr());;
		if ((_9827_cti == nullptr)) {
			_1a7c00d45_pushErr((*(_93443_e)).ptr(), (*((*((*(_93458_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1a7c011a8_pushSuggestion((*(_93443_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9656_alias))._field_TypeSym))._field_Type=(*(_9827_cti))._field_base;
	};
	_1a7b39aa3_checkTypeAlias(_9646_sc, &(_9656_alias));
	return _1a7c2bac9_buildVoidData();;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb3017_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _99435_e, jule::Ptr<_1a7981d18_FnCallExpr>* _99450_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<_1a7bed89d_Data> _9956_result = jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca7418_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
	if (((*((*(_99450_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr((*(_99435_e)).ptr(), (*((*(_99450_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _9956_result;;
	};
	if (((*((*(_99450_fc))))._field_Args.len() > 1LL)) {
		_1a7c00d45_pushErr((*(_99435_e)).ptr(), (*((*((*(_99450_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a7bed89d_Data> _10076_d = _1a7c1e6c1_evalExprKind((*(_99435_e)), (*((*((*(_99450_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10076_d == nullptr)) {
		return _9956_result;;
	};
	if ((!(_1a7c50d0c_validTypeForXof(&((*(_10076_d))._field_Type))))) {
		_1a7c00d45_pushErr((*(_99435_e)).ptr(), (*((*((*(_99450_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*_10076_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	(*(_9956_result))._field_Model=jule::Any(jule::new_ptr<_1a7a6bc49_SizeofExpr>(_1a7a6bc49_SizeofExpr{._field_Expr=jule::Any((*(_10076_d))._field_Type, &__jule_any_type85)}), &__jule_any_type119);
	return _9956_result;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb3446_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _101936_e, jule::Ptr<_1a7981d18_FnCallExpr>* _101951_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<_1a7bed89d_Data> _10206_result = jule::new_ptr<_1a7bed89d_Data>(_1a7bed89d_Data{._field_untyped=false, ._field_Type=_1a7ca7418_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a79ea9a8_Const>(nullptr)});;
	if (((*((*(_101951_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr((*(_101936_e)).ptr(), (*((*(_101951_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _10206_result;;
	};
	if (((*((*(_101951_fc))))._field_Args.len() > 1LL)) {
		_1a7c00d45_pushErr((*(_101936_e)).ptr(), (*((*((*(_101951_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a7bed89d_Data> _10326_d = _1a7c1e6c1_evalExprKind((*(_101936_e)), (*((*((*(_101951_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10326_d == nullptr)) {
		return _10206_result;;
	};
	if ((!(_1a7c50d0c_validTypeForXof(&((*(_10326_d))._field_Type))))) {
		_1a7c00d45_pushErr((*(_101936_e)).ptr(), (*((*((*(_101951_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*_10326_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	(*(_10206_result))._field_Model=jule::Any(jule::new_ptr<_1a7a6c3ed_AlignofExpr>(_1a7a6c3ed_AlignofExpr{._field_Expr=jule::Any((*(_10326_d))._field_Type, &__jule_any_type85)}), &__jule_any_type120);
	return _10206_result;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb3875_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _104433_e, jule::Ptr<_1a7981d18_FnCallExpr>* _104448_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	if (((*((*(_104448_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr((*(_104433_e)).ptr(), (*((*(_104448_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104448_fc))))._field_Args.len() > 1LL)) {
		_1a7c00d45_pushErr((*(_104433_e)).ptr(), (*((*((*(_104448_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a7bed89d_Data> _10536_d = _1a7c204d5_evalExpr((*(_104433_e)), (*((*(_104448_fc))))._field_Args[0LL]);;
	if ((_10536_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7c35154_GC((*(_10536_d))._field_Type.ptr())))) {
		_1a7c00d45_pushErr((*(_104433_e)).ptr(), (*((*((*(_104448_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7bed89d_Data> _10626_result = _1a7c2bac9_buildVoidData();;
	(*(_10626_result))._field_Model=jule::Any(jule::new_ptr<_1a7a6cc5b_FreeExpr>(_1a7a6cc5b_FreeExpr{._field_Expr=(*(_10536_d))._field_Model}), &__jule_any_type29);
	return _10626_result;;
}



inline jule::Ptr<_1a7bed89d_Data> _1a7cb3ca4_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _106744_e, jule::Ptr<_1a7981d18_FnCallExpr>* _106759_fc, jule::Ptr<_1a7bed89d_Data>* _106786_d) {
	if ((!(_1a7c0183a_isUnsafe((*(_106744_e)).ptr())))) {
		_1a7c00d45_pushErr((*(_106744_e)).ptr(), (*((*(_106759_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_106759_fc))))._field_Args.len() < 1LL)) {
		_1a7c00d45_pushErr((*(_106744_e)).ptr(), (*((*(_106759_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a7bed89d_Data> _10776_argd = _1a7c204d5_evalExpr((*(_106744_e)), (*((*(_106759_fc))))._field_Args[0LL]);;
	if ((_10776_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1a7c35671_Prim((*(_10776_argd))._field_Type.ptr()) == nullptr) || (!(_1a7c3e834_IsStr(_1a7c35671_Prim((*(_10776_argd))._field_Type.ptr()).ptr()))))) {
		_1a7c00d45_pushErr((*(_106744_e)).ptr(), (*((*((*(_106759_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a7c32959_Str((*(_10776_argd))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a7c32959_Str((*(_10776_argd))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1a7bee2d8_IsConst(_10776_argd.ptr()))) || (!(_1a7a5b7c7_IsStr((*(_10776_argd))._field_Constant.ptr()))))) {
		_1a7c00d45_pushErr((*(_106744_e)).ptr(), (*((*((*(_106759_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7bed89d_Data> _10926_r = _1a7c2bac9_buildVoidData();;
	jule::Ptr<_1a7a73b41_FnIns> _10946_f = _1a7c3695d_Fn((*((*(_106786_d))))._field_Type.ptr());;
	if (((*(_10946_f))._field_Generics.len() > 0LL)) {
		(*(_10926_r))._field_Type=(*((*(_10946_f))._field_Generics[0LL]))._field_Type;
	};
	jule::Ptr<_1a7a6c95e_BackendEmitExpr> _10996_model = jule::new_ptr<_1a7a6c95e_BackendEmitExpr>(_1a7a6c95e_BackendEmitExpr{._field_Code=_1a7a591cb_ReadStr((*(_10776_argd))._field_Constant.ptr()), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_106759_fc))))._field_Args.len() > 1LL)) {
		(*(_10996_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_106759_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_106759_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ad27610c:;
			if (it != expr_end) {
				jule::Ptr<_1a797d0de_Expr> _110515_arg = *it;
				{
					_10776_argd=_1a7c1ea12_eval1((*(_106744_e)), _110515_arg);
					if ((_10776_argd == nullptr)) {
						return nullptr;;
					};
					if ((*(_10776_argd))._field_Decl) {
						(*_10996_model.alloc)._field_Exprs=jule::append((*_10996_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_10776_argd.alloc)._field_Type, &__jule_any_type85); __jule_collection; }));
					} else {
						(*_10996_model.alloc)._field_Exprs=jule::append((*_10996_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_10776_argd))._field_Model; __jule_collection; }));
					};
				}
				_iter_next_1ad27610c:;
				++it;
				goto _iter_begin_1ad27610c;
			}
			_iter_end_1ad27610c:;
		};
	};
	(*(_10926_r))._field_Model=jule::Any(_10996_model, &__jule_any_type22);
	return _10926_r;;
}



inline jule::Ptr<_1a855e939_FileInfo> _1a8562750_ParseFile(jule::Ptr<_1a7968e65_Fileset> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a855e939_FileInfo> _276_finf = jule::new_ptr<_1a855e939_FileInfo>(_1a855e939_FileInfo{._field_Ast=jule::Ptr<_1a7976deb_AST>(nullptr), ._field_Errors=jule::Slice<_1bc0b03aa_Log>(nullptr)});;
	({
		__jule_tuple_x_1a7976deb_AST__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = _1a85ac8bb_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1a7976deb_AST__jule_tuple_s_1bc0b03aa_Log _1a85ac8bb_parseFileset(jule::Ptr<_1a7968e65_Fileset> _5521_f) {
	__jule_tuple_x_1a7976deb_AST__jule_tuple_s_1bc0b03aa_Log __jule_func_result;
	jule::Ptr<_1a85cd06d_parser> _566_p = jule::new_ptr<_1a85cd06d_parser>(_1a85cd06d_parser{._field_ast=jule::Ptr<_1a7976deb_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1a79781c7_Directive>>(nullptr), ._field_errors=jule::Slice<_1bc0b03aa_Log>(nullptr), ._field_ep=jule::Ptr<_1a85bc788_exprBuilder>(nullptr)});;
	_1a85dd0a0_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7988da8_ScopeTree> _1a85ad24b_newScope(void) {
	return jule::new_ptr<_1a7988da8_ScopeTree>(_1a7988da8_ScopeTree{._field_Parent=jule::Ptr<_1a7988da8_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1a7988748_Stmt>(nullptr), ._field_End=jule::Ptr<_1a79633b0_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1a85ad5d1_isSt(jule::Ptr<_1a79633b0_Token> _149_current, jule::Ptr<_1a79633b0_Token> _1433_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_149_current))._field_Id == static_cast<jule::U32>(3LLU)) || ((*(_1433_prev))._field_Row < (*(_149_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_149_current))._field_Id == static_cast<jule::U32>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a85ad955_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _2026_tokens, jule::I32* _2052_i) {
	if ((((*(_2052_i)) > 1LL) && ((*((*(_2026_tokens))[((*(_2052_i)) - 2LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1a79633b0_Token> _263_prev = (*(_2026_tokens))[((*(_2052_i)) - 1LL)];;
		return ((((*(_263_prev))._field_Id == static_cast<jule::U32>(17LLU)) || ((*(_263_prev))._field_Id == static_cast<jule::U32>(5LLU))) || (_1a7963e0a_IsBinOp((*(_263_prev))._field_Id) && ((*_263_prev.alloc)._field_Row < (*((*(_2026_tokens))[(*(_2052_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a85add1d_nextStPos(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _3415_tokens, jule::I32 _3440_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _356_braceN = 0LL;;
	jule::I32 _366_i = _3440_start;;
	for (; (_366_i < (*(_3415_tokens)).len()); (_366_i)++) {
		{
			jule::Bool _387_ok = false;;
			jule::Bool _397_terminated = false;;
			jule::Ptr<_1a79633b0_Token> _403_tok = (*(_3415_tokens))[_366_i];;
			{
				auto &_match_expr{ (*(_403_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1ad2c4da3:;
					{
						if (((_356_braceN == 0LL) && (_366_i > _3440_start))) {
							if ((!(_1a85ad955_prevIsIncompleteExpr(_3415_tokens, &(_366_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a85ad5d1_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
									_387_ok = __jule_assign_result.__jule_result_arg0;
									_397_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_387_ok) {
									goto _julec_label_1ad2c97e2;
								};
							};
						};
						(_356_braceN)++;
						goto _iter_next_1ad2c3940;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1ad2c50e5:;
					{
						(_356_braceN)--;
						if (((_356_braceN == 0LL) && ((_366_i + 1LL) < (*(_3415_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a85ad5d1_isSt((*(_3415_tokens))[(_366_i + 1LL)], _403_tok);
								_387_ok = __jule_assign_result.__jule_result_arg0;
								_397_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_387_ok) {
								(_366_i)++;
								goto _julec_label_1ad2c97e2;
							};
						};
						goto _iter_next_1ad2c3940;
					}
				}
				_match_end_1ad2c504b:;
			};
			if ((_356_braceN != 0LL)) {
				goto _iter_next_1ad2c3940;
			};
			if ((_366_i > _3440_start)) {
				if (_1a85ad955_prevIsIncompleteExpr(_3415_tokens, &(_366_i))) {
					goto _iter_next_1ad2c3940;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a85ad5d1_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a85ad5d1_isSt(_403_tok, _403_tok);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_387_ok))) {
				goto _iter_next_1ad2c3940;
			};
			_julec_label_1ad2c97e2:;
			if (_397_terminated) {
				(_366_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _366_i;
			__jule_func_result.__jule_result_arg1 = _397_terminated;
			return __jule_func_result;;
		}
	_iter_next_1ad2c3940:;
	}
	_iter_end_1ad2c3940:;;
	__jule_func_result.__jule_result_arg0 = _366_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a79633b0_Token__jule_tuple_bool _1a85ae192_skipSt(jule::I32* _9616_i, jule::Slice<jule::Ptr<_1a79633b0_Token>> _9628_tokens) {
	__jule_tuple_sx_1a79633b0_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _972_start = (*(_9616_i));;
	jule::Bool _986_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a85add1d_nextStPos(&(_9628_tokens), _972_start);
		(*(_9616_i)) = __jule_assign_result.__jule_result_arg0;
		_986_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1a79633b0_Token>> _1006_stTokens = _9628_tokens.slice(_972_start, (*(_9616_i)));;
	if (_986_terminated) {
		if ((_1006_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1a85ae192_skipSt(_9616_i, _9628_tokens));
return __jule_func_result;;
		};
		(_1006_stTokens).mut_slice(0LL, (_1006_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1006_stTokens;
	__jule_func_result.__jule_result_arg1 = _986_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1a85ae4c2_stmt>> _1a85ae879_splitStmts(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _11720_tokens) {
	jule::Slice<jule::Ptr<_1a85ae4c2_stmt>> _1186_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a85ae4c2_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a85ae4c2_stmt>(nullptr); __jule_collection; });;
	jule::I32 _1196_pos = 0LL;;
	while ((_1196_pos < (*(_11720_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1a79633b0_Token>> _1217_stmt;
			jule::Bool _12113_terminated;
			({
				__jule_tuple_sx_1a79633b0_Token__jule_tuple_bool __jule_assign_result = _1a85ae192_skipSt(&(_1196_pos), (*(_11720_tokens)));
				_1217_stmt = __jule_assign_result.__jule_result_arg0;
				_12113_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1a85ae4c2_stmt>> &__jule_push_dest = _1186_stmts; __jule_push_dest.push(jule::new_ptr<_1a85ae4c2_stmt>(_1a85ae4c2_stmt{._field_tokens=_1217_stmt, ._field_terminated=_12113_terminated})); };
		}
	_iter_next_1ad2cc41b:;
	}
	_iter_end_1ad2cc41b:;;
	return _1186_stmts;;
}



inline jule::Bool _1a85c7dc0_isTypeOp(jule::U32* _87014_id) {
	return ((((*(_87014_id)) == static_cast<jule::U32>(65LLU)) || ((*(_87014_id)) == static_cast<jule::U32>(54LLU))) || ((*(_87014_id)) == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _1a85c81cd_isTypeRange(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _87721_tokens) {
	jule::Bool _8786_op = false;;
	{
		auto expr = _87721_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3bd5ea:;
		if (it != expr_end) {
			jule::I32 _8796_i = it - expr->begin();
			jule::Ptr<_1a79633b0_Token> _8799_token = *it;
			{
				if (((*(_8799_token))._field_Id == static_cast<jule::U32>(76LLU))) {
					if (_8786_op) {
						return true;;
					};
					jule::I32 _8848_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1a79633b0_Token>> _8858_lTokens = (*(_87721_tokens)).slice(_8796_i);;
					{
						auto expr = &(_8858_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad3be530:;
						if (it != expr_end) {
							jule::Ptr<_1a79633b0_Token> _88611_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_88611_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U32>(76LLU)) {
										_case_begin_1ad3c0883:;
										{
											(_8848_rangeN)++;
											goto _iter_next_1ad3be530;
										}
									}
									else if (_match_expr == static_cast<jule::U32>(77LLU)) {
										_case_begin_1ad3c0c6d:;
										{
											(_8848_rangeN)--;
											goto _iter_next_1ad3be530;
										}
									}
									_match_end_1ad3c0b6e:;
								};
								if ((_8848_rangeN == 0LL)) {
									return _1a85c7dc0_isTypeOp(&((*(_88611_lToken))._field_Id));;
								};
							}
							_iter_next_1ad3be530:;
							++it;
							goto _iter_begin_1ad3be530;
						}
						_iter_end_1ad3be530:;
					};
					return true;;
				};
				if ((!(_1a85c7dc0_isTypeOp(&((*(_8799_token))._field_Id))))) {
					return false;;
				};
				_8786_op=true;
			}
			_iter_next_1ad3bd5ea:;
			++it;
			_8796_i++;
			goto _iter_begin_1ad3bd5ea;
		}
		_iter_end_1ad3bd5ea:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a79633b0_Token>> _1a85c8497_getBlockExpr(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _91022_tokens) {
	jule::I32 _9116_braceN = 0LL;;
	jule::I32 _9126_skipToNextBraceClose = 0LL;;
	{
		auto expr = _91022_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3c2797:;
		if (it != expr_end) {
			jule::I32 _9136_i = it - expr->begin();
			jule::Ptr<_1a79633b0_Token> _9139_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9139_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1ad3c3853:;
						{
							if (((((*(_91022_tokens)).len() - _9136_i) > 1LL) && ((*((*(_91022_tokens))[(_9136_i + 1LL)]))._field_Id == static_cast<jule::U32>(72LLU)))) {
								(_9126_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1ad3c38db:;
						{
							if (((_9116_braceN > 0LL) || (_9126_skipToNextBraceClose > 0LL))) {
								if ((_9126_skipToNextBraceClose > 0LL)) {
									(_9126_skipToNextBraceClose)--;
								};
								(_9116_braceN)++;
								goto _match_end_1ad3c3787;
							};
							return (*(_91022_tokens)).slice(0LL, _9136_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ad3c3952:;
						{
							(_9116_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ad3c39b8:;
						{
							(_9116_braceN)--;
						}
					}
					_match_end_1ad3c3787:;
				};
			}
			_iter_next_1ad3c2797:;
			++it;
			_9136_i++;
			goto _iter_begin_1ad3c2797;
		}
		_iter_end_1ad3c2797:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a79633b0_Token__jule_tuple_sx_1a79633b0_Token _1a85c8860_splitDelim(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _94220_tokens, jule::U32 _94245_delim) {
	__jule_tuple_sx_1a79633b0_Token__jule_tuple_sx_1a79633b0_Token __jule_func_result;
	jule::I32 _9436_func = -1LL;;
	jule::I32 _9446_rangeN = 0LL;;
	jule::I32 _9456_i = 0LL;;
	for (; (_9456_i < (*(_94220_tokens)).len()); (_9456_i)++) {
		{
			jule::Ptr<_1a79633b0_Token> _9473_token = (*(_94220_tokens))[_9456_i];;
			{
				auto &_match_expr{ (*(_9473_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(29LLU)) {
					_case_begin_1ad3c825e:;
					{
						_9436_func=_9446_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1ad3c82d6:;
					{
						(_9446_rangeN)++;
						goto _iter_next_1ad3c6bb9;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1ad3c834c:;
					{
						(_9446_rangeN)--;
						if ((_9436_func == _9446_rangeN)) {
							_9436_func=-1LL;
							if (((((*(_94220_tokens)).len() - _9456_i) > 1LL) && ((*((*(_94220_tokens))[(_9456_i + 1LL)]))._field_Id == static_cast<jule::U32>(8LLU)))) {
								(_9456_i)++;
								goto _iter_next_1ad3c6bb9;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1ad3c83b3:;
					{
						(_9446_rangeN)--;
					}
				}
				_match_end_1ad3c7ec8:;
			};
			if ((((*(_9473_token))._field_Id == _94245_delim) && (_9446_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1a79633b0_Token>> _9718_l = (*(_94220_tokens)).slice(0LL, _9456_i);;
				jule::Slice<jule::Ptr<_1a79633b0_Token>> _9728_r = (*(_94220_tokens)).slice((_9456_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9718_l;
				__jule_func_result.__jule_result_arg1 = _9728_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1ad3c6bb9:;
	}
	_iter_end_1ad3c6bb9:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _1a85c8b29_findLowestPrecOp(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _98122_tokens) {
	jule::U8 _9866_prec = 255LLU;;
	jule::I32 _9876_precPos = -1LL;;
	jule::I32 _9896_braceN = 0LL;;
	jule::Bool _9906_skipToNextBraceOpen = false;;
	{
		auto expr = _98122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3cd40c:;
		if (it != expr_end) {
			jule::I32 _9916_i = it - expr->begin();
			jule::Ptr<_1a79633b0_Token> *_9919_token = it;
			{
				{
					auto &_match_expr{ (*((*(_9919_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1ad3ce243:;
						{
							_9906_skipToNextBraceOpen=false;
							goto _case_begin_1ad3ce2cb;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1ad3ce2cb:;
						{
							(_9896_braceN)++;
							goto _iter_next_1ad3cd40c;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1ad3ce342:;
						{
							(_9896_braceN)--;
							goto _iter_next_1ad3cd40c;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(13LLU)) {
						_case_begin_1ad3ce3a8:;
						{
							_9906_skipToNextBraceOpen=true;
							goto _iter_next_1ad3cd40c;
						}
					}
					_match_end_1ad3ce177:;
				};
				{
					
					if (_9906_skipToNextBraceOpen) {
						_case_begin_1ad3d0a2a:;
						{
							goto _iter_next_1ad3cd40c;
						}
					}
					else if ((_9916_i == 0LL)) {
						_case_begin_1ad3d0a91:;
						{
							goto _iter_next_1ad3cd40c;
						}
					}
					else if ((_9896_braceN > 0LL)) {
						_case_begin_1ad3d0b07:;
						{
							goto _iter_next_1ad3cd40c;
						}
					}
					else if ((!(_1a7963e0a_IsBinOp((*((*(_9919_token))))._field_Id)))) {
						_case_begin_1ad3d0b6d:;
						{
							goto _iter_next_1ad3cd40c;
						}
					}
					_match_end_1ad3d082c:;
				};
				jule::Ptr<_1a79633b0_Token> _10203_left = (*(_98122_tokens))[(_9916_i - 1LL)];;
				if ((_1a7963aec_IsUnaryOp((*(_10203_left))._field_Id) || ((*(_10203_left))._field_Id == static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1ad3cd40c;
				};
				if (((_9916_i > 1LL) && ((*(_10203_left))._field_Id == static_cast<jule::U32>(77LLU)))) {
					jule::Ptr<_1a79633b0_Token> _10284_lleft = (*(_98122_tokens))[(_9916_i - 2LL)];;
					if (((*(_10284_lleft))._field_Id == static_cast<jule::U32>(76LLU))) {
						if ((((*((*(_9919_token))))._field_Id == static_cast<jule::U32>(65LLU)) || ((*((*(_9919_token))))._field_Id == static_cast<jule::U32>(62LLU)))) {
							goto _iter_next_1ad3cd40c;
						};
					};
				};
				jule::U8 _10373_p = _1a7963767_Prec((*(_9919_token)).ptr());;
				if (((_10373_p != 0LLU) && (_10373_p <= _9866_prec))) {
					_9866_prec=_10373_p;
					_9876_precPos=_9916_i;
				};
			}
			_iter_next_1ad3cd40c:;
			++it;
			_9916_i++;
			goto _iter_begin_1ad3cd40c;
		}
		_iter_end_1ad3cd40c:;
	};
	return _9876_precPos;;
}



inline jule::Ptr<_1a797e909_IdentExpr> _1a85c8de3_buildIdentExpr(jule::Ptr<_1a79633b0_Token>* _104624_token) {
	return jule::new_ptr<_1a797e909_IdentExpr>(_1a797e909_IdentExpr{._field_Token=(*(_104624_token)), ._field_Ident=(*((*(_104624_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1a79633b0_Token__jule_tuple_int _1a85c91ac_getRangeExprTokens(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _105428_tokens) {
	__jule_tuple_sx_1a79633b0_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _10556_rangeN = 0LL;;
	jule::I32 _10566_i = ((*(_105428_tokens)).len() - 1LL);;
	for (; (_10566_i >= 0LL); (_10566_i)--) {
		{
			jule::Ptr<_1a79633b0_Token> _10583_tok = (*(_105428_tokens))[_10566_i];;
			{
				auto &_match_expr{ (*(_10583_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1ad3d77bd:;
					{
						(_10556_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1ad3d7aed:;
					{
						(_10556_rangeN)--;
					}
				}
				_match_end_1ad3d7845:;
			};
			if ((_10556_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105428_tokens)).slice(0LL, _10566_i);
				__jule_func_result.__jule_result_arg1 = _10556_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1ad3d6d61:;
	}
	_iter_end_1ad3d6d61:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10556_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1a85c9586_isAnonFnHead(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _107718_tokens) {
	{
		auto &_match_expr{ (*((*(_107718_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1ad3d71b3:;
			{
				if ((((*(_107718_tokens)).len() == 1LL) || ((*((*(_107718_tokens))[1LL]))._field_Id != static_cast<jule::U32>(29LLU)))) {
					goto _match_end_1ad3d98ad;
				};
				goto _case_begin_1ad3d9a01;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1ad3d9a01:;
			{
				if (((*((*(_107718_tokens))[((*(_107718_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U32>(73LLU))) {
					goto _match_end_1ad3d98ad;
				};
				return true;;
			}
		}
		_match_end_1ad3d98ad:;
	};
	return false;;
}



inline jule::Bool _1a85ca235_checkAssignTokens(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1a7967e42_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I32 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad483308:;
		if (it != expr_end) {
			jule::Ptr<_1a79633b0_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ad483b33:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ad483ec9:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1ad483dca:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1ad485041:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1ad4850a7:;
						{
							goto _iter_next_1ad483308;
						}
					}
					else if (_1a79684c5_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U32>(38LLU))) {
						_case_begin_1ad48511d:;
						{
							return true;;
						}
					}
					_match_end_1ad484eca:;
				};
			}
			_iter_next_1ad483308:;
			++it;
			goto _iter_begin_1ad483308;
		}
		_iter_end_1ad483308:;
	};
	return false;;
}



inline _1bc0b03aa_Log _1a85cb1e2_makeErr(jule::I32 _1212_row, jule::I32 _1222_col, jule::Ptr<_1a7968e65_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args) {
	return _1bc0b03aa_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_1212_row, ._field_Column=_1222_col, ._field_Path=(*((*(_1233_f))))._field_Path, ._field_Text=_1bc0b081c_Logf(_1253_fmt, _1273_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1a79633b0_Token>> _1a85cb720_range(jule::I32* _3015_i, jule::U32 _3023_open, jule::U32 _3040_close, jule::Slice<jule::Ptr<_1a79633b0_Token>>* _3063_tokens) {
	if (((*(_3015_i)) >= (*(_3063_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1a79633b0_Token> _342_tok = (*(_3063_tokens))[(*(_3015_i))];;
	if (((*(_342_tok))._field_Id != _3023_open)) {
		return nullptr;;
	};
	((*(_3015_i)))++;
	jule::I32 _396_rangeN = 1LL;;
	jule::I32 _402_start = (*(_3015_i));;
	for (; ((_396_rangeN != 0LL) && ((*(_3015_i)) < (*(_3063_tokens)).len())); ((*(_3015_i)))++) {
		{
			jule::Ptr<_1a79633b0_Token> _423_token = (*(_3063_tokens))[(*(_3015_i))];;
			{
				auto &_match_expr{ (*(_423_token))._field_Id };
				
				if (_match_expr == _3023_open) {
					_case_begin_1ad48a046:;
					{
						(_396_rangeN)++;
					}
				}
				else if (_match_expr == _3040_close) {
					_case_begin_1ad48a3a9:;
					{
						(_396_rangeN)--;
					}
				}
				_match_end_1ad48a321:;
			};
		}
	_iter_next_1ad489463:;
	}
	_iter_end_1ad489463:;;
	return (*(_3063_tokens)).slice(_402_start, ((*(_3015_i)) - 1LL));;
}



inline __jule_tuple_sx_1a79633b0_Token__jule_tuple_sx_1a79633b0_Token _1a85cb9d9_rangeLast(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _6019_tokens) {
	__jule_tuple_sx_1a79633b0_Token__jule_tuple_sx_1a79633b0_Token __jule_func_result;
	if (((*(_6019_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U32 _642_first = (*((*(_6019_tokens))[((*(_6019_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_642_first != static_cast<jule::U32>(73LLU)) && (_642_first != static_cast<jule::U32>(76LLU))) && (_642_first != static_cast<jule::U32>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _706_braceN = 0LL;;
	jule::I32 _716_i = ((*(_6019_tokens)).len() - 1LL);;
	for (; (_716_i >= 0LL); (_716_i)--) {
		{
			jule::Ptr<_1a79633b0_Token> _733_token = (*(_6019_tokens))[_716_i];;
			{
				auto &_match_expr{ (*(_733_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1ad48e16b:;
					{
						(_706_braceN)++;
						goto _iter_next_1ad48d4ab;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1ad48e49b:;
					{
						(_706_braceN)--;
					}
				}
				_match_end_1ad48e1e3:;
			};
			if ((_706_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_6019_tokens)).slice(0LL, _716_i);
				__jule_func_result.__jule_result_arg1 = (*(_6019_tokens)).slice(_716_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1ad48d4ab:;
	}
	_iter_end_1ad48d4ab:;;
	__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log _1a85cbe90_parts(jule::Slice<jule::Ptr<_1a79633b0_Token>>* _9815_tokens, jule::U32 _9840_id, jule::Bool _9855_exprMust) {
	__jule_tuple_ssx_1a79633b0_Token__jule_tuple_s_1bc0b03aa_Log __jule_func_result;
	if (((*(_9815_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1026_rangeN = 0LL;;
	jule::I32 _1036_last = 0LL;;
	{
		auto expr = _9815_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4913e3:;
		if (it != expr_end) {
			jule::I32 _1046_i = it - expr->begin();
			jule::Ptr<_1a79633b0_Token> _1049_token = *it;
			{
				{
					auto &_match_expr{ (*(_1049_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ad4932b3:;
						{
							(_1026_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ad49333a:;
						{
							(_1026_rangeN)--;
						}
					}
					else if (_match_expr == _9840_id) {
						_case_begin_1ad4933a1:;
						{
							if ((_1026_rangeN > 0LL)) {
								goto _iter_next_1ad4913e3;
							};
							if ((_9855_exprMust && ((_1046_i - _1036_last) <= 0LL))) {
								_1bc0b03aa_Log _1155_err = _1a85cb1e2_makeErr((*(_1049_token))._field_Row, (*_1049_token.alloc)._field_Column, &((*_1049_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_1bc0b03aa_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1155_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last, _1046_i)); };
							_1036_last=(_1046_i + 1LL);
						}
					}
					_match_end_1ad4931e7:;
				};
			}
			_iter_next_1ad4913e3:;
			++it;
			_1046_i++;
			goto _iter_begin_1ad4913e3;
		}
		_iter_end_1ad4913e3:;
	};
	if ((_1036_last < (*(_9815_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a79633b0_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last)); };
	};
	return __jule_func_result;;
}



inline jule::U32 _1a85cc226_getCloseOfBrace(jule::U32 _12820_left) {
	{
		auto &_match_expr{ _12820_left };
		
		if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1ad49677d:;
			{
				return static_cast<jule::U32>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1ad4967e4:;
			{
				return static_cast<jule::U32>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1ad49685a:;
			{
				return static_cast<jule::U32>(76LLU);;
			}
		}
		else {
			_case_begin_1ad494418:;
			{
				return _12820_left;;
			}
		}
		_match_end_1ad4944e5:;
	};
}



inline _1bc0b03aa_Log _1a85cc655_compilerErr(jule::Ptr<_1a79633b0_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args) {
	return _1bc0b03aa_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_14117_token))))._field_Row, ._field_Column=(*((*(_14117_token))))._field_Column, ._field_Path=(*((*((*(_14117_token))))._field_File))._field_Path, ._field_Text=_1bc0b081c_Logf((*(_14140_fmt)), _14160_args), ._field_Line=_1a796a450_GetRow((*((*(_14117_token))))._field_File, (*((*(_14117_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1a85cc9eb_pushSuggestion(_1bc0b03aa_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args) {
	(*(_15230_log))._field_Suggestion=_1bc0b081c_Logf(_15248_fmt, _15268_args);
}



inline jule::Ptr<_1a7978caa_TypeDecl> _1a85dd963_buildVoidType(void) {
	return jule::new_ptr<_1a7978caa_TypeDecl>(_1a7978caa_TypeDecl{._field_Token=jule::Ptr<_1a79633b0_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1a7d4a17b_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_1ad6a9ce3:;
			{
				__jule_func_result.__jule_result_arg0=_1bc0b35cd_IsWindows(_1bd43eded_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_1ad6a9d59:;
			{
				__jule_func_result.__jule_result_arg0=_1bc0b38db_IsDarwin(_1bd43eded_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_1ad6a99c4:;
			{
				__jule_func_result.__jule_result_arg0=_1bc0b3ba5_IsLinux(_1bd43eded_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_1ad6a9a3a:;
			{
				__jule_func_result.__jule_result_arg0=_1bc0b4810_IsUnix(_1bd43eded_OS);
			}
		}
		else {
			_case_begin_1ad6a9430:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ad6a98a3:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a7d454d9_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_1acac51ed:;
			{
				__jule_func_result.__jule_result_arg0=_1bc0b3ee6_IsI386(_1bd4401a6_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_1acac5264:;
			{
				__jule_func_result.__jule_result_arg0=_1bc0b427c_IsAmd64(_1bd4401a6_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_1acac4dce:;
			{
				__jule_func_result.__jule_result_arg0=_1bc0b4546_IsArm64(_1bd4401a6_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_1acac4e45:;
			{
				__jule_func_result.__jule_result_arg0=_1bc0b4e2b_Is64Bit(_1bd4401a6_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_1acac4eab:;
			{
				__jule_func_result.__jule_result_arg0=_1bc0b4bd9_Is32Bit(_1bd4401a6_Arch);
			}
		}
		else {
			_case_begin_1acac40a9:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1acac4cad:;
	};
	return __jule_func_result;;
}



inline void _1a7d61956_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1bd43eded_OS); };
	if (_1bc0b4810_IsUnix(_1bd43eded_OS)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1a7d61bcb_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1bd4401a6_Arch); };
	if (_1bc0b4e2b_Is64Bit(_1bd4401a6_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1bc0b4bd9_Is32Bit(_1bd4401a6_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1a7d61eb7_initVars(jule::Slice<jule::Str>* _5518_vars, _1a7d61637_CompileInfo* _5532_info) {
	_1a7d61956_setOsVars(_5518_vars);
	_1a7d61bcb_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1ad6ace6c:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1ad6ac8d9:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1ad6ac873:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1ad6ac972:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1ad6adee5:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1ad6ad764:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1ad6ade5c:;
	};
}



inline jule::I32 _1a7d62380_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident) {
	if ((_8425_ident).empty()) {
		return -1LL;;
	};
	{
		auto expr = &(_8412_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6b0887:;
		if (it != expr_end) {
			jule::I32 _886_i = it - expr->begin();
			jule::Str *_889_var = it;
			{
				if (((*(_889_var)) == _8425_ident)) {
					return _886_i;;
				};
			}
			_iter_next_1ad6b0887:;
			++it;
			_886_i++;
			goto _iter_begin_1ad6b0887;
		}
		_iter_end_1ad6b0887:;
	};
	return -1LL;;
}



inline jule::Slice<jule::U8> _1a85e2a33_readBuff(jule::Str _1713_path) {
	return ({
		auto except = static__1bc289287_Read(_1713_path);
		(except.ok()) ? (except.result) : ({{
			jule::println(_1aab19673_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_1bc29ae47_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1bc0b03aa_Log _1a85e2d41_flatCompilerErr(jule::Str _2820_text) {
	return _1bc0b03aa_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_2820_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1a7a70a83_Fn> _1a7cb40c3_RuntimeFindFn(jule::Ptr<_1a7b5e80e_ImportInfo>* _723_runtime, jule::Str _751_ident) {
	;
	jule::Ptr<_1a7a70a83_Fn> _96_f = _1a7b60e1a_FindFn((*(_723_runtime)).ptr(), _751_ident, false);;
	if ((_96_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 108) + jule::Str("\nlocation: julec/obj/runtime.jule:11:3"));;
	};
	return _96_f;;
}



inline jule::Ptr<_1a7997adc_Struct> _1a7cb448b_RuntimeFindStruct(jule::Ptr<_1a7b5e80e_ImportInfo>* _1627_runtime, jule::Str _1655_ident) {
	;
	jule::Ptr<_1a7997adc_Struct> _186_f = _1a7b60a1e_FindStruct((*(_1627_runtime)).ptr(), _1655_ident, false);;
	if ((_186_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 106) + jule::Str("\nlocation: julec/obj/runtime.jule:20:3"));;
	};
	return _186_f;;
}



inline jule::Uintptr _1a7cb51b2_TypeData(jule::Any* _1414_m) {
	return ((jule::Uintptr)((*(((_1a7cb4ec5_anyData*)(_1414_m))))._field_typePtr));;
}



inline jule::Bool _1a7cb557a_equalConst(jule::Ptr<_1a79ea9a8_Const> _1815_l, jule::Ptr<_1a79ea9a8_Const> _1836_r) {
	{
		
		if (_1a7a5b024_IsI64(_1815_l.ptr())) {
			_case_begin_1ad524a5e:;
			{
				return (_1a7a5b024_IsI64(_1836_r.ptr()) && (_1a7a58928_ReadI64(_1815_l) == _1a7a58928_ReadI64(_1836_r)));;
			}
		}
		else if (_1a7a5b2aa_IsU64(_1815_l.ptr())) {
			_case_begin_1ad524ac5:;
			{
				return (_1a7a5b2aa_IsU64(_1836_r.ptr()) && (_1a7a58bae_ReadU64(_1815_l) == _1a7a58bae_ReadU64(_1836_r)));;
			}
		}
		else if (_1a7a5ba5d_IsF64(_1815_l)) {
			_case_begin_1ad524b4c:;
			{
				return (_1a7a5ba5d_IsF64(_1836_r) && (_1a7a59462_ReadF64(_1815_l) == _1a7a59462_ReadF64(_1836_r)));;
			}
		}
		else if (_1a7a5b7c7_IsStr(_1815_l)) {
			_case_begin_1ad524bc4:;
			{
				return (_1a7a5b7c7_IsStr(_1836_r) && (_1a7a591cb_ReadStr(_1815_l) == _1a7a591cb_ReadStr(_1836_r)));;
			}
		}
		else if (_1a7a5b541_IsBool(_1815_l)) {
			_case_begin_1ad524c4b:;
			{
				return (_1a7a5b541_IsBool(_1836_r) && (_1a7a58e45_ReadBool(_1815_l) == _1a7a58e45_ReadBool(_1836_r)));;
			}
		}
		else if (_1a7a5bce4_IsNil(_1815_l)) {
			_case_begin_1ad524de4:;
			{
				return _1a7a5bce4_IsNil(_1836_r);;
			}
		}
		else {
			_case_begin_1ad524971:;
			{
				return false;;
			}
		}
		_match_end_1ad524861:;
	};
}



inline jule::Bool _1a7cb58ee_equalCasting(jule::Ptr<_1a7a64ed9_CastingExpr> _3717_l, jule::Ptr<_1a7a64ed9_CastingExpr> _3740_r) {
	if ((!(_1a7c32c9a_Equal((*(_3717_l))._field_Type, (*(_3740_r))._field_Type)))) {
		return false;;
	};
	return _1a7cb6834_EqualModels((*((*(_3717_l))._field_Expr))._field_Model, (*(*(_3740_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a7cb5cb7_equalUnary(jule::Ptr<_1a7a63c85_UnaryExpr> _4415_l, jule::Ptr<_1a7a63c85_UnaryExpr> _4436_r) {
	if ((((*((*(_4415_l))._field_Op))._field_Id != (*(*(_4436_r))._field_Op.alloc)._field_Id) || ((*((*(_4415_l))._field_Op))._field_Kind != (*(*(_4436_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1a7cb6834_EqualModels((*((*(_4415_l))._field_Expr))._field_Model, (*(*(_4436_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a7cb613b_equalIndexing(jule::Ptr<_1a7a6621b_IndexingExpr> _5118_l, jule::Ptr<_1a7a6621b_IndexingExpr> _5142_r) {
	return (_1a7cb6834_EqualModels((*((*(_5118_l))._field_Expr))._field_Model, (*(*(_5142_r))._field_Expr.alloc)._field_Model) && _1a7cb6834_EqualModels((*((*_5118_l.alloc)._field_Index))._field_Model, (*(*(_5142_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1a7cb64b0_equalBinary(jule::Ptr<_1a7a638ab_BinaryExpr> _5616_l, jule::Ptr<_1a7a638ab_BinaryExpr> _5638_r) {
	if ((((*((*(_5616_l))._field_Op))._field_Id != (*(*(_5638_r))._field_Op.alloc)._field_Id) || ((*((*(_5616_l))._field_Op))._field_Kind != (*(*(_5638_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1a7cb6834_EqualModels((*((*(_5616_l))._field_Left))._field_Model, (*(*(_5638_r))._field_Left.alloc)._field_Model) && _1a7cb6834_EqualModels((*((*_5616_l.alloc)._field_Right))._field_Model, (*(*(_5638_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1a7cb6834_EqualModels(jule::Any _6716_l, jule::Any _6731_r) {
	if ((_1a7cb51b2_TypeData(&(_6716_l)) != _1a7cb51b2_TypeData(&(_6731_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6716_l };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad533cb0:;
			{
				return (_6716_l.unsafe_cast_ptr<_1a7ba4eb4_Var>() == _6731_r.cast_ptr<_1a7ba4eb4_Var>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ad534288:;
			{
				jule::Ptr<_1a7a6842c_StructSubIdentExpr> _753_li = _6716_l.unsafe_cast_ptr<_1a7a6842c_StructSubIdentExpr>();;
				jule::Ptr<_1a7a6842c_StructSubIdentExpr> _763_ri = _6731_r.cast_ptr<_1a7a6842c_StructSubIdentExpr>(&__jule_any_type99);;
				return (((*(_753_li))._field_Field == (*(_763_ri))._field_Field) && _1a7cb6834_EqualModels((*((*_753_li.alloc)._field_Expr))._field_Model, (*(*(_763_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ad5342ee:;
			{
				return _1a7cb557a_equalConst(_6716_l.unsafe_cast_ptr<_1a79ea9a8_Const>(), _6731_r.cast_ptr<_1a79ea9a8_Const>(&__jule_any_type15));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ad534365:;
			{
				return _1a7cb58ee_equalCasting(_6716_l.unsafe_cast_ptr<_1a7a64ed9_CastingExpr>(), _6731_r.cast_ptr<_1a7a64ed9_CastingExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ad5343cb:;
			{
				return _1a7cb5cb7_equalUnary(_6716_l.unsafe_cast_ptr<_1a7a63c85_UnaryExpr>(), _6731_r.cast_ptr<_1a7a63c85_UnaryExpr>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ad533e9c:;
			{
				return _1a7cb613b_equalIndexing(_6716_l.unsafe_cast_ptr<_1a7a6621b_IndexingExpr>(), _6731_r.cast_ptr<_1a7a6621b_IndexingExpr>(&__jule_any_type43));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad534013:;
			{
				return _1a7cb64b0_equalBinary(_6716_l.unsafe_cast_ptr<_1a7a638ab_BinaryExpr>(), _6731_r.cast_ptr<_1a7a638ab_BinaryExpr>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1ad533771:;
			{
				return false;;
			}
		}
		_match_end_1ad53370a:;
	};
}



inline void _1a85e762b_pushPasses(jule::Ptr<_1a7b62081_Package>* _12820_p, jule::Slice<jule::Str>* _12844_passes) {
	{
		auto expr = &((*((*(_12820_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5391d3:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _12914_f = *it;
			{
				_julec_label_1ad539898:;
				{
					auto expr = &((*(_12914_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad539cd8:;
					if (it != expr_end) {
						_1a7b4dcd7_Pass _13110_pass = *it;
						{
							if ((_13110_pass._field_Text).empty()) {
								goto _iter_next_1ad539cd8;
							};
							{
								auto expr = _12844_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ad53a5be:;
								if (it != expr_end) {
									jule::Str _13511_cpass = *it;
									{
										if ((_13511_cpass == _13110_pass._field_Text)) {
											goto _iter_next_1ad539cd8;
										};
									}
									_iter_next_1ad53a5be:;
									++it;
									goto _iter_begin_1ad53a5be;
								}
								_iter_end_1ad53a5be:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12844_passes)); __jule_push_dest.push(_13110_pass._field_Text); };
						}
						_iter_next_1ad539cd8:;
						++it;
						goto _iter_begin_1ad539cd8;
					}
					_iter_end_1ad539cd8:;
				};
			}
			_iter_next_1ad5391d3:;
			++it;
			goto _iter_begin_1ad5391d3;
		}
		_iter_end_1ad5391d3:;
	};
}



inline jule::Slice<jule::Str> _1a85e79e4_getAllUniquePasses(jule::Ptr<_1a7b62081_Package>* _14528_pkg, jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>> _14553_uses) {
	jule::Slice<jule::Str> _14610_passes = nullptr;;
	_1a85e762b_pushPasses(_14528_pkg, &(_14610_passes));
	{
		auto expr = &(_14553_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad53b7ce:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _14914_u = *it;
			{
				if ((!((*(_14914_u))._field_Binded))) {
					_1a85e762b_pushPasses(&((*_14914_u.alloc)._field_Package), &(_14610_passes));
				};
			}
			_iter_next_1ad53b7ce:;
			++it;
			goto _iter_begin_1ad53b7ce;
		}
		_iter_end_1ad53b7ce:;
	};
	return _14610_passes;;
}



inline _1a7d61637_CompileInfo _1a85e7c03_buildCompileInfo(void) {
	_1a7d61637_CompileInfo _1596_info = _1a7d61637_CompileInfo{._field_Prod=_1bd44650e_Production, ._field_Test=_1bd445b4b_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _1bd443c37_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1ad53ca77:;
			{
				_1596_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1ad53cbba:;
			{
				_1596_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_1ad53caee:;
	};
	{
		auto &_match_expr{ _1bd445343_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1ad53cc53:;
			{
				_1596_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1ad53d946:;
			{
				_1596_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1ad53d1c6:;
			{
				_1596_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_1ad53dbee:;
	};
	return _1596_info;;
}



inline void _1a85e7eab_pushRuntimeToAST(jule::Ptr<_1a7976deb_AST>* _18426_f) {
	jule::Ptr<_1a7991cd4_UseDecl> _1856_decl = jule::new_ptr<_1a7991cd4_UseDecl>(_1a7991cd4_UseDecl{._field_Token=nullptr, ._field_Path=jule::new_ptr<_1a79633b0_Token>(_1a79633b0_Token{._field_File=jule::Ptr<_1a7968e65_Fileset>(nullptr), ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str::lit("\"std/runtime\"", 13), ._field_Id=static_cast<jule::U32>(4LLU)}), ._field_Alias=nullptr, ._field_Binded=false});;
	{ jule::Slice<jule::Ptr<_1a7991cd4_UseDecl>> &__jule_push_dest = (*((*(_18426_f))))._field_UseDecls; __jule_push_dest.push(_1856_decl); };
	if (((*((*(_18426_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_18426_f))))._field_UseDecls[((*((*(_18426_f))))._field_UseDecls.len() - 1LL)]=(*((*(_18426_f))))._field_UseDecls[0LL];
		(*((*(_18426_f))))._field_UseDecls[0LL]=_1856_decl;
	};
}



inline void _1a85e86c6_IterPackages(jule::Ptr<_1a85e5c78_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a7b62081_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad54e76a:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1ad54e76a:;
			++it;
			goto _iter_begin_1ad54e76a;
		}
		_iter_end_1ad54e76a:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1a85e8929_IterFiles(jule::Ptr<_1a7b62081_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a7a76d86_SymTab>*> _1640_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad560b11:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _1714_file = *it;
			{
				_1640_f(&(_1714_file));
			}
			_iter_next_1ad560b11:;
			++it;
			goto _iter_begin_1ad560b11;
		}
		_iter_end_1ad560b11:;
	};
}



inline void _1a85e8c15_IterTraitMethods(jule::Ptr<_1a7a7b297_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1a7a70a83_Fn>*> _2443_f) {
	{
		auto expr = &((*((*(_2426_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad561804:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _2514_m = *it;
			{
				_2443_f(&(_2514_m));
			}
			_iter_next_1ad561804:;
			++it;
			goto _iter_begin_1ad561804;
		}
		_iter_end_1ad561804:;
	};
	{
		auto expr = &((*((*(_2426_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad561ccc:;
		if (it != expr_end) {
			jule::Ptr<_1a7c3a962_TypeSym> _2814_inh = *it;
			{
				jule::Ptr<_1a7a7b297_Trait> _297_it = _1a7c37211_Trait((*(_2814_inh))._field_Type.ptr());;
				_1a85e8c15_IterTraitMethods(&(_297_it), _2443_f);
			}
			_iter_next_1ad561ccc:;
			++it;
			goto _iter_begin_1ad561ccc;
		}
		_iter_end_1ad561ccc:;
	};
}



inline jule::Bool _1a85eae48_IsForwarded(jule::Ptr<_1a7b2c238_Scope>* _1117_s) {
	jule::Any _122_last = (*((*(_1117_s))))._field_Stmts[((*((*(_1117_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _122_last };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ad5895b8:;
			{
				{
					auto &_match_expr{ (*(_122_last.cast_ptr<_1a7bed89d_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1ad589cb1:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ad58a3dd:;
						{
							return false;;
						}
					}
					_match_end_1ad58a377:;
				};
			}
		}
		else {
			_case_begin_1ad58973e:;
			{
				return true;;
			}
		}
		_match_end_1ad5896c8:;
	};
}



inline jule::Bool _1a85eb256_IsExprComesFromBind(jule::Ptr<_1a7bed89d_Data>* _2725_d) {
	{
		auto &_match_expr{ (*((*(_2725_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad58b026:;
			{
				return (*((*((*(_2725_d))))._field_Model.unsafe_cast_ptr<_1a7ba4eb4_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ad58b0ae:;
			{
				return _1a85ec6b9_IsStructBinded((*((*((*(_2725_d))))._field_Model.unsafe_cast_ptr<_1a7a6842c_StructSubIdentExpr>()))._field_Owner);;
			}
		}
		else {
			_case_begin_1ad58995e:;
			{
				return false;;
			}
		}
		_match_end_1ad5898e8:;
	};
}



inline jule::Bool _1a85eb520_IsAny(jule::Ptr<_1a7c3255d_Type>* _3915_t) {
	if ((_1a7c361aa_TypeEnum((*(_3915_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a7c3b369_Prim> _432_prim = _1a7c35671_Prim((*(_3915_t)).ptr());;
	return ((_432_prim != nullptr) && _1a7c3eaba_IsAny(_432_prim.ptr()));;
}



inline jule::Bool _1a85eb861_IsClosure(jule::Ptr<_1a7a666c2_AnonFnExpr>* _4815_m) {
	return ((*((*(_4815_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1a85ebba2_IsTraitMethod(jule::Ptr<_1a799a97a_StructIns>* _5123_owner, jule::Ptr<_1a7a73b41_FnIns>* _5149_f) {
	{
		auto expr = &((*((*((*(_5123_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad58e546:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7b297_Trait> _5214_t = *it;
			{
				if ((_1a7a7be79_FindMethod(_5214_t.ptr(), (*((*((*(_5149_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1ad58e546:;
			++it;
			goto _iter_begin_1ad58e546;
		}
		_iter_end_1ad58e546:;
	};
	return false;;
}



inline jule::Bool _1a85ec026_IsStdPackage(jule::Str _6517_f, jule::Str _6525_p) {
	return _1bd42a647_HasPrefix(_6517_f, _1bd4367b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1bd43e35e_PathStdlib; (*it++) = _6525_p; __jule_collection; })));;
}



inline jule::Bool _1a85ec6b9_IsStructBinded(jule::Ptr<_1a799a97a_StructIns> _7919_s) {
	if ((*((*(_7919_s))._field_Decl))._field_Binded) {
		return true;;
	};
	if (((*(_7919_s))._field_Source != nullptr)) {
		{
			auto &_match_expr{ (*((*(_7919_s))._field_Source))._field_Kind };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
				_case_begin_1ad592714:;
				{
					return _1a85ec6b9_IsStructBinded((*(*(_7919_s))._field_Source.alloc)._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0));;
				}
			}
			_match_end_1ad59268c:;
		};
	};
	return false;;
}



inline jule::Ptr<_1a79781c7_Directive> _1a85ece17_FindDirective(jule::Slice<jule::Ptr<_1a79781c7_Directive>>* _923_directives, jule::Str _954_tag) {
	{
		auto expr = _923_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad592c64:;
		if (it != expr_end) {
			jule::Ptr<_1a79781c7_Directive> _1014_dr = *it;
			{
				if (((*((*(_1014_dr))._field_Tag))._field_Kind == _954_tag)) {
					return _1014_dr;;
				};
			}
			_iter_next_1ad592c64:;
			++it;
			goto _iter_begin_1ad592c64;
		}
		_iter_end_1ad592c64:;
	};
	return nullptr;;
}



inline jule::Bool _1a85ed2d0_HasDirective(jule::Slice<jule::Ptr<_1a79781c7_Directive>>* _1918_directives, jule::Str _1949_tag) {
	return (_1a85ece17_FindDirective(_1918_directives, _1949_tag) != nullptr);;
}



inline jule::I32 _1a85edd19_FindTraitTypeOffsetS(jule::Ptr<_1a7a7b297_Trait> _3725_t, jule::Ptr<_1a799a97a_StructIns> _3746_s) {
	if (((*(_3725_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _416_i = 0LL;;
	{
		auto expr = &((*(_3725_t))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad597021:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> *_429_si = it;
			{
				if (((*(_3746_s))._field_Decl == (*(_429_si)))) {
					{
						auto expr = &((*((*(_429_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad597e9a:;
						if (it != expr_end) {
							jule::Ptr<_1a799a97a_StructIns> *_4411_ins = it;
							{
								if (((*(_4411_ins)) == _3746_s)) {
									return _416_i;;
								};
								(_416_i)++;
							}
							_iter_next_1ad597e9a:;
							++it;
							goto _iter_begin_1ad597e9a;
						}
						_iter_end_1ad597e9a:;
					};
					goto _iter_end_1ad597021;
				} else {
					_416_i+=(*(*(_429_si)).alloc)._field_Instances.len();
				};
			}
			_iter_next_1ad597021:;
			++it;
			goto _iter_begin_1ad597021;
		}
		_iter_end_1ad597021:;
	};
	return -1LL;;
}



inline jule::I32 _1a85ee18d_FindTraitTypeOffset(jule::Ptr<_1a7a7b297_Trait> _6024_t, jule::Ptr<_1a7c3255d_Type> _6045_k) {
	if (((*(_6024_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1a799a97a_StructIns> _6410_s = nullptr;;
	{
		auto &_match_expr{ (*(_6045_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)) {
			_case_begin_1ad599b28:;
			{
				_6045_k=(*((*(_6045_k))._field_Kind.cast_ptr<_1a7c3ed95_Sptr>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)))._field_Elem;
				{
					auto &_match_expr{ (*(_6045_k))._field_Kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
						_case_begin_1ad59ac06:;
						{
							_6410_s=(*_6045_k.alloc)._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);
						}
					}
					_match_end_1ad59ab7e:;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
			_case_begin_1ad59984d:;
			{
				_6410_s=(*(_6045_k))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);
			}
		}
		_match_end_1ad599a90:;
	};
	if ((_6410_s == nullptr)) {
		return -1LL;;
	};
	return _1a85edd19_FindTraitTypeOffsetS(_6024_t, _6410_s);;
}



inline jule::Ptr<_1a7a73b41_FnIns> _1a85ee512_FindFnGenericInstance(jule::Ptr<_1a7a70a83_Fn>* _8431_f, jule::Slice<jule::Ptr<_1a7c3255d_Type>> _8445_generics) {
	_julec_label_1ad59c004:;
	{
		auto expr = &((*((*(_8431_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad59c532:;
		if (it != expr_end) {
			jule::Ptr<_1a7a73b41_FnIns> _8614_ins = *it;
			{
				{
					auto expr = &((*(_8614_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad59cec2:;
					if (it != expr_end) {
						jule::I32 _877_i = it - expr->begin();
						{
							if ((!(_1a7c32c9a_Equal((*((*(_8614_ins))._field_Generics[_877_i]))._field_Type, _8445_generics[_877_i])))) {
								goto _iter_next_1ad59c532;
							};
						}
						_iter_next_1ad59cec2:;
						++it;
						_877_i++;
						goto _iter_begin_1ad59cec2;
					}
					_iter_end_1ad59cec2:;
				};
				return _8614_ins;;
			}
			_iter_next_1ad59c532:;
			++it;
			goto _iter_begin_1ad59c532;
		}
		_iter_end_1ad59c532:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:94:2"));;
}



inline jule::Ptr<_1a799a97a_StructIns> _1a85ee886_FindStructGenericInstance(jule::Ptr<_1a7997adc_Struct>* _10035_s, jule::Slice<jule::Ptr<_1a7c3255d_Type>> _10053_generics) {
	_julec_label_1ad59c862:;
	{
		auto expr = &((*((*(_10035_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad59e5de:;
		if (it != expr_end) {
			jule::Ptr<_1a799a97a_StructIns> _10214_ins = *it;
			{
				{
					auto expr = &((*(_10214_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad5a007e:;
					if (it != expr_end) {
						jule::I32 _1037_i = it - expr->begin();
						{
							if ((!(_1a7c32c9a_Equal((*((*(_10214_ins))._field_Generics[_1037_i]))._field_Type, _10053_generics[_1037_i])))) {
								goto _iter_next_1ad59e5de;
							};
						}
						_iter_next_1ad5a007e:;
						++it;
						_1037_i++;
						goto _iter_begin_1ad5a007e;
					}
					_iter_end_1ad5a007e:;
				};
				return _10214_ins;;
			}
			_iter_next_1ad59e5de:;
			++it;
			goto _iter_begin_1ad59e5de;
		}
		_iter_end_1ad59e5de:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:110:2"));;
}



inline jule::Ptr<_1a7b5e80e_ImportInfo> _1a85eed1a_SelectImport(jule::Slice<jule::Ptr<_1a7b5e80e_ImportInfo>> _11521_imports, jule::Str _11551_linkpath) {
	{
		auto expr = &(_11521_imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad59e996:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> _11614_imp = *it;
			{
				if (((*(_11614_imp))._field_LinkPath == _11551_linkpath)) {
					return _11614_imp;;
				};
			}
			_iter_next_1ad59e996:;
			++it;
			goto _iter_begin_1ad59e996;
		}
		_iter_end_1ad59e996:;
	};
	return nullptr;;
}



inline jule::I32 _1a8600117_FindVar(jule::Ptr<_1a7ba4eb4_Var> _12512_v, jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _12527_vars) {
	{
		auto expr = &(_12527_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5a1822:;
		if (it != expr_end) {
			jule::I32 _1266_i = it - expr->begin();
			jule::Ptr<_1a7ba4eb4_Var> *_1269_v2 = it;
			{
				if ((_12512_v == (*(_1269_v2)))) {
					return _1266_i;;
				};
			}
			_iter_next_1ad5a1822:;
			++it;
			_1266_i++;
			goto _iter_begin_1ad5a1822;
		}
		_iter_end_1ad5a1822:;
	};
	return -1LL;;
}



inline jule::Str _1a86003d1_GetBindIdent(jule::Ptr<_1a7c3255d_Type> _13617_t) {
	{
		auto &_match_expr{ (*(_13617_t))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)) {
			_case_begin_1ad5a2812:;
			{
				jule::Ptr<_1a799a97a_StructIns> _1393_s = (*(_13617_t))._field_Kind.cast_ptr<_1a799a97a_StructIns>((jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0);;
				if ((*((*(_1393_s))._field_Decl))._field_Binded) {
					return (*(*(_1393_s))._field_Decl.alloc)._field_Ident;;
				};
				if (((*(_1393_s))._field_Source != nullptr)) {
					return _1a86003d1_GetBindIdent((*_1393_s.alloc)._field_Source);;
				};
			}
		}
		_match_end_1ad5a279b:;
	};
	return jule::Str();;
}



inline jule::Bool _1ad555cb0_isOrdered(jule::Ptr<_1a7ba4eb4_Var>* _1418_t, jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _1425_s) {
	_julec_label_1ad557b6e:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5580d1:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1ad55893e:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1ad5580d1;
							};
						}
					}
					_match_end_1ad558884:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad559104:;
					if (it != expr_end) {
						jule::Ptr<_1a7ba4eb4_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1ad5580d1;
							};
						}
						_iter_next_1ad559104:;
						++it;
						goto _iter_begin_1ad559104;
					}
					_iter_end_1ad559104:;
				};
				return false;;
			}
			_iter_next_1ad5580d1:;
			++it;
			goto _iter_begin_1ad5580d1;
		}
		_iter_end_1ad5580d1:;
	};
	return true;;
}

inline jule::Bool _1ad55b8a9_isOrdered(jule::Ptr<_1a7997adc_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a7997adc_Struct>> _1425_s) {
	_julec_label_1ad55d724:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad55db86:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad55e626:;
					if (it != expr_end) {
						jule::Ptr<_1a7997adc_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1ad55db86;
							};
						}
						_iter_next_1ad55e626:;
						++it;
						goto _iter_begin_1ad55e626;
					}
					_iter_end_1ad55e626:;
				};
				return false;;
			}
			_iter_next_1ad55db86:;
			++it;
			goto _iter_begin_1ad55db86;
		}
		_iter_end_1ad55db86:;
	};
	return true;;
}



inline void _1ad552eee_order(jule::Slice<jule::Ptr<_1a7ba4eb4_Var>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_1ad5534c7:;
	jule::I32 _406_j = _386_i;;
	_julec_label_1ad5541ed:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1a7ba4eb4_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1ad555441:;
				if (it != expr_end) {
					jule::Ptr<_1a7ba4eb4_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1ad5547a3;
						};
					}
					_iter_next_1ad555441:;
					++it;
					goto _iter_begin_1ad555441;
				}
				_iter_end_1ad555441:;
			};
			if (_1ad555cb0_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1ad5547a3:;
	}
	_iter_end_1ad5547a3:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1ad5534c7;
	};
}

inline void _1ad55372a_order(jule::Slice<jule::Ptr<_1a7997adc_Struct>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_1ad55386d:;
	jule::I32 _406_j = _386_i;;
	_julec_label_1ad558664:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1a7997adc_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1ad55b03a:;
				if (it != expr_end) {
					jule::Ptr<_1a7997adc_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1ad55a39c;
						};
					}
					_iter_next_1ad55b03a:;
					++it;
					goto _iter_begin_1ad55b03a;
				}
				_iter_end_1ad55b03a:;
			};
			if (_1ad55b8a9_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1ad55a39c:;
	}
	_iter_end_1ad55a39c:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1ad55386d;
	};
}



inline void _1ad907480_Reverse(jule::Slice<jule::Any> _7327_s) {
	jule::I32 _7413_j = (_7327_s.len() - 1LL);;
	jule::I32 _746_i = 0LL;;
	for (; (_746_i < _7413_j); ({
		jule::I32 ___jule_assign_arg = (_746_i + 1LL);
		jule::I32 _1___jule_assign_arg = (_7413_j - 1LL);
		_746_i = ___jule_assign_arg;
		_7413_j = _1___jule_assign_arg;
	})) {
		{
			std::swap(_7327_s[_746_i], _7327_s[_7413_j]);
		}
	_iter_next_1ad908151:;
	}
	_iter_end_1ad908151:;;
}

inline void _1ada38935_Reverse(jule::Slice<jule::U8> _7327_s) {
	jule::I32 _7413_j = (_7327_s.len() - 1LL);;
	jule::I32 _746_i = 0LL;;
	for (; (_746_i < _7413_j); ({
		jule::I32 ___jule_assign_arg = (_746_i + 1LL);
		jule::I32 _1___jule_assign_arg = (_7413_j - 1LL);
		_746_i = ___jule_assign_arg;
		_7413_j = _1___jule_assign_arg;
	})) {
		{
			std::swap(_7327_s[_746_i], _7327_s[_7413_j]);
		}
	_iter_next_1ada395b2:;
	}
	_iter_end_1ada395b2:;;
}



inline void _1ad90614e_rotateLeft(jule::Slice<jule::Any> _4222_s, jule::I32 _4230_r) {
	_1ad907480_Reverse(_4222_s.slice(0LL, _4230_r));
	_1ad907480_Reverse(_4222_s.slice(_4230_r));
	_1ad907480_Reverse(_4222_s);
}

inline void _1ada33732_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I32 _4230_r) {
	_1ada38935_Reverse(_4222_s.slice(0LL, _4230_r));
	_1ada38935_Reverse(_4222_s.slice(_4230_r));
	_1ada38935_Reverse(_4222_s);
}



inline void _1ad903aca_rotateRight(jule::Slice<jule::Any> _4823_s, jule::I32 _4831_r) {
	_1ad90614e_rotateLeft(_4823_s, (_4823_s.len() - _4831_r));
}

inline void _1bae44b25_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I32 _4831_r) {
	_1ada33732_rotateLeft(_4823_s, (_4823_s.len() - _4831_r));
}



inline jule::Bool _1ad900e7e_overlaps(jule::Slice<jule::Any> _5316_a, jule::Slice<jule::Any> _5324_b) {
	if (((_5316_a.len() == 0LL) || (_5324_b.len() == 0LL))) {
		return false;;
	};
	jule::U32 _572_elemSize = sizeof(jule::Any);;
	if ((_572_elemSize == 0LLU)) {
		return false;;
	};
	return (((&(_5316_a[0LL])) <= ((&(_5324_b[(_5324_b.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))) && ((&(_5324_b[0LL])) <= ((&(_5316_a[(_5316_a.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))));;
}

inline jule::Bool _1bae4201d_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b) {
	if (((_5316_a.len() == 0LL) || (_5324_b.len() == 0LL))) {
		return false;;
	};
	jule::U32 _572_elemSize = sizeof(jule::U8);;
	if ((_572_elemSize == 0LLU)) {
		return false;;
	};
	return (((&(_5316_a[0LL])) <= ((&(_5324_b[(_5324_b.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))) && ((&(_5324_b[0LL])) <= ((&(_5316_a[(_5316_a.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))));;
}



inline jule::Slice<jule::Any> _1ad8ea6b5_Insert(jule::Slice<jule::Any> _7226_s, jule::I32 _7232_i, jule::Slice<jule::Any> _7244_v) {
	_7226_s.slice(_7232_i);
	jule::I32 _752_m = _7244_v.len();;
	if ((_752_m == 0LL)) {
		return _7226_s;;
	};
	jule::I32 _792_n = _7226_s.len();;
	if ((_7232_i == _792_n)) {
		return jule::append(_7226_s,_7244_v);;
	};
	if (((_792_n + _752_m) > _7226_s.cap())) {
		jule::Slice<jule::Any> _887_s2 = jule::append(_7226_s.slice(0LL, _7232_i),({ auto __jule_collection = jule::Slice<jule::Any>::alloc(((_792_n + _752_m) - _7232_i), ((_792_n + _752_m) - _7232_i)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }));;
		jule::copy(_887_s2.slice(_7232_i), _7244_v);
		jule::copy(_887_s2.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		return _887_s2;;
	};
	(_7226_s).mut_slice(0LL, (_792_n + _752_m));;
	if ((!(_1ad900e7e_overlaps(_7244_v, _7226_s.slice((_7232_i + _752_m)))))) {
		jule::copy(_7226_s.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		jule::copy(_7226_s.slice(_7232_i), _7244_v);
		return _7226_s;;
	};
	jule::copy(_7226_s.slice(_792_n), _7244_v);
	_1ad903aca_rotateRight(_7226_s.slice(_7232_i), _752_m);
	return _7226_s;;
}

inline jule::Slice<jule::U8> _1bae3cda4_Insert(jule::Slice<jule::U8> _7226_s, jule::I32 _7232_i, jule::Slice<jule::U8> _7244_v) {
	_7226_s.slice(_7232_i);
	jule::I32 _752_m = _7244_v.len();;
	if ((_752_m == 0LL)) {
		return _7226_s;;
	};
	jule::I32 _792_n = _7226_s.len();;
	if ((_7232_i == _792_n)) {
		return jule::append(_7226_s,_7244_v);;
	};
	if (((_792_n + _752_m) > _7226_s.cap())) {
		jule::Slice<jule::U8> _887_s2 = jule::append(_7226_s.slice(0LL, _7232_i),({ auto __jule_collection = jule::Slice<jule::U8>::alloc(((_792_n + _752_m) - _7232_i), ((_792_n + _752_m) - _7232_i)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }));;
		jule::copy(_887_s2.slice(_7232_i), _7244_v);
		jule::copy(_887_s2.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		return _887_s2;;
	};
	(_7226_s).mut_slice(0LL, (_792_n + _752_m));;
	if ((!(_1bae4201d_overlaps(_7244_v, _7226_s.slice((_7232_i + _752_m)))))) {
		jule::copy(_7226_s.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		jule::copy(_7226_s.slice(_7232_i), _7244_v);
		return _7226_s;;
	};
	jule::copy(_7226_s.slice(_792_n), _7244_v);
	_1bae44b25_rotateRight(_7226_s.slice(_7232_i), _752_m);
	return _7226_s;;
}



inline void _1a9206888_EliminateDefines(jule::Ptr<_1a85e5c78_IR>* _35226_ir) {
	jule::Ptr<_1a92036a9_ObjectDeadCode> _3536_ocd = static__1a9203b93_new(_35226_ir);;
	_1a920658b_elimanate(_3536_ocd);
}



inline jule::Bool _1a9206b96_isAllMethodsLive(jule::Ptr<_1a7997adc_Struct> _35821_s) {
	return ((_35821_s == (*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_Map) || (_35821_s == (*((*(_1a860157a_ProgramMeta))._field_Runtime))._field_MapIterator));;
}



inline void _1a920aa13_eliminateDeadCodeOfScope(jule::Ptr<_1a7b2c238_Scope> _21833_s) {
	jule::Slice<jule::Ptr<_1a7b2ec41_Label>> _2192_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b2ec41_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b2ec41_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1a7b303a1_GotoSt>> _2202_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7b303a1_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7b303a1_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1a92077ce_scopeDeadCode> _2216_sdc = jule::new_ptr<_1a92077ce_scopeDeadCode>(_1a92077ce_scopeDeadCode{._field_parent=jule::Ptr<_1a92077ce_scopeDeadCode>(nullptr), ._field_s=_21833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1a7b2ec41_Label>>>)((&(_2192_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1a7b303a1_GotoSt>>>)((&(_2202_gotos)))), ._field_except=false});;
	{
		_1a920a716_optimizeStmts(_2216_sdc);
	};
}



inline void _1a920ac88_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a7a70a83_Fn>>* _23033_funcs) {
	{
		auto expr = _23033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6a137e:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _23114_func = *it;
			{
				{
					auto expr = &((*(_23114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac6a203e:;
					if (it != expr_end) {
						jule::Ptr<_1a7a73b41_FnIns> _23215_ins = *it;
						{
							_1a920aa13_eliminateDeadCodeOfScope((*(_23215_ins))._field_Scope);
						}
						_iter_next_1ac6a203e:;
						++it;
						goto _iter_begin_1ac6a203e;
					}
					_iter_end_1ac6a203e:;
				};
			}
			_iter_next_1ac6a137e:;
			++it;
			goto _iter_begin_1ac6a137e;
		}
		_iter_end_1ac6a137e:;
	};
}



inline void _1a920aeb9_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a7997adc_Struct>>* _23937_structs) {
	{
		auto expr = _23937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6a2ade:;
		if (it != expr_end) {
			jule::Ptr<_1a7997adc_Struct> _24014_s = *it;
			{
				{
					auto expr = &((*(_24014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac6a313e:;
					if (it != expr_end) {
						jule::Ptr<_1a799a97a_StructIns> _24115_ins = *it;
						{
							_1a920ac88_eliminateScopeFunctions(&((*(_24115_ins))._field_Methods));
						}
						_iter_next_1ac6a313e:;
						++it;
						goto _iter_begin_1ac6a313e;
					}
					_iter_end_1ac6a313e:;
				};
			}
			_iter_next_1ac6a2ade:;
			++it;
			goto _iter_begin_1ac6a2ade;
		}
		_iter_end_1ac6a2ade:;
	};
}



inline void _1a920b272_eliminateFunctionsScopePackage(jule::Ptr<_1a7b62081_Package>* _24740_pkg) {
	{
		auto expr = &((*((*(_24740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6a3bde:;
		if (it != expr_end) {
			jule::Ptr<_1a7a76d86_SymTab> _24814_f = *it;
			{
				_1a920ac88_eliminateScopeFunctions(&((*(_24814_f))._field_Funcs));
				_1a920aeb9_eliminateScopeStructMethods(&((*_24814_f.alloc)._field_Structs));
			}
			_iter_next_1ac6a3bde:;
			++it;
			goto _iter_begin_1ac6a3bde;
		}
		_iter_end_1ac6a3bde:;
	};
}



inline void _1a920b470_eliminateScopePackage(jule::Ptr<_1a7b62081_Package>* _25431_pkg) {
	_1a920b272_eliminateFunctionsScopePackage(_25431_pkg);
}



inline void _1a920b6a1_EliminateScopes(jule::Ptr<_1a85e5c78_IR>* _25925_ir) {
	jule::I32 _2606_i = ((*((*(_25925_ir))))._field_Used.len() - 1LL);;
	for (; (_2606_i >= 0LL); (_2606_i)--) {
		{
			jule::Ptr<_1a7b5e80e_ImportInfo> _2627_u = (*((*(_25925_ir))))._field_Used[_2606_i];;
			if ((!((*(_2627_u))._field_Binded))) {
				_1a920b470_eliminateScopePackage(&((*_2627_u.alloc)._field_Package));
			};
		}
	_iter_next_1ac6a5581:;
	}
	_iter_end_1ac6a5581:;;
	_1a920b470_eliminateScopePackage(&((*((*(_25925_ir))))._field_Main));
}



inline void _1a69a7603_possibleNilRemove(jule::Ptr<_1a69a6624_nils>* _7527_n, jule::Any _7537_m) {
	if (((*(_7527_n)) != nullptr)) {
		_1a69a6e0a_removeVar((*(_7527_n)).ptr(), _1a69a80c6_getNilVar(_7537_m));
	};
}



inline jule::Bool _1a69a79bb_isGuaranteedNonNilExpr(jule::Ptr<_1a69a6624_nils>* _8132_n, jule::Any _8142_m) {
	{
		auto &_match_expr{ _8142_m };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ad7317c6:;
			{
				return true;;
			}
		}
		_match_end_1ad731760:;
	};
	return (((*(_8132_n)) != nullptr) && _1a69a724b_isSafe((*(_8132_n)).ptr(), _1a69a80c6_getNilVar(_8142_m)));;
}



inline jule::Bool _1a69a7c85_isNilValidType(jule::Ptr<_1a7c3255d_Type> _8923_t) {
	return (_1a7c35907_Sptr(_8923_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1a69a80c6_getNilVar(jule::Any _9114_m) {
	if ((!(_1a912825a_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9114_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad73318a:;
			{
				jule::Ptr<_1a7ba4eb4_Var> _1003_v = _9114_m.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9114_m.unsafe_cast_ptr<_1a7ba4eb4_Var>());;
				};
				return _1a69a80c6_getNilVar((*((*((*(_1003_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ad7332ab:;
			{
				return static_cast<jule::Uintptr>((*(_9114_m.unsafe_cast_ptr<_1a7a6842c_StructSubIdentExpr>()))._field_Field);;
			}
		}
		_match_end_1ad733124:;
	};
	return 0LLU;;
}



inline jule::Bool _1a9114d07_isConstantValidConditionalCase(jule::Ptr<_1a7b2c612_If>* _100736_i) {
	{
		auto &_match_expr{ (*((*(_100736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ad7026a9:;
			{
				jule::Ptr<_1a79ea9a8_Const> _10103_c = (*((*(_100736_i))))._field_Expr.unsafe_cast_ptr<_1a79ea9a8_Const>();;
				return (_1a7a5b541_IsBool(_10103_c.ptr()) && _1a7a58e45_ReadBool(_10103_c));;
			}
		}
		_match_end_1ad70506e:;
	};
	return false;;
}



inline jule::Bool _1a9115115_isUnreachableExpr(jule::Any* _101623_expr) {
	{
		auto &_match_expr{ (*(_101623_expr)) };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ad705bc9:;
			{
				jule::Ptr<_1a79ea9a8_Const> _10193_c = (*(_101623_expr)).cast_ptr<_1a79ea9a8_Const>(&__jule_any_type15);;
				return (_1a7a5b541_IsBool(_10193_c.ptr()) && (!(_1a7a58e45_ReadBool(_10193_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad7054e2:;
			{
				jule::Ptr<_1a7a638ab_BinaryExpr> _10223_m = (*(_101623_expr)).cast_ptr<_1a7a638ab_BinaryExpr>(&__jule_any_type113);;
				if (((*((*(_10223_m))._field_Op))._field_Id == static_cast<jule::U32>(54LLU))) {
					return (_1a9115115_isUnreachableExpr(&((*((*_10223_m.alloc)._field_Left))._field_Model)) || _1a9115115_isUnreachableExpr(&((*((*_10223_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1ad705b63:;
	};
	return false;;
}



inline jule::Bool _1a91153ce_isConstantValidMatchCase(jule::Ptr<_1a7b32529_Case>* _103130_case) {
	{
		auto expr = &((*((*(_103130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6b9881:;
		if (it != expr_end) {
			jule::Ptr<_1a7bed89d_Data> *_10329_expr = it;
			{
				if (((_1a7bee2d8_IsConst((*(_10329_expr)).ptr()) && _1a7a5b541_IsBool((*(*(_10329_expr)).alloc)._field_Constant.ptr())) && _1a7a58e45_ReadBool((*((*(_10329_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1ac6b9881:;
			++it;
			goto _iter_begin_1ac6b9881;
		}
		_iter_end_1ac6b9881:;
	};
	return false;;
}



inline jule::Bool _1a9115720_isUnreachableConditionalCase(jule::Ptr<_1a7b2c612_If>* _104034_i) {
	return _1a9115115_isUnreachableExpr(&((*((*(_104034_i))))._field_Expr));;
}



inline jule::Bool _1a91159a6_isUnreachableMatchCase(jule::Ptr<_1a7b32529_Case>* _104428_case) {
	{
		auto expr = &((*((*(_104428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6bb872:;
		if (it != expr_end) {
			jule::Ptr<_1a7bed89d_Data> *_10459_expr = it;
			{
				if ((!(_1a9115115_isUnreachableExpr(&((*((*(_10459_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1ac6bb872:;
			++it;
			goto _iter_begin_1ac6bb872;
		}
		_iter_end_1ac6bb872:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1a911d591_checkForBitShiftOpt(jule::Ptr<_1a7a633b1_OperandExpr>* _96029_l, jule::Ptr<_1a7a633b1_OperandExpr>* _96057_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::Ptr<_1a7c3b369_Prim> _9612_lp = _1a7c35671_Prim((*((*(_96029_l))))._field_Type.ptr());;
	jule::Ptr<_1a7c3b369_Prim> _9622_rp = _1a7c35671_Prim((*((*(_96057_r))))._field_Type);;
	if (((!(_1a7aee419_IsInt(_1a7c3b6dd_Str(_9612_lp.ptr())))) || (!(_1a7aee419_IsInt(_1a7c3b6dd_Str(_9622_rp.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1a7a5997e_AsU64((*((*(_96057_r))))._field_Model.cast_ptr<_1a79ea9a8_Const>(&__jule_any_type15).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _9702_j = _1a49b3105_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _9712_z = static_cast<jule::U64>(_9702_j);;
	if ((static_cast<jule::F64>(_9712_z) != _9702_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _9712_z;
	return __jule_func_result;;
}



inline jule::Bool _1a911d959_areSameLvalueExpr(jule::Any* _97923_l, jule::Any* _97939_r) {
	{
		auto &_match_expr{ (*(_97923_l)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad94eb04:;
			{
				return ((*(_97939_r)) == (*(_97923_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ad94e87e:;
			{
				{
					auto &_match_expr{ (*(_97939_r)) };
					
					if (_match_expr.type == &__jule_any_type99) {
						_case_begin_1ad9508a2:;
						{
							goto _match_end_1ad950264;
						}
					}
					else {
						_case_begin_1ad9502ca:;
						{
							return false;;
						}
					}
					_match_end_1ad950264:;
				};
				jule::Ptr<_1a7a6842c_StructSubIdentExpr> _9923_lsi = (*(_97923_l)).cast_ptr<_1a7a6842c_StructSubIdentExpr>(&__jule_any_type99);;
				jule::Ptr<_1a7a6842c_StructSubIdentExpr> _9933_rsi = (*(_97939_r)).cast_ptr<_1a7a6842c_StructSubIdentExpr>(&__jule_any_type99);;
				if (((*(_9923_lsi))._field_Field != (*(_9933_rsi))._field_Field)) {
					return false;;
				};
				return _1a911d959_areSameLvalueExpr(&((*((*(_9923_lsi))._field_Expr))._field_Model), &((*(*(_9933_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ad94eb7b:;
			{
				{
					auto &_match_expr{ (*(_97939_r)) };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1ad9503eb:;
						{
							jule::Ptr<_1a7a63c85_UnaryExpr> _10054_ul = (*(_97923_l)).cast_ptr<_1a7a63c85_UnaryExpr>(&__jule_any_type112);;
							jule::Ptr<_1a7a63c85_UnaryExpr> _10064_ur = (*(_97939_r)).cast_ptr<_1a7a63c85_UnaryExpr>(&__jule_any_type112);;
							if ((((*((*(_10054_ul))._field_Op))._field_Id != (*(*(_10064_ur))._field_Op.alloc)._field_Id) || ((*((*(_10054_ul))._field_Op))._field_Kind != (*(*(_10064_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1a911d959_areSameLvalueExpr(&((*((*(_10054_ul))._field_Expr))._field_Model), &((*(*(_10064_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1ad950385:;
				};
			}
		}
		_match_end_1ad94ea8d:;
	};
	return false;;
}



inline void _1a9120a16_possibleDynamicRemove(jule::Ptr<_1a911e97c_dynamic>* _7631_d, jule::Any _7644_m) {
	if (((*(_7631_d)) != nullptr)) {
		_1a9120263_removeVar((*(_7631_d)).ptr(), _1a9121594_getDynamicVar(_7644_m));
	};
}



inline jule::Bool _1a9120d24_isDynamicValidType(jule::Ptr<_1a7c3255d_Type> _8227_t) {
	return _1a85eb520_IsAny(&(_8227_t));;
}



inline jule::Ptr<_1a7c3255d_Type> _1a9121253_isTypeGuaranteedDynamicData(jule::Ptr<_1a911e97c_dynamic>* _8437_dy, jule::Ptr<_1a7c3255d_Type> _8455_t, jule::Any _8475_m) {
	if (_1a7c336d5_IsNil(_8455_t.ptr())) {
		return nullptr;;
	};
	jule::Bool _882_isAny = _1a85eb520_IsAny(&(_8455_t));;
	if (((!(_882_isAny)) && (_1a7c37211_Trait(_8455_t.ptr()) == nullptr))) {
		return _8455_t;;
	};
	if ((!(_882_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8475_m };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ada02d50:;
			{
				jule::Ptr<_1a7a64ed9_CastingExpr> _977_cem = _8475_m.unsafe_cast_ptr<_1a7a64ed9_CastingExpr>();;
				return _1a9121253_isTypeGuaranteedDynamicData(_8437_dy, (*(_977_cem))._field_ExprType, (*((*_977_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1ada02cd9:;
	};
	jule::Uintptr _1002_var = _1a9121594_getDynamicVar(_8475_m);;
	if ((_1002_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8437_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada04725:;
		if (it != expr_end) {
			_1a911e63b_dynamicVar _10414_v = *it;
			{
				if ((_10414_v._field_var == _1002_var)) {
					return _10414_v._field_kind;;
				};
			}
			_iter_next_1ada04725:;
			++it;
			goto _iter_begin_1ada04725;
		}
		_iter_end_1ada04725:;
	};
	return nullptr;;
}



inline jule::Uintptr _1a9121594_getDynamicVar(jule::Any _11218_m) {
	if ((!(_1a9129c40_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11218_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ada04d63:;
			{
				jule::Ptr<_1a7ba4eb4_Var> _1183_v = _11218_m.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
				if ((!((*(_1183_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11218_m.unsafe_cast_ptr<_1a7ba4eb4_Var>());;
				};
				return _1a9121594_getDynamicVar((*((*((*(_1183_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ada05c54:;
			{
				return static_cast<jule::Uintptr>((*(_11218_m.unsafe_cast_ptr<_1a7a6842c_StructSubIdentExpr>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ada04dc9:;
			{
				jule::Ptr<_1a7a63c85_UnaryExpr> _1293_uem = _11218_m.unsafe_cast_ptr<_1a7a63c85_UnaryExpr>();;
				if (((*((*(_1293_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1a9121594_getDynamicVar((*((*_1293_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1ada05baa:;
	};
	return 0LLU;;
}



inline void _1ad7732eb__removeDeads(jule::Ptr<_1a9124861_boundary>* _2340_alive, jule::Ptr<_1a9124861_boundary>* _2366_other, jule::Uintptr _2391_invalid) {
	_julec_label_1ad773d13:;
	{
		auto expr = &((*((*(_2340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad774cc0:;
		if (it != expr_end) {
			_1a9124520_boundaryVar _259_v = *it;
			{
				if ((_259_v._field_var == _2391_invalid)) {
					goto _iter_next_1ad774cc0;
				};
				{
					auto expr = &((*((*(_2366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad775b39:;
					if (it != expr_end) {
						_1a9124520_boundaryVar *_2910_ov = it;
						{
							if ((_259_v._field_var == (*(_2910_ov))._field_var)) {
								goto _iter_next_1ad774cc0;
							};
						}
						_iter_next_1ad775b39:;
						++it;
						goto _iter_begin_1ad775b39;
					}
					_iter_end_1ad775b39:;
				};
				_1a9125147_removeVar((*(_2340_alive)).ptr(), _259_v._field_var);
			}
			_iter_next_1ad774cc0:;
			++it;
			goto _iter_begin_1ad774cc0;
		}
		_iter_end_1ad774cc0:;
	};
}

inline void _1ad7751ee__removeDeads(jule::Ptr<_1a69a6624_nils>* _2340_alive, jule::Ptr<_1a69a6624_nils>* _2366_other, jule::Uintptr _2391_invalid) {
	_julec_label_1ad777289:;
	{
		auto expr = &((*((*(_2340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad778202:;
		if (it != expr_end) {
			_1a69a62d3_nilVar _259_v = *it;
			{
				if ((_259_v._field_var == _2391_invalid)) {
					goto _iter_next_1ad778202;
				};
				{
					auto expr = &((*((*(_2366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad77906b:;
					if (it != expr_end) {
						_1a69a62d3_nilVar *_2910_ov = it;
						{
							if ((_259_v._field_var == (*(_2910_ov))._field_var)) {
								goto _iter_next_1ad778202;
							};
						}
						_iter_next_1ad77906b:;
						++it;
						goto _iter_begin_1ad77906b;
					}
					_iter_end_1ad77906b:;
				};
				_1a69a6e0a_removeVar((*(_2340_alive)).ptr(), _259_v._field_var);
			}
			_iter_next_1ad778202:;
			++it;
			goto _iter_begin_1ad778202;
		}
		_iter_end_1ad778202:;
	};
}

inline void _1ad778686__removeDeads(jule::Ptr<_1a911e97c_dynamic>* _2340_alive, jule::Ptr<_1a911e97c_dynamic>* _2366_other, jule::Uintptr _2391_invalid) {
	_julec_label_1adb4e6b6:;
	{
		auto expr = &((*((*(_2340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb519e8:;
		if (it != expr_end) {
			_1a911e63b_dynamicVar _259_v = *it;
			{
				if ((_259_v._field_var == _2391_invalid)) {
					goto _iter_next_1adb519e8;
				};
				{
					auto expr = &((*((*(_2366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acbb4034:;
					if (it != expr_end) {
						_1a911e63b_dynamicVar *_2910_ov = it;
						{
							if ((_259_v._field_var == (*(_2910_ov))._field_var)) {
								goto _iter_next_1adb519e8;
							};
						}
						_iter_next_1acbb4034:;
						++it;
						goto _iter_begin_1acbb4034;
					}
					_iter_end_1acbb4034:;
				};
				_1a9120263_removeVar((*(_2340_alive)).ptr(), _259_v._field_var);
			}
			_iter_next_1adb519e8:;
			++it;
			goto _iter_begin_1adb519e8;
		}
		_iter_end_1adb519e8:;
	};
}



inline jule::Bool _1a91258c8_isValidBoundaryInfo(jule::Any _8524_m) {
	return _1a9126115_fitsSize(_8524_m, _8524_m);;
}



inline jule::I32 _1a9125c91_fitsMaxSize(jule::Slice<jule::Any> _9016_max, jule::Any _9035_expr) {
	{
		auto expr = &(_9016_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbbabd9:;
		if (it != expr_end) {
			jule::I32 _916_i = it - expr->begin();
			jule::Any *_919_m = it;
			{
				if (_1a9126115_fitsSize((*(_919_m)), _9035_expr)) {
					return _916_i;;
				};
			}
			_iter_next_1acbbabd9:;
			++it;
			_916_i++;
			goto _iter_begin_1acbbabd9;
		}
		_iter_end_1acbbabd9:;
	};
	return -1LL;;
}



inline jule::Bool _1a9126115_fitsSize(jule::Any _9913_e1, jule::Any _9929_e2) {
	if ((_1a7cb51b2_TypeData(&(_9913_e1)) != _1a7cb51b2_TypeData(&(_9929_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9913_e1 };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1acbbc6be:;
			{
				jule::Ptr<_1a79ea9a8_Const> _1053_exprConst = _9929_e2.cast_ptr<_1a79ea9a8_Const>(&__jule_any_type15);;
				return ((_1a7a59c15_AsF64(_1053_exprConst.ptr()) >= 0LL) && _1a7a5d91c_GtEq(_9913_e1.unsafe_cast_ptr<_1a79ea9a8_Const>().ptr(), (*_1053_exprConst.alloc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1acbbc735:;
			{
				return (_9929_e2 == _9913_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1acbbc79b:;
			{
				jule::Ptr<_1a7a6842c_StructSubIdentExpr> _1103_ssi1 = _9913_e1.unsafe_cast_ptr<_1a7a6842c_StructSubIdentExpr>();;
				jule::Ptr<_1a7a6842c_StructSubIdentExpr> _1113_ssi2 = _9929_e2.cast_ptr<_1a7a6842c_StructSubIdentExpr>(&__jule_any_type99);;
				return (_1a7cb6834_EqualModels((*((*(_1103_ssi1))._field_Expr))._field_Model, (*(*(_1113_ssi2))._field_Expr.alloc)._field_Model) && ((*_1103_ssi1.alloc)._field_Field == (*(_1113_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1acbbc812:;
			{
				jule::Ptr<_1a7a63c85_UnaryExpr> _1143_uem1 = _9913_e1.unsafe_cast_ptr<_1a7a63c85_UnaryExpr>();;
				jule::Ptr<_1a7a63c85_UnaryExpr> _1153_uem2 = _9929_e2.cast_ptr<_1a7a63c85_UnaryExpr>(&__jule_any_type112);;
				if ((((*((*(_1143_uem1))._field_Op))._field_Id != static_cast<jule::U32>(62LLU)) || ((*((*(_1143_uem1))._field_Op))._field_Id != (*(*(_1153_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1a9126115_fitsSize((*((*(_1143_uem1))._field_Expr))._field_Model, (*(*(_1153_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1acbbc317:;
			{
				return false;;
			}
		}
		_match_end_1acbbc1d5:;
	};
}



inline void _1a9126445_possibleBoundaryRemove(jule::Ptr<_1a9124861_boundary>* _12532_b, jule::Any _12546_model) {
	{
		auto expr = &((*((*(_12532_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbbe44b:;
		if (it != expr_end) {
			_1a9124520_boundaryVar _12714_v = *it;
			{
				{
					auto expr = &(_12714_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acbc45a5:;
					if (it != expr_end) {
						jule::I32 _1287_i = it - expr->begin();
						jule::Any _12810_max = *it;
						{
							if (_1a7cb6834_EqualModels(_12810_max, _12546_model)) {
								_12714_v._field_maxSize=jule::append(_12714_v._field_maxSize.slice(0LL, _1287_i),_12714_v._field_maxSize.slice((_1287_i + 1LL)));
								goto _iter_end_1acbc45a5;
							};
						}
						_iter_next_1acbc45a5:;
						++it;
						_1287_i++;
						goto _iter_begin_1acbc45a5;
					}
					_iter_end_1acbc45a5:;
				};
			}
			_iter_next_1acbbe44b:;
			++it;
			goto _iter_begin_1acbbe44b;
		}
		_iter_end_1acbbe44b:;
	};
}



inline jule::Bool _1a912670e_isBoundaryRiskyType(jule::Ptr<_1a7c3255d_Type> _13728_t) {
	return (_1a7c36441_Arr(_13728_t.ptr()) == nullptr);;
}



inline jule::Bool _1a91269c8_isBoundaryValidType(jule::Ptr<_1a7c3255d_Type> _14228_t) {
	return ((_1a7c366c7_Slc(_14228_t.ptr()) != nullptr) || (_1a7c36441_Arr(_14228_t.ptr()) != nullptr));;
}



inline jule::Uintptr _1a9126c92_getBoundaryVar(jule::Any _14419_m) {
	if ((!(_1a912825a_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14419_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1acbc6c4a:;
			{
				jule::Ptr<_1a7ba4eb4_Var> _1503_v = _14419_m.unsafe_cast_ptr<_1a7ba4eb4_Var>();;
				if ((!((*(_1503_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14419_m.unsafe_cast_ptr<_1a7ba4eb4_Var>());;
				};
				return _1a9126c92_getBoundaryVar((*((*((*(_1503_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1acbc6cd3:;
			{
				return static_cast<jule::Uintptr>((*(_14419_m.unsafe_cast_ptr<_1a7a6842c_StructSubIdentExpr>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1acbc6d6b:;
			{
				jule::Ptr<_1a7a63c85_UnaryExpr> _1613_uem = _14419_m.unsafe_cast_ptr<_1a7a63c85_UnaryExpr>();;
				if (((*((*(_1613_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1a9126c92_getBoundaryVar((*((*_1613_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1acbc6bd4:;
	};
	return 0LLU;;
}



inline void _1a912ab0e_PushOptLevel(jule::I32 _4117_level) {
	jule::Bool _422_l1 = (_4117_level >= static_cast<jule::I32>(1LL));;
	jule::Bool _432_l2 = (_4117_level >= static_cast<jule::I32>(2LL));;
	_1a9127600_Copy=_422_l1;
	_1a91278ec_Deadcode=_422_l1;
	_1a9127ba5_Append=_422_l1;
	_1a9127ea2_Math=_422_l1;
	_1a912825a_Access=_422_l1;
	_1a9128513_Inline=_422_l1;
	_1a91287bb_Ptr=_422_l1;
	_1a9128b84_Cond=_422_l1;
	_1a9128dc6_Str=_422_l1;
	_1a912916d_Slice=_422_l1;
	_1a9129426_Assign=_422_l1;
	_1a91296ce_Exceptional=_422_l1;
	_1a9129987_Iter=_422_l1;
	_1a9129c40_Dynamic=_422_l1;
	_1a9129ee8_Array=_422_l1;
	_1a912a4d2_Len=_422_l1;
	_1a912a724_StdStrings=_432_l2;
	_1a912a933_StdMathCmplx=_432_l2;
}



inline void _1a9210056_detectEnabled(void) {
	_1a920cae2_exprEnabled=((((((((_1a912a724_StdStrings || _1a91287bb_Ptr) || _1a9127ea2_Math) || _1a912825a_Access) || _1a9128b84_Cond) || _1a9129ee8_Array) || _1a9128dc6_Str) || _1a9129c40_Dynamic) || _1a912a4d2_Len);
	_1a920cd01_scopeEnabled=(((((((((_1a9128b84_Cond || _1a9127ba5_Append) || _1a9127600_Copy) || _1a9128dc6_Str) || _1a912916d_Slice) || _1a9129426_Assign) || _1a91296ce_Exceptional) || _1a9129987_Iter) || _1a9129c40_Dynamic) || _1a912a933_StdMathCmplx);
}



inline jule::U64 _1aa88c0d8_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1a9219eea_isCopyOptimizable(jule::Ptr<_1a7bed89d_Data>* _115523_expr) {
	if ((!((*((*(_115523_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_115523_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1baa36e87:;
			{
				return false;;
			}
		}
		_match_end_1baa36e21:;
	};
	return true;;
}



inline jule::Bool _1a921a3b3_isIterCopyOptimizable(jule::Ptr<_1a7bed89d_Data>* _116627_expr, jule::Ptr<_1a7ba4eb4_Var>* _116647_v) {
	if (((!((*((*(_116627_expr))))._field_Lvalue)) && (!(_1a7c348a1_Mutable((*((*(_116627_expr))))._field_Type.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_116647_v))))._field_Mutable)) && (!((*((*(_116627_expr))))._field_Mutable)));;
}



inline jule::Bool _1a921a7e2_captureVarHandling(jule::Ptr<_1aa897544_ObjectCoder>* _117328_oc, jule::Ptr<_1a7a666c2_AnonFnExpr>* _117351_m, jule::Ptr<_1a7ba4eb4_Var>* _117378_v) {
	{
		auto expr = &((*((*(_117351_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa390dd:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> _11749_cv = *it;
			{
				if ((_11749_cv == (*(_117378_v)))) {
					_1aa897c5e_write((*(_117328_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1a9235bb4_var(&((*((*(_117328_oc))))._field_Buf), (*(_117378_v)));
					return true;;
				};
			}
			_iter_next_1baa390dd:;
			++it;
			goto _iter_begin_1baa390dd;
		}
		_iter_end_1baa390dd:;
	};
	return false;;
}



inline jule::Str _1a922d173_decomposeCommonEsq(jule::U8 _193223_b) {
	{
		auto &_match_expr{ _193223_b };
		
		if (_match_expr == '\\') {
			_case_begin_1bab4d5ba:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bab4d345:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bab4d3ab:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1bab4d433:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1bab4d4aa:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1bab4d015:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1bab4d08c:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1bab4d114:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1bab4d18b:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1bab4d642:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1bab4a93b:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bab4cd8e:;
	};
}



inline jule::Str _1a922d481_sbtoa(jule::U8 _195910_b) {
	if ((_195910_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_195910_b < 128LLU)) {
		jule::Str _19643_seq = _1a922d173_decomposeCommonEsq(_195910_b);;
		if (!(_19643_seq).empty()) {
			return _19643_seq;;
		};
		if (((32LL <= _195910_b) && (_195910_b <= 126LLU))) {
			return __jule_strFromByte(_195910_b);;
		};
	};
	jule::Str _19722_seq = _1a4a03574_FmtUint(static_cast<jule::U64>(_195910_b), 8LL);;
	if ((_19722_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _19722_seq);;
	};
	return (jule::Str::lit("\\", 1) + _19722_seq);;
}



inline void _1a922d76c_cstrBytes(_1bc0a106b_Builder* _197919_s, jule::Str _197940_ctx) {
	{
		auto expr = &(_197940_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab53229:;
		if (it != expr_end) {
			jule::U8 *_19809_b = it;
			{
				({
					auto except = _1bc0a204a_WriteStr(_197919_s, _1a922d481_sbtoa((*(_19809_b))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1981:3"));
					(except.result);
				});
			}
			_iter_next_1bab53229:;
			++it;
			goto _iter_begin_1bab53229;
		}
		_iter_end_1bab53229:;
	};
}



inline void _1a922da9c_cstrLit(_1bc0a106b_Builder* _198517_s, jule::Str _198538_ctx) {
	({
		auto except = _1bc0a2303_WriteByte(_198517_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1986:2"));
	});
	_1a922d76c_cstrBytes(_198517_s, _198538_ctx);
	({
		auto except = _1bc0a2303_WriteByte(_198517_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1988:2"));
	});
}



inline void _1a922de43_ftoa(_1bc0a106b_Builder* _199114_s, jule::F64 _199135_f, jule::I32 _199143_bitsize) {
	if ((_199143_bitsize != 32LL)) {
		if ((_199135_f == static_cast<jule::F64>(static_cast<jule::I64>(_199135_f)))) {
			_1a922e22e_itoa(_199114_s, static_cast<jule::I64>(_199135_f));
			return;;
		};
		if ((_199135_f == static_cast<jule::F64>(static_cast<jule::U64>(_199135_f)))) {
			_1a922e51a_utoa(_199114_s, static_cast<jule::U64>(_199135_f));
			return;;
		};
	};
	jule::Str _20022_m = _1a49dc173_FmtFloat(_199135_f, 'f', -1LL, _199143_bitsize);;
	({
		auto except = _1bc0a204a_WriteStr(_199114_s, _20022_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2003:2"));
		(except.result);
	});
	if ((!(_1bd42ee87_Contains(_20022_m, jule::Str::lit(".", 1))))) {
		({
			auto except = _1bc0a204a_WriteStr(_199114_s, jule::Str::lit(".0", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2005:3"));
			(except.result);
		});
	};
}



inline void _1a922e22e_itoa(_1bc0a106b_Builder* _200914_s, jule::I64 _200935_x) {
	{
		
		if ((_200935_x == jule::MAX_I64)) {
			_case_begin_1bab57607:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_200914_s, jule::Str::lit("jule::MAX_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2012:3"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_200935_x == jule::MIN_I64)) {
			_case_begin_1bab576a1:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_200914_s, jule::Str::lit("jule::MIN_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2015:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1bab574d6:;
	};
	({
		auto except = _1bc0a204a_WriteStr(_200914_s, _1a4a0393c_FmtInt(_200935_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2019:2"));
		(except.result);
	});
	if (_1bc0b4e2b_Is64Bit(jule::Str::lit("i386", 4))) {
		({
			auto except = _1bc0a2303_WriteByte(_200914_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2021:3"));
		});
	};
	({
		auto except = _1bc0a2303_WriteByte(_200914_s, 'L');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2023:2"));
	});
}



inline void _1a922e51a_utoa(_1bc0a106b_Builder* _202614_s, jule::U64 _202635_x) {
	{
		
		if ((_202635_x == jule::MAX_U64)) {
			_case_begin_1bab5974c:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_202614_s, jule::Str::lit("jule::MAX_U64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2029:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1bab59609:;
	};
	({
		auto except = _1bc0a204a_WriteStr(_202614_s, _1a4a03574_FmtUint(_202635_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2033:2"));
		(except.result);
	});
	if (_1bc0b4e2b_Is64Bit(jule::Str::lit("i386", 4))) {
		({
			auto except = _1bc0a2303_WriteByte(_202614_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2035:3"));
		});
	};
	({
		auto except = _1bc0a204a_WriteStr(_202614_s, jule::Str::lit("LU", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2037:2"));
		(except.result);
	});
}



inline void _1a922eb69_structBinary(_1bc0a106b_Builder* _204022_buf, jule::Ptr<_1a799a97a_StructIns>* _204050_s, jule::Str* _204072_l, jule::Str* _20413_r, jule::U32 _204111_op, jule::Str _204126_kind) {
	if (((_204111_op != static_cast<jule::U32>(50LLU)) && (_204111_op != static_cast<jule::U32>(51LLU)))) {
		__jule_panic_s(jule::Str::lit("cxx: unsupported token occurred for structure binary, this is an implementation mistake", 87) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2043:3"));;
	};
	static__1a92355dc_structureIns(_204022_buf, _204050_s);
	({
		auto except = _1bc0a204a_WriteStr(_204022_buf, jule::Str::lit("_eq", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2046:2"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_204022_buf, jule::Str::lit("(&", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2047:2"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_204022_buf, (*(_204072_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2048:2"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_204022_buf, jule::Str::lit(", ", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2049:2"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_204022_buf, (*(_20413_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2050:2"));
		(except.result);
	});
	({
		auto except = _1bc0a2303_WriteByte(_204022_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2051:2"));
	});
}



inline jule::Slice<jule::U8> _1aa8a5343_concatAllParts(jule::Slice<jule::Ptr<_1a79633b0_Token>> _137219_parts) {
	jule::I32 _13736_n = 0LL;;
	{
		auto expr = &(_137219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc2d4a9:;
		if (it != expr_end) {
			jule::Ptr<_1a79633b0_Token> *_13749_part = it;
			{
				_13736_n+=(*(*(_13749_part)).alloc)._field_Kind.len();
			}
			_iter_next_1adc2d4a9:;
			++it;
			goto _iter_begin_1adc2d4a9;
		}
		_iter_end_1adc2d4a9:;
	};
	if ((_13736_n == 0LL)) {
		return nullptr;;
	};
	_1bc0a106b_Builder _13806_s = static__1bc0a18b8_New(_13736_n);;
	{
		auto expr = &(_137219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc2e60e:;
		if (it != expr_end) {
			jule::Ptr<_1a79633b0_Token> *_13819_p = it;
			{
				({
					auto except = _1bc0a204a_WriteStr(&_13806_s, (*((*(_13819_p))))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1382:3"));
					(except.result);
				});
			}
			_iter_next_1adc2e60e:;
			++it;
			goto _iter_begin_1adc2e60e;
		}
		_iter_end_1adc2e60e:;
	};
	return _1bc0a337b_Buf(&_13806_s);;
}



inline jule::Bool _1aa8b4231_ableToInit(jule::Ptr<_1a7c3255d_Type>* _45920_t) {
	return (!(_1a7c3344e_Binded((*(_45920_t)).ptr())));;
}



inline jule::Bool _1aa8b450b_shouldInitialized(jule::Ptr<_1a7c3255d_Type>* _46627_t) {
	if ((!(_1aa8b4231_ableToInit(_46627_t)))) {
		return false;;
	};
	jule::Ptr<_1a7c3b369_Prim> _4702_prim = _1a7c35671_Prim((*(_46627_t)).ptr());;
	if ((_4702_prim != nullptr)) {
		return ((!(_1a7c3eaba_IsAny(_4702_prim))) && (!(_1a7c3e834_IsStr(_4702_prim))));;
	};
	{
		
		if ((_1a7c35907_Sptr((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1ad7a5b36:;
			{
				return false;;
			}
		}
		else if ((_1a7c37497_Map((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1ad7a5b9c:;
			{
				return false;;
			}
		}
		else if ((_1a7c366c7_Slc((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1ad7a5c13:;
			{
				return false;;
			}
		}
		else if ((_1a7c37211_Trait((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1ad7a5c79:;
			{
				return false;;
			}
		}
		else if ((_1a7c3695d_Fn((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1ad7a5ce0:;
			{
				return false;;
			}
		}
		else if ((_1a7c36441_Arr((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1ad7a5d56:;
			{
				jule::Ptr<_1a7c42b89_Arr> _4867_arr = _1a7c36441_Arr((*(_46627_t)).ptr());;
				return _1aa8b4231_ableToInit(&((*(_4867_arr))._field_Elem));;
			}
		}
		else if ((_1a7c36be4_Struct((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1ad7a5dbc:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bae40db8:;
			{
				return true;;
			}
		}
		_match_end_1bae39b3c:;
	};
}



inline void _1bd4478a6_printErrorMessage(jule::Str _3022_msg) {
	jule::println(_1aab19673_toStr(_3022_msg));
}



inline void _1bd447b2b_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1bd4478a6_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _416_max = _1bd4476ca_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1bd4476ca_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae526b0:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I32 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1bae526b0:;
			++it;
			goto _iter_begin_1bae526b0;
		}
		_iter_end_1bae526b0:;
	};
	_1bc0a106b_Builder _496_s = static__1bc0a18b8_New(32LL);;
	;
	{
		auto expr = &(_1bd4476ca_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae53e97:;
		if (it != expr_end) {
			jule::I32 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				({
					auto except = _1bc0a204a_WriteStr(&_496_s, (*(_519_part))[0LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:52:3"));
					(except.result);
				});
				({
					auto except = _1bc0a204a_WriteStr(&_496_s, _1bd42a27e_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:53:3"));
					(except.result);
				});
				({
					auto except = _1bc0a204a_WriteStr(&_496_s, (*(_519_part))[1LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:54:3"));
					(except.result);
				});
				if (((_516_i + 1LL) < 5LL)) {
					({
						auto except = _1bc0a2303_WriteByte(&_496_s, '\n');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:56:4"));
					});
				};
			}
			_iter_next_1bae53e97:;
			++it;
			_516_i++;
			goto _iter_begin_1bae53e97;
		}
		_iter_end_1bae53e97:;
	};
	jule::println(_1bae546c3_toStr(_496_s));
}



inline void _1bd447d5c_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1bd4478a6_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::println(_1aab19673_toStr(jule::Str::lit("jule0.1.1 @master", 17)));
}



inline void _1bd44806b_toolDistos(void) {
	jule::print(_1aab19673_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::print(_1bae67a5a_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::print(_1aab19673_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1bae67a5a_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::print(_1aab19673_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1bae67a5a_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::println(_1aab19673_toStr(jule::Str()));
}



inline void _1bd4481d1_toolDistarch(void) {
	jule::print(_1aab19673_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::print(_1bae6b83e_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::print(_1aab19673_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1bae6b83e_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::print(_1aab19673_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1bae6b83e_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::println(_1aab19673_toStr(jule::Str()));
}



inline void _1bd4483ce_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::println(_1aab19673_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1bd4478a6_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1bae58c6b:;
			{
				_1bd44806b_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1bae58a90:;
			{
				_1bd4481d1_toolDistarch();
			}
		}
		else {
			_case_begin_1bae58892:;
			{
				_1bd4478a6_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1bae5896e:;
	};
}



inline void _1bd448610_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1bd4478a6_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::println(_1aab19673_toStr(jule::Str::lit("julec version: jule0.1.1 @master", 32)));
	jule::println(_1aab19673_toStr(jule::Str::lit("architecture: i386", 18)));
	jule::println(_1aab19673_toStr(jule::Str::lit("operating system: windows", 25)));
	jule::println(_1aab19673_toStr((jule::Str::lit("default compiler: ", 18) + _1bd443c37_Compiler)));
	jule::println(_1aab19673_toStr((jule::Str::lit("default C++ standard: ", 22) + _1bd445343_CppStd)));
}



inline void _1bd448951_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::println(_1aab19673_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1bd4478a6_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1bae6e446:;
			{
				({
					auto except = static__1bc28962d_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1bd4478a6_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1bae6d852:;
			{
				_1bd4478a6_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1bae6dea1:;
	};
}



inline jule::Bool _1bd448b93_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1bae7037b:;
			{
				_1bd447b2b_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1bae703e2:;
			{
				_1bd447d5c_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1bae70458:;
			{
				_1bd4483ce_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1bae704be:;
			{
				_1bd448610_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1bae70535:;
			{
				_1bd448951_mod(_15320_args);
			}
		}
		else {
			_case_begin_1bae6e9eb:;
			{
				return false;;
			}
		}
		_match_end_1bae6ebd8:;
	};
	return true;;
}



inline void _1bd448d3b_showInfo(void) {
	jule::println(_1aab19673_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void _1bd448eb2_main(void) {
	jule::Slice<jule::Str> _1896_args = _1bc29b376_Args();;
	if ((_1896_args.len() < 2LL)) {
		_1bd448d3b_showInfo();
		return;;
	};
	if (_1bd448b93_processCommand(&(_1896_args))) {
		return;;
	};
	_1aa92d355_compileCommand(&(_1896_args));
}



inline void _1bd44980e_enableVtp(void) {
	jule::Uintptr _192_hOut = _1d778d94c_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));;
	if ((_192_hOut == 4294967295LLU)) {
		return;;
	};
	jule::I32 _246_dwMode = 0LL;;
	if ((!(_1d7790ec1_GetConsoleMode(_192_hOut, &(_246_dwMode))))) {
		return;;
	};
	_246_dwMode|=4LL;
	_1d77915cb_SetConsoleMode(_192_hOut, _246_dwMode);
}



inline void _1bd4499c9_init(void) {
	_1bd44980e_enableVtp();
}



inline void _1aa92a275_init(void) {
	_1bd443c37_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_1bc288220_File> _1aa92a53e_openOutput(jule::Str* _3016_path) {
	jule::Str _312_dir = _1bd4374ab_Dir((*(_3016_path)));;
	({
		auto except = static__1bd43dbbb_Of(_312_dir);
		if (!except.ok()) {
			({
				auto except = static__1bd437e18_Create(_312_dir);
				if (!except.ok()) {
					_1a4a06225_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1bc288ebd_Create((*(_3016_path)));
		(except.ok()) ? (except.result) : ({
			_1a4a06225_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1aa92a6d7_clearObjects(void) {
	({
		auto except = static__1bc28c257_Remove(_1aa92b83c_getCompilePath());
		if (!except.ok()) {
			jule::println(_1aab19673_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__1bd438149_Remove(_1aa929a16_OutDir);
}



inline void _1aa92a9e5_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd) {
	jule::Ptr<_1bc259059_Cmd> _606_cmd = static__1bc2594aa_New(_5914_compiler);;
	(*(_606_cmd))._field_Args=_1bd42eb13_SplitAll(_5929_compilerCmd, jule::Str::lit(" ", 1));
	({
		auto except = _1bc2596a8_Spawn(_606_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type139) == _match_expr) {
					_case_begin_1bae78032:;
					{
						static__1bd46bc4e_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type139) == _match_expr) {
					_case_begin_1bae77be1:;
					{
						static__1bd46bc4e_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1bae77a15:;
					{
						static__1bd46bc4e_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1bae77b25:;
			};
			_1a4a06225_Throw(jule::Str());
		}
	});
	jule::I32 _732_status = ({
		auto except = _1bc259b3c_Wait(_606_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:73:12"));
		(except.result);
	});;
	if ((_732_status != 0LL)) {
		jule::Str _753_errorMessage = ({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("\n>>> your backend compiler (", 28)); size += part0.len(); jule::Str part1 = std::move(_1bd443c37_Compiler); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); });;
		static__1bd46bc4e_Print(jule::Str::lit("\033[31m", 5), _753_errorMessage);
		_1a4a06225_Throw(jule::Str());
	};
	_1aa92a6d7_clearObjects();
}



inline jule::Bool _1aa92acae_isCppSourceFile(jule::Str _8620_path) {
	jule::I32 _872_offset = _1bd42d34d_FindLastByte(_8620_path, '.');;
	if ((_872_offset == -1LL)) {
		return false;;
	};
	return _1bc065926_IsValidCppExt(_8620_path.slice(_872_offset));;
}



inline void _1aa92aee0_pushCompCmdClang(_1bc0a106b_Builder* _9426_cmd) {
	({
		auto except = _1bc0a204a_WriteStr(_9426_cmd, jule::Str::lit("-Wno-everything ", 16));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:96:2"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_9426_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:99:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _1bd445343_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bae7b002:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_9426_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:102:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bae7bd16:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_9426_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:104:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bae7bd7c:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_9426_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:106:3"));
					(except.result);
				});
			}
		}
		_match_end_1bae7ba6e:;
	};
	({
		auto except = _1bc0a2303_WriteByte(_9426_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:108:2"));
	});
	if (_1bd44650e_Production) {
		({
			auto except = _1bc0a204a_WriteStr(_9426_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:111:3"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(_9426_cmd, jule::Str::lit("-flto ", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:112:3"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(_9426_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:113:3"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(_9426_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:114:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1bc0a204a_WriteStr(_9426_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:116:3"));
			(except.result);
		});
	};
}



inline void _1aa92b221_pushCompCmdGcc(_1bc0a106b_Builder* _12024_cmd) {
	({
		auto except = _1bc0a204a_WriteStr(_12024_cmd, jule::Str::lit("-w ", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:122:2"));
		(except.result);
	});
	({
		auto except = _1bc0a204a_WriteStr(_12024_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:125:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _1bd445343_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bae7d3de:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_12024_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:128:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bae7ed4c:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_12024_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:130:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bae7edb3:;
			{
				({
					auto except = _1bc0a204a_WriteStr(_12024_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:132:3"));
					(except.result);
				});
			}
		}
		_match_end_1bae7eaa5:;
	};
	({
		auto except = _1bc0a2303_WriteByte(_12024_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:134:2"));
	});
	if (_1bd44650e_Production) {
		({
			auto except = _1bc0a204a_WriteStr(_12024_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:137:3"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(_12024_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:138:3"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(_12024_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:139:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1bc0a204a_WriteStr(_12024_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:141:3"));
			(except.result);
		});
	};
}



inline __jule_tuple_str__jule_tuple_str _1aa92b6a5_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1a85e5c78_IR>* _14636_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1473_compiler = &(_1bd445134_CompilerPath);;
	_1bc0a106b_Builder _1486_cmd = static__1bc0a18b8_New(64LL);;
	{
		auto &_match_expr{ _1bd443c37_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bae82aca:;
			{
				_1aa92b221_pushCompCmdGcc(&(_1486_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bae83108:;
			{
				_1aa92aee0_pushCompCmdClang(&(_1486_cmd));
			}
		}
		_match_end_1bae82ed7:;
	};
	{
		auto expr = &((*((*(_14636_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae83405:;
		if (it != expr_end) {
			jule::Ptr<_1a7b5e80e_ImportInfo> *_1589_u = it;
			{
				if (((*((*(_1589_u))))._field_Binded && _1aa92acae_isCppSourceFile((*(*(_1589_u)).alloc)._field_Path))) {
					({
						auto except = _1bc0a204a_WriteStr(&_1486_cmd, (*(*(_1589_u)).alloc)._field_Path);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:160:4"));
						(except.result);
					});
					({
						auto except = _1bc0a2303_WriteByte(&_1486_cmd, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:161:4"));
					});
				};
			}
			_iter_next_1bae83405:;
			++it;
			goto _iter_begin_1bae83405;
		}
		_iter_end_1bae83405:;
	};
	if (!(_1aa92a0bb_Out).empty()) {
		({
			auto except = _1bc0a204a_WriteStr(&_1486_cmd, jule::Str::lit("-o ", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:166:3"));
			(except.result);
		});
		({
			auto except = _1bc0a204a_WriteStr(&_1486_cmd, _1aa92a0bb_Out);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:167:3"));
			(except.result);
		});
		({
			auto except = _1bc0a2303_WriteByte(&_1486_cmd, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:168:3"));
		});
	};
	({
		auto except = _1bc0a204a_WriteStr(&_1486_cmd, _14618_sourcePath);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:170:2"));
		(except.result);
	});
	{
		auto expr = &((*((*(_14636_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae85e41:;
		if (it != expr_end) {
			jule::Str *_1739_pass = it;
			{
				({
					auto except = _1bc0a2303_WriteByte(&_1486_cmd, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:174:3"));
				});
				({
					auto except = _1bc0a204a_WriteStr(&_1486_cmd, (*(_1739_pass)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:175:3"));
					(except.result);
				});
			}
			_iter_next_1bae85e41:;
			++it;
			goto _iter_begin_1bae85e41;
		}
		_iter_end_1bae85e41:;
	};
	if ((_1bd43eded_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		({
			auto except = _1bc0a204a_WriteStr(&_1486_cmd, jule::Str::lit(" -lshell32", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:180:3"));
			(except.result);
		});
	};
	__jule_func_result.__jule_result_arg0 = (*(_1473_compiler));
	__jule_func_result.__jule_result_arg1 = _1bc0a28ca_Str(&_1486_cmd);
	return __jule_func_result;;
}



inline jule::Str _1aa92b83c_getCompilePath(void) {
	return _1bd4367b8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1aa929a16_OutDir; (*it++) = _1aa929dac_OutName; __jule_collection; }));;
}



inline void _1aa92ba6d_applyTargetIndependentOptimizations(jule::Ptr<_1a85e5c78_IR>* _19245_ir) {
	jule::Ptr<_1a920ce88_Optimizer> _1936_opt = static__1a920d450_New(_19245_ir);;
	_1a920ece2_Optimize(_1936_opt.ptr());
}



inline void _1aa92bc16_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1bd443c37_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bae88608:;
			{
				_1a4a06225_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bae882d9:;
			{
				if ((_1bd445134_CompilerPath).empty()) {
					_1bd445134_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bae88350:;
			{
				if ((_1bd445134_CompilerPath).empty()) {
					_1bd445134_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1bae87607:;
			{
				_1a4a06225_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _1bd443c37_Compiler));
			}
		}
		_match_end_1bae8822e:;
	};
}



inline void _1aa92be25_checkTargetArch(jule::Str _21420_arch) {
	if ((((_21420_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_1a4a06225_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _21420_arch));
	};
}



inline void _1aa92c156_checkTargetOs(jule::Str _22218_os) {
	if ((((_22218_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_1a4a06225_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _22218_os));
	};
}



inline void _1aa92c387_checkTargetFlag(jule::Str* _23021_target) {
	if (((*(_23021_target))).empty()) {
		_1a4a06225_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2352_parts = _1bd42eb13_SplitAll((*(_23021_target)), jule::Str::lit("-", 1));;
	if ((_2352_parts.len() != 2LL)) {
		_1a4a06225_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_23021_target))));
	};
	jule::Str _2402_os;
	jule::Str _2406_arch;
	({
		jule::Str ___jule_assign_arg = _2352_parts[0LL];
		jule::Str _1___jule_assign_arg = _2352_parts[1LL];
		_2402_os = ___jule_assign_arg;
		_2406_arch = _1___jule_assign_arg;
	});
	if ((!_2402_os.equal("native", 6))) {
		_1aa92c156_checkTargetOs(_2402_os);
		_1bd43eded_OS=_2402_os;
	};
	if ((!_2406_arch.equal("native", 6))) {
		_1aa92be25_checkTargetArch(_2406_arch);
		_1bd4401a6_Arch=_2406_arch;
	};
	_1a7ae8336_UpdateTarget();
}



inline void _1aa92c5b8_checkOptFlag(jule::Str* _25318_opt) {
	if (((*(_25318_opt))).empty()) {
		_1a4a06225_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_25318_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1bae904ab:;
			{
				goto _match_end_1bae8ed4b;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1bae90522:;
			{
				_1a912ab0e_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else if (_match_expr == jule::Str::lit("L2", 2)) {
			_case_begin_1bae90203:;
			{
				_1a912ab0e_PushOptLevel(static_cast<jule::I32>(2LL));
			}
		}
		else {
			_case_begin_1bae8eb70:;
			{
				_1a4a06225_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_25318_opt))));
			}
		}
		_match_end_1bae8ed4b:;
	};
}



inline void _1aa92c981_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1bd445343_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bae918ca:;
			{
				goto _match_end_1bae91303;
			}
		}
		else {
			_case_begin_1bae9028b:;
			{
				_1a4a06225_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _1bd445343_CppStd));
			}
		}
		_match_end_1bae91303:;
	};
}



inline jule::Slice<jule::Str> _1aa92cb4b_checkFlags(jule::Slice<jule::Str>* _28116_args) {
	jule::Str _2826_opt = jule::Str::lit("L0", 2);;
	jule::Str _2836_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1aa924d63_FlagSet> _2856_fs = static__1aa925182_New();;
	_1bae9327d_AddVar(_2856_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2826_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1bae9327d_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_2836_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1bae9327d_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1aa92a0bb_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bd4455da_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bd445893_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1bae9327d_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1bd443c37_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1bae9327d_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1bd445134_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bd44650e_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bd445e04_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bd4462bc_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1bae9327d_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1bd445343_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a9127600_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a91278ec_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a9127ba5_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a9127ea2_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a912825a_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a9128513_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a91287bb_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a9128b84_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a9128dc6_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a912916d_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a9129426_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a91296ce_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a9129987_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a9129c40_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a9129ee8_Array)))), jule::Str::lit("opt-array", 9), 0LL, jule::Str::lit("Array optimizations", 19));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a912a4d2_Len)))), jule::Str::lit("opt-len", 7), 0LL, jule::Str::lit("Len optimizations", 17));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a912a724_StdStrings)))), jule::Str::lit("opt-std-strings", 15), 0LL, jule::Str::lit("Special optimizations for the std/strings package", 49));
	_1bae9b9a1_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a912a933_StdMathCmplx)))), jule::Str::lit("opt-std-math-cmplx", 18), 0LL, jule::Str::lit("Special optimizations for the std/math/cmplx package", 52));
	jule::Slice<jule::Str> _3176_content = ({
		auto except = _1aa926051_Parse(_2856_fs, (*(_28116_args)));
		(except.ok()) ? (except.result) : ({
			_1a4a06225_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1aa92bc16_checkCompilerFlag();
	_1aa92c981_checkCppStdFlag();
	_1aa92c387_checkTargetFlag(&(_2836_target));
	_1aa92c5b8_checkOptFlag(&(_2826_opt));
	return _3176_content;;
}



inline void _1aa92cd5a_setupSemaFlags(jule::I32* _33024_flags) {
	if (_1bd4455da_Shadowing) {
		(*(_33024_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1a85e5c78_IR> _1aa92d124_buildIr(jule::Slice<jule::Str>* _33613_args) {
	jule::Slice<jule::Str> _3372_content = _1aa92cb4b_checkFlags(_33613_args);;
	jule::I32 _3396_semaFlags = static_cast<jule::I32>(0LL);;
	_1aa92cd5a_setupSemaFlags(&(_3396_semaFlags));
	if ((_3372_content.len() == 0LL)) {
		_1a4a06225_Throw(_1bc0b081c_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3372_content.len() > 1LL)) {
		_1a4a06225_Throw((jule::Str::lit("undefined content: ", 19) + _3372_content[1LL]));
	};
	jule::Str _3476_path;
	jule::Bool _34712_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bd436d18_Abs(_3372_content[0LL]);
		_3476_path = __jule_assign_result.__jule_result_arg0;
		_34712_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34712_ok))) {
		_1a4a06225_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	_1bc28a7c7_Stat _3532_inf = ({
		auto except = static__1bd43dbbb_Of(_1bd43e35e_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a4a06225_Throw(_1bc0b081c_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} _1bc28a7c7_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1bc28abd4_IsDir(&_3532_inf)))) {
		_1a4a06225_Throw(_1bc0b081c_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a85e5c78_IR> _3616_ir;
	jule::Slice<_1bc0b03aa_Log> _36110_logs;
	({
		__jule_tuple_x_1a85e5c78_IR__jule_tuple_s_1bc0b03aa_Log __jule_assign_result = static__1a85e6251_Build(_3476_path, _3396_semaFlags);
		_3616_ir = __jule_assign_result.__jule_result_arg0;
		_36110_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3616_ir == nullptr) && (_36110_logs == nullptr))) {
		_1a4a06225_Throw(_1bc0b081c_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3476_path, &__jule_any_type5); __jule_collection; })));
	};
	if ((_36110_logs != nullptr)) {
		static__1a4a05752_PrintLogs(&(_36110_logs));
		_1a4a06225_Throw(jule::Str());
	};
	return _3616_ir;;
}



inline void _1aa92d355_compileCommand(jule::Slice<jule::Str>* _37624_args) {
	((*(_37624_args))).mut_slice(1LL);;
	if ((*(_37624_args))[0LL].equal("test", 4)) {
		_1bd445b4b_Test=true;
		((*(_37624_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1a85e5c78_IR> _3826_ir = _1aa92d124_buildIr(_37624_args);;
	_1a860157a_ProgramMeta=static__1a8603b87_Collect(_3826_ir);
	if ((!(_1bd445b4b_Test))) {
		;
		(*(_1a860157a_ProgramMeta))._field_EntryPoint=_1a7b63648_FindFn((*(_3826_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);
		if (((*_1a860157a_ProgramMeta.alloc)._field_EntryPoint == nullptr)) {
			_1a4a06225_Throw(_1bc0b081c_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_1aa92ba6d_applyTargetIndependentOptimizations(&(_3826_ir));
	_1a85e72b8_Order(_3826_ir.ptr());
	jule::Str _4002_compPath = _1aa92b83c_getCompilePath();;
	jule::Str _4012_compiler;
	jule::Str _40112_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1aa92b6a5_genCompileCmd(_4002_compPath, &(_3826_ir));
		_4012_compiler = __jule_assign_result.__jule_result_arg0;
		_40112_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1aa897544_ObjectCoder> _4036_oc = static__1aa8979a6_New(&(_3826_ir), _1aa894c8e_SerializationInfo{._field_Compiler=_4012_compiler, ._field_CompilerCommand=_40112_compilerCmd});;
	if (_1bd445b4b_Test) {
		jule::Ptr<_1a92308d4_TestCoder> _4087_tc = static__1a9230d8a_New(&(_4036_oc));;
		_1a9232210_Serialize(_4087_tc);
	} else {
		_1aa8a4ead_Serialize(_4036_oc);
	};
	jule::Ptr<_1bc288220_File> _4146_file = _1aa92a53e_openOutput(&(_4002_compPath));;
	({
		auto except = _1bc28c6db_Write(_4146_file.ptr(), _1bc0a337b_Buf(&(*(_4036_oc))._field_Buf));
		if (!except.ok()) {
			_1a4a06225_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _1bc289e36_Close(_4146_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:418:2"));
	});
	if ((!(_1bd445893_Transpilation))) {
		_1aa92a9e5_compileIr(_4012_compiler, _40112_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1bd4402e9_init();
	_1a7ae84ac_init();
	_1bd4499c9_init();
	_1aa92a275_init();

}

inline jule::Bool __jule_anon1ac0238b1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a729db_ParamIns> _25721_p1, jule::Ptr<_1a7a729db_ParamIns> _25736_p2) {
	if (((*((*(_25721_p1))._field_Decl))._field_Mutable != (*(*(_25736_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1a7a6e70d_IsSelf((*(_25721_p1))._field_Decl.ptr())) {
		if ((!(_1a7a6e70d_IsSelf((*(_25736_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1a7a6e994_IsRef((*(_25721_p1))._field_Decl) != _1a7a6e994_IsRef((*(_25736_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*((*(_25721_p1))._field_Decl))._field_Reference != (*(*(_25736_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*((*(_25721_p1))._field_Decl))._field_Variadic != (*(*(_25736_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1a7c32c9a_Equal((*(_25721_p1))._field_Type, (*(_25736_p2))._field_Type);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe546c1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _6521_e, jule::Ptr<_1a7981d18_FnCallExpr>* _6536_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1abe546c1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abe546c1_ctx>();
	return _1a7b026c5__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe56508(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _7221_e, jule::Ptr<_1a7981d18_FnCallExpr>* _7236_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1abe56508_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abe56508_ctx>();
	return _1a7b02ac1__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe69560(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _17821_e, jule::Ptr<_1a7981d18_FnCallExpr>* _17836_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1abe69560_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abe69560_ctx>();
	return _1a7b058e8__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe6b353(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _18521_e, jule::Ptr<_1a7981d18_FnCallExpr>* _18536_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1abe6b353_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abe6b353_ctx>();
	return _1a7b05ce4__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe7ab26(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _28321_e, jule::Ptr<_1a7981d18_FnCallExpr>* _28336_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1abe7ab26_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abe7ab26_ctx>();
	return _1a7b08b0a__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe92d2a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _40221_e, jule::Ptr<_1a7981d18_FnCallExpr>* _40236_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1abe92d2a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abe92d2a_ctx>();
	return _1a7b0b943__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe94b1d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _40921_e, jule::Ptr<_1a7981d18_FnCallExpr>* _40936_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1abe94b1d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abe94b1d_ctx>();
	return _1a7b0c23a__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1abe96911(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _41621_e, jule::Ptr<_1a7981d18_FnCallExpr>* _41636_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1abe96911_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abe96911_ctx>();
	return _1a7b0bd3e__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac18ebc5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _97421_e, jule::Ptr<_1a7981d18_FnCallExpr>* _97436_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac18ebc5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac18ebc5_ctx>();
	return _1a7b11b9b__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1919b8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _98121_e, jule::Ptr<_1a7981d18_FnCallExpr>* _98136_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1919b8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1919b8_ctx>();
	return _1a7b12097__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1937ab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _98821_e, jule::Ptr<_1a7981d18_FnCallExpr>* _98836_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1937ab_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1937ab_ctx>();
	return _1a7b1288e__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac19559e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _99521_e, jule::Ptr<_1a7981d18_FnCallExpr>* _99536_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac19559e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac19559e_ctx>();
	return _1a7b12c8a__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac197392(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _100221_e, jule::Ptr<_1a7981d18_FnCallExpr>* _100236_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac197392_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac197392_ctx>();
	return _1a7b13186__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac199185(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _100921_e, jule::Ptr<_1a7981d18_FnCallExpr>* _100936_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac199185_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac199185_ctx>();
	return _1a7b13582__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac19ae78(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _101621_e, jule::Ptr<_1a7981d18_FnCallExpr>* _101636_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac19ae78_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac19ae78_ctx>();
	return _1a7b1397d__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac19cc6b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _102321_e, jule::Ptr<_1a7981d18_FnCallExpr>* _102336_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac19cc6b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac19cc6b_ctx>();
	return _1a7b13d79__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac19eba2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _103021_e, jule::Ptr<_1a7981d18_FnCallExpr>* _103036_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac19eba2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac19eba2_ctx>();
	return _1a7b14275__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1a1995(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _103721_e, jule::Ptr<_1a7981d18_FnCallExpr>* _103736_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1a1995_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1a1995_ctx>();
	return _1a7b1684e__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1a3788(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _104421_e, jule::Ptr<_1a7981d18_FnCallExpr>* _104436_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1a3788_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1a3788_ctx>();
	return _1a7b15760__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1a557b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _105121_e, jule::Ptr<_1a7981d18_FnCallExpr>* _105136_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1a557b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1a557b_ctx>();
	return _1a7b14671__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1a736e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _105821_e, jule::Ptr<_1a7981d18_FnCallExpr>* _105836_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1a736e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1a736e_ctx>();
	return _1a7b14a6c__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1a9162(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _106521_e, jule::Ptr<_1a7981d18_FnCallExpr>* _106536_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1a9162_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1a9162_ctx>();
	return _1a7b14e68__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1aae55(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _107221_e, jule::Ptr<_1a7981d18_FnCallExpr>* _107236_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1aae55_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1aae55_ctx>();
	return _1a7b15364__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1acc48(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _107921_e, jule::Ptr<_1a7981d18_FnCallExpr>* _107936_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1acc48_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1acc48_ctx>();
	return _1a7b15b5b__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1aea3b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _108621_e, jule::Ptr<_1a7981d18_FnCallExpr>* _108636_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1aea3b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1aea3b_ctx>();
	return _1a7b16057__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1b182e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _109321_e, jule::Ptr<_1a7981d18_FnCallExpr>* _109336_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1b182e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1b182e_ctx>();
	return _1a7b16453__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1b3622(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _110021_e, jule::Ptr<_1a7981d18_FnCallExpr>* _110036_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1b3622_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1b3622_ctx>();
	return _1a7b12493__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1da77b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _126321_e, jule::Ptr<_1a7981d18_FnCallExpr>* _126336_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1da77b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1da77b_ctx>();
	return _1a7b17bc4__Unwrap(__jule_closure_ctx.alloc->_self_, _126321_e, _126336_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1dc56e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _127021_e, jule::Ptr<_1a7981d18_FnCallExpr>* _127036_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1dc56e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1dc56e_ctx>();
	return _1a7b180c0__Type(__jule_closure_ctx.alloc->_self_, _127021_e, _127036_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1de362(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _127721_e, jule::Ptr<_1a7981d18_FnCallExpr>* _127736_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1de362_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1de362_ctx>();
	return _1a7b184bb__Lvalue(__jule_closure_ctx.alloc->_self_, _127721_e, _127736_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1e1155(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _128421_e, jule::Ptr<_1a7981d18_FnCallExpr>* _128436_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1e1155_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1e1155_ctx>();
	return _1a7b188b7__Mutable(__jule_closure_ctx.alloc->_self_, _128421_e, _128436_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1e2e48(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _129121_e, jule::Ptr<_1a7981d18_FnCallExpr>* _129136_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1e2e48_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1e2e48_ctx>();
	return _1a7b18cb3__Const(__jule_closure_ctx.alloc->_self_, _129121_e, _129136_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1e4c3b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _129821_e, jule::Ptr<_1a7981d18_FnCallExpr>* _129836_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1e4c3b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1e4c3b_ctx>();
	return _1a7b191ae__Field(__jule_closure_ctx.alloc->_self_, _129821_e, _129836_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac1e6a2e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _130521_e, jule::Ptr<_1a7981d18_FnCallExpr>* _130536_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac1e6a2e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac1e6a2e_ctx>();
	return _1a7b195aa__Method(__jule_closure_ctx.alloc->_self_, _130521_e, _130536_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac20aeb6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _143021_e, jule::Ptr<_1a7981d18_FnCallExpr>* _143036_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac20aeb6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac20aeb6_ctx>();
	return _1a7b1c35a__Path(__jule_closure_ctx.alloc->_self_, _143021_e, _143036_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac20cca9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _143721_e, jule::Ptr<_1a7981d18_FnCallExpr>* _143736_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac20cca9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac20cca9_ctx>();
	return _1a7b1c756__Name(__jule_closure_ctx.alloc->_self_, _143721_e, _143736_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac20ea9c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _144421_e, jule::Ptr<_1a7981d18_FnCallExpr>* _144436_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac20ea9c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac20ea9c_ctx>();
	return _1a7b1cb52__Dir(__jule_closure_ctx.alloc->_self_, _144421_e, _144436_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac04895d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _195021_e, jule::Ptr<_1a7981d18_FnCallExpr>* _195036_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac04895d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac04895d_ctx>();
	return _1a7b215a1__Name(__jule_closure_ctx.alloc->_self_, _195021_e, _195036_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac04a795(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _195721_e, jule::Ptr<_1a7981d18_FnCallExpr>* _195736_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac04a795_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac04a795_ctx>();
	return _1a7b2199c__Public(__jule_closure_ctx.alloc->_self_, _195721_e, _195736_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac04c588(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _196421_e, jule::Ptr<_1a7981d18_FnCallExpr>* _196436_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac04c588_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac04c588_ctx>();
	return _1a7b21d98__Binded(__jule_closure_ctx.alloc->_self_, _196421_e, _196436_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac04e37b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _197121_e, jule::Ptr<_1a7981d18_FnCallExpr>* _197136_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac04e37b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac04e37b_ctx>();
	return _1a7b22294__Exceptional(__jule_closure_ctx.alloc->_self_, _197121_e, _197136_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac05116e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _197821_e, jule::Ptr<_1a7981d18_FnCallExpr>* _197836_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac05116e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac05116e_ctx>();
	return _1a7b22690__Mutable(__jule_closure_ctx.alloc->_self_, _197821_e, _197836_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac052e62(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _198521_e, jule::Ptr<_1a7981d18_FnCallExpr>* _198536_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac052e62_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac052e62_ctx>();
	return _1a7b22a8b__Variadic(__jule_closure_ctx.alloc->_self_, _198521_e, _198536_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac054c55(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _199221_e, jule::Ptr<_1a7981d18_FnCallExpr>* _199236_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac054c55_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac054c55_ctx>();
	return _1a7b22e87__Reference(__jule_closure_ctx.alloc->_self_, _199221_e, _199236_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac056a48(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _199921_e, jule::Ptr<_1a7981d18_FnCallExpr>* _199936_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac056a48_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac056a48_ctx>();
	return _1a7b23383__Params(__jule_closure_ctx.alloc->_self_, _199921_e, _199936_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac058ab1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _200621_e, jule::Ptr<_1a7981d18_FnCallExpr>* _200636_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac058ab1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac058ab1_ctx>();
	return _1a7b2377e__Fields(__jule_closure_ctx.alloc->_self_, _200621_e, _200636_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac05a8a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _201321_e, jule::Ptr<_1a7981d18_FnCallExpr>* _201336_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac05a8a4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac05a8a4_ctx>();
	return _1a7b23b7a__Statics(__jule_closure_ctx.alloc->_self_, _201321_e, _201336_fc);;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac05c697(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7c0086c_eval>* _202021_e, jule::Ptr<_1a7981d18_FnCallExpr>* _202036_fc, jule::Ptr<_1a7bed89d_Data>* ) {
	jule::Ptr<__jule_anon_1ac05c697_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac05c697_ctx>();
	return _1a7b24076__Methods(__jule_closure_ctx.alloc->_self_, _202021_e, _202036_fc);;
}

inline jule::Bool __jule_anon_1ac06865e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b7c0bd_sema>* _6415_sema, jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1ac06865e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac06865e_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_self_))._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac069682:;
		if (it != expr_end) {
			jule::I32 _659_i = it - expr->begin();
			jule::Ptr<_1a7985eb5_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1a7c30b77_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*(_6516_g))._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1ac069682;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(0LL, (*((*(_6516_g))._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a7c3255d_Type>(nullptr); __jule_collection; });
				{
					auto expr = &((*(*(_6516_g))._field_Constraint.alloc)._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac06c432:;
					if (it != expr_end) {
						jule::Ptr<_1a7978caa_TypeDecl> _7117_mask = *it;
						{
							jule::I32 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1a7c3255d_Type> _7310_kind = _1a7b8922e_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1a7c5342a_Lookup_mptr_data4), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type78) {
										_case_begin_1ac06e313:;
										{
											jule::Ptr<_1a79793b5_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1a79793b5_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1a7b288c7_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1ac071348;
											};
										}
									}
									_match_end_1ac06e28b:;
								};
								return false;;
							};
							_julec_label_1ac071348:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7c3255d_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1ac06c432:;
						++it;
						goto _iter_begin_1ac06c432;
					}
					_iter_end_1ac06c432:;
				};
			}
			_iter_next_1ac069682:;
			++it;
			_659_i++;
			goto _iter_begin_1ac069682;
		}
		_iter_end_1ac069682:;
	};
	return true;;
}

inline void __jule_anon_1ac332e67(jule::Ptr<jule::Uintptr> __f_ctx, jule::I32 _126519_i) {
	jule::Ptr<__jule_anon_1ac332e67_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac332e67_ctx>();
	jule::Ptr<_1a79871c5_AssignLeft> _12664_l = (*(__jule_closure_ctx.alloc->_126347_a))._field_Left[_126519_i];;
	(*(__jule_closure_ctx.alloc->_12647_eval))._field_target._field_mutable=(!(_1a7965c97_IsIgnoreIdent((*(_12664_l))._field_Ident)));
	{
		
		if (((*__jule_closure_ctx.alloc->_126347_a.alloc)._field_Declarative && (*__jule_closure_ctx.alloc->_12647_eval.alloc)._field_target._field_mutable)) {
			_case_begin_1ac33485e:;
			{
				if (((*_12664_l.alloc)._field_Mutable && (*_12664_l.alloc)._field_Reference)) {
					(*__jule_closure_ctx.alloc->_12647_eval.alloc)._field_target._field_mutable=(*_12664_l.alloc)._field_Mutable;
					goto _match_end_1ac333e46;
				};
				{
					auto &_match_expr{ (*((*(_12664_l))._field_Expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1ac336674:;
						{
							if (_1a7b407ac_isNewAssignIdent(__jule_closure_ctx.alloc->_self_.ptr(), (*_12664_l.alloc)._field_Ident)) {
								(*__jule_closure_ctx.alloc->_12647_eval.alloc)._field_target._field_mutable=(*_12664_l.alloc)._field_Mutable;
							};
						}
					}
					_match_end_1ac3365ec:;
				};
			}
		}
		_match_end_1ac333e46:;
	};
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ac33e391(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a797d0de_Expr>* _129644_expr) {
	jule::Ptr<__jule_anon_1ac33e391_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac33e391_ctx>();
	if (((*(__jule_closure_ctx.alloc->_12948__i)) >= (*(__jule_closure_ctx.alloc->_126347_a))._field_Left.len())) {
		return nullptr;;
	};
	__jule_closure_ctx.alloc->_12653_updateMut((*(__jule_closure_ctx.alloc->_12948__i)));
	jule::Ptr<_1a7bed89d_Data> _13019_d = _1a7c204d5_evalExpr(__jule_closure_ctx.alloc->_12647_eval, (*(_129644_expr)));;
	if ((_13019_d != nullptr)) {
		(*(__jule_closure_ctx.alloc->_12958__parts))=jule::append((*__jule_closure_ctx.alloc->_12958__parts.alloc),({ auto __jule_collection = jule::Slice<_1a7b2b9a7_exprPart>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a7b2b9a7_exprPart{._field_data=_13019_d, ._field_expr=(*(_129644_expr))}; __jule_collection; }));
	};
	return _13019_d;;
}

inline jule::Bool __jule_anon_1ac702dc5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b5e80e_ImportInfo> _48835_spkg) {
	jule::Ptr<__jule_anon_1ac702dc5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac702dc5_ctx>();
	return ((!(_1a7b599e6_isImplicitImport(_48835_spkg))) && ((*((*(__jule_closure_ctx.alloc->_48728_pkg))))._field_Path == (*(_48835_spkg))._field_Path));;
}

inline jule::Bool __jule_anon_1ac7d69d1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b7c0bd_sema>* _84142_sema) {
	jule::Ptr<__jule_anon_1ac7d69d1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac7d69d1_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_83443_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7d797c:;
		if (it != expr_end) {
			jule::Ptr<_1a7a729db_ParamIns> _84316_p = *it;
			{
				if ((!(_1a7a6e70d_IsSelf((*(_84316_p))._field_Decl.ptr())))) {
					(*_84316_p.alloc)._field_Type=_1a7b8db07_buildNonGenericType((*(_84142_sema)), &((*((*(*(_84316_p))._field_Decl.alloc)._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_83511_generics), __jule_closure_ctx.alloc->_83459_ignored);
					__jule_func_result=(__jule_func_result && ((*_84316_p.alloc)._field_Type != nullptr));
				};
			}
			_iter_next_1ac7d797c:;
			++it;
			goto _iter_begin_1ac7d797c;
		}
		_iter_end_1ac7d797c:;
	};
	if ((!(_1a7a71039_IsVoid((*__jule_closure_ctx.alloc->_83443_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_83443_f.alloc)._field_Result=_1a7b8db07_buildNonGenericType((*(_84142_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_83443_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_83511_generics), __jule_closure_ctx.alloc->_83459_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_83443_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1ac7ee6ec(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b7c0bd_sema>* _94442_sema) {
	jule::Ptr<__jule_anon_1ac7ee6ec_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac7ee6ec_ctx>();
	return __jule_closure_ctx.alloc->_93746_algo(_94442_sema, &(__jule_closure_ctx.alloc->_9427_generics));;
}

inline jule::Bool __jule_anon_1ac8020d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b7c0bd_sema>* _95737_sema, jule::Slice<jule::Ptr<_1a7c31848_TypeAlias>>* _95755_generics) {
	jule::Ptr<__jule_anon_1ac8020d4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac8020d4_ctx>();
	jule::Bool _9588_ok = true;;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_95337_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8034ae:;
		if (it != expr_end) {
			jule::Ptr<_1a7a729db_ParamIns> _95916_p = *it;
			{
				if (_1a7a6e70d_IsSelf((*(_95916_p))._field_Decl.ptr())) {
					if (((*(__jule_closure_ctx.alloc->_95337_f))._field_Owner == nullptr)) {
						goto _iter_next_1ac8034ae;
					};
					if (_1a7a6e994_IsRef((*(_95916_p))._field_Decl)) {
						(*_95916_p.alloc)._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c3ed95_Sptr>(_1a7c3ed95_Sptr{._field_Elem=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(__jule_closure_ctx.alloc->_95337_f))._field_Owner, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)});
					} else {
						(*_95916_p.alloc)._field_Type=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(__jule_closure_ctx.alloc->_95337_f))._field_Owner, (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data0)});
					};
				} else {
					(*(_95916_p))._field_Type=_1a7b8a87e_buildTypeWithGenerics((*(_95737_sema)), &((*((*((*_95916_p.alloc)._field_Decl))._field_TypeSym))._field_Decl), (*(_95755_generics)), (*(__jule_closure_ctx.alloc->_95337_f))._field_Refers);
					if (((*_95916_p.alloc)._field_Type != nullptr)) {
						_1a7b90851_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_95916_p));
					} else {
						_9588_ok=false;
					};
				};
			}
			_iter_next_1ac8034ae:;
			++it;
			goto _iter_begin_1ac8034ae;
		}
		_iter_end_1ac8034ae:;
	};
	if ((!(_1a7a71039_IsVoid((*__jule_closure_ctx.alloc->_95337_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_95337_f.alloc)._field_Result=_1a7b8a87e_buildTypeWithGenerics((*(_95737_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_95337_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), (*(_95755_generics)), (*__jule_closure_ctx.alloc->_95337_f.alloc)._field_Refers);
		_9588_ok=(((*__jule_closure_ctx.alloc->_95337_f.alloc)._field_Result != nullptr) && _9588_ok);
	};
	return _9588_ok;;
}

inline jule::Ptr<_1a7bed89d_Data> __jule_anon_1ab2374cc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a797d0de_Expr>* _294939_expr) {
	jule::Ptr<__jule_anon_1ab2374cc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab2374cc_ctx>();
	return _1a7c204d5_evalExpr(__jule_closure_ctx.alloc->_self_, (*(_294939_expr)));;
}

inline jule::Str __jule_anon1ad095a97(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _91619_def) {
	{
		auto &_match_expr{ (*(_91619_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad09635b:;
			{
				return (*((*(_91619_def)).cast_ptr<_1a7c31848_TypeAlias>(&__jule_any_type8)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad096977:;
			{
				return (*((*(_91619_def)).cast_ptr<_1a7997adc_Struct>(&__jule_any_type9)))._field_Ident;;
			}
		}
		else {
			_case_begin_1ad096537:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ad0964c1:;
	};
}

inline void __jule_anon_1ac696088(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a76d86_SymTab>* _17731_file) {
	jule::Ptr<__jule_anon_1ac696088_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac696088_ctx>();
	{
		auto expr = &((*((*(_17731_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6969c3:;
		if (it != expr_end) {
			jule::Ptr<_1a7ba4eb4_Var> _17816_v = *it;
			{
				if (_1a85ed2d0_HasDirective(&((*(_17816_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_1ac68ae3a_isLive(__jule_closure_ctx.alloc->_self_, &(_17816_v))))) {
						_1ac68e713_pushLive(__jule_closure_ctx.alloc->_self_, _17816_v);
						_1a92047ed_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_17816_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_1ac6969c3:;
			++it;
			goto _iter_begin_1ac6969c3;
		}
		_iter_end_1ac6969c3:;
	};
	{
		auto expr = &((*((*(_17731_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acad4d78:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _18616_f = *it;
			{
				if (_1a85ed2d0_HasDirective(&((*(_18616_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_18616_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1acad6dd0:;
						if (it != expr_end) {
							jule::Ptr<_1a7a73b41_FnIns> _18818_ins = *it;
							{
								if ((!(_1acaca2be_isLive(__jule_closure_ctx.alloc->_self_, &(_18818_ins))))) {
									_1acacb369_pushLive(__jule_closure_ctx.alloc->_self_, _18818_ins);
									_1a92047ed_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_18818_ins))._field_Refers));
								};
							}
							_iter_next_1acad6dd0:;
							++it;
							goto _iter_begin_1acad6dd0;
						}
						_iter_end_1acad6dd0:;
					};
				};
			}
			_iter_next_1acad4d78:;
			++it;
			goto _iter_begin_1acad4d78;
		}
		_iter_end_1acad4d78:;
	};
}

inline void __jule_anon_1ac6b0910(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr) {
	jule::Ptr<__jule_anon_1ac6b0910_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac6b0910_ctx>();
	{
		auto &_match_expr{ (*(_2236_expr)) };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ac6b1339:;
			{
				jule::Ptr<_1a7a6588b_FnCallExpr> _259_m = (*(_2236_expr)).cast_ptr<_1a7a6588b_FnCallExpr>(&__jule_any_type30);;
				if (((*(_259_m))._field_Except != nullptr)) {
					{
						_1a92080a4_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_259_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ac6b1180:;
			{
				jule::Ptr<_1a7a666c2_AnonFnExpr> _309_m = (*(_2236_expr)).cast_ptr<_1a7a666c2_AnonFnExpr>(&__jule_any_type101);;
				_1a920aa13_eliminateDeadCodeOfScope((*((*(_309_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1ac6b12b2:;
	};
}

inline void __jule_anon_1ad95a923(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _7047_m) {
	jule::Ptr<__jule_anon_1ad95a923_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad95a923_ctx>();
	if ((*(__jule_closure_ctx.alloc->_687__check))) {
		{
			auto &_match_expr{ (*(_7047_m)) };
			
			if (_match_expr.type == &__jule_any_type113) {
				_case_begin_1ad95b7e2:;
				{
					jule::Ptr<_1a7a638ab_BinaryExpr> _7410_binary = (*(_7047_m)).cast_ptr<_1a7a638ab_BinaryExpr>(&__jule_any_type113);;
					(*__jule_closure_ctx.alloc->_687__check.alloc)=((*((*(_7410_binary))._field_Op))._field_Id != static_cast<jule::U32>(55LLU));
					if ((!((*__jule_closure_ctx.alloc->_687__check.alloc)))) {
						goto _match_end_1ad95b77b;
					};
					_1a9119e1c_checkBinaryForBoundary(__jule_closure_ctx.alloc->_527_exop, &(_7410_binary));
					_1a911a1c5_checkBinaryForNil(__jule_closure_ctx.alloc->_527_exop, &(_7410_binary));
				}
			}
			_match_end_1ad95b77b:;
		};
	};
	_1a911ce53_inspectStep(__jule_closure_ctx.alloc->_527_exop, _7047_m);
}

inline void __jule_anon_1ad98a1e4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any _31013_m) {
	jule::Ptr<__jule_anon_1ad98a1e4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad98a1e4_ctx>();
	{
		auto &_match_expr{ _31013_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad98b569:;
			{
				jule::Ptr<_1a7a638ab_BinaryExpr> _3249_binary = _31013_m.unsafe_cast_ptr<_1a7a638ab_BinaryExpr>();;
				{
					_1a911aa77_binaryStrCommon(__jule_closure_ctx.alloc->_self_, &(_3249_binary));
					(*(__jule_closure_ctx.alloc->_3094__step))((*(*(_3249_binary))._field_Left.alloc)._field_Model);
					(*(__jule_closure_ctx.alloc->_3094__step))((*((*(_3249_binary))._field_Right))._field_Model);
				};
			}
		}
		else {
			_case_begin_1ad98ab40:;
			{
				(*__jule_closure_ctx.alloc->_3057_model.alloc)._field_Parts=jule::append((*__jule_closure_ctx.alloc->_3057_model.alloc)._field_Parts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _31013_m; __jule_collection; }));
			}
		}
		_match_end_1ad98aac9:;
	};
}

inline void __jule_anon_1ad9ed6ca(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _94447_m) {
	jule::Ptr<__jule_anon_1ad9ed6ca_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad9ed6ca_ctx>();
	{
		_1a911ce53_inspectStep(__jule_closure_ctx.alloc->_self_, _94447_m);
	};
}

inline void __jule_anon_1baa5446b(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1baa5446b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1baa5446b_ctx>();
	if (__jule_closure_ctx.alloc->_1017_ref) {
		_1aa897c5e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1aa897c5e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1baa57e75(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1baa57e75_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1baa57e75_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_9336_it))))._field_KeyB.alloc)._field_Reference) {
			_1aa897c5e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1aa897c5e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1ad7849a0(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad7849a0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad7849a0_ctx>();
	_1aa897c5e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg0", 37));
}

inline void __jule_anon_1ad786e8b(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad786e8b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad786e8b_ctx>();
	_1aa897c5e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg1", 37));
}

inline void __jule_anon_1adb60ce3(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1adb60ce3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1adb60ce3_ctx>();
	_1aa897c5e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1ad9d6b9c(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad9d6b9c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad9d6b9c_ctx>();
	_1aa897c5e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1ad9d7ecd(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad9d7ecd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad9d7ecd_ctx>();
	_1a9222453_possibleRefExpr((*((*(__jule_closure_ctx.alloc->_self_))._field_oc))._field_ec, (*((*(__jule_closure_ctx.alloc->_74030_m))._field_Expr))._field_Model);
}

inline jule::Bool __jule_anon_1bab42c74(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7ba4eb4_Var> _111667_v) {
	jule::Ptr<__jule_anon_1bab42c74_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bab42c74_ctx>();
	return _1a921a7e2_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_111034_m), &(_111667_v));;
}

inline void __jule_anon_1badc0287(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b62081_Package>* _82938_pkg) {
	jule::Ptr<__jule_anon_1badc0287_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1badc0287_ctx>();
	_1a85e8929_IterFiles(_82938_pkg, jule::__new_closure<void,jule::Ptr<_1a7a76d86_SymTab>*>((void*)__jule_anon_1badc1145, jule::Ptr<__jule_anon_1badc1145_ctx>::make(__jule_anon_1badc1145_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1badc1145_ctx_handler));
}

inline void __jule_anon_1badd4cd5(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1badd4cd5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1badd4cd5_ctx>();
	_1aa897c5e_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1a922bb22_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_91424_v))._field_Value))._field_Data.alloc)._field_Model);
	_1aa897c5e_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1badd6dc5(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1badd6dc5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1badd6dc5_ctx>();
	_1a9222453_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_91424_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1badd95d1(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1badd95d1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1badd95d1_ctx>();
	_1aa897c5e_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1badda77a(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1badda77a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1badda77a_ctx>();
	_1a922ccdd_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_91424_v))._field_TypeSym.alloc)._field_Type);
}

inline void __jule_anon_1bae24a5b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b62081_Package>* _117938_pkg) {
	jule::Ptr<__jule_anon_1bae24a5b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bae24a5b_ctx>();
	_1a85e8929_IterFiles(_117938_pkg, jule::__new_closure<void,jule::Ptr<_1a7a76d86_SymTab>*>((void*)__jule_anon_1bae25919, jule::Ptr<__jule_anon_1bae25919_ctx>::make(__jule_anon_1bae25919_ctx{._117938_pkg=_117938_pkg,._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1bae25919_ctx_handler));
}

inline void __jule_anon_1bae25dc0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a76d86_SymTab>* _120231_file) {
	jule::Ptr<__jule_anon_1bae25dc0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bae25dc0_ctx>();
	{
		auto expr = &((*((*(_120231_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae2a149:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _120316_f = *it;
			{
				if ((*(_120316_f))._field_Ident.equal("init", 4)) {
					_1aa898611_indent(__jule_closure_ctx.alloc->_self_);
					static__1a9234652_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_120316_f));
					_1aa897c5e_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1bae2a149:;
			++it;
			goto _iter_begin_1bae2a149;
		}
		_iter_end_1bae2a149:;
	};
}

inline void __jule_anon_1bae32184(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b62081_Package>* _124138_pkg) {
	jule::Ptr<__jule_anon_1bae32184_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bae32184_ctx>();
	_1aa8a37a3_pushInit(__jule_closure_ctx.alloc->_self_, _124138_pkg);
}

inline void __jule_anon_1bae371de(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a70a83_Fn>* _127836_m) {
	jule::Ptr<__jule_anon_1bae371de_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bae371de_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_12747_hash))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae37c06:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _128011_em = *it;
			{
				if ((_128011_em == (*(_127836_m)))) {
					return;;
				};
			}
			_iter_next_1bae37c06:;
			++it;
			goto _iter_begin_1bae37c06;
		}
		_iter_end_1bae37c06:;
	};
	(*__jule_closure_ctx.alloc->_12747_hash.alloc)._field_methods=jule::append((*__jule_closure_ctx.alloc->_12747_hash.alloc)._field_methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a7a70a83_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_127836_m)); __jule_collection; }));
}

inline void __jule_anon_1bae39741(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b62081_Package>* _129238_pkg) {
	jule::Ptr<__jule_anon_1bae39741_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bae39741_ctx>();
	_1a85e8929_IterFiles(_129238_pkg, jule::__new_closure<void,jule::Ptr<_1a7a76d86_SymTab>*>((void*)__jule_anon_1bae3a5ee, jule::Ptr<__jule_anon_1bae3a5ee_ctx>::make(__jule_anon_1bae3a5ee_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1bae3a5ee_ctx_handler));
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1baeec34d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1a49e260c_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1bb004c29(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1a49e2156_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1abe48671(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b5e80e_ImportInfo> _204025_pkg) {
	return (*(_204025_pkg))._field_LinkPath.equal("std/comptime", 12);;
}

inline jule::Bool __jule_anon_1aca30ae8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7b5e80e_ImportInfo> _476130_imp) {
	jule::Ptr<__jule_anon_1aca30ae8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aca30ae8_ctx>();
	return (((*(_476130_imp))._field_Alias == __jule_closure_ctx.alloc->_476038_namespace) && (!(_1a7b599e6_isImplicitImport(_476130_imp))));;
}

inline void __jule_anon_1badc1145(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a76d86_SymTab>* _83032_file) {
	jule::Ptr<__jule_anon_1badc1145_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1badc1145_ctx>();
	{
		auto expr = &((*((*(_83032_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badc1a91:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _83117_f = *it;
			{
				if (((!((*(_83117_f))._field_Binded)) && ((*_83117_f.alloc)._field_Token != nullptr))) {
					_1aa899cc7_pushResult(__jule_closure_ctx.alloc->_self_, &(_83117_f));
					_1aa89d704_funcDecl(__jule_closure_ctx.alloc->_self_, &(_83117_f), false);
				};
			}
			_iter_next_1badc1a91:;
			++it;
			goto _iter_begin_1badc1a91;
		}
		_iter_end_1badc1a91:;
	};
}

inline void __jule_anon_1bae25919(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a76d86_SymTab>* _118032_file) {
	jule::Ptr<__jule_anon_1bae25919_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bae25919_ctx>();
	{
		auto expr = &((*((*(_118032_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae26343:;
		if (it != expr_end) {
			jule::Ptr<_1a7a70a83_Fn> _118117_f = *it;
			{
				if (((!(_1bd445b4b_Test)) && _1a85ed2d0_HasDirective(&((*(_118117_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1bae26343;
				};
				if (((*(__jule_closure_ctx.alloc->_117938_pkg)) == (*((*((*__jule_closure_ctx.alloc->_self_.alloc)._field_ir))._field_Runtime))._field_Package)) {
					{
						auto &_match_expr{ (*(_118117_f))._field_Ident };
						
						if (_match_expr == jule::Str::lit("_RCAdd", 6) || _match_expr == jule::Str::lit("_RCLoad", 7) || _match_expr == jule::Str::lit("_RCDrop", 7)) {
							_case_begin_1bae27cd4:;
							{
								goto _iter_next_1bae26343;
							}
						}
						_match_end_1bae27c18:;
					};
				};
				if (((!((*(_118117_f))._field_Binded)) && ((*_118117_f.alloc)._field_Token != nullptr))) {
					_1aa8a0c45_func(__jule_closure_ctx.alloc->_self_, &(_118117_f));
					_1aa897c5e_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1bae26343:;
			++it;
			goto _iter_begin_1bae26343;
		}
		_iter_end_1bae26343:;
	};
}

inline void __jule_anon_1bae3a5ee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a76d86_SymTab>* _129332_file) {
	jule::Ptr<__jule_anon_1bae3a5ee_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bae3a5ee_ctx>();
	{
		auto expr = &((*((*(_129332_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae3b028:;
		if (it != expr_end) {
			jule::Ptr<_1a7a7b297_Trait> _129417_t = *it;
			{
				if (((*(_129417_t))._field_Token != nullptr)) {
					_1aa8a4353_buildTraitHash(__jule_closure_ctx.alloc->_self_, &(_129417_t));
				};
			}
			_iter_next_1bae3b028:;
			++it;
			goto _iter_begin_1bae3b028;
		}
		_iter_end_1bae3b028:;
	};
}

inline void __jule_RCAdd(jule::U32* _5722_p) {
	(*(_5722_p))+=1LLU;
}

inline jule::U32 __jule_RCLoad(jule::U32* _4019_p) {
	return (*(_4019_p));;
}

inline jule::Bool __jule_RCDrop(jule::U32* _7523_p) {
	jule::Bool _772_alive = ((*(_7523_p)) > 1LLU);;
	(*(_7523_p))-=1LLU;
	return _772_alive;;
}

int main(int argc, char *argv[], char *envp[]) {

	_1bd4476ca_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1aa929a16_OutDir = jule::Str::lit("dist", 4);
	_1aa929dac_OutName = jule::Str::lit("ir.cpp", 6);
	_1aa92a0bb_Out = jule::Str();
	_1d778d144_STDIN = _1d778d94c_GetStdHandle(static_cast<jule::Uintptr>(4294967286LLU));
	_1d778d3db_STDOUT = _1d778d94c_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));
	_1d778d6d8_STDERR = _1d778d94c_GetStdHandle(static_cast<jule::Uintptr>(4294967284LLU));
	_1d78ab66e_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_1d78ac0ba_acceptRanges = ({ auto __jule_collection = jule::Array<_1d78abc24_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _1d78abc24_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _1d78abc24_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _1d78abc24_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _1d78abc24_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _1d78abc24_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _1d78abc24_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_1bbebb816__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_1bbebbdee__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_1bd3b45c0__L = jule::new_ptr<_1bd426d19_RangeTable>(_1bd426d19_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1bd426368_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _1bd426368_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _1bd426368_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _1bd426368_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _1bd426368_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _1bd426368_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _1bd426368_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1bd426896_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _1bd426896_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _1bd426896_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _1bd426896_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _1bd426896_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _1bd426896_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _1bd426896_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _1bd426896_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _1bd426896_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _1bd426896_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _1bd426896_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _1bd426896_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_1bd3b54d3__LU = jule::new_ptr<_1bd426d19_RangeTable>(_1bd426d19_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1bd426368_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _1bd426368_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _1bd426368_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _1bd426368_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _1bd426368_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _1bd426368_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _1bd426368_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1bd426368_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _1bd426368_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _1bd426368_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1bd426896_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _1bd426896_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1bd426896_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _1bd426896_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_1bd3bb4b7_Letter = _1bd3b45c0__L;
	_1bd3c2787_Upper = _1bd3b54d3__LU;
	_1bd41ee77__CaseRanges = ({ auto __jule_collection = jule::Slice<_1bd425db2_CaseRange>::alloc(328, 328); auto it = __jule_collection.begin(); (*it++) = _1bd425db2_CaseRange{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=181LLU, ._field_Hi=181LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 743LL; (*it++) = 0LL; (*it++) = 743LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=224LLU, ._field_Hi=246LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=248LLU, ._field_Hi=254LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=255LLU, ._field_Hi=255LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 121LL; (*it++) = 0LL; (*it++) = 121LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=256LLU, ._field_Hi=303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=304LLU, ._field_Hi=304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -199LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=305LLU, ._field_Hi=305LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -232LL; (*it++) = 0LL; (*it++) = -232LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=306LLU, ._field_Hi=311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=313LLU, ._field_Hi=328LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=330LLU, ._field_Hi=375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=376LLU, ._field_Hi=376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -121LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=377LLU, ._field_Hi=382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=383LLU, ._field_Hi=383LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -300LL; (*it++) = 0LL; (*it++) = -300LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=384LLU, ._field_Hi=384LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 195LL; (*it++) = 0LL; (*it++) = 195LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=385LLU, ._field_Hi=385LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 210LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=386LLU, ._field_Hi=389LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=390LLU, ._field_Hi=390LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 206LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=391LLU, ._field_Hi=392LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=393LLU, ._field_Hi=394LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=395LLU, ._field_Hi=396LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=398LLU, ._field_Hi=398LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 79LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=399LLU, ._field_Hi=399LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 202LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=400LLU, ._field_Hi=400LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 203LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=401LLU, ._field_Hi=402LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=403LLU, ._field_Hi=403LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=404LLU, ._field_Hi=404LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 207LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=405LLU, ._field_Hi=405LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 97LL; (*it++) = 0LL; (*it++) = 97LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=406LLU, ._field_Hi=406LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=407LLU, ._field_Hi=407LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 209LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=408LLU, ._field_Hi=409LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=410LLU, ._field_Hi=410LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 163LL; (*it++) = 0LL; (*it++) = 163LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=412LLU, ._field_Hi=412LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=413LLU, ._field_Hi=413LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 213LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=414LLU, ._field_Hi=414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=415LLU, ._field_Hi=415LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 214LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=416LLU, ._field_Hi=421LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=422LLU, ._field_Hi=422LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=423LLU, ._field_Hi=424LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=425LLU, ._field_Hi=425LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=428LLU, ._field_Hi=429LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=430LLU, ._field_Hi=430LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=431LLU, ._field_Hi=432LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=433LLU, ._field_Hi=434LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 217LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=435LLU, ._field_Hi=438LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=439LLU, ._field_Hi=439LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 219LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=440LLU, ._field_Hi=441LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=444LLU, ._field_Hi=445LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=447LLU, ._field_Hi=447LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 56LL; (*it++) = 0LL; (*it++) = 56LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=452LLU, ._field_Hi=452LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=453LLU, ._field_Hi=453LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=454LLU, ._field_Hi=454LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=455LLU, ._field_Hi=455LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=456LLU, ._field_Hi=456LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=457LLU, ._field_Hi=457LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=458LLU, ._field_Hi=458LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=459LLU, ._field_Hi=459LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=460LLU, ._field_Hi=460LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=461LLU, ._field_Hi=476LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=477LLU, ._field_Hi=477LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -79LL; (*it++) = 0LL; (*it++) = -79LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=478LLU, ._field_Hi=495LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=497LLU, ._field_Hi=497LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=498LLU, ._field_Hi=498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=499LLU, ._field_Hi=499LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=500LLU, ._field_Hi=501LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=502LLU, ._field_Hi=502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -97LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=503LLU, ._field_Hi=503LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -56LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=504LLU, ._field_Hi=543LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=544LLU, ._field_Hi=544LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=546LLU, ._field_Hi=563LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=570LLU, ._field_Hi=570LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10795LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=571LLU, ._field_Hi=572LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=573LLU, ._field_Hi=573LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -163LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=574LLU, ._field_Hi=574LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10792LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=575LLU, ._field_Hi=576LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10815LL; (*it++) = 0LL; (*it++) = 10815LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=577LLU, ._field_Hi=578LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=579LLU, ._field_Hi=579LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -195LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=580LLU, ._field_Hi=580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 69LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=581LLU, ._field_Hi=581LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 71LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=582LLU, ._field_Hi=591LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=592LLU, ._field_Hi=592LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10783LL; (*it++) = 0LL; (*it++) = 10783LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=593LLU, ._field_Hi=593LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10780LL; (*it++) = 0LL; (*it++) = 10780LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=594LLU, ._field_Hi=594LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10782LL; (*it++) = 0LL; (*it++) = 10782LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=595LLU, ._field_Hi=595LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -210LL; (*it++) = 0LL; (*it++) = -210LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=596LLU, ._field_Hi=596LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -206LL; (*it++) = 0LL; (*it++) = -206LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=598LLU, ._field_Hi=599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=601LLU, ._field_Hi=601LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -202LL; (*it++) = 0LL; (*it++) = -202LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=603LLU, ._field_Hi=603LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -203LL; (*it++) = 0LL; (*it++) = -203LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=604LLU, ._field_Hi=604LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42319LL; (*it++) = 0LL; (*it++) = 42319LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=608LLU, ._field_Hi=608LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=609LLU, ._field_Hi=609LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42315LL; (*it++) = 0LL; (*it++) = 42315LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=611LLU, ._field_Hi=611LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -207LL; (*it++) = 0LL; (*it++) = -207LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=613LLU, ._field_Hi=613LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42280LL; (*it++) = 0LL; (*it++) = 42280LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=614LLU, ._field_Hi=614LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=616LLU, ._field_Hi=616LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -209LL; (*it++) = 0LL; (*it++) = -209LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=617LLU, ._field_Hi=617LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=618LLU, ._field_Hi=618LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=619LLU, ._field_Hi=619LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10743LL; (*it++) = 0LL; (*it++) = 10743LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=620LLU, ._field_Hi=620LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42305LL; (*it++) = 0LL; (*it++) = 42305LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=623LLU, ._field_Hi=623LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=625LLU, ._field_Hi=625LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10749LL; (*it++) = 0LL; (*it++) = 10749LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=626LLU, ._field_Hi=626LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -213LL; (*it++) = 0LL; (*it++) = -213LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=629LLU, ._field_Hi=629LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -214LL; (*it++) = 0LL; (*it++) = -214LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=637LLU, ._field_Hi=637LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10727LL; (*it++) = 0LL; (*it++) = 10727LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=640LLU, ._field_Hi=640LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=642LLU, ._field_Hi=642LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42307LL; (*it++) = 0LL; (*it++) = 42307LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=643LLU, ._field_Hi=643LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=647LLU, ._field_Hi=647LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42282LL; (*it++) = 0LL; (*it++) = 42282LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=648LLU, ._field_Hi=648LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=649LLU, ._field_Hi=649LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -69LL; (*it++) = 0LL; (*it++) = -69LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=650LLU, ._field_Hi=651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -217LL; (*it++) = 0LL; (*it++) = -217LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=652LLU, ._field_Hi=652LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -71LL; (*it++) = 0LL; (*it++) = -71LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=658LLU, ._field_Hi=658LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -219LL; (*it++) = 0LL; (*it++) = -219LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=669LLU, ._field_Hi=669LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42261LL; (*it++) = 0LL; (*it++) = 42261LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=670LLU, ._field_Hi=670LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42258LL; (*it++) = 0LL; (*it++) = 42258LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=837LLU, ._field_Hi=837LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 84LL; (*it++) = 0LL; (*it++) = 84LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=880LLU, ._field_Hi=883LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=891LLU, ._field_Hi=893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=895LLU, ._field_Hi=895LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 116LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=902LLU, ._field_Hi=902LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 37LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=908LLU, ._field_Hi=908LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=910LLU, ._field_Hi=911LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 63LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=913LLU, ._field_Hi=929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=940LLU, ._field_Hi=940LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38LL; (*it++) = 0LL; (*it++) = -38LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=941LLU, ._field_Hi=943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -37LL; (*it++) = 0LL; (*it++) = -37LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=945LLU, ._field_Hi=961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=962LLU, ._field_Hi=962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -31LL; (*it++) = 0LL; (*it++) = -31LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=963LLU, ._field_Hi=971LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=972LLU, ._field_Hi=972LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=973LLU, ._field_Hi=974LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -63LL; (*it++) = 0LL; (*it++) = -63LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=975LLU, ._field_Hi=975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=976LLU, ._field_Hi=976LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -62LL; (*it++) = 0LL; (*it++) = -62LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=977LLU, ._field_Hi=977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -57LL; (*it++) = 0LL; (*it++) = -57LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=981LLU, ._field_Hi=981LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -47LL; (*it++) = 0LL; (*it++) = -47LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=982LLU, ._field_Hi=982LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -54LL; (*it++) = 0LL; (*it++) = -54LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=983LLU, ._field_Hi=983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=984LLU, ._field_Hi=1007LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1008LLU, ._field_Hi=1008LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -86LL; (*it++) = 0LL; (*it++) = -86LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1009LLU, ._field_Hi=1009LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1010LLU, ._field_Hi=1010LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1011LLU, ._field_Hi=1011LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -116LL; (*it++) = 0LL; (*it++) = -116LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1012LLU, ._field_Hi=1012LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -60LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1013LLU, ._field_Hi=1013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -96LL; (*it++) = 0LL; (*it++) = -96LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1015LLU, ._field_Hi=1016LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1017LLU, ._field_Hi=1017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1018LLU, ._field_Hi=1019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1021LLU, ._field_Hi=1023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1024LLU, ._field_Hi=1039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 80LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1040LLU, ._field_Hi=1071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1072LLU, ._field_Hi=1103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1104LLU, ._field_Hi=1119LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1120LLU, ._field_Hi=1153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1162LLU, ._field_Hi=1215LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1216LLU, ._field_Hi=1216LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 15LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1217LLU, ._field_Hi=1230LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1231LLU, ._field_Hi=1231LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -15LL; (*it++) = 0LL; (*it++) = -15LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1232LLU, ._field_Hi=1327LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=1377LLU, ._field_Hi=1414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=4295LLU, ._field_Hi=4295LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=4301LLU, ._field_Hi=4301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=4349LLU, ._field_Hi=4351LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=5024LLU, ._field_Hi=5103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38864LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=5104LLU, ._field_Hi=5109LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7296LLU, ._field_Hi=7296LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6254LL; (*it++) = 0LL; (*it++) = -6254LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7297LLU, ._field_Hi=7297LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6253LL; (*it++) = 0LL; (*it++) = -6253LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7298LLU, ._field_Hi=7298LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6244LL; (*it++) = 0LL; (*it++) = -6244LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7299LLU, ._field_Hi=7300LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6242LL; (*it++) = 0LL; (*it++) = -6242LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7301LLU, ._field_Hi=7301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6243LL; (*it++) = 0LL; (*it++) = -6243LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7302LLU, ._field_Hi=7302LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6236LL; (*it++) = 0LL; (*it++) = -6236LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7303LLU, ._field_Hi=7303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6181LL; (*it++) = 0LL; (*it++) = -6181LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7304LLU, ._field_Hi=7304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35266LL; (*it++) = 0LL; (*it++) = 35266LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7545LLU, ._field_Hi=7545LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35332LL; (*it++) = 0LL; (*it++) = 35332LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7549LLU, ._field_Hi=7549LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3814LL; (*it++) = 0LL; (*it++) = 3814LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7566LLU, ._field_Hi=7566LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35384LL; (*it++) = 0LL; (*it++) = 35384LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7680LLU, ._field_Hi=7829LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7835LLU, ._field_Hi=7835LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -59LL; (*it++) = 0LL; (*it++) = -59LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7838LLU, ._field_Hi=7838LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7615LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7840LLU, ._field_Hi=7935LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7936LLU, ._field_Hi=7943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7952LLU, ._field_Hi=7957LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7968LLU, ._field_Hi=7975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7984LLU, ._field_Hi=7991LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8000LLU, ._field_Hi=8005LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8017LLU, ._field_Hi=8017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8019LLU, ._field_Hi=8019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8021LLU, ._field_Hi=8021LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8023LLU, ._field_Hi=8023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8025LLU, ._field_Hi=8025LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8027LLU, ._field_Hi=8027LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8029LLU, ._field_Hi=8029LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8031LLU, ._field_Hi=8031LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8032LLU, ._field_Hi=8039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8048LLU, ._field_Hi=8049LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 74LL; (*it++) = 0LL; (*it++) = 74LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8050LLU, ._field_Hi=8053LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 86LL; (*it++) = 0LL; (*it++) = 86LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8054LLU, ._field_Hi=8055LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 100LL; (*it++) = 0LL; (*it++) = 100LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8056LLU, ._field_Hi=8057LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 128LL; (*it++) = 0LL; (*it++) = 128LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8058LLU, ._field_Hi=8059LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 112LL; (*it++) = 0LL; (*it++) = 112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8060LLU, ._field_Hi=8061LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 126LL; (*it++) = 0LL; (*it++) = 126LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8064LLU, ._field_Hi=8071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8072LLU, ._field_Hi=8079LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8080LLU, ._field_Hi=8087LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8088LLU, ._field_Hi=8095LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8096LLU, ._field_Hi=8103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8104LLU, ._field_Hi=8111LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8112LLU, ._field_Hi=8113LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8115LLU, ._field_Hi=8115LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8120LLU, ._field_Hi=8121LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8122LLU, ._field_Hi=8123LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -74LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8124LLU, ._field_Hi=8124LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8126LLU, ._field_Hi=8126LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7205LL; (*it++) = 0LL; (*it++) = -7205LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8131LLU, ._field_Hi=8131LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -86LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8140LLU, ._field_Hi=8140LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8144LLU, ._field_Hi=8145LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8152LLU, ._field_Hi=8153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8154LLU, ._field_Hi=8155LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -100LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8160LLU, ._field_Hi=8161LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8165LLU, ._field_Hi=8165LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8168LLU, ._field_Hi=8169LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8170LLU, ._field_Hi=8171LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -112LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8172LLU, ._field_Hi=8172LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8179LLU, ._field_Hi=8179LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8184LLU, ._field_Hi=8185LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -128LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8186LLU, ._field_Hi=8187LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -126LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8188LLU, ._field_Hi=8188LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8486LLU, ._field_Hi=8486LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7517LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8490LLU, ._field_Hi=8490LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8383LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8491LLU, ._field_Hi=8491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8262LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8498LLU, ._field_Hi=8498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 28LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8526LLU, ._field_Hi=8526LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -28LL; (*it++) = 0LL; (*it++) = -28LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8544LLU, ._field_Hi=8559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 16LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8560LLU, ._field_Hi=8575LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -16LL; (*it++) = 0LL; (*it++) = -16LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=8579LLU, ._field_Hi=8580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=9398LLU, ._field_Hi=9423LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 26LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=9424LLU, ._field_Hi=9449LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -26LL; (*it++) = 0LL; (*it++) = -26LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11312LLU, ._field_Hi=11359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11360LLU, ._field_Hi=11361LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11362LLU, ._field_Hi=11362LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10743LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11363LLU, ._field_Hi=11363LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3814LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11364LLU, ._field_Hi=11364LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10727LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11365LLU, ._field_Hi=11365LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10795LL; (*it++) = 0LL; (*it++) = -10795LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11366LLU, ._field_Hi=11366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10792LL; (*it++) = 0LL; (*it++) = -10792LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11367LLU, ._field_Hi=11372LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11373LLU, ._field_Hi=11373LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10780LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11374LLU, ._field_Hi=11374LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10749LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11375LLU, ._field_Hi=11375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10783LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11376LLU, ._field_Hi=11376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10782LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11378LLU, ._field_Hi=11379LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11381LLU, ._field_Hi=11382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11390LLU, ._field_Hi=11391LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10815LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11392LLU, ._field_Hi=11491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11559LLU, ._field_Hi=11559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=11565LLU, ._field_Hi=11565LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42560LLU, ._field_Hi=42605LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42624LLU, ._field_Hi=42651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42786LLU, ._field_Hi=42799LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42802LLU, ._field_Hi=42863LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42873LLU, ._field_Hi=42876LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42877LLU, ._field_Hi=42877LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35332LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42878LLU, ._field_Hi=42887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42891LLU, ._field_Hi=42892LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42893LLU, ._field_Hi=42893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42280LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42896LLU, ._field_Hi=42899LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42900LLU, ._field_Hi=42900LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 48LL; (*it++) = 0LL; (*it++) = 48LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42902LLU, ._field_Hi=42921LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42922LLU, ._field_Hi=42922LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42923LLU, ._field_Hi=42923LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42319LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42924LLU, ._field_Hi=42924LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42315LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42925LLU, ._field_Hi=42925LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42305LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42926LLU, ._field_Hi=42926LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42928LLU, ._field_Hi=42928LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42258LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42929LLU, ._field_Hi=42929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42282LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42930LLU, ._field_Hi=42930LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42261LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42931LLU, ._field_Hi=42931LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 928LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42932LLU, ._field_Hi=42947LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42948LLU, ._field_Hi=42948LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42949LLU, ._field_Hi=42949LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42307LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42950LLU, ._field_Hi=42950LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35384LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42951LLU, ._field_Hi=42954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=42997LLU, ._field_Hi=42998LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=43859LLU, ._field_Hi=43859LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -928LL; (*it++) = 0LL; (*it++) = -928LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=43888LLU, ._field_Hi=43967LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38864LL; (*it++) = 0LL; (*it++) = -38864LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=66600LLU, ._field_Hi=66639LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=71872LLU, ._field_Hi=71903LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=93792LLU, ._field_Hi=93823LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=125184LLU, ._field_Hi=125217LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 34LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bd425db2_CaseRange{._field_Lo=125218LLU, ._field_Hi=125251LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -34LL; (*it++) = 0LL; (*it++) = -34LL; __jule_collection; })}; __jule_collection; });
	_1bd420263__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_1bd422045_asciiFold = ({ auto __jule_collection = jule::Array<jule::U16,128>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 2LLU; (*it++) = 3LLU; (*it++) = 4LLU; (*it++) = 5LLU; (*it++) = 6LLU; (*it++) = 7LLU; (*it++) = 8LLU; (*it++) = 9LLU; (*it++) = 10LLU; (*it++) = 11LLU; (*it++) = 12LLU; (*it++) = 13LLU; (*it++) = 14LLU; (*it++) = 15LLU; (*it++) = 16LLU; (*it++) = 17LLU; (*it++) = 18LLU; (*it++) = 19LLU; (*it++) = 20LLU; (*it++) = 21LLU; (*it++) = 22LLU; (*it++) = 23LLU; (*it++) = 24LLU; (*it++) = 25LLU; (*it++) = 26LLU; (*it++) = 27LLU; (*it++) = 28LLU; (*it++) = 29LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 32LLU; (*it++) = 33LLU; (*it++) = 34LLU; (*it++) = 35LLU; (*it++) = 36LLU; (*it++) = 37LLU; (*it++) = 38LLU; (*it++) = 39LLU; (*it++) = 40LLU; (*it++) = 41LLU; (*it++) = 42LLU; (*it++) = 43LLU; (*it++) = 44LLU; (*it++) = 45LLU; (*it++) = 46LLU; (*it++) = 47LLU; (*it++) = 48LLU; (*it++) = 49LLU; (*it++) = 50LLU; (*it++) = 51LLU; (*it++) = 52LLU; (*it++) = 53LLU; (*it++) = 54LLU; (*it++) = 55LLU; (*it++) = 56LLU; (*it++) = 57LLU; (*it++) = 58LLU; (*it++) = 59LLU; (*it++) = 60LLU; (*it++) = 61LLU; (*it++) = 62LLU; (*it++) = 63LLU; (*it++) = 64LLU; (*it++) = 97LLU; (*it++) = 98LLU; (*it++) = 99LLU; (*it++) = 100LLU; (*it++) = 101LLU; (*it++) = 102LLU; (*it++) = 103LLU; (*it++) = 104LLU; (*it++) = 105LLU; (*it++) = 106LLU; (*it++) = 107LLU; (*it++) = 108LLU; (*it++) = 109LLU; (*it++) = 110LLU; (*it++) = 111LLU; (*it++) = 112LLU; (*it++) = 113LLU; (*it++) = 114LLU; (*it++) = 115LLU; (*it++) = 116LLU; (*it++) = 117LLU; (*it++) = 118LLU; (*it++) = 119LLU; (*it++) = 120LLU; (*it++) = 121LLU; (*it++) = 122LLU; (*it++) = 91LLU; (*it++) = 92LLU; (*it++) = 93LLU; (*it++) = 94LLU; (*it++) = 95LLU; (*it++) = 96LLU; (*it++) = 65LLU; (*it++) = 66LLU; (*it++) = 67LLU; (*it++) = 68LLU; (*it++) = 69LLU; (*it++) = 70LLU; (*it++) = 71LLU; (*it++) = 72LLU; (*it++) = 73LLU; (*it++) = 74LLU; (*it++) = 8490LLU; (*it++) = 76LLU; (*it++) = 77LLU; (*it++) = 78LLU; (*it++) = 79LLU; (*it++) = 80LLU; (*it++) = 81LLU; (*it++) = 82LLU; (*it++) = 383LLU; (*it++) = 84LLU; (*it++) = 85LLU; (*it++) = 86LLU; (*it++) = 87LLU; (*it++) = 88LLU; (*it++) = 89LLU; (*it++) = 90LLU; (*it++) = 123LLU; (*it++) = 124LLU; (*it++) = 125LLU; (*it++) = 126LLU; (*it++) = 127LLU; __jule_collection; });
	_1bd422331_caseOrbit = ({ auto __jule_collection = jule::Slice<_1bd4258b7_foldPair>::alloc(88, 88); auto it = __jule_collection.begin(); (*it++) = _1bd4258b7_foldPair{._field_from=75LLU, ._field_to=107LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=83LLU, ._field_to=115LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=107LLU, ._field_to=8490LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=115LLU, ._field_to=383LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=181LLU, ._field_to=924LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=197LLU, ._field_to=229LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=223LLU, ._field_to=7838LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=229LLU, ._field_to=8491LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=304LLU, ._field_to=304LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=305LLU, ._field_to=305LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=383LLU, ._field_to=83LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=452LLU, ._field_to=453LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=453LLU, ._field_to=454LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=454LLU, ._field_to=452LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=455LLU, ._field_to=456LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=456LLU, ._field_to=457LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=457LLU, ._field_to=455LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=458LLU, ._field_to=459LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=459LLU, ._field_to=460LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=460LLU, ._field_to=458LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=497LLU, ._field_to=498LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=498LLU, ._field_to=499LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=499LLU, ._field_to=497LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=837LLU, ._field_to=921LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=914LLU, ._field_to=946LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=917LLU, ._field_to=949LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=920LLU, ._field_to=952LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=921LLU, ._field_to=953LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=922LLU, ._field_to=954LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=924LLU, ._field_to=956LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=928LLU, ._field_to=960LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=929LLU, ._field_to=961LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=931LLU, ._field_to=962LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=934LLU, ._field_to=966LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=937LLU, ._field_to=969LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=946LLU, ._field_to=976LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=949LLU, ._field_to=1013LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=952LLU, ._field_to=977LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=953LLU, ._field_to=8126LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=954LLU, ._field_to=1008LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=956LLU, ._field_to=181LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=960LLU, ._field_to=982LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=961LLU, ._field_to=1009LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=962LLU, ._field_to=963LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=963LLU, ._field_to=931LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=966LLU, ._field_to=981LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=969LLU, ._field_to=8486LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=976LLU, ._field_to=914LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=977LLU, ._field_to=1012LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=981LLU, ._field_to=934LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=982LLU, ._field_to=928LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1008LLU, ._field_to=922LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1009LLU, ._field_to=929LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1012LLU, ._field_to=920LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1013LLU, ._field_to=917LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1042LLU, ._field_to=1074LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1044LLU, ._field_to=1076LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1054LLU, ._field_to=1086LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1057LLU, ._field_to=1089LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1058LLU, ._field_to=1090LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1066LLU, ._field_to=1098LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1074LLU, ._field_to=7296LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1076LLU, ._field_to=7297LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1086LLU, ._field_to=7298LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1089LLU, ._field_to=7299LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1090LLU, ._field_to=7300LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1098LLU, ._field_to=7302LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1122LLU, ._field_to=1123LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=1123LLU, ._field_to=7303LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=7296LLU, ._field_to=1042LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=7297LLU, ._field_to=1044LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=7298LLU, ._field_to=1054LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=7299LLU, ._field_to=1057LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=7300LLU, ._field_to=7301LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=7301LLU, ._field_to=1058LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=7302LLU, ._field_to=1066LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=7303LLU, ._field_to=1122LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=7304LLU, ._field_to=42570LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=7776LLU, ._field_to=7777LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=7777LLU, ._field_to=7835LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=7835LLU, ._field_to=7776LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=7838LLU, ._field_to=223LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=8126LLU, ._field_to=837LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=8486LLU, ._field_to=937LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=8490LLU, ._field_to=75LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=8491LLU, ._field_to=197LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=42570LLU, ._field_to=42571LLU}; (*it++) = _1bd4258b7_foldPair{._field_from=42571LLU, ._field_to=7304LLU}; __jule_collection; });
	_1bbed639c_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_1bbed648a_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_1bc0651c8_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_1bd43e35e_PathStdlib = jule::Str();
	_1bd43e5b2_PathExec = jule::Str();
	_1bd43e848_PathWd = jule::Str();
	_1bd43eb45_PathApi = jule::Str();
	_1bd43eded_OS = jule::Str::lit("windows", 7);
	_1bd4401a6_Arch = jule::Str::lit("i386", 4);
	_1bd443c37_Compiler = jule::Str();
	_1bd445134_CompilerPath = jule::Str();
	_1bd445343_CppStd = jule::Str::lit("cpp17", 5);
	_1bd4455da_Shadowing = false;
	_1bd445893_Transpilation = false;
	_1bd445b4b_Test = false;
	_1bd445e04_RC = true;
	_1bd4462bc_Safety = true;
	_1bd44650e_Production = false;
	_1a49db35e_f32info = _1a49dae96_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1a49db65b_f64info = _1a49dae96_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1a49e407b_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1a49e5cd6_powtab = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1a49e6897_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1a49e6bc7_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1a49e9dc8_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1a49ee097_leftCheats = ({ auto __jule_collection = jule::Slice<_1a49edb68_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1a49edb68_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1a49edb68_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1a49edb68_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1a49edb68_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1a49edb68_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1a49edb68_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1a49edb68_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1a49edb68_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1a49edb68_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1a49edb68_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1a49edb68_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1a49edb68_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1a49edb68_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1a49edb68_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1a49edb68_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1a49edb68_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1a49edb68_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1a49edb68_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1a49edb68_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1a49edb68_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1a49edb68_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1a49edb68_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1a49edb68_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1a49edb68_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1a49edb68_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1a49edb68_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1a49edb68_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1a49edb68_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1a49edb68_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1a49edb68_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1a49edb68_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1a49edb68_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1a49edb68_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1a49edb68_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1a49edb68_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1a49edb68_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1a49edb68_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1a49edb68_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1a49edb68_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1a49edb68_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1a49edb68_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1a49edb68_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1a49edb68_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1a49edb68_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1a49edb68_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1a49edb68_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1a49edb68_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1a49edb68_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1a49edb68_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1a49edb68_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1a49edb68_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1a49edb68_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1a49edb68_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1a49edb68_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1a49edb68_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1a49edb68_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1a49edb68_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1a49edb68_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1a49edb68_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1a49edb68_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1a49edb68_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1a78b0461_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1a78b0670_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U32,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(68LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(65LLU); __jule_collection; });
	_1a78b094a_BinOps = ({ auto __jule_collection = jule::Array<jule::U32,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(63LLU); (*it++) = static_cast<jule::U32>(64LLU); (*it++) = static_cast<jule::U32>(65LLU); (*it++) = static_cast<jule::U32>(66LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(56LLU); (*it++) = static_cast<jule::U32>(57LLU); (*it++) = static_cast<jule::U32>(69LLU); (*it++) = static_cast<jule::U32>(70LLU); (*it++) = static_cast<jule::U32>(53LLU); (*it++) = static_cast<jule::U32>(52LLU); (*it++) = static_cast<jule::U32>(54LLU); (*it++) = static_cast<jule::U32>(55LLU); (*it++) = static_cast<jule::U32>(50LLU); (*it++) = static_cast<jule::U32>(51LLU); __jule_collection; });
	_1a795c893_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U32,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(58LLU); (*it++) = static_cast<jule::U32>(59LLU); __jule_collection; });
	_1a795cb7e_AssignOps = ({ auto __jule_collection = jule::Array<jule::U32,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(71LLU); (*it++) = static_cast<jule::U32>(40LLU); (*it++) = static_cast<jule::U32>(41LLU); (*it++) = static_cast<jule::U32>(43LLU); (*it++) = static_cast<jule::U32>(42LLU); (*it++) = static_cast<jule::U32>(44LLU); (*it++) = static_cast<jule::U32>(46LLU); (*it++) = static_cast<jule::U32>(45LLU); (*it++) = static_cast<jule::U32>(49LLU); (*it++) = static_cast<jule::U32>(48LLU); (*it++) = static_cast<jule::U32>(47LLU); __jule_collection; });
	_1a796b671_keywords = ({ auto __jule_collection = jule::Array<_1a796b286_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U32>(6LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U32>(2LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U32>(7LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U32>(9LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U32>(10LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U32>(11LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U32>(12LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U32>(13LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U32>(14LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U32>(16LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U32>(18LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U32>(20LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U32>(21LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U32>(22LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U32>(23LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U32>(24LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U32>(25LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U32>(26LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U32>(27LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U32>(28LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U32>(29LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U32>(30LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U32>(31LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U32>(32LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U32>(33LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U32>(34LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U32>(36LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U32>(37LLU)}; __jule_collection; });
	_1a796b9a1_basicOps = ({ auto __jule_collection = jule::Array<_1a796b286_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U32>(19LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U32>(38LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U32>(8LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U32>(3LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U32>(5LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U32>(39LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U32>(17LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U32>(40LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U32>(41LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U32>(42LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U32>(43LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U32>(44LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U32>(45LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U32>(46LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U32>(47LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U32>(48LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U32>(49LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U32>(50LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U32>(51LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U32>(52LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U32>(53LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U32>(54LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U32>(55LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U32>(56LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U32>(57LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U32>(58LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U32>(59LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U32>(60LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U32>(61LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U32>(62LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U32>(63LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U32>(64LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U32>(65LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U32>(66LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U32>(67LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U32>(68LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U32>(69LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U32>(70LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U32>(71LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U32>(35LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U32>(72LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U32>(73LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U32>(76LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U32>(77LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U32>(74LLU)}; (*it++) = _1a796b286_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U32>(75LLU)}; __jule_collection; });
	_1a7ae5388_BitSize = 0LL;
	_1a7ae55ec_SysInt = jule::Str();
	_1a7ae58a5_SysUint = jule::Str();
	_1a7b2660b_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_1a7ca624c_primNil = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1a7ca6549_primVoid = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca6802_primAny = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca6aee_primStr = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca6da7_primBool = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca7160_primUintptr = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca7418_primUint = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca77d1_primInt = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca7a23_primI8 = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca7cba_primI16 = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca8073_primI32 = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca832b_primI64 = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca85d4_primU8 = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca888c_primU16 = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca8b45_primU32 = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca912e_primU64 = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca9371_primF32 = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a7ca9580_primF64 = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a7c5015d_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)});
	_1a860157a_ProgramMeta = static_cast<jule::Ptr<_1a86037ad_Meta>>(nullptr);
	_1a9121c48_emptyData = jule::new_ptr<_1a91225a6_data>(_1a91225a6_data{._field_boundary=jule::Ptr<_1a9124861_boundary>(nullptr), ._field_nils=jule::Ptr<_1a69a6624_nils>(nullptr), ._field_dynamic=jule::Ptr<_1a911e97c_dynamic>(nullptr)});
	_1a9127600_Copy = false;
	_1a91278ec_Deadcode = false;
	_1a9127ba5_Append = false;
	_1a9127ea2_Math = false;
	_1a912825a_Access = false;
	_1a9128513_Inline = false;
	_1a91287bb_Ptr = false;
	_1a9128b84_Cond = false;
	_1a9128dc6_Str = false;
	_1a912916d_Slice = false;
	_1a9129426_Assign = false;
	_1a91296ce_Exceptional = false;
	_1a9129987_Iter = false;
	_1a9129c40_Dynamic = false;
	_1a9129ee8_Array = false;
	_1a912a4d2_Len = false;
	_1a912a724_StdStrings = false;
	_1a912a933_StdMathCmplx = false;
	_1a920cae2_exprEnabled = false;
	_1a920cd01_scopeEnabled = false;
	_1aa888c83_mdays = ({ auto __jule_collection = jule::Array<jule::I32,12>(); auto it = __jule_collection.begin(); (*it++) = 31LL; (*it++) = 30LL; (*it++) = 31LL; (*it++) = 30LL; (*it++) = 31LL; (*it++) = 31LL; (*it++) = 30LL; (*it++) = 31LL; (*it++) = 30LL; (*it++) = 31LL; (*it++) = 31LL; (*it++) = 29LL; __jule_collection; });
	_1a921184e_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1aa8949b4_generalGCPtr = jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c3ed95_Sptr>(_1a7c3ed95_Sptr{._field_Elem=jule::new_ptr<_1a7c3255d_Type>(_1a7c3255d_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7c3b369_Prim>(_1a7c3b369_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1a7c32184_Kind_mptr_data23)});
	_1bd41eb8b_CaseRanges = _1bd41ee77__CaseRanges;

	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	_1bd448eb2_main();

	return EXIT_SUCCESS;
}