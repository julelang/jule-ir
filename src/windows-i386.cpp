// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 1/9/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _2233e2d5c_acceptRange;
struct _2234c269a_StrBuilder;
struct _224651130_Range16;
struct _22465165d_Range32;
struct _224651ad1_RangeTable;
struct _22469d952_lazyBuff;
struct _2232d7a65_DirEntry;
struct _2232d7ceb_Directory;
struct _2232d8eea_File;
struct _2232db12e_Status;
struct _22480a196_cmdAttrs;
struct _224743e15_Log;
struct _20a291471_floatInfo;
struct _20a2920ed_decimalSlice;
struct _20a2a4341_leftCheat;
struct _20a2a4d58_decimal;
struct _20a2b7552_Const;
struct _1a875ce89_Token;
struct _1a8763720_File;
struct _1a8765876_kindPair;
struct _1a876b85a_lex;
struct _1a87715a7_Ast;
struct _1a8772564_Node;
struct _1a8772982_Directive;
struct _1a8773565_TypeDecl;
struct _1a8773b70_IdentTypeDecl;
struct _1a8773e39_SubIdentTypeDecl;
struct _1a8774313_NamespaceTypeDecl;
struct _1a8774610_SptrTypeDecl;
struct _1a8774995_SlcTypeDecl;
struct _1a8774c92_TupleTypeDecl;
struct _1a877508e_PtrTypeDecl;
struct _1a8775831_ArrTypeDecl;
struct _1a877607e_MapTypeDecl;
struct _1a8776458_RetTypeDecl;
struct _1a8777899_Expr;
struct _1a8777b63_RangeExpr;
struct _1a877826d_UseExpr;
struct _1a877848d_TupleExpr;
struct _1a8778834_LitExpr;
struct _1a8778c0d_UnsafeExpr;
struct _1a87791b4_IdentExpr;
struct _1a8779956_UnaryExpr;
struct _1a8779d30_VariadicExpr;
struct _1a877a209_CastExpr;
struct _1a877a5d3_NsSelectionExpr;
struct _1a877a9ac_SubIdentExpr;
struct _1a877ae63_BinaryExpr;
struct _1a877b5c3_FnCallExpr;
struct _1a877c0b8_FieldExprPair;
struct _1a877c8e3_StructLit;
struct _1a877cd99_BraceLit;
struct _1a877d6c4_KeyValPair;
struct _1a877de00_SliceExpr;
struct _1a877e85c_IndexingExpr;
struct _1a877eebc_SlicingExpr;
struct _1a87802b9_Constraint;
struct _1a8780770_GenericDecl;
struct _1a8780b49_LabelSt;
struct _1a8781023_GotoSt;
struct _1a8781320_FallSt;
struct _1a8781980_AssignLeft;
struct _1a8782013_AssignSt;
struct _1a8782e26_Stmt;
struct _1a8783586_ScopeTree;
struct _1a8783cc3_ParamDecl;
struct _1a8785225_FnDecl;
struct _1a87863d0_VarDecl;
struct _1a87867a9_RetSt;
struct _1a8787029_Iter;
struct _1a8787854_WhileKind;
struct _1a878825b_RangeKind;
struct _1a8788635_BreakSt;
struct _1a8788a0e_ContSt;
struct _1a8788eb5_If;
struct _1a878938e_Else;
struct _1a8789845_Conditional;
struct _1a878a082_TypeAliasDecl;
struct _1a878a538_Case;
struct _1a878ad52_MatchCase;
struct _1a8d1e12c_UseDecl;
struct _1a8d1e5d3_EnumItemDecl;
struct _1a8d20194_EnumDecl;
struct _1a8d209be_TypeEnumItemDecl;
struct _1a8d2112e_TypeEnumDecl;
struct _1a8d213e8_FieldDecl;
struct _1a8d21cde_StructDecl;
struct _1a8d2252b_TraitDecl;
struct _1a8d22b8b_Impl;
struct _1a8d24000_Field;
struct _1a8d26013_Operators;
struct _1a8d26e26_Struct;
struct _1a8d29104_FieldIns;
struct _1a8d2db53_OperandExprModel;
struct _1a8d2e14d_BinaryExprModel;
struct _1a8d2e527_UnaryExprModel;
struct _1a8d2ea55_StructArgExprModel;
struct _1a8d2edeb_StructLitExprModel;
struct _1a8d301e8_AllocStructLitExprModel;
struct _1a8d3077b_CastingExprModel;
struct _1a8d3112d_FnCallExprModel;
struct _1a8d31507_SliceExprModel;
struct _1a8d319ad_IndexingExprModel;
struct _1a8d31e64_AnonFnExprModel;
struct _1a8d3233d_KeyValPairExprModel;
struct _1a8d327e4_MapExprModel;
struct _1a8d32d77_SlicingExprModel;
struct _1a8d3340a_TraitSubIdentExprModel;
struct _1a8d33c9b_StructSubIdentExprModel;
struct _1a8d34142_StructStaticIdentExprModel;
struct _1a8d3451b_ArrayExprModel;
struct _1a8d34818_TupleExprModel;
struct _1a8d34be2_BuiltinOutCallExprModel;
struct _1a8d350bb_BuiltinOutlnCallExprModel;
struct _1a8d35495_BuiltinNewCallExprModel;
struct _1a8d3586e_BuiltinPanicCallExprModel;
struct _1a8d35d25_BuiltinAssertCallExprModel;
struct _1a8d362cb_BuiltinMakeCallExprModel;
struct _1a8d366a5_BuiltinAppendCallExprModel;
struct _1a8d369a2_BuiltinLenCallExprModel;
struct _1a8d36c9e_BuiltinCapCallExprModel;
struct _1a8d37178_BuiltinDeleteCallExprModel;
struct _1a8d37552_BuiltinCopyCallExprModel;
struct _1a8d3792b_BuiltinErrorCallExprModel;
struct _1a8d380d0_SizeofExprModel;
struct _1a8d382bc_AlignofExprModel;
struct _1a8d38564_RuneExprModel;
struct _1a8d38861_IntegratedToStrExprModel;
struct _1a8d38c3a_BackendEmitExprModel;
struct _1a8d39037_FreeExprModel;
struct _1a8d39c3b_RetType;
struct _1a8d3a4bc_Param;
struct _1a8d3be91_Fn;
struct _1a8d3dde9_ParamIns;
struct _1a8d3ee72_FnIns;
struct _1a8d43151_ReferenceStack;
struct _1a8d4465d_Pass;
struct _1a8d49113_symbolBuilder;
struct _1a8d5034a_Trait;
struct _1a8d51ed9_EnumItem;
struct _1a8d52a56_Enum;
struct _1a8d53b89_TypeEnumItem;
struct _1a8d54261_TypeEnum;
struct _1a8d573b8_comptimeRange;
struct _1a8d57d8b_comptimeStructField;
struct _1a8d59a4c_comptimeStructFields;
struct _1a8d5b147_comptimeStatic;
struct _1a8d5cd08_comptimeStatics;
struct _1a8d5e403_comptimeEnumField;
struct _1a8d6079a_comptimeEnumFields;
struct _1a8d61d95_comptimeParam;
struct _1a8d6402e_comptimeParams;
struct _1a8d655e6_comptimeTypeInfos;
struct _1a8d66be1_comptimeTypeInfo;
struct _1a8d6d203_comptimeValue;
struct _1a8d70a52_comptimeFiles;
struct _1a8d7214c_comptimeFile;
struct _1a8d7665c_constraintChecker;
struct _1a8d789b1_Impl;
struct _1a8d7de17_Scope;
struct _1a8d7e335_If;
struct _1a8d7e632_Else;
struct _1a8d7ea50_Conditional;
struct _1a8d7ed4c_InfIter;
struct _1a8d80303_WhileIter;
struct _1a8d80c4e_RangeIter;
struct _1a8d810d4_ContSt;
struct _1a8d814ad_BreakSt;
struct _1a8d817aa_Label;
struct _1a8d81b84_GotoSt;
struct _1a8d8205d_Postfix;
struct _1a8d82514_Assign;
struct _1a8d829ba_MultiAssign;
struct _1a8d8312a_Match;
struct _1a8d83b53_Case;
struct _1a8d8434b_FallSt;
struct _1a8d846e2_RetSt;
struct _1a8d84d52_scopeLabel;
struct _1a8d853d5_scopeGoto;
struct _1a8d863c5_scopeChecker;
struct _1a8d99a04_directiveChecker;
struct _1a8da0ea0_ImportInfo;
struct _1a8da3dc6_Package;
struct _1a8dc073e_commonSemaMeta;
struct _1a8dc1344_Sema;
struct _1a8de1012_missingRetChecker;
struct _1a8de41ad_Var;
struct _1a8de5038_FuncPattern;
struct _1a8e3397d_typeCompatibilityChecker;
struct _1a8e3572c_assignTypeChecker;
struct _1a8e37102_dynamicTypeAnnotation;
struct _1a8e3be5e_fnCallArgChecker;
struct _1a8e3ed96_structLitChecker;
struct _1a8e41b78_rangeChecker;
struct _1a8e443d9_retTypeChecker;
struct _1a8e4694c_SymbolTable;
struct _1a8e4bcb5_Data;
struct _1a8e4ce3c_Value;
struct _1a8e4d9dc_Eval;
struct _1a8e6c214_unaryEval;
struct _1a8e6e1a0_binaryEval;
struct _1a8e81635_InsGeneric;
struct _1a8e82229_TypeAlias;
struct _1a8e8301b_TypeKind;
struct _1a8e8a1dd_TypeSymbol;
struct _1a8e8aae5_Prim;
struct _1a8e8e621_Sptr;
struct _1a8e900e4_Slc;
struct _1a8e90bd8_Tuple;
struct _1a8e91788_Map;
struct _1a8e92415_Arr;
struct _1a8e92dd8_Ptr;
struct _1a8e93dd9_referencer;
struct _1a8e94dc9_typeChecker;
struct _1a8e9ca80_identTypeLookup;
struct _1a98a065d_FileInfo;
struct _1a98e63b8_stmt;
struct _1a98e6c59_scopeParser;
struct _20a093c24_exprBuilder;
struct _20a0a14b2_assignInfo;
struct _20a0a48b1_parser;
struct _1a98ec8b9_typeBuilder;
struct _1a9192901_CompileInfo;
struct _1a9193dca_directiveEval;
struct _1a9901a99_JuleImporter;
struct _1a9906cad_OrderedDefines;
struct _1a9907044_defineOrderer;
struct _1a9a6a3d8_liveTable;
struct _1a9a700e1_scopeDeadCode;
struct _1a9a7437b_exprDeadCode;
struct _1a90767e6_ExceptionalForwardingExprModel;
struct _1a9076b6a_SwapExprModel;
struct _1a9077044_EmptyCompareExprModel;
struct _1a90773b8_RefExprModel;
struct _1a907783b_StrCompExprModel;
struct _1a9077dbe_MutSlicingExprModel;
struct _1a90781bb_UnsafeBinaryExprModel;
struct _1a9078551_UnsafeIndexingExprModel;
struct _1a907892a_PushToSliceExprModel;
struct _1a9078d04_AppendToSliceExprModel;
struct _1a90791cd_StrRuneIter;
struct _1a90794ca_UnsafeDerefExprModel;
struct _1a90797c7_UnsafeCastingExprModel;
struct _1a907a4a9_nilVar;
struct _1a907a7ea_nils;
struct _1a907d578_scopeOptimizer;
struct _1a90853c6_exprOptimizer;
struct _1a908ec93_dynamicVar;
struct _1a90900d4_dynamic;
struct _1a909302c_data;
struct _1a90945d3_boundaryVar;
struct _1a9094924_boundary;
struct _1a9a7b41b_Optimizer;
struct _1a9aa913b_AnsiEscape;
struct _1a9aaa6ae_Logger;
struct _1aa2d42d3_AbsTime;
struct _1aa2d49a9_Time;
struct _1aa20da15_scopeCoder;
struct _1aa218ed7_exprCoder;
struct _1aa22a405_TestCoder;
struct _1aa22d21b_identCoder;
struct _1aa2dd287_SerializationInfo;
struct _1aa2dd85e_traitHash;
struct _1aa2ddc38_traitCast;
struct _1aa2de156_anonHash;
struct _1aa300e26_customType;
struct _1aa301a3c_typeCoder;
struct _1aa309627_resultCoder;
struct _1add21602_Flag;
struct _1add251a5_Flag;
struct _1add28818_Flag;
struct _1add2bec0_Flag;
struct _1add30633_Flag;
struct _1aa374b48_FlagSet;
struct _1aa37760c_argParser;
struct _1aa2e0586_ObjectCoder;
struct _1a9092a32_dataCheckpoint;
struct _1a9a6a806_ObjectDeadCode;
struct _1a990452a_IR;
struct _1a8d29ba4_StructIns;
struct _224805e50_Cmd;
struct _2233e2d5c_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_2233e2d5c_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_2233e2d5c_acceptRange _other) { return !this->operator==(_other); }


};
struct _2234c269a_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _224651130_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_224651130_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_224651130_Range16 _other) { return !this->operator==(_other); }


};
struct _22465165d_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_22465165d_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22465165d_Range32 _other) { return !this->operator==(_other); }


};
struct _224651ad1_RangeTable {
	jule::Slice<_224651130_Range16> _field_R16;
	jule::Slice<_22465165d_Range32> _field_R32;
	jule::I32 _field_LatinOffset = 0;
	


};
struct _22469d952_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen = 0;
	


};
struct _2232d7a65_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_2232db12e_Status> _field_Stat;
	

	inline bool operator==(_2232d7a65_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_2232d7a65_DirEntry _other) { return !this->operator==(_other); }


};
struct _2232d7ceb_Directory {
	

	inline bool operator==(_2232d7ceb_Directory _other) { return true; }

	inline bool operator!=(_2232d7ceb_Directory _other) { return !this->operator==(_other); }


};
struct _2232d8eea_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_2232d8eea_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_2232d8eea_File _other) { return !this->operator==(_other); }


};
struct _2232db12e_Status {
	jule::I32 _field_mode = 0LL;
	jule::U32 _field_size = 0;
	

	inline bool operator==(_2232db12e_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_2232db12e_Status _other) { return !this->operator==(_other); }


};
struct _22480a196_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	inline bool operator==(_22480a196_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_22480a196_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _224743e15_Log {
	jule::I32 _field_Kind = 0LL;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_224743e15_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_224743e15_Log _other) { return !this->operator==(_other); }


};
struct _20a291471_floatInfo {
	jule::U32 _field_mantbits = 0;
	jule::U32 _field_expbits = 0;
	jule::I32 _field_bias = 0;
	

	inline bool operator==(_20a291471_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_20a291471_floatInfo _other) { return !this->operator==(_other); }


};
struct _20a2920ed_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _20a2a4341_leftCheat {
	jule::I32 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_20a2a4341_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_20a2a4341_leftCheat _other) { return !this->operator==(_other); }


};
struct _20a2a4d58_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_20a2a4d58_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_20a2a4d58_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _20a2bd107_Eq(_20a2b7552_Const* _self_, _20a2b7552_Const _26017_x);
inline jule::Bool _20a2bd448_Lt(_20a2b7552_Const* _self_, _20a2b7552_Const _28717_x);
inline jule::Bool _20a2bd789_LtEq(_20a2b7552_Const* _self_, _20a2b7552_Const _31019_x);
inline jule::Bool _20a2bdaca_Gt(_20a2b7552_Const* _self_, _20a2b7552_Const _33317_x);
inline jule::Bool _20a2bde1b_GtEq(_20a2b7552_Const* _self_, _20a2b7552_Const _35619_x);
struct _20a2b7552_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_20a2b7552_Const _other) { return _20a2bd107_Eq(this, _other); }

	inline bool operator!=(_20a2b7552_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_20a2b7552_Const _other) { return _20a2bdaca_Gt(this, _other); }

	inline jule::Bool operator>=(_20a2b7552_Const _other) { return _20a2bde1b_GtEq(this, _other); }

	inline jule::Bool operator<(_20a2b7552_Const _other) { return _20a2bd448_Lt(this, _other); }

	inline jule::Bool operator<=(_20a2b7552_Const _other) { return _20a2bd789_LtEq(this, _other); }


};
struct _1a875ce89_Token {
	jule::Ptr<_1a8763720_File> _field_File;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U32 _field_Id = 0LLU;
	

	inline bool operator==(_1a875ce89_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1a875ce89_Token _other) { return !this->operator==(_other); }


};
struct _1a8763720_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _field_Tokens;
	


};
struct _1a8765876_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U32 _field_id = 0LLU;
	

	inline bool operator==(_1a8765876_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1a8765876_kindPair _other) { return !this->operator==(_other); }


};
struct _1a876b85a_lex {
	jule::I32 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _field_tokens;
	jule::Ptr<_1a8763720_File> _field_file;
	jule::I32 _field_pos = 0;
	jule::I32 _field_column = 0;
	jule::I32 _field_row = 0;
	jule::Slice<_224743e15_Log> _field_errors;
	


};
struct _1a87715a7_Ast {
	jule::Ptr<_1a8763720_File> _field_File;
	jule::Slice<jule::Ptr<_1a8772982_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1a8d1e12c_UseDecl>> _field_UseDecls;
	jule::Slice<_1a8772564_Node> _field_Nodes;
	


};
struct _1a8772564_Node {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1a8772564_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a8772564_Node _other) { return !this->operator==(_other); }


};
struct _1a8772982_Directive {
	jule::Ptr<_1a875ce89_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _field_Args;
	


};
struct _1a8773565_TypeDecl {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1a8773565_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a8773565_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1a8773b70_IdentTypeDecl {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> _field_Generics;
	


};
struct _1a8773e39_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1a8773b70_IdentTypeDecl>> _field_Idents;
	


};
struct _1a8774313_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _field_Idents;
	jule::Ptr<_1a8773565_TypeDecl> _field_Kind;
	


};
struct _1a8774610_SptrTypeDecl {
	jule::Ptr<_1a8773565_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a8774610_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a8774610_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a8774995_SlcTypeDecl {
	jule::Ptr<_1a8773565_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a8774995_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a8774995_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a8774c92_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> _field_Types;
	


};
struct _1a877508e_PtrTypeDecl {
	jule::Ptr<_1a8773565_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a877508e_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a877508e_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a8775831_ArrTypeDecl {
	jule::Ptr<_1a8773565_TypeDecl> _field_Elem;
	jule::Ptr<_1a8777899_Expr> _field_Size;
	

	inline bool operator==(_1a8775831_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1a8775831_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a877607e_MapTypeDecl {
	jule::Ptr<_1a8773565_TypeDecl> _field_Key;
	jule::Ptr<_1a8773565_TypeDecl> _field_Val;
	

	inline bool operator==(_1a877607e_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a877607e_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a8776458_RetTypeDecl {
	jule::Ptr<_1a8773565_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _field_Idents;
	


};
struct _1a8777899_Expr {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a875ce89_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1a8777899_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a8777899_Expr _other) { return !this->operator==(_other); }


};
struct _1a8777b63_RangeExpr {
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	

	inline bool operator==(_1a8777b63_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8777b63_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1a877826d_UseExpr {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	

	inline bool operator==(_1a877826d_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a877826d_UseExpr _other) { return !this->operator==(_other); }


};
struct _1a877848d_TupleExpr {
	jule::Slice<jule::Ptr<_1a8777899_Expr>> _field_Expr;
	


};
struct _1a8778834_LitExpr {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1a8778834_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a8778834_LitExpr _other) { return !this->operator==(_other); }


};
struct _1a8778c0d_UnsafeExpr {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	

	inline bool operator==(_1a8778c0d_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8778c0d_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1a87791b4_IdentExpr {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1a87791b4_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1a87791b4_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1a8779956_UnaryExpr {
	jule::Ptr<_1a875ce89_Token> _field_Op;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	

	inline bool operator==(_1a8779956_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8779956_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1a8779d30_VariadicExpr {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	

	inline bool operator==(_1a8779d30_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8779d30_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1a877a209_CastExpr {
	jule::Ptr<_1a8773565_TypeDecl> _field_Kind;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	

	inline bool operator==(_1a877a209_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a877a209_CastExpr _other) { return !this->operator==(_other); }


};
struct _1a877a5d3_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _field_Ns;
	jule::Ptr<_1a875ce89_Token> _field_Ident;
	


};
struct _1a877a9ac_SubIdentExpr {
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	jule::Ptr<_1a875ce89_Token> _field_Ident;
	

	inline bool operator==(_1a877a9ac_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a877a9ac_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1a877ae63_BinaryExpr {
	jule::Ptr<_1a8777899_Expr> _field_Left;
	jule::Ptr<_1a8777899_Expr> _field_Right;
	jule::Ptr<_1a875ce89_Token> _field_Op;
	

	inline bool operator==(_1a877ae63_BinaryExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a877ae63_BinaryExpr _other) { return !this->operator==(_other); }


};
struct _1a877b5c3_FnCallExpr {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a8777899_Expr>> _field_Args;
	jule::Ptr<_1a8783586_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1a877c0b8_FieldExprPair {
	jule::Ptr<_1a875ce89_Token> _field_Field;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	

	inline bool operator==(_1a877c0b8_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a877c0b8_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1a877c8e3_StructLit {
	jule::Ptr<_1a875ce89_Token> _field_End;
	jule::Ptr<_1a8773565_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a8777899_Expr>> _field_Exprs;
	


};
struct _1a877cd99_BraceLit {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a875ce89_Token> _field_End;
	jule::Slice<jule::Ptr<_1a8777899_Expr>> _field_Exprs;
	


};
struct _1a877d6c4_KeyValPair {
	jule::Ptr<_1a8777899_Expr> _field_Key;
	jule::Ptr<_1a8777899_Expr> _field_Val;
	jule::Ptr<_1a875ce89_Token> _field_Colon;
	

	inline bool operator==(_1a877d6c4_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1a877d6c4_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1a877de00_SliceExpr {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a875ce89_Token> _field_End;
	jule::Slice<jule::Ptr<_1a8777899_Expr>> _field_Exprs;
	


};
struct _1a877e85c_IndexingExpr {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a875ce89_Token> _field_End;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	jule::Ptr<_1a8777899_Expr> _field_Index;
	

	inline bool operator==(_1a877e85c_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a877e85c_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1a877eebc_SlicingExpr {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a875ce89_Token> _field_End;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	jule::Ptr<_1a8777899_Expr> _field_Start;
	jule::Ptr<_1a8777899_Expr> _field_To;
	

	inline bool operator==(_1a877eebc_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1a877eebc_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1a87802b9_Constraint {
	jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> _field_Mask;
	


};
struct _1a8780770_GenericDecl {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a87802b9_Constraint> _field_Constraint;
	

	inline bool operator==(_1a8780770_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1a8780770_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1a8780b49_LabelSt {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a8780b49_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a8780b49_LabelSt _other) { return !this->operator==(_other); }


};
struct _1a8781023_GotoSt {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a875ce89_Token> _field_Label;
	

	inline bool operator==(_1a8781023_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a8781023_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a8781320_FallSt {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	

	inline bool operator==(_1a8781320_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1a8781320_FallSt _other) { return !this->operator==(_other); }


};
struct _1a8781980_AssignLeft {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	

	inline bool operator==(_1a8781980_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8781980_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1a8782013_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1a875ce89_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1a8781980_AssignLeft>> _field_Left;
	jule::Ptr<_1a8777899_Expr> _field_Right;
	


};
struct _1a8782e26_Stmt {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1a8782e26_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a8782e26_Stmt _other) { return !this->operator==(_other); }


};
struct _1a8783586_ScopeTree {
	jule::Ptr<_1a8783586_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1a8782e26_Stmt> _field_Stmts;
	jule::Ptr<_1a875ce89_Token> _field_End;
	


};
struct _1a8783cc3_ParamDecl {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a8773565_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a8783cc3_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a8783cc3_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1a8785225_FnDecl {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a8772982_Directive>> _field_Directives;
	jule::Ptr<_1a8783586_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a8780770_GenericDecl>> _field_Generics;
	jule::Ptr<_1a8776458_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1a8783cc3_ParamDecl>> _field_Params;
	


};
struct _1a87863d0_VarDecl {
	jule::Ptr<_1a8783586_ScopeTree> _field_Scope;
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a875ce89_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1a8772982_Directive>> _field_Directives;
	jule::Ptr<_1a8773565_TypeDecl> _field_Kind;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	


};
struct _1a87867a9_RetSt {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	

	inline bool operator==(_1a87867a9_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a87867a9_RetSt _other) { return !this->operator==(_other); }


};
struct _1a8787029_Iter {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1a8783586_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a8787029_Iter _other) {
		return 
			this->_field_Comptime == _other._field_Comptime &&
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a8787029_Iter _other) { return !this->operator==(_other); }


};
struct _1a8787854_WhileKind {
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1a875ce89_Token> _field_NextToken;
	

	inline bool operator==(_1a8787854_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1a8787854_WhileKind _other) { return !this->operator==(_other); }


};
struct _1a878825b_RangeKind {
	jule::Ptr<_1a875ce89_Token> _field_InToken;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	jule::Ptr<_1a87863d0_VarDecl> _field_KeyA;
	jule::Ptr<_1a87863d0_VarDecl> _field_KeyB;
	

	inline bool operator==(_1a878825b_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a878825b_RangeKind _other) { return !this->operator==(_other); }


};
struct _1a8788635_BreakSt {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a875ce89_Token> _field_Label;
	

	inline bool operator==(_1a8788635_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a8788635_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a8788a0e_ContSt {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a875ce89_Token> _field_Label;
	

	inline bool operator==(_1a8788a0e_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a8788a0e_ContSt _other) { return !this->operator==(_other); }


};
struct _1a8788eb5_If {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	jule::Ptr<_1a8783586_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a8788eb5_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a8788eb5_If _other) { return !this->operator==(_other); }


};
struct _1a878938e_Else {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a8783586_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a878938e_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a878938e_Else _other) { return !this->operator==(_other); }


};
struct _1a8789845_Conditional {
	jule::Ptr<_1a8788eb5_If> _field_Head;
	jule::Slice<jule::Ptr<_1a8788eb5_If>> _field_Tail;
	jule::Ptr<_1a878938e_Else> _field_Default;
	


};
struct _1a878a082_TypeAliasDecl {
	jule::Ptr<_1a8783586_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a8773565_TypeDecl> _field_Kind;
	

	inline bool operator==(_1a878a082_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a878a082_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1a878a538_Case {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a8783586_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a8777899_Expr>> _field_Exprs;
	


};
struct _1a878ad52_MatchCase {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a875ce89_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a878a538_Case>> _field_Cases;
	jule::Ptr<_1a878938e_Else> _field_Default;
	


};
struct _1a8d1e12c_UseDecl {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1a8d1e5d3_EnumItemDecl {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	

	inline bool operator==(_1a8d1e5d3_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8d1e5d3_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1a8d20194_EnumDecl {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a8773565_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a8d1e5d3_EnumItemDecl>> _field_Items;
	jule::Ptr<_1a875ce89_Token> _field_End;
	


};
struct _1a8d209be_TypeEnumItemDecl {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a8773565_TypeDecl> _field_Kind;
	

	inline bool operator==(_1a8d209be_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a8d209be_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1a8d2112e_TypeEnumDecl {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a8d209be_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1a875ce89_Token> _field_End;
	


};
struct _1a8d213e8_FieldDecl {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a8773565_TypeDecl> _field_Kind;
	jule::Ptr<_1a8777899_Expr> _field_Default;
	

	inline bool operator==(_1a8d213e8_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a8d213e8_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1a8d21cde_StructDecl {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a875ce89_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a8d213e8_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a8772982_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a8780770_GenericDecl>> _field_Generics;
	


};
struct _1a8d2252b_TraitDecl {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a875ce89_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a8785225_FnDecl>> _field_Methods;
	


};
struct _1a8d22b8b_Impl {
	jule::Ptr<_1a875ce89_Token> _field_End;
	jule::Ptr<_1a8773565_TypeDecl> _field_Base;
	jule::Ptr<_1a8773565_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a8785225_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1a87863d0_VarDecl>> _field_Statics;
	


};
struct _1a8d24000_Field {
	jule::Ptr<_1a8d26e26_Struct> _field_Owner;
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a8e8a1dd_TypeSymbol> _field_Kind;
	jule::Ptr<_1a8777899_Expr> _field_Default;
	

	inline bool operator==(_1a8d24000_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a8d24000_Field _other) { return !this->operator==(_other); }


};
struct _1a8d26013_Operators {
	jule::Ptr<_1a8d3ee72_FnIns> _field_Eq;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Gt;
	jule::Ptr<_1a8d3ee72_FnIns> _field_GtEq;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Lt;
	jule::Ptr<_1a8d3ee72_FnIns> _field_LtEq;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Shl;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Shr;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Add;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Sub;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Div;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Mul;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Mod;
	jule::Ptr<_1a8d3ee72_FnIns> _field_BitAnd;
	jule::Ptr<_1a8d3ee72_FnIns> _field_BitOr;
	jule::Ptr<_1a8d3ee72_FnIns> _field_BitXor;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Neg;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Pos;
	jule::Ptr<_1a8d3ee72_FnIns> _field_BitNot;
	jule::Ptr<_1a8d3ee72_FnIns> _field_AddAssign;
	jule::Ptr<_1a8d3ee72_FnIns> _field_SubAssign;
	jule::Ptr<_1a8d3ee72_FnIns> _field_DivAssign;
	jule::Ptr<_1a8d3ee72_FnIns> _field_MulAssign;
	jule::Ptr<_1a8d3ee72_FnIns> _field_ModAssign;
	jule::Ptr<_1a8d3ee72_FnIns> _field_ShlAssign;
	jule::Ptr<_1a8d3ee72_FnIns> _field_ShrAssign;
	jule::Ptr<_1a8d3ee72_FnIns> _field_BitOrAssign;
	jule::Ptr<_1a8d3ee72_FnIns> _field_BitAndAssign;
	jule::Ptr<_1a8d3ee72_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1a8d26013_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1a8d26013_Operators _other) { return !this->operator==(_other); }


};
struct _1a8d26e26_Struct {
	jule::Ptr<_1a8dc1344_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1a8d26e26_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1a8d26e26_Struct>> _field_Uses;
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a8d24000_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1a8d3be91_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a8772982_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a8780770_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1a8d5034a_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1a8d29ba4_StructIns>> _field_Instances;
	


};
struct _1a8d29104_FieldIns {
	jule::Ptr<_1a8d24000_Field> _field_Decl;
	jule::Ptr<_1a8e8301b_TypeKind> _field_Kind;
	jule::Ptr<_1a8e4bcb5_Data> _field_Default;
	

	inline bool operator==(_1a8d29104_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a8d29104_FieldIns _other) { return !this->operator==(_other); }


};
struct _1a8d2db53_OperandExprModel {
	jule::Ptr<_1a8e8301b_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1a8d2db53_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1a8d2db53_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d2e14d_BinaryExprModel {
	jule::Ptr<_1a8d2db53_OperandExprModel> _field_Left;
	jule::Ptr<_1a8d2db53_OperandExprModel> _field_Right;
	jule::Ptr<_1a875ce89_Token> _field_Op;
	

	inline bool operator==(_1a8d2e14d_BinaryExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a8d2e14d_BinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d2e527_UnaryExprModel {
	jule::Ptr<_1a8e4bcb5_Data> _field_Expr;
	jule::Ptr<_1a875ce89_Token> _field_Op;
	

	inline bool operator==(_1a8d2e527_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a8d2e527_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d2ea55_StructArgExprModel {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a8d29104_FieldIns> _field_Field;
	jule::Ptr<_1a8e4bcb5_Data> _field_Expr;
	

	inline bool operator==(_1a8d2ea55_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8d2ea55_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d2edeb_StructLitExprModel {
	jule::Ptr<_1a8d29ba4_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1a8d2ea55_StructArgExprModel>> _field_Args;
	


};
struct _1a8d301e8_AllocStructLitExprModel {
	jule::Ptr<_1a8d2edeb_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1a8d301e8_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1a8d301e8_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d3077b_CastingExprModel {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a8e4bcb5_Data> _field_Expr;
	jule::Ptr<_1a8e8301b_TypeKind> _field_Kind;
	jule::Ptr<_1a8e8301b_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1a8d3077b_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1a8d3077b_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d3112d_FnCallExprModel {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1a8d7de17_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1a8d31507_SliceExprModel {
	jule::Ptr<_1a8e8301b_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1a8d319ad_IndexingExprModel {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a8e4bcb5_Data> _field_Expr;
	jule::Ptr<_1a8e4bcb5_Data> _field_Index;
	

	inline bool operator==(_1a8d319ad_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a8d319ad_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d31e64_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _field_Captured;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	


};
struct _1a8d3233d_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1a8d3233d_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a8d3233d_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d327e4_MapExprModel {
	jule::Ptr<_1a8e8301b_TypeKind> _field_KeyKind;
	jule::Ptr<_1a8e8301b_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1a8d3233d_KeyValPairExprModel>> _field_Entries;
	


};
struct _1a8d32d77_SlicingExprModel {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1a8d32d77_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a8d32d77_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d3340a_TraitSubIdentExprModel {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a8d3be91_Fn> _field_Method;
	jule::Ptr<_1a8d5034a_Trait> _field_Trt;
	

	inline bool operator==(_1a8d3340a_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1a8d3340a_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d33c9b_StructSubIdentExprModel {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Ptr<_1a8e4bcb5_Data> _field_Expr;
	jule::Ptr<_1a8d3ee72_FnIns> _field_Method;
	jule::Ptr<_1a8d29104_FieldIns> _field_Field;
	jule::Ptr<_1a8d29ba4_StructIns> _field_Owner;
	

	inline bool operator==(_1a8d33c9b_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1a8d33c9b_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d34142_StructStaticIdentExprModel {
	jule::Ptr<_1a8d29ba4_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a8d3ee72_FnIns> _field_Method;
	

	inline bool operator==(_1a8d34142_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1a8d34142_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d3451b_ArrayExprModel {
	jule::Ptr<_1a8e92415_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1a8d34818_TupleExprModel {
	jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> _field_Datas;
	


};
struct _1a8d34be2_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1a8d34be2_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a8d34be2_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d350bb_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1a8d350bb_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a8d350bb_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d35495_BuiltinNewCallExprModel {
	jule::Ptr<_1a8e8301b_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1a8d35495_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1a8d35495_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d3586e_BuiltinPanicCallExprModel {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a8d3586e_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8d3586e_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d35d25_BuiltinAssertCallExprModel {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1a8d35d25_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1a8d35d25_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d362cb_BuiltinMakeCallExprModel {
	jule::Ptr<_1a8e8301b_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1a8d362cb_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1a8d362cb_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d366a5_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1a8d366a5_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1a8d366a5_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d369a2_BuiltinLenCallExprModel {
	jule::Ptr<_1a8e4bcb5_Data> _field_Expr;
	

	inline bool operator==(_1a8d369a2_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8d369a2_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d36c9e_BuiltinCapCallExprModel {
	jule::Ptr<_1a8e4bcb5_Data> _field_Expr;
	

	inline bool operator==(_1a8d36c9e_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8d36c9e_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d37178_BuiltinDeleteCallExprModel {
	jule::Ptr<_1a8e4bcb5_Data> _field_Dest;
	jule::Ptr<_1a8e4bcb5_Data> _field_Key;
	

	inline bool operator==(_1a8d37178_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1a8d37178_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d37552_BuiltinCopyCallExprModel {
	jule::Ptr<_1a8e4bcb5_Data> _field_Dest;
	jule::Ptr<_1a8e4bcb5_Data> _field_Src;
	

	inline bool operator==(_1a8d37552_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1a8d37552_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d3792b_BuiltinErrorCallExprModel {
	jule::Ptr<_1a8d3ee72_FnIns> _field_Func;
	jule::Ptr<_1a8e4bcb5_Data> _field_Err;
	

	inline bool operator==(_1a8d3792b_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1a8d3792b_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d380d0_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a8d380d0_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8d380d0_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d382bc_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a8d382bc_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8d382bc_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d38564_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1a8d38564_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1a8d38564_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d38861_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a8d38861_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8d38861_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d38c3a_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1a8d39037_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a8d39037_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8d39037_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d39c3b_RetType {
	jule::Ptr<_1a8e8a1dd_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _field_Idents;
	


};
struct _1a8d3a4bc_Param {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a8e8a1dd_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a8d3a4bc_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a8d3a4bc_Param _other) { return !this->operator==(_other); }


};
struct _1a8d3be91_Fn {
	jule::Ptr<_1a8dc1344_Sema> _field_sema;
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a8772982_Directive>> _field_Directives;
	jule::Ptr<_1a8783586_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a8780770_GenericDecl>> _field_Generics;
	jule::Ptr<_1a8d39c3b_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1a8d3a4bc_Param>> _field_Params;
	jule::Ptr<_1a8d26e26_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1a8d3ee72_FnIns>> _field_Instances;
	


};
struct _1a8d3dde9_ParamIns {
	jule::Ptr<_1a8d3a4bc_Param> _field_Decl;
	jule::Ptr<_1a8e8301b_TypeKind> _field_Kind;
	

	inline bool operator==(_1a8d3dde9_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a8d3dde9_ParamIns _other) { return !this->operator==(_other); }


};
struct _1a8d3ee72_FnIns {
	jule::Ptr<_1a8d29ba4_StructIns> _field_Owner;
	jule::Ptr<_1a8d3be91_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1a8e81635_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a8d3dde9_ParamIns>> _field_Params;
	jule::Ptr<_1a8e8301b_TypeKind> _field_Result;
	jule::Ptr<_1a8d7de17_Scope> _field_Scope;
	jule::Ptr<_1a8d43151_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Bool _field_AsAnon = false;
	jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1a8d43151_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1a8d4465d_Pass {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1a8d4465d_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1a8d4465d_Pass _other) { return !this->operator==(_other); }


};
struct _1a8d49113_symbolBuilder {
	jule::Ptr<_1a8d49113_symbolBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_224743e15_Log> _field_errors;
	jule::Ptr<_1a87715a7_Ast> _field_ast;
	jule::Ptr<_1a8e4694c_SymbolTable> _field_table;
	


};
struct _1a8d5034a_Trait {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1a8e8a1dd_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a8d3be91_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a8d26e26_Struct>> _field_Implemented;
	


};
struct _1a8d51ed9_EnumItem {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a8e4ce3c_Value> _field_Value;
	

	inline bool operator==(_1a8d51ed9_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a8d51ed9_EnumItem _other) { return !this->operator==(_other); }


};
struct _1a8d52a56_Enum {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a8e8a1dd_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a8d51ed9_EnumItem>> _field_Items;
	


};
struct _1a8d53b89_TypeEnumItem {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a8e8a1dd_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1a8d53b89_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a8d53b89_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1a8d54261_TypeEnum {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a8d53b89_TypeEnumItem>> _field_Items;
	


};
struct _1a8d573b8_comptimeRange {
	jule::Trait _field_kind;
	

	inline bool operator==(_1a8d573b8_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a8d573b8_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1a8d57d8b_comptimeStructField {
	jule::Ptr<_1a8d29104_FieldIns> _field_field;
	

	inline bool operator==(_1a8d57d8b_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a8d57d8b_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1a8d59a4c_comptimeStructFields {
	jule::Slice<jule::Ptr<_1a8d29104_FieldIns>> _field_fields;
	


};
struct _1a8d5b147_comptimeStatic {
	jule::Ptr<_1a8de41ad_Var> _field_field;
	

	inline bool operator==(_1a8d5b147_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a8d5b147_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1a8d5cd08_comptimeStatics {
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _field_fields;
	


};
struct _1a8d5e403_comptimeEnumField {
	jule::Ptr<_1a8d51ed9_EnumItem> _field_field;
	

	inline bool operator==(_1a8d5e403_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a8d5e403_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1a8d6079a_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1a8d51ed9_EnumItem>> _field_fields;
	


};
struct _1a8d61d95_comptimeParam {
	jule::Ptr<_1a8d3dde9_ParamIns> _field_param;
	

	inline bool operator==(_1a8d61d95_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1a8d61d95_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1a8d6402e_comptimeParams {
	jule::Slice<jule::Ptr<_1a8d3dde9_ParamIns>> _field_params;
	


};
struct _1a8d655e6_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1a8d66be1_comptimeTypeInfo>> _field_types;
	


};
struct _1a8d66be1_comptimeTypeInfo {
	jule::Ptr<_1a8e8301b_TypeKind> _field_base;
	

	inline bool operator==(_1a8d66be1_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1a8d66be1_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1a8d6d203_comptimeValue {
	jule::Ptr<_1a8e4bcb5_Data> _field_data;
	

	inline bool operator==(_1a8d6d203_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a8d6d203_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1a8d70a52_comptimeFiles {
	jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>> _field_files;
	


};
struct _1a8d7214c_comptimeFile {
	jule::Ptr<_1a8e4694c_SymbolTable> _field_file;
	

	inline bool operator==(_1a8d7214c_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1a8d7214c_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1a8d7665c_constraintChecker {
	jule::Ptr<_1a8dc1344_Sema> _field_s;
	jule::Slice<jule::Ptr<_1a8780770_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1a8e81635_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _field_genericsA;
	jule::Ptr<_1a8d3ee72_FnIns> _field_fi;
	jule::Ptr<_1a8d29ba4_StructIns> _field_si;
	jule::Ptr<_1a875ce89_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1a8d789b1_Impl {
	jule::Ptr<_1a8773565_TypeDecl> _field_Base;
	jule::Ptr<_1a8773565_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a8d3be91_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _field_Statics;
	


};
struct _1a8d7de17_Scope {
	jule::Ptr<_1a8d7de17_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1a8d7e335_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a8d7de17_Scope> _field_Scope;
	

	inline bool operator==(_1a8d7e335_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a8d7e335_If _other) { return !this->operator==(_other); }


};
struct _1a8d7e632_Else {
	jule::Ptr<_1a8d7de17_Scope> _field_Scope;
	

	inline bool operator==(_1a8d7e632_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a8d7e632_Else _other) { return !this->operator==(_other); }


};
struct _1a8d7ea50_Conditional {
	jule::Slice<jule::Ptr<_1a8d7e335_If>> _field_Elifs;
	jule::Ptr<_1a8d7e632_Else> _field_Default;
	


};
struct _1a8d7ed4c_InfIter {
	jule::Ptr<_1a8d7de17_Scope> _field_Scope;
	

	inline bool operator==(_1a8d7ed4c_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a8d7ed4c_InfIter _other) { return !this->operator==(_other); }


};
struct _1a8d80303_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1a8d7de17_Scope> _field_Scope;
	

	inline bool operator==(_1a8d80303_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a8d80303_WhileIter _other) { return !this->operator==(_other); }


};
struct _1a8d80c4e_RangeIter {
	jule::Ptr<_1a8e4bcb5_Data> _field_Expr;
	jule::Ptr<_1a8d7de17_Scope> _field_Scope;
	jule::Ptr<_1a8de41ad_Var> _field_KeyA;
	jule::Ptr<_1a8de41ad_Var> _field_KeyB;
	

	inline bool operator==(_1a8d80c4e_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a8d80c4e_RangeIter _other) { return !this->operator==(_other); }


};
struct _1a8d810d4_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1a8d810d4_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1a8d810d4_ContSt _other) { return !this->operator==(_other); }


};
struct _1a8d814ad_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1a8d814ad_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1a8d814ad_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a8d817aa_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1a8d817aa_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a8d817aa_Label _other) { return !this->operator==(_other); }


};
struct _1a8d81b84_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1a8d817aa_Label> _field_Label;
	

	inline bool operator==(_1a8d81b84_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a8d81b84_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a8d8205d_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1a8d8205d_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a8d8205d_Postfix _other) { return !this->operator==(_other); }


};
struct _1a8d82514_Assign {
	jule::Ptr<_1a8d2db53_OperandExprModel> _field_Left;
	jule::Ptr<_1a8d2db53_OperandExprModel> _field_Right;
	jule::Ptr<_1a875ce89_Token> _field_Op;
	

	inline bool operator==(_1a8d82514_Assign _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a8d82514_Assign _other) { return !this->operator==(_other); }


};
struct _1a8d829ba_MultiAssign {
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> _field_Left;
	jule::Any _field_Right = jule::Any(nullptr);
	


};
struct _1a8d8312a_Match {
	jule::Ptr<_1a8e4bcb5_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1a8d83b53_Case>> _field_Cases;
	jule::Ptr<_1a8d83b53_Case> _field_Default;
	


};
struct _1a8d83b53_Case {
	jule::Ptr<_1a8d8312a_Match> _field_Owner;
	jule::Ptr<_1a8d7de17_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> _field_Exprs;
	jule::Ptr<_1a8d83b53_Case> _field_Next;
	


};
struct _1a8d8434b_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1a8d8434b_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1a8d8434b_FallSt _other) { return !this->operator==(_other); }


};
struct _1a8d846e2_RetSt {
	jule::Ptr<_1a8d3ee72_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a8d846e2_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8d846e2_RetSt _other) { return !this->operator==(_other); }


};
struct _1a8d84d52_scopeLabel {
	jule::Ptr<_1a875ce89_Token> _field_token;
	jule::Ptr<_1a8d817aa_Label> _field_label;
	jule::I32 _field_pos = 0;
	jule::Ptr<_1a8d863c5_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1a8d84d52_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1a8d84d52_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1a8d853d5_scopeGoto {
	jule::Ptr<_1a8d81b84_GotoSt> _field_st;
	jule::Ptr<_1a8781023_GotoSt> _field_gt;
	jule::Ptr<_1a8d863c5_scopeChecker> _field_scope;
	jule::I32 _field_pos = 0;
	

	inline bool operator==(_1a8d853d5_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a8d853d5_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1a8d863c5_scopeChecker {
	jule::Ptr<_1a875ce89_Token> _field_calledFrom;
	jule::Ptr<_1a8dc1344_Sema> _field_s;
	jule::Ptr<_1a8d3ee72_FnIns> _field_owner;
	jule::Ptr<_1a8d863c5_scopeChecker> _field_parent;
	jule::I32 _field_childIndex = 0;
	jule::Ptr<_1a8e4694c_SymbolTable> _field_table;
	jule::Ptr<_1a8d7de17_Scope> _field_scope;
	jule::Ptr<_1a8783586_ScopeTree> _field_tree;
	jule::Ptr<_1a8d3ee72_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a8de41ad_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1a8d84d52_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a8d853d5_scopeGoto>>> _field_gotos;
	jule::I32 _field_i = 0;
	

	inline bool operator==(_1a8d863c5_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_captured == _other._field_captured &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a8d863c5_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1a8d99a04_directiveChecker {
	jule::Ptr<_1a8dc1344_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1a8772982_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1a8d99a04_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1a8d99a04_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1a8da0ea0_ImportInfo {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _field_Selected;
	jule::Ptr<_1a8da3dc6_Package> _field_Package;
	jule::I32 _field_ModId = 0;
	


};
struct _1a8da3dc6_Package {
	jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>> _field_Files;
	


};
struct _1a8dc073e_commonSemaMeta {
	jule::Slice<jule::Ptr<_1a8d66be1_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1a8dc1344_Sema {
	jule::Slice<_224743e15_Log> _field_errors;
	jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>> _field_files;
	jule::Ptr<_1a8e4694c_SymbolTable> _field_file;
	jule::I32 _field_flags = 0LL;
	jule::Ptr<_1a8dc073e_commonSemaMeta> _field_meta;
	


};
struct _1a8de1012_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1a8de41ad_Var {
	jule::Ptr<_1a8d7de17_Scope> _field_Scope;
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a8e8a1dd_TypeSymbol> _field_Kind;
	jule::Ptr<_1a8e4ce3c_Value> _field_Value;
	jule::Ptr<_1a8d43151_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1a8772982_Directive>> _field_Directives;
	jule::I32 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _field_Depends;
	


};
struct _1a8de5038_FuncPattern {
	


};
struct _1a8e3397d_typeCompatibilityChecker {
	jule::Ptr<_1a8dc1344_Sema> _field_s;
	jule::Ptr<_1a8e8301b_TypeKind> _field_dest;
	jule::Ptr<_1a8e8301b_TypeKind> _field_src;
	jule::Ptr<_1a875ce89_Token> _field_errorToken;
	

	inline bool operator==(_1a8e3397d_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a8e3397d_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1a8e3572c_assignTypeChecker {
	jule::Ptr<_1a8dc1344_Sema> _field_s;
	jule::Ptr<_1a8e8301b_TypeKind> _field_dest;
	jule::Ptr<_1a8e4bcb5_Data> _field_d;
	jule::Ptr<_1a875ce89_Token> _field_errorToken;
	

	inline bool operator==(_1a8e3572c_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a8e3572c_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1a8e37102_dynamicTypeAnnotation {
	jule::Ptr<_1a8e4d9dc_Eval> _field_e;
	jule::Ptr<_1a8d3ee72_FnIns> _field_f;
	jule::Ptr<_1a8d3dde9_ParamIns> _field_p;
	jule::Ptr<_1a8e4bcb5_Data> _field_a;
	jule::Ptr<_1a875ce89_Token> _field_errorToken;
	jule::Ptr<_1a8e8301b_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1a8773565_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>> _field_ignored;
	


};
struct _1a8e3be5e_fnCallArgChecker {
	jule::Ptr<_1a8e4d9dc_Eval> _field_e;
	jule::Slice<jule::Ptr<_1a8777899_Expr>> _field_args;
	jule::Ptr<_1a875ce89_Token> _field_errorToken;
	jule::Ptr<_1a8d3ee72_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>> _field_ignored;
	


};
struct _1a8e3ed96_structLitChecker {
	jule::Ptr<_1a8e4d9dc_Eval> _field_e;
	jule::Ptr<_1a875ce89_Token> _field_errorToken;
	jule::Ptr<_1a8d29ba4_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1a8d2ea55_StructArgExprModel>> _field_args;
	


};
struct _1a8e41b78_rangeChecker {
	jule::Ptr<_1a8d863c5_scopeChecker> _field_sc;
	jule::Ptr<_1a878825b_RangeKind> _field_rang;
	jule::Ptr<_1a8d80c4e_RangeIter> _field_Kind;
	jule::Ptr<_1a8e4bcb5_Data> _field_d;
	

	inline bool operator==(_1a8e41b78_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1a8e41b78_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1a8e443d9_retTypeChecker {
	jule::Ptr<_1a8d863c5_scopeChecker> _field_sc;
	jule::Ptr<_1a8d3ee72_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1a8777899_Expr>> _field_exprs;
	jule::Ptr<_1a875ce89_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1a8e4694c_SymbolTable {
	jule::Ptr<_1a8763720_File> _field_File;
	jule::Slice<_1a8d4465d_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1a8da0ea0_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1a8d26e26_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a8d3be91_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1a8d5034a_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1a8d52a56_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1a8d54261_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1a8d789b1_Impl>> _field_Impls;
	


};
struct _1a8e4bcb5_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1a8e8301b_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_20a2b7552_Const> _field_Constant;
	

	inline bool operator==(_1a8e4bcb5_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1a8e4bcb5_Data _other) { return !this->operator==(_other); }


};
struct _1a8e4ce3c_Value {
	jule::Ptr<_1a8777899_Expr> _field_Expr;
	jule::Ptr<_1a8e4bcb5_Data> _field_Data;
	

	inline bool operator==(_1a8e4ce3c_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a8e4ce3c_Value _other) { return !this->operator==(_other); }


};
struct _1a8e4d9dc_Eval {
	jule::Ptr<_1a8dc1344_Sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1a8e8301b_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1a8de41ad_Var> _field_owner;
	jule::Ptr<_1a8d29104_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1a8e4d9dc_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1a8e4d9dc_Eval _other) { return !this->operator==(_other); }


};
struct _1a8e6c214_unaryEval {
	jule::Ptr<_1a8e4d9dc_Eval> _field_e;
	jule::Ptr<_1a8e4bcb5_Data> _field_d;
	jule::Ptr<_1a8779956_UnaryExpr> _field_u;
	

	inline bool operator==(_1a8e6c214_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a8e6c214_unaryEval _other) { return !this->operator==(_other); }


};
struct _1a8e6e1a0_binaryEval {
	jule::Ptr<_1a8e4d9dc_Eval> _field_e;
	jule::Ptr<_1a8e4bcb5_Data> _field_l;
	jule::Ptr<_1a8e4bcb5_Data> _field_r;
	jule::Ptr<_1a875ce89_Token> _field_op;
	

	inline bool operator==(_1a8e6e1a0_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a8e6e1a0_binaryEval _other) { return !this->operator==(_other); }


};
struct _1a8e81635_InsGeneric {
	jule::Ptr<_1a8e8301b_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>> _field_Constraint;
	


};
struct _1a8e82229_TypeAlias {
	jule::Ptr<_1a8783586_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a8e8a1dd_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _field_Generics;
	


};
struct _1a8e8301b_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait _field_Kind;
	

	inline bool operator==(_1a8e8301b_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a8e8301b_TypeKind _other) { return !this->operator==(_other); }


};
struct _1a8e8a1dd_TypeSymbol {
	jule::Ptr<_1a8773565_TypeDecl> _field_Decl;
	jule::Ptr<_1a8e8301b_TypeKind> _field_Kind;
	

	inline bool operator==(_1a8e8a1dd_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a8e8a1dd_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1a8e8aae5_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1a8e8aae5_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a8e8aae5_Prim _other) { return !this->operator==(_other); }


};
struct _1a8e8e621_Sptr {
	jule::Ptr<_1a8e8301b_TypeKind> _field_Elem;
	

	inline bool operator==(_1a8e8e621_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a8e8e621_Sptr _other) { return !this->operator==(_other); }


};
struct _1a8e900e4_Slc {
	jule::Ptr<_1a8e8301b_TypeKind> _field_Elem;
	

	inline bool operator==(_1a8e900e4_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a8e900e4_Slc _other) { return !this->operator==(_other); }


};
struct _1a8e90bd8_Tuple {
	jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>> _field_Types;
	


};
struct _1a8e91788_Map {
	jule::Ptr<_1a8e8301b_TypeKind> _field_Key;
	jule::Ptr<_1a8e8301b_TypeKind> _field_Val;
	

	inline bool operator==(_1a8e91788_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a8e91788_Map _other) { return !this->operator==(_other); }


};
struct _1a8e92415_Arr {
	jule::Bool _field_Auto = false;
	jule::I32 _field_N = 0;
	jule::Ptr<_1a8e8301b_TypeKind> _field_Elem;
	

	inline bool operator==(_1a8e92415_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a8e92415_Arr _other) { return !this->operator==(_other); }


};
struct _1a8e92dd8_Ptr {
	jule::Ptr<_1a8e8301b_TypeKind> _field_Elem;
	

	inline bool operator==(_1a8e92dd8_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a8e92dd8_Ptr _other) { return !this->operator==(_other); }


};
struct _1a8e93dd9_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1a8e93dd9_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a8e93dd9_referencer _other) { return !this->operator==(_other); }


};
struct _1a8e94dc9_typeChecker {
	jule::Ptr<_1a8dc1344_Sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1a8e93dd9_referencer> _field_referencer;
	jule::Ptr<_1a8d43151_ReferenceStack> _field_refers;
	jule::Ptr<_1a875ce89_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1a8780770_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1a8e82229_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1a8e9ca80_identTypeLookup {
	

	inline bool operator==(_1a8e9ca80_identTypeLookup _other) { return true; }

	inline bool operator!=(_1a8e9ca80_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1a98a065d_FileInfo {
	jule::Ptr<_1a87715a7_Ast> _field_Ast;
	jule::Slice<_224743e15_Log> _field_Errors;
	


};
struct _1a98e63b8_stmt {
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1a98e6c59_scopeParser {
	jule::Ptr<_20a0a48b1_parser> _field_p;
	jule::Ptr<_1a8783586_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1a98e63b8_stmt>> _field_stmts;
	jule::I32 _field_pos = 0;
	


};
struct _20a093c24_exprBuilder {
	jule::Ptr<_20a0a48b1_parser> _field_p;
	

	inline bool operator==(_20a093c24_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_20a093c24_exprBuilder _other) { return !this->operator==(_other); }


};
struct _20a0a14b2_assignInfo {
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _field_l;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _field_r;
	jule::Ptr<_1a875ce89_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _20a0a48b1_parser {
	jule::Ptr<_1a87715a7_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1a8772982_Directive>> _field_directives;
	jule::Slice<_224743e15_Log> _field_errors;
	jule::Ptr<_20a093c24_exprBuilder> _field_ep;
	


};
struct _1a98ec8b9_typeBuilder {
	jule::Ptr<_20a0a48b1_parser> _field_p;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _field_tokens;
	jule::I32* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1a9192901_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1a9192901_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1a9192901_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1a9193dca_directiveEval {
	jule::Slice<_224743e15_Log> _field_logs;
	jule::Ptr<_1a8772982_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1a9901a99_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1a8da0ea0_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1a9906cad_OrderedDefines {
	jule::Slice<jule::Ptr<_1a8d26e26_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _field_Globals;
	


};
struct _1a9907044_defineOrderer {
	

	inline bool operator==(_1a9907044_defineOrderer _other) { return true; }

	inline bool operator!=(_1a9907044_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1a9a6a3d8_liveTable {
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1a8d3ee72_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1a8d29ba4_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1a8d5034a_Trait>> _field_traits;
	


};
struct _1a9a700e1_scopeDeadCode {
	jule::Ptr<_1a9a700e1_scopeDeadCode> _field_parent;
	jule::Ptr<_1a8d7de17_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I32 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a8d817aa_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a8d81b84_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1a9a700e1_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1a9a700e1_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1a9a7437b_exprDeadCode {
	jule::Ptr<_1a9a700e1_scopeDeadCode> _field_s;
	

	inline bool operator==(_1a9a7437b_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1a9a7437b_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1a90767e6_ExceptionalForwardingExprModel {
	jule::Ptr<_1a8d3112d_FnCallExprModel> _field_Expr;
	

	inline bool operator==(_1a90767e6_ExceptionalForwardingExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a90767e6_ExceptionalForwardingExprModel _other) { return !this->operator==(_other); }


};
struct _1a9076b6a_SwapExprModel {
	jule::Ptr<_1a8e4bcb5_Data> _field_Left;
	jule::Ptr<_1a8e4bcb5_Data> _field_Right;
	

	inline bool operator==(_1a9076b6a_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a9076b6a_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1a9077044_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1a9077044_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1a9077044_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1a90773b8_RefExprModel {
	jule::Ptr<_1a8de41ad_Var> _field_Var;
	

	inline bool operator==(_1a90773b8_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1a90773b8_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1a907783b_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_20a2b7552_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1a907783b_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1a907783b_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1a9077dbe_MutSlicingExprModel {
	jule::Ptr<_1a875ce89_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1a9077dbe_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a9077dbe_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a90781bb_UnsafeBinaryExprModel {
	jule::Ptr<_1a8d2e14d_BinaryExprModel> _field_Node;
	

	inline bool operator==(_1a90781bb_UnsafeBinaryExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1a90781bb_UnsafeBinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a9078551_UnsafeIndexingExprModel {
	jule::Ptr<_1a8d319ad_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1a9078551_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1a9078551_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a907892a_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1a8d31507_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1a907892a_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1a907892a_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a9078d04_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1a9078d04_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1a9078d04_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a90791cd_StrRuneIter {
	jule::Ptr<_1a8e4bcb5_Data> _field_Expr;
	jule::Ptr<_1a8d80c4e_RangeIter> _field_Base;
	

	inline bool operator==(_1a90791cd_StrRuneIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1a90791cd_StrRuneIter _other) { return !this->operator==(_other); }


};
struct _1a90794ca_UnsafeDerefExprModel {
	jule::Ptr<_1a8d2e527_UnaryExprModel> _field_Base;
	

	inline bool operator==(_1a90794ca_UnsafeDerefExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1a90794ca_UnsafeDerefExprModel _other) { return !this->operator==(_other); }


};
struct _1a90797c7_UnsafeCastingExprModel {
	jule::Ptr<_1a8d3077b_CastingExprModel> _field_Base;
	

	inline bool operator==(_1a90797c7_UnsafeCastingExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1a90797c7_UnsafeCastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a907a4a9_nilVar {
	jule::Uintptr _field_var = 0;
	jule::Bool _field_safe = false;
	

	inline bool operator==(_1a907a4a9_nilVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_safe == _other._field_safe;
	}

	inline bool operator!=(_1a907a4a9_nilVar _other) { return !this->operator==(_other); }


};
struct _1a907a7ea_nils {
	jule::Slice<_1a907a4a9_nilVar> _field_vars;
	


};
struct _1a907d578_scopeOptimizer {
	jule::Ptr<_1a907d578_scopeOptimizer> _field_parent;
	jule::I32 _field_i = 0;
	jule::Ptr<_1a8d7de17_Scope> _field_scope;
	jule::Ptr<_1a909302c_data> _field_data;
	

	inline bool operator==(_1a907d578_scopeOptimizer _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a907d578_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1a90853c6_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1a909302c_data> _field_data;
	

	inline bool operator==(_1a90853c6_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a90853c6_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1a908ec93_dynamicVar {
	jule::Uintptr _field_var = 0;
	jule::Ptr<_1a8e8301b_TypeKind> _field_kind;
	

	inline bool operator==(_1a908ec93_dynamicVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a908ec93_dynamicVar _other) { return !this->operator==(_other); }


};
struct _1a90900d4_dynamic {
	jule::Slice<_1a908ec93_dynamicVar> _field_vars;
	


};
struct _1a909302c_data {
	jule::Ptr<_1a9094924_boundary> _field_boundary;
	jule::Ptr<_1a907a7ea_nils> _field_nils;
	jule::Ptr<_1a90900d4_dynamic> _field_dynamic;
	

	inline bool operator==(_1a909302c_data _other) {
		return 
			this->_field_boundary == _other._field_boundary &&
			this->_field_nils == _other._field_nils &&
			this->_field_dynamic == _other._field_dynamic;
	}

	inline bool operator!=(_1a909302c_data _other) { return !this->operator==(_other); }


};
struct _1a90945d3_boundaryVar {
	jule::Uintptr _field_var = 0;
	jule::Slice<jule::Any> _field_maxSize;
	


};
struct _1a9094924_boundary {
	jule::Slice<_1a90945d3_boundaryVar> _field_vars;
	


};
struct _1a9a7b41b_Optimizer {
	jule::Ptr<_1a990452a_IR> _field_ir;
	

	inline bool operator==(_1a9a7b41b_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a9a7b41b_Optimizer _other) { return !this->operator==(_other); }


};
struct _1a9aa913b_AnsiEscape {
	

	inline bool operator==(_1a9aa913b_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a9aa913b_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1a9aaa6ae_Logger {
	

	inline bool operator==(_1a9aaa6ae_Logger _other) { return true; }

	inline bool operator!=(_1a9aaa6ae_Logger _other) { return !this->operator==(_other); }


};
struct _1aa2d42d3_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1aa2d42d3_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1aa2d42d3_AbsTime _other) { return !this->operator==(_other); }


};
struct _1aa2d49a9_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1aa2d49a9_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1aa2d49a9_Time _other) { return !this->operator==(_other); }


};
struct _1aa20da15_scopeCoder {
	jule::Ptr<_1aa2e0586_ObjectCoder> _field_oc;
	

	inline bool operator==(_1aa20da15_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aa20da15_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1aa218ed7_exprCoder {
	jule::Ptr<_1aa2e0586_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a8de41ad_Var>>> _field_varPrefixes;
	


};
struct _1aa22a405_TestCoder {
	jule::Ptr<_1a8d29ba4_StructIns> _field_t;
	jule::Ptr<_1a8d3be91_Fn> _field_tmReset;
	jule::Ptr<_1a8d3be91_Fn> _field_tmFailed;
	jule::Ptr<_1a8d3be91_Fn> _field_tmSkipped;
	jule::Ptr<_1aa2e0586_ObjectCoder> _field_oc;
	

	inline bool operator==(_1aa22a405_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aa22a405_TestCoder _other) { return !this->operator==(_other); }


};
struct _1aa22d21b_identCoder {
	

	inline bool operator==(_1aa22d21b_identCoder _other) { return true; }

	inline bool operator!=(_1aa22d21b_identCoder _other) { return !this->operator==(_other); }


};
struct _1aa2dd287_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1aa2dd287_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1aa2dd287_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1aa2dd85e_traitHash {
	jule::Ptr<_1a8d5034a_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1a8d29ba4_StructIns> _field_s;
	jule::I32 _field_i = 0;
	

	inline bool operator==(_1aa2dd85e_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1aa2dd85e_traitHash _other) { return !this->operator==(_other); }


};
struct _1aa2ddc38_traitCast {
	jule::Ptr<_1a8d5034a_Trait> _field_t1;
	jule::Ptr<_1a8d5034a_Trait> _field_t2;
	

	inline bool operator==(_1aa2ddc38_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1aa2ddc38_traitCast _other) { return !this->operator==(_other); }


};
struct _1aa2de156_anonHash {
	jule::Ptr<_1a8d31e64_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

	inline bool operator==(_1aa2de156_anonHash _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1aa2de156_anonHash _other) { return !this->operator==(_other); }


};
struct _1aa300e26_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1aa300e26_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1aa300e26_customType _other) { return !this->operator==(_other); }


};
struct _1aa301a3c_typeCoder {
	jule::Ptr<_1aa2e0586_ObjectCoder> _field_oc;
	jule::Ptr<_1aa309627_resultCoder> _field_rc;
	

	inline bool operator==(_1aa301a3c_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1aa301a3c_typeCoder _other) { return !this->operator==(_other); }


};
struct _1aa309627_resultCoder {
	jule::Ptr<_1aa301a3c_typeCoder> _field_tc;
	

	inline bool operator==(_1aa309627_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1aa309627_resultCoder _other) { return !this->operator==(_other); }


};
struct _1add21602_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1add21602_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1add21602_Flag _other) { return !this->operator==(_other); }


};struct _1add251a5_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1add251a5_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1add251a5_Flag _other) { return !this->operator==(_other); }


};struct _1add28818_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1add28818_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1add28818_Flag _other) { return !this->operator==(_other); }


};struct _1add2bec0_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1add2bec0_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1add2bec0_Flag _other) { return !this->operator==(_other); }


};struct _1add30633_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1add30633_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1add30633_Flag _other) { return !this->operator==(_other); }


};
struct _1aa374b48_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	


};
struct _1aa37760c_argParser {
	_1aa374b48_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i = 0;
	


};
struct _1aa2e0586_ObjectCoder {
	_2234c269a_StrBuilder _field_Buf;
	_2234c269a_StrBuilder _field_resultDecls;
	_2234c269a_StrBuilder _field_anyObj;
	_2234c269a_StrBuilder _field_anonObj;
	_2234c269a_StrBuilder _field_deallocObj;
	jule::Ptr<_1a990452a_IR> _field_ir;
	_1aa2dd287_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1aa2dd85e_traitHash>> _field_tmap;
	jule::Slice<jule::Ptr<_1aa2de156_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1aa2ddc38_traitCast> _field_traitCastMap;
	jule::Ptr<_1aa218ed7_exprCoder> _field_ec;
	jule::Ptr<_1aa20da15_scopeCoder> _field_sc;
	jule::Ptr<_1aa301a3c_typeCoder> _field_tc;
	jule::I32 _field_headPos = 0;
	jule::I32 _field_declPos = 0;
	jule::I32 _field_wrapPos = 0;
	


};
struct _1a9092a32_dataCheckpoint {
	_1a9094924_boundary _field_boundary;
	_1a907a7ea_nils _field_nils;
	_1a90900d4_dynamic _field_dynamic;
	


};
struct _1a9a6a806_ObjectDeadCode {
	_1a9a6a3d8_liveTable _field_live;
	jule::Ptr<_1a990452a_IR> _field_ir;
	


};
struct _1a990452a_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1a8da3dc6_Package> _field_Main;
	jule::Slice<jule::Ptr<_1a8da0ea0_ImportInfo>> _field_Used;
	_1a9906cad_OrderedDefines _field_Ordered;
	


};
struct _1a8d29ba4_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1a8d26e26_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1a8e81635_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a8d29104_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1a8d3be91_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1a8d43151_ReferenceStack> _field_Refers;
	_1a8d26013_Operators _field_Operators;
	


};
struct _224805e50_Cmd {
	_22480a196_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a8e4bcb5_Data__jule_tuple_x_1a8e4bcb5_Data {
	jule::Ptr<_1a8e4bcb5_Data> __jule_result_arg0;
	jule::Ptr<_1a8e4bcb5_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1a8e4bcb5_Data__jule_tuple_bool {
	jule::Ptr<_1a8e4bcb5_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a8777899_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a8777899_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a878a538_Case__jule_tuple_bool {
	jule::Ptr<_1a878a538_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a878a538_Case__jule_tuple_x_1a878938e_Else {
	jule::Slice<jule::Ptr<_1a878a538_Case>> __jule_result_arg0;
	jule::Ptr<_1a878938e_Else> __jule_result_arg1;
};
struct __jule_tuple__1a8782bc3_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a8782013_AssignSt__jule_tuple_bool {
	jule::Ptr<_1a8782013_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1a8773565_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a8776458_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1a8776458_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a87715a7_Ast__jule_tuple_s_224743e15_Log {
	jule::Slice<jule::Ptr<_1a87715a7_Ast>> __jule_result_arg0;
	jule::Slice<_224743e15_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_224743e15_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_224743e15_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a990452a_IR__jule_tuple_s_224743e15_Log {
	jule::Ptr<_1a990452a_IR> __jule_result_arg0;
	jule::Slice<_224743e15_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1ecb2be90_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1ecb2be90_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1ecb2be90_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1ecb2be90_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a8e4694c_SymbolTable__jule_tuple_s_224743e15_Log {
	jule::Ptr<_1a8e4694c_SymbolTable> __jule_result_arg0;
	jule::Slice<_224743e15_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a8da3dc6_Package__jule_tuple_s_224743e15_Log {
	jule::Ptr<_1a8da3dc6_Package> __jule_result_arg0;
	jule::Slice<_224743e15_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a87715a7_Ast__jule_tuple_s_224743e15_Log {
	jule::Ptr<_1a87715a7_Ast> __jule_result_arg0;
	jule::Slice<_224743e15_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a875ce89_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a875ce89_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a875ce89_Token__jule_tuple_sx_1a875ce89_Token {
	jule::Slice<jule::Ptr<_1a875ce89_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1a875ce89_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1a875ce89_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> __jule_result_arg0;
	jule::Slice<_224743e15_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _2234c269a_StrBuilder static__2234c2ac9_New(jule::I32 _1519_cap);
inline void _2234c2d82_Write(_2234c269a_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b);
inline void _2234c313a_WriteStr(_2234c269a_StrBuilder* _self_, jule::Str _3027_s);
inline void _2234c33e3_WriteByte(_2234c269a_StrBuilder* _self_, jule::U8 _3528_b);
inline jule::Str _2234c3932_Str(_2234c269a_StrBuilder* _self_);
inline void _2234c3b30_Clear(_2234c269a_StrBuilder* _self_);
inline jule::I32 _2234c3db6_Len(_2234c269a_StrBuilder* _self_);
inline jule::Slice<jule::U8> _2234c43d3_Buf(_2234c269a_StrBuilder* _self_);
inline void _2234c468b_SetBuf(_2234c269a_StrBuilder* _self_, jule::Slice<jule::U8> _7736_buf);
inline jule::U8 _22469dda3_index(_22469d952_lazyBuff* _self_, jule::I32 _5524_i);
inline void _22469e15b_append(_22469d952_lazyBuff* _self_, jule::U8 _6225_c);
inline jule::Str _22469e3e2_string(_22469d952_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_2232d7a65_DirEntry>>> static__2246a168b_Read(jule::Str _1520_path);
inline jule::VoidExceptional static__2246a18bc_Create(jule::Str _3922_path);
inline jule::VoidExceptional static__2246a1aed_Remove(jule::Str _5322_path);
inline jule::Ptr<_2232d8eea_File> static__2232d9418_New(jule::Uintptr _4519_handle);
inline jule::Exceptional<jule::Ptr<_2232d8eea_File>> static__2232d96d2_Create(jule::Str _5522_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__2232d999b_Read(jule::Str _6720_path);
inline jule::VoidExceptional static__2232d9d42_Write(jule::Str _10521_path, jule::Slice<jule::U8> _10532_data, jule::I32 _10546_perm);
inline jule::VoidExceptional _2232da57e_Close(_2232d8eea_File* _self_);
inline jule::Exceptional<jule::Ptr<_2232d8eea_File>> static__2233eda7c_Open(jule::Str _2220_path, jule::I32 _2231_flag, jule::I32 _2244_mode);
inline jule::VoidExceptional static__2233edcad_Remove(jule::Str _3522_path);
inline jule::Exceptional<jule::I32> _2233ee132_Write(_2232d8eea_File* _self_, jule::Slice<jule::U8> _5024_buf);
inline jule::Exceptional<jule::I32> _2233ee473_Read(_2232d8eea_File* _self_, jule::Slice<jule::U8> _8127_buf);
inline jule::Bool _2232db508_IsDir(_2232db12e_Status* _self_);
inline jule::Bool _2232db78e_IsReg(_2232db12e_Status* _self_);
inline jule::U32 _2232dba25_Size(_2232db12e_Status* _self_);
inline jule::Exceptional<jule::Ptr<_2232db12e_Status>> static__2246a24b1_Of(jule::Str _1218_path);
inline jule::Bool _20a29b789_set(_20a2a4d58_decimal* _self_, jule::Slice<jule::U8> _23822_s);
inline __jule_tuple_u64__jule_tuple_bool _20a29baca_floatBits(_20a2a4d58_decimal* _self_, _20a291471_floatInfo* _33229_flt);
inline void _20a2a5210_assign(_20a2a4d58_decimal* _self_, jule::U64 _15129_v);
inline void _20a2a54b8_shift(_20a2a4d58_decimal* _self_, jule::I32 _17628_k);
inline void _20a2a5771_roundDown(_20a2a4d58_decimal* _self_, jule::I32 _19628_nd);
inline void _20a2a5a29_roundUp(_20a2a4d58_decimal* _self_, jule::I32 _20526_nd);
inline void _20a2a5cd2_round(_20a2a4d58_decimal* _self_, jule::I32 _23224_nd);
inline jule::U64 _20a2a6068_roundedInteger(_20a2a4d58_decimal* _self_);
inline jule::Ptr<_20a2b7552_Const> static__20a2b7992_NewI64(jule::I64 _1622_x);
inline jule::Ptr<_20a2b7552_Const> static__20a2b7c5b_NewU64(jule::U64 _1922_x);
inline jule::Ptr<_20a2b7552_Const> static__20a2b8025_NewBool(jule::Bool _2223_x);
inline jule::Ptr<_20a2b7552_Const> static__20a2b82de_NewStr(jule::Str _2522_x);
inline jule::Ptr<_20a2b7552_Const> static__20a2b85a8_NewF64(jule::F64 _2822_x);
inline jule::Ptr<_20a2b7552_Const> static__20a2b87b7_NewNil(void);
inline jule::I64 _20a2b8e27_ReadI64(_20a2b7552_Const* _self_);
inline jule::U64 _20a2b91ad_ReadU64(_20a2b7552_Const* _self_);
inline jule::Bool _20a2b9444_ReadBool(_20a2b7552_Const* _self_);
inline jule::Str _20a2b96ca_ReadStr(_20a2b7552_Const* _self_);
inline jule::F64 _20a2b9961_ReadF64(_20a2b7552_Const* _self_);
inline jule::I64 _20a2b9be7_AsI64(_20a2b7552_Const* _self_);
inline jule::U64 _20a2b9e7d_AsU64(_20a2b7552_Const* _self_);
inline jule::F64 _20a2ba214_AsF64(_20a2b7552_Const* _self_);
inline void _20a2ba4bc_SetI64(_20a2b7552_Const* _self_, jule::I64 _13825_x);
inline void _20a2ba775_SetU64(_20a2b7552_Const* _self_, jule::U64 _14125_x);
inline void _20a2baa2d_SetBool(_20a2b7552_Const* _self_, jule::Bool _14426_x);
inline void _20a2bacd6_SetStr(_20a2b7552_Const* _self_, jule::Str _14725_x);
inline void _20a2bb08e_SetF64(_20a2b7552_Const* _self_, jule::F64 _15025_x);
inline jule::Bool _20a2bb523_IsI64(_20a2b7552_Const* _self_);
inline jule::Bool _20a2bb7a9_IsU64(_20a2b7552_Const* _self_);
inline jule::Bool _20a2bba40_IsBool(_20a2b7552_Const* _self_);
inline jule::Bool _20a2bbcc6_IsStr(_20a2b7552_Const* _self_);
inline jule::Bool _20a2bc05c_IsF64(_20a2b7552_Const* _self_);
inline jule::Bool _20a2bc2e3_IsNil(_20a2b7552_Const* _self_);
inline jule::Bool _20a2bc975_And(_20a2b7552_Const* _self_, _20a2b7552_Const _23818_x);
inline jule::Bool _20a2bccb6_Or(_20a2b7552_Const* _self_, _20a2b7552_Const _24917_x);
inline jule::Bool _20a2be25c_Add(_20a2b7552_Const* _self_, _20a2b7552_Const _37722_x);
inline jule::Bool _20a2be59d_Sub(_20a2b7552_Const* _self_, _20a2b7552_Const _40622_x);
inline jule::Bool _20a2be8de_Mul(_20a2b7552_Const* _self_, _20a2b7552_Const _43022_x);
inline jule::Bool _20a2bec30_Div(_20a2b7552_Const* _self_, _20a2b7552_Const _45822_x);
inline jule::Bool _20a2c0071_Mod(_20a2b7552_Const* _self_, _20a2b7552_Const _48722_x);
inline jule::Bool _20a2c03b2_BitwiseAnd(_20a2b7552_Const* _self_, _20a2b7552_Const _50929_x);
inline jule::Bool _20a2c0703_BitwiseOr(_20a2b7552_Const* _self_, _20a2b7552_Const _52328_x);
inline jule::Bool _20a2c0a44_Xor(_20a2b7552_Const* _self_, _20a2b7552_Const _53722_x);
inline jule::Bool _20a2c0d85_Lshift(_20a2b7552_Const* _self_, _20a2b7552_Const _55125_x);
inline jule::Bool _20a2c11c6_Rshift(_20a2b7552_Const* _self_, _20a2b7552_Const _57125_x);
inline jule::U8 _1a875d30d_Prec(_1a875ce89_Token* _self_);
inline void _1a8763b3d_Fill(_1a8763720_File* _self_, jule::Slice<jule::U8> _1727_data);
inline jule::Str _1a8763dc4_Dir(_1a8763720_File* _self_);
inline jule::Str _1a876415a_Name(_1a8763720_File* _self_);
inline jule::Str _1a8764732_GetRow(_1a8763720_File* _self_, jule::I32 _3821_row);
inline void _1a876bddd_pushErr(_1a876b85a_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args);
inline void _1a876c44e_lex(_1a876b85a_lex* _self_);
inline jule::Str _1a876c790_id(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _47122_ln);
inline jule::Slice<jule::U8> _1a876ca26_resume(_1a876b85a_lex* _self_);
inline void _1a876ccce_lexLineComment(_1a876b85a_lex* _self_, jule::Ptr<_1a875ce89_Token>* _52438_token);
inline void _1a876d087_lexRangeComment(_1a876b85a_lex* _self_, jule::Ptr<_1a875ce89_Token>* _53939_token);
inline jule::Str _1a876d3c8_num(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _56723_txt);
inline jule::Str _1a876d719_escapeSeq(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _58929_txt);
inline jule::Str _1a876db15_getRune(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw);
inline jule::Str _1a876de56_lexRune(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _62827_txt);
inline jule::Str _1a876e1dc_lexStr(_1a876b85a_lex* _self_);
inline void _1a876e671_newLine(_1a876b85a_lex* _self_);
inline jule::Bool _1a876ebd2_isOp(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U32 _71048_id, jule::Ptr<_1a875ce89_Token>* _71066_t);
inline jule::Bool _1a87700cd_lexBasicOps(_1a876b85a_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1a875ce89_Token>* _72048_tok);
inline jule::Bool _1a87704c9_lexId(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1a875ce89_Token>* _72943_t);
inline jule::Bool _1a87708c5_lexNum(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1a875ce89_Token>* _73944_t);
inline jule::Ptr<_1a875ce89_Token> _1a8770b5b_token(_1a876b85a_lex* _self_);
inline jule::Bool _1a8775402_IsUnsafe(_1a877508e_PtrTypeDecl* _self_);
inline jule::Bool _1a8775b94_AutoSized(_1a8775831_ArrTypeDecl* _self_);
inline jule::Bool _1a877b947_Unhandled(_1a877b5c3_FnCallExpr* _self_);
inline jule::Bool _1a877bbcd_Ignored(_1a877b5c3_FnCallExpr* _self_);
inline jule::Bool _1a8784147_IsSelf(_1a8783cc3_ParamDecl* _self_);
inline jule::Bool _1a8785588_IsAnon(_1a8785225_FnDecl* _self_);
inline jule::Bool _1a878738c_IsInf(_1a8787029_Iter* _self_);
inline jule::Bool _1a8787bb7_IsWhileNext(_1a8787854_WhileKind* _self_);
inline jule::Ptr<_1a8d29104_FieldIns> _1a8d243a7_instance(jule::Ptr<_1a8d24000_Field> _self_);
inline jule::Ptr<_1a8d29ba4_StructIns> _1a8d27388_instance(jule::Ptr<_1a8d26e26_Struct> _self_);
inline jule::Ptr<_1a8d29ba4_StructIns> _1a8d27696_appendInstance(_1a8d26e26_Struct* _self_, jule::Ptr<_1a8d29ba4_StructIns>* _13438_ins);
inline jule::Ptr<_1a8d3be91_Fn> _1a8d27a92_FindMethod(_1a8d26e26_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically);
inline jule::Ptr<_1a8de41ad_Var> _1a8d27dd3_FindStatic(_1a8d26e26_Struct* _self_, jule::Str _16329_ident);
inline jule::Ptr<_1a8d24000_Field> _1a8d28224_FindField(_1a8d26e26_Struct* _self_, jule::Str _17428_ident);
inline jule::Bool _1a8d28565_IsImplements(_1a8d26e26_Struct* _self_, jule::Ptr<_1a8d5034a_Trait> _18427_t);
inline jule::Bool _1a8d288a6_IsUses(_1a8d26e26_Struct* _self_, jule::Ptr<_1a8d26e26_Struct> _19421_s);
inline jule::Ptr<_1a8d3dde9_ParamIns> _1a8d3a852_instance(jule::Ptr<_1a8d3a4bc_Param> _self_);
inline jule::Bool _1a8d3aad8_IsSelf(_1a8d3a4bc_Param* _self_);
inline jule::Bool _1a8d3ad6e_IsRef(_1a8d3a4bc_Param* _self_);
inline jule::Bool _1a8d3c414_IsVoid(_1a8d3be91_Fn* _self_);
inline jule::Bool _1a8d3c69a_IsMethod(_1a8d3be91_Fn* _self_);
inline jule::Bool _1a8d3c931_IsEntryPoint(_1a8d3be91_Fn* _self_);
inline jule::Bool _1a8d3cbb7_IsInit(_1a8d3be91_Fn* _self_);
inline jule::Bool _1a8d3ce4d_IsAnon(_1a8d3be91_Fn* _self_);
inline jule::Bool _1a8d3d1d4_AnyVar(_1a8d3be91_Fn* _self_);
inline jule::Ptr<_1a8d3ee72_FnIns> _1a8d3d46a_instanceForce(jule::Ptr<_1a8d3be91_Fn> _self_);
inline jule::Ptr<_1a8d3ee72_FnIns> _1a8d3d701_instance(jule::Ptr<_1a8d3be91_Fn> _self_);
inline jule::Ptr<_1a8d3ee72_FnIns> _1a8d3da0e_appendInstance(_1a8d3be91_Fn* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _12938_ins);
inline jule::Str _1a8d3e25c_Str(_1a8d3dde9_ParamIns* _self_);
inline jule::Str _1a8d402b3_Str(_1a8d3ee72_FnIns* _self_);
inline jule::Bool _1a8d40604_Equal(jule::Ptr<_1a8d3ee72_FnIns> _self_, jule::Ptr<_1a8e8301b_TypeKind> _21921_other);
inline jule::Bool _1a8d40a99_EqualFn(jule::Ptr<_1a8d3ee72_FnIns> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _23024_f);
inline jule::Bool _1a8d40dda_equalTrait(jule::Ptr<_1a8d3ee72_FnIns> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _28927_other);
inline jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>> _1a8d41171_Types(_1a8d3ee72_FnIns* _self_);
inline jule::Bool _1a8d41407_IsBuiltin(_1a8d3ee72_FnIns* _self_);
inline jule::Bool _1a8d4168d_IsAnon(_1a8d3ee72_FnIns* _self_);
inline jule::Bool _1a8d419ce_Same(_1a8d3ee72_FnIns* _self_, jule::Ptr<_1a8d3ee72_FnIns> _33219_f);
inline jule::Str _1a8d41d20_GetKindStr(_1a8d3ee72_FnIns* _self_, jule::Bool _34925_ident);
inline jule::Ptr<_1a8d43151_ReferenceStack> static__1a8d4343c_new(void);
inline jule::I32 _1a8d43838_Len(_1a8d43151_ReferenceStack* _self_);
inline jule::Any _1a8d43b79_At(_1a8d43151_ReferenceStack* _self_, jule::I32 _6821_i);
inline void _1a8d43e32_Push(_1a8d43151_ReferenceStack* _self_, jule::Any _7327_ref);
inline jule::Bool _1ac8a35c5_Exist(_1a8d43151_ReferenceStack* _self_, jule::Ptr<_1a8d3ee72_FnIns> _7823_t);
inline jule::Bool _1ac8b94cb_Exist(_1a8d43151_ReferenceStack* _self_, jule::Ptr<_1a8de41ad_Var> _7823_t);
inline jule::Bool _1ac774067_Exist(_1a8d43151_ReferenceStack* _self_, jule::Ptr<_1a8d29ba4_StructIns> _7823_t);
inline jule::Bool _1acd462c6_Exist(_1a8d43151_ReferenceStack* _self_, jule::Ptr<_1a8d5034a_Trait> _7823_t);
inline void _1a8d49ab4_pushErr(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a875ce89_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args);
inline void _1a8d4a345_pushSuggestion(_1a8d49113_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args);
inline jule::Bool _1a8d4a741_checkCppUseDeclPath(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _34539_decl, jule::Str* _34556_path);
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d4aa4e_buildCppHeaderImport(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _36544_decl);
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d4ad90_buildStdImport(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _39338_decl);
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d4b1d1_buildIdentImport(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _43341_decl);
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d4b522_buildImport(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _48736_decl);
inline jule::Bool _1a8d4b863_checkDuplicateUseDecl(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _49841_pkg);
inline void _1a8d4bbc6_implImportSelections(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _51244_imp, jule::Ptr<_1a8d1e12c_UseDecl>* _51267_decl);
inline jule::Str _1a8d4c017_getAsLinkPath(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Str _52737_path);
inline void _1a8d4c435_pushCycleError(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8d49113_symbolBuilder>* _54135_sb, jule::Str _54155_path, _2234c269a_StrBuilder* _54171_message);
inline void _1a8d4c853_pushCrossCycleError(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8d49113_symbolBuilder>* _55440_target, jule::Ptr<_1a8da0ea0_ImportInfo>* _55465_imp, jule::Ptr<_1a875ce89_Token>* _55484_errorToken);
inline jule::Bool _1a8d4cc4e_checkImportCycles(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8da0ea0_ImportInfo> _57737_imp, jule::Ptr<_1a8d1e12c_UseDecl>* _57756_decl);
inline void _1a8d4d16c_checkPackageAccessibility(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _60845_decl, jule::Str* _60862_mod, jule::Str* _60873_path);
inline jule::Bool _1a8d4d568_importPackage(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _61438_imp, jule::Ptr<_1a8d1e12c_UseDecl>* _61461_decl);
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d4d8a9_importUseDecl(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _66138_decl);
inline void _1a8d4daa7_importUseDecls(jule::Ptr<_1a8d49113_symbolBuilder> _self_);
inline void _1a8d4dd60_appendNode(_1a8d49113_symbolBuilder* _self_, _1a8772564_Node* _69234_node);
inline void _1a8d4e05d_appendNodes(_1a8d49113_symbolBuilder* _self_);
inline void _1a8d4e316_pushDirectivePass(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8772982_Directive>* _72841_d);
inline void _1a8d4e514_appendTopDirectives(_1a8d49113_symbolBuilder* _self_);
inline void _1a8d4e712_build(jule::Ptr<_1a8d49113_symbolBuilder> _self_);
inline jule::Str _1a8d50713_Str(_1a8d5034a_Trait* _self_);
inline jule::Bool _1a8d50a54_Equal(jule::Ptr<_1a8d5034a_Trait> _self_, jule::Ptr<_1a8e8301b_TypeKind> _2521_other);
inline jule::Ptr<_1a8d3be91_Fn> _1a8d50ee9_FindMethod(_1a8d5034a_Trait* _self_, jule::Str _3429_ident);
inline jule::Ptr<_1a8d3be91_Fn> _1a8d5167b_findMethodInherit(_1a8d5034a_Trait* _self_, jule::Str* _5537_ident);
inline jule::Bool _1a8d52391_AutoExpr(_1a8d51ed9_EnumItem* _self_);
inline jule::Str _1a8d52dca_Str(_1a8d52a56_Enum* _self_);
inline jule::Bool _1a8d5321b_Equal(jule::Ptr<_1a8d52a56_Enum> _self_, jule::Ptr<_1a8e8301b_TypeKind> _3821_other);
inline jule::Ptr<_1a8d51ed9_EnumItem> _1a8d5364a_FindItem(_1a8d52a56_Enum* _self_, jule::Str _4727_ident);
inline jule::Str _1a8d545a2_Str(_1a8d54261_TypeEnum* _self_);
inline jule::Bool _1a8d548e3_Equal(jule::Ptr<_1a8d54261_TypeEnum> _self_, jule::Ptr<_1a8e8301b_TypeKind> _8021_other);
inline jule::Ptr<_1a8d53b89_TypeEnumItem> _1a8d54d22_FindItem(_1a8d54261_TypeEnum* _self_, jule::Str _8927_ident);
inline jule::Str _1a8d5773c_Str(_1a8d573b8_comptimeRange* _self_);
inline jule::Bool _1a8d57a7d_Equal(jule::Ptr<_1a8d573b8_comptimeRange> _self_, jule::Ptr<_1a8e8301b_TypeKind> _3621_other);
inline jule::Str _1a8d58254_Str(_1a8d57d8b_comptimeStructField* _self_);
inline jule::Bool _1a8d58595_Equal(jule::Ptr<_1a8d57d8b_comptimeStructField> _self_, jule::Ptr<_1a8e8301b_TypeKind> _4621_other);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d58b39__Name(jule::Ptr<_1a8d57d8b_comptimeStructField> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _5026_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _5041_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d59035__Type(jule::Ptr<_1a8d57d8b_comptimeStructField> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _6330_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _6345_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d59431__Public(jule::Ptr<_1a8d57d8b_comptimeStructField> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _7132_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _7147_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d5973e_subIdent(jule::Ptr<_1a8d57d8b_comptimeStructField> _self_, jule::Str* _8429_ident);
inline jule::Str _1a8d59dc1_Str(_1a8d59a4c_comptimeStructFields* _self_);
inline jule::Bool _1a8d5a212_Equal(jule::Ptr<_1a8d59a4c_comptimeStructFields> _self_, jule::Ptr<_1a8e8301b_TypeKind> _12021_other);
inline void _1a8d5a685_ready(_1a8d59a4c_comptimeStructFields* _self_, jule::Ptr<_1a8de41ad_Var>* _12429_keyA, jule::Ptr<_1a8de41ad_Var>* _12446_keyB);
inline void _1a8d5aaa3_step(_1a8d59a4c_comptimeStructFields* _self_, jule::I32 _14523_i, jule::Ptr<_1a8de41ad_Var>* _14536_keyA, jule::Ptr<_1a8de41ad_Var>* _14553_keyB);
inline jule::I32 _1a8d5ad39_len(_1a8d59a4c_comptimeStructFields* _self_);
inline jule::Str _1a8d5b4bb_Str(_1a8d5b147_comptimeStatic* _self_);
inline jule::Bool _1a8d5b80c_Equal(jule::Ptr<_1a8d5b147_comptimeStatic> _self_, jule::Ptr<_1a8e8301b_TypeKind> _16921_other);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d5be39__Name(jule::Ptr<_1a8d5b147_comptimeStatic> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _17326_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _17341_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d5c335__Type(jule::Ptr<_1a8d5b147_comptimeStatic> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _18630_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _18645_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d5c731__Public(jule::Ptr<_1a8d5b147_comptimeStatic> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _19432_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _19447_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d5ca72_subIdent(jule::Ptr<_1a8d5b147_comptimeStatic> _self_, jule::Str* _20729_ident);
inline jule::Str _1a8d5d17c_Str(_1a8d5cd08_comptimeStatics* _self_);
inline jule::Bool _1a8d5d4bd_Equal(jule::Ptr<_1a8d5cd08_comptimeStatics> _self_, jule::Ptr<_1a8e8301b_TypeKind> _24321_other);
inline void _1a8d5d941_ready(_1a8d5cd08_comptimeStatics* _self_, jule::Ptr<_1a8de41ad_Var>* _24729_keyA, jule::Ptr<_1a8de41ad_Var>* _24746_keyB);
inline void _1a8d5dd5e_step(_1a8d5cd08_comptimeStatics* _self_, jule::I32 _26823_i, jule::Ptr<_1a8de41ad_Var>* _26836_keyA, jule::Ptr<_1a8de41ad_Var>* _26853_keyB);
inline jule::I32 _1a8d5e0e5_len(_1a8d5cd08_comptimeStatics* _self_);
inline jule::Str _1a8d5e887_Str(_1a8d5e403_comptimeEnumField* _self_);
inline jule::Bool _1a8d5ebc8_Equal(jule::Ptr<_1a8d5e403_comptimeEnumField> _self_, jule::Ptr<_1a8e8301b_TypeKind> _29221_other);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6014b__Name(jule::Ptr<_1a8d5e403_comptimeEnumField> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _29626_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _29641_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6048c_subIdent(jule::Ptr<_1a8d5e403_comptimeEnumField> _self_, jule::Str* _30929_ident);
inline jule::Str _1a8d60b1e_Str(_1a8d6079a_comptimeEnumFields* _self_);
inline jule::Bool _1a8d60e60_Equal(jule::Ptr<_1a8d6079a_comptimeEnumFields> _self_, jule::Ptr<_1a8e8301b_TypeKind> _33121_other);
inline void _1a8d613d3_ready(_1a8d6079a_comptimeEnumFields* _self_, jule::Ptr<_1a8de41ad_Var>* _33529_keyA, jule::Ptr<_1a8de41ad_Var>* _33546_keyB);
inline void _1a8d61801_step(_1a8d6079a_comptimeEnumFields* _self_, jule::I32 _35623_i, jule::Ptr<_1a8de41ad_Var>* _35636_keyA, jule::Ptr<_1a8de41ad_Var>* _35653_keyB);
inline jule::I32 _1a8d61a87_len(_1a8d6079a_comptimeEnumFields* _self_);
inline jule::Str _1a8d62219_Str(_1a8d61d95_comptimeParam* _self_);
inline jule::Bool _1a8d6255a_Equal(jule::Ptr<_1a8d61d95_comptimeParam> _self_, jule::Ptr<_1a8e8301b_TypeKind> _38021_other);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d62cb9__Name(jule::Ptr<_1a8d61d95_comptimeParam> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _38426_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _38441_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d631b5__Type(jule::Ptr<_1a8d61d95_comptimeParam> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _39730_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _39745_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d635b1__Variadic(jule::Ptr<_1a8d61d95_comptimeParam> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _40534_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _40549_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d639ac__Reference(jule::Ptr<_1a8d61d95_comptimeParam> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _41835_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _41850_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d63ced_subIdent(jule::Ptr<_1a8d61d95_comptimeParam> _self_, jule::Str* _43129_ident);
inline jule::Str _1a8d64370_Str(_1a8d6402e_comptimeParams* _self_);
inline jule::Bool _1a8d646b1_Equal(jule::Ptr<_1a8d6402e_comptimeParams> _self_, jule::Ptr<_1a8e8301b_TypeKind> _47421_other);
inline void _1a8d64b34_ready(_1a8d6402e_comptimeParams* _self_, jule::Ptr<_1a8de41ad_Var>* _47829_keyA, jule::Ptr<_1a8de41ad_Var>* _47846_keyB);
inline void _1a8d65052_step(_1a8d6402e_comptimeParams* _self_, jule::I32 _49923_i, jule::Ptr<_1a8de41ad_Var>* _49936_keyA, jule::Ptr<_1a8de41ad_Var>* _49953_keyB);
inline jule::I32 _1a8d652d8_len(_1a8d6402e_comptimeParams* _self_);
inline jule::Str _1a8d6596a_Str(_1a8d655e6_comptimeTypeInfos* _self_);
inline jule::Bool _1a8d65cab_Equal(jule::Ptr<_1a8d655e6_comptimeTypeInfos> _self_, jule::Ptr<_1a8e8301b_TypeKind> _52321_other);
inline void _1a8d6622e_ready(_1a8d655e6_comptimeTypeInfos* _self_, jule::Ptr<_1a8de41ad_Var>* _52729_keyA, jule::Ptr<_1a8de41ad_Var>* _52746_keyB);
inline void _1a8d6664c_step(_1a8d655e6_comptimeTypeInfos* _self_, jule::I32 _54823_i, jule::Ptr<_1a8de41ad_Var>* _54836_keyA, jule::Ptr<_1a8de41ad_Var>* _54853_keyB);
inline jule::I32 _1a8d668d3_len(_1a8d655e6_comptimeTypeInfos* _self_);
inline jule::Str _1a8d67065_Str(_1a8d66be1_comptimeTypeInfo* _self_);
inline jule::Bool _1a8d673a6_Equal(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e8301b_TypeKind> _57221_other);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d67a05__Str(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _57625_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _57640_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d67e01__Kind(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _58930_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _58945_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d682ec__Bits(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _66730_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _66745_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d686e8__Elem(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _69030_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _69045_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d68ae4__Size(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _72330_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _72345_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d68ee0__Key(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _74129_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _74144_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d693db__Value(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _75431_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _75446_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d697d7__Fields(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _76732_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _76747_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d69bd3__Statics(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _79633_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _79648_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6a0ce__Public(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _81532_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _81547_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6a4ca__Binded(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _84232_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _84247_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6a8c6__Ordered(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _85529_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _85544_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6acc2__Comparable(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _86832_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _86847_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6b1bd__Mutable(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _88129_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _88144_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6b5b9__Types(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _89431_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _89446_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6b9b5__Exceptional(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _91737_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _91752_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6bdb1__CanNil(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _93532_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _93547_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6c2ac__RC(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _94828_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _94843_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6c6a8__Result(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _96132_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _96147_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6caa4__Params(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _97732_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _97747_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6cde5_subIdent(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Str* _99429_ident);
inline jule::Str _1a8d6d577_Str(_1a8d6d203_comptimeValue* _self_);
inline jule::Bool _1a8d6d8b8_Equal(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e8301b_TypeKind> _114921_other);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6de18__Unwrap(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _115332_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _115347_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6e314__Type(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _116130_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _116145_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6e710__Lvalue(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _116932_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _116947_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6eb0b__Mutable(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _118233_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _118248_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d70007__Const(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _119531_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _119546_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d70403__Field(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _120831_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _120846_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d70744_subIdent(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Str* _124329_ident);
inline jule::Str _1a8d70dc6_Str(_1a8d70a52_comptimeFiles* _self_);
inline jule::Bool _1a8d71217_Equal(jule::Ptr<_1a8d70a52_comptimeFiles> _self_, jule::Ptr<_1a8e8301b_TypeKind> _130021_other);
inline void _1a8d7168a_ready(_1a8d70a52_comptimeFiles* _self_, jule::Ptr<_1a8de41ad_Var>* _130429_keyA, jule::Ptr<_1a8de41ad_Var>* _130446_keyB);
inline void _1a8d71aa8_step(_1a8d70a52_comptimeFiles* _self_, jule::I32 _132523_i, jule::Ptr<_1a8de41ad_Var>* _132536_keyA, jule::Ptr<_1a8de41ad_Var>* _132553_keyB);
inline jule::I32 _1a8d71d3e_len(_1a8d70a52_comptimeFiles* _self_);
inline jule::Str _1a8d72702_Str(_1a8d7214c_comptimeFile* _self_);
inline jule::Bool _1a8d72a43_Equal(jule::Ptr<_1a8d7214c_comptimeFile> _self_, jule::Ptr<_1a8e8301b_TypeKind> _134921_other);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d72e50__Path(jule::Ptr<_1a8d7214c_comptimeFile> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _135330_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _135345_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d7334b__Name(jule::Ptr<_1a8d7214c_comptimeFile> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _136630_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _136645_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d73747__Dir(jule::Ptr<_1a8d7214c_comptimeFile> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _137929_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _137944_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d73a88_subIdent(jule::Ptr<_1a8d7214c_comptimeFile> _self_, jule::Str* _139229_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1a8dc1344_Sema>*,jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>*> _1a8d76a58_readyFn(jule::Ptr<_1a8d7665c_constraintChecker> _self_);
inline jule::Bool _1a8d76cde_readyFi(jule::Ptr<_1a8d7665c_constraintChecker> _self_);
inline jule::Bool _1a8d77075_readySi(jule::Ptr<_1a8d7665c_constraintChecker> _self_);
inline jule::Bool _1a8d7730b_ready(jule::Ptr<_1a8d7665c_constraintChecker> _self_);
inline jule::Bool _1a8d77592_check(jule::Ptr<_1a8d7665c_constraintChecker> _self_);
inline jule::Bool _1a8d78d79_IsTraitImpl(_1a8d789b1_Impl* _self_);
inline jule::Bool _1a8d79110_IsStructImpl(_1a8d789b1_Impl* _self_);
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d8686a_SelectPackage(_1a8d863c5_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> _46032_selector);
inline jule::Ptr<_1a8de41ad_Var> _1a8d86c66_FindVar(_1a8d863c5_scopeChecker* _self_, jule::Str _47126_ident, jule::Bool _47138_binded);
inline jule::Ptr<_1a8e82229_TypeAlias> _1a8d87162_FindTypeAlias(_1a8d863c5_scopeChecker* _self_, jule::Str _48832_ident, jule::Bool _48844_binded);
inline jule::Ptr<_1a8d26e26_Struct> _1a8d8755d_FindStruct(_1a8d863c5_scopeChecker* _self_, jule::Str _51329_ident, jule::Bool _51341_binded);
inline jule::Ptr<_1a8d3be91_Fn> _1a8d87959_FindFn(_1a8d863c5_scopeChecker* _self_, jule::Str _52225_ident, jule::Bool _52237_binded);
inline jule::Ptr<_1a8d5034a_Trait> _1a8d87c9a_FindTrait(_1a8d863c5_scopeChecker* _self_, jule::Str _53128_ident);
inline jule::Ptr<_1a8d52a56_Enum> _1a8d880db_FindEnum(_1a8d863c5_scopeChecker* _self_, jule::Str _54027_ident);
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8d8842c_FindTypeEnum(_1a8d863c5_scopeChecker* _self_, jule::Str _54931_ident);
inline jule::Bool _1a8d8877e_isUnsafe(jule::Ptr<_1a8d863c5_scopeChecker> _self_);
inline jule::Bool _1a8d88a15_isRoot(_1a8d863c5_scopeChecker* _self_);
inline void _1a8d88c13_stop(_1a8d863c5_scopeChecker* _self_);
inline jule::Bool _1a8d88e99_stopped(_1a8d863c5_scopeChecker* _self_);
inline jule::Bool _1a8d89230_isDeferred(jule::Ptr<_1a8d863c5_scopeChecker> _self_);
inline void _1a8d894d8_pushCaptured(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8de41ad_Var>* _61037_v);
inline jule::Ptr<_1a8d863c5_scopeChecker> _1a8d8976e_getRoot(jule::Ptr<_1a8d863c5_scopeChecker> _self_);
inline jule::Ptr<_1a8d863c5_scopeChecker> _1a8d89a05_getHardRoot(jule::Ptr<_1a8d863c5_scopeChecker> _self_);
inline jule::Ptr<_1a8de41ad_Var> _1a8d89d46_findVar(_1a8d863c5_scopeChecker* _self_, jule::Str _65026_ident);
inline jule::Ptr<_1a8d817aa_Label> _1a8d8a187_findLabel(_1a8d863c5_scopeChecker* _self_, jule::Str* _67129_ident);
inline jule::Ptr<_1a8d84d52_scopeLabel> _1a8d8a4c8_findLabelScope(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Str* _68735_ident);
inline jule::Ptr<_1a8d84d52_scopeLabel> _1a8d8a819_findLabelAll(_1a8d863c5_scopeChecker* _self_, jule::Str* _69932_ident);
inline jule::Bool _1a8d8ac15_isDuplicatedIdent(_1a8d863c5_scopeChecker* _self_, jule::Uintptr _71136_itself, jule::Str* _71154_ident);
inline void _1a8d8aebd_checkVarDecl(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a87863d0_VarDecl> _73136_decl);
inline void _1a8d8b276_checkTypeAlias(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8e82229_TypeAlias>* _76239_ta);
inline void _1a8d8b52e_checkTypeAliasDecl(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a878a082_TypeAliasDecl> _77842_decl);
inline jule::Ptr<_1a8d7de17_Scope> _1a8d8b7b5_getChild(_1a8d863c5_scopeChecker* _self_);
inline void _1a8d8bbd3_checkChildSsc(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8783586_ScopeTree>* _78938_tree, jule::Ptr<_1a8d7de17_Scope>* _78961_s, jule::Ptr<_1a8d863c5_scopeChecker>* _78977_ssc);
inline jule::Ptr<_1a8d7de17_Scope> _1a8d8c0ce_checkChildSc(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8783586_ScopeTree>* _79437_tree, jule::Ptr<_1a8d863c5_scopeChecker>* _79460_ssc);
inline jule::Ptr<_1a8d7de17_Scope> _1a8d8c420_checkChild(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8783586_ScopeTree>* _80035_tree);
inline void _1a8d8c6c8_checkAnonScope(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8783586_ScopeTree> _80538_tree);
inline void _1a8d8ca3b_processErrorCall(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8d3792b_BuiltinErrorCallExprModel>* _81041_m, jule::Ptr<_1a875ce89_Token> _81072_err);
inline void _1a8d8cce4_checkExpr(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8777899_Expr> _82333_expr);
inline jule::Ptr<_1a8d7e335_If> _1a8d8d135_checkIf(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8788eb5_If> _85431_i);
inline jule::Ptr<_1a8d7e632_Else> _1a8d8d476_checkElse(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a878938e_Else> _87433_e);
inline void _1a8d8d72e_checkConditional(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8789845_Conditional> _88040_conditional);
inline void _1a8d8dc07_checkIterScopeSsc(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Uintptr _89637_it, jule::Ptr<_1a8783586_ScopeTree> _89654_tree, jule::Ptr<_1a8d7de17_Scope>* _89677_s, jule::Ptr<_1a8d863c5_scopeChecker> _89692_ssc);
inline jule::Ptr<_1a8d7de17_Scope> _1a8d8e1ad_checkIterScopeSc(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Uintptr _90136_it, jule::Ptr<_1a8783586_ScopeTree> _90153_tree, jule::Ptr<_1a8d863c5_scopeChecker> _90175_ssc);
inline jule::Ptr<_1a8d7de17_Scope> _1a8d8e5a9_checkIterScope(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Uintptr _90734_it, jule::Ptr<_1a8783586_ScopeTree>* _90752_tree);
inline void _1a8d8e862_checkInfIter(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8787029_Iter>* _91237_it);
inline void _1a8d8eb1a_checkWhileIter(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8787029_Iter>* _91839_it);
inline void _1a8d90038_checkComptimeRangeIter(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8787029_Iter>* _96847_it, jule::Ptr<_1a8d80c4e_RangeIter>* _96863_kind, jule::Ptr<_1a8e4bcb5_Data>* _96886_d);
inline void _1a8d902e1_checkRangeIter(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8787029_Iter>* _102539_it);
inline void _1a8d90599_checkIter(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8787029_Iter> _108533_it);
inline jule::Bool _1a8d908da_checkValidContLabel(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Uintptr _110939_it);
inline jule::Bool _1a8d90c2b_checkValidBreakLabel(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Uintptr _112540_ptr);
inline jule::Ptr<_1a8d810d4_ContSt> _1a8d9106c_checkContValidScope(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8788a0e_ContSt> _114839_c);
inline void _1a8d91325_checkCont(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8788a0e_ContSt> _117229_c);
inline void _1a8d915cd_checkLabel(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8780b49_LabelSt> _121934_l);
inline void _1a8d91886_pushGoto(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8781023_GotoSt> _123832_gt);
inline void _1a8d91b3e_checkPostfix(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8782013_AssignSt> _125236_a);
inline jule::Bool _1a8d91e80_isNewAssignIdent(_1a8d863c5_scopeChecker* _self_, jule::Str _128535_ident);
inline void _1a8d92238_removeInteriorMutRisk(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8e4bcb5_Data>* _129846_d);
inline jule::Bool _1a8d926de_checkStructureAssignOp(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _131247_s, jule::Ptr<_1a8782013_AssignSt>* _131267_a, jule::Ptr<_1a8e4bcb5_Data>* _131286_r);
inline void _1a8d92997_checkSingleAssign(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8782013_AssignSt>* _135142_a);
inline void _1a8d9302a_processEndPartOfMultiAssign(_1a8d863c5_scopeChecker* _self_, jule::Ptr<_1a8d829ba_MultiAssign>* _142951_st, jule::Ptr<_1a8782013_AssignSt>* _143014_a, jule::Ptr<_1a8781980_AssignLeft>* _143033_lexpr, jule::Ptr<_1a8e4bcb5_Data>* _143058_l, jule::Ptr<_1a8e4bcb5_Data>* _143073_r);
inline void _1a8d932d3_checkMultiAssign(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8782013_AssignSt>* _149941_a);
inline void _1a8d9358b_checkAssignSt(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8782013_AssignSt> _154737_a);
inline jule::Ptr<_1a8d7de17_Scope> _1a8d93987_checkCaseScope(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8d83b53_Case>* _155835_c, jule::Ptr<_1a8783586_ScopeTree>* _155850_tree);
inline jule::Ptr<_1a8d83b53_Case> _1a8d93ee8_checkCase(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8d8312a_Match> _156433_m, jule::I32 _156444_i, jule::Ptr<_1a878a538_Case> _156456_c, jule::Ptr<_1a8e4bcb5_Data> _156475_expr);
inline void _1a8d94416_checkCases(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a878ad52_MatchCase>* _163935_m, jule::Ptr<_1a8d8312a_Match> _163954_rm, jule::Ptr<_1a8e4bcb5_Data> _163970_expr);
inline jule::Ptr<_1a8d83b53_Case> _1a8d94812_checkDefault(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8d8312a_Match> _166036_m, jule::Ptr<_1a878938e_Else> _166051_d);
inline void _1a8d94b75_checkComptimePanic(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a875ce89_Token> _166842_callToken, jule::Ptr<_1a8d7de17_Scope>* _166862_s);
inline void _1a8d94ed8_processConstMatch(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8d8312a_Match>* _170042_tm, jule::Ptr<_1a878ad52_MatchCase>* _170059_m);
inline void _1a8d95291_checkTypeMatch(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a878ad52_MatchCase>* _172939_m);
inline void _1a8d95549_checkCommonMatch(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a878ad52_MatchCase>* _177141_m);
inline void _1a8d95802_checkMatch(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a878ad52_MatchCase> _182134_m);
inline void _1a8d95aaa_checkFall(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8781320_FallSt> _182929_f);
inline jule::Ptr<_1a8d814ad_BreakSt> _1a8d95deb_checkBreakWithLabel(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8788635_BreakSt> _185239_b);
inline jule::Ptr<_1a8d814ad_BreakSt> _1a8d9623c_checkPlainBreak(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8788635_BreakSt> _191035_b);
inline void _1a8d964e5_checkBreak(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8788635_BreakSt> _193230_b);
inline void _1a8d9679d_checkRet(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a87867a9_RetSt> _194332_r);
inline void _1a8d96a56_checkUseExpr(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a877826d_UseExpr> _196832_ue);
inline void _1a8d96d0e_checkNode(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Any* _198434_node);
inline void _1a8d9700c_checkResult(jule::Ptr<_1a8d863c5_scopeChecker> _self_);
inline void _1a8d9720a_checkTree(jule::Ptr<_1a8d863c5_scopeChecker> _self_);
inline void _1a8d9756d_checkGoto(_1a8d863c5_scopeChecker* _self_, jule::Ptr<_1a8d853d5_scopeGoto>* _208633_gt, jule::Ptr<_1a8d84d52_scopeLabel>* _208654_label);
inline void _1a8d9776b_checkGotos(_1a8d863c5_scopeChecker* _self_);
inline void _1a8d97969_checkLabels(_1a8d863c5_scopeChecker* _self_);
inline void _1a8d97b67_checkVars(_1a8d863c5_scopeChecker* _self_);
inline void _1a8d97d65_checkAliases(_1a8d863c5_scopeChecker* _self_);
inline void _1a8d981c8_check(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8783586_ScopeTree>* _216430_tree, jule::Ptr<_1a8d7de17_Scope>* _216453_s);
inline jule::Ptr<_1a8d863c5_scopeChecker> _1a8d9845e_newChildChecker(jule::Ptr<_1a8d863c5_scopeChecker> _self_);
inline void _1a8d99e11_checkCdef(_1a8d99a04_directiveChecker* _self_, jule::Ptr<_1a8772982_Directive>* _1629_d);
inline void _1a8d9a1b9_checkTypedef(_1a8d99a04_directiveChecker* _self_, jule::Ptr<_1a8772982_Directive>* _3232_d);
inline void _1a8d9a472_checkNamespace(_1a8d99a04_directiveChecker* _self_, jule::Ptr<_1a8772982_Directive>* _4838_d);
inline void _1a8d9a72a_checkDeprecated(_1a8d99a04_directiveChecker* _self_, jule::Ptr<_1a8772982_Directive>* _9939_d);
inline void _1a8d9a9d3_checkTest(_1a8d99a04_directiveChecker* _self_, jule::Ptr<_1a8772982_Directive>* _13929_d);
inline void _1a8d9ac8b_checkDirective(_1a8d99a04_directiveChecker* _self_, jule::Ptr<_1a8772982_Directive>* _16038_d);
inline void _1a8d9ae89_check(_1a8d99a04_directiveChecker* _self_);
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8da1489_SelectPackage(_1a8da0ea0_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> );
inline jule::Ptr<_1a8de41ad_Var> _1a8da1885_FindVar(_1a8da0ea0_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool );
inline jule::Ptr<_1a8e82229_TypeAlias> _1a8da1c81_FindTypeAlias(_1a8da0ea0_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool );
inline jule::Ptr<_1a8d26e26_Struct> _1a8da217c_FindStruct(_1a8da0ea0_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool );
inline jule::Ptr<_1a8d3be91_Fn> _1a8da2578_FindFn(_1a8da0ea0_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool );
inline jule::Ptr<_1a8d5034a_Trait> _1a8da28b9_FindTrait(_1a8da0ea0_ImportInfo* _self_, jule::Str _23628_ident);
inline jule::Ptr<_1a8d52a56_Enum> _1a8da2c0a_FindEnum(_1a8da0ea0_ImportInfo* _self_, jule::Str _24727_ident);
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8da304b_FindTypeEnum(_1a8da0ea0_ImportInfo* _self_, jule::Str _25831_ident);
inline jule::Bool _1a8da34e1_isLookupable(_1a8da0ea0_ImportInfo* _self_, jule::Str* _26728_ident);
inline jule::Bool _1a8da3832_existIdent(_1a8da0ea0_ImportInfo* _self_, jule::Str _28725_ident);
inline jule::Bool _1a8da3ab8_isAccessibleViaSelection(_1a8da0ea0_ImportInfo* _self_);
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8da436b_SelectPackage(_1a8da3dc6_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> );
inline jule::Ptr<_1a8de41ad_Var> _1a8da4767_FindVar(_1a8da3dc6_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded);
inline jule::Ptr<_1a8e82229_TypeAlias> _1a8da4b63_FindTypeAlias(_1a8da3dc6_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded);
inline jule::Ptr<_1a8d26e26_Struct> _1a8da505e_FindStruct(_1a8da3dc6_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded);
inline jule::Ptr<_1a8d3be91_Fn> _1a8da545a_FindFn(_1a8da3dc6_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded);
inline jule::Ptr<_1a8d5034a_Trait> _1a8da579b_FindTrait(_1a8da3dc6_Package* _self_, jule::Str _33828_ident);
inline jule::Ptr<_1a8d52a56_Enum> _1a8da5adc_FindEnum(_1a8da3dc6_Package* _self_, jule::Str _34427_ident);
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8da5e2d_FindTypeEnum(_1a8da3dc6_Package* _self_, jule::Str _35031_ident);
inline jule::Ptr<_1a8d66be1_comptimeTypeInfo> _1a8dc0b7e_pushComptimeTypeInfo(_1a8dc073e_commonSemaMeta* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _21444_t);
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8dc17d9_SelectPackage(_1a8dc1344_Sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> _24332_selector);
inline jule::Ptr<_1a8de41ad_Var> _1a8dc1bd5_FindVar(_1a8dc1344_Sema* _self_, jule::Str _25326_ident, jule::Bool _25338_binded);
inline jule::Ptr<_1a8e82229_TypeAlias> _1a8dc20d1_FindTypeAlias(_1a8dc1344_Sema* _self_, jule::Str _28532_ident, jule::Bool _28544_binded);
inline jule::Ptr<_1a8d26e26_Struct> _1a8dc24cc_FindStruct(_1a8dc1344_Sema* _self_, jule::Str _31729_ident, jule::Bool _31741_binded);
inline jule::Ptr<_1a8d3be91_Fn> _1a8dc28c8_FindFn(_1a8dc1344_Sema* _self_, jule::Str _34825_ident, jule::Bool _34837_binded);
inline jule::Ptr<_1a8d5034a_Trait> _1a8dc2c19_FindTrait(_1a8dc1344_Sema* _self_, jule::Str _38028_ident);
inline jule::Ptr<_1a8d52a56_Enum> _1a8dc305a_FindEnum(_1a8dc1344_Sema* _self_, jule::Str _41227_ident);
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8dc339b_FindTypeEnum(_1a8dc1344_Sema* _self_, jule::Str _44431_ident);
inline jule::Bool _1a8dc37a8_isFlag(_1a8dc1344_Sema* _self_, jule::I32 _47321_flags);
inline void _1a8dc3a61_setCurrentFile(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8e4694c_SymbolTable> _47537_f);
inline void _1a8dc3e7e_pushErr(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token> _47726_token, jule::Str _47741_fmt, jule::Slice<jule::Any> _47754_args);
inline void _1a8dc42e2_pushSuggestion(_1a8dc1344_Sema* _self_, jule::Str _48233_fmt, jule::Slice<jule::Any> _48246_args);
inline jule::Bool _1a8dc46dd_isAccessibleDefine(_1a8dc1344_Sema* _self_, jule::Bool _48733_public, jule::Ptr<_1a875ce89_Token> _48747_token);
inline jule::Bool _1a8dc4b94_isDuplicatedIdent(_1a8dc1344_Sema* _self_, jule::Uintptr _49432_itself, jule::Str* _49450_ident, jule::Bool _49462_binded);
inline void _1a8dc5007_checkDirectives(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Slice<jule::Ptr<_1a8772982_Directive>>* _51140_d, jule::Any _51166_o);
inline jule::Bool _1a8dc54ad_checkGenericQuantity(_1a8dc1344_Sema* _self_, jule::I32 _52039_required, jule::I32 _52054_given, jule::Ptr<_1a875ce89_Token> _52066_token);
inline jule::Bool _1a8dc58a9_isDuplicatedImportSelection(_1a8dc1344_Sema* _self_, jule::Uintptr _53942_itself, jule::Str* _53960_ident);
inline jule::Any _1a8dc5ca5_getImportDef(_1a8dc1344_Sema* _self_, jule::Str* _55228_ident, jule::Ptr<_1a8da0ea0_ImportInfo>* _55245_imp);
inline jule::Bool _1ac34e56b_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8de41ad_Var>* _56759_s);
inline jule::Bool _1ac35385b_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8e82229_TypeAlias>* _56759_s);
inline jule::Bool _1ac357ad5_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8d26e26_Struct>* _56759_s);
inline jule::Bool _1ac35c14a_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8d5034a_Trait>* _56759_s);
inline jule::Bool _1ac3613e6_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8d52a56_Enum>* _56759_s);
inline jule::Bool _1ac365692_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8d54261_TypeEnum>* _56759_s);
inline jule::Bool _1ac36991b_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8d3be91_Fn>* _56759_s);
inline jule::Bool _1a8dc64e2_checkImportSelectedSelections(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _58153_imp);
inline jule::Bool _1ac36e1d4_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et);
inline jule::Bool _1ac36ed72_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et);
inline jule::Bool _1ac373062_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d26e26_Struct>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et);
inline jule::Bool _1ac374371_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d3be91_Fn>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et);
inline jule::Bool _1ac376a5a_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d5034a_Trait>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et);
inline jule::Bool _1ac37a102_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d52a56_Enum>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et);
inline jule::Bool _1ac37c797_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d54261_TypeEnum>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et);
inline jule::Bool _1a8dc6c2e_checkImportAllSelections(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _64044_imp);
inline jule::Bool _1a8dc7070_checkImportSelections(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _65445_imp);
inline jule::Bool _1a8dc73b1_isUseAliasDuplication(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _66341_imp);
inline jule::Bool _1a8dc7702_checkImport(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _67935_imp);
inline void _1a8dc7900_checkImports(_1a8dc1344_Sema* _self_);
inline void _1a8dc7aed_implFileImpls(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8dc7ceb_implImpls(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8dc7ee9_checkEnums(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8dc81e7_checkFileInherits(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8dc83e5_checkInherits(jule::Ptr<_1a8dc1344_Sema> _self_);
inline _1a8e94dc9_typeChecker _1a8dc889b_typeChecker(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Trait _76835_l, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _76850_generics, jule::Ptr<_1a8e93dd9_referencer> _76913_referencer);
inline jule::Ptr<_1a8e8301b_TypeKind> _1a8dc8e0c_buildTypeWithRefers(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8773565_TypeDecl>* _79544_t, jule::Trait _79567_l, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _79613_generics, jule::Ptr<_1a8e93dd9_referencer> _79641_referencer);
inline jule::Bool _1a8dc946d_checkTypeWithRefers(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8a1dd_TypeSymbol>* _80244_t, jule::Trait _80264_l, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _80313_generics, jule::Ptr<_1a8e93dd9_referencer> _80341_referencer);
inline jule::Ptr<_1a8d7665c_constraintChecker> _1a8dc9704_constraintChecker(jule::Ptr<_1a8dc1344_Sema> _self_);
inline jule::Bool _1a8dc9b00_checkType(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8a1dd_TypeSymbol>* _81734_t, jule::Trait _81754_l);
inline jule::Ptr<_1a8e8301b_TypeKind> _1a8dca0a6_buildTypeWithGenerics(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8773565_TypeDecl>* _82346_t, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _82413_generics, jule::Ptr<_1a8d43151_ReferenceStack> _82441_refers);
inline jule::Ptr<_1a8e8301b_TypeKind> _1a8dca738_selectType(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8773565_TypeDecl>* _84135_t);
inline jule::Ptr<_1a8e4d9dc_Eval> _1a8dcabde_evalpd(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Trait _85330_l, jule::Ptr<_1a8e8301b_TypeKind> _85345_p, jule::Ptr<_1a8de41ad_Var> _85363_owner);
inline jule::Ptr<_1a8e4d9dc_Eval> _1a8dcb0da_evalp(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Trait _86829_l, jule::Ptr<_1a8e8301b_TypeKind> _86844_p);
inline jule::Ptr<_1a8e4d9dc_Eval> _1a8dcb42b_eval(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Trait _87328_l);
inline jule::Bool _1a8dcb98c_checkAssignType(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Bool _87735_destIsRef, jule::Ptr<_1a8e8301b_TypeKind>* _87757_dest, jule::Ptr<_1a8e4bcb5_Data>* _87814_d, jule::Ptr<_1a875ce89_Token> _87828_errorToken);
inline jule::Bool _1a8dcbe43__checkTypeCompatibility(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8301b_TypeKind>* _91948_dest, jule::Ptr<_1a8e8301b_TypeKind>* _91970_src, jule::Ptr<_1a875ce89_Token> _92013_errorToken);
inline jule::Bool _1a8dcc3e9_checkTypeCompatibility(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8301b_TypeKind>* _93747_dest, jule::Ptr<_1a8e8301b_TypeKind>* _93814_src, jule::Ptr<_1a875ce89_Token>* _93835_errorToken);
inline void _1a8dcc817_pushCompatiblityError(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _94645_dest, jule::Ptr<_1a8e4bcb5_Data>* _94667_src, jule::Ptr<_1a875ce89_Token>* _94714_errorToken);
inline jule::Bool _1a8dcccbd_checkTypeCompatibility1(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8301b_TypeKind>* _96448_dest, jule::Ptr<_1a8e4bcb5_Data>* _96470_src, jule::Ptr<_1a875ce89_Token>* _96514_errorToken);
inline jule::Ptr<_1a8e8301b_TypeKind> _1a8dcd274_buildNonGenericTypeKind(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8773565_TypeDecl>* _97948_ast, jule::Slice<jule::Ptr<_1a8780770_GenericDecl>>* _98014_generics, jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>>* _98050_ignored);
inline jule::Bool _1a8dcd670_buildFnNonGenericTypeKinds(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _99151_f, jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>>* _99167_ignored);
inline jule::Ptr<_1a8d3ee72_FnIns> _1a8dcd9b1_getTraitCheckFnKind(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _101344_f);
inline jule::Bool _1a8dcde67_checkConstraintsFn(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _103643_f, jule::Ptr<_1a875ce89_Token>* _103659_et, jule::Ptr<_1a8d3ee72_FnIns> _103675_exist);
inline jule::Bool _1a8dce41d_checkConstraintsStruct(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _105047_s, jule::Ptr<_1a875ce89_Token>* _105067_et, jule::Ptr<_1a8d29ba4_StructIns> _105083_exist);
inline jule::Bool _1a8dce819_fnEnvironment(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _106738_f, jule::Fn<jule::Bool,jule::Ptr<_1a8dc1344_Sema>*,jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>*> _106749_algo);
inline void _1a8dceac2_checkFnParamKind(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3dde9_ParamIns>* _109441_p);
inline jule::Bool _1a8dcee13_reloadFnInsTypes(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3ee72_FnIns> _110140_f);
inline jule::Bool _1a8dd03b9_checkRefValidityForInitExpr(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Bool _113747_leftMut, jule::Ptr<_1a8e4bcb5_Data>* _113767_d, jule::Ptr<_1a875ce89_Token>* _113782_errorToken);
inline jule::Bool _1a8dd070a_isMutRiskyStruct(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d29ba4_StructIns>* _115432_s);
inline jule::Bool _1a8dd0d26_checkValidityForInitExpr(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Bool _118144_leftMut, jule::Bool _118159_leftRef, jule::Ptr<_1a8e8301b_TypeKind>* _118210_leftKind, jule::Ptr<_1a8e4bcb5_Data>* _118236_d, jule::Ptr<_1a875ce89_Token>* _118251_errorToken);
inline jule::Bool _1a8dd1222_checkTypeAliasDeclKind(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e82229_TypeAlias>* _120947_ta, jule::Trait _120967_l);
inline void _1a8dd1585_checkTypeAliasDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e82229_TypeAlias>* _123243_ta, jule::Trait _123263_l);
inline void _1a8dd183d_checkTypeAliasDeclDup(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e82229_TypeAlias>* _124046_ta);
inline jule::Bool _1a8dd1ac4_checkTypeAliasDecls(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1ac435784_checkEnumItemsDup(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d51ed9_EnumItem>> _126439_items);
inline void _1ac442a8d_checkEnumItemsDup(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d53b89_TypeEnumItem>> _126439_items);
inline void _1a8dd2135_checkEnumItemsStr(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d52a56_Enum>* _128442_e);
inline void _1ac411397_checkEnumItemInt(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _131046_eval, jule::Ptr<_1a8d52a56_Enum>* _131064_e, jule::Ptr<_1a8e8aae5_Prim>* _131075_prim, jule::Ptr<_1a8d51ed9_EnumItem>* _131093_item, jule::U64* _1310115_n);
inline void _1ac42141d_checkEnumItemInt(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _131046_eval, jule::Ptr<_1a8d52a56_Enum>* _131064_e, jule::Ptr<_1a8e8aae5_Prim>* _131075_prim, jule::Ptr<_1a8d51ed9_EnumItem>* _131093_item, jule::I64* _1310115_n);
inline void _1ac40c53b_checkEnumItemsInt1(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8aae5_Prim>* _134544_prim, jule::Ptr<_1a8d52a56_Enum>* _134562_e);
inline void _1ac41cb23_checkEnumItemsInt1(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8aae5_Prim>* _134544_prim, jule::Ptr<_1a8d52a56_Enum>* _134562_e);
inline void _1a8dd2cd4_checkEnumItemsInt(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d52a56_Enum>* _138042_e);
inline void _1a8dd308c_checkEnumDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d52a56_Enum>* _139038_e);
inline void _1a8dd3345_checkTypeEnumDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d54261_TypeEnum>* _143142_e);
inline jule::Bool _1a8dd35cb_checkEnumDecls(jule::Ptr<_1a8dc1344_Sema> _self_);
inline jule::Bool _1a8dd3862_checkTypeEnumDecls(jule::Ptr<_1a8dc1344_Sema> _self_);
inline jule::Bool _1a8dd3ba3_checkDeclGenerics(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8780770_GenericDecl>>* _149437_generics);
inline jule::Bool _1a8dd3ee4_checkFnDeclParamsDup(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d3be91_Fn>* _152140_f);
inline jule::Bool _1a8dd4335_checkFnDeclResultDup(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d3be91_Fn>* _155840_f);
inline jule::Bool _1a8dd4676_checkFnVariadicParam(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _160345_f);
inline void _1a8dd492e_checkFnDeclPrototype(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _161645_f);
inline jule::Bool _1a8dd4dd5_catchTraitInheritCycle(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d5034a_Trait> _163842_t1, jule::Ptr<_1a8d5034a_Trait> _163858_t2, _2234c269a_StrBuilder* _163875_message);
inline jule::Bool _1a8dd5226__checkTraitDeclInherits(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d5034a_Trait>* _165748_t);
inline void _1a8dd54ce_checkTraitDeclInherits(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d5034a_Trait>* _169847_t);
inline void _1a8dd5787_checkTraitDeclMethod(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _172345_f);
inline void _1a8dd5a40_checkTraitDeclMethods(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d5034a_Trait>* _173746_t);
inline void _1a8dd5ce8_checkTraitDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d5034a_Trait>* _177339_t);
inline jule::Bool _1a8dd607e_checkTraitDecls(jule::Ptr<_1a8dc1344_Sema> _self_);
inline jule::Bool _1a8dd647a_checkTraitImplMethods(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d5034a_Trait>* _179745_base, jule::Ptr<_1a8d789b1_Impl>* _179760_ipl);
inline jule::Bool _1a8dd6876_implToStruct(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _180837_dest, jule::Ptr<_1a8d789b1_Impl>* _180857_ipl);
inline void _1a8dd6b2e_implTrait(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d789b1_Impl>* _185034_decl);
inline void _1a8dd6dd7_implStruct(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d789b1_Impl>* _189335_decl);
inline void _1a8dd7190_implImpl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d789b1_Impl>* _191733_decl);
inline void _1a8dd7503_checkVarDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8de41ad_Var>* _192837_decl, jule::Trait _192853_l);
inline void _1a8dd77ab_checkGlobalVarDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8de41ad_Var>* _196543_decl);
inline jule::Bool _1a8dd7a42_checkGlobalDecls(jule::Ptr<_1a8dc1344_Sema> _self_);
inline jule::Bool _1a8dd7e3d_checkStructTraitImpl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _199345_strct, jule::Ptr<_1a8d5034a_Trait>* _199366_trt);
inline jule::Bool _1a8dd827e_checkStructImpls(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _201741_s);
inline jule::Bool _1a8dd85c0_checkStructFields(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _202542_st);
inline void _1a8dd8878_checkStructDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _204240_s);
inline jule::Bool _1a8dd8b0e_checkStructDecls(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8dd8db7_checkAnonFuncDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _207242_f);
inline void _1a8dd9170_checkFuncDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _207738_f);
inline jule::Bool _1a8dd94b1_checkFuncDeclsBy(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Slice<jule::Ptr<_1a8d3be91_Fn>>* _209941_funcs);
inline jule::Bool _1a8dd9747_checkFuncDecls(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8dd9b65_pushCycleError(_1a8dc1344_Sema* _self_, jule::Str* _211530_st1, jule::Str* _211541_st2, _2234c269a_StrBuilder* _211556_message);
inline void _1a8dda319_checkPackageDecls(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8dda67c_checkDataForTypeInference(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8e4bcb5_Data>* _217545_d, jule::Ptr<_1a875ce89_Token>* _217556_err_token);
inline void _1a8dda935_checkVarValue(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8de41ad_Var>* _218738_v);
inline void _1a8ddac98_evalVarValue(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8de41ad_Var>* _224037_decl, jule::Trait _224053_l);
inline void _1a8ddb10b_checkVar(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8de41ad_Var>* _225733_decl, jule::Trait _225749_l);
inline void _1a8ddb309_checkGlobals(jule::Ptr<_1a8dc1344_Sema> _self_);
inline jule::Ptr<_1a8d3ee72_FnIns> _1a8ddb705_readyToCheckFn(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _228139_s, jule::Ptr<_1a8d3be91_Fn>* _228159_f);
inline void _1a8ddba68_checkTypeMethod(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _229540_s, jule::Ptr<_1a8d3be91_Fn>* _229560_f);
inline jule::Ptr<_1a8d3ee72_FnIns> _1a8ddc01e_checkStructInsOp(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _230841_s, jule::Ptr<_1a8d3be91_Fn>* _230861_f, jule::Fn<jule::Bool,jule::Ptr<_1a8d3be91_Fn>> _230869_p);
inline jule::Bool _1a8ddc41a_checkStructEnv(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _231839_s, jule::Ptr<_1a875ce89_Token> _231858_errorToken);
inline jule::Bool _1a8ddc816_precheckStructIns(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _241542_s, jule::Ptr<_1a875ce89_Token> _241561_errorToken);
inline void _1a8ddcabe_checkStructIns(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _243039_s);
inline void _1a8ddcd77_checkTypeStruct(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _243640_s);
inline void _1a8ddd075_checkStructTypes(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8ddd32d_checkStructInsOperators(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns> _246047_s);
inline void _1a8ddd5d6_precheckStructType(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _252443_s);
inline void _1a8ddd7d4_precheckStructTypes(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8ddda8c_checkRets(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _255033_f);
inline void _1a8ddde00_checkFnInsSc(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _256136_f, jule::Ptr<_1a8d863c5_scopeChecker>* _256152_sc);
inline void _1a8dde263_checkFnInsCaller(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _257441_f, jule::Ptr<_1a875ce89_Token> _257456_caller);
inline void _1a8dde51b_checkFnIns(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _259635_f);
inline void _1a8dde7c4_checkFunc(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _260034_f);
inline void _1a8ddea7c_checkTestFn(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _261535_f);
inline void _1a8dded35_precheckFunc(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _264837_f);
inline void _1a8de0033_precheckFuncs(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8de0231_checkFuncs(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8de042e_checkPackageTypes(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8de062c_setFileSemaFields(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8de082a_setSemaFields(jule::Ptr<_1a8dc1344_Sema> _self_);
inline void _1a8de0ad3_check(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _272630_files);
inline _1a8de1012_missingRetChecker static__1a8de13ca_new(void);
inline jule::Bool _1a8de16d8_checkConditional(_1a8de1012_missingRetChecker* _self_, jule::Ptr<_1a8d7ea50_Conditional> _277435_c);
inline jule::Bool _1a8de1a29_checkMatch(_1a8de1012_missingRetChecker* _self_, jule::Ptr<_1a8d8312a_Match> _278629_m);
inline jule::Bool _1a8de1d6a_checkInfIter(_1a8de1012_missingRetChecker* _self_, jule::Ptr<_1a8d7ed4c_InfIter> _281231_it);
inline jule::Bool _1a8de21ab_checkScope(_1a8de1012_missingRetChecker* _self_, jule::Ptr<_1a8d7de17_Scope> _283129_s);
inline jule::Bool _1a8de24ec_check(_1a8de1012_missingRetChecker* _self_, jule::Ptr<_1a8d7de17_Scope> _287724_s);
inline jule::Bool _1a8de4587_IsInitialized(_1a8de41ad_Var* _self_);
inline jule::Bool _1a8de481d_IsTypeInferred(_1a8de41ad_Var* _self_);
inline jule::Bool _1a8de4aa4_untypedConstant(_1a8de41ad_Var* _self_);
inline jule::Bool static__1a8de5654_Dispose(jule::Ptr<_1a8d3be91_Fn> _1023_f);
inline jule::Bool static__1a8de591d_Str(jule::Ptr<_1a8d3be91_Fn> _2419_f);
inline jule::Bool static__1a8de5c92_logical(jule::Ptr<_1a8d3be91_Fn>* _4624_f, jule::Str _4632_ident);
inline jule::Bool static__1a8de605b_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _7218_f);
inline jule::Bool static__1a8de6325_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _7718_f);
inline jule::Bool static__1a8de65de_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _8220_f);
inline jule::Bool static__1a8de68a8_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _8718_f);
inline jule::Bool static__1a8de6b72_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _9220_f);
inline jule::Bool static__1a8de6ee6_result(jule::Ptr<_1a8d3be91_Fn>* _9623_f, jule::Str _9631_ident);
inline jule::Bool static__1a8de72b0_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _11819_f);
inline jule::Bool static__1a8de7579_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _12319_f);
inline jule::Bool static__1a8de7843_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _12819_f);
inline jule::Bool static__1a8de7b0c_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _13319_f);
inline jule::Bool static__1a8de7dc6_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _13819_f);
inline jule::Bool static__1a8de8190_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _14319_f);
inline jule::Bool static__1a8de8459_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _14819_f);
inline jule::Bool static__1a8de8723_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _15322_f);
inline jule::Bool static__1a8de89dc_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _15821_f);
inline jule::Bool static__1a8de8ca6_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _16322_f);
inline jule::Bool static__1a8de912a_unary(jule::Ptr<_1a8d3be91_Fn>* _16722_f, jule::Str _16730_ident);
inline jule::Bool static__1a8de93e4_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _18719_f);
inline jule::Bool static__1a8de96ad_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _19219_f);
inline jule::Bool static__1a8de9977_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _19722_f);
inline jule::Bool static__1a8de9ceb_assign(jule::Ptr<_1a8d3be91_Fn>* _20123_f, jule::Str _20131_ident);
inline jule::Bool static__1a8dea0b5_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _22125_f);
inline jule::Bool static__1a8dea37e_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _22625_f);
inline jule::Bool static__1a8dea648_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _23125_f);
inline jule::Bool static__1a8dea912_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _23625_f);
inline jule::Bool static__1a8deabcb_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _24125_f);
inline jule::Bool static__1a8deae95_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _24625_f);
inline jule::Bool static__1a8deb25e_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _25125_f);
inline jule::Bool static__1a8deb528_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _25627_f);
inline jule::Bool static__1a8deb7e2_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _26128_f);
inline jule::Bool static__1a8debaab_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _26628_f);
inline void _1a8e33e78_pushErr(_1a8e3397d_typeCompatibilityChecker* _self_, jule::Str _11926_fmt, jule::Slice<jule::Any> _11939_args);
inline jule::Bool _1a8e3420e_checkTrait(_1a8e3397d_typeCompatibilityChecker* _self_);
inline jule::Bool _1a8e34495_checkPtr(_1a8e3397d_typeCompatibilityChecker* _self_);
inline jule::Bool _1a8e3472b_checkPrim(_1a8e3397d_typeCompatibilityChecker* _self_);
inline jule::Bool _1a8e34b27_typeEnum(_1a8e3397d_typeCompatibilityChecker* _self_, jule::Ptr<_1a8d54261_TypeEnum>* _19928_e, jule::Ptr<_1a8e8301b_TypeKind>* _19947_t2);
inline jule::Bool _1a8e34dad_checkTypeEnum(_1a8e3397d_typeCompatibilityChecker* _self_);
inline jule::Bool _1a8e35144_check(_1a8e3397d_typeCompatibilityChecker* _self_);
inline void _1a8e35bb1_pushErr(_1a8e3572c_assignTypeChecker* _self_, jule::Str _25526_fmt, jule::Slice<jule::Any> _25539_args);
inline jule::Bool _1a8e35e47_checkValidity(_1a8e3572c_assignTypeChecker* _self_);
inline jule::Bool _1a8e361cd_checkConst(_1a8e3572c_assignTypeChecker* _self_);
inline jule::Bool _1a8e36464_checkCompatibility(_1a8e3572c_assignTypeChecker* _self_);
inline jule::Bool _1a8e366ea_check(_1a8e3572c_assignTypeChecker* _self_);
inline jule::Bool _1ac5ceb09_annotateConstraintElem(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _35749_k);
inline jule::Bool _1ac5ce4aa_annotateConstraintElem(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _35749_k);
inline jule::Bool _1ac5d1633_annotateConstraintElem(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _35749_k);
inline jule::Bool _1ac5d8c23_annotateConstraintElem(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _35749_k);
inline jule::Bool _1a8e379e8_annotateConstraintMap(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _37745_k);
inline jule::Bool _1a8e37d39_annotateConstraintTup(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _39245_k);
inline jule::Bool _1a8e3817a_annotateConstraintFn(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _40944_k);
inline jule::Bool _1a8e384bb_annotateConstraintIdent(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _43047_k);
inline jule::Bool _1a8e3880c_annotateConstraint(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _45942_k);
inline void _1a8e38b70_pushGeneric(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _48435_k, jule::I32 _48449_i);
inline jule::Bool _1a8e38eb1_annotatePrim(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _49943_k);
inline jule::Bool _1a8e39302_annotateArr(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _50342_k);
inline jule::Bool _1a8e39643_annotateSlc(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _51342_k);
inline jule::Bool _1a8e39a3e_checkMapKey(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _52341_k, jule::Ptr<_1a8e8301b_TypeKind>* _52361_ck);
inline jule::Bool _1a8e39d80_annotateMap(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _53142_k);
inline jule::Bool _1a8e3a1c1_annotateFn(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _54141_k);
inline jule::Bool _1a8e3a512_annotatePtr(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _57042_k);
inline jule::Bool _1a8e3a853_annotateSptr(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _58043_k);
inline jule::Bool _1a8e3ab94_annotateStruct(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _59045_k);
inline jule::Bool _1a8e3aed5_annotateAny(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _61242_k);
inline jule::Bool _1a8e3b326_annotateKind(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _63343_k);
inline jule::Bool _1a8e3b5ac_annotate(_1a8e37102_dynamicTypeAnnotation* _self_);
inline void _1a8e3c4c0_pushErrToken(_1a8e3be5e_fnCallArgChecker* _self_, jule::Ptr<_1a875ce89_Token> _67831_token, jule::Str _67846_fmt, jule::Slice<jule::Any> _67859_args);
inline void _1a8e3c833_pushErr(_1a8e3be5e_fnCallArgChecker* _self_, jule::Str _68226_fmt, jule::Slice<jule::Any> _68239_args);
inline jule::Slice<jule::Ptr<_1a8d3dde9_ParamIns>> _1a8e3cab9_getParams(_1a8e3be5e_fnCallArgChecker* _self_);
inline jule::Bool _1a8e3ce0a_checkCounts(_1a8e3be5e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a8d3dde9_ParamIns>>* _69531_params);
inline jule::Bool _1a8e3d3b1_checkArg(_1a8e3be5e_fnCallArgChecker* _self_, jule::Ptr<_1a8d3dde9_ParamIns>* _72732_p, jule::Ptr<_1a8e4bcb5_Data>* _72751_arg, jule::Ptr<_1a875ce89_Token>* _72768_errorToken);
inline jule::Bool _1a8e3d7ac_push(_1a8e3be5e_fnCallArgChecker* _self_, jule::Ptr<_1a8d3dde9_ParamIns>* _75628_p, jule::Ptr<_1a8777899_Expr> _75646_arg);
inline jule::Bool _1a8e3dba8_pushVariadic(_1a8e3be5e_fnCallArgChecker* _self_, jule::Ptr<_1a8d3dde9_ParamIns>* _78036_p, jule::I32 _78054_i);
inline jule::Bool _1a8e3dee9_checkArgs(_1a8e3be5e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a8d3dde9_ParamIns>>* _86133_params);
inline jule::Bool _1a8e3e280_checkDynamicTypeAnnotation(_1a8e3be5e_fnCallArgChecker* _self_);
inline jule::Bool _1a8e3e516_check(_1a8e3be5e_fnCallArgChecker* _self_);
inline void _1a8e403e6_pushErr(_1a8e3ed96_structLitChecker* _self_, jule::Ptr<_1a875ce89_Token> _94126_token, jule::Str _94141_fmt, jule::Slice<jule::Any> _94154_args);
inline void _1a8e40759_pushSuggestion(_1a8e3ed96_structLitChecker* _self_, jule::Str _94633_fmt, jule::Slice<jule::Any> _94646_args);
inline void _1a8e40b77_pushMatch(_1a8e3ed96_structLitChecker* _self_, jule::Ptr<_1a8d29104_FieldIns>* _95033_f, jule::Ptr<_1a8e4bcb5_Data>* _95052_d, jule::Ptr<_1a875ce89_Token>* _95067_errorToken);
inline void _1a8e40eda_checkPair(_1a8e3ed96_structLitChecker* _self_, jule::Ptr<_1a877c0b8_FieldExprPair>* _96933_pair, jule::Slice<jule::Ptr<_1a8777899_Expr>>* _96960_exprs);
inline jule::Bool _1a8e4132b_readyExprs(_1a8e3ed96_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a8777899_Expr>>* _100834_exprs);
inline void _1a8e415d4_check(_1a8e3ed96_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a8777899_Expr>>* _103229_exprs);
inline jule::Ptr<_1a8de41ad_Var> _1a8e42162_buildVar(_1a8e41b78_rangeChecker* _self_, jule::Ptr<_1a87863d0_VarDecl>* _110828_decl);
inline void _1a8e42360_setSizeKey(_1a8e41b78_rangeChecker* _self_);
inline void _1a8e4277d_checkRangeExprValidity(_1a8e41b78_rangeChecker* _self_, jule::Ptr<_1a8e4bcb5_Data>* _112746_d, jule::Ptr<_1a8de41ad_Var>* _112757_key, jule::Ptr<_1a8e8301b_TypeKind>* _112773_k);
inline void _1a8e4297b_checkSlice(_1a8e41b78_rangeChecker* _self_);
inline void _1a8e42b79_checkArray(_1a8e41b78_rangeChecker* _self_);
inline void _1a8e42d77_checkMapKeyA(_1a8e41b78_rangeChecker* _self_);
inline void _1a8e43075_checkMapKeyB(_1a8e41b78_rangeChecker* _self_);
inline void _1a8e43273_checkMap(_1a8e41b78_rangeChecker* _self_);
inline void _1a8e43471_checkStr(_1a8e41b78_rangeChecker* _self_);
inline void _1a8e4366e_checkComptime(_1a8e41b78_rangeChecker* _self_);
inline jule::Bool _1a8e43905_checkComptimeRange(_1a8e41b78_rangeChecker* _self_);
inline jule::Bool _1a8e43b8b_check(_1a8e41b78_rangeChecker* _self_);
inline void _1a8e44818_prepareTypes(_1a8e443d9_retTypeChecker* _self_);
inline void _1a8e44ac1_prepareExprs(_1a8e443d9_retTypeChecker* _self_, jule::Ptr<_1a8777899_Expr>* _128536_e);
inline void _1a8e44cbe_checkExprs(_1a8e443d9_retTypeChecker* _self_);
inline jule::Bool _1a8e45055_tryFuncMultiRetForward(_1a8e443d9_retTypeChecker* _self_);
inline jule::Bool _1a8e45396_check(_1a8e443d9_retTypeChecker* _self_, jule::Ptr<_1a8777899_Expr>* _138429_e);
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8e46e36_SelectPackage(_1a8e4694c_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> _2732_selector);
inline jule::Ptr<_1a8de41ad_Var> _1a8e47332_FindVar(_1a8e4694c_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded);
inline jule::Ptr<_1a8e82229_TypeAlias> _1a8e4772d_FindTypeAlias(_1a8e4694c_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded);
inline jule::Ptr<_1a8d26e26_Struct> _1a8e47b29_FindStruct(_1a8e4694c_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded);
inline jule::Ptr<_1a8d3be91_Fn> _1a8e48025_FindFn(_1a8e4694c_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded);
inline jule::Ptr<_1a8d5034a_Trait> _1a8e48366_FindTrait(_1a8e4694c_SymbolTable* _self_, jule::Str _7528_ident);
inline jule::Ptr<_1a8d52a56_Enum> _1a8e486a7_FindEnum(_1a8e4694c_SymbolTable* _self_, jule::Str _8627_ident);
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8e489e8_FindTypeEnum(_1a8e4694c_SymbolTable* _self_, jule::Str _9731_ident);
inline jule::Ptr<_1a8de41ad_Var> _1a8e49114_findVar(_1a8e4694c_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse);
inline jule::Ptr<_1a8e82229_TypeAlias> _1a8e495ba_findTypeAlias(_1a8e4694c_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse);
inline jule::Any _1a8e499b6_defByIdent(_1a8e4694c_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded);
inline jule::Bool _1a8e49e6c_isDuplicatedIdent(_1a8e4694c_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded);
inline jule::Bool _1a8e4c1a0_IsNil(_1a8e4bcb5_Data* _self_);
inline jule::Bool _1a8e4c436_IsVoid(_1a8e4bcb5_Data* _self_);
inline jule::Bool _1a8e4c6bc_IsConst(_1a8e4bcb5_Data* _self_);
inline jule::Bool _1a8e4ca0d_GoodOperand(_1a8e4bcb5_Data* _self_, jule::Ptr<_1a8e4bcb5_Data>* _10531_other);
inline void _1a8e4e03c_pushErr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _13626_token, jule::Str _13641_fmt, jule::Slice<jule::Any> _13654_args);
inline void _1a8e4e3a0_pushSuggestion(_1a8e4d9dc_Eval* _self_, jule::Str _14133_fmt, jule::Slice<jule::Any> _14146_args);
inline void _1a8e4e59d_allowBuiltin(_1a8e4d9dc_Eval* _self_);
inline void _1a8e4e79b_disallowBuiltin(_1a8e4d9dc_Eval* _self_);
inline jule::Bool _1a8e4ea32_isUnsafe(_1a8e4d9dc_Eval* _self_);
inline jule::Bool _1a8e4ecb8_isGlobal(_1a8e4d9dc_Eval* _self_);
inline jule::Bool _1a8e500c6_applyNumericPrefix(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _16842_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e50417_litStr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8778834_LitExpr>* _20322_l);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e50758_litRune(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8778834_LitExpr>* _22023_l);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e50a99_litFloat(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8778834_LitExpr>* _23924_l);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e50dda_litInt(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8778834_LitExpr>* _25126_l);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e5122b_litNum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8778834_LitExpr>* _30626_l);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e5156c_evalLit(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8778834_LitExpr> _31526_lit);
inline jule::Any _1a8e518ad_findBuiltins(_1a8e4d9dc_Eval* _self_, jule::Str* _32832_ident);
inline jule::Any _1a8e51ca9_getDef(_1a8e4d9dc_Eval* _self_, jule::Str* _35526_ident, jule::Bool _35538_binded);
inline jule::Ptr<_1a8d43151_ReferenceStack> _1a8e52040_getOwnerRefers(_1a8e4d9dc_Eval* _self_);
inline void _1ac8a1282_pushReference(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _41040_ref);
inline void _1ac8b71dd_pushReference(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8de41ad_Var>* _41040_ref);
inline void _1ac771bbe_pushReference(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d29ba4_StructIns>* _41040_ref);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e52639__evalEnum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d52a56_Enum> _41728_enm);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e52a35_evalEnum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d52a56_Enum> _42631_enm, jule::Ptr<_1a875ce89_Token> _42643_errorToken);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e52d76__evalTypeEnum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d54261_TypeEnum> _43532_enm);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e53272_evalTypeEnum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d54261_TypeEnum> _44435_enm, jule::Ptr<_1a875ce89_Token> _44451_errorToken);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e535b3__evalStruct(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d29ba4_StructIns> _45330_s);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e539ae_evalStruct(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d29ba4_StructIns> _46733_s, jule::Ptr<_1a875ce89_Token> _46748_errorToken);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e53d00_evalFnIns(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d3ee72_FnIns> _47728_f);
inline void _1a8e54163_checkDeprecated(_1a8e4d9dc_Eval* _self_, jule::Slice<jule::Ptr<_1a8772982_Directive>>* _48639_directives, jule::Ptr<_1a875ce89_Token> _48670_tok);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e5455e_evalFn(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d3be91_Fn> _50229_f, jule::Ptr<_1a875ce89_Token> _50237_errorToken);
inline void _1a8e5497c_pushIllegalCycleError(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8de41ad_Var>* _51641_v1, jule::Ptr<_1a8de41ad_Var>* _51652_v2, _2234c269a_StrBuilder* _51667_message);
inline jule::Bool _1a8e54d78_checkCrossCycle(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8de41ad_Var>* _52635_v, _2234c269a_StrBuilder* _52649_message);
inline jule::Bool _1a8e55274_checkIllegalCycles(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8de41ad_Var>* _54342_v, jule::Ptr<_1a875ce89_Token> _54351_declToken);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e55670_evalVar(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8de41ad_Var> _57130_v, jule::Ptr<_1a875ce89_Token> _57139_errorToken);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e55a6b_evalTypeAlias(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e82229_TypeAlias> _67036_ta, jule::Ptr<_1a875ce89_Token> _67052_errorToken);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e55e67_evalDef(_1a8e4d9dc_Eval* _self_, jule::Any* _70631_def, jule::Ptr<_1a875ce89_Token> _70641_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e562a8_evalIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a87791b4_IdentExpr> _73028_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e565e9_evalUnary(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8779956_UnaryExpr> _73533_u);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e5693a_evalVariadic(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8779d30_VariadicExpr> _74036_v);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e56c7b_evalUnsafe(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8778c0d_UnsafeExpr> _76234_u);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e570bc_evalArr(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877de00_SliceExpr> _77031_s);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e57573_evalExpSlc(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877de00_SliceExpr> _84734_s, jule::Ptr<_1a8e8301b_TypeKind> _84753_t, jule::Any _84771_first);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e578b4_evalSliceExpr(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877de00_SliceExpr> _88537_s);
inline void _1a8e57c27_checkIntegerIndexingByData(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _92050_d, jule::Ptr<_1a875ce89_Token> _92064_token);
inline void _1a8e58145_indexingPtr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _93235_d, jule::Ptr<_1a8e4bcb5_Data>* _93250_index, jule::Ptr<_1a877e85c_IndexingExpr>* _93269_i);
inline void _1a8e58563_indexingArr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _94835_d, jule::Ptr<_1a8e4bcb5_Data>* _94850_index, jule::Ptr<_1a877e85c_IndexingExpr>* _94869_i);
inline void _1a8e58981_indexingSlc(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _95835_d, jule::Ptr<_1a8e4bcb5_Data>* _95850_index, jule::Ptr<_1a877e85c_IndexingExpr>* _95869_i);
inline void _1a8e58d9e_indexingMap(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _98135_d, jule::Ptr<_1a8e4bcb5_Data>* _98150_index, jule::Ptr<_1a877e85c_IndexingExpr>* _98169_i);
inline void _1a8e592bc_indexingStr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _99735_d, jule::Ptr<_1a8e4bcb5_Data>* _99750_index, jule::Ptr<_1a877e85c_IndexingExpr>* _99769_i);
inline void _1a8e596da_toIndexing(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _102634_d, jule::Ptr<_1a8e4bcb5_Data>* _102649_index, jule::Ptr<_1a877e85c_IndexingExpr>* _102668_i);
inline jule::Bool _1a8e59b91_pushGenericsFromExprSubIdent(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877a9ac_SubIdentExpr>* _105153_sexpr, jule::Slice<jule::Ptr<_1a8773565_TypeDecl>>* _105214_generics, jule::Ptr<_1a8777899_Expr>* _105242_expr);
inline jule::Bool _1a8e5a08c_pushGenericsFromData(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Slice<jule::Ptr<_1a8773565_TypeDecl>>* _106245_generics, jule::Ptr<_1a8777899_Expr>* _106273_expr);
inline void _1a8e5a400_evalIdentDeclFromIndexing(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8e4bcb5_Data>* _113250_d, jule::Ptr<_1a877e85c_IndexingExpr>* _113265_i);
inline jule::Bool _1a8e5a8a6_checkGenericFn(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _117539_f, jule::Ptr<_1a875ce89_Token>* _117555_et, jule::Any* _117572_model);
inline void _1a8e5ac19_evalFnGenericFromIndexing(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8e4bcb5_Data>* _120450_d, jule::Ptr<_1a877e85c_IndexingExpr>* _120465_i);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e5b05a_evalIndexing(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877e85c_IndexingExpr> _124336_i);
inline __jule_tuple_x_1a8e4bcb5_Data__jule_tuple_x_1a8e4bcb5_Data _1a8e5b39b_evalSlicingExprs(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877eebc_SlicingExpr>* _129741_s);
inline void _1a8e5b654_slicingArr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _133330_d);
inline void _1a8e5ba72_slicingStr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _134830_d, jule::Ptr<_1a8e4bcb5_Data>* _134841_l, jule::Ptr<_1a8e4bcb5_Data>* _134852_r);
inline void _1a8e5c04a_checkSlicing(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _138636_d, jule::Ptr<_1a8e4bcb5_Data>* _138647_l, jule::Ptr<_1a8e4bcb5_Data>* _138658_r, jule::Ptr<_1a877eebc_SlicingExpr>* _138669_s);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e5c38b_evalSlicing(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877eebc_SlicingExpr> _140535_s);
inline void _1a8e5c7a9_castPtr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _144230_t, jule::Ptr<_1a8e4bcb5_Data> _144248_d, jule::Ptr<_1a875ce89_Token> _144258_errorToken);
inline void _1a8e5cbc7_castStruct(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _146433_t, jule::Ptr<_1a8e4bcb5_Data> _146451_d, jule::Ptr<_1a875ce89_Token> _146461_errorToken);
inline void _1a8e5d0e5_castRef(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _148130_t, jule::Ptr<_1a8e4bcb5_Data> _148148_d, jule::Ptr<_1a875ce89_Token> _148158_errorToken);
inline void _1a8e5d513_castSlc(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _150430_t, jule::Ptr<_1a8e4bcb5_Data> _150448_d, jule::Ptr<_1a875ce89_Token> _150458_errorToken);
inline void _1a8e5d876_castStr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data> _155930_d, jule::Ptr<_1a875ce89_Token> _155940_errorToken);
inline void _1a8e5dc94_castInt(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _160630_t, jule::Ptr<_1a8e4bcb5_Data> _160648_d, jule::Ptr<_1a875ce89_Token> _160658_errorToken);
inline void _1a8e5e1b2_castNum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _165230_t, jule::Ptr<_1a8e4bcb5_Data> _165248_d, jule::Ptr<_1a875ce89_Token> _165258_errorToken);
inline void _1a8e5e5d0_castPrim(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _168331_t, jule::Ptr<_1a8e4bcb5_Data> _168349_d, jule::Ptr<_1a875ce89_Token> _168359_errorToken);
inline void _1a8e5e943_castConstant(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _170136_t, jule::Ptr<_1a8e4bcb5_Data>* _170155_d);
inline void _1a8e5ed61_castTypeEnum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _171036_t, jule::Ptr<_1a8e4bcb5_Data>* _171055_d, jule::Ptr<_1a875ce89_Token>* _171070_errorToken);
inline void _1a8e6027e_castTypeEnumT(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _172037_t, jule::Ptr<_1a8e4bcb5_Data>* _172056_d, jule::Ptr<_1a875ce89_Token>* _172071_errorToken);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e60735_evalCastByTypeNData(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _173042_t, jule::Ptr<_1a8e4bcb5_Data> _173060_d, jule::Ptr<_1a875ce89_Token> _173074_errorToken);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e60bdb_evalCastT(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8e8301b_TypeKind>* _180334_t, jule::Ptr<_1a8777899_Expr>* _180353_e, jule::Ptr<_1a875ce89_Token>* _180368_et);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6102c_evalCast(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877a209_CastExpr> _182032_c);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6136d_evalNsSelection(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a877a5d3_NsSelectionExpr> _182934_s);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e61824_evalStructLitExplicit(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8d29ba4_StructIns> _185545_s, jule::Slice<jule::Ptr<_1a8777899_Expr>> _185613_exprs, jule::Ptr<_1a875ce89_Token> _185633_errorToken);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e61b65_evalStructLit(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877c8e3_StructLit> _189337_lit);
inline _1a8e94dc9_typeChecker _1a8e61deb_typeChecker(_1a8e4d9dc_Eval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6223c_evalType(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8773565_TypeDecl> _192531_t);
inline void _1a8e625a0_callTypeFn(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877b5c3_FnCallExpr>* _193835_fc, jule::Ptr<_1a8e4bcb5_Data>* _193857_d);
inline void _1a8e62913_callBuiltinFn(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877b5c3_FnCallExpr>* _196438_fc, jule::Ptr<_1a8e4bcb5_Data>* _196460_d);
inline void _1a8e62c76_checkFnOfConcurrentCall(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _197643_f, jule::Ptr<_1a875ce89_Token> _197654_errorToken);
inline void _1a8e63194_processExceptionalHandler(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _199549_f, jule::Ptr<_1a877b5c3_FnCallExpr>* _199565_fc, jule::Ptr<_1a8e4bcb5_Data>* _199587_d);
inline void _1a8e63507_callFn(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877b5c3_FnCallExpr>* _202231_fc, jule::Ptr<_1a8e4bcb5_Data>* _202253_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e63848_evalFnCall(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877b5c3_FnCallExpr> _217434_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e63c44_evalEnumStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d52a56_Enum> _220737_enm, jule::Ptr<_1a875ce89_Token> _220753_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e64140_evalTypeEnumStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d54261_TypeEnum> _221541_enm, jule::Ptr<_1a875ce89_Token> _221557_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6453b_evalStructStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d29ba4_StructIns> _223839_s, jule::Ptr<_1a875ce89_Token> _223854_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e649e2_evalTraitSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data> _227340_d, jule::Ptr<_1a8d5034a_Trait> _227354_trt, jule::Ptr<_1a875ce89_Token> _227371_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e65053_evalStructSubIdentField(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _229347_d, jule::Ptr<_1a8d29ba4_StructIns>* _229362_s, jule::Ptr<_1a875ce89_Token>* _229382_tok, jule::Ptr<_1a8d29104_FieldIns>* _2293100_f);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e655b4_evalStructSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data> _231641_d, jule::Ptr<_1a8d29ba4_StructIns> _231655_s, jule::Ptr<_1a877a9ac_SubIdentExpr> _231674_si, jule::Bool _231693_ref);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e65905_evalIntTypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _235736_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e65c46_evalUintTypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _238437_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e66087_evalI8TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _240235_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e663c8_evalI16TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _243136_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e66719_evalI32TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _246036_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e66a5a_evalI64TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _248936_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e66d9b_evalU8TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _251835_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e671dc_evalU16TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _253736_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6752d_evalU32TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _255636_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6786e_evalU64TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _257536_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e67bb0_evalF32TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _259436_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e68001_evalF64TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _263336_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e683ec_evalPrimStatic(_1a8e4d9dc_Eval* _self_, jule::Str _267233_kind, jule::Ptr<_1a875ce89_Token> _267244_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e687e8_evalTypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data> _270437_d, jule::Ptr<_1a877a9ac_SubIdentExpr> _270451_si);
inline jule::Ptr<_1a8e4bcb5_Data> _1acb32348_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d66be1_comptimeTypeInfo>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1a8e4bcb5_Data> _1acb369bd_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d57d8b_comptimeStructField>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1a8e4bcb5_Data> _1acb3b0cc_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d5e403_comptimeEnumField>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1a8e4bcb5_Data> _1acb40730_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d61d95_comptimeParam>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1a8e4bcb5_Data> _1acb450b4_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d5b147_comptimeStatic>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1a8e4bcb5_Data> _1acb496c3_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d6d203_comptimeValue>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1a8e4bcb5_Data> _1acb4dcd2_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d7214c_comptimeFile>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si);
inline __jule_tuple_x_1a8e4bcb5_Data__jule_tuple_bool _1a8e6919a_tryComptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _272846_d, jule::Ptr<_1a877a9ac_SubIdentExpr> _272860_si);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e69596_evalObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data> _275638_d, jule::Ptr<_1a877a9ac_SubIdentExpr> _275652_si);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e698d7_evalSubIdent(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877a9ac_SubIdentExpr> _280036_si);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e69c28_evalTuple(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877848d_TupleExpr> _281433_tup);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6a124_evalMap(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8e91788_Map> _284331_m, jule::Ptr<_1a877cd99_BraceLit> _284344_lit);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6a465_evalBraceLit(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877cd99_BraceLit> _289236_lit);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6a7a6_evalAnonFunc(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8785225_FnDecl> _290736_decl);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6aae7_evalBinary(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877ae63_BinaryExpr> _294534_op);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6ae38_evalExprKind(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Any _296036_kind);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6b279_eval1(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8777899_Expr> _300829_expr);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6b5ba_eval(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8777899_Expr> _303628_expr);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6b90b_evalExpr1(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8777899_Expr> _305133_expr);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6bc4c_evalExpr(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8777899_Expr> _306732_expr);
inline _1a8e6c214_unaryEval static__1a8e6c654_new(jule::Ptr<_1a8e4d9dc_Eval> _308823_e);
inline void _1a8e6c852_minus(_1a8e6c214_unaryEval* _self_);
inline void _1a8e6ca50_plus(_1a8e6c214_unaryEval* _self_);
inline void _1a8e6cc4d_caret(_1a8e6c214_unaryEval* _self_);
inline void _1a8e6ce4b_excl(_1a8e6c214_unaryEval* _self_);
inline void _1a8e6d149_star(_1a8e6c214_unaryEval* _self_);
inline void _1a8e6d347_amper(_1a8e6c214_unaryEval* _self_);
inline void _1a8e6d545_typeDecl(_1a8e6c214_unaryEval* _self_);
inline void _1a8e6d743_evalData(_1a8e6c214_unaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6da84_eval(_1a8e6c214_unaryEval* _self_, jule::Ptr<_1a8779956_UnaryExpr> _334827_u);
inline _1a8e6e1a0_binaryEval static__1a8e6e755_newPlain(jule::Ptr<_1a8e4d9dc_Eval> _339628_e);
inline _1a8e6e1a0_binaryEval static__1a8e6eac9_new(jule::Ptr<_1a8e4d9dc_Eval> _340223_e, jule::Ptr<_1a875ce89_Token> _340237_op);
inline jule::Bool _1a8e6ed60_checkTypeCompatibility(_1a8e6e1a0_binaryEval* _self_);
inline jule::Bool _1a8e700e6_checkStructCommonOperatorCompatibility(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e7037c_evalComptimeTypeInfo(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e70613_evalNil(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e70899_evalEnum(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e70b30_evalTypeEnum(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e70db6_evalSptr(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e7114c_evalPtr(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e713d3_evalArr(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e71669_evalSlc(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e71900_evalStruct(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e71b86_evalTrait(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e71e1c_evalAny(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e721a3_evalBool(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e72439_evalStr(_1a8e6e1a0_binaryEval* _self_);
inline void _1a8e72637_setTypeToGreater(_1a8e6e1a0_binaryEval* _self_);
inline void _1a8e728e0_checkModData(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _382336_d);
inline void _1a8e72add_mod(_1a8e6e1a0_binaryEval* _self_);
inline jule::Bool _1a8e72ed9_numbersAreCompatibile(_1a8e6e1a0_binaryEval* _self_, jule::Str* _384537_lk, jule::Str* _384547_rk);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e73270_evalFloat(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e73506_evalInt(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e7378c_evalPrim(_1a8e6e1a0_binaryEval* _self_);
inline void _1a8e7398a_checkSpecialCases(_1a8e6e1a0_binaryEval* _self_);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e73c21_evalOp(_1a8e6e1a0_binaryEval* _self_);
inline void _1a8e73ec9_evalConst(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _408333_d);
inline void _1a8e74282_checkData(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _416133_d);
inline void _1a8e74480_checkDatas(_1a8e6e1a0_binaryEval* _self_);
inline void _1a8e74738_setModel(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _417332_d);
inline void _1a8e7984d_postEval(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _420032_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e79c49_solveExplicit(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _420537_l, jule::Ptr<_1a8e4bcb5_Data>* _420552_r);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e7a08a_eval(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a877ae63_BinaryExpr>* _422528_op);
inline jule::Str _1a8e833d4_Str(_1a8e8301b_TypeKind* _self_);
inline jule::Bool _1a8e83725_Equal(jule::Ptr<_1a8e8301b_TypeKind> _self_, jule::Ptr<_1a8e8301b_TypeKind> _9021_other);
inline jule::Bool _1a8e83d63_Binded(_1a8e8301b_TypeKind* _self_);
inline jule::Bool _1a8e840e9_IsNil(_1a8e8301b_TypeKind* _self_);
inline jule::Bool _1a8e84380_Void(_1a8e8301b_TypeKind* _self_);
inline jule::Bool _1a8e84616_Comparable(_1a8e8301b_TypeKind* _self_);
inline jule::Bool _1a8e8489c_Mutable(_1a8e8301b_TypeKind* _self_);
inline jule::Bool _1a8e84b33_Ordered(_1a8e8301b_TypeKind* _self_);
inline jule::Bool _1a8e84db9_NilCompatible(_1a8e8301b_TypeKind* _self_);
inline jule::Bool _1a8e85150_PerformsRC(_1a8e8301b_TypeKind* _self_);
inline jule::Bool _1a8e853d6_Variadicable(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8e8aae5_Prim> _1a8e8566c_Prim(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8e8e621_Sptr> _1a8e85903_Sptr(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8e92dd8_Ptr> _1a8e85b89_Ptr(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d52a56_Enum> _1a8e85e20_Enum(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8e861a6_TypeEnum(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8e92415_Arr> _1a8e8643c_Arr(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8e900e4_Slc> _1a8e866c3_Slc(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d3ee72_FnIns> _1a8e86959_Fn(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d29ba4_StructIns> _1a8e86be0_Struct(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d5034a_Trait> _1a8e86e76_Trait(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8e91788_Map> _1a8e8720c_Map(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8e90bd8_Tuple> _1a8e87493_Tup(_1a8e8301b_TypeKind* _self_);
inline jule::Bool _1a8e87729_comptime(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d59a4c_comptimeStructFields> _1a8e879b0_comptimeStructFields(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d57d8b_comptimeStructField> _1a8e87c46_comptimeStructField(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d6079a_comptimeEnumFields> _1a8e87ecc_comptimeEnumFields(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d5e403_comptimeEnumField> _1a8e88263_comptimeEnumField(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d6402e_comptimeParams> _1a8e884e9_comptimeParams(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d61d95_comptimeParam> _1a8e88780_comptimeParam(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d573b8_comptimeRange> _1a8e88a16_comptimeRange(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d655e6_comptimeTypeInfos> _1a8e88c9c_comptimeTypeInfos(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d66be1_comptimeTypeInfo> _1a8e89033_comptimeTypeInfo(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d5cd08_comptimeStatics> _1a8e892b9_comptimeStatics(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d5b147_comptimeStatic> _1a8e89550_comptimeStatic(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d6d203_comptimeValue> _1a8e897d6_comptimeValue(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d7214c_comptimeFile> _1a8e89a6c_comptimeFile(_1a8e8301b_TypeKind* _self_);
inline jule::Ptr<_1a8d70a52_comptimeFiles> _1a8e89d03_comptimeFiles(_1a8e8301b_TypeKind* _self_);
inline jule::Bool _1a8e8a562_checked(_1a8e8a1dd_TypeSymbol* _self_);
inline jule::Str _1a8e8ae36_Str(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8b277_Equal(jule::Ptr<_1a8e8aae5_Prim> _self_, jule::Ptr<_1a8e8301b_TypeKind> _50821_other);
inline jule::Bool _1a8e8b71c_IsConstraint(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8b9a3_IsI8(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8bc39_IsI16(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8bec0_IsI32(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8c256_IsI64(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8c4dc_IsU8(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8c773_IsU16(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8ca09_IsU32(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8cc90_IsU64(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8d026_IsF32(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8d2ac_IsF64(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8d543_IsInt(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8d7c9_IsUint(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8da60_IsUintptr(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8dce6_IsBool(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8e07c_IsStr(_1a8e8aae5_Prim* _self_);
inline jule::Bool _1a8e8e313_IsAny(_1a8e8aae5_Prim* _self_);
inline jule::Str _1a8e8e995_Str(_1a8e8e621_Sptr* _self_);
inline jule::Bool _1a8e8ecd6_Equal(jule::Ptr<_1a8e8e621_Sptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _58521_other);
inline jule::Str _1a8e90578_Str(_1a8e900e4_Slc* _self_);
inline jule::Bool _1a8e908b9_Equal(jule::Ptr<_1a8e900e4_Slc> _self_, jule::Ptr<_1a8e8301b_TypeKind> _60421_other);
inline jule::Str _1a8e9105c_Str(_1a8e90bd8_Tuple* _self_);
inline jule::Bool _1a8e9139d_Equal(jule::Ptr<_1a8e90bd8_Tuple> _self_, jule::Ptr<_1a8e8301b_TypeKind> _63321_other);
inline jule::Str _1a8e91b0c_Str(_1a8e91788_Map* _self_);
inline jule::Bool _1a8e91e4d_Equal(jule::Ptr<_1a8e91788_Map> _self_, jule::Ptr<_1a8e8301b_TypeKind> _67021_other);
inline jule::Str _1a8e92789_Str(_1a8e92415_Arr* _self_);
inline jule::Bool _1a8e92aca_Equal(jule::Ptr<_1a8e92415_Arr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _69821_other);
inline jule::Str _1a8e9325c_Str(_1a8e92dd8_Ptr* _self_);
inline jule::Bool _1a8e9359d_Equal(jule::Ptr<_1a8e92dd8_Ptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _72221_other);
inline jule::Bool _1a8e93922_IsUnsafe(_1a8e92dd8_Ptr* _self_);
inline void _1a8e95616_pushErr(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a875ce89_Token> _81226_token, jule::Str _81241_fmt, jule::Slice<jule::Any> _81254_args);
inline void _1a8e95814_allowBuiltin(_1a8e94dc9_typeChecker* _self_);
inline void _1a8e95a12_disallowBuiltin(_1a8e94dc9_typeChecker* _self_);
inline void _1acd41b95_pushReference(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8d29ba4_StructIns>* _82440_t);
inline void _1acd4458d_pushReference(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8d5034a_Trait>* _82440_t);
inline void _1a8e96073_pushReferenceByKind(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _83443_k);
inline void _1a8e96491_pushCycleError(_1a8e94dc9_typeChecker* _self_, jule::Any _84529_def1, jule::Any _84540_def2, _2234c269a_StrBuilder* _84556_message);
inline jule::Bool _1a8e9688c_checkCrossCycle(_1a8e94dc9_typeChecker* _self_, jule::Any _86730_decl, _2234c269a_StrBuilder* _86746_message);
inline jule::Bool _1a8e96c88_checkIllegalCycles(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _90138_ident, jule::Any _90165_decl);
inline jule::Trait _1a8e97184_fromTypeAlias(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _95133_decl, jule::Ptr<_1a8e82229_TypeAlias>* _95160_ta);
inline jule::Ptr<_1a8d52a56_Enum> _1a8e97580_fromEnum(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _102528_decl, jule::Ptr<_1a8d52a56_Enum>* _102555_e);
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8e9797b_fromTypeEnum(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _103732_decl, jule::Ptr<_1a8d54261_TypeEnum>* _103759_e);
inline jule::Ptr<_1a8d5034a_Trait> _1a8e97d77_fromTrait(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _104929_decl, jule::Ptr<_1a8d5034a_Trait>* _104956_t);
inline jule::Bool _1a8e98273_checkStructIns(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8d29ba4_StructIns>* _106238_ins, jule::Ptr<_1a875ce89_Token>* _106260_errorToken);
inline void _1a8e9852b_appendUsedStructReference(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8d26e26_Struct>* _108349_s);
inline jule::Ptr<_1a8d29ba4_StructIns> _1a8e98927_buildStructInstance(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _109643_decl, jule::Ptr<_1a8d26e26_Struct>* _109670_s);
inline jule::Ptr<_1a8d29ba4_StructIns> _1a8e98d23_fromStruct(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _114434_decl, jule::Ptr<_1a8d26e26_Struct>* _114461_s);
inline jule::Trait _1a8e99164_getDef(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _120230_decl);
inline jule::Trait _1a8e994a5_buildIdent(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl> _126333_decl);
inline jule::Trait _1a8e997e6_buildSubIdent(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773e39_SubIdentTypeDecl> _126736_decl);
inline jule::Ptr<_1a8e8e621_Sptr> _1a8e99b37_buildSptrFromType(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _130141_elem);
inline jule::Ptr<_1a8e8e621_Sptr> _1a8e99e78_buildSptr(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8774610_SptrTypeDecl> _132132_decl);
inline jule::Ptr<_1a8e92dd8_Ptr> _1a8e9a2b9_buildPtrFromType(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _133040_elem);
inline jule::Ptr<_1a8e92dd8_Ptr> _1a8e9a60a_buildPtr(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a877508e_PtrTypeDecl> _134531_decl);
inline jule::Ptr<_1a8e900e4_Slc> _1a8e9a94b_buildSlc(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8774995_SlcTypeDecl> _136231_decl);
inline jule::Ptr<_1a8e92415_Arr> _1a8e9ac8c_buildArr(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8775831_ArrTypeDecl> _138331_decl);
inline jule::Ptr<_1a8e91788_Map> _1a8e9b0cd_buildMap(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a877607e_MapTypeDecl> _143231_decl);
inline jule::Ptr<_1a8e90bd8_Tuple> _1a8e9b41e_buildTuple(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8774c92_TupleTypeDecl> _145633_decl);
inline jule::Bool _1a8e9b760_checkFuncTypes(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _146938_f);
inline jule::Ptr<_1a8d3ee72_FnIns> _1a8e9baa1_buildFunc(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8785225_FnDecl> _148732_decl);
inline jule::Trait _1a8e9bde2_buildByNamespace(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8774313_NamespaceTypeDecl> _151739_decl);
inline jule::Ptr<_1a8e8301b_TypeKind> _1a8e9c233_build(_1a8e94dc9_typeChecker* _self_, jule::Any* _154129_declKind);
inline jule::Ptr<_1a8e8301b_TypeKind> _1a8e9c574_checkDecl(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773565_TypeDecl>* _162933_decl);
inline jule::Bool static__1a8e9cec0_prim(jule::Str* _165621_ident, jule::Ptr<_1a8e8aae5_Prim> _165633_t);
inline jule::Bool static__1a8e9d344_exist(jule::Str* _166022_ident, jule::Ptr<_1a8e8301b_TypeKind>* _166039_k);
inline void _1a98e73ca_stop(_1a98e6c59_scopeParser* _self_);
inline jule::Bool _1a98e7661_stopped(_1a98e6c59_scopeParser* _self_);
inline jule::Bool _1a98e78e7_finished(_1a98e6c59_scopeParser* _self_);
inline jule::Bool _1a98e7b7d_isLastSt(_1a98e6c59_scopeParser* _self_);
inline void _1a98e7ee1_pushErr(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a875ce89_Token> _18826_token, jule::Str _18841_fmt);
inline void _1a98e8354_pushSuggestion(_1a98e6c59_scopeParser* _self_, jule::Str _19333_fmt, jule::Slice<jule::Any> _19346_args);
inline void _1a98e860c_insertAsNext(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _19736_tokens);
inline jule::Ptr<_1a98e63b8_stmt> _1a98e8893_next(_1a98e6c59_scopeParser* _self_);
inline jule::Ptr<_1a8783586_ScopeTree> _1a98e8c8e_buildScope(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _20734_tokens, jule::Ptr<_1a875ce89_Token> _20756_end);
inline jule::Ptr<_1a87863d0_VarDecl> _1a98e90d0_buildVarSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _21834_tokens);
inline jule::Ptr<_1a87867a9_RetSt> _1a98e9421_buildRetSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _22433_tokens);
inline jule::Ptr<_1a8787029_Iter> _1a98e9762_buildWhileNextIter(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a98e63b8_stmt>* _23542_s);
inline jule::Ptr<_1a8787854_WhileKind> _1a98e9aa3_buildWhileIterKind(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _28042_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _1a98e9de4_getRangeKindKeysTokens(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _28646_toks);
inline jule::Ptr<_1a87863d0_VarDecl> _1a98ea235_buildRangeKindKey(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _29241_tokens);
inline jule::Slice<jule::Ptr<_1a87863d0_VarDecl>> _1a98ea576_buildRangeKindKeys(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>>* _31842_parts);
inline void _1a98ea8d9_setupRangeKindKeysPlain(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a878825b_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _32669_tokens);
inline void _1a98eac4c_setupRangeKindKeysExplicit(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a878825b_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _34172_tokens);
inline void _1a98eb0b0_setupRangeKindKeys(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a878825b_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _35064_tokens);
inline jule::Ptr<_1a878825b_RangeKind> _1a98eb566_buildRangeIterKind(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _35914_exprTokens, jule::Ptr<_1a875ce89_Token>* _35941_inToken);
inline jule::Any _1a98eb962_buildCommonIterKind(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _37443_tokens, jule::Ptr<_1a875ce89_Token>* _37462_err_tok);
inline jule::Ptr<_1a8787029_Iter> _1a98ebca3_buildCommonIter(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _40138_tokens);
inline jule::Ptr<_1a8787029_Iter> _20a08b6de_buildIterSt(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a98e63b8_stmt>* _43135_st);
inline jule::Ptr<_1a8788635_BreakSt> _20a08ba30_buildBreakSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _43836_tokens);
inline jule::Ptr<_1a8788a0e_ContSt> _20a08bd71_buildContSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _45635_tokens);
inline jule::Ptr<_1a8788eb5_If> _20a08c1b2_buildIf(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _47431_tokens);
inline jule::Ptr<_1a878938e_Else> _20a08c503_buildElse(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _50733_tokens);
inline jule::Ptr<_1a8789845_Conditional> _20a08c844_buildIfElseChain(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _53139_tokens);
inline jule::Ptr<_1a8777899_Expr> _20a08cb85_buildCoCallSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _55436_tokens);
inline jule::Ptr<_1a8781023_GotoSt> _20a08cec6_buildGotoSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _57035_tokens);
inline jule::Ptr<_1a8781320_FallSt> _20a08d317_buildFallSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _59035_tokens);
inline jule::Ptr<_1a878a082_TypeAliasDecl> _20a08d658_buildTypeAliasSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _60040_tokens);
inline void _20a08db31_pushCaseExpr(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _60635_tokens, jule::Ptr<_1a875ce89_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1a8777899_Expr>>* _60731_exprs);
inline __jule_tuple_sx_1a8777899_Expr__jule_tuple_bool _20a08e0d7_buildCaseExprs(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _62938_tokens, jule::Ptr<_1a875ce89_Token>* _62961_colon, jule::Bool _62976_typeMatch);
inline jule::Ptr<_1a8783586_ScopeTree> _20a08e428_buildCaseScope(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _67138_tokens);
inline __jule_tuple_x_1a878a538_Case__jule_tuple_bool _20a08e824_buildCase(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _69833_tokens, jule::Bool _69851_typeMatch);
inline __jule_tuple_sx_1a878a538_Case__jule_tuple_x_1a878938e_Else _20a08ec20_buildCases(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _71333_tokens, jule::Bool _71351_typeMatch);
inline jule::Ptr<_1a878ad52_MatchCase> _20a090061_buildMatchCase(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _74737_tokens);
inline jule::Ptr<_1a8783586_ScopeTree> _20a0903a2_buildScopeSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _78035_tokens);
inline jule::Ptr<_1a8780b49_LabelSt> _20a0906e3_buildLabelSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _82336_tokens);
inline __jule_tuple__1a8782bc3_StmtData__jule_tuple_bool _20a090a34_buildIdSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _83833_tokens);
inline jule::Ptr<_20a0a14b2_assignInfo> _20a090d75_buildAssignInfo(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _85239_tokens);
inline jule::Ptr<_1a8781980_AssignLeft> _20a0911b6_buildAssignL(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _89736_tokens);
inline jule::Slice<jule::Ptr<_1a8781980_AssignLeft>> _20a091507_buildAssignLs(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>>* _90837_parts);
inline __jule_tuple__1a8782bc3_StmtData__jule_tuple_bool _20a091848_buildPlainAssign(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _91740_tokens);
inline jule::Bool _20a091c44_buildDeclAssign1(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _96740_lefts, jule::Ptr<_1a8782013_AssignSt>* _96762_assign);
inline __jule_tuple_x_1a8782013_AssignSt__jule_tuple_bool _20a092085_buildDeclAssign(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _101238_tokens);
inline __jule_tuple__1a8782bc3_StmtData__jule_tuple_bool _20a0923c6_buildAssignSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _104637_tokens);
inline jule::Ptr<_1a877826d_UseExpr> _20a092717_buildUseExpr(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _105936_tokens);
inline jule::Any _20a092a58_buildConstSt(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a98e63b8_stmt>* _107236_st);
inline jule::Any _20a092d99_buildSt(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a98e63b8_stmt>* _109731_st);
inline void _20a09320c_build(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _116129_tokens, jule::Ptr<_1a8783586_ScopeTree>* _116152_s);
inline void _20a0944e9_pushErr(_20a093c24_exprBuilder* _self_, jule::Ptr<_1a875ce89_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args);
inline void _20a09485c_pushSuggestion(_20a093c24_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args);
inline jule::Ptr<_1a877848d_TupleExpr> _20a094b9d_buildTuple(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>>* _5434_parts);
inline jule::Ptr<_1a8778834_LitExpr> _20a094ede_buildLit(_20a093c24_exprBuilder* _self_, jule::Ptr<_1a875ce89_Token> _6427_token);
inline jule::Any _20a095671_buildSingle(_20a093c24_exprBuilder* _self_, jule::Ptr<_1a875ce89_Token> _7534_token);
inline jule::Ptr<_1a87791b4_IdentExpr> _20a0959b2_buildBindIdent(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _9238_tokens);
inline jule::Ptr<_1a8779956_UnaryExpr> _20a095d03_buildUnary(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _11133_tokens);
inline jule::Ptr<_1a877a9ac_SubIdentExpr> _20a096144_buildObjSubIdent(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _13239_tokens);
inline jule::Ptr<_1a877a5d3_NsSelectionExpr> _20a096485_buildNsSubIdent(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _14739_tokens);
inline jule::Ptr<_1a8773565_TypeDecl> _20a0967c6_buildType(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _17233_tokens);
inline jule::Any _20a096b17_buildSubIdent(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _18637_tokens);
inline jule::Ptr<_1a8779d30_VariadicExpr> _20a096e58_buildVariadic(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _20836_tokens);
inline jule::Ptr<_1a8777b63_RangeExpr> _20a097299_buildBetweenParentheses(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _21746_tokens);
inline jule::Ptr<_1a877a209_CastExpr> _20a0975da_tryBuildCast(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _22936_tokens);
inline void _20a097a08_pushArg(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a8777899_Expr>>* _30331_args, jule::Slice<jule::Ptr<_1a875ce89_Token>> _30350_tokens, jule::Ptr<_1a875ce89_Token> _30368_err_token);
inline jule::Slice<jule::Ptr<_1a8777899_Expr>> _20a097d49_buildArgs(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _31232_tokens);
inline jule::Ptr<_1a877b5c3_FnCallExpr> _20a098641_buildFnCall(_20a093c24_exprBuilder* _self_, jule::Ptr<_1a875ce89_Token>* _37835_token, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _37855_expr, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _37876_args);
inline jule::Any _20a098982_buildParenthesesRange(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _38645_tokens);
inline jule::Ptr<_1a8778c0d_UnsafeExpr> _20a098cc3_buildUnsafeExpr(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _40838_tokens);
inline jule::Ptr<_1a8785225_FnDecl> _20a099114_buildAnonFn(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _42335_tokens);
inline jule::Any _20a099455_buildUnsafe(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _43235_tokens);
inline void _20a099873_pushRangeLitPart(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _44239_part, jule::Ptr<_1a875ce89_Token> _4439_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>>* _44334_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _20a099bb4_getBraceRangeLitExprParts(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _45348_tokens);
inline jule::Ptr<_1a877c0b8_FieldExprPair> _20a09a005_buildFieldExprPair(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _49541_tokens);
inline jule::Ptr<_1a8777899_Expr> _20a09a346_buildStructLitExpr(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _50842_tokens);
inline jule::Slice<jule::Ptr<_1a8777899_Expr>> _20a09a687_buildStructLitExprs(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _52343_tokens);
inline jule::Ptr<_1a877c8e3_StructLit> _20a09a9c8_buildTypedStructLiteral(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _53646_tokens);
inline jule::Ptr<_1a8777899_Expr> _20a09ad19_buildBraceLitPart(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _56041_tokens);
inline jule::Ptr<_1a877cd99_BraceLit> _20a09b15a_buildBraceLit(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _57737_tokens);
inline jule::Any _20a09b49b_buildBraceRange(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _59639_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _20a09b7dc_getEnumerableParts(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _64841_tokens);
inline jule::Ptr<_1a877de00_SliceExpr> _20a09bb2d_buildSlice(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _65533_tokens);
inline jule::Ptr<_1a877e85c_IndexingExpr> _20a09c0d4_buildIndexing(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _67736_exprTokens, jule::Slice<jule::Ptr<_1a875ce89_Token>> _67813_tokens, jule::Ptr<_1a875ce89_Token> _67835_errorToken);
inline jule::Ptr<_1a877eebc_SlicingExpr> _20a09c700_buildSlicing(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _70136_exprTokens, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _70163_start, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _70214_to, jule::Ptr<_1a875ce89_Token>* _70233_errorToken, jule::Ptr<_1a875ce89_Token> _70257_end);
inline jule::Any _20a09ca41_buildBracketRange(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _71740_tokens);
inline jule::Any _20a09cd82_buildExclRight(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _74238_tokens);
inline jule::Any _20a09d1c3_buildData(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _76033_tokens);
inline jule::Any _20a09d5be_buildBinary(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _82935_tokens, jule::I32 _82953_i);
inline jule::Any _20a09d910_build(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _85429_tokens);
inline jule::Any _20a09dc51_buildKind(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _86533_tokens);
inline jule::Ptr<_1a8777899_Expr> _20a09e092_buildFromTokens(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _87638_tokens);
inline void _20a0a4bad_stop(_20a0a48b1_parser* _self_);
inline jule::Bool _20a0a4e44_stopped(_20a0a48b1_parser* _self_);
inline void _20a0a5362_pushErr(_20a0a48b1_parser* _self_, jule::Ptr<_1a875ce89_Token> _20826_token, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args);
inline void _20a0a56c5_pushSuggestion(_20a0a48b1_parser* _self_, jule::Str _21333_fmt, jule::Slice<jule::Any> _21346_args);
inline jule::Ptr<_1a8777899_Expr> _20a0a5a16_buildExpr(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _21734_tokens);
inline jule::Ptr<_1a8772982_Directive> _20a0a5d57_buildDirective(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _22137_tokens);
inline void _20a0a6110_pushDirective(_20a0a48b1_parser* _self_, jule::Ptr<_1a8772982_Directive> _23636_d);
inline jule::Ptr<_1a8783586_ScopeTree> _20a0a650b_buildScope(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _24935_tokens, jule::Ptr<_1a875ce89_Token> _24957_end);
inline __jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool _20a0a69b2__buildType(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _25942_tokens, jule::I32* _26013_i, jule::Bool _26022_err);
inline __jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool _20a0a6e68_buildType(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _27141_tokens, jule::I32* _27213_i, jule::Bool _27222_err);
inline jule::Ptr<_1a878a082_TypeAliasDecl> _20a0a72a9_buildTypeAliasDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _28143_tokens);
inline void _20a0a761c_buildVarTypeAndExpr(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a87863d0_VarDecl>* _32144_v, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _32162_tokens);
inline void _20a0a7980_buildVarCommon(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a87863d0_VarDecl>* _35439_v, jule::Slice<jule::Ptr<_1a875ce89_Token>> _35456_tokens);
inline void _20a0a7ce3_buildVarBegin(_20a0a48b1_parser* _self_, jule::Ptr<_1a87863d0_VarDecl>* _37037_v, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _37055_tokens);
inline jule::Ptr<_1a87863d0_VarDecl> _20a0a8134_buildVar(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _39832_tokens);
inline jule::Ptr<_1a8780770_GenericDecl> _20a0a8475_buildGeneric(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _41737_tokens);
inline jule::Slice<jule::Ptr<_1a8780770_GenericDecl>> _20a0a8871_buildGenerics(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _45438_tokens, jule::Ptr<_1a875ce89_Token>* _45457_errorToken);
inline jule::Ptr<_1a8783cc3_ParamDecl> _20a0a8bb2_buildSelfParam(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _47437_tokens);
inline void _20a0a90d0_paramTypeBegin(_20a0a48b1_parser* _self_, jule::Ptr<_1a8783cc3_ParamDecl>* _51438_param, jule::I32* _51462_i, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _51471_tokens);
inline void _20a0a9443_buildParamType(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a8783cc3_ParamDecl>* _52939_param, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _52963_tokens);
inline void _20a0a97a6_buildParamBody(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a8783cc3_ParamDecl>* _54239_param, jule::Slice<jule::Ptr<_1a875ce89_Token>> _54262_tokens);
inline jule::Ptr<_1a8783cc3_ParamDecl> _20a0a9ae7_buildParam(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _56234_tokens);
inline void _20a0a9da0_checkParams(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a8783cc3_ParamDecl>>* _60535_params);
inline jule::Slice<jule::Ptr<_1a8783cc3_ParamDecl>> _20a0aa29b_buildParams(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _62536_tokens, jule::Bool _62554_method);
inline __jule_tuple_x_1a8776458_RetTypeDecl__jule_tuple_bool _20a0aa697_buildMultiRetType(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _65542_tokens, jule::I32* _65565_i);
inline __jule_tuple_x_1a8776458_RetTypeDecl__jule_tuple_bool _1e1826a31_buildRetType(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _72637_tokens, jule::I32* _72660_i);
inline jule::Ptr<_1a8785225_FnDecl> _1e1826e82_buildFnPrototype(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _76541_tokens, jule::I32* _76564_i, jule::Bool _76572_method);
inline jule::Ptr<_1a8785225_FnDecl> _1e1827438_buildFn(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _84232_tokens, jule::Bool _84250_method, jule::Bool _84264_prototype);
inline jule::Slice<jule::Ptr<_1a875ce89_Token>> _1e1827779_getUseDeclSelectors(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _87642_tokens);
inline void _1e1827adc_buildBindUseDecl(_20a0a48b1_parser* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _90140_decl, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _90157_tokens);
inline jule::Str _1e1827e2d_useDeclTokstoa(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _91434_tokens);
inline void _1e1828291_buildStdUseDecl(_20a0a48b1_parser* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _92939_decl, jule::Slice<jule::Ptr<_1a875ce89_Token>> _92959_tokens);
inline void _1e1828604_buildIdentUseDecl(_20a0a48b1_parser* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _98741_decl, jule::Slice<jule::Ptr<_1a875ce89_Token>> _98761_tokens);
inline void _1e1828967_parseUseDecl(_20a0a48b1_parser* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _103536_decl, jule::Slice<jule::Ptr<_1a875ce89_Token>> _103556_tokens);
inline jule::Ptr<_1a8d1e12c_UseDecl> _1e1828d63_buildUseDecl(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _106935_tokens, jule::Bool _106953_binded);
inline jule::Ptr<_1a8773565_TypeDecl> _1e182925e_buildTypeEnumItemKind(jule::Ptr<_20a0a48b1_parser> _self_, jule::I32* _108346_i, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _108359_tokens);
inline jule::Slice<jule::Ptr<_1a8d209be_TypeEnumItemDecl>> _1e18295a0_buildTypeEnumItems(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _112043_tokens);
inline jule::Ptr<_1a8d2112e_TypeEnumDecl> _1e18298e1_buildTypeEnumDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _114442_tokens);
inline jule::Ptr<_1a8777899_Expr> _1e1829cdc_buildEnumItemExpr(jule::Ptr<_20a0a48b1_parser> _self_, jule::I32* _117142_i, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _117155_tokens);
inline jule::Slice<jule::Ptr<_1a8d1e5d3_EnumItemDecl>> _1e182a12d_buildEnumItems(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _120339_tokens);
inline jule::Ptr<_1a8d20194_EnumDecl> _1e182a46e_buildEnumDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _124038_tokens);
inline jule::Any _1e182a7b0_buildNodeEnumDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _128542_tokens);
inline jule::Ptr<_1a8d213e8_FieldDecl> _1e182ab01_buildField(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _129434_tokens);
inline jule::Slice<jule::Ptr<_1a8d213e8_FieldDecl>> _1e182ae42_buildStructDeclFields(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _134345_tokens);
inline jule::Ptr<_1a8d21cde_StructDecl> _1e182b283_buildStructDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _135440_tokens);
inline void _1e182b53b_checkMethodReceiver(_20a0a48b1_parser* _self_, jule::Ptr<_1a8785225_FnDecl>* _140239_f);
inline void _1e182b89e_buildTraitBody(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a8d2252b_TraitDecl>* _142139_t, jule::Slice<jule::Ptr<_1a875ce89_Token>> _142158_tokens);
inline jule::Ptr<_1a8d2252b_TraitDecl> _1e182bbe0_buildTraitDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _145339_tokens);
inline jule::Ptr<_1a8785225_FnDecl> _1e182c031_buildBindFn(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _148335_tokens);
inline jule::Ptr<_1a87863d0_VarDecl> _1e182c372_buildBindVar(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _149336_tokens);
inline jule::Ptr<_1a8d21cde_StructDecl> _1e182c6b3_buildBindStruct(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _150639_tokens);
inline jule::Ptr<_1a878a082_TypeAliasDecl> _1e182ca04_buildBindTypeAlias(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _152042_tokens);
inline jule::Ptr<_1a8d1e12c_UseDecl> _1e182cd45_buildBindUse(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _153036_tokens);
inline jule::Any _1e182d186_buildBind(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _154134_tokens);
inline jule::Ptr<_1a8785225_FnDecl> _1e182d4c7_getMethod(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _156534_tokens);
inline void _1e182d83a_parseImplBody(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a8d22b8b_Impl>* _159438_ipl, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _159455_tokens);
inline jule::Ptr<_1a8d22b8b_Impl> _1e182db7b_buildImpl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _162733_tokens);
inline jule::Any _1e182debc_buildNodeData(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _169838_tokens);
inline void _1e182e275_applyFnMeta(_20a0a48b1_parser* _self_, jule::Ptr<_1a8785225_FnDecl>* _173135_f);
inline void _1e182e52d_applyMeta(_20a0a48b1_parser* _self_, _1a8772564_Node* _173633_node);
inline void _1e182e7d6_pushUseDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _176136_decl);
inline jule::Bool _1e182eb27_pushMetaNodes(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _176938_tokens);
inline _1a8772564_Node _1e182ee68_parseNode(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _178934_st);
inline void _1e1830221_appendNode(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _181335_st);
inline void _1e18306e9_removeRange(_20a0a48b1_parser* _self_, jule::I32 _182330_i, jule::U32 _182338_id, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _182352_tokens, jule::Slice<jule::I32>* _182375_ranges);
inline void _1e1830b17_pushWrongOrderCloseErr(_20a0a48b1_parser* _self_, jule::Ptr<_1a875ce89_Token>* _183542_t, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _183554_tokens, jule::Slice<jule::I32>* _183573_ranges);
inline void _1e18310e0_pushRangeClose(_20a0a48b1_parser* _self_, jule::Ptr<_1a875ce89_Token> _184633_t, jule::U32 _184644_left, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _184660_tokens, jule::Slice<jule::I32>* _184683_ranges);
inline void _1e1831398_checkRanges(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _186431_tokens);
inline void _1e1831651_parse(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a8763720_File>* _189530_f);
inline void _1a98ece5d_pushErr(_1a98ec8b9_typeBuilder* _self_, jule::Ptr<_1a875ce89_Token> _4126_token, jule::Str _4141_fmt);
inline void _1a98ed2c1_pushSuggestion(_1a98ec8b9_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args);
inline jule::Ptr<_1a8773565_TypeDecl> _1a98ed557_buildNamespace(_1a98ec8b9_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> _1a98ed7dd_buildGenerics(_1a98ec8b9_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _1a98eda74_identGenerics(_1a98ec8b9_typeBuilder* _self_);
inline jule::Ptr<_1a8773565_TypeDecl> _1a98edd0a_buildIdent(_1a98ec8b9_typeBuilder* _self_);
inline jule::Ptr<_1a8773565_TypeDecl> _1a98ee091_buildCppLink(_1a98ec8b9_typeBuilder* _self_);
inline jule::Ptr<_1a8773565_TypeDecl> _1a98ee327_buildFn(_1a98ec8b9_typeBuilder* _self_);
inline jule::Ptr<_1a8773565_TypeDecl> _1a98ee5ad_buildPtr(_1a98ec8b9_typeBuilder* _self_);
inline jule::Ptr<_1a8773565_TypeDecl> _1a98ee844_buildSptr(_1a98ec8b9_typeBuilder* _self_);
inline jule::Ptr<_1a8773565_TypeDecl> _1a98eeaca_buildSlc(_1a98ec8b9_typeBuilder* _self_);
inline jule::Ptr<_1a8773565_TypeDecl> _1a98eed61_buildArr(_1a98ec8b9_typeBuilder* _self_);
inline jule::Ptr<_1a8773565_TypeDecl> _1a99000e7_buildMap(_1a98ec8b9_typeBuilder* _self_);
inline jule::Ptr<_1a8773565_TypeDecl> _1a990037d_buildEnumerable(_1a98ec8b9_typeBuilder* _self_);
inline jule::Ptr<_1a8773565_TypeDecl> _1a9900614_step(_1a98ec8b9_typeBuilder* _self_);
inline __jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool _1a990089a_build(_1a98ec8b9_typeBuilder* _self_);
inline void _1a919442a_pushErr(_1a9193dca_directiveEval* _self_, jule::Ptr<_1a875ce89_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _1a9194826_splitOperans(_1a9193dca_directiveEval* _self_, jule::U32 _3331_op, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _3349_tokens);
inline jule::Bool _1a9194b67_evalDirectiveIdent(_1a9193dca_directiveEval* _self_, jule::Str _6433_ident);
inline jule::Bool _1a9194ea8_evalDirectivePart(_1a9193dca_directiveEval* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _7840_part);
inline jule::Bool _1a919523e_eval(_1a9193dca_directiveEval* _self_);
inline jule::Ptr<_1a9901a99_JuleImporter> static__1a9901e95_New(_1a9192901_CompileInfo _5819_info);
inline jule::Slice<jule::Ptr<_1a8da0ea0_ImportInfo>> _1a990222b_AllPackages(_1a9901a99_JuleImporter* _self_);
inline void _1a990266b_SetModPath(_1a9901a99_JuleImporter* _self_, jule::Str _7529_path);
inline jule::Str _1a9902902_GetModPath(_1a9901a99_JuleImporter* _self_);
inline jule::Str _1a9902c43_ModById(_1a9901a99_JuleImporter* _self_, jule::I32 _8322_id);
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a9903084_GetImport(_1a9901a99_JuleImporter* _self_, jule::Str _8728_path);
inline __jule_tuple_sx_1a87715a7_Ast__jule_tuple_s_224743e15_Log _1a9903480_ImportPackage(_1a9901a99_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod);
inline void _1a9903738_Imported(_1a9901a99_JuleImporter* _self_, jule::Ptr<_1a8da0ea0_ImportInfo> _15331_imp);
inline __jule_tuple_bool__jule_tuple_s_224743e15_Log _1a9903b67_isPassBuildDirectives(_1a9901a99_JuleImporter* _self_, jule::Ptr<_1a87715a7_Ast>* _17945_file);
inline jule::Bool _1ad46d18e_isCommonOrdered(jule::Slice<jule::Ptr<_1a8d26e26_Struct>> _1834_s, jule::Ptr<_1a8d26e26_Struct> _1842_t);
inline jule::Bool _1ad473095_isCommonOrdered(jule::Slice<jule::Ptr<_1a8de41ad_Var>> _1834_s, jule::Ptr<_1a8de41ad_Var> _1842_t);
inline void _1ad469795_orderCommon(jule::Slice<jule::Ptr<_1a8d26e26_Struct>>* _3135_s);
inline void _1ad46a565_orderCommon(jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _3135_s);
inline void static__1a9907918_orderStructures(jule::Slice<jule::Ptr<_1a8d26e26_Struct>>* _5136_structs);
inline void static__1a9907b49_orderVars(jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _5730_vars);
inline void _1a9a705ca_optimizeChild(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d7de17_Scope>* _3938_s);
inline void _1a9a70883_optimizeBodyChildExceptional(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d7de17_Scope>* _5053_s);
inline void _1a9a70b3b_optimizeBodyChild(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d7de17_Scope>* _6142_s);
inline void _1a9a70de4_optimizeExprModel(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Any* _7142_model);
inline void _1a9a710e2_eliminateFollowed(_1a9a700e1_scopeDeadCode* _self_);
inline void _1a9a7139a_pushGoto(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d81b84_GotoSt> _9232_gt);
inline void _1a9a71653_pushLabel(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d817aa_Label> _10233_l);
inline void _1a9a7190b_optimizeRangeIter(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d80c4e_RangeIter> _11541_it);
inline void _1a9a71bb4_optimizeWhileIter(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d80303_WhileIter> _12041_it);
inline void _1a9a71e6c_optimizeInfIter(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d7ed4c_InfIter> _12839_it);
inline void _1a9a72225_optimizeConditional(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d7ea50_Conditional> _13243_c);
inline void _1a9a724cd_optimizeMatch(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d8312a_Match> _15037_m);
inline void _1a9a72786_optimizeAssign(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d82514_Assign> _16838_assign);
inline void _1a9a72a3e_optimizeMultiAssign(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d829ba_MultiAssign> _17343_assign);
inline void _1a9a72ce7_optimizeStmt(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Any _18236_st);
inline void _1a9a72ee5_optimizeStmts(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_);
inline _1a9a7437b_exprDeadCode static__1a9a749b9_new(jule::Ptr<_1a9a700e1_scopeDeadCode>* _4824_s);
inline void _1a9a74c72_binary(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel> _5425_m);
inline void _1a9a7502a_unary(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d2e527_UnaryExprModel> _5924_m);
inline void _1a9a752d3_structureLit(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d2edeb_StructLitExprModel> _6331_m);
inline void _1a9a7558b_allocStructure(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d301e8_AllocStructLitExprModel> _6933_m);
inline void _1a9a75844_casting(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d3077b_CastingExprModel> _7326_m);
inline void _1a9a75aec_args(_1a9a7437b_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args);
inline void _1a9a75da5_funcCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d3112d_FnCallExprModel> _8327_m);
inline void _1a9a7615d_slice(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d31507_SliceExprModel> _9124_m);
inline void _1a9a76416_array(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d3451b_ArrayExprModel> _9524_m);
inline void _1a9a766be_indexing(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d319ad_IndexingExprModel> _10227_m);
inline void _1a9a76977_anonFunc(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel> _10727_m);
inline void _1a9a76c30_mapExpr(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d327e4_MapExprModel> _11126_m);
inline void _1a9a76ed8_slicing(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d32d77_SlicingExprModel> _11826_m);
inline void _1a9a77291_traitSub(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d3340a_TraitSubIdentExprModel> _12627_m);
inline void _1a9a77549_structureSub(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _13031_m);
inline void _1a9a77802_tuple(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d34818_TupleExprModel> _13424_m);
inline void _1a9a77aaa_newCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d35495_BuiltinNewCallExprModel> _14026_m);
inline void _1a9a77d63_outCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d34be2_BuiltinOutCallExprModel> _14626_m);
inline void _1a9a7811b_outlnCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d350bb_BuiltinOutlnCallExprModel> _15028_m);
inline void _1a9a783c4_panicCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d3586e_BuiltinPanicCallExprModel> _15428_m);
inline void _1a9a7867c_assertCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d35d25_BuiltinAssertCallExprModel> _15829_m);
inline void _1a9a78935_errorCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d3792b_BuiltinErrorCallExprModel> _16228_m);
inline void _1a9a78bdd_makeCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d362cb_BuiltinMakeCallExprModel> _16627_m);
inline void _1a9a78e96_appendCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d366a5_BuiltinAppendCallExprModel> _17529_m);
inline void _1a9a7924e_lenCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d369a2_BuiltinLenCallExprModel> _18026_m);
inline void _1a9a79507_capCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d36c9e_BuiltinCapCallExprModel> _18426_m);
inline void _1a9a797b0_deleteCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d37178_BuiltinDeleteCallExprModel> _18829_m);
inline void _1a9a79a68_sizeof(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d380d0_SizeofExprModel> _19525_m);
inline void _1a9a79d21_alignof(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d382bc_AlignofExprModel> _19926_m);
inline void _1a9a7a0c9_integratedToStr(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d38861_IntegratedToStrExprModel> _20334_m);
inline void _1a9a7a382_free(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d39037_FreeExprModel> _20723_m);
inline void _1a9a7a63a_backendEmit(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d38c3a_BackendEmitExprModel> _21130_m);
inline void _1a9a7a8e3_optimize(_1a9a7437b_exprDeadCode* _self_, jule::Any* _21528_model);
inline void _1a907ac5c_pushVar(_1a907a7ea_nils* _self_, jule::Uintptr _2926_var, jule::Bool _2940_safe);
inline jule::Bool _1a907b09d_removeVar(_1a907a7ea_nils* _self_, jule::Uintptr _5228_var);
inline jule::Bool _1a907b3de_isSafe(_1a907a7ea_nils* _self_, jule::Uintptr _6625_var);
inline jule::Ptr<_1a907d578_scopeOptimizer> static__1a907daea_new(jule::Ptr<_1a8d7de17_Scope> _5023_scope);
inline void _1a907dda3_setCurrentStmt(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Any _6238_stmt);
inline void _1a907e0a1_removeCurrent(jule::Ptr<_1a907d578_scopeOptimizer> _self_);
inline jule::Bool _1a907e337_isLastStmt(jule::Ptr<_1a907d578_scopeOptimizer> _self_);
inline jule::Bool _1a907e5bd_isIter(jule::Ptr<_1a907d578_scopeOptimizer> _self_);
inline void _1a907e876_optimizeData(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8e4bcb5_Data> _9436_d);
inline void _1a907eb2e_optimizeVar(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8de41ad_Var> _12035_v);
inline void _1a907edd7_optimizeConditional(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d7ea50_Conditional> _14143_c);
inline void _1a9080305_buildDefaultConstantTrueCase(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d83b53_Case> _21552_case, jule::I32* _21570_i, jule::Ptr<_1a8d8312a_Match>* _21583_m);
inline void _1a90805ad_optimizeMatch(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d8312a_Match> _24137_m);
inline void _1a9080866_optimizeRangeIter(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d80c4e_RangeIter> _32341_it);
inline void _1a9080b1e_optimizeWhileIter(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d80303_WhileIter> _36841_it);
inline jule::Bool _1a9080e60_substr(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d82514_Assign> _37430_a);
inline jule::Bool _1a90812a1_strAssign(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d82514_Assign> _39433_a);
inline jule::Bool _1a90815e2_sliceAssign(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d82514_Assign> _40535_a);
inline void _1a908189a_optimizePostfix(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d8205d_Postfix> _41339_postfix);
inline void _1a9081b53_optimizeAssign(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d82514_Assign> _42038_assign);
inline jule::Bool _1a9081e94_tryOptimizeSwap(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d829ba_MultiAssign>* _52540_assign);
inline void _1a908224c_optimizeMultiAssign(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d829ba_MultiAssign> _56243_assign);
inline void _1a9082505_optimizeRet(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d846e2_RetSt> _60835_r);
inline void _1a90827ad_optimizeStmt(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Any _63236_stmt);
inline void _1a9082a66_optimizeChild(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d7de17_Scope> _66137_child);
inline void _1a9082c64_optimize(jule::Ptr<_1a907d578_scopeOptimizer> _self_);
inline void static__1a9085a25_optimize(jule::Any* _5829_model);
inline void static__1a9085d11_optimizeData(jule::Any* _6233_model, jule::Ptr<_1a909302c_data>* _6256_d);
inline jule::Bool _1a9086152_selfCmpCond(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel>* _7331_m);
inline jule::Bool _1a9086493_boolCond(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel>* _9728_m);
inline jule::Bool _1a90867d4_strCond(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel> _15026_m);
inline jule::Bool _1a9086c8a_tryNeutralElement1(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel>* _20738_m, jule::Ptr<_20a2b7552_Const> _20763_c, jule::Ptr<_1a8d2db53_OperandExprModel>* _20775_nc);
inline jule::Bool _1a90870cb_tryNeutralElement(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel>* _25137_m);
inline void _1a9087384_checkBinaryForBoundary(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel>* _26642_m);
inline void _1a908763c_checkBinaryForNil(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel>* _31837_m);
inline void _1a90878e5_binary(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel> _35025_m);
inline void _1a9087b9d_unary(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e527_UnaryExprModel> _43824_m);
inline void _1a9087e56_structureLit(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2edeb_StructLitExprModel> _48231_m);
inline void _1a908820e_allocStructure(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d301e8_AllocStructLitExprModel> _49933_m);
inline void _1a90884b7_casting(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d3077b_CastingExprModel> _50326_m);
inline void _1a908882a_args(_1a90853c6_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a8d3dde9_ParamIns>> _51723_params, jule::Slice<jule::Any>* _51749_args);
inline void _1a9088ad3_scope(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d7de17_Scope>* _54025_s);
inline void _1a9088d8b_funcCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d3112d_FnCallExprModel> _54627_m);
inline void _1a9089144_slice(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d31507_SliceExprModel> _55424_m);
inline void _1a90893ec_array(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d3451b_ArrayExprModel> _55824_m);
inline void _1a90896a5_indexing(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d319ad_IndexingExprModel> _56727_m);
inline void _1a908995d_anonFunc(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel> _59327_m);
inline void _1a9089c16_mapExpr(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d327e4_MapExprModel> _59726_m);
inline void _1a9089ebe_slicing(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d32d77_SlicingExprModel> _60426_m);
inline void _1a908a277_traitSub(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d3340a_TraitSubIdentExprModel> _61227_m);
inline void _1a908a530_structureSub(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _61631_m);
inline void _1a908a7d8_tuple(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d34818_TupleExprModel> _62024_m);
inline void _1a908aa91_newCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d35495_BuiltinNewCallExprModel> _62626_m);
inline void _1a908ad49_outCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d34be2_BuiltinOutCallExprModel> _63226_m);
inline void _1a908b102_outlnCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d350bb_BuiltinOutlnCallExprModel> _63628_m);
inline void _1a908b3aa_panicCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d3586e_BuiltinPanicCallExprModel> _64028_m);
inline void _1a908b663_assertCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d35d25_BuiltinAssertCallExprModel> _64429_m);
inline void _1a908b91b_errorCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d3792b_BuiltinErrorCallExprModel> _64828_m);
inline void _1a908bbc4_makeCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d362cb_BuiltinMakeCallExprModel> _65227_m);
inline void _1a908be7c_appendCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d366a5_BuiltinAppendCallExprModel> _66129_m);
inline void _1a908c235_lenCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d369a2_BuiltinLenCallExprModel> _66626_m);
inline void _1a908c4dd_capCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d36c9e_BuiltinCapCallExprModel> _67026_m);
inline void _1a908c796_deleteCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d37178_BuiltinDeleteCallExprModel> _67429_m);
inline void _1a908ca4e_sizeof(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d380d0_SizeofExprModel> _68125_m);
inline void _1a908cd07_alignof(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d382bc_AlignofExprModel> _68526_m);
inline void _1a908d0b0_integratedToStr(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d38861_IntegratedToStrExprModel> _68934_m);
inline void _1a908d368_free(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d39037_FreeExprModel> _69323_m);
inline void _1a908d621_backendEmit(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d38c3a_BackendEmitExprModel> _69730_m);
inline void _1a908d81e_do(_1a90853c6_exprOptimizer* _self_);
inline void _1a9090546_pushVar(jule::Ptr<_1a90900d4_dynamic> _self_, jule::Uintptr _3127_var, jule::Ptr<_1a8e8301b_TypeKind> _3145_kind);
inline jule::Bool _1a9090887_removeVar(_1a90900d4_dynamic* _self_, jule::Uintptr _5428_var);
inline jule::Bool _1a9090c83_isFits(_1a90900d4_dynamic* _self_, jule::Uintptr _6825_var, jule::Ptr<_1a8e8301b_TypeKind> _6839_kind);
inline _1a9092a32_dataCheckpoint _1a90933a1_getCheckpoint(_1a909302c_data* _self_);
inline void _1a9093659_loadCheckpoint(_1a909302c_data* _self_, _1a9092a32_dataCheckpoint* _3538_c);
inline void _1a9094d86_pushVar(_1a9094924_boundary* _self_, jule::Uintptr _2426_var, jule::Any _2444_maxSize);
inline jule::Bool _1a90955c3_fitsMaxSize(_1a9094924_boundary* _self_, jule::Uintptr _7130_var, jule::Any _7144_expr);
inline jule::Ptr<_1a9a7b41b_Optimizer> static__1a9a7b88e_New(jule::Ptr<_1a990452a_IR>* _2624_ir);
inline void _1a9a7bb47_optimizeGlobal(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8de41ad_Var>* _3238_v);
inline void _1a9a7be00_optimizeFunction(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8d3be91_Fn>* _3840_func);
inline void _1a9a7c1a8_optimizeStruct(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8d26e26_Struct>* _4838_s);
inline void _1a9a7c461_optimizeGlobals(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8da3dc6_Package>* _6439_p);
inline void _1a9a7c719_optimizeFunctions(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8da3dc6_Package>* _7241_p);
inline void _1a9a7c9c2_optimizeStructs(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8da3dc6_Package>* _8039_p);
inline void _1a9a7cc7a_optimizePackage(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8da3dc6_Package>* _8839_p);
inline void _1a9a7ce78_Optimize(_1a9a7b41b_Optimizer* _self_);
inline void static__1a9a7d770_Reset(void);
inline void static__1a9aa7eb4_Print(jule::Str _1921_escape, jule::Str _1934_text);
inline void static__1a9aaa989_LogFlat(_224743e15_Log* _1424_l);
inline void static__1a9aaabba_LogError(_224743e15_Log* _1925_l);
inline void static__1a9aaadeb_Log(_224743e15_Log* _6520_l);
inline void static__1a9aab12c_PrintLogs(jule::Slice<_224743e15_Log>* _7526_logs);
inline _1aa2d49a9_Time static__1aa2d4d61_Unix(jule::U64 _9120_sec);
inline _1aa2d49a9_Time static__1aa2d5070_Now(void);
inline _1aa2d42d3_AbsTime _1aa2d6758_Abs(_1aa2d49a9_Time* _self_);
inline jule::Ptr<_1aa20da15_scopeCoder> static__1aa20e175_new(jule::Ptr<_1aa2e0586_ObjectCoder>* _7224_oc);
inline void _1ad6d457b_iterHead(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d80c4e_RangeIter>* _7932_it, jule::Bool* _7944_ref, jule::Str _7955_begin);
inline void _1aa20e84b_rangeIndexIter(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d80c4e_RangeIter>* _12839_it);
inline void _1aa20eb04_rangeHashmapIter(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d80c4e_RangeIter>* _19541_it);
inline void _1aa20edac_strRuneIter(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a90791cd_StrRuneIter> _24235_it);
inline void _1aa210165_ifCase(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d7e335_If> _35030_i);
inline void _1aa21041d_conditional(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d7ea50_Conditional> _35935_c);
inline void _1aa2106c6_infIter(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d7ed4c_InfIter> _37931_it);
inline void _1aa21097e_whileIter(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d80303_WhileIter> _39633_it);
inline void _1aa210c37_rangeIter(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d80c4e_RangeIter> _43533_it);
inline void _1aa210ee0_cont(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d810d4_ContSt> _44824_c);
inline void _1aa211298_label(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d817aa_Label> _45325_l);
inline void _1aa211551_gotoSt(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d81b84_GotoSt> _45826_gt);
inline void _1aa211809_postfix(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d8205d_Postfix> _46331_p);
inline void _1aa211ab2_assign(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d82514_Assign> _47030_a);
inline void _1aa211d6a_mapLookupAssign(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d829ba_MultiAssign>* _47640_a);
inline void _1aa212123_multiAssignTup(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d829ba_MultiAssign>* _49939_a);
inline void _1aa2123cb_multiAssignFn(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d829ba_MultiAssign>* _54838_a);
inline void _1aa212684_multiAssign(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d829ba_MultiAssign> _60735_a);
inline jule::Fn<void> _1aa2129c5_matchExpr(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d8312a_Match> _63333_m);
inline void _1aa212d38_case(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d8312a_Match> _64328_m, jule::Ptr<_1a8d83b53_Case> _64343_c);
inline void _1aa2130e1_matchSt(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d8312a_Match> _71331_m);
inline void _1aa213399_fallSt(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d8434b_FallSt> _76826_f);
inline void _1aa213652_breakSt(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d814ad_BreakSt> _77327_b);
inline void _1aa21390a_setResult(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d846e2_RetSt> _78233_r);
inline void _1aa213bb3_retSt(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d846e2_RetSt> _81029_r);
inline void _1aa213e6b_var(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8de41ad_Var> _84627_v);
inline void _1aa214224_mutSlicing(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a9077dbe_MutSlicingExprModel> _85234_m);
inline void _1aa2144cc_swap(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a9076b6a_SwapExprModel> _86928_m);
inline void _1aa214785_exceptionalForwarding(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a90767e6_ExceptionalForwardingExprModel> _87745_m);
inline void _1aa214a3d_st(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Any _88326_st);
inline void _1aa214ce6_scopeStmts(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d7de17_Scope>* _93935_s);
inline void _1aa21509e_scope(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d7de17_Scope> _94829_s);
inline void _1aa215357_commonFuncScope(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _96340_f);
inline void _1aa2156ba_anonFuncScope(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel> _100337_m, jule::Str _100358_ident);
inline void _1aa215973_funcScope(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns> _103533_f);
inline jule::Ptr<_1aa218ed7_exprCoder> static__1aa2193a0_new(jule::Ptr<_1aa2e0586_ObjectCoder>* _11324_oc);
inline void _1aa219658_string(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_20a2b7552_Const>* _11927_c);
inline void _1aa219911_boolean(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Bool _13427_b);
inline void _1aa219b0e_nilLit(jule::Ptr<_1aa218ed7_exprCoder> _self_);
inline jule::Bool _1aa219e50_ftoaSpecialCases(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::F64* _14637_x);
inline void _1aa21a208_float32(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_20a2b7552_Const>* _16028_c);
inline void _1aa21a4b1_float64(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_20a2b7552_Const>* _17928_c);
inline void _1aa21a769_constant(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_20a2b7552_Const> _19732_c);
inline void _1aa21ab87_divByZeroBinary(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a875ce89_Token>* _22136_op, jule::Ptr<_1a8d2db53_OperandExprModel>* _22153_l, jule::Ptr<_1a8d2db53_OperandExprModel>* _22180_r);
inline void _1aa21ae40_unsafeBinary(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel> _24336_m);
inline void _1aa21b1e8_binary(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel> _27430_m);
inline void _1aa21b4a1_var(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8de41ad_Var> _28627_m);
inline void _1aa21b759_structureIns(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns> _30236_m);
inline void _1aa21ba12_unary(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d2e527_UnaryExprModel> _30629_m);
inline void _1aa21bcba_structureLit(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d2edeb_StructLitExprModel> _33036_m);
inline void _1aa21c073_allocStructure(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d301e8_AllocStructLitExprModel> _36138_m);
inline void _1aa21c32b_possibleRefExpr(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Any _36935_expr);
inline void _1aa21c749_castTraitFromTrait(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3077b_CastingExprModel>* _38343_m, jule::Ptr<_1a8d5034a_Trait> _38369_t1, jule::Ptr<_1a8d5034a_Trait> _38385_t2);
inline void _1aa21ca02_casting(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3077b_CastingExprModel> _39631_m);
inline void _1aa21ccaa_models(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Slice<jule::Any> _51230_args);
inline void _1aa21d063_args(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3112d_FnCallExprModel>* _52429_m);
inline void _1aa21d31b_modelForCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Any _55536_expr);
inline void _1aa21d5c4_pushCallInf(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3112d_FnCallExprModel>* _57032_m);
inline jule::Bool _1aa21d915_isWrapped(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3112d_FnCallExprModel>* _59334_m);
inline jule::Bool _1aa21dc56_writeReceiver(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Any _61737_m);
inline void _1aa21e00e_pureFuncCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3112d_FnCallExprModel>* _63037_m);
inline void _1aa21e2b7_coFuncCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3112d_FnCallExprModel>* _72035_m);
inline void _1aa21e62a_writeUseExpr(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _77137_f, jule::Ptr<_1a8e4bcb5_Data> _77152_d);
inline void _1aa21e8d3_funcCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3112d_FnCallExprModel> _79232_m);
inline void _1aa21eb8b_slice(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d31507_SliceExprModel> _86529_m);
inline void _1aa21ee44_indexing(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d319ad_IndexingExprModel> _87732_m);
inline void _1aa2201ec_unsafeIndexing(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a9078551_UnsafeIndexingExprModel> _91738_m);
inline void _1aa2204a5_anonFunc(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel> _93432_m);
inline void _1aa22075d_mapExpr(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d327e4_MapExprModel> _96531_m);
inline void _1aa220a16_slicing(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d32d77_SlicingExprModel> _98631_m);
inline void _1aa220cbe_traitSub(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3340a_TraitSubIdentExprModel> _100232_m);
inline void _1aa221077_structureSub(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _101836_m);
inline void _1aa221330_array(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3451b_ArrayExprModel> _102729_m);
inline void _1aa2215d8_funcInsCommon(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns> _105037_m);
inline void _1aa221891_funcIns(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns> _105731_m);
inline void _1aa221b49_tuple(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d34818_TupleExprModel> _106829_m);
inline void _1aa221e02_newCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d35495_BuiltinNewCallExprModel> _107931_m);
inline void _1aa2221aa_outCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d34be2_BuiltinOutCallExprModel> _108931_m);
inline void _1aa222463_outlnCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d350bb_BuiltinOutlnCallExprModel> _109833_m);
inline void _1aa22271b_panicCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3586e_BuiltinPanicCallExprModel> _110733_m);
inline void _1aa2229c4_assertCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d35d25_BuiltinAssertCallExprModel> _111534_m);
inline void _1aa222c7c_errorCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3792b_BuiltinErrorCallExprModel> _112833_m);
inline void _1aa223035_copyCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d37552_BuiltinCopyCallExprModel> _116032_m);
inline void _1aa2232dd_lenCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d369a2_BuiltinLenCallExprModel> _116831_m);
inline void _1aa223596_capCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d36c9e_BuiltinCapCallExprModel> _117331_m);
inline void _1aa22384e_deleteCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d37178_BuiltinDeleteCallExprModel> _117834_m);
inline void _1aa223b07_makeCallSlice(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d362cb_BuiltinMakeCallExprModel>* _118938_m);
inline void _1aa223db0_makeCallStr(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d362cb_BuiltinMakeCallExprModel>* _120736_m);
inline void _1aa224168_makeCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d362cb_BuiltinMakeCallExprModel> _121832_m);
inline void _1aa224421_pushToSlice(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a907892a_PushToSliceExprModel> _122635_m);
inline void _1aa2246c9_appendToSlice(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a9078d04_AppendToSliceExprModel> _128637_m);
inline void _1aa224982_appendCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d366a5_BuiltinAppendCallExprModel> _129434_m);
inline void _1aa224c3a_sizeof(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d380d0_SizeofExprModel> _130230_m);
inline void _1aa224ee3_alignof(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d382bc_AlignofExprModel> _130831_m);
inline void _1aa22529b_runeLit(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d38564_RuneExprModel> _131427_m);
inline void _1aa225554_structureStatic(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d34142_StructStaticIdentExprModel> _132839_m);
inline void _1aa22580c_integratedToStr(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d38861_IntegratedToStrExprModel> _133239_m);
inline void _1aa225ab5_backendEmit(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d38c3a_BackendEmitExprModel> _133835_m);
inline void _1aa225d6d_free(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d39037_FreeExprModel> _135428_m);
inline void _1aa226126_strComp(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a907783b_StrCompExprModel> _136331_m);
inline void _1aa2263ce_emptyCompare(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a9077044_EmptyCompareExprModel> _137936_m);
inline void _1aa226687_unsafeDeref(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a90794ca_UnsafeDerefExprModel> _138835_m);
inline void _1aa226940_unsafeCasting(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a90797c7_UnsafeCastingExprModel> _139937_m);
inline void _1aa226be8_model(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Any _141629_m);
inline void _1aa226ea1_initExpr(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8e8301b_TypeKind> _151732_t);
inline jule::Ptr<_1aa22a405_TestCoder> static__1aa22a878_New(jule::Ptr<_1aa2e0586_ObjectCoder>* _2924_oc);
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1aa22ab0e_findTestingPackage(jule::Ptr<_1aa22a405_TestCoder> _self_);
inline void _1aa22adb7_appendTest(jule::Ptr<_1aa22a405_TestCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns> _4434_f);
inline void _1aa22b170_appendPackageTests(jule::Ptr<_1aa22a405_TestCoder> _self_, jule::Ptr<_1a8da3dc6_Package>* _5943_p);
inline jule::Bool _1aa22b406_readyTestingPackage(jule::Ptr<_1aa22a405_TestCoder> _self_);
inline void _1aa22b604_callTmReset(jule::Ptr<_1aa22a405_TestCoder> _self_);
inline void _1aa22b802_callTmFailed(jule::Ptr<_1aa22a405_TestCoder> _self_);
inline void _1aa22ba00_callTmSkipped(jule::Ptr<_1aa22a405_TestCoder> _self_);
inline void _1aa22bbed_Serialize(jule::Ptr<_1aa22a405_TestCoder> _self_);
inline void static__1aa22d727_writeIdentTo(_2234c269a_StrBuilder* _3433_buf, jule::Str* _3451_ident);
inline void static__1aa22dabd_toOut(_2234c269a_StrBuilder* _6226_buf, jule::Str _6243_ident, jule::Uintptr _6255_addr);
inline void static__1aa22e01e_toLocal(_2234c269a_StrBuilder* _7728_buf, jule::I32 _7745_row, jule::I32 _7755_col, jule::Str* _7766_ident);
inline void static__1aa22e30a_func(_2234c269a_StrBuilder* _8525_buf, jule::Ptr<_1a8d3be91_Fn>* _8543_f);
inline void static__1aa22e5e6_funcIns(_2234c269a_StrBuilder* _10128_buf, jule::Ptr<_1a8d3ee72_FnIns>* _10146_f);
inline void static__1aa22e8d2_traitDecl(_2234c269a_StrBuilder* _11630_buf, jule::Ptr<_1a8d5034a_Trait> _11647_t);
inline void static__1aa22ebbd_param(_2234c269a_StrBuilder* _12026_buf, jule::Ptr<_1a8d3a4bc_Param>* _12044_p);
inline void static__1aa22eea9_structure(_2234c269a_StrBuilder* _13530_buf, jule::Ptr<_1a8d26e26_Struct>* _13548_s);
inline void static__1aa230295_structureIns(_2234c269a_StrBuilder* _14633_buf, jule::Ptr<_1a8d29ba4_StructIns>* _14651_s);
inline void static__1aa230581_field(_2234c269a_StrBuilder* _15426_buf, jule::Ptr<_1a8d24000_Field>* _15444_f);
inline void static__1aa23086c_var(_2234c269a_StrBuilder* _16424_buf, jule::Ptr<_1a8de41ad_Var> _16445_v);
inline void static__1aa230b58_iterBegin(_2234c269a_StrBuilder* _18630_buf, jule::Uintptr _18647_it);
inline void static__1aa230e44_iterEnd(_2234c269a_StrBuilder* _19128_buf, jule::Uintptr _19145_it);
inline void static__1aa231230_iterNext(_2234c269a_StrBuilder* _19629_buf, jule::Uintptr _19646_it);
inline void static__1aa23151b_label(_2234c269a_StrBuilder* _20126_buf, jule::Uintptr _20143_u);
inline void static__1aa231807_matchEnd(_2234c269a_StrBuilder* _20629_buf, jule::Uintptr _20646_m);
inline void static__1aa231ae3_caseBegin(_2234c269a_StrBuilder* _21130_buf, jule::Uintptr _21147_c);
inline jule::Str _1aa3012bc_Str(_1aa300e26_customType* _self_);
inline jule::Bool _1aa30160d_Equal(jule::Ptr<_1aa300e26_customType> _self_, jule::Ptr<_1a8e8301b_TypeKind> _4321_k);
inline jule::Ptr<_1aa301a3c_typeCoder> static__1aa302059_new(jule::Ptr<_1aa2e0586_ObjectCoder>* _6824_oc);
inline void _1aa3023bc_toType(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _7530_buf, jule::Str _7551_id);
inline void _1aa302730_prim(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _8928_buf, jule::Ptr<_1a8e8aae5_Prim> _8945_p);
inline void _1aa302a93_tuple(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _9429_buf, jule::Ptr<_1a8e90bd8_Tuple> _9450_t);
inline void _1aa302e06_asSptr(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _10630_buf, jule::Slice<jule::U8> _10647_elem);
inline void _1aa303269_sptr(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _11328_buf, jule::Ptr<_1a8e8e621_Sptr> _11349_sptr);
inline void _1aa3035cc_ptr(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _12027_buf, jule::Ptr<_1a8e92dd8_Ptr> _12048_p);
inline void _1aa303940_enumDecl(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _13132_buf, jule::Ptr<_1a8d52a56_Enum> _13153_e);
inline void _1aa303ca3_typeEnumDecl(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _13636_buf, jule::Ptr<_1a8d54261_TypeEnum> _13657_e);
inline void _1aa304116_asSlice(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _14031_buf, jule::Ptr<_1a8e8301b_TypeKind> _14052_elem);
inline void _1aa304479_slice(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _14729_buf, jule::Ptr<_1a8e900e4_Slc> _14750_s);
inline void _1aa3047dc_mapType(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _15231_buf, jule::Ptr<_1a8e91788_Map> _15252_m);
inline void _1aa304b50_structure(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _16133_buf, jule::Ptr<_1a8d26e26_Struct> _16150_s);
inline void _1aa304eb3_structureIns(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _16636_buf, jule::Ptr<_1a8d29ba4_StructIns> _16657_s);
inline void _1aa305326_array(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _19029_buf, jule::Ptr<_1a8e92415_Arr> _19050_a);
inline void _1aa3059ec_paramIns(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _21332_buf, jule::Ptr<_1a8d3dde9_ParamIns>* _21354_p);
inline void _1aa3061c3_funcInsResult(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _24537_s, jule::Ptr<_1a8d3ee72_FnIns>* _24557_f);
inline void _1aa306536_anonFunc(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _26332_buf, jule::Ptr<_1a8d3ee72_FnIns> _26353_f);
inline void _1aa306899_func(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _28428_buf, jule::Ptr<_1a8d3ee72_FnIns> _28449_f);
inline void _1aa306c0c_kind(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _29128_buf, jule::Ptr<_1a8e8301b_TypeKind> _29149_k);
inline jule::Ptr<_1aa309627_resultCoder> static__1aa309b00_new(jule::Ptr<_1aa301a3c_typeCoder>* _35824_tc);
inline void _1aa309e63_ptr(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _36227_s, jule::Ptr<_1a8e92dd8_Ptr> _36246_p);
inline void _1aa30a2c6_sptr(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _36728_s, jule::Ptr<_1a8e8e621_Sptr> _36747_p);
inline void _1aa30a639_mapType(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _37231_s, jule::Ptr<_1a8e91788_Map> _37250_p);
inline void _1aa30a99c_slice(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _37829_s, jule::Ptr<_1a8e900e4_Slc> _37848_slc);
inline void _1aa30ad10_arr(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _38327_s, jule::Ptr<_1a8e92415_Arr> _38346_arr);
inline void _1aa30b173_func(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _38928_s, jule::Ptr<_1a8d3ee72_FnIns> _38947_f);
inline void _1aa30b4d6_tup(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _40227_s, jule::Ptr<_1a8e90bd8_Tuple> _40246_tup);
inline void _1aa30b849_codeMut(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _40931_s, jule::Ptr<_1a8e8301b_TypeKind>* _40951_t);
inline void _1aa30bbac_codeMut1(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _44432_s, jule::Ptr<_1a8e8301b_TypeKind>* _44452_t);
inline jule::Slice<jule::U8> _1aa30beba_code(_1aa309627_resultCoder* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _45328_t);
inline jule::Str _1add21a20_Name(_1add21602_Flag* _self_);
inline jule::Str _1add21b74_What(_1add21602_Flag* _self_);
inline void _1add21cc8_Reset(_1add21602_Flag* _self_);
inline jule::I32 _1add21e2c_Short(_1add21602_Flag* _self_);
inline jule::Str _1add24d31_Name(_1add251a5_Flag* _self_);
inline jule::Str _1add25491_What(_1add251a5_Flag* _self_);
inline void _1add255d4_Reset(_1add251a5_Flag* _self_);
inline jule::I32 _1add25727_Short(_1add251a5_Flag* _self_);
inline jule::Str _1add28494_Name(_1add28818_Flag* _self_);
inline jule::Str _1add28b04_What(_1add28818_Flag* _self_);
inline void _1add28c47_Reset(_1add28818_Flag* _self_);
inline jule::I32 _1add28d8a_Short(_1add28818_Flag* _self_);
inline jule::Str _1add2bb4b_Name(_1add2bec0_Flag* _self_);
inline jule::Str _1add2c2ab_What(_1add2bec0_Flag* _self_);
inline void _1add2c3ee_Reset(_1add2bec0_Flag* _self_);
inline jule::I32 _1add2c542_Short(_1add2bec0_Flag* _self_);
inline jule::Str _1add302ae_Name(_1add30633_Flag* _self_);
inline jule::Str _1add3091e_What(_1add30633_Flag* _self_);
inline void _1add30a62_Reset(_1add30633_Flag* _self_);
inline jule::I32 _1add30ba5_Short(_1add30633_Flag* _self_);
inline jule::Ptr<_1aa374b48_FlagSet> static__1aa374e34_New(void);
inline jule::Trait _1aa3753da_FindFlag(_1aa374b48_FlagSet* _self_, jule::Str _7127_name);
inline jule::Trait _1aa37572b_FindFlagShort(_1aa374b48_FlagSet* _self_, jule::I32 _8132_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1aa375d03_Parse(_1aa374b48_FlagSet* _self_, jule::Slice<jule::Str> _11524_args);
inline jule::Ptr<_1add30633_Flag> _1add9a747_addFlagCommon(_1aa374b48_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what);
inline jule::Ptr<_1add2bec0_Flag> _1adda263e_addFlagCommon(_1aa374b48_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what);
inline void _1add984ae_AddVar(_1aa374b48_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what);
inline void _1adda03ea_AddVar(_1aa374b48_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what);
inline __jule_tuple_i64__jule_tuple_bool _1add43316_parseInteger(_1aa37760c_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18239_parser);
inline __jule_tuple_u64__jule_tuple_bool _1add4ac8b_parseInteger(_1aa37760c_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18239_parser);
inline jule::Str _1aa377e26_getData(_1aa37760c_argParser* _self_);
inline jule::VoidExceptional _1aa37819b_processFlag(_1aa37760c_argParser* _self_, jule::Trait* _20935_flag);
inline jule::VoidExceptional _1aa378454_singleDash(_1aa37760c_argParser* _self_, jule::Str* _24930_arg);
inline jule::VoidExceptional _1aa37870c_doubleDash(_1aa37760c_argParser* _self_, jule::Str* _26330_arg);
inline jule::VoidExceptional _1aa37890a_tryArg(_1aa37760c_argParser* _self_);
inline jule::VoidExceptional _1aa378b08_parse(_1aa37760c_argParser* _self_);
inline jule::Ptr<_1aa2e0586_ObjectCoder> static__1aa2e09b5_New(jule::Ptr<_1a990452a_IR>* _12124_ir, _1aa2dd287_SerializationInfo _12133_info);
inline void _1aa2e0c6d_write(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Str _13225_s);
inline void _1aa2e1026_writeBytes(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Slice<jule::U8> _13630_b);
inline void _1aa2e1224_addIndent(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2e1422_doneIndent(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2e1620_indent(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline jule::I32 _1aa2e1961_findAnyType(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8e8301b_TypeKind>* _15536_t);
inline jule::I32 _1aa2e1ca2_pushDealloc(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8e8301b_TypeKind> _16435_t);
inline jule::Str _1aa2e20e3_pushAnonFn(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel>* _18035_m);
inline jule::I32 _1aa2e2434_pushAnyType(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8e8301b_TypeKind> _22035_t);
inline void _1aa2e26dc_pushResultIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _31938_f);
inline void _1aa2e2995_pushResult(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3be91_Fn>* _34035_f);
inline jule::I32 _1aa2e2d91_findTypeOffsetS(_1aa2e0586_ObjectCoder* _self_, jule::Ptr<_1a8d5034a_Trait> _35330_t, jule::Ptr<_1a8d29ba4_StructIns> _35345_s);
inline jule::I32 _1aa2e328c_findTypeOffset(_1aa2e0586_ObjectCoder* _self_, jule::Ptr<_1a8d5034a_Trait> _36529_t, jule::Ptr<_1a8e8301b_TypeKind> _36544_k);
inline void _1aa2e3600_pushAndWriteMaskMapper(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d5034a_Trait> _38046_t1, jule::Ptr<_1a8d5034a_Trait> _38062_t2);
inline void _1aa2e38a8_locInfo(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a875ce89_Token>* _43128_t);
inline void _1aa2e3aa6_head(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2e3ca4_links(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2e405c_prepareStructure(_1aa2e0586_ObjectCoder* _self_, jule::Ptr<_1a8d26e26_Struct>* _51240_s);
inline void _1aa2e425a_prepareStructures(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2e4513_iterPackages(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Fn<void,jule::Ptr<_1a8da3dc6_Package>*> _54332_f);
inline void _1aa2e4711_buildTraitMap(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2e49b9_structurePlainDecl(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d26e26_Struct>* _59443_s);
inline void _1aa2e4bb7_structurePlainDecls(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2e4e70_fieldDecl(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29104_FieldIns>* _61034_f);
inline void _1aa2e5228_structureDestructor(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _62844_s);
inline void _1aa2e558b_structureOperatorEq(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Slice<jule::U8> _64439_ident, jule::Ptr<_1a8d29ba4_StructIns>* _64459_s);
inline void _1aa2e58ee_structureOperatorNotEq(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Slice<jule::U8> _70142_ident, jule::Ptr<_1a8d29ba4_StructIns>* _70162_s);
inline void _1aa2e5d1c_structureOperator(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Slice<jule::U8> _71537_ident, jule::Ptr<_1a8d3ee72_FnIns>* _71557_f, jule::Str _71568_op);
inline void _1aa2e60c5_structureOperators(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _76443_s);
inline void _1aa2e637d_structureInsDecl(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _80541_s);
inline void _1aa2e6636_structureDecl(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d26e26_Struct>* _83538_s);
inline void _1aa2e6834_structureDecls(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2e6a32_structureMethodDecls(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2e700a_funcHead(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, _2234c269a_StrBuilder* _86933_buf, jule::Ptr<_1a8d3ee72_FnIns>* _86955_f, jule::Bool _86966_ptr, jule::Str _86977_ident);
inline void _1aa2e736d_funcDeclIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _88836_f, jule::Bool _88847_ptr);
inline void _1aa2e76d1_funcDecl(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3be91_Fn>* _89533_f, jule::Bool _89541_ptr);
inline void _1aa2e7989_funcDeclTrait(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3be91_Fn>* _90138_f);
inline void _1aa2e7b87_funcDecls(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2e7e40_traitDataTypeMethods(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d5034a_Trait>* _92345_t);
inline void _1aa2e813d_traitDataTypes(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2e84a1_paramIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, _2234c269a_StrBuilder* _96233_buf, jule::Ptr<_1a8d3dde9_ParamIns>* _96255_p);
inline void _1aa2e8814_paramsIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, _2234c269a_StrBuilder* _96834_buf, jule::Ptr<_1a8d3ee72_FnIns>* _96856_f);
inline void _1aa2e8b77_varInitExpr(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8de41ad_Var>* _98936_v, jule::Fn<void> _98945_init);
inline void _1aa2e8e30_var(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8de41ad_Var> _100727_v);
inline void _1aa2e9293_anonFuncInsDecl(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel>* _103840_m, jule::Str _103861_ident);
inline void _1aa2e9606_anonFuncIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel>* _104436_m, jule::Str _104457_ident);
inline void _1aa2e98ae_funcIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _105432_f);
inline void _1aa2e9b67_func(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3be91_Fn>* _106429_f);
inline void _1aa2e9eca_funcTrait(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1aa2dd85e_traitHash>* _107034_hash, jule::Ptr<_1a8d3be91_Fn>* _107057_f);
inline void _1aa2ea33d_traitWrapper(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3be91_Fn>* _109237_m, jule::Ptr<_1aa2dd85e_traitHash>* _109250_hash);
inline void _1aa2ea53b_traitWrappers(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2ea89e_traitDataMethods(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d5034a_Trait>* _114041_t, jule::Ptr<_1aa2dd85e_traitHash>* _114053_hash);
inline void _1aa2eab57_traitData(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1aa2dd85e_traitHash>* _115734_hash);
inline void _1aa2ead55_traitDatas(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2eb053_globals(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2eb251_decls(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2eb509_structureMethods(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _121641_s);
inline void _1aa2eb7b2_structureOstream(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _122341_s);
inline void _1aa2eba6a_structureIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _127437_s);
inline void _1aa2ebd23_structure(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d26e26_Struct>* _128034_s);
inline void _1aa2ec021_structures(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2ec21e_funcs(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2ec4c7_pushInit(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8da3dc6_Package>* _131233_pkg);
inline void _1aa2ec6c5_anonHashes(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2ec8c3_initCaller(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2ecac1_end(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2ece34_insertBuf(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, _2234c269a_StrBuilder* _136934_buf, jule::I32 _136951_pos);
inline void _1aa2ed132_serializeHead(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline void _1aa2ed330_Serialize(jule::Ptr<_1aa2e0586_ObjectCoder> _self_);
inline jule::Ptr<_1a9a6a806_ObjectDeadCode> static__1a9a6ac9b_new(jule::Ptr<_1a990452a_IR>* _3524_ir);
inline jule::Bool _1ad49cec1_isLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d5034a_Trait>* _4130_t);
inline jule::Bool _1ad4a3922_isLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _4130_t);
inline jule::Bool _1ad4a976e_isLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _4130_t);
inline jule::Bool _1ad4b19b8_isLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8de41ad_Var>* _4130_t);
inline void _1ad49d367_pushLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d5034a_Trait> _6135_t);
inline void _1ad4a3cb8_pushLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d3ee72_FnIns> _6135_t);
inline void _1ad4a9d24_pushLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d29ba4_StructIns> _6135_t);
inline void _1ad4b1d5e_pushLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8de41ad_Var> _6135_t);
inline void _1a9a6b64d_setReferencesAsLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d43151_ReferenceStack>* _7444_rs);
inline void _1a9a6b906_inits(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8da3dc6_Package>* _15630_pkg);
inline void _1a9a6bbae_collectLivePackage(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8da3dc6_Package>* _16843_pkg);
inline void _1a9a6bdac_collectLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_);
inline void _1a9a6c165_removeDeadGlobals(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _20142_vars);
inline void _1a9a6c41d_removeDeadFns(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a8d3be91_Fn>>* _21338_funcs);
inline void _1a9a6c6c6_removeDeadStructs(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a8d26e26_Struct>>* _23442_structs);
inline void _1a9a6c97e_removeDeadTraits(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a8d5034a_Trait>>* _25641_traits);
inline void _1a9a6cc37_removeDeadsFile(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8e4694c_SymbolTable>* _27740_file);
inline void _1a9a6cee0_removeDeadsPackage(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8da3dc6_Package>* _28443_pkg);
inline void _1a9a6d1dd_removeDeads(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_);
inline void _1a9a6d3db_elimanate(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_);
inline __jule_tuple_x_1a990452a_IR__jule_tuple_s_224743e15_Log static__1a99049c0_Build(jule::Str _2721_path, jule::I32 _2732_flags);
inline void _1a9904ea9_appendStructs(_1a990452a_IR* _self_, jule::Ptr<_1a8da3dc6_Package>* _5633_p, jule::Slice<jule::Ptr<_1a8d26e26_Struct>>* _5657_buffer);
inline jule::Slice<jule::Ptr<_1a8d26e26_Struct>> _1a9905240_GetAllStructures(_1a990452a_IR* _self_);
inline void _1a99055a3_appendGlobals(_1a990452a_IR* _self_, jule::Ptr<_1a8da3dc6_Package>* _7933_p, jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _7957_buffer);
inline jule::Slice<jule::Ptr<_1a8de41ad_Var>> _1a9905839_GetAllGlobals(_1a990452a_IR* _self_);
inline void _1a9905a37_Order(_1a990452a_IR* _self_);
inline jule::Str _1a8d2a028_Str(_1a8d29ba4_StructIns* _self_);
inline jule::Bool _1a8d2a369_Equal(jule::Ptr<_1a8d29ba4_StructIns> _self_, jule::Ptr<_1a8e8301b_TypeKind> _25521_other);
inline jule::Bool _1a8d2a820_Same(_1a8d29ba4_StructIns* _self_, jule::Ptr<_1a8d29ba4_StructIns> _28319_s);
inline jule::Ptr<_1a8d3be91_Fn> _1a8d2ac1b_FindMethod(_1a8d29ba4_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically);
inline jule::Ptr<_1a8d29104_FieldIns> _1a8d2b05c_FindField(_1a8d29ba4_StructIns* _self_, jule::Str _30928_ident);
inline jule::Ptr<_1a8de41ad_Var> _1a8d2b39d_FindStatic(_1a8d29ba4_StructIns* _self_, jule::Str _32029_ident);
inline jule::Ptr<_224805e50_Cmd> static__22480634b_New(jule::Str _2619_path);
inline jule::VoidExceptional _224806549_Spawn(_224805e50_Cmd* _self_);
inline jule::Exceptional<jule::I32> _2248069cd_Wait(_224805e50_Cmd* _self_);
inline jule::VoidExceptional _22480a51a_spawn(_224805e50_Cmd* _self_);
inline jule::Exceptional<jule::I32> _22480a99e_wait(_224805e50_Cmd* _self_);
inline jule::I32 _223295847_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2);
inline __jule_tuple_i32__jule_tuple_i32 _223295b11_EncodeRune(jule::I32 _7819_r);
inline jule::Slice<jule::U16> _223295e52_Encode(jule::Slice<jule::I32> _8711_s);
inline jule::Slice<jule::I32> _2232961d8_Decode(jule::Slice<jule::U16> _11911_s);
inline jule::Slice<jule::U16> _22329655c_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r);
inline jule::Slice<jule::U16> _2232967b0_UTF16FromStr(jule::Str _1417_s);
inline jule::Str _223296abd_UTF16ToStr(jule::Slice<jule::U16> _3415_s);
inline jule::Str _223296d87_U16PtrToStr(jule::U16* _5023_s);
inline jule::I32 _216273ada_GetLastErrno(void);
inline jule::Uintptr _2232c0531_GetStdHandle(jule::Uintptr _6417_stdh);
inline jule::Bool _2232c07ea_CloseHandle(jule::Uintptr _6523_stdh);
inline jule::I32 _2232c0b6e_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat);
inline jule::I32 _2232c109d_Wopen(jule::U16* _7317_path, jule::I32 _7329_flag, jule::I32 _7340_mode);
inline jule::U32 _2232c12ac_GetLastError(void);
inline jule::U32 _2232c1631_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff);
inline jule::Bool _2232c1bb4_DeleteFile(jule::U16* _9322_path);
inline jule::Bool _2232c1e7d_CreateDirectory(jule::U16* _9827_path);
inline jule::Bool _2232c2247_RemoveDirectory(jule::U16* _10327_path);
inline jule::U32 _2232c2731_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1095_buff, jule::U16** _10917_fname);
inline jule::Bool _2232c2aa5_GetConsoleMode(jule::Uintptr _11419_handle, jule::I32* _11440_mode);
inline jule::Bool _2232c31b0_SetConsoleMode(jule::Uintptr _11919_handle, jule::I32 _11935_mode);
inline jule::Bool _2232c3710_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I32 _12454_toWrite, jule::I32* _12510_written, void* _12524_reserved);
inline jule::Bool _2232c3be9_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I32 _13257_toRead, jule::I32* _13310_readed);
inline jule::Uintptr _2232c427c_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data);
inline jule::I32 _2232c4601_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data);
inline jule::I32 _2232c48ba_FindClose(jule::Uintptr _15414_h);
inline jule::I32 _2232c6999_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n);
inline jule::I32 _2232c6d73_Close(jule::I32 _2510_handle);
inline jule::I32 _2232c722a_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n);
inline void _2232c745b_Exit(jule::I32 _339_code);
inline __jule_tuple_i32__jule_tuple_int _2233e3a3e_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _2233e3d80_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _2233e43d0_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::I32 _2233e4699_RuneLen(jule::I32 _35212_r);
inline jule::I32 _2233e4b2d_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r);
inline jule::Slice<jule::U8> _2233e4e2a_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _2233e529e_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I32 _2233e5832_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _2233e5aeb_RuneStart(jule::U8 _51714_b);
inline void _2233ece77_handleRW(jule::Slice<jule::U8>* _514_b);
inline void _2233ec916_HandleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Str _2234b5b88_Str(jule::U8* _108_b, jule::I32 _1018_n);
inline jule::Slice<jule::U8> _1aa492c88_Slice(jule::U8* _2316_e, jule::I32 _2326_n);
inline jule::Slice<jule::U8> _2234c1930_StrBytes(jule::Str _4113_s);
inline jule::Str _2234c1bb6_BytesStr(jule::Slice<jule::U8> _5013_b);
inline jule::Str _2234c1e80_StrFromBytes(jule::Slice<jule::U8> _5817_b);
inline jule::I32 _223500be5_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _223502257_Args(void);
inline jule::Exceptional<jule::Str> _2235026b9_WorkingDir(void);
inline jule::Exceptional<jule::Str> _223503104_getwd(void);
inline jule::Bool _2245d7a23_IsLetter(jule::I32 _7613_r);
inline jule::Bool _224652dbd_is16(jule::Slice<_224651130_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _224653242_is32(jule::Slice<_22465165d_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _224653a4a_isExcludingLatin(jule::Ptr<_224651ad1_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _224653c8c_IsUpper(jule::I32 _29512_r);
inline jule::I32 _224694519_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I32 _224694b46_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I32 _224694eba_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _2246952b7_Repeat(jule::Str _1111_s, jule::I32 _1123_n);
inline jule::Bool _224695680_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _224695a04_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I32 _224695eaa_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i);
inline jule::I32 _2246962eb_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I32 _22469672a_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i);
inline jule::I32 _224696a9e_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I32 _224698386_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I32 _22469870a_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I32 _224699134_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _2246997c7_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n);
inline jule::Bool _224699b4b_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _22469a6b8_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I32 _22469aa3c_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _22469b026_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I32 _28444_n);
inline jule::Str _22469bca2_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _22469c126_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _22469c49a_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Bool _2234c51e7_IsPathSep(jule::U8 _4914_c);
inline jule::Bool _2234c5505_isSlash(jule::U8 _5312_c);
inline jule::U8 _2234c57be_toUpper(jule::U8 _5512_c);
inline jule::I32 _2234c5d96_volumeNameLen(jule::Str _8318_path);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _2234c6160_cutPath(jule::Str _12012_path);
inline __jule_tuple_str__jule_tuple_bool _2234c6429_fullPath(jule::Str _12913_name);
inline __jule_tuple_str__jule_tuple_bool _2234c6803_abs(jule::Str _14612_path);
inline jule::Str _2234c6a45_join(jule::Slice<jule::Str> _16013_elem);
inline jule::Str _22469e7aa_Clean(jule::Str _10914_path);
inline jule::Str _22469ed82_FromSlash(jule::Str _21214_path);
inline jule::Str _2246a01c3_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _2246a0459_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _2246a0723_Abs(jule::Str _2468_path);
inline jule::Str _2246a09dc_Base(jule::Str _25213_path);
inline jule::Str _2246a0db6_Dir(jule::Str _2838_path);
inline jule::Str _2246a1108_VolumeName(jule::Str _30115_path);
inline jule::I32 _2232d74b0_getLastFsError(void);
inline jule::Bool _2233ee7e7_isConsoleHandle(jule::Uintptr _11620_handle);
inline void _22480ad56_appendEscapeArg(_2234c269a_StrBuilder* _10225_s, jule::Str _10240_arg);
inline jule::Str _22480b120_makeCmdLine(jule::Slice<jule::Str> _16316_args);
inline jule::Exceptional<jule::Slice<jule::U16>> _22480b4e9_createEnvBlock(jule::Slice<jule::Str> _17919_env);
inline jule::I32 _22480c4ea_processErrorFromCode(jule::I32 _1125_code);
inline jule::I32 _22480c71a_getLastProcessError(void);
inline void _22480d034_Exit(jule::I32 _129_code);
inline jule::Str _22480d243_Executable(void);
inline jule::Bool _2247367ed_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _224736ac8_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _224736d92_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _224744377_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args);
inline jule::Str _224744685_argToStr(jule::Any _32713_arg);
inline jule::I32 _22474494e_findNextFmt(jule::Str _34016_fmt);
inline jule::Str _224744d17_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args);
inline jule::Bool _224745b70_IsTopDirective(jule::Str _2219_directive);
inline jule::Bool _22474708e_IsWindows(jule::Str _3714_os);
inline jule::Bool _22474739c_IsDarwin(jule::Str _4013_os);
inline jule::Bool _224747666_IsLinux(jule::Str _4312_os);
inline jule::Bool _2247479a7_IsI386(jule::Str _4611_arch);
inline jule::Bool _224747c3d_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _224748007_IsArm64(jule::Str _5212_arch);
inline jule::Bool _2247482c1_IsUnix(jule::Str _5511_os);
inline jule::Bool _22474869a_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _2247488dc_Is64Bit(jule::Str _6112_arch);
inline void _22480e4ca_init(void);
inline jule::I32 _20a24b43c_LeadingZeros64(jule::U64 _6119_x);
inline jule::I32 _20a24c383_TrailingZeros(jule::U32 _8318_x);
inline jule::I32 _20a24cc68_TrailingZeros32(jule::U32 _10520_x);
inline jule::I32 _20a24d032_TrailingZeros64(jule::U64 _11420_x);
inline jule::I32 _20a253a0a_Len32(jule::U32 _35214_x);
inline jule::I32 _20a253cc4_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _20a254a61_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _20a25636a_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::U32 _209e0669c_F32Bits(jule::F32 _4112_f);
inline jule::F32 _209e069aa_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _209e06c74_F64Bits(jule::F64 _5212_f);
inline jule::F64 _209e070b5_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _209e09628_Frexp(jule::F64 _4714_f);
inline jule::F64 _20a25d5c5_NaN(void);
inline jule::Bool _20a25d8d3_IsNaN(jule::F64 _5210_f);
inline jule::F64 _20a25db9c_Inf(jule::I32 _618_sign);
inline jule::Bool _20a25e065_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _20a25e32e_normalize(jule::F64 _8214_x);
inline jule::F64 _20a260d14_Log(jule::F64 _1118_x);
inline jule::F64 _20a261809_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _20a2683d2_Modf(jule::F64 _449_f);
inline jule::F64 _20a268bda_Log2(jule::F64 _449_x);
inline jule::Str _20a292681_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize);
inline jule::Slice<jule::U8> _20a292c69_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize);
inline jule::Slice<jule::U8> _20a293473_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1885_mant, jule::I32 _18816_exp, _20a291471_floatInfo* _18827_flt);
inline jule::Slice<jule::U8> _20a293b49_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _20a2920ed_decimalSlice _2255_digs, jule::I32 _22529_prec, jule::U8 _22540_fmt);
inline void _20a294067_roundShortest(_20a2a4d58_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _20a291471_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _20a29460b_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _20a2920ed_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _20a294ae5_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _20a2920ed_decimalSlice _45637_d, jule::I32 _45654_prec);
inline jule::Slice<jule::U8> _20a295299_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _20a291471_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _20a29592b_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5129_mant, jule::I32 _51224_exp, _20a291471_floatInfo* _51235_flt);
inline jule::I32 _20a295ca0_min(jule::I32 _5968_a, jule::I32 _59616_b);
inline jule::I32 _20a296124_max(jule::I32 _6038_a, jule::I32 _60316_b);
inline jule::U8 _20a296cb2_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1ecb2be90_ConvError _20a297235_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize);
inline jule::Exceptional<jule::U64> _20a297664_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize);
inline jule::Exceptional<jule::I64> _20a297b1a_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _20a2987ca_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _20a298c4d_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg);
inline jule::I32 _20a29aa30_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _20a29ad3d_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _20a29b107_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _20a29cb53_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _20a29d082_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1ecb2be90_ConvError _20a29d626_atofHex(_20a291471_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1ecb2be90_ConvError _20a29da00_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ecb2be90_ConvError _20a29dc42_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ecb2be90_ConvError _20a29e0b6_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize);
inline jule::Exceptional<jule::F64> _20a29e43a_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize);
inline void _20a29ecba_ryuFtoaFixed32(_20a2920ed_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec);
inline void _20a2a0260_ryuFtoaFixed64(_20a2920ed_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec);
inline void _20a2a0a9b_formatDecimal(_20a2920ed_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec);
inline void _20a2a1074_ryuFtoaShortest(_20a2920ed_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _20a291471_floatInfo* _26168_flt);
inline jule::I32 _20a2a130a_mulByLog2Log10(jule::I32 _37719_x);
inline jule::I32 _20a2a15c4_mulByLog10Log2(jule::I32 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _20a2a1a03_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _20a291471_floatInfo* _3966_flt);
inline void _20a2a2152_ryuDigits(_20a2920ed_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _20a2a27c3_ryuDigits32(_20a2920ed_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I32 _45554_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _20a2a2c02_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _20a2a3131_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q);
inline jule::Bool _20a2a34a5_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _20a2a376e_divmod1e9(jule::U64 _60214_x);
inline void _20a2a66a6_trim(_20a2a4d58_decimal* _27414_a);
inline void _20a2a6992_rightShift(_20a2a4d58_decimal* _28420_a, jule::U32 _28432_k);
inline jule::Bool _20a2a6e48_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s);
inline void _20a2a7201_leftShift(_20a2a4d58_decimal* _35219_a, jule::U32 _35231_k);
inline jule::Bool _20a2a7575_shouldRoundUp(_20a2a4d58_decimal* _39919_a, jule::I32 _39931_nd);
inline jule::Str _20a2a8d07_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base);
inline jule::Str _20a2a91c0_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base);
inline jule::Str _20a2a9489_Itoa(jule::I32 _819_i);
inline jule::Str _20a2a97ca_small(jule::I32 _8610_i);
inline jule::Bool _20a2a9a61_isPowerOfTwo(jule::I32 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _20a2aa105_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline jule::Str _20a2ab601_RealKindOf(jule::Str _4515_kind);
inline jule::I32 _20a2ab8ba_BitsizeOf(jule::Str _5914_k);
inline jule::Str _20a2abc0b_IntFromBits(jule::I32 _8716_bits);
inline jule::Str _20a2abe92_UintFromBits(jule::I32 _10517_bits);
inline jule::Str _20a2ac25b_FloatFromBits(jule::I32 _12318_bits);
inline jule::Bool _20a2acd61_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit);
inline jule::I32 _20a2ad12a_BitsizeOfFloat(jule::F64 _16119_x);
inline jule::I32 _20a2ad3e4_BitsizeOfInt(jule::I64 _17717_x);
inline jule::I32 _20a2ad6ad_BitsizeOfUint(jule::U64 _19718_x);
inline void _20a2ad856_UpdateTarget(void);
inline void _20a2ad9cc_init(void);
inline jule::I64 _20a2b263a_MinI(jule::Str _6113_k);
inline jule::I64 _20a2b2948_MaxI(jule::Str _7913_k);
inline jule::U64 _20a2b2c12_MaxU(jule::Str _9713_k);
inline jule::F64 _20a2b3053_Min(jule::Str _11512_k);
inline jule::F64 _20a2b32d9_Max(jule::Str _13312_k);
inline jule::Bool _20a2b3790_IsI16Greater(jule::Str _621_k);
inline jule::Bool _20a2b3a9d_IsI32Greater(jule::Str _1121_k);
inline jule::Bool _20a2b3d67_IsI64Greater(jule::Str _1621_k);
inline jule::Bool _20a2b41a8_IsU16Greater(jule::Str _2321_k);
inline jule::Bool _20a2b443e_IsU32Greater(jule::Str _2821_k);
inline jule::Bool _20a2b4708_IsU64Greater(jule::Str _3421_k);
inline jule::Bool _20a2b49c2_IsF32Greater(jule::Str _4117_k);
inline jule::Bool _20a2b4d9b_IsF64Greater(jule::Str _4617_k);
inline jule::Bool _20a2b5198_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2);
inline jule::Bool _20a2b630e_IsSigInt(jule::Str _2717_k);
inline jule::Bool _20a2b661c_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _20a2b68d6_IsInt(jule::Str _4610_k);
inline jule::Bool _20a2b6c27_IsFloat(jule::Str _5112_k);
inline jule::Bool _20a2b6ead_IsNum(jule::Str _5610_k);
inline jule::Bool _20a2b7277_IsSigNum(jule::Str _6113_k);
inline void _20a2c156c_lshiftUnsig(_20a2b7552_Const* _59021_c, _20a2b7552_Const* _59032_x);
inline void _20a2c189c_rshiftUnsig(_20a2b7552_Const* _59621_c, _20a2b7552_Const* _59632_x);
inline jule::Bool _1a875d6c6_IsUnaryOp(jule::U32 _33414_id);
inline jule::Bool _1a875d9d4_IsBinOp(jule::U32 _34412_id);
inline jule::Bool _1a875e0de_IsStr(jule::Str _36410_k);
inline jule::Bool _1a875e375_IsRawStr(jule::Str _36713_k);
inline jule::Bool _1a875e63e_IsRune(jule::Str _37111_k);
inline jule::Bool _1a8760024_IsFloat(jule::Str _38012_k);
inline jule::Bool _1a87602dd_IsNum(jule::Str _38810_k);
inline jule::Bool _1a8760871_IsIgnoreIdent(jule::Str _40318_ident);
inline jule::Bool _1a8760b3a_IsAnonIdent(jule::Str _40616_ident);
inline jule::Bool _1a87611bd_IsSpace(jule::I32 _41912_r);
inline jule::Bool _1a87616b8_IsLetter(jule::I32 _42913_r);
inline jule::Bool _1a8761b3b_IsDecimal(jule::U8 _44914_b);
inline jule::Bool _1a8761e05_IsBinary(jule::U8 _45213_b);
inline jule::Bool _1a87621be_IsOctal(jule::U8 _45512_b);
inline jule::Bool _1a8762488_IsHex(jule::U8 _45810_b);
inline jule::Bool _1a8762752_IsAssign(jule::U32 _47313_id);
inline jule::Bool _1a8762a1b_IsPostfixOp(jule::U32 _48516_id);
inline jule::Bool _1a8762cd5_IsAssignOp(jule::U32 _49515_id);
inline jule::Ptr<_1a8763720_File> _1a8764aea_NewFileSet(jule::Str _5715_path);
inline _224743e15_Log _1a8766624_makeErr(jule::I32 _10012_row, jule::I32 _10022_col, jule::Ptr<_1a8763720_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args);
inline jule::Bool _1a87669dc_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1a8766d61_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I32 _12232_i);
inline jule::Str _1a8767229_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I32 _15628_i);
inline jule::Str _1a876759d_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I32 _16036_i);
inline jule::Str _1a8767922_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I32 _18136_i);
inline jule::Str _1a8767c96_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I32 _18635_i);
inline jule::Str _1a876822a_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I32 _19131_i);
inline jule::Str _1a876846c_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1a8768736_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1a8768aaa_isFloatFmtE(jule::U8 _26116_b, jule::I32 _26125_i);
inline jule::Bool _1a8768e2e_isFloatFmtP(jule::U8 _26516_b, jule::I32 _26525_i);
inline jule::Bool _1a87692a3_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I32 _26938_i);
inline jule::Bool _1a8769627_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I32 _29033_i);
inline jule::Bool _1a876999b_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I32 _30334_i);
inline jule::Str _1a8769e96_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1a876a172_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1a876a4c4_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I32 _39328_n);
inline jule::Str _1a876a78d_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1a876aa57_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1a876ad21_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1a876b0da_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_224743e15_Log> _1a87710ce_Lex(jule::Ptr<_1a8763720_File> _80912_f, jule::I32 _80922_mode);
inline jule::Bool _1a8dbc53d_FindModuleFile(jule::Slice<jule::Ptr<_2232d7a65_DirEntry>>* _1320_dirents);
inline jule::Str _1a8dbc7e6_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_224743e15_Log> _1a8dbcab0_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1a8dbd40c_IsPub(jule::Str _910_ident);
inline jule::Bool _1a8e15c6d_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1a8e30c99_ToRune(jule::Str _2015_lit);
inline jule::Str _1a8e30ea8_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1a8e312e9_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1a8e31580_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1a8e31904_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i);
inline void _1a8e31c9a_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i);
inline jule::I32 _1a9060dda_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I32 _1141_i);
inline jule::Slice<jule::U8> _1a906121a_getFormatRange(jule::I32* _2724_i, jule::Slice<jule::U8>* _2737_bytes);
inline void _1a9061506_FmtByDefault(_2234c269a_StrBuilder* _4722_buf, jule::Any* _4740_arg);
inline void _1a9061924_applyFmtByDefault(_2234c269a_StrBuilder* _8627_buf, jule::I32* _8649_j, jule::Slice<jule::Any> _8657_args);
inline void _1a9061d42_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _2234c269a_StrBuilder* _9436_buf, jule::I32* _9458_j, jule::Slice<jule::Any> _9466_args);
inline jule::Slice<jule::U8> _1a90621b6_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args);
inline jule::Str _1a90641da_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Bool _1a8d4224e_parameterUsesGenerics(jule::Ptr<_1a8d3dde9_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1a8780770_GenericDecl>>* _38546_generics);
inline jule::Ptr<_1a8e8a1dd_TypeSymbol> _1a8d449c1_buildType(jule::Ptr<_1a8773565_TypeDecl> _9418_t);
inline jule::Ptr<_1a8e4ce3c_Value> _1a8d44cce_buildExpr(jule::Ptr<_1a8777899_Expr> _10318_expr);
inline jule::Ptr<_1a8e82229_TypeAlias> _1a8d45098_buildTypeAlias(jule::Ptr<_1a878a082_TypeAliasDecl> _11223_decl);
inline jule::Ptr<_1a8d24000_Field> _1a8d453d9_buildField(jule::Ptr<_1a8d213e8_FieldDecl> _12319_decl);
inline jule::Slice<jule::Ptr<_1a8d24000_Field>> _1a8d45670_buildFields(jule::Slice<jule::Ptr<_1a8d213e8_FieldDecl>>* _13421_decls);
inline jule::Ptr<_1a8d26e26_Struct> _1a8d45939_buildStruct(jule::Ptr<_1a8d21cde_StructDecl> _14220_decl);
inline jule::Ptr<_1a8d3a4bc_Param> _1a8d45c03_buildParam(jule::Ptr<_1a8783cc3_ParamDecl> _15419_decl);
inline jule::Slice<jule::Ptr<_1a8d3a4bc_Param>> _1a8d460cc_buildParams(jule::Slice<jule::Ptr<_1a8783cc3_ParamDecl>>* _16521_decls);
inline jule::Ptr<_1a8d39c3b_RetType> _1a8d4631e_buildRetType(jule::Ptr<_1a8776458_RetTypeDecl> _17321_decl);
inline jule::Ptr<_1a8d3be91_Fn> _1a8d465d8_buildFunc(jule::Ptr<_1a8785225_FnDecl> _18318_decl);
inline jule::Slice<jule::Ptr<_1a8d3be91_Fn>> _1a8d468a2_buildMethods(jule::Slice<jule::Ptr<_1a8785225_FnDecl>>* _20122_decls);
inline jule::Slice<jule::Ptr<_1a8e8a1dd_TypeSymbol>> _1a8d46b6b_buildTraitInherits(jule::Slice<jule::Ptr<_1a8773565_TypeDecl>>* _20928_inherits);
inline jule::Ptr<_1a8d5034a_Trait> _1a8d46e35_buildTrait(jule::Ptr<_1a8d2252b_TraitDecl> _21719_decl);
inline jule::Ptr<_1a8d51ed9_EnumItem> _1a8d471ee_buildEnumItem(jule::Ptr<_1a8d1e5d3_EnumItemDecl> _22722_decl);
inline jule::Slice<jule::Ptr<_1a8d51ed9_EnumItem>> _1a8d474b8_buildEnumItems(jule::Slice<jule::Ptr<_1a8d1e5d3_EnumItemDecl>>* _23524_decls);
inline jule::Ptr<_1a8d52a56_Enum> _1a8d479b3_buildEnum(jule::Ptr<_1a8d20194_EnumDecl> _24318_decl);
inline jule::Ptr<_1a8d53b89_TypeEnumItem> _1a8d47b8e_buildTypeEnumItem(jule::Ptr<_1a8d209be_TypeEnumItemDecl> _25326_decl);
inline jule::Slice<jule::Ptr<_1a8d53b89_TypeEnumItem>> _1a8d47e36_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a8d209be_TypeEnumItemDecl>>* _26128_decls);
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8d48200_buildTypeEnum(jule::Ptr<_1a8d2112e_TypeEnumDecl> _26922_decl);
inline jule::Ptr<_1a8de41ad_Var> _1a8d484b9_buildVar(jule::Ptr<_1a87863d0_VarDecl> _27817_decl);
inline jule::Slice<jule::Ptr<_1a8de41ad_Var>> _1a8d48783_buildVars(jule::Slice<jule::Ptr<_1a87863d0_VarDecl>> _29518_decls);
inline jule::Ptr<_1a8d789b1_Impl> _1a8d48a4c_buildImpl(jule::Ptr<_1a8d22b8b_Impl> _30318_decl);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d73e0c_buildAsComptimeMethodData(jule::Ptr<_1a8d3ee72_FnIns>* _142135_f);
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d7421a_findComptimePackage(jule::Ptr<_1a8dc1344_Sema>* _142929_s);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d7458e_buildComptimeTypeInfoData(jule::Ptr<_1a8dc1344_Sema>* _143535_s, jule::Ptr<_1a8e8301b_TypeKind>* _143550_t);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8d748d0_buildComptimeValue(jule::Ptr<_1a8e4bcb5_Data>* _144328_d);
inline jule::Str _1a8d7795a_toStrConstraints(jule::Ptr<_1a8e81635_InsGeneric> _14321_g);
inline jule::Bool _1a8d77d23_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a8e8301b_TypeKind>* _15434_g);
inline jule::Bool _1a8d780dc_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1a8d863c5_scopeChecker> _1a8d7abe4_newScopeCheckerBase(jule::Ptr<_1a8dc1344_Sema>* _5829_s, jule::Ptr<_1a8d3ee72_FnIns> _5843_owner);
inline jule::Ptr<_1a8d863c5_scopeChecker> _1a8d7b0ac_newScopeChecker(jule::Ptr<_1a8dc1344_Sema>* _6625_s, jule::Ptr<_1a8d3ee72_FnIns> _6639_owner);
inline jule::Ptr<_1a8d84d52_scopeLabel> _1a8d7b431_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1a8d863c5_scopeChecker> _7637_scope);
inline jule::Bool _1a8d7b7e9_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1a8d7de17_Scope>* _9034_sc);
inline jule::Bool _1a8d7bb6d_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1a8d7de17_Scope>* _10434_sc);
inline jule::I32 _1a8d7bee2_countMatchType(jule::Ptr<_1a8d8312a_Match>* _14720_m, jule::Ptr<_1a8e8301b_TypeKind>* _14732_t);
inline jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> _1a8d7c2ab_getDatasFromTupleData(jule::Ptr<_1a8e4bcb5_Data>* _17131_d);
inline jule::Bool _1a8d7cae7_checkMut(jule::Ptr<_1a8dc1344_Sema>* _20618_s, jule::Ptr<_1a8e4bcb5_Data>* _20629_left, jule::Ptr<_1a8e4bcb5_Data> _20646_right, jule::Ptr<_1a875ce89_Token> _20660_op);
inline jule::Bool _1a8d7d0d1_checkAssign(jule::Ptr<_1a8dc1344_Sema>* _22521_s, jule::Ptr<_1a8e4bcb5_Data>* _22536_left, jule::Ptr<_1a8e4bcb5_Data> _22553_right, jule::Ptr<_1a875ce89_Token> _22567_op);
inline jule::Bool _1a8d7d39a_isValidAstStForNextSt(jule::Any* _24731_n);
inline jule::Bool _1a8d7d664_isValidStForNextSt(jule::Any* _25824_st);
inline jule::Bool _1a8d7d92d_stmtIsDef(jule::Any* _27615_st);
inline jule::U32 _1a8d987d3_removeEqFromOp(jule::U32 _219719_op);
inline void _1a8d98a14_makeComptimeRange(jule::Ptr<_1a8e4bcb5_Data>* _222627_d);
inline jule::Bool _1a8d9900e_canComptimeMatch(jule::Ptr<_1a8e4bcb5_Data>* _224726_d);
inline jule::Ptr<_1a8de41ad_Var> _1a8d9d486_findVarInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded);
inline jule::Ptr<_1a8e82229_TypeAlias> _1a8d9d909_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded);
inline jule::Ptr<_1a8d26e26_Struct> _1a8d9dd38_findStructInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded);
inline jule::Ptr<_1a8d3be91_Fn> _1a8d9e2de_findFnInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded);
inline jule::Ptr<_1a8d5034a_Trait> _1a8d9e630_findTraitInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _9428_files, jule::Str* _9452_ident);
inline jule::Ptr<_1a8d52a56_Enum> _1a8d9e9a4_findEnumInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _10627_files, jule::Str* _10651_ident);
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8d9ed28_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _11831_files, jule::Str* _11855_ident);
inline jule::Any _1a8da0367_defByIdentPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded);
inline jule::Bool _1a8da63a1_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p);
inline jule::Bool _1a8dbd9d4_isValidModelForRef(jule::Any* _1328_m);
inline _224743e15_Log _1a8dbde8a_compilerErr(jule::Ptr<_1a875ce89_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args);
inline jule::Bool _1a8dbe30e_impIsLookupable(jule::Ptr<_1a8da0ea0_ImportInfo>* _5621_i, jule::Str* _5638_ident);
inline void _1a8dbe63e_appendRetVars(jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _6823_dest, jule::Ptr<_1a8d3ee72_FnIns>* _6842_f);
inline void _1a8dbe92a_appendParamVars(jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _9825_dest, jule::Ptr<_1a8d3ee72_FnIns>* _9844_f);
inline void _1a8dbec16_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>* _15834_dest, jule::Ptr<_1a8d3ee72_FnIns>* _15859_f);
inline jule::Ptr<_1a8e4694c_SymbolTable> _1a8dc008a_findFile(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _19618_files, jule::Ptr<_1a8763720_File>* _19642_handler);
inline void _1a8dc0541_pushSuggestion(_224743e15_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args);
inline void _1a8de2893_pushImplemented(jule::Ptr<_1a8d5034a_Trait> _288224_t, jule::Ptr<_1a8d26e26_Struct>* _288240_d);
inline void _1a8de2b7e_pushImplements(jule::Ptr<_1a8d26e26_Struct>* _290024_s, jule::Ptr<_1a8d5034a_Trait> _290040_t);
inline jule::Bool _1a8e3252b_traitHasReferenceReceiver(jule::Ptr<_1a8d5034a_Trait>* _2831_t);
inline jule::Bool _1a8e328d3_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1a8e4bcb5_Data>* _4333_d);
inline jule::Bool _1a8e32c57_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1a8e4bcb5_Data>* _4830_d);
inline jule::Bool _1a8e33120_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1a8e4bcb5_Data>* _7132_d);
inline jule::Bool _1a8e33494_intAssignable(jule::Str _10018_kind, jule::Ptr<_1a8e4bcb5_Data>* _10030_d);
inline void _1a8e3e8ac_checkMutRiskOfStructLit(jule::Ptr<_1a8dc1344_Sema>* _92033_s, jule::Ptr<_1a8d2edeb_StructLitExprModel>* _92044_m);
inline jule::Ptr<_1a8e8301b_TypeKind> _1a8e456e8_lenKind(void);
inline jule::Bool _1a8e45a4a_isGoodValueToInfer(jule::Ptr<_1a8e4bcb5_Data>* _142124_d);
inline jule::Ptr<_1a8772982_Directive> _1a8e7a4b9_findDirective(jule::Slice<jule::Ptr<_1a8772982_Directive>>* _425923_directives, jule::Str _425954_d);
inline jule::Any _1a8e7a882_findBuiltinsImport(jule::Str* _426824_ident, jule::Ptr<_1a8da0ea0_ImportInfo> _426836_imp);
inline void _1a8e7aab3_fitBitsize(jule::Ptr<_1a8e4bcb5_Data>* _427720_d);
inline void _1a8e7ade3_makeStructLitAlloc(jule::Ptr<_1a8e4bcb5_Data>* _430628_d, jule::Ptr<_1a8d2edeb_StructLitExprModel>* _430643_lit);
inline jule::Ptr<_1a8de41ad_Var> _1a8e7b267_buildErrorVar(jule::Ptr<_1a8d7de17_Scope>* _431723_s, jule::Ptr<_1a877b5c3_FnCallExpr>* _431739_fc);
inline jule::Any _1a8e7b5db_findBuiltinsSema(jule::Str* _433222_ident, jule::Ptr<_1a8dc1344_Sema> _433238_s);
inline jule::Bool _1a8e7b8a5_isOkForShifting(jule::Ptr<_1a8e4bcb5_Data>* _435725_d);
inline jule::Bool _1a8e7bc7e_isInstancedStruct(jule::Ptr<_1a8d29ba4_StructIns> _437422_s);
inline jule::Bool _1a8e7c07b_isPtrArithmeticCompatible(jule::Ptr<_1a8e4bcb5_Data>* _437835_l, jule::Ptr<_1a8e4bcb5_Data>* _437850_r);
inline void _1a8e7c422_applyCastKindModel(jule::Ptr<_1a8e4bcb5_Data>* _439328_d, jule::Ptr<_1a8e8301b_TypeKind>* _439343_t, jule::Ptr<_1a875ce89_Token>* _439362_token);
inline void _1a8e7c7b8_applyCastKind(jule::Ptr<_1a8e4bcb5_Data>* _440223_d, jule::Ptr<_1a8e8301b_TypeKind>* _440238_t, jule::Ptr<_1a875ce89_Token>* _440257_token);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e7c9c7_buildVoidData(void);
inline jule::Str _1a8e7cd4b_checkDataForIntegerIndexing(jule::Ptr<_1a8e4bcb5_Data>* _441337_d, jule::Ptr<_1a875ce89_Token>* _441352_token);
inline void _1a8e7d1e2_applyCastModelByEnum(jule::Ptr<_1a8e4bcb5_Data>* _443830_d, jule::Ptr<_1a8d52a56_Enum> _443844_e, jule::Ptr<_1a875ce89_Token>* _443859_token);
inline void _1a8e7d4cd_castConstByType(jule::Str* _444921_t, jule::Ptr<_1a8e4bcb5_Data>* _444934_d);
inline void _1a8e7d9ea_updateModelToGenericIns(jule::Any* _448333_m, jule::Ptr<_1a8d3ee72_FnIns>* _448352_f);
inline jule::Bool _1a8e7dc5e_pushSubIdentFromExpr(jule::Any _449429_expr, jule::Ptr<_1a8773e39_SubIdentTypeDecl>* _449450_t);
inline jule::Str _1a8e7e028_constoa(jule::Ptr<_20a2b7552_Const>* _451713_c);
inline jule::Ptr<_1a8e4bcb5_Data> _1a8e7e457_evalEnumStatic(jule::Ptr<_1a8d52a56_Enum>* _452824_enm, jule::Ptr<_1a8d51ed9_EnumItem>* _452841_item, jule::Ptr<_1a875ce89_Token>* _452863_token);
inline jule::Ptr<_1a8d2edeb_StructLitExprModel> _1a8e7e721_isLitBased(jule::Any* _454520_m);
inline void _1a8e7ea0c_makeImplicitDeref(jule::Ptr<_1a8e4bcb5_Data>* _456227_d, jule::Ptr<_1a875ce89_Token> _456241_baseToken);
inline void _1ac73aeda_updateRefer(jule::Ptr<_1a8d43151_ReferenceStack> _457323_ref, jule::Ptr<_1a8d3ee72_FnIns>* _457346_old, jule::Ptr<_1a8d3ee72_FnIns>* _457359_new);
inline void _1a8e8018e_makeVariadic(jule::Ptr<_1a8e4bcb5_Data>* _458122_d, jule::Ptr<_1a8e8301b_TypeKind> _458136_elem);
inline jule::Bool _1a8e805bd_isVarCaptured(jule::Ptr<_1a8d863c5_scopeChecker> _459518_r, jule::Ptr<_1a8d863c5_scopeChecker> _459540_s, jule::Ptr<_1a8de41ad_Var> _459558_v);
inline jule::Bool _1a8e9d773_kindUsesGenerics(jule::Ptr<_1a8e8301b_TypeKind>* _171626_k, jule::Slice<jule::Ptr<_1a8780770_GenericDecl>>* _171641_generics);
inline jule::Bool _1a8e9db3b_hasDirective(jule::Slice<jule::Ptr<_1a8772982_Directive>>* _172622_directives, jule::Str _172653_tag);
inline jule::Bool _1a8e9de05_canGetPtr(jule::Ptr<_1a8e4bcb5_Data>* _173519_d);
inline jule::Bool _1a8e9e246_isValidForSptrType(jule::Ptr<_1a8e8301b_TypeKind>* _174728_t);
inline jule::Bool _1a8e9e4cc_isValidForRef(jule::Ptr<_1a8e8301b_TypeKind>* _175623_t);
inline jule::Bool _1a8e9e796_isBuiltinStrConvertable(jule::Ptr<_1a8e8301b_TypeKind>* _175933_t);
inline jule::Str _1a8e9ea60_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _176327_tokens);
inline jule::Ptr<_1a8e8aae5_Prim> _1a8e9ee39_buildPrimType(jule::Str _178218_kind);
inline void _1a8ea0522_applyImplicitCast(jule::Ptr<_1a8e8301b_TypeKind>* _181027_dest, jule::Ptr<_1a8e4bcb5_Data>* _181049_d, jule::Ptr<_1a875ce89_Token>* _181064_token);
inline jule::Bool _1a8ea07db_validTypeForXof(jule::Ptr<_1a8e8301b_TypeKind>* _183825_t);
inline __jule_tuple_x_1a8e4694c_SymbolTable__jule_tuple_s_224743e15_Log _1a8ea38ee_buildSymbols(jule::Ptr<_1a87715a7_Ast>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1a8d49113_symbolBuilder> _1662_owner);
inline __jule_tuple_x_1a8da3dc6_Package__jule_tuple_s_224743e15_Log _1a8ea3d72_analyzePackage(jule::Slice<jule::Ptr<_1a87715a7_Ast>>* _3024_files, jule::Trait* _3044_importer, jule::I32* _3065_flags);
inline __jule_tuple_x_1a8da3dc6_Package__jule_tuple_s_224743e15_Log _1a8ea42a1_AnalyzePackage(jule::Slice<jule::Ptr<_1a87715a7_Ast>> _7423_files, jule::Trait _7442_importer, jule::I32 _7462_flags);
inline jule::Ptr<_1a8d3ee72_FnIns> _1a9064b7a_findBuiltinFunc(jule::Str* _2621_ident);
inline jule::Ptr<_1a8e82229_TypeAlias> _1a9064e88_primTypeAlias(jule::Ptr<_1a8e8301b_TypeKind>* _6623_k);
inline jule::Ptr<_1a8de41ad_Var> _1a906883d_findBuiltinVar(jule::Str* _9420_ident);
inline jule::Ptr<_1a8e82229_TypeAlias> _1a9068b7e_findBuiltinTypeAlias(jule::Str _14225_ident);
inline jule::Any _1a9068e15_findBuiltinDef(jule::Str* _19720_ident);
inline jule::Any _1a90691ce_findBuiltinDefStdDebug(jule::Str* _21328_ident);
inline jule::Any _1a9069498_findBuiltinDefStdMem(jule::Str* _22626_ident);
inline jule::Any _1a9069872_findBuiltinDefStdComptime(jule::Str* _24231_ident);
inline jule::Any _1a9069ab4_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident);
inline jule::Any _1a9069e38_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906a2ac_builtinCallerError(jule::Ptr<_1a8e4d9dc_Eval>* _30028_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _30043_fc);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906a6db_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _32226_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _32241_fc, jule::Ptr<_1a8e4bcb5_Data>* );
inline jule::Ptr<_1a8e4bcb5_Data> _1a906ab1a_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _34628_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _34643_fc, jule::Ptr<_1a8e4bcb5_Data>* _34665_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906b049_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _35826_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _35841_fc, jule::Ptr<_1a8e4bcb5_Data>* _35863_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906b478_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _42028_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _42043_fc, jule::Ptr<_1a8e4bcb5_Data>* );
inline jule::Ptr<_1a8e4bcb5_Data> _1a906bad8_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _44627_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _44642_fc, jule::Ptr<_1a8e4bcb5_Data>* _44664_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906be07_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _49729_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _49744_fc, jule::Ptr<_1a8e4bcb5_Data>* _49766_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906c3e1_callerCopySlice(jule::Ptr<_1a8e4bcb5_Data>* _60025_dest, jule::Ptr<_1a8e4d9dc_Eval>* _60043_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _60058_fc, jule::Ptr<_1a8e4bcb5_Data>* _60080_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906c820_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _63427_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _63442_fc, jule::Ptr<_1a8e4bcb5_Data>* _63464_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906cb94_callerLenSlice(jule::Ptr<_1a8e4bcb5_Data>* _65924_expr, jule::Ptr<_1a8e4bcb5_Data>* _65942_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906d018_callerLenMap(jule::Ptr<_1a8e4bcb5_Data>* _66722_expr, jule::Ptr<_1a8e4bcb5_Data>* _66740_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906d38c_callerLenArr(jule::Ptr<_1a8e4bcb5_Data>* _67522_expr, jule::Ptr<_1a8e4bcb5_Data>* _67540_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906d711_callerLenStr(jule::Ptr<_1a8e4bcb5_Data>* _68222_expr, jule::Ptr<_1a8e4bcb5_Data>* _68240_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906da85_callerLenComptime(jule::Ptr<_1a8e4bcb5_Data>* _69527_d, jule::I32 _69537_n);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906deb4_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _70226_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _70241_fc, jule::Ptr<_1a8e4bcb5_Data>* _70263_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906e338_callerCapSlice(jule::Ptr<_1a8e4bcb5_Data>* _74024_expr, jule::Ptr<_1a8e4bcb5_Data>* _74042_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906e767_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _74826_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _74841_fc, jule::Ptr<_1a8e4bcb5_Data>* _74863_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a906ec51_callerDeleteMap(jule::Ptr<_1a8e4d9dc_Eval>* _77125_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _77140_fc, jule::Ptr<_1a8e4bcb5_Data>* _77162_expr, jule::Ptr<_1a8e4bcb5_Data>* _77180_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a9070180_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _80029_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _80044_fc, jule::Ptr<_1a8e4bcb5_Data>* _80066_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a90705ae_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _82329_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _82344_fc, jule::Ptr<_1a8e4bcb5_Data>* );
inline jule::Ptr<_1a8e4bcb5_Data> _1a90709dd_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _86740_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _86755_fc, jule::Ptr<_1a8e4bcb5_Data>* );
inline jule::Ptr<_1a8e4bcb5_Data> _1a907115e_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _90341_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _90356_fc, jule::Ptr<_1a8e4bcb5_Data>* );
inline jule::Ptr<_1a8e4bcb5_Data> _1a907158d_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _92338_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _92353_fc, jule::Ptr<_1a8e4bcb5_Data>* );
inline jule::Ptr<_1a8e4bcb5_Data> _1a90719bc_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _93538_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _93553_fc, jule::Ptr<_1a8e4bcb5_Data>* );
inline jule::Ptr<_1a8e4bcb5_Data> _1a9071deb_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _94839_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _94854_fc, jule::Ptr<_1a8e4bcb5_Data>* );
inline jule::Ptr<_1a8e4bcb5_Data> _1a907232a_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _96143_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _96158_fc, jule::Ptr<_1a8e4bcb5_Data>* );
inline jule::Ptr<_1a8e4bcb5_Data> _1a9072759_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _102135_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _102150_fc, jule::Ptr<_1a8e4bcb5_Data>* );
inline jule::Ptr<_1a8e4bcb5_Data> _1a9072b88_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _104636_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _104651_fc, jule::Ptr<_1a8e4bcb5_Data>* );
inline jule::Ptr<_1a8e4bcb5_Data> _1a90730b7_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _107133_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _107148_fc, jule::Ptr<_1a8e4bcb5_Data>* );
inline jule::Ptr<_1a8e4bcb5_Data> _1a90734e6_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _109445_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _109460_fc, jule::Ptr<_1a8e4bcb5_Data>* );
inline jule::Ptr<_1a8e4bcb5_Data> _1a9073925_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _112144_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _112159_fc, jule::Ptr<_1a8e4bcb5_Data>* _112181_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a9073d54_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _117234_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _117249_fc, jule::Ptr<_1a8e4bcb5_Data>* _117271_d);
inline jule::Ptr<_1a8e4bcb5_Data> _1a9074283_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _118136_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _118151_fc, jule::Ptr<_1a8e4bcb5_Data>* _118173_d);
inline jule::Ptr<_1a98a065d_FileInfo> _1a98e410d_ParseFile(jule::Ptr<_1a8763720_File> _2318_f);
inline __jule_tuple_x_1a87715a7_Ast__jule_tuple_s_224743e15_Log _1a98e46a2_parseFileset(jule::Ptr<_1a8763720_File> _5521_f);
inline jule::Ptr<_1a8783586_ScopeTree> _1a98e5142_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1a98e54c7_isSt(jule::Ptr<_1a875ce89_Token> _499_current, jule::Ptr<_1a875ce89_Token> _4926_prev);
inline jule::Bool _1a98e584b_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _5526_tokens, jule::I32* _5545_i);
inline __jule_tuple_int__jule_tuple_bool _1a98e5c14_nextStPos(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _6815_tokens, jule::I32 _6833_start);
inline __jule_tuple_sx_1a875ce89_Token__jule_tuple_bool _1a98e6088_skipSt(jule::I32* _13016_i, jule::Slice<jule::Ptr<_1a875ce89_Token>> _13028_tokens);
inline jule::Slice<jule::Ptr<_1a98e63b8_stmt>> _1a98e6770_splitStmts(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _15120_tokens);
inline jule::Bool _20a09e45a_isTypeOp(jule::U32* _89314_id);
inline jule::Bool _20a09e768_isTypeRange(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _90021_tokens);
inline jule::Slice<jule::Ptr<_1a875ce89_Token>> _20a09ea32_getBlockExpr(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _93322_tokens);
inline __jule_tuple_sx_1a875ce89_Token__jule_tuple_sx_1a875ce89_Token _20a09edea_splitDelim(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _96520_tokens, jule::U32 _96538_delim);
inline jule::I32 _20a0a01b4_findLowestPrecOp(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _100422_tokens);
inline jule::Ptr<_1a87791b4_IdentExpr> _20a0a047d_buildIdentExpr(jule::Ptr<_1a875ce89_Token>* _106924_token);
inline __jule_tuple_sx_1a875ce89_Token__jule_tuple_int _20a0a0747_getRangeExprTokens(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _107728_tokens);
inline jule::Bool _20a0a0b21_isAnonFnHead(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _110018_tokens);
inline jule::Bool _20a0a1869_checkAssignTokens(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _1623_tokens);
inline _224743e15_Log _20a0a2a35_makeErr(jule::I32 _5112_row, jule::I32 _5122_col, jule::Ptr<_1a8763720_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args);
inline jule::Slice<jule::Ptr<_1a875ce89_Token>> _20a0a3063_range(jule::I32* _6915_i, jule::U32 _6923_open, jule::U32 _6938_close, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _6959_tokens);
inline __jule_tuple_sx_1a875ce89_Token__jule_tuple_sx_1a875ce89_Token _20a0a332c_rangeLast(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _9919_tokens);
inline __jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log _20a0a37d3_parts(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _13715_tokens, jule::U32 _13733_id, jule::Bool _13746_exprMust);
inline jule::U32 _20a0a3a69_getCloseOfBrace(jule::U32 _16720_left);
inline _224743e15_Log _20a0a3e98_compilerErr(jule::Ptr<_1a875ce89_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args);
inline void _20a0a433e_pushSuggestion(_224743e15_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args);
inline jule::Ptr<_1a8773565_TypeDecl> _1a98ec105_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1a917c2e2_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1a917709a_checkArch(jule::Str _2814_arg);
inline jule::Bool _1a9177353_isPassFileAnnotation(jule::Str _5029_p);
inline void _1a9192c20_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1a9192e95_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1a9193281_initVars(jule::Slice<jule::Str>* _5518_vars, _1a9192901_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1a99012a2_readBuff(jule::Str _3013_path);
inline _224743e15_Log _1a99015b0_flatCompilerErr(jule::Str _4120_text);
inline void _1a9905dcd_pushPasses(jule::Ptr<_1a8da3dc6_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes);
inline jule::Slice<jule::Str> _1a9906296_getAllUniquePasses(jule::Ptr<_1a8da3dc6_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1a8da0ea0_ImportInfo>> _12853_uses);
inline _1a9192901_CompileInfo _1a99064a5_buildCompileInfo(void);
inline void _1a9a6d71b_EliminateDefines(jule::Ptr<_1a990452a_IR>* _30526_ir);
inline jule::Ptr<_1a8772982_Directive> _1a9a6dad4_findDirective(jule::Slice<jule::Ptr<_1a8772982_Directive>>* _31123_directives, jule::Str _31154_tag);
inline jule::Bool _1a9a6de58_hasDirective(jule::Slice<jule::Ptr<_1a8772982_Directive>>* _32118_directives, jule::Str _32149_tag);
inline jule::Bool _1a9a6e321_isTraitMethod(jule::Ptr<_1a8d29ba4_StructIns>* _32623_owner, jule::Ptr<_1a8d3ee72_FnIns>* _32643_f);
inline void _1a9a73325_eliminateDeadCodeOfScope(jule::Ptr<_1a8d7de17_Scope> _24133_s);
inline void _1a9a7359a_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a8d3be91_Fn>>* _25433_funcs);
inline void _1a9a737cb_eliminateFunctionsScopePackage(jule::Ptr<_1a8da3dc6_Package>* _26240_pkg);
inline void _1a9a73a84_eliminateScopePackage(jule::Ptr<_1a8da3dc6_Package>* _26831_pkg);
inline void _1a9a73c82_EliminateScopes(jule::Ptr<_1a990452a_IR>* _27325_ir);
inline jule::Uintptr _1a907453b_typeData(jule::Any* _1714_m);
inline jule::Bool _1a9074904_equalConst(jule::Ptr<_20a2b7552_Const> _2115_l, jule::Ptr<_20a2b7552_Const> _2126_r);
inline jule::Bool _1a9074c78_equalCasting(jule::Ptr<_1a8d3077b_CastingExprModel> _4017_l, jule::Ptr<_1a8d3077b_CastingExprModel> _4039_r);
inline jule::Bool _1a9075141_equalUnary(jule::Ptr<_1a8d2e527_UnaryExprModel> _4715_l, jule::Ptr<_1a8d2e527_UnaryExprModel> _4735_r);
inline jule::Bool _1a90754b5_equalIndexing(jule::Ptr<_1a8d319ad_IndexingExprModel> _5418_l, jule::Ptr<_1a8d319ad_IndexingExprModel> _5441_r);
inline jule::Bool _1a9075839_equalBinary(jule::Ptr<_1a8d2e14d_BinaryExprModel> _5916_l, jule::Ptr<_1a8d2e14d_BinaryExprModel> _5937_r);
inline jule::Bool _1a9075bad_equalModels(jule::Any _7016_l, jule::Any _7030_r);
inline void _1a907b7c9_possibleNilRemove(jule::Ptr<_1a907a7ea_nils>* _7827_n, jule::Any _7837_m);
inline jule::Bool _1a907bb92_isGuaranteedNonNilExpr(jule::Ptr<_1a907a7ea_nils>* _8432_n, jule::Any _8442_m);
inline jule::Bool _1a907be5b_isNilValidType(jule::Ptr<_1a8e8301b_TypeKind> _9223_t);
inline jule::Uintptr _1a907c29c_getNilVar(jule::Any _9414_m);
inline jule::Bool _1a90831d7_isStdPackage(jule::Str* _67718_f, jule::Str _67726_p);
inline jule::Bool _1a90834e5_isConstantValidConditionalCase(jule::Ptr<_1a8d7e335_If>* _68136_i);
inline jule::Bool _1a90837ae_isUnreachableExpr(jule::Any* _69023_expr);
inline jule::Bool _1a9083b00_isConstantValidMatchCase(jule::Ptr<_1a8d83b53_Case>* _70530_case);
inline jule::Bool _1a9083d86_isUnreachableConditionalCase(jule::Ptr<_1a8d7e335_If>* _71434_i);
inline jule::Bool _1a9084150_isUnreachableMatchCase(jule::Ptr<_1a8d83b53_Case>* _71828_case);
inline jule::Bool _1a9084419_isForwarded(jule::Ptr<_1a8d7de17_Scope>* _72717_s);
inline __jule_tuple_bool__jule_tuple_u64 _1a908dc92_checkForBitShiftOpt(jule::Ptr<_1a8d2db53_OperandExprModel>* _77925_l, jule::Ptr<_1a8d2db53_OperandExprModel>* _77948_r);
inline jule::Bool _1a908e15a_areSameLvalueExprModel(jule::Any* _79628_l, jule::Any* _79643_r);
inline void _1a909116d_possibleDynamicRemove(jule::Ptr<_1a90900d4_dynamic>* _8031_d, jule::Any _8044_m);
inline jule::Bool _1a909147b_isDynamicValidType(jule::Ptr<_1a8e8301b_TypeKind> _8627_t);
inline jule::Ptr<_1a8e8301b_TypeKind> _1a90918aa_isTypeGuaranteedDynamicData(jule::Ptr<_1a90900d4_dynamic>* _8837_dy, jule::Ptr<_1a8e8301b_TypeKind> _8855_t, jule::Any _8873_m);
inline jule::Uintptr _1a9091beb_getDynamicVar(jule::Any _11318_m);
inline jule::Bool _1a9091e82_isAny(jule::Ptr<_1a8e8301b_TypeKind>* _13915_t);
inline jule::Bool _1a909598b_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I32 _1a9095d54_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr);
inline jule::Bool _1a90961c8_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2);
inline void _1a9096508_possibleBoundaryRemove(jule::Ptr<_1a9094924_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1a90967c2_isBoundaryRiskyType(jule::Ptr<_1a8e8301b_TypeKind> _13628_t);
inline jule::Bool _1a9096a8b_isBoundaryValidType(jule::Ptr<_1a8e8301b_TypeKind> _14128_t);
inline jule::Uintptr _1a9096d55_getBoundaryVar(jule::Any _14319_m);
inline void _1a9099dd0_PushOptLevel(jule::I32 _3217_level);
inline void _1a9a7d220_detectEnabled(void);
inline void _1a9aabade_Throw(jule::Str _910_msg);
inline jule::U64 _1aa2d6a99_unix(void);
inline jule::Bool _1aa215d3b_isCopyOptimizable(jule::Ptr<_1a8e4bcb5_Data>* _104823_expr);
inline jule::Bool _1aa216204_isIterCopyOptimizable(jule::Ptr<_1a8e4bcb5_Data>* _105927_expr, jule::Ptr<_1a8de41ad_Var>* _105941_v);
inline jule::Bool _1aa216633_captureVarHandling(jule::Ptr<_1aa2e0586_ObjectCoder>* _106628_oc, jule::Ptr<_1a8d31e64_AnonFnExprModel>* _106651_m, jule::Ptr<_1a8de41ad_Var>* _106677_v);
inline jule::Str _1aa227369_decomposeCommonEsq(jule::U8 _158223_b);
inline jule::Str _1aa227677_sbtoa(jule::U8 _160910_b);
inline void _1aa227963_cstrBytes(_2234c269a_StrBuilder* _162919_s, jule::Str _162934_ctx);
inline void _1aa227c93_cstrLit(_2234c269a_StrBuilder* _163517_s, jule::Str _163532_ctx);
inline void _1aa228139_ftoa(_2234c269a_StrBuilder* _164114_s, jule::F64 _164129_f, jule::I32 _164137_bitsize);
inline void _1aa228425_itoa(_2234c269a_StrBuilder* _165914_s, jule::I64 _165929_x);
inline void _1aa228711_utoa(_2234c269a_StrBuilder* _167614_s, jule::U64 _167629_x);
inline jule::Bool _1aa228ada_isForwarded(jule::Ptr<_1a8d7de17_Scope>* _169017_s);
inline jule::Bool _1aa228d2c_isExprComesFromBind(jule::Ptr<_1a8e4bcb5_Data>* _170525_d);
inline jule::Bool _1aa2290e6_isAny(jule::Ptr<_1a8e8301b_TypeKind>* _171715_t);
inline jule::Bool _1aa2293b0_isClosure(jule::Ptr<_1a8d31e64_AnonFnExprModel>* _172515_m);
inline void _1aa2ed71a_iterFiles(jule::Ptr<_1a8da3dc6_Package>* _141519_pkg, jule::Fn<void,jule::Ptr<_1a8e4694c_SymbolTable>*> _141534_f);
inline jule::Slice<jule::U8> _1aa2eda28_concatAllParts(jule::Slice<jule::Ptr<_1a875ce89_Token>> _142219_parts);
inline jule::Bool _1aa2edd9c_containsTraitMethod(jule::Ptr<_1a8d5034a_Trait>* _143829_t, jule::Str* _143841_ident);
inline void _1aa2ee1cc_pushMethodsFromInherit(jule::Ptr<_1a8d5034a_Trait>* _145032_dest, jule::Ptr<_1a8d5034a_Trait>* _145051_src);
inline void _1aa2ee4b8_pushMethodsFromInherits(jule::Ptr<_1a8d5034a_Trait>* _146133_dest, jule::Ptr<_1a8d5034a_Trait>* _146152_src);
inline jule::Bool _1aa2ee782_isOpMethod(jule::Ptr<_1a8d3be91_Fn>* _146916_m);
inline jule::Bool _1aa2eea4b_isHeadDecl(jule::Ptr<_1a8d3be91_Fn>* _148520_m);
inline jule::Ptr<_1a8772982_Directive> _1aa30d8a1_findDirective(jule::Slice<jule::Ptr<_1a8772982_Directive>>* _46123_directives, jule::Str _46154_tag);
inline jule::Bool _1aa30dc69_hasDirective(jule::Slice<jule::Ptr<_1a8772982_Directive>>* _47118_directives, jule::Str _47149_tag);
inline jule::Bool _1aa30e033_shouldInitialized(jule::Ptr<_1a8e8301b_TypeKind>* _47827_t);
inline void _2248123e0_printErrorMessage(jule::Str _3022_msg);
inline void _224812665_help(jule::Slice<jule::Str>* _3510_args);
inline void _224812896_version(jule::Slice<jule::Str>* _6313_args);
inline void _224812aa5_toolDistos(void);
inline void _224812c1a_toolDistarch(void);
inline void _224812e18_tool(jule::Slice<jule::Str>* _9410_args);
inline void _224813149_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _22481348a_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _2248136cc_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _224813875_showInfo(void);
void entry_point(void);
inline void _224814304_enableVtp(void);
inline void _2248144be_init(void);
inline void _1aa37a3ac_init(void);
inline jule::Ptr<_2232d8eea_File> _1aa37a676_openOutput(jule::Str* _4316_path);
inline void _1aa37a81e_clearObjects(void);
inline void _1aa37ab2c_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd);
inline jule::Bool _1aa37ade6_isCppSourceFile(jule::Str _9920_path);
inline void _1aa37b127_pushCompCmdClang(_2234c269a_StrBuilder* _10726_cmd);
inline void _1aa37b358_pushCompCmdGcc(_2234c269a_StrBuilder* _13324_cmd);
inline __jule_tuple_str__jule_tuple_str _1aa37b7dc_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a990452a_IR>* _15936_ir);
inline jule::Str _1aa37b974_getCompilePath(void);
inline void _1aa37bba5_applyTargetIndependentOptimizations(jule::Ptr<_1a990452a_IR>* _20545_ir);
inline void _1aa37bd4d_checkCompilerFlag(void);
inline void _1aa37c05c_checkTargetArch(jule::Str _22720_arch);
inline void _1aa37c28d_checkTargetOs(jule::Str _23518_os);
inline void _1aa37c4be_checkTargetFlag(jule::Str* _24321_target);
inline void _1aa37c700_checkOptFlag(jule::Str* _26618_opt);
inline void _1aa37cab8_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1aa37cc83_checkFlags(jule::Slice<jule::Str>* _29216_args);
inline void _1aa37ce92_setupSemaFlags(jule::I32* _33724_flags);
inline jule::Ptr<_1a990452a_IR> _1aa37d25b_buildIr(jule::Slice<jule::Str>* _34313_args);
inline void _1aa37d48c_compileCommand(jule::Slice<jule::Str>* _38324_args);


struct _1a8d57198_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a8d56890_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8de41ad_Var>* _2429_keyA, jule::Ptr<_1a8de41ad_Var>* _2446_keyB);
	void(*_1a8d56cad_step)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1a8de41ad_Var>* _2536_keyA, jule::Ptr<_1a8de41ad_Var>* _2553_keyB);
	jule::I32(*_1a8d57044_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1a8d9d08a_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a8d9bd69_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_path);
	jule::Str(*_1a8d9c100_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a8d9c441_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2522_id);
	jule::Ptr<_1a8da0ea0_ImportInfo>(*_1a8d9c782_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3128_path);
	__jule_tuple_sx_1a87715a7_Ast__jule_tuple_s_224743e15_Log(*_1a8d9cb7d_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod);
	void(*_1a8d9ce36_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8da0ea0_ImportInfo> _4131__0);
};

struct _1a8e82a65_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a8e825c0_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1a8e82911_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other);
};

struct _1a8ea2b0c_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1a8da0ea0_ImportInfo>(*_1a8ea0de6_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> _932_selector);
	jule::Ptr<_1a8de41ad_Var>(*_1a8ea12e2_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded);
	jule::Ptr<_1a8e82229_TypeAlias>(*_1a8ea16dd_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded);
	jule::Ptr<_1a8d26e26_Struct>(*_1a8ea1ad9_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded);
	jule::Ptr<_1a8d3be91_Fn>(*_1a8ea1ed5_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded);
	jule::Ptr<_1a8d5034a_Trait>(*_1a8ea2326_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident);
	jule::Ptr<_1a8d52a56_Enum>(*_1a8ea2667_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident);
	jule::Ptr<_1a8d54261_TypeEnum>(*_1a8ea29a8_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident);
};

struct _1aa373075_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1aa342440_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1aa342583_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1aa3427d6_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1aa372e21_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d59a4c_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d5cd08_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d6079a_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d6402e_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d655e6_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d70a52_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a9901a99_JuleImporter>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d29ba4_StructIns>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d3ee72_FnIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d5034a_Trait>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d52a56_Enum>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d54261_TypeEnum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d573b8_comptimeRange>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d57d8b_comptimeStructField>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d5b147_comptimeStatic>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d5e403_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d61d95_comptimeParam>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d66be1_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d6d203_comptimeValue>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d7214c_comptimeFile>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8e8301b_TypeKind>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8e8aae5_Prim>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8e8e621_Sptr>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8e900e4_Slc>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8e90bd8_Tuple>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8e91788_Map>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8e92415_Arr>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8e92dd8_Ptr>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa300e26_customType>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d863c5_scopeChecker>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8da0ea0_ImportInfo>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8da3dc6_Package>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8dc1344_Sema>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8e4694c_SymbolTable>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1add21602_Flag>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1add251a5_Flag>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1add28818_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1add2bec0_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1add30633_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8de41ad_Var>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d22b8b_Impl>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a878a082_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d21cde_StructDecl>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8785225_FnDecl>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d2252b_TraitDecl>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a87863d0_VarDecl>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d20194_EnumDecl>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d2112e_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20a2b7552_Const>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d817aa_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d7de17_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d3792b_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8e4bcb5_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d38c3a_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d366a5_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d34be2_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d350bb_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d3586e_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d35d25_BuiltinAssertCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d37552_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d37178_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d39037_FreeExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d3112d_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d7ea50_Conditional>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d7ed4c_InfIter>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8787854_WhileKind>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d80303_WhileIter>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a878825b_RangeKind>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d80c4e_RangeIter>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d810d4_ContSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d81b84_GotoSt>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d8205d_Postfix>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d82514_Assign>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d319ad_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d829ba_MultiAssign>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d8312a_Match>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d8434b_FallSt>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d814ad_BreakSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d846e2_RetSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8783586_ScopeTree>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8777899_Expr>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8789845_Conditional>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8787029_Iter>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8788a0e_ContSt>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8780b49_LabelSt>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8781023_GotoSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8782013_AssignSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a878ad52_MatchCase>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8781320_FallSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8788635_BreakSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a87867a9_RetSt>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877826d_UseExpr>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d3be91_Fn>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d26e26_Struct>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8e82229_TypeAlias>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8775831_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8774995_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877508e_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8774610_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877607e_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8774c92_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8773b70_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8779d30_VariadicExpr>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d31507_SliceExprModel>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877c0b8_FieldExprPair>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877d6c4_KeyValPair>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a87791b4_IdentExpr>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877848d_TupleExpr>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d34818_TupleExprModel>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877b5c3_FnCallExpr>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d38564_RuneExprModel>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d3451b_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877a9ac_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8773e39_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8779956_UnaryExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8773565_TypeDecl>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877a5d3_NsSelectionExpr>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8774313_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d32d77_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d3077b_CastingExprModel>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877de00_SliceExpr>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d2edeb_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d34142_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d3340a_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d33c9b_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d327e4_MapExprModel>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d31e64_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8777b63_RangeExpr>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8778834_LitExpr>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8778c0d_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877e85c_IndexingExpr>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877eebc_SlicingExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877a209_CastExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877c8e3_StructLit>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877cd99_BraceLit>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a877ae63_BinaryExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d2e527_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d2e14d_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d301e8_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d35495_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d362cb_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d369a2_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d36c9e_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d380d0_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d382bc_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d38861_IntegratedToStrExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a90767e6_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a90791cd_StrRuneIter>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a9077dbe_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a907892a_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a9078d04_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a9076b6a_SwapExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a9077044_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a907783b_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a90781bb_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a90794ca_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a90773b8_RefExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d2ea55_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a90797c7_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a9078551_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void _1a8d56890_ready_comptimeRangeKind_0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8de41ad_Var>* _2429_keyA, jule::Ptr<_1a8de41ad_Var>* _2446_keyB) {
	_1a8d5a685_ready(_self_.as<_1a8d59a4c_comptimeStructFields>().alloc, _2429_keyA, _2446_keyB);
}
inline void _1a8d56cad_step_comptimeRangeKind_0(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1a8de41ad_Var>* _2536_keyA, jule::Ptr<_1a8de41ad_Var>* _2553_keyB) {
	_1a8d5aaa3_step(_self_.as<_1a8d59a4c_comptimeStructFields>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I32 _1a8d57044_len_comptimeRangeKind_0(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d5ad39_len(_self_.as<_1a8d59a4c_comptimeStructFields>().alloc);
}
inline void _1a8d56890_ready_comptimeRangeKind_1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8de41ad_Var>* _2429_keyA, jule::Ptr<_1a8de41ad_Var>* _2446_keyB) {
	_1a8d5d941_ready(_self_.as<_1a8d5cd08_comptimeStatics>().alloc, _2429_keyA, _2446_keyB);
}
inline void _1a8d56cad_step_comptimeRangeKind_1(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1a8de41ad_Var>* _2536_keyA, jule::Ptr<_1a8de41ad_Var>* _2553_keyB) {
	_1a8d5dd5e_step(_self_.as<_1a8d5cd08_comptimeStatics>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I32 _1a8d57044_len_comptimeRangeKind_1(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d5e0e5_len(_self_.as<_1a8d5cd08_comptimeStatics>().alloc);
}
inline void _1a8d56890_ready_comptimeRangeKind_2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8de41ad_Var>* _2429_keyA, jule::Ptr<_1a8de41ad_Var>* _2446_keyB) {
	_1a8d613d3_ready(_self_.as<_1a8d6079a_comptimeEnumFields>().alloc, _2429_keyA, _2446_keyB);
}
inline void _1a8d56cad_step_comptimeRangeKind_2(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1a8de41ad_Var>* _2536_keyA, jule::Ptr<_1a8de41ad_Var>* _2553_keyB) {
	_1a8d61801_step(_self_.as<_1a8d6079a_comptimeEnumFields>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I32 _1a8d57044_len_comptimeRangeKind_2(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d61a87_len(_self_.as<_1a8d6079a_comptimeEnumFields>().alloc);
}
inline void _1a8d56890_ready_comptimeRangeKind_3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8de41ad_Var>* _2429_keyA, jule::Ptr<_1a8de41ad_Var>* _2446_keyB) {
	_1a8d64b34_ready(_self_.as<_1a8d6402e_comptimeParams>().alloc, _2429_keyA, _2446_keyB);
}
inline void _1a8d56cad_step_comptimeRangeKind_3(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1a8de41ad_Var>* _2536_keyA, jule::Ptr<_1a8de41ad_Var>* _2553_keyB) {
	_1a8d65052_step(_self_.as<_1a8d6402e_comptimeParams>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I32 _1a8d57044_len_comptimeRangeKind_3(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d652d8_len(_self_.as<_1a8d6402e_comptimeParams>().alloc);
}
inline void _1a8d56890_ready_comptimeRangeKind_4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8de41ad_Var>* _2429_keyA, jule::Ptr<_1a8de41ad_Var>* _2446_keyB) {
	_1a8d6622e_ready(_self_.as<_1a8d655e6_comptimeTypeInfos>().alloc, _2429_keyA, _2446_keyB);
}
inline void _1a8d56cad_step_comptimeRangeKind_4(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1a8de41ad_Var>* _2536_keyA, jule::Ptr<_1a8de41ad_Var>* _2553_keyB) {
	_1a8d6664c_step(_self_.as<_1a8d655e6_comptimeTypeInfos>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I32 _1a8d57044_len_comptimeRangeKind_4(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d668d3_len(_self_.as<_1a8d655e6_comptimeTypeInfos>().alloc);
}
inline void _1a8d56890_ready_comptimeRangeKind_5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8de41ad_Var>* _2429_keyA, jule::Ptr<_1a8de41ad_Var>* _2446_keyB) {
	_1a8d7168a_ready(_self_.as<_1a8d70a52_comptimeFiles>().alloc, _2429_keyA, _2446_keyB);
}
inline void _1a8d56cad_step_comptimeRangeKind_5(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1a8de41ad_Var>* _2536_keyA, jule::Ptr<_1a8de41ad_Var>* _2553_keyB) {
	_1a8d71aa8_step(_self_.as<_1a8d70a52_comptimeFiles>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I32 _1a8d57044_len_comptimeRangeKind_5(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d71d3e_len(_self_.as<_1a8d70a52_comptimeFiles>().alloc);
}
inline void _1a8d9bd69_SetModPath_Importer_0(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_path) {
	_1a990266b_SetModPath(_self_.as<_1a9901a99_JuleImporter>().alloc, _1729_path);
}
inline jule::Str _1a8d9c100_GetModPath_Importer_0(jule::Ptr<jule::Uintptr> _self_) {
	return _1a9902902_GetModPath(_self_.as<_1a9901a99_JuleImporter>().alloc);
}
inline jule::Str _1a8d9c441_ModById_Importer_0(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2522_id) {
	return _1a9902c43_ModById(_self_.as<_1a9901a99_JuleImporter>().alloc, _2522_id);
}
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d9c782_GetImport_Importer_0(jule::Ptr<jule::Uintptr> _self_, jule::Str _3128_path) {
	return _1a9903084_GetImport(_self_.as<_1a9901a99_JuleImporter>().alloc, _3128_path);
}
inline __jule_tuple_sx_1a87715a7_Ast__jule_tuple_s_224743e15_Log _1a8d9cb7d_ImportPackage_Importer_0(jule::Ptr<jule::Uintptr> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1a9903480_ImportPackage(_self_.as<_1a9901a99_JuleImporter>().alloc, _3732_path, _3743_update_mod);
}
inline void _1a8d9ce36_Imported_Importer_0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8da0ea0_ImportInfo> _4131__0) {
	_1a9903738_Imported(_self_.as<_1a9901a99_JuleImporter>().alloc, _4131__0);
}
inline jule::Str _1a8e825c0_Str_Kind_0(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d2a028_Str(_self_.as<_1a8d29ba4_StructIns>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d2a369_Equal(_self_.as<_1a8d29ba4_StructIns>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_1(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d402b3_Str(_self_.as<_1a8d3ee72_FnIns>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d40604_Equal(_self_.as<_1a8d3ee72_FnIns>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_2(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d50713_Str(_self_.as<_1a8d5034a_Trait>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d50a54_Equal(_self_.as<_1a8d5034a_Trait>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_3(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d52dca_Str(_self_.as<_1a8d52a56_Enum>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d5321b_Equal(_self_.as<_1a8d52a56_Enum>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_4(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d545a2_Str(_self_.as<_1a8d54261_TypeEnum>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d548e3_Equal(_self_.as<_1a8d54261_TypeEnum>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_5(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d5773c_Str(_self_.as<_1a8d573b8_comptimeRange>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d57a7d_Equal(_self_.as<_1a8d573b8_comptimeRange>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_6(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d58254_Str(_self_.as<_1a8d57d8b_comptimeStructField>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d58595_Equal(_self_.as<_1a8d57d8b_comptimeStructField>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_7(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d59dc1_Str(_self_.as<_1a8d59a4c_comptimeStructFields>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d5a212_Equal(_self_.as<_1a8d59a4c_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_8(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d5b4bb_Str(_self_.as<_1a8d5b147_comptimeStatic>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d5b80c_Equal(_self_.as<_1a8d5b147_comptimeStatic>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_9(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d5d17c_Str(_self_.as<_1a8d5cd08_comptimeStatics>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d5d4bd_Equal(_self_.as<_1a8d5cd08_comptimeStatics>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_10(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d5e887_Str(_self_.as<_1a8d5e403_comptimeEnumField>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_10(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d5ebc8_Equal(_self_.as<_1a8d5e403_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_11(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d60b1e_Str(_self_.as<_1a8d6079a_comptimeEnumFields>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_11(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d60e60_Equal(_self_.as<_1a8d6079a_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_12(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d62219_Str(_self_.as<_1a8d61d95_comptimeParam>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_12(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d6255a_Equal(_self_.as<_1a8d61d95_comptimeParam>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_13(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d64370_Str(_self_.as<_1a8d6402e_comptimeParams>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_13(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d646b1_Equal(_self_.as<_1a8d6402e_comptimeParams>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_14(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d6596a_Str(_self_.as<_1a8d655e6_comptimeTypeInfos>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_14(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d65cab_Equal(_self_.as<_1a8d655e6_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_15(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d67065_Str(_self_.as<_1a8d66be1_comptimeTypeInfo>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_15(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d673a6_Equal(_self_.as<_1a8d66be1_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_16(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d6d577_Str(_self_.as<_1a8d6d203_comptimeValue>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_16(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d6d8b8_Equal(_self_.as<_1a8d6d203_comptimeValue>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_17(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d70dc6_Str(_self_.as<_1a8d70a52_comptimeFiles>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_17(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d71217_Equal(_self_.as<_1a8d70a52_comptimeFiles>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_18(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8d72702_Str(_self_.as<_1a8d7214c_comptimeFile>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_18(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8d72a43_Equal(_self_.as<_1a8d7214c_comptimeFile>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_19(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8e833d4_Str(_self_.as<_1a8e8301b_TypeKind>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_19(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8e83725_Equal(_self_.as<_1a8e8301b_TypeKind>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_20(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8e8ae36_Str(_self_.as<_1a8e8aae5_Prim>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_20(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8e8b277_Equal(_self_.as<_1a8e8aae5_Prim>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_21(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8e8e995_Str(_self_.as<_1a8e8e621_Sptr>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_21(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8e8ecd6_Equal(_self_.as<_1a8e8e621_Sptr>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_22(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8e90578_Str(_self_.as<_1a8e900e4_Slc>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_22(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8e908b9_Equal(_self_.as<_1a8e900e4_Slc>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_23(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8e9105c_Str(_self_.as<_1a8e90bd8_Tuple>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_23(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8e9139d_Equal(_self_.as<_1a8e90bd8_Tuple>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_24(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8e91b0c_Str(_self_.as<_1a8e91788_Map>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_24(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8e91e4d_Equal(_self_.as<_1a8e91788_Map>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_25(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8e92789_Str(_self_.as<_1a8e92415_Arr>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_25(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8e92aca_Equal(_self_.as<_1a8e92415_Arr>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_26(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8e9325c_Str(_self_.as<_1a8e92dd8_Ptr>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_26(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1a8e9359d_Equal(_self_.as<_1a8e92dd8_Ptr>(), _5621_other);
}
inline jule::Str _1a8e825c0_Str_Kind_27(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3012bc_Str(_self_.as<_1aa300e26_customType>().alloc);
}
inline jule::Bool _1a8e82911_Equal_Kind_27(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _5621_other) {
	return _1aa30160d_Equal(_self_.as<_1aa300e26_customType>(), _5621_other);
}
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8ea0de6_SelectPackage_Lookup_0(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> _932_selector) {
	return _1a8d8686a_SelectPackage(_self_.as<_1a8d863c5_scopeChecker>().alloc, _932_selector);
}
inline jule::Ptr<_1a8de41ad_Var> _1a8ea12e2_FindVar_Lookup_0(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a8d86c66_FindVar(_self_.as<_1a8d863c5_scopeChecker>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a8e82229_TypeAlias> _1a8ea16dd_FindTypeAlias_Lookup_0(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a8d87162_FindTypeAlias(_self_.as<_1a8d863c5_scopeChecker>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a8d26e26_Struct> _1a8ea1ad9_FindStruct_Lookup_0(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a8d8755d_FindStruct(_self_.as<_1a8d863c5_scopeChecker>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a8d3be91_Fn> _1a8ea1ed5_FindFn_Lookup_0(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a8d87959_FindFn(_self_.as<_1a8d863c5_scopeChecker>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a8d5034a_Trait> _1a8ea2326_FindTrait_Lookup_0(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1a8d87c9a_FindTrait(_self_.as<_1a8d863c5_scopeChecker>().alloc, _2928_ident);
}
inline jule::Ptr<_1a8d52a56_Enum> _1a8ea2667_FindEnum_Lookup_0(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1a8d880db_FindEnum(_self_.as<_1a8d863c5_scopeChecker>().alloc, _3327_ident);
}
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8ea29a8_FindTypeEnum_Lookup_0(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1a8d8842c_FindTypeEnum(_self_.as<_1a8d863c5_scopeChecker>().alloc, _3731_ident);
}
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8ea0de6_SelectPackage_Lookup_1(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> _932_selector) {
	return _1a8da1489_SelectPackage(_self_.as<_1a8da0ea0_ImportInfo>().alloc, _932_selector);
}
inline jule::Ptr<_1a8de41ad_Var> _1a8ea12e2_FindVar_Lookup_1(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a8da1885_FindVar(_self_.as<_1a8da0ea0_ImportInfo>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a8e82229_TypeAlias> _1a8ea16dd_FindTypeAlias_Lookup_1(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a8da1c81_FindTypeAlias(_self_.as<_1a8da0ea0_ImportInfo>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a8d26e26_Struct> _1a8ea1ad9_FindStruct_Lookup_1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a8da217c_FindStruct(_self_.as<_1a8da0ea0_ImportInfo>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a8d3be91_Fn> _1a8ea1ed5_FindFn_Lookup_1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a8da2578_FindFn(_self_.as<_1a8da0ea0_ImportInfo>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a8d5034a_Trait> _1a8ea2326_FindTrait_Lookup_1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1a8da28b9_FindTrait(_self_.as<_1a8da0ea0_ImportInfo>().alloc, _2928_ident);
}
inline jule::Ptr<_1a8d52a56_Enum> _1a8ea2667_FindEnum_Lookup_1(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1a8da2c0a_FindEnum(_self_.as<_1a8da0ea0_ImportInfo>().alloc, _3327_ident);
}
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8ea29a8_FindTypeEnum_Lookup_1(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1a8da304b_FindTypeEnum(_self_.as<_1a8da0ea0_ImportInfo>().alloc, _3731_ident);
}
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8ea0de6_SelectPackage_Lookup_2(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> _932_selector) {
	return _1a8da436b_SelectPackage(_self_.as<_1a8da3dc6_Package>().alloc, _932_selector);
}
inline jule::Ptr<_1a8de41ad_Var> _1a8ea12e2_FindVar_Lookup_2(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a8da4767_FindVar(_self_.as<_1a8da3dc6_Package>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a8e82229_TypeAlias> _1a8ea16dd_FindTypeAlias_Lookup_2(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a8da4b63_FindTypeAlias(_self_.as<_1a8da3dc6_Package>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a8d26e26_Struct> _1a8ea1ad9_FindStruct_Lookup_2(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a8da505e_FindStruct(_self_.as<_1a8da3dc6_Package>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a8d3be91_Fn> _1a8ea1ed5_FindFn_Lookup_2(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a8da545a_FindFn(_self_.as<_1a8da3dc6_Package>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a8d5034a_Trait> _1a8ea2326_FindTrait_Lookup_2(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1a8da579b_FindTrait(_self_.as<_1a8da3dc6_Package>().alloc, _2928_ident);
}
inline jule::Ptr<_1a8d52a56_Enum> _1a8ea2667_FindEnum_Lookup_2(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1a8da5adc_FindEnum(_self_.as<_1a8da3dc6_Package>().alloc, _3327_ident);
}
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8ea29a8_FindTypeEnum_Lookup_2(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1a8da5e2d_FindTypeEnum(_self_.as<_1a8da3dc6_Package>().alloc, _3731_ident);
}
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8ea0de6_SelectPackage_Lookup_3(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> _932_selector) {
	return _1a8dc17d9_SelectPackage(_self_.as<_1a8dc1344_Sema>().alloc, _932_selector);
}
inline jule::Ptr<_1a8de41ad_Var> _1a8ea12e2_FindVar_Lookup_3(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a8dc1bd5_FindVar(_self_.as<_1a8dc1344_Sema>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a8e82229_TypeAlias> _1a8ea16dd_FindTypeAlias_Lookup_3(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a8dc20d1_FindTypeAlias(_self_.as<_1a8dc1344_Sema>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a8d26e26_Struct> _1a8ea1ad9_FindStruct_Lookup_3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a8dc24cc_FindStruct(_self_.as<_1a8dc1344_Sema>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a8d3be91_Fn> _1a8ea1ed5_FindFn_Lookup_3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a8dc28c8_FindFn(_self_.as<_1a8dc1344_Sema>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a8d5034a_Trait> _1a8ea2326_FindTrait_Lookup_3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1a8dc2c19_FindTrait(_self_.as<_1a8dc1344_Sema>().alloc, _2928_ident);
}
inline jule::Ptr<_1a8d52a56_Enum> _1a8ea2667_FindEnum_Lookup_3(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1a8dc305a_FindEnum(_self_.as<_1a8dc1344_Sema>().alloc, _3327_ident);
}
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8ea29a8_FindTypeEnum_Lookup_3(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1a8dc339b_FindTypeEnum(_self_.as<_1a8dc1344_Sema>().alloc, _3731_ident);
}
inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8ea0de6_SelectPackage_Lookup_4(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> _932_selector) {
	return _1a8e46e36_SelectPackage(_self_.as<_1a8e4694c_SymbolTable>().alloc, _932_selector);
}
inline jule::Ptr<_1a8de41ad_Var> _1a8ea12e2_FindVar_Lookup_4(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a8e47332_FindVar(_self_.as<_1a8e4694c_SymbolTable>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a8e82229_TypeAlias> _1a8ea16dd_FindTypeAlias_Lookup_4(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a8e4772d_FindTypeAlias(_self_.as<_1a8e4694c_SymbolTable>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a8d26e26_Struct> _1a8ea1ad9_FindStruct_Lookup_4(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a8e47b29_FindStruct(_self_.as<_1a8e4694c_SymbolTable>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a8d3be91_Fn> _1a8ea1ed5_FindFn_Lookup_4(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a8e48025_FindFn(_self_.as<_1a8e4694c_SymbolTable>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a8d5034a_Trait> _1a8ea2326_FindTrait_Lookup_4(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1a8e48366_FindTrait(_self_.as<_1a8e4694c_SymbolTable>().alloc, _2928_ident);
}
inline jule::Ptr<_1a8d52a56_Enum> _1a8ea2667_FindEnum_Lookup_4(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1a8e486a7_FindEnum(_self_.as<_1a8e4694c_SymbolTable>().alloc, _3327_ident);
}
inline jule::Ptr<_1a8d54261_TypeEnum> _1a8ea29a8_FindTypeEnum_Lookup_4(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1a8e489e8_FindTypeEnum(_self_.as<_1a8e4694c_SymbolTable>().alloc, _3731_ident);
}
inline jule::Str _1aa342440_Name_CommonFlag_0(jule::Ptr<jule::Uintptr> _self_) {
	return _1add21a20_Name(_self_.as<_1add21602_Flag>().alloc);
}
inline jule::I32 _1aa342583_Short_CommonFlag_0(jule::Ptr<jule::Uintptr> _self_) {
	return _1add21e2c_Short(_self_.as<_1add21602_Flag>().alloc);
}
inline jule::Str _1aa3427d6_What_CommonFlag_0(jule::Ptr<jule::Uintptr> _self_) {
	return _1add21b74_What(_self_.as<_1add21602_Flag>().alloc);
}
inline void _1aa372e21_Reset_CommonFlag_0(jule::Ptr<jule::Uintptr> _self_) {
	_1add21cc8_Reset(_self_.as<_1add21602_Flag>().alloc);
}
inline jule::Str _1aa342440_Name_CommonFlag_1(jule::Ptr<jule::Uintptr> _self_) {
	return _1add24d31_Name(_self_.as<_1add251a5_Flag>().alloc);
}
inline jule::I32 _1aa342583_Short_CommonFlag_1(jule::Ptr<jule::Uintptr> _self_) {
	return _1add25727_Short(_self_.as<_1add251a5_Flag>().alloc);
}
inline jule::Str _1aa3427d6_What_CommonFlag_1(jule::Ptr<jule::Uintptr> _self_) {
	return _1add25491_What(_self_.as<_1add251a5_Flag>().alloc);
}
inline void _1aa372e21_Reset_CommonFlag_1(jule::Ptr<jule::Uintptr> _self_) {
	_1add255d4_Reset(_self_.as<_1add251a5_Flag>().alloc);
}
inline jule::Str _1aa342440_Name_CommonFlag_2(jule::Ptr<jule::Uintptr> _self_) {
	return _1add28494_Name(_self_.as<_1add28818_Flag>().alloc);
}
inline jule::I32 _1aa342583_Short_CommonFlag_2(jule::Ptr<jule::Uintptr> _self_) {
	return _1add28d8a_Short(_self_.as<_1add28818_Flag>().alloc);
}
inline jule::Str _1aa3427d6_What_CommonFlag_2(jule::Ptr<jule::Uintptr> _self_) {
	return _1add28b04_What(_self_.as<_1add28818_Flag>().alloc);
}
inline void _1aa372e21_Reset_CommonFlag_2(jule::Ptr<jule::Uintptr> _self_) {
	_1add28c47_Reset(_self_.as<_1add28818_Flag>().alloc);
}
inline jule::Str _1aa342440_Name_CommonFlag_3(jule::Ptr<jule::Uintptr> _self_) {
	return _1add2bb4b_Name(_self_.as<_1add2bec0_Flag>().alloc);
}
inline jule::I32 _1aa342583_Short_CommonFlag_3(jule::Ptr<jule::Uintptr> _self_) {
	return _1add2c542_Short(_self_.as<_1add2bec0_Flag>().alloc);
}
inline jule::Str _1aa3427d6_What_CommonFlag_3(jule::Ptr<jule::Uintptr> _self_) {
	return _1add2c2ab_What(_self_.as<_1add2bec0_Flag>().alloc);
}
inline void _1aa372e21_Reset_CommonFlag_3(jule::Ptr<jule::Uintptr> _self_) {
	_1add2c3ee_Reset(_self_.as<_1add2bec0_Flag>().alloc);
}
inline jule::Str _1aa342440_Name_CommonFlag_4(jule::Ptr<jule::Uintptr> _self_) {
	return _1add302ae_Name(_self_.as<_1add30633_Flag>().alloc);
}
inline jule::I32 _1aa342583_Short_CommonFlag_4(jule::Ptr<jule::Uintptr> _self_) {
	return _1add30ba5_Short(_self_.as<_1add30633_Flag>().alloc);
}
inline jule::Str _1aa3427d6_What_CommonFlag_4(jule::Ptr<jule::Uintptr> _self_) {
	return _1add3091e_What(_self_.as<_1add30633_Flag>().alloc);
}
inline void _1aa372e21_Reset_CommonFlag_4(jule::Ptr<jule::Uintptr> _self_) {
	_1add30a62_Reset(_self_.as<_1add30633_Flag>().alloc);
}


static _1a8d57198_comptimeRangeKindMptrData _1a8d57198_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1a8d56890_ready=_1a8d56890_ready_comptimeRangeKind_0,
	._1a8d56cad_step=_1a8d56cad_step_comptimeRangeKind_0,
	._1a8d57044_len=_1a8d57044_len_comptimeRangeKind_0,
};static _1a8d57198_comptimeRangeKindMptrData _1a8d57198_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1a8d56890_ready=_1a8d56890_ready_comptimeRangeKind_1,
	._1a8d56cad_step=_1a8d56cad_step_comptimeRangeKind_1,
	._1a8d57044_len=_1a8d57044_len_comptimeRangeKind_1,
};static _1a8d57198_comptimeRangeKindMptrData _1a8d57198_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1a8d56890_ready=_1a8d56890_ready_comptimeRangeKind_2,
	._1a8d56cad_step=_1a8d56cad_step_comptimeRangeKind_2,
	._1a8d57044_len=_1a8d57044_len_comptimeRangeKind_2,
};static _1a8d57198_comptimeRangeKindMptrData _1a8d57198_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1a8d56890_ready=_1a8d56890_ready_comptimeRangeKind_3,
	._1a8d56cad_step=_1a8d56cad_step_comptimeRangeKind_3,
	._1a8d57044_len=_1a8d57044_len_comptimeRangeKind_3,
};static _1a8d57198_comptimeRangeKindMptrData _1a8d57198_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1a8d56890_ready=_1a8d56890_ready_comptimeRangeKind_4,
	._1a8d56cad_step=_1a8d56cad_step_comptimeRangeKind_4,
	._1a8d57044_len=_1a8d57044_len_comptimeRangeKind_4,
};static _1a8d57198_comptimeRangeKindMptrData _1a8d57198_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1a8d56890_ready=_1a8d56890_ready_comptimeRangeKind_5,
	._1a8d56cad_step=_1a8d56cad_step_comptimeRangeKind_5,
	._1a8d57044_len=_1a8d57044_len_comptimeRangeKind_5,
};static _1a8d9d08a_ImporterMptrData _1a8d9d08a_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator6,
	._1a8d9bd69_SetModPath=_1a8d9bd69_SetModPath_Importer_0,
	._1a8d9c100_GetModPath=_1a8d9c100_GetModPath_Importer_0,
	._1a8d9c441_ModById=_1a8d9c441_ModById_Importer_0,
	._1a8d9c782_GetImport=_1a8d9c782_GetImport_Importer_0,
	._1a8d9cb7d_ImportPackage=_1a8d9cb7d_ImportPackage_Importer_0,
	._1a8d9ce36_Imported=_1a8d9ce36_Imported_Importer_0,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_0,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_0,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator8,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_1,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_1,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator9,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_2,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_2,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator10,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_3,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_3,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator11,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_4,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_4,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator12,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_5,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_5,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator13,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_6,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_6,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_7,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_7,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator14,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_8,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_8,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_9,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_9,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator15,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_10,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_10,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_11,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_11,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator16,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_12,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_12,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_13,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_13,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_14,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_14,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator17,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_15,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_15,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator18,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_16,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_16,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_17,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_17,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator19,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_18,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_18,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator20,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_19,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_19,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_20,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_20,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_21,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_21,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_22,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_22,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_23,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_23,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_24,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_24,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_25,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_25,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_26,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_26,
};static _1a8e82a65_KindMptrData _1a8e82a65_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1a8e825c0_Str=_1a8e825c0_Str_Kind_27,
	._1a8e82911_Equal=_1a8e82911_Equal_Kind_27,
};static _1a8ea2b0c_LookupMptrData _1a8ea2b0c_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator29,
	._1a8ea0de6_SelectPackage=_1a8ea0de6_SelectPackage_Lookup_0,
	._1a8ea12e2_FindVar=_1a8ea12e2_FindVar_Lookup_0,
	._1a8ea16dd_FindTypeAlias=_1a8ea16dd_FindTypeAlias_Lookup_0,
	._1a8ea1ad9_FindStruct=_1a8ea1ad9_FindStruct_Lookup_0,
	._1a8ea1ed5_FindFn=_1a8ea1ed5_FindFn_Lookup_0,
	._1a8ea2326_FindTrait=_1a8ea2326_FindTrait_Lookup_0,
	._1a8ea2667_FindEnum=_1a8ea2667_FindEnum_Lookup_0,
	._1a8ea29a8_FindTypeEnum=_1a8ea29a8_FindTypeEnum_Lookup_0,
};static _1a8ea2b0c_LookupMptrData _1a8ea2b0c_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator30,
	._1a8ea0de6_SelectPackage=_1a8ea0de6_SelectPackage_Lookup_1,
	._1a8ea12e2_FindVar=_1a8ea12e2_FindVar_Lookup_1,
	._1a8ea16dd_FindTypeAlias=_1a8ea16dd_FindTypeAlias_Lookup_1,
	._1a8ea1ad9_FindStruct=_1a8ea1ad9_FindStruct_Lookup_1,
	._1a8ea1ed5_FindFn=_1a8ea1ed5_FindFn_Lookup_1,
	._1a8ea2326_FindTrait=_1a8ea2326_FindTrait_Lookup_1,
	._1a8ea2667_FindEnum=_1a8ea2667_FindEnum_Lookup_1,
	._1a8ea29a8_FindTypeEnum=_1a8ea29a8_FindTypeEnum_Lookup_1,
};static _1a8ea2b0c_LookupMptrData _1a8ea2b0c_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator31,
	._1a8ea0de6_SelectPackage=_1a8ea0de6_SelectPackage_Lookup_2,
	._1a8ea12e2_FindVar=_1a8ea12e2_FindVar_Lookup_2,
	._1a8ea16dd_FindTypeAlias=_1a8ea16dd_FindTypeAlias_Lookup_2,
	._1a8ea1ad9_FindStruct=_1a8ea1ad9_FindStruct_Lookup_2,
	._1a8ea1ed5_FindFn=_1a8ea1ed5_FindFn_Lookup_2,
	._1a8ea2326_FindTrait=_1a8ea2326_FindTrait_Lookup_2,
	._1a8ea2667_FindEnum=_1a8ea2667_FindEnum_Lookup_2,
	._1a8ea29a8_FindTypeEnum=_1a8ea29a8_FindTypeEnum_Lookup_2,
};static _1a8ea2b0c_LookupMptrData _1a8ea2b0c_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator32,
	._1a8ea0de6_SelectPackage=_1a8ea0de6_SelectPackage_Lookup_3,
	._1a8ea12e2_FindVar=_1a8ea12e2_FindVar_Lookup_3,
	._1a8ea16dd_FindTypeAlias=_1a8ea16dd_FindTypeAlias_Lookup_3,
	._1a8ea1ad9_FindStruct=_1a8ea1ad9_FindStruct_Lookup_3,
	._1a8ea1ed5_FindFn=_1a8ea1ed5_FindFn_Lookup_3,
	._1a8ea2326_FindTrait=_1a8ea2326_FindTrait_Lookup_3,
	._1a8ea2667_FindEnum=_1a8ea2667_FindEnum_Lookup_3,
	._1a8ea29a8_FindTypeEnum=_1a8ea29a8_FindTypeEnum_Lookup_3,
};static _1a8ea2b0c_LookupMptrData _1a8ea2b0c_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator33,
	._1a8ea0de6_SelectPackage=_1a8ea0de6_SelectPackage_Lookup_4,
	._1a8ea12e2_FindVar=_1a8ea12e2_FindVar_Lookup_4,
	._1a8ea16dd_FindTypeAlias=_1a8ea16dd_FindTypeAlias_Lookup_4,
	._1a8ea1ad9_FindStruct=_1a8ea1ad9_FindStruct_Lookup_4,
	._1a8ea1ed5_FindFn=_1a8ea1ed5_FindFn_Lookup_4,
	._1a8ea2326_FindTrait=_1a8ea2326_FindTrait_Lookup_4,
	._1a8ea2667_FindEnum=_1a8ea2667_FindEnum_Lookup_4,
	._1a8ea29a8_FindTypeEnum=_1a8ea29a8_FindTypeEnum_Lookup_4,
};static _1aa373075_CommonFlagMptrData _1aa373075_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator34,
	._1aa342440_Name=_1aa342440_Name_CommonFlag_0,
	._1aa342583_Short=_1aa342583_Short_CommonFlag_0,
	._1aa3427d6_What=_1aa3427d6_What_CommonFlag_0,
	._1aa372e21_Reset=_1aa372e21_Reset_CommonFlag_0,
};static _1aa373075_CommonFlagMptrData _1aa373075_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator35,
	._1aa342440_Name=_1aa342440_Name_CommonFlag_1,
	._1aa342583_Short=_1aa342583_Short_CommonFlag_1,
	._1aa3427d6_What=_1aa3427d6_What_CommonFlag_1,
	._1aa372e21_Reset=_1aa372e21_Reset_CommonFlag_1,
};static _1aa373075_CommonFlagMptrData _1aa373075_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator36,
	._1aa342440_Name=_1aa342440_Name_CommonFlag_2,
	._1aa342583_Short=_1aa342583_Short_CommonFlag_2,
	._1aa3427d6_What=_1aa3427d6_What_CommonFlag_2,
	._1aa372e21_Reset=_1aa372e21_Reset_CommonFlag_2,
};static _1aa373075_CommonFlagMptrData _1aa373075_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator37,
	._1aa342440_Name=_1aa342440_Name_CommonFlag_3,
	._1aa342583_Short=_1aa342583_Short_CommonFlag_3,
	._1aa3427d6_What=_1aa3427d6_What_CommonFlag_3,
	._1aa372e21_Reset=_1aa372e21_Reset_CommonFlag_3,
};static _1aa373075_CommonFlagMptrData _1aa373075_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator38,
	._1aa342440_Name=_1aa342440_Name_CommonFlag_4,
	._1aa342583_Short=_1aa342583_Short_CommonFlag_4,
	._1aa3427d6_What=_1aa3427d6_What_CommonFlag_4,
	._1aa372e21_Reset=_1aa372e21_Reset_CommonFlag_4,
};

jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator39, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator40, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator8, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1a8d3ee72_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator46, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1a8de41ad_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator7, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1a8d29ba4_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator9, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1a8d5034a_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator47, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1a8d22b8b_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator48, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1a878a082_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator49, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1a8d21cde_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator50, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1a8785225_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator51, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1a8d2252b_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator52, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1a87863d0_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator53, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1a8d20194_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator54, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1a8d2112e_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator55, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_20a2b7552_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator56, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1a8d817aa_Label> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator57, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1a8d7de17_Scope> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator58, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1a8d3792b_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator59, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1a8e4bcb5_Data> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator60, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1a8d38c3a_BackendEmitExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator61, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1a8d366a5_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator62, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1a8d34be2_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator63, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1a8d350bb_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator64, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1a8d3586e_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator65, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1a8d35d25_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator66, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1a8d37552_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator67, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1a8d37178_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator68, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1a8d39037_FreeExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator69, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1a8d3112d_FnCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator70, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1a8d7ea50_Conditional> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator71, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1a8d7ed4c_InfIter> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator72, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1a8787854_WhileKind> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator73, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1a8d80303_WhileIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator74, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1a878825b_RangeKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator75, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1a8d80c4e_RangeIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator76, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1a8d810d4_ContSt> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator77, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1a8d81b84_GotoSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator78, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1a8d8205d_Postfix> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator79, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1a8d82514_Assign> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator80, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1a8d319ad_IndexingExprModel> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator81, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1a8d829ba_MultiAssign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator82, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1a8d8312a_Match> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator83, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1a8d8434b_FallSt> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator84, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1a8d814ad_BreakSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator85, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1a8d846e2_RetSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator86, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1a8783586_ScopeTree> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator87, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1a8777899_Expr> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator88, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1a8789845_Conditional> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator89, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1a8787029_Iter> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator90, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1a8788a0e_ContSt> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator91, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1a8780b49_LabelSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator92, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1a8781023_GotoSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator93, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1a8782013_AssignSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator94, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1a878ad52_MatchCase> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator95, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1a8781320_FallSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator96, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1a8788635_BreakSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator97, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1a87867a9_RetSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator98, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1a877826d_UseExpr> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator99, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1a8d3be91_Fn> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator100, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1a8d26e26_Struct> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1a8e82229_TypeAlias> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator10, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1a8d52a56_Enum> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator11, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1a8d54261_TypeEnum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator102, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1a8775831_ArrTypeDecl> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator103, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1a8774995_SlcTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator104, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1a877508e_PtrTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator105, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1a8774610_SptrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator106, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1a877607e_MapTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator107, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1a8774c92_TupleTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator108, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1a8773b70_IdentTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator109, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1a8779d30_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator110, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1a8d31507_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator111, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1a877c0b8_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator112, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1a877d6c4_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator113, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1a87791b4_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator114, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1a877848d_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator115, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1a8d34818_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator116, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1a877b5c3_FnCallExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator117, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1a8d38564_RuneExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator20, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1a8e8301b_TypeKind> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator118, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1a8d3451b_ArrayExprModel> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator119, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1a877a9ac_SubIdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator120, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1a8773e39_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator121, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1a8779956_UnaryExpr> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator122, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1a8773565_TypeDecl> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator123, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1a877a5d3_NsSelectionExpr> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator124, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1a8774313_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator125, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1a8d32d77_SlicingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator126, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1a8d3077b_CastingExprModel> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator127, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1a877de00_SliceExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator128, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1a8d2edeb_StructLitExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator129, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1a8d34142_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator130, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1a8d3340a_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator131, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator132, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1a8d327e4_MapExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator133, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1a8d31e64_AnonFnExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator134, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1a8777b63_RangeExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator135, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1a8778834_LitExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator136, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1a8778c0d_UnsafeExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator137, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1a877e85c_IndexingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator138, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1a877eebc_SlicingExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator139, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1a877a209_CastExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator140, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1a877c8e3_StructLit> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator141, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1a877cd99_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator142, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1a877ae63_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator143, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1a8d2e527_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator144, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1a8d2e14d_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator145, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1a8d301e8_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator146, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1a8d35495_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator147, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1a8d362cb_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator148, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1a8d369a2_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator149, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1a8d36c9e_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator150, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1a8d380d0_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator151, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1a8d382bc_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator152, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1a8d38861_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator153, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1a90767e6_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator154, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1a90791cd_StrRuneIter> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator155, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1a9077dbe_MutSlicingExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator156, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1a907892a_PushToSliceExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator157, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1a9078d04_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator158, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1a9076b6a_SwapExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator159, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1a9077044_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator160, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1a907783b_StrCompExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator161, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1a90781bb_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator162, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1a90794ca_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator163, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1a90773b8_RefExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator164, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1a8d2ea55_StructArgExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator165, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1a90797c7_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator166, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1a9078551_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type133 && jule::ptr_equal(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator167, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator168, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator169, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator170, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
inline jule::Bool __jule_anon1abe84558(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3dde9_ParamIns> _24027_p1, jule::Ptr<_1a8d3dde9_ParamIns> _24042_p2);
struct __jule_anon_1abedb637_ctx{
	jule::Ptr<_1a8da0ea0_ImportInfo> *_49841_pkg;
};
static void __jule_anon_1abedb637_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abedb637_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1abedb637(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da0ea0_ImportInfo> _50045_spkg);
struct __jule_anon_1ac0456b3_ctx{
	jule::Ptr<_1a8d57d8b_comptimeStructField> _self_;
};
static void __jule_anon_1ac0456b3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac0456b3_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac0456b3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _8833_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _8848_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1ac04761b_ctx{
	jule::Ptr<_1a8d57d8b_comptimeStructField> _self_;
};
static void __jule_anon_1ac04761b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac04761b_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac04761b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _9533_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _9548_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1ac049574_ctx{
	jule::Ptr<_1a8d57d8b_comptimeStructField> _self_;
};
static void __jule_anon_1ac049574_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac049574_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac049574(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _10233_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _10248_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1ac05b2cd_ctx{
	jule::Ptr<_1a8d5b147_comptimeStatic> _self_;
};
static void __jule_anon_1ac05b2cd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac05b2cd_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac05b2cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _21133_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _21148_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1ac05d236_ctx{
	jule::Ptr<_1a8d5b147_comptimeStatic> _self_;
};
static void __jule_anon_1ac05d236_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac05d236_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac05d236(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _21833_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _21848_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1ac06018e_ctx{
	jule::Ptr<_1a8d5b147_comptimeStatic> _self_;
};
static void __jule_anon_1ac06018e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac06018e_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac06018e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _22533_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _22548_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1ac06beae_ctx{
	jule::Ptr<_1a8d5e403_comptimeEnumField> _self_;
};
static void __jule_anon_1ac06beae_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac06beae_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac06beae(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _31333_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _31348_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1ac081a2e_ctx{
	jule::Ptr<_1a8d61d95_comptimeParam> _self_;
};
static void __jule_anon_1ac081a2e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac081a2e_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac081a2e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _43533_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _43548_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1ac083987_ctx{
	jule::Ptr<_1a8d61d95_comptimeParam> _self_;
};
static void __jule_anon_1ac083987_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac083987_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac083987(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _44233_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _44248_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1ac0858e0_ctx{
	jule::Ptr<_1a8d61d95_comptimeParam> _self_;
};
static void __jule_anon_1ac0858e0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac0858e0_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac0858e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _44933_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _44948_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1ac087848_ctx{
	jule::Ptr<_1a8d61d95_comptimeParam> _self_;
};
static void __jule_anon_1ac087848_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac087848_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac087848(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _45633_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _45648_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1ac11a090_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ac11a090_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac11a090_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac11a090(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _99833_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _99848_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc4d2ab_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc4d2ab_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc4d2ab_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc4d2ab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _100533_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _100548_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc4ed07_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc4ed07_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc4ed07_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc4ed07(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _101233_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _101248_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc51765_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc51765_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc51765_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc51765(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _101933_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _101948_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc5359c_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc5359c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc5359c_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc5359c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _102633_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _102648_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc55505_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc55505_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc55505_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc55505(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _103333_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _103348_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc5745d_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc5745d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc5745d_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc5745d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _104033_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _104048_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc593b6_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc593b6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc593b6_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc593b6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _104733_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _104748_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc5b462_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc5b462_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc5b462_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc5b462(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _105433_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _105448_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc5d3ba_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc5d3ba_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc5d3ba_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc5d3ba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _106133_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _106148_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc60323_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc60323_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc60323_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc60323(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _106833_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _106848_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc6227b_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc6227b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc6227b_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc6227b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _107533_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _107548_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc641d4_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc641d4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc641d4_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc641d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _108233_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _108248_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc6613c_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc6613c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc6613c_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc6613c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _108933_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _108948_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc68095_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc68095_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc68095_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc68095(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _109633_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _109648_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc69eed_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc69eed_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc69eed_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc69eed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _110333_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _110348_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc6be56_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc6be56_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc6be56_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc6be56(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _111033_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _111048_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc6ddae_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc6ddae_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc6ddae_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc6ddae(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _111733_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _111748_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc70d17_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc70d17_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc70d17_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc70d17(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _112433_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _112448_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc72c70_ctx{
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_;
};
static void __jule_anon_1abc72c70_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc72c70_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc72c70(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _113133_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _113148_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc8d1ec_ctx{
	jule::Ptr<_1a8d6d203_comptimeValue> _self_;
};
static void __jule_anon_1abc8d1ec_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc8d1ec_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc8d1ec(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _124733_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _124748_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc90155_ctx{
	jule::Ptr<_1a8d6d203_comptimeValue> _self_;
};
static void __jule_anon_1abc90155_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc90155_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc90155(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _125433_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _125448_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc920ad_ctx{
	jule::Ptr<_1a8d6d203_comptimeValue> _self_;
};
static void __jule_anon_1abc920ad_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc920ad_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc920ad(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _126133_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _126148_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc94016_ctx{
	jule::Ptr<_1a8d6d203_comptimeValue> _self_;
};
static void __jule_anon_1abc94016_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc94016_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc94016(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _126833_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _126848_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc95e6e_ctx{
	jule::Ptr<_1a8d6d203_comptimeValue> _self_;
};
static void __jule_anon_1abc95e6e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc95e6e_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc95e6e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _127533_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _127548_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abc97dc7_ctx{
	jule::Ptr<_1a8d6d203_comptimeValue> _self_;
};
static void __jule_anon_1abc97dc7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc97dc7_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc97dc7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _128233_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _128248_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abcaa912_ctx{
	jule::Ptr<_1a8d7214c_comptimeFile> _self_;
};
static void __jule_anon_1abcaa912_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abcaa912_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abcaa912(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _139633_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _139648_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abcac86a_ctx{
	jule::Ptr<_1a8d7214c_comptimeFile> _self_;
};
static void __jule_anon_1abcac86a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abcac86a_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abcac86a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _140333_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _140348_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abcae7c3_ctx{
	jule::Ptr<_1a8d7214c_comptimeFile> _self_;
};
static void __jule_anon_1abcae7c3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abcae7c3_ctx>().dealloc(); }
inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abcae7c3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _141033_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _141048_fc, jule::Ptr<_1a8e4bcb5_Data>* );
struct __jule_anon_1abcba306_ctx{
	jule::Ptr<_1a8d7665c_constraintChecker> _self_;
};
static void __jule_anon_1abcba306_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abcba306_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1abcba306(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8dc1344_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>* _6439_generics);
struct __jule_anon_1ac3d67bd_ctx{
	jule::Ptr<_1a8d3ee72_FnIns> _110140_f;
	jule::Ptr<_1a8dc1344_Sema> _self_;
};
static void __jule_anon_1ac3d67bd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac3d67bd_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ac3d67bd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8dc1344_Sema>* _110543_sema, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>* _110561_generics);
struct __jule_anon_1ac7d47d1_ctx{
	jule::Ptr<_1a877a5d3_NsSelectionExpr> _182934_s;
	jule::Str _18309_path;
};
static void __jule_anon_1ac7d47d1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac7d47d1_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ac7d47d1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da0ea0_ImportInfo> _183149_imp);
inline jule::Str __jule_anon1acd485c5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _84725_def);
struct __jule_anon_1ab8db356_ctx{
	jule::Ptr<_1a8774313_NamespaceTypeDecl> _151739_decl;
	jule::Str _15189_path;
};
static void __jule_anon_1ab8db356_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab8db356_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ab8db356(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da0ea0_ImportInfo> _151949_imp);
struct __jule_anon_1ad6e502b_ctx{
	jule::Ptr<_1aa20da15_scopeCoder> _self_;
	jule::Bool _13613_ref;
};
static void __jule_anon_1ad6e502b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad6e502b_ctx>().dealloc(); }
inline void __jule_anon_1ad6e502b(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad6e89e1_ctx{
	jule::Ptr<_1aa20da15_scopeCoder> _self_;
	jule::Ptr<_1a8d80c4e_RangeIter> *_12839_it;
};
static void __jule_anon_1ad6e89e1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad6e89e1_ctx>().dealloc(); }
inline void __jule_anon_1ad6e89e1(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad707eb7_ctx{
	jule::Ptr<_1aa20da15_scopeCoder> _self_;
};
static void __jule_anon_1ad707eb7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad707eb7_ctx>().dealloc(); }
inline void __jule_anon_1ad707eb7(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad70a43c_ctx{
	jule::Ptr<_1aa20da15_scopeCoder> _self_;
};
static void __jule_anon_1ad70a43c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad70a43c_ctx>().dealloc(); }
inline void __jule_anon_1ad70a43c(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad884a28_ctx{
	jule::Ptr<_1aa20da15_scopeCoder> _self_;
};
static void __jule_anon_1ad884a28_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad884a28_ctx>().dealloc(); }
inline void __jule_anon_1ad884a28(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad9008b8_ctx{
	jule::Ptr<_1aa20da15_scopeCoder> _self_;
};
static void __jule_anon_1ad9008b8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad9008b8_ctx>().dealloc(); }
inline void __jule_anon_1ad9008b8(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad901bc7_ctx{
	jule::Ptr<_1aa20da15_scopeCoder> _self_;
	jule::Ptr<_1a8d8312a_Match> _63333_m;
};
static void __jule_anon_1ad901bc7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad901bc7_ctx>().dealloc(); }
inline void __jule_anon_1ad901bc7(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad972242_ctx{
	jule::Ptr<_1aa20da15_scopeCoder> _self_;
	jule::Ptr<_1a8d31e64_AnonFnExprModel> _100337_m;
};
static void __jule_anon_1ad972242_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad972242_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ad972242(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8de41ad_Var> _100976_v);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1add43657(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22565_s, jule::I32 _22573_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1add4b51c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23366_s, jule::I32 _23374_base);
struct __jule_anon_1adbad879_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
};
static void __jule_anon_1adbad879_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1adbad879_ctx>().dealloc(); }
inline void __jule_anon_1adbad879(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da3dc6_Package>* _55335_pkg);
struct __jule_anon_1adc0cd29_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
};
static void __jule_anon_1adc0cd29_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1adc0cd29_ctx>().dealloc(); }
inline void __jule_anon_1adc0cd29(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da3dc6_Package>* _91135_pkg);
struct __jule_anon_1adc1444b_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
};
static void __jule_anon_1adc1444b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1adc1444b_ctx>().dealloc(); }
inline void __jule_anon_1adc1444b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da3dc6_Package>* _93735_pkg);
struct __jule_anon_1ad664dd0_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
	jule::Ptr<_1a8de41ad_Var> _100727_v;
};
static void __jule_anon_1ad664dd0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad664dd0_ctx>().dealloc(); }
inline void __jule_anon_1ad664dd0(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad995d26_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
	jule::Ptr<_1a8de41ad_Var> _100727_v;
};
static void __jule_anon_1ad995d26_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad995d26_ctx>().dealloc(); }
inline void __jule_anon_1ad995d26(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad998499_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
};
static void __jule_anon_1ad998499_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad998499_ctx>().dealloc(); }
inline void __jule_anon_1ad998499(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad999621_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
	jule::Ptr<_1a8de41ad_Var> _100727_v;
};
static void __jule_anon_1ad999621_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad999621_ctx>().dealloc(); }
inline void __jule_anon_1ad999621(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1adca9007_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
};
static void __jule_anon_1adca9007_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1adca9007_ctx>().dealloc(); }
inline void __jule_anon_1adca9007(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da3dc6_Package>* _129735_pkg);
struct __jule_anon_1adcacadd_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
};
static void __jule_anon_1adcacadd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1adcacadd_ctx>().dealloc(); }
inline void __jule_anon_1adcacadd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4694c_SymbolTable>* _131332_file);
struct __jule_anon_1adcb32ec_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
};
static void __jule_anon_1adcb32ec_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1adcb32ec_ctx>().dealloc(); }
inline void __jule_anon_1adcb32ec(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da3dc6_Package>* _134235_pkg);
inline jule::Bool __jule_anon1ac038ab3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da0ea0_ImportInfo> _143028_pkg);
struct __jule_anon_1adbae79d_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
};
static void __jule_anon_1adbae79d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1adbae79d_ctx>().dealloc(); }
inline void __jule_anon_1adbae79d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4694c_SymbolTable>* _55436_file);
struct __jule_anon_1adc0dc2b_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
};
static void __jule_anon_1adc0dc2b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1adc0dc2b_ctx>().dealloc(); }
inline void __jule_anon_1adc0dc2b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4694c_SymbolTable>* _91236_file);
struct __jule_anon_1adc1534d_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
};
static void __jule_anon_1adc1534d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1adc1534d_ctx>().dealloc(); }
inline void __jule_anon_1adc1534d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4694c_SymbolTable>* _93836_file);
struct __jule_anon_1adca9e2b_ctx{
	jule::Ptr<_1aa2e0586_ObjectCoder> _self_;
};
static void __jule_anon_1adca9e2b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1adca9e2b_ctx>().dealloc(); }
inline void __jule_anon_1adca9e2b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4694c_SymbolTable>* _129836_file);
jule::Array<jule::Array<jule::Str,2>,5> _224812214_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1aa379b5e_OutDir = jule::Str::lit("dist", 4);
jule::Str _1aa379e4a_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1aa37a203_Out = jule::Str();
jule::Str _22eb8b550_Compiler = jule::Str();
jule::Str _22eb8b75e_CompilerPath = jule::Str();
jule::Str _22eb8b96d_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _22eb8bb7c_Shadowing = false;
jule::Bool _22eb8bd8b_Transpilation = false;
jule::Bool _22eb8c122_Test = false;
jule::Bool _22eb8c3ca_RC = true;
jule::Bool _22eb8c793_Safety = true;
jule::Bool _22eb8c9d5_Production = false;
jule::Uintptr _2232bec28_STDIN = _2232c0531_GetStdHandle(static_cast<jule::Uintptr>(4294967286LLU));
jule::Uintptr _2232beec0_STDOUT = _2232c0531_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));
jule::Uintptr _2232c02bc_STDERR = _2232c0531_GetStdHandle(static_cast<jule::Uintptr>(4294967284LLU));
jule::Array<jule::U8,256> _2233e27a7_first = jule::Array<jule::U8,256>({});
jule::Array<_2233e2d5c_acceptRange,16> _2233e3203_acceptRanges = jule::Array<_2233e2d5c_acceptRange,16>({_2233e2d5c_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_2233e2d5c_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_2233e2d5c_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_2233e2d5c_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_2233e2d5c_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_224651ad1_RangeTable> _2245d9b02__L = jule::new_ptr<_224651ad1_RangeTable>(_224651ad1_RangeTable{._field_R16=jule::Slice<_224651130_Range16>::make({_224651130_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_224651130_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_224651130_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_224651130_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_224651130_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_224651130_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_224651130_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_224651130_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_224651130_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_224651130_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_224651130_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_224651130_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_224651130_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_224651130_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_224651130_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_224651130_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_224651130_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_224651130_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_224651130_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_224651130_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_224651130_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_224651130_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_224651130_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_224651130_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_224651130_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_224651130_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_224651130_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_224651130_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_224651130_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_224651130_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_224651130_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_224651130_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_224651130_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_224651130_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_224651130_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_224651130_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_224651130_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_224651130_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_224651130_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_224651130_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_224651130_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_224651130_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_224651130_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_224651130_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_224651130_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_224651130_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_224651130_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_224651130_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_224651130_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_224651130_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_224651130_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_224651130_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_224651130_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_224651130_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_224651130_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_224651130_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_224651130_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_224651130_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_224651130_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_224651130_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22465165d_Range32>::make({_22465165d_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_22465165d_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_22465165d_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_22465165d_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_22465165d_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_22465165d_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_22465165d_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_22465165d_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_22465165d_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_22465165d_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_22465165d_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_22465165d_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_22465165d_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_22465165d_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_22465165d_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_22465165d_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_22465165d_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_22465165d_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_22465165d_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_22465165d_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_22465165d_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_22465165d_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_22465165d_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_22465165d_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_22465165d_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_22465165d_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_22465165d_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_22465165d_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_22465165d_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22465165d_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22465165d_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_22465165d_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22465165d_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_22465165d_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_22465165d_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_22465165d_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_22465165d_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_22465165d_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_22465165d_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_22465165d_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_22465165d_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_22465165d_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_22465165d_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_224651ad1_RangeTable> _2245daa15__LU = jule::new_ptr<_224651ad1_RangeTable>(_224651ad1_RangeTable{._field_R16=jule::Slice<_224651130_Range16>::make({_224651130_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_224651130_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_224651130_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_224651130_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_224651130_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_224651130_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_224651130_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_224651130_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_224651130_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_224651130_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_224651130_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_224651130_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_224651130_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_224651130_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_224651130_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_224651130_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_224651130_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22465165d_Range32>::make({_22465165d_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_22465165d_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22465165d_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22465165d_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22465165d_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22465165d_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_22465165d_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _22464a602__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _224735d08_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _2246a4095_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _224734b70_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _22480d573_PathStdlib = jule::Str();
jule::Str _22480d782_PathExec = jule::Str();
jule::Str _22480da29_PathWd = jule::Str();
jule::Str _22480dd26_PathApi = jule::Str();
jule::Str _22480e0ce_Os = jule::Str::lit("windows", 7);
jule::Str _22480e387_Arch = jule::Str::lit("i386", 4);
jule::Array<jule::U8,32> _20a24ba7a__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _20a24c11e__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_20a291471_floatInfo _20a29186c_f32info = _20a291471_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_20a291471_floatInfo _20a291b69_f64info = _20a291471_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _20a299644_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I32> _20a29b459_powtab = jule::Slice<jule::I32>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _20a29c01a_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _20a29c34a_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _20a2a05a1_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_20a2a4341_leftCheat> _20a2a4770_leftCheats = jule::Slice<_20a2a4341_leftCheat>::make({_20a2a4341_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_20a2a4341_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_20a2a4341_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_20a2a4341_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_20a2a4341_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_20a2a4341_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_20a2a4341_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_20a2a4341_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_20a2a4341_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_20a2a4341_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_20a2a4341_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_20a2a4341_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_20a2a4341_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_20a2a4341_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_20a2a4341_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_20a2a4341_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_20a2a4341_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_20a2a4341_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_20a2a4341_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_20a2a4341_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_20a2a4341_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_20a2a4341_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_20a2a4341_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_20a2a4341_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_20a2a4341_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_20a2a4341_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_20a2a4341_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_20a2a4341_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_20a2a4341_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_20a2a4341_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_20a2a4341_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_20a2a4341_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_20a2a4341_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_20a2a4341_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_20a2a4341_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_20a2a4341_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_20a2a4341_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_20a2a4341_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_20a2a4341_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_20a2a4341_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_20a2a4341_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_20a2a4341_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_20a2a4341_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_20a2a4341_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_20a2a4341_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_20a2a4341_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_20a2a4341_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_20a2a4341_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_20a2a4341_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_20a2a4341_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_20a2a4341_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_20a2a4341_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_20a2a4341_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_20a2a4341_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_20a2a4341_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_20a2a4341_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_20a2a4341_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_20a2a4341_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_20a2a4341_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_20a2a4341_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_20a2a4341_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I32 _20a2aa820_BitSize = 0LL;
jule::Str _20a2aab1c_SysInt = jule::Str();
jule::Str _20a2aadc5_SysUint = jule::Str();
jule::Array<jule::I32,5> _1a86b3708_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U32,6> _1a86b39e4_UnaryOps = jule::Array<jule::U32,6>({static_cast<jule::U32>(61LLU),static_cast<jule::U32>(60LLU),static_cast<jule::U32>(67LLU),static_cast<jule::U32>(68LLU),static_cast<jule::U32>(62LLU),static_cast<jule::U32>(65LLU)});
jule::Array<jule::U32,18> _1a8756d95_BinOps = jule::Array<jule::U32,18>({static_cast<jule::U32>(60LLU),static_cast<jule::U32>(61LLU),static_cast<jule::U32>(62LLU),static_cast<jule::U32>(63LLU),static_cast<jule::U32>(64LLU),static_cast<jule::U32>(65LLU),static_cast<jule::U32>(66LLU),static_cast<jule::U32>(67LLU),static_cast<jule::U32>(56LLU),static_cast<jule::U32>(57LLU),static_cast<jule::U32>(69LLU),static_cast<jule::U32>(70LLU),static_cast<jule::U32>(53LLU),static_cast<jule::U32>(52LLU),static_cast<jule::U32>(54LLU),static_cast<jule::U32>(55LLU),static_cast<jule::U32>(50LLU),static_cast<jule::U32>(51LLU)});
jule::Array<jule::U32,2> _1a875746c_PostfixOps = jule::Array<jule::U32,2>({static_cast<jule::U32>(58LLU),static_cast<jule::U32>(59LLU)});
jule::Array<jule::U32,11> _1a8757758_AssignOps = jule::Array<jule::U32,11>({static_cast<jule::U32>(71LLU),static_cast<jule::U32>(40LLU),static_cast<jule::U32>(41LLU),static_cast<jule::U32>(43LLU),static_cast<jule::U32>(42LLU),static_cast<jule::U32>(44LLU),static_cast<jule::U32>(46LLU),static_cast<jule::U32>(45LLU),static_cast<jule::U32>(49LLU),static_cast<jule::U32>(48LLU),static_cast<jule::U32>(47LLU)});
jule::Array<_1a8765876_kindPair,28> _1a8765ca5_keywords = jule::Array<_1a8765876_kindPair,28>({_1a8765876_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U32>(6LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U32>(2LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U32>(7LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U32>(9LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U32>(10LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U32>(11LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U32>(12LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U32>(13LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U32>(14LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U32>(16LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U32>(18LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U32>(20LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U32>(21LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U32>(22LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U32>(23LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U32>(24LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U32>(25LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U32>(26LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U32>(27LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U32>(28LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U32>(29LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U32>(30LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U32>(31LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U32>(32LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U32>(33LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U32>(34LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U32>(36LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U32>(37LLU)}});
jule::Array<_1a8765876_kindPair,46> _1a87660d5_basicOps = jule::Array<_1a8765876_kindPair,46>({_1a8765876_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U32>(19LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U32>(38LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U32>(8LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U32>(3LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U32>(5LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U32>(39LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U32>(17LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U32>(40LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U32>(41LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U32>(42LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U32>(43LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U32>(44LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U32>(45LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U32>(46LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U32>(47LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U32>(48LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U32>(49LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U32>(50LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U32>(51LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U32>(52LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U32>(53LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U32>(54LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U32>(55LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U32>(56LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U32>(57LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U32>(58LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U32>(59LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U32>(60LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U32>(61LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U32>(62LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U32>(63LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U32>(64LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U32>(65LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U32>(66LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U32>(67LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U32>(68LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U32>(69LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U32>(70LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U32>(71LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U32>(35LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U32>(72LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U32>(73LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U32>(76LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U32>(77LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U32>(74LLU)},_1a8765876_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U32>(75LLU)}});
jule::Slice<jule::Str> _1a8d75d21_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1a8e8301b_TypeKind> _1a9065296_primNil = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1a8e8301b_TypeKind> _1a9065593_primVoid = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a906584b_primAny = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("any", 3)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a9065b48_primStr = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("str", 3)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a9065e01_primBool = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("bool", 4)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a90661a9_primUintptr = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("uintptr", 7)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a9066462_primUint = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("uint", 4)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a906682a_primInt = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("int", 3)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a9066a6c_primI8 = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("i8", 2)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a9066d14_primI16 = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("i16", 3)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a90670bc_primI32 = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("i32", 3)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a9067375_primI64 = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("i64", 3)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a906762d_primU8 = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("u8", 2)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a90678d6_primU16 = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("u16", 3)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a9067b8e_primU32 = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("u32", 3)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a9068178_primU64 = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("u64", 3)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a90683ba_primF32 = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("f32", 3)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a8e8301b_TypeKind> _1a90685c9_primF64 = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType(jule::Str::lit("f64", 3)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
jule::Ptr<_1a909302c_data> _1a9092636_emptyData = jule::new_ptr<_1a909302c_data>();
jule::Bool _1a90975b4_Copy = false;
jule::Bool _1a90978b1_Deadcode = false;
jule::Bool _1a9097b69_Append = false;
jule::Bool _1a9097e66_Math = false;
jule::Bool _1a909821e_Access = false;
jule::Bool _1a90984c7_Inline = false;
jule::Bool _1a9098780_Ptr = false;
jule::Bool _1a9098b48_Cond = false;
jule::Bool _1a9098d8a_Str = false;
jule::Bool _1a9099132_Slice = false;
jule::Bool _1a90993da_Assign = false;
jule::Bool _1a9099693_Exceptional = false;
jule::Bool _1a909994b_Iter = false;
jule::Bool _1a9099c04_Dynamic = false;
jule::Bool _1a9a7ae54_exprEnabled = false;
jule::Bool _1a9a7b21d_scopeEnabled = false;
jule::Array<jule::U64,12> _1aa2d3744_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1aa20d2a6_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_1a8e8301b_TypeKind> _1aa2dd034_generalGCPtr = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8e8e621_Sptr>(_1a8e8e621_Sptr{._field_Elem=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8e8aae5_Prim>(_1a8e8aae5_Prim{._field_Kind=jule::Str::lit("uintptr", 7)}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)})}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data21)});
jule::Ptr<_224651ad1_RangeTable> _2245e7cb9_Upper = _2245daa15__LU;
jule::Ptr<_224651ad1_RangeTable> _2245e19e9_Letter = _2245d9b02__L;



std::ostream &operator<<(std::ostream &_Stream, _2233e2d5c_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _2234c269a_StrBuilder static__2234c2ac9_New(jule::I32 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _2234c269a_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _2234c2d82_Write(_2234c269a_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _2234c313a_WriteStr(_2234c269a_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_3027_s);;
}



inline void _2234c33e3_WriteByte(_2234c269a_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _2234c3932_Str(_2234c269a_StrBuilder* _self_) {
	jule::Str _5013_s = _2234c1e80_StrFromBytes((*(_self_))._field_buf);;
	_2234c3b30_Clear(_self_);
	return _5013_s;;
}



inline void _2234c3b30_Clear(_2234c269a_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I32 _2234c3db6_Len(_2234c269a_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _2234c43d3_Buf(_2234c269a_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _2234c468b_SetBuf(_2234c269a_StrBuilder* _self_, jule::Slice<jule::U8> _7736_buf) {
	(*(_self_))._field_buf=_7736_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _2234c269a_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _224651130_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22465165d_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _224651ad1_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _22469dda3_index(_22469d952_lazyBuff* _self_, jule::I32 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _22469e15b_append(_22469d952_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _22469e3e2_string(_22469d952_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _2234c1bb6_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _22469d952_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2232d7a65_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_2232d7a65_DirEntry>>> static__2246a168b_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_2232d7a65_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _169_utf16Path = _2232967b0_UTF16FromStr(_2246a01c3_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str::lit("*", 1)})));;
	WIN32_FIND_DATAW _1713_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _189_handle = _2232c427c_FindFirstFile((&(_169_utf16Path[0LL])), (&(_1713_data)));;
	if ((_189_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_2232d7a65_DirEntry>>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			jule::Ptr<_2232d7a65_DirEntry> _2317_entry = jule::new_ptr<_2232d7a65_DirEntry>(_2232d7a65_DirEntry{._field_Name=_223296d87_U16PtrToStr(((jule::U16*)(_1713_data.cFileName))), });;
			(*(_2317_entry))._field_Stat=({
				auto except = static__2246a24b1_Of(_2246a01c3_Join(jule::Slice<jule::Str>::make({_1520_path,(*_2317_entry.alloc)._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_2232d7a65_DirEntry>>>{.error=except.error};
				} jule::Ptr<_2232db12e_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_2232d7a65_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_2317_entry); };
			if ((_2232c4601_FindNextFile(_189_handle, (&(_1713_data))) == 0LL)) {
				goto _iter_end_1ab3655c7;
			};
		}
	_iter_next_1ab3655c7:;
	}
	_iter_end_1ab3655c7:;;
	_2232c48ba_FindClose(_189_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_2232d7a65_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__2246a18bc_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _449_utf16Path = _2232967b0_UTF16FromStr(_3922_path);;
	if ((!(_2232c1e7d_CreateDirectory((&(_449_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_2232d74b0_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__2246a1aed_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _549_utf16Path = _2232967b0_UTF16FromStr(_5322_path);;
	if ((!(_2232c2247_RemoveDirectory((&(_549_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_2232d74b0_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _2232d7ceb_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2232d8eea_File> static__2232d9418_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_2232d8eea_File>(_2232d8eea_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_2232d8eea_File>> static__2232d96d2_Create(jule::Str _5522_path) {
	return static__2233eda7c_Open(_5522_path, static_cast<jule::I32>(770LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__2232d999b_Read(jule::Str _6720_path) {
	jule::Ptr<_2232db12e_Status> _689_s = ({
		auto except = static__2246a24b1_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_2232db12e_Status>(nullptr);});
	});;
	if ((!(_2232db78e_IsReg(_689_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0)};
	};
	jule::I32 _7313_sz = static_cast<jule::I32>(_2232dba25_Size(_689_s));;
	if ((_7313_sz != static_cast<jule::I32>(_2232dba25_Size(_689_s)))) {
		_7313_sz=0LL;
	};
	if ((_7313_sz < 512LLU)) {
		_7313_sz=512LLU;
	};
	jule::Ptr<_2232d8eea_File> _8613_f = ({
		auto except = static__2233eda7c_Open(_6720_path, static_cast<jule::I32>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_2232d8eea_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _8713_buf = jule::Slice<jule::U8>::alloc(_7313_sz, _7313_sz, 0);;
	jule::I32 _8813_n = 0LL;;
	while ((_8813_n < _7313_sz)) {
		{
			jule::I32 _9013_rn = ({
				auto except = _2233ee473_Read(_8613_f.ptr(), _8713_buf.slice(_8813_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_9013_rn == 0LL)) {
				goto _iter_end_1ab36c03a;
			};
			_8813_n+=_9013_rn;
		}
	_iter_next_1ab36c03a:;
	}
	_iter_end_1ab36c03a:;;
	({
		auto except = _2232da57e_Close(_8613_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_8713_buf.slice(0LL, _8813_n)};;
}



inline jule::VoidExceptional static__2232d9d42_Write(jule::Str _10521_path, jule::Slice<jule::U8> _10532_data, jule::I32 _10546_perm) {
	jule::Ptr<_2232d8eea_File> _10613_f = ({
		auto except = static__2233eda7c_Open(_10521_path, static_cast<jule::I32>(769LL), _10546_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_2232d8eea_File>(nullptr);});
	});;
	jule::I32 _10713_n = 0LL;;
	while ((_10713_n < _10532_data.len())) {
		{
			_10713_n+=({
				auto except = _2233ee132_Write(_10613_f.ptr(), _10532_data.slice(_10713_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1ab371d86:;
	}
	_iter_end_1ab371d86:;;
	return _2232da57e_Close(_10613_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _2232da57e_Close(_2232d8eea_File* _self_) {
	if ((_2232c6d73_Close(static_cast<jule::I32>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_2232d74b0_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_2232d8eea_File>> static__2233eda7c_Open(jule::Str _2220_path, jule::I32 _2231_flag, jule::I32 _2244_mode) {
	jule::Slice<jule::U16> _239_utf16Path = _2232967b0_UTF16FromStr(_2220_path);;
	jule::I32 _249_handle = _2232c109d_Wopen((&(_239_utf16Path[0LL])), _2231_flag, _2244_mode);;
	if ((_249_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2232d8eea_File>>{.error=jule::Any(_2232d74b0_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_2232d8eea_File>>{.result=static__2232d9418_New(static_cast<jule::Uintptr>(_249_handle))};;
}



inline jule::VoidExceptional static__2233edcad_Remove(jule::Str _3522_path) {
	jule::Slice<jule::U16> _369_utf16Path = _2232967b0_UTF16FromStr(_3522_path);;
	if ((!(_2232c1bb4_DeleteFile((&(_369_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_2232d74b0_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _2233ee132_Write(_2232d8eea_File* _self_, jule::Slice<jule::U8> _5024_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_5024_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	if (_2233ee7e7_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5613_utf16Buf = _2232967b0_UTF16FromStr(static_cast<jule::Str>(_5024_buf));;
		jule::Bool _5713_ok = _2232c3710_WriteConsole((*(_self_))._field_handle, (&(_5613_utf16Buf[0LL])), _5613_utf16Buf.len(), &(__jule_func_result), nullptr);;
		if ((!(_5713_ok))) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_2232d74b0_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_2233ec916_HandleRW(&(_5024_buf));
	__jule_func_result=_2232c722a_Write(static_cast<jule::I32>((*(_self_))._field_handle), (&(_5024_buf[0LL])), static_cast<jule::U32>(_5024_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_2232d74b0_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _2233ee473_Read(_2232d8eea_File* _self_, jule::Slice<jule::U8> _8127_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_8127_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	if (_2233ee7e7_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8717_codepage = jule::Slice<jule::U16>::alloc(_8127_buf.len(), _8127_buf.len(), 0);;
		jule::Bool _8813_ok = _2232c3be9_ReadConsole((*(_self_))._field_handle, (&(_8717_codepage[0LL])), _8127_buf.len(), &(__jule_func_result));;
		if ((!(_8813_ok))) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_2232d74b0_getLastFsError(), &__jule_any_type0)};
		};
		jule::Slice<jule::I32> _9313_runes = _2232961d8_Decode(_8717_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9313_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab37dbd9:;
			if (it != expr_end) {
				jule::I32 *_9520_r = it;
				{
					jule::I32 _9617_size = _2233e4699_RuneLen((*(_9520_r)));;
					if (((__jule_func_result + _9617_size) > _8127_buf.len())) {
						goto _iter_end_1ab37dbd9;
					};
					_2233e4b2d_EncodeRune(_8127_buf.slice(__jule_func_result), (*(_9520_r)));
					__jule_func_result+=_9617_size;
				}
				_iter_next_1ab37dbd9:;
				++it;
				goto _iter_begin_1ab37dbd9;
			}
			_iter_end_1ab37dbd9:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_2233ec916_HandleRW(&(_8127_buf));
	__jule_func_result=_2232c6999_Read(static_cast<jule::I32>((*(_self_))._field_handle), (&(_8127_buf[0LL])), static_cast<jule::U32>(_8127_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_2232d74b0_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}





std::ostream &operator<<(std::ostream &_Stream, _2232d8eea_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2232db508_IsDir(_2232db12e_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _2232db78e_IsReg(_2232db12e_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _2232dba25_Size(_2232db12e_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_2232db12e_Status>> static__2246a24b1_Of(jule::Str _1218_path) {
	if ((_1218_path).empty()) {
		return jule::Exceptional<jule::Ptr<_2232db12e_Status>>{.error=jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _169_utf16Path = _2232967b0_UTF16FromStr(_1218_path);;
	struct _stat _1713_handle = (struct _stat){};;
	jule::I32 _189_code = _2232c0b6e_Wstat((&(_169_utf16Path[0LL])), (&(_1713_handle)));;
	if ((_189_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2232db12e_Status>>{.error=jule::Any(_2232d74b0_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_2232db12e_Status> _2213_stat = jule::new_ptr<_2232db12e_Status>();;
	(*_2213_stat.alloc)._field_size=_1713_handle.st_size;
	if (((_1713_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_2213_stat.alloc)._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_1713_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_2213_stat.alloc)._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_2232db12e_Status>>{.result=_2213_stat};;
}





std::ostream &operator<<(std::ostream &_Stream, _2232db12e_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22480a196_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _224743e15_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _20a291471_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _20a2920ed_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _20a2a4341_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20a29b789_set(_20a2a4d58_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1ab80358c:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1ab80369c:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1ab803504:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1ab8050c7:;
					{
						goto _iter_next_1ab804978;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1ab805171:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1ab804978;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1ab8051d7:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1ab804978;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1ab804978;
					}
				}
				_match_end_1ab804ea6:;
			};
			goto _iter_end_1ab804978;
		}
	_iter_next_1ab804978:;
	}
	_iter_end_1ab804978:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_20a296cb2_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1ab80a52d;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=(((_31217_e * 10LL) + static_cast<jule::I32>(_23822_s[_23913_i])) - '0');
				};
			}
		_iter_next_1ab80a52d:;
		}
		_iter_end_1ab80a52d:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _20a29baca_floatBits(_20a2a4d58_decimal* _self_, _20a291471_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1ab81ae23;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1ab819a26;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1ab81ae23;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _20a29b459_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_20a29b459_powtab[(*(_self_))._field_dp];
			};
			_20a2a54b8_shift(_self_, (-(_35917_n)));
			_33313_exp+=_35917_n;
		}
	_iter_next_1ab811c1b:;
	}
	_iter_end_1ab811c1b:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _20a29b459_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_20a29b459_powtab[(-((*(_self_))._field_dp))];
			};
			_20a2a54b8_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1ab812612:;
	}
	_iter_end_1ab812612:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I32 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_20a2a54b8_shift(_self_, (-(_38613_n)));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1ab819a26;
	};
	_20a2a54b8_shift(_self_, static_cast<jule::I32>((1LL + (*(_33229_flt))._field_mantbits)));
	_33413_mant=_20a2a6068_roundedInteger(_self_);
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1ab819a26;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1ab81ae23;
	_julec_label_1ab819a26:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I32>((((static_cast<jule::U32>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U32>((*(_33229_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1ab81ae23:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _20a2a5210_assign(_20a2a4d58_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I32 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>((_15129_v + '0'));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1ab81dd5a:;
	}
	_iter_end_1ab81dd5a:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1ab81e9a4:;
	}
	_iter_end_1ab81e9a4:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_20a2a66a6_trim(_self_);
}



inline void _20a2a54b8_shift(_20a2a4d58_decimal* _self_, jule::I32 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1ab82191d:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1ab8219b7:;
			{
				while ((_17628_k > 60LL)) {
					{
						_20a2a7201_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1ab822589:;
				}
				_iter_end_1ab822589:;;
				_20a2a7201_leftShift(_self_, static_cast<jule::U32>(_17628_k));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1ab821a2d:;
			{
				while ((_17628_k < -60LL)) {
					{
						_20a2a6992_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1ab8224ac:;
				}
				_iter_end_1ab8224ac:;;
				_20a2a6992_rightShift(_self_, static_cast<jule::U32>((-(_17628_k))));
			}
		}
		_match_end_1ab8217b9:;
	};
}



inline void _20a2a5771_roundDown(_20a2a4d58_decimal* _self_, jule::I32 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_20a2a66a6_trim(_self_);
}



inline void _20a2a5a29_roundUp(_20a2a4d58_decimal* _self_, jule::I32 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=(_21113_i + 1LL);
				return;;
			};
		}
	_iter_next_1ab9863ac:;
	}
	_iter_end_1ab9863ac:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _20a2a5cd2_round(_20a2a4d58_decimal* _self_, jule::I32 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_20a2a7575_shouldRoundUp(_self_, _23224_nd)) {
		_20a2a5a29_roundUp(_self_, _23224_nd);
	} else {
		_20a2a5771_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _20a2a6068_roundedInteger(_20a2a4d58_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0')));
		}
	_iter_next_1ab98926c:;
	}
	_iter_end_1ab98926c:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1ab98a58c:;
	}
	_iter_end_1ab98a58c:;;
	if (_20a2a7575_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _20a2a4d58_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20a2b7552_Const> static__20a2b7992_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_20a2b7552_Const>(_20a2b7552_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_20a2b7552_Const> static__20a2b7c5b_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_20a2b7552_Const>(_20a2b7552_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_20a2b7552_Const> static__20a2b8025_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_20a2b7552_Const>(_20a2b7552_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_20a2b7552_Const> static__20a2b82de_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_20a2b7552_Const>(_20a2b7552_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_20a2b7552_Const> static__20a2b85a8_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_20a2b7552_Const>(_20a2b7552_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_20a2b7552_Const> static__20a2b87b7_NewNil(void) {
	return jule::new_ptr<_20a2b7552_Const>(_20a2b7552_Const{._field_data=nullptr});;
}



inline jule::I64 _20a2b8e27_ReadI64(_20a2b7552_Const* _self_) {
	if ((!(_20a2bb523_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _20a2b91ad_ReadU64(_20a2b7552_Const* _self_) {
	if ((!(_20a2bb7a9_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _20a2b9444_ReadBool(_20a2b7552_Const* _self_) {
	if ((!(_20a2bba40_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _20a2b96ca_ReadStr(_20a2b7552_Const* _self_) {
	if ((!(_20a2bbcc6_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _20a2b9961_ReadF64(_20a2b7552_Const* _self_) {
	if ((!(_20a2bc05c_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _20a2b9be7_AsI64(_20a2b7552_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aba024d3:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aba022a2:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aba02318:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1aba01d51:;
			{
				return 0LL;;
			}
		}
		_match_end_1aba01ba8:;
	};
}



inline jule::U64 _20a2b9e7d_AsU64(_20a2b7552_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aba02c75:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aba03a9a:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aba03b11:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1aba0202c:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aba01ec7:;
	};
}



inline jule::F64 _20a2ba214_AsF64(_20a2b7552_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aba055c4:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aba0456d:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aba05393:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1aba038e1:;
			{
				return 0LL;;
			}
		}
		_match_end_1aba0388b:;
	};
}



inline void _20a2ba4bc_SetI64(_20a2b7552_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _20a2ba775_SetU64(_20a2b7552_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _20a2baa2d_SetBool(_20a2b7552_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _20a2bacd6_SetStr(_20a2b7552_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _20a2bb08e_SetF64(_20a2b7552_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _20a2bb523_IsI64(_20a2b7552_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aba08e46:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aba091aa:;
			{
				return false;;
			}
		}
		_match_end_1aba09155:;
	};
}



inline jule::Bool _20a2bb7a9_IsU64(_20a2b7552_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aba09b06:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aba0940d:;
			{
				return false;;
			}
		}
		_match_end_1aba093a8:;
	};
}



inline jule::Bool _20a2bba40_IsBool(_20a2b7552_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aba0a552:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aba09dc0:;
			{
				return false;;
			}
		}
		_match_end_1aba09d6a:;
	};
}



inline jule::Bool _20a2bbcc6_IsStr(_20a2b7552_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aba0ae9d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aba0a81b:;
			{
				return false;;
			}
		}
		_match_end_1aba0a7b6:;
	};
}



inline jule::Bool _20a2bc05c_IsF64(_20a2b7552_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aba0b8e9:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aba0b267:;
			{
				return false;;
			}
		}
		_match_end_1aba0b212:;
	};
}



inline jule::Bool _20a2bc2e3_IsNil(_20a2b7552_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _20a2bc975_And(_20a2b7552_Const* _self_, _20a2b7552_Const _23818_x) {
	{
		
		if ((_20a2bba40_IsBool(_self_) && _20a2bba40_IsBool(&_23818_x))) {
			_case_begin_1aba10b62:;
			{
				return (_20a2b9444_ReadBool(_self_) && _20a2b9444_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1aba10aeb:;
			{
				return false;;
			}
		}
		_match_end_1aba10711:;
	};
}



inline jule::Bool _20a2bccb6_Or(_20a2b7552_Const* _self_, _20a2b7552_Const _24917_x) {
	{
		
		if ((_20a2bba40_IsBool(_self_) && _20a2bba40_IsBool(&_24917_x))) {
			_case_begin_1aba11e2c:;
			{
				return (_20a2b9444_ReadBool(_self_) || _20a2b9444_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1aba11613:;
			{
				return false;;
			}
		}
		_match_end_1aba11536:;
	};
}



inline jule::Bool _20a2bd107_Eq(_20a2b7552_Const* _self_, _20a2b7552_Const _26017_x) {
	{
		
		if (_20a2bc2e3_IsNil(_self_)) {
			_case_begin_1aba1325d:;
			{
				return _20a2bc2e3_IsNil(&_26017_x);;
			}
		}
		else if (_20a2bba40_IsBool(_self_)) {
			_case_begin_1aba132c4:;
			{
				return (_20a2bba40_IsBool(&_26017_x) && (_20a2b9444_ReadBool(_self_) == _20a2b9444_ReadBool(&_26017_x)));;
			}
		}
		else if (_20a2bbcc6_IsStr(_self_)) {
			_case_begin_1aba1333a:;
			{
				return (_20a2bbcc6_IsStr(&_26017_x) && (_20a2b96ca_ReadStr(_self_) == _20a2b96ca_ReadStr(&_26017_x)));;
			}
		}
		else if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba133b2:;
			{
				return (_20a2b8e27_ReadI64(_self_) == _20a2b9be7_AsI64(&_26017_x));;
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba13439:;
			{
				return (_20a2b91ad_ReadU64(_self_) == _20a2b9e7d_AsU64(&_26017_x));;
			}
		}
		else if (_20a2bc05c_IsF64(_self_)) {
			_case_begin_1aba135b0:;
			{
				return (_20a2b9961_ReadF64(_self_) == _20a2ba214_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1aba128bc:;
			{
				return false;;
			}
		}
		_match_end_1aba127e0:;
	};
}



inline jule::Bool _20a2bd448_Lt(_20a2b7552_Const* _self_, _20a2b7552_Const _28717_x) {
	{
		
		if (_20a2bbcc6_IsStr(_self_)) {
			_case_begin_1aba16dee:;
			{
				return (_20a2bbcc6_IsStr(&_28717_x) && (_20a2b96ca_ReadStr(_self_) < _20a2b96ca_ReadStr(&_28717_x)));;
			}
		}
		else if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba16e65:;
			{
				return (_20a2b8e27_ReadI64(_self_) < _20a2b9be7_AsI64(&_28717_x));;
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba16ecb:;
			{
				return (_20a2b91ad_ReadU64(_self_) < _20a2b9e7d_AsU64(&_28717_x));;
			}
		}
		else if (_20a2bc05c_IsF64(_self_)) {
			_case_begin_1aba17053:;
			{
				return (_20a2b9961_ReadF64(_self_) < _20a2ba214_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1aba13bdc:;
			{
				return false;;
			}
		}
		_match_end_1aba13b21:;
	};
}



inline jule::Bool _20a2bd789_LtEq(_20a2b7552_Const* _self_, _20a2b7552_Const _31019_x) {
	{
		
		if (_20a2bbcc6_IsStr(_self_)) {
			_case_begin_1aba19a8e:;
			{
				return (_20a2bbcc6_IsStr(&_31019_x) && (_20a2b96ca_ReadStr(_self_) <= _20a2b96ca_ReadStr(&_31019_x)));;
			}
		}
		else if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba19b05:;
			{
				return (_20a2b8e27_ReadI64(_self_) <= _20a2b9be7_AsI64(&_31019_x));;
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba19b6b:;
			{
				return (_20a2b91ad_ReadU64(_self_) <= _20a2b9e7d_AsU64(&_31019_x));;
			}
		}
		else if (_20a2bc05c_IsF64(_self_)) {
			_case_begin_1aba19be3:;
			{
				return (_20a2b9961_ReadF64(_self_) <= _20a2ba214_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1aba1777e:;
			{
				return false;;
			}
		}
		_match_end_1aba176b3:;
	};
}



inline jule::Bool _20a2bdaca_Gt(_20a2b7552_Const* _self_, _20a2b7552_Const _33317_x) {
	{
		
		if (_20a2bbcc6_IsStr(_self_)) {
			_case_begin_1aba1c72e:;
			{
				return (_20a2bbcc6_IsStr(&_33317_x) && (_20a2b96ca_ReadStr(_self_) > _20a2b96ca_ReadStr(&_33317_x)));;
			}
		}
		else if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba1c795:;
			{
				return (_20a2b8e27_ReadI64(_self_) > _20a2b9be7_AsI64(&_33317_x));;
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba1c80b:;
			{
				return (_20a2b91ad_ReadU64(_self_) > _20a2b9e7d_AsU64(&_33317_x));;
			}
		}
		else if (_20a2bc05c_IsF64(_self_)) {
			_case_begin_1aba1c883:;
			{
				return (_20a2b9961_ReadF64(_self_) > _20a2ba214_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1aba1a41e:;
			{
				return false;;
			}
		}
		_match_end_1aba1a353:;
	};
}



inline jule::Bool _20a2bde1b_GtEq(_20a2b7552_Const* _self_, _20a2b7552_Const _35619_x) {
	{
		
		if (_20a2bbcc6_IsStr(_self_)) {
			_case_begin_1aba203be:;
			{
				return (_20a2bbcc6_IsStr(&_35619_x) && (_20a2b96ca_ReadStr(_self_) >= _20a2b96ca_ReadStr(&_35619_x)));;
			}
		}
		else if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba20435:;
			{
				return (_20a2b8e27_ReadI64(_self_) >= _20a2b9be7_AsI64(&_35619_x));;
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba2049b:;
			{
				return (_20a2b91ad_ReadU64(_self_) >= _20a2b9e7d_AsU64(&_35619_x));;
			}
		}
		else if (_20a2bc05c_IsF64(_self_)) {
			_case_begin_1aba20523:;
			{
				return (_20a2b9961_ReadF64(_self_) >= _20a2ba214_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1aba1d0ae:;
			{
				return false;;
			}
		}
		_match_end_1aba1cee3:;
	};
}



inline jule::Bool _20a2be25c_Add(_20a2b7552_Const* _self_, _20a2b7552_Const _37722_x) {
	{
		
		if (_20a2bbcc6_IsStr(_self_)) {
			_case_begin_1aba2305e:;
			{
				if ((!(_20a2bbcc6_IsStr(&_37722_x)))) {
					return false;;
				};
				_20a2bacd6_SetStr(_self_, (_20a2b96ca_ReadStr(_self_) + _20a2b96ca_ReadStr(&_37722_x)));
			}
		}
		else if (_20a2bc05c_IsF64(_self_)) {
			_case_begin_1aba230c5:;
			{
				_20a2bb08e_SetF64(_self_, (_20a2b9961_ReadF64(_self_) + _20a2ba214_AsF64(&_37722_x)));
			}
		}
		else if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba2313b:;
			{
				if (_20a2bc05c_IsF64(&_37722_x)) {
					_20a2bb08e_SetF64(_self_, (_20a2ba214_AsF64(_self_) + _20a2b9961_ReadF64(&_37722_x)));
				} else {
					_20a2ba4bc_SetI64(_self_, (_20a2b8e27_ReadI64(_self_) + _20a2b9be7_AsI64(&_37722_x)));
				};
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba231b3:;
			{
				if (_20a2bc05c_IsF64(&_37722_x)) {
					_20a2bb08e_SetF64(_self_, (_20a2ba214_AsF64(_self_) + _20a2b9961_ReadF64(&_37722_x)));
				} else {
					_20a2ba775_SetU64(_self_, (_20a2b91ad_ReadU64(_self_) + _20a2b9e7d_AsU64(&_37722_x)));
				};
			}
		}
		else {
			_case_begin_1aba20c4e:;
			{
				return false;;
			}
		}
		_match_end_1aba20b83:;
	};
	return true;;
}



inline jule::Bool _20a2be59d_Sub(_20a2b7552_Const* _self_, _20a2b7552_Const _40622_x) {
	{
		
		if (_20a2bc05c_IsF64(_self_)) {
			_case_begin_1aba27c78:;
			{
				_20a2bb08e_SetF64(_self_, (_20a2b9961_ReadF64(_self_) - _20a2ba214_AsF64(&_40622_x)));
			}
		}
		else if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba27d22:;
			{
				if (_20a2bc05c_IsF64(&_40622_x)) {
					_20a2bb08e_SetF64(_self_, (_20a2ba214_AsF64(_self_) - _20a2b9961_ReadF64(&_40622_x)));
				} else {
					_20a2ba4bc_SetI64(_self_, (_20a2b8e27_ReadI64(_self_) - _20a2b9be7_AsI64(&_40622_x)));
				};
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba27d99:;
			{
				if (_20a2bc05c_IsF64(&_40622_x)) {
					_20a2bb08e_SetF64(_self_, (_20a2ba214_AsF64(_self_) - _20a2b9961_ReadF64(&_40622_x)));
				} else {
					_20a2ba775_SetU64(_self_, (_20a2b91ad_ReadU64(_self_) - _20a2b9e7d_AsU64(&_40622_x)));
				};
			}
		}
		else {
			_case_begin_1aba274c5:;
			{
				return false;;
			}
		}
		_match_end_1aba273d7:;
	};
	return true;;
}



inline jule::Bool _20a2be8de_Mul(_20a2b7552_Const* _self_, _20a2b7552_Const _43022_x) {
	{
		
		if (_20a2bc05c_IsF64(_self_)) {
			_case_begin_1aba2bad4:;
			{
				_20a2bb08e_SetF64(_self_, (_20a2b9961_ReadF64(_self_) * _20a2ba214_AsF64(&_43022_x)));
			}
		}
		else if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba2bb7d:;
			{
				if (_20a2bc05c_IsF64(&_43022_x)) {
					_20a2bb08e_SetF64(_self_, (_20a2ba214_AsF64(_self_) * _20a2b9961_ReadF64(&_43022_x)));
				} else {
					_20a2ba4bc_SetI64(_self_, (_20a2b8e27_ReadI64(_self_) * _20a2b9be7_AsI64(&_43022_x)));
				};
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba2bc05:;
			{
				if (_20a2bc05c_IsF64(&_43022_x)) {
					_20a2bb08e_SetF64(_self_, (_20a2ba214_AsF64(_self_) * _20a2b9961_ReadF64(&_43022_x)));
				} else {
					_20a2ba775_SetU64(_self_, (_20a2b91ad_ReadU64(_self_) * _20a2b9e7d_AsU64(&_43022_x)));
				};
			}
		}
		else {
			_case_begin_1aba2b1dd:;
			{
				return false;;
			}
		}
		_match_end_1aba2b100:;
	};
	return true;;
}



inline jule::Bool _20a2bec30_Div(_20a2b7552_Const* _self_, _20a2b7552_Const _45822_x) {
	{
		
		if (_20a2bc05c_IsF64(_self_)) {
			_case_begin_1aba30940:;
			{
				jule::F64 _46113_l = _20a2ba214_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_20a2bb08e_SetF64(_self_, jule::div(_20a2b9961_ReadF64(_self_),_46113_l));
			}
		}
		else if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba309d9:;
			{
				jule::F64 _46713_l = _20a2ba214_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_20a2bb08e_SetF64(_self_, jule::div(_20a2ba214_AsF64(_self_),_46713_l));
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba30a61:;
			{
				jule::F64 _47313_l = _20a2ba214_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_20a2bb08e_SetF64(_self_, jule::div(_20a2ba214_AsF64(_self_),_47313_l));
			}
		}
		else {
			_case_begin_1aba30049:;
			{
				return false;;
			}
		}
		_match_end_1aba2ee5b:;
	};
	return true;;
}



inline jule::Bool _20a2c0071_Mod(_20a2b7552_Const* _self_, _20a2b7552_Const _48722_x) {
	{
		
		if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba34922:;
			{
				jule::I64 _49013_l = _20a2b9be7_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_20a2ba4bc_SetI64(_self_, jule::mod(_20a2b8e27_ReadI64(_self_),_49013_l));
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba34d1d:;
			{
				jule::U64 _49613_l = _20a2b9e7d_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_20a2ba775_SetU64(_self_, jule::mod(_20a2b91ad_ReadU64(_self_),_49613_l));
			}
		}
		else {
			_case_begin_1aba3489a:;
			{
				return false;;
			}
		}
		_match_end_1aba3479b:;
	};
	return true;;
}



inline jule::Bool _20a2c03b2_BitwiseAnd(_20a2b7552_Const* _self_, _20a2b7552_Const _50929_x) {
	{
		
		if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba37727:;
			{
				_20a2ba4bc_SetI64(_self_, (_20a2b8e27_ReadI64(_self_) & _20a2b9be7_AsI64(&_50929_x)));
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba37b23:;
			{
				_20a2ba775_SetU64(_self_, (_20a2b91ad_ReadU64(_self_) & _20a2b9e7d_AsU64(&_50929_x)));
			}
		}
		else {
			_case_begin_1aba376a0:;
			{
				return false;;
			}
		}
		_match_end_1aba375a1:;
	};
	return true;;
}



inline jule::Bool _20a2c0703_BitwiseOr(_20a2b7552_Const* _self_, _20a2b7552_Const _52328_x) {
	{
		
		if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba394a4:;
			{
				_20a2ba4bc_SetI64(_self_, (_20a2b8e27_ReadI64(_self_) | _20a2b9be7_AsI64(&_52328_x)));
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba398a0:;
			{
				_20a2ba775_SetU64(_self_, (_20a2b91ad_ReadU64(_self_) | _20a2b9e7d_AsU64(&_52328_x)));
			}
		}
		else {
			_case_begin_1aba3942c:;
			{
				return false;;
			}
		}
		_match_end_1aba3932d:;
	};
	return true;;
}



inline jule::Bool _20a2c0a44_Xor(_20a2b7552_Const* _self_, _20a2b7552_Const _53722_x) {
	{
		
		if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba3b231:;
			{
				_20a2ba4bc_SetI64(_self_, (_20a2b8e27_ReadI64(_self_) ^ _20a2b9be7_AsI64(&_53722_x)));
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba3b62c:;
			{
				_20a2ba775_SetU64(_self_, (_20a2b91ad_ReadU64(_self_) ^ _20a2b9e7d_AsU64(&_53722_x)));
			}
		}
		else {
			_case_begin_1aba3b1a9:;
			{
				return false;;
			}
		}
		_match_end_1aba3b0aa:;
	};
	return true;;
}



inline jule::Bool _20a2c0d85_Lshift(_20a2b7552_Const* _self_, _20a2b7552_Const _55125_x) {
	{
		
		if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba3cead:;
			{
				jule::I64 _55413_l = _20a2b9be7_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _20a2b9e7d_AsU64(&_55125_x);;
					_20a2ba4bc_SetI64(_self_, (_55413_l << _55617_r));
				} else {
					_20a2c156c_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba3d3a9:;
			{
				_20a2c156c_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1aba3ce36:;
			{
				return false;;
			}
		}
		_match_end_1aba3cd37:;
	};
	return true;;
}



inline jule::Bool _20a2c11c6_Rshift(_20a2b7552_Const* _self_, _20a2b7552_Const _57125_x) {
	{
		
		if (_20a2bb523_IsI64(_self_)) {
			_case_begin_1aba404cc:;
			{
				jule::I64 _57413_l = _20a2b9be7_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _20a2b9e7d_AsU64(&_57125_x);;
					_20a2ba4bc_SetI64(_self_, (_57413_l >> _57617_r));
				} else {
					_20a2c189c_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_20a2bb7a9_IsU64(_self_)) {
			_case_begin_1aba408c8:;
			{
				_20a2c189c_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1aba40455:;
			{
				return false;;
			}
		}
		_match_end_1aba40356:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _20a2b7552_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a875d30d_Prec(_1a875ce89_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(57LLU) || _match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1aba9b67b:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1aba9b1a3:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(71LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1aba9b219:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1aba9b6e2:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1aba9b769:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1aba9abb9:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aba9b0c6:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a875ce89_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1a8763b3d_Fill(_1a8763720_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1a8763dc4_Dir(_1a8763720_File* _self_) {
	return _2246a0db6_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1a876415a_Name(_1a8763720_File* _self_) {
	return _2246a09dc_Base((*(_self_))._field_Path);;
}



inline jule::Str _1a8764732_GetRow(_1a8763720_File* _self_, jule::I32 _3821_row) {
	jule::I32 _3913_n = 0LL;;
	jule::I32 _4013_lineStart = 0LL;;
	jule::I32 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1abaa1de0;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=(_4113_i + 1LL);
		}
	_iter_next_1abaa1de0:;
	}
	_iter_end_1abaa1de0:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8763720_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8765876_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1a876bddd_pushErr(_1a876b85a_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_224743e15_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a8766624_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1a876c44e_lex(_1a876b85a_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1a876e671_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1a875ce89_Token> _46217_token = _1a8770b5b_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1a875ce89_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1ab175591:;
	}
	_iter_end_1ab175591:;;
}



inline jule::Str _1a876c790_id(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r;
	jule::I32 _47516_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e3a3e_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1a87616b8_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr;
			jule::I32 _48117_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e3a3e_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1a8761b3b_IsDecimal(static_cast<jule::U8>(_48113_pr))))) && (!(_1a87616b8_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1ab17883b:;
	}
	_iter_end_1ab17883b:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1a876ca26_resume(_1a876b85a_lex* _self_) {
	jule::I32 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*(*(_self_))._field_file.alloc)._field_Data[_49613_i]);;
			if (_1a87611bd_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1ab17d038:;
						{
							_1a876e671_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1ab17cbb4:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1ab17c862:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1ab17caa4:;
				};
				goto _iter_next_1ab17b289;
			};
			jule::I32 _51317_j = _49613_i;;
			for (; (_51317_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_51317_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1ab17b872;
					};
				}
			_iter_next_1ab17b872:;
			}
			_iter_end_1ab17b872:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1ab17b289:;
	}
	_iter_end_1ab17b289:;;
	return nullptr;;
}



inline void _1a876ccce_lexLineComment(_1a876b85a_lex* _self_, jule::Ptr<_1a875ce89_Token>* _52438_token) {
	jule::I32 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1ab180ac9;
			};
		}
	_iter_next_1ab180ac9:;
	}
	_iter_end_1ab180ac9:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U32>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1a876d087_lexRangeComment(_1a876b85a_lex* _self_, jule::Ptr<_1a875ce89_Token>* _53939_token) {
	jule::I32 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1ab18423c;
			};
			if ((_54313_r == '\n')) {
				_1a876e671_newLine(_self_);
				goto _iter_next_1ab18423c;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_54313_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U32>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1ab18423c:;
	}
	_iter_end_1ab18423c:;;
	_1a876bddd_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1a876d3c8_num(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1a876a172_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ab18bb6d;
	};
	__jule_func_result=_1a8769e96_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ab18bb6d;
	};
	__jule_func_result=_1a8768736_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ab18bb6d;
	};
	__jule_func_result=_1a876846c_commonNum(_56723_txt);
	_julec_label_1ab18bb6d:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1a876d719_escapeSeq(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1ab1908ca;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1ab18da0a:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ab18db70:;
			{
				_59013_seq=_1a876a78d_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1ab18d741:;
			{
				_59013_seq=_1a876aa57_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ab18d7a7:;
			{
				_59013_seq=_1a876ad21_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1ab18d18b:;
			{
				_59013_seq=_1a876b0da_byteEscape(_58929_txt);
			}
		}
		_match_end_1ab18d5cb:;
	};
	_julec_label_1ab1908ca:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1a876bddd_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1a876db15_getRune(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1a876d719_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r;
	jule::I32 _62312_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e3a3e_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1a876de56_lexRune(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_2234c269a_StrBuilder _62913_run = static__2234c2ac9_New(8LL);;
	_2234c33e3_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I32 _63213_n = 0LL;;
	jule::I32 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1ab194ca8;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1a876bddd_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1a876e671_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1a876db15_getRune(_self_, &(_64513_part), false);;
			_2234c313a_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_2233e5832_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1ab194ca8;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1ab194ca8:;
	}
	_iter_end_1ab194ca8:;;
	if ((_63213_n == 0LL)) {
		_1a876bddd_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1a876bddd_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _2234c3932_Str(&_62913_run);;
}



inline jule::Str _1a876e1dc_lexStr(_1a876b85a_lex* _self_) {
	_2234c269a_StrBuilder _66913_s = static__2234c2ac9_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_2234c33e3_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1ab19a0dd;
			};
			if ((_67713_ch == '\n')) {
				_1a876e671_newLine(_self_);
				if ((!(_6729_raw))) {
					_1a876bddd_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1a876db15_getRune(_self_, &(_68917_part), _6729_raw);;
			_2234c313a_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_2233e5832_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1ab19a0dd;
			};
		}
	_iter_next_1ab19a0dd:;
	}
	_iter_end_1ab19a0dd:;;
	return _2234c3932_Str(&_66913_s);;
}



inline void _1a876e671_newLine(_1a876b85a_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1a876ebd2_isOp(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U32 _71048_id, jule::Ptr<_1a875ce89_Token>* _71066_t) {
	if ((!(_1a87669dc_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1a87700cd_lexBasicOps(_1a876b85a_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1a875ce89_Token>* _72048_tok) {
	{
		auto expr = &(_1a87660d5_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1a1dc5:;
		if (it != expr_end) {
			_1a8765876_kindPair *_72116_pair = it;
			{
				if (_1a876ebd2_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1ab1a1dc5:;
			++it;
			goto _iter_begin_1ab1a1dc5;
		}
		_iter_end_1ab1a1dc5:;
	};
	return false;;
}



inline jule::Bool _1a87704c9_lexId(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1a875ce89_Token>* _72943_t) {
	jule::Str _7309_lex = _1a876c790_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _1a87708c5_lexNum(_1a876b85a_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1a875ce89_Token>* _73944_t) {
	jule::Str _7409_lex = _1a876d3c8_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U32>(4LLU);
	return true;;
}



inline jule::Ptr<_1a875ce89_Token> _1a8770b5b_token(_1a876b85a_lex* _self_) {
	jule::Ptr<_1a875ce89_Token> _75113_t = jule::new_ptr<_1a875ce89_Token>(_1a875ce89_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1a876ca26_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*_75113_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1a87708c5_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1ab1a9042:;
			{
				goto _match_end_1ab1a6e0d;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1ab1a90a8:;
			{
				(*_75113_t.alloc)._field_Kind=_1a876de56_lexRune(_self_, &(_7569_txt));
				(*_75113_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1ab1a911e:;
			{
				(*_75113_t.alloc)._field_Kind=_1a876e1dc_lexStr(_self_);
				(*_75113_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1a87669dc_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1ab1a7a68:;
			{
				_1a876ccce_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1a87669dc_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1ab1a7ace:;
			{
				_1a876d087_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1a87700cd_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1ab1a7b45:;
			{
				goto _match_end_1ab1a6e0d;
			}
		}
		else if (_1a87704c9_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1ab1a7bab:;
			{
				{
					auto expr = &(_1a8765ca5_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab1acc9e:;
					if (it != expr_end) {
						_1a8765876_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*_75113_t.alloc)._field_Kind)) {
								(*_75113_t.alloc)._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1ab1acc9e;
							};
						}
						_iter_next_1ab1acc9e:;
						++it;
						goto _iter_begin_1ab1acc9e;
					}
					_iter_end_1ab1acc9e:;
				};
			}
		}
		else {
			_case_begin_1ab1a7a02:;
			{
				jule::I32 _79513_r;
				jule::I32 _79516_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e3a3e_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1a876bddd_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1ab1a6e0d:;
	};
	(*(_self_))._field_column+=_2233e5832_RuneCountStr((*_75113_t.alloc)._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a876b85a_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a87715a7_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8772564_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8772982_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8773565_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8773b70_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8773e39_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8774313_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8774610_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8774995_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8774c92_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8775402_IsUnsafe(_1a877508e_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877508e_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8775b94_AutoSized(_1a8775831_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8775831_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877607e_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8776458_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8777899_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8777b63_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877826d_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877848d_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8778834_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8778c0d_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a87791b4_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8779956_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8779d30_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877a209_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877a5d3_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877a9ac_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877ae63_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a877b947_Unhandled(_1a877b5c3_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1a877bbcd_Ignored(_1a877b5c3_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877b5c3_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877c0b8_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877c8e3_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877cd99_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877d6c4_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877de00_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877e85c_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a877eebc_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a87802b9_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8780770_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8780b49_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8781023_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8781320_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8781980_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8782013_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8782e26_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8783586_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8784147_IsSelf(_1a8783cc3_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8783cc3_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8785588_IsAnon(_1a8785225_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8785225_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a87863d0_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a87867a9_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a878738c_IsInf(_1a8787029_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8787029_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8787bb7_IsWhileNext(_1a8787854_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8787854_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a878825b_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8788635_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8788a0e_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8788eb5_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a878938e_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8789845_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a878a082_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a878a538_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a878ad52_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d1e12c_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d1e5d3_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d20194_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d209be_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d2112e_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d213e8_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d21cde_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d2252b_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d22b8b_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8d29104_FieldIns> _1a8d243a7_instance(jule::Ptr<_1a8d24000_Field> _self_) {
	return jule::new_ptr<_1a8d29104_FieldIns>(_1a8d29104_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d24000_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d26013_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8d29ba4_StructIns> _1a8d27388_instance(jule::Ptr<_1a8d26e26_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _10013_ins = jule::new_ptr<_1a8d29ba4_StructIns>(_1a8d29ba4_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1a8d29104_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1a8de41ad_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()), ._field_Refers=static__1a8d4343c_new(), });;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe4e9c9:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> _10721_s = *it;
			{
				(*(_10013_ins))._field_Statics=jule::append((*_10013_ins.alloc)._field_Statics,jule::Slice<jule::Ptr<_1a8de41ad_Var>>::make({jule::new_ptr<_1a8de41ad_Var>((*(_10721_s)))}));
			}
			_iter_next_1abe4e9c9:;
			++it;
			goto _iter_begin_1abe4e9c9;
		}
		_iter_end_1abe4e9c9:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe4ec93:;
		if (it != expr_end) {
			jule::Ptr<_1a8d24000_Field> _11121_f = *it;
			{
				(*_10013_ins.alloc)._field_Fields=jule::append((*_10013_ins.alloc)._field_Fields,jule::Slice<jule::Ptr<_1a8d29104_FieldIns>>::make({_1a8d243a7_instance(_11121_f)}));
				if ((((!((*_11121_f.alloc)._field_Mutable)) && ((*((*_11121_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1a8e8489c_Mutable((*(*_11121_f.alloc)._field_Kind.alloc)._field_Kind))) {
					(*_10013_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1abe4ec93:;
			++it;
			goto _iter_begin_1abe4ec93;
		}
		_iter_end_1abe4ec93:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_10013_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_10013_ins.alloc)._field_Methods=jule::Slice<jule::Ptr<_1a8d3be91_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len());
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abe54506:;
			if (it != expr_end) {
				jule::Ptr<_1a8d3be91_Fn> _12225_f = *it;
				{
					jule::Ptr<_1a8d3be91_Fn> _12321_fins = jule::new_ptr<_1a8d3be91_Fn>((*(_12225_f)));;
					(*_12321_fins.alloc)._field_Instances=nullptr;
					(*_10013_ins.alloc)._field_Methods=jule::append((*_10013_ins.alloc)._field_Methods,jule::Slice<jule::Ptr<_1a8d3be91_Fn>>::make({_12321_fins}));
				}
				_iter_next_1abe54506:;
				++it;
				goto _iter_begin_1abe54506;
			}
			_iter_end_1abe54506:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1a8d29ba4_StructIns> _1a8d27696_appendInstance(_1a8d26e26_Struct* _self_, jule::Ptr<_1a8d29ba4_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe54869:;
		if (it != expr_end) {
			jule::Ptr<_1a8d29ba4_StructIns> _14021_ains = *it;
			{
				if (_1a8d2a820_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1abe54869:;
			++it;
			goto _iter_begin_1abe54869;
		}
		_iter_end_1abe54869:;
	};
	{ jule::Slice<jule::Ptr<_1a8d29ba4_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1a8d3be91_Fn> _1a8d27a92_FindMethod(_1a8d26e26_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe57dab:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*_15321_f.alloc)._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1abe57dab:;
			++it;
			goto _iter_begin_1abe57dab;
		}
		_iter_end_1abe57dab:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8de41ad_Var> _1a8d27dd3_FindStatic(_1a8d26e26_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe5842d:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1abe5842d:;
			++it;
			goto _iter_begin_1abe5842d;
		}
		_iter_end_1abe5842d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d24000_Field> _1a8d28224_FindField(_1a8d26e26_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe5a177:;
		if (it != expr_end) {
			jule::Ptr<_1a8d24000_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1abe5a177:;
			++it;
			goto _iter_begin_1abe5a177;
		}
		_iter_end_1abe5a177:;
	};
	return nullptr;;
}



inline jule::Bool _1a8d28565_IsImplements(_1a8d26e26_Struct* _self_, jule::Ptr<_1a8d5034a_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe5b145:;
		if (it != expr_end) {
			jule::Ptr<_1a8d5034a_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1abe5b145:;
			++it;
			goto _iter_begin_1abe5b145;
		}
		_iter_end_1abe5b145:;
	};
	return false;;
}



inline jule::Bool _1a8d288a6_IsUses(_1a8d26e26_Struct* _self_, jule::Ptr<_1a8d26e26_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe5bad5:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1abe5c5db:;
				}
				_iter_end_1abe5c5db:;;
			}
			_iter_next_1abe5bad5:;
			++it;
			goto _iter_begin_1abe5bad5;
		}
		_iter_end_1abe5bad5:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d26e26_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d29104_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d2db53_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d2e14d_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d2e527_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d2ea55_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d2edeb_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d301e8_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d3077b_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d3112d_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d31507_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d319ad_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d31e64_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Captured:" << _Src._field_Captured << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d3233d_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d327e4_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d32d77_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d3340a_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d33c9b_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d34142_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d3451b_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d34818_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d34be2_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d350bb_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d35495_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d3586e_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d35d25_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d362cb_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d366a5_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d369a2_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d36c9e_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d37178_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d37552_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d3792b_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d380d0_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d382bc_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d38564_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d38861_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d38c3a_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d39037_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d39c3b_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8d3dde9_ParamIns> _1a8d3a852_instance(jule::Ptr<_1a8d3a4bc_Param> _self_) {
	return jule::new_ptr<_1a8d3dde9_ParamIns>(_1a8d3dde9_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1a8d3aad8_IsSelf(_1a8d3a4bc_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1a8d3ad6e_IsRef(_1a8d3a4bc_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d3a4bc_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8d3c414_IsVoid(_1a8d3be91_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1a8d3c69a_IsMethod(_1a8d3be91_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1a8d3c931_IsEntryPoint(_1a8d3be91_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1a8d3cbb7_IsInit(_1a8d3be91_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1a8d3ce4d_IsAnon(_1a8d3be91_Fn* _self_) {
	return _1a8760b3a_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1a8d3d1d4_AnyVar(_1a8d3be91_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1a8d3ee72_FnIns> _1a8d3d46a_instanceForce(jule::Ptr<_1a8d3be91_Fn> _self_) {
	jule::Ptr<_1a8d3ee72_FnIns> _10113_ins = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1a8d7de17_Scope>(), ._field_Refers=static__1a8d4343c_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1a8d3dde9_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe740a3:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3a4bc_Param> _10821_p = *it;
			{
				(*_10113_ins.alloc)._field_Params=jule::append((*_10113_ins.alloc)._field_Params,jule::Slice<jule::Ptr<_1a8d3dde9_ParamIns>>::make({_1a8d3a852_instance(_10821_p)}));
			}
			_iter_next_1abe740a3:;
			++it;
			goto _iter_begin_1abe740a3;
		}
		_iter_end_1abe740a3:;
	};
	if (((*((*_10113_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_10113_ins.alloc)._field_Result=(*((*(*(*_10113_ins.alloc)._field_Decl.alloc)._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1a8d3ee72_FnIns> _1a8d3d701_instance(jule::Ptr<_1a8d3be91_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	return _1a8d3d46a_instanceForce(_self_);;
}



inline jule::Ptr<_1a8d3ee72_FnIns> _1a8d3da0e_appendInstance(_1a8d3be91_Fn* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1a8d3ee72_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1a8d3ee72_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe78edc:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3ee72_FnIns> _14521_ains = *it;
			{
				if (_1a8d419ce_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1abe78edc:;
			++it;
			goto _iter_begin_1abe78edc;
		}
		_iter_end_1abe78edc:;
	};
	{ jule::Slice<jule::Ptr<_1a8d3ee72_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d3be91_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8d3e25c_Str(_1a8d3dde9_ParamIns* _self_) {
	_2234c269a_StrBuilder _16713_s = static__2234c2ac9_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_2234c313a_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_2234c313a_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1a8d3aad8_IsSelf((*(_self_))._field_Decl)) {
		if (_1a8d3ad6e_IsRef((*(_self_))._field_Decl)) {
			_2234c33e3_WriteByte(&_16713_s, '&');
		};
		_2234c313a_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _2234c3932_Str(&_16713_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_2234c313a_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_2234c313a_WriteStr(&_16713_s, _1a8e833d4_Str((*(_self_))._field_Kind));
	};
	return _2234c3932_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d3dde9_ParamIns _Src) {
	_Stream << _1a8d3e25c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d402b3_Str(_1a8d3ee72_FnIns* _self_) {
	;
	return _1a8d41d20_GetKindStr(_self_, false);;
}



inline jule::Bool _1a8d40604_Equal(jule::Ptr<_1a8d3ee72_FnIns> _self_, jule::Ptr<_1a8e8301b_TypeKind> _21921_other) {
	jule::Ptr<_1a8d3ee72_FnIns> _2209_f = _1a8e86959_Fn(_21921_other.ptr());;
	if ((_2209_f == nullptr)) {
		return false;;
	};
	return _1a8d40a99_EqualFn(_self_, &(_2209_f));;
}



inline jule::Bool _1a8d40a99_EqualFn(jule::Ptr<_1a8d3ee72_FnIns> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _23024_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_23024_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Unsafety != (*(*((*(_23024_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1a8d3c414_IsVoid((*_self_.alloc)._field_Decl) != _1a8d3c414_IsVoid((*((*(_23024_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1a8d3dde9_ParamIns>,jule::Ptr<_1a8d3dde9_ParamIns>> _2409_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1a8d3dde9_ParamIns>,jule::Ptr<_1a8d3dde9_ParamIns>>((void*)__jule_anon1abe84558, nullptr, nullptr);;
	if (((*((*(_23024_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I32 _27213_i = 0LL;;
	for (; (_27213_i < (*_self_.alloc)._field_Params.len()); (_27213_i)++) {
		{
			if ((!(_2409_checkParams((*_self_.alloc)._field_Params[_27213_i], (*((*(_23024_f))))._field_Params[_27213_i])))) {
				return false;;
			};
		}
	_iter_next_1abe89c01:;
	}
	_iter_end_1abe89c01:;;
	if ((!(_1a8d3c414_IsVoid((*_self_.alloc)._field_Decl)))) {
		if ((!(_1a8e83725_Equal((*_self_.alloc)._field_Result, (*((*(_23024_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1a8d40dda_equalTrait(jule::Ptr<_1a8d3ee72_FnIns> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _28927_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_28927_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Ident != (*(*((*(_28927_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1a8d40a99_EqualFn(_self_, _28927_other)))) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Generics.len() != (*(*((*(_28927_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>> _1a8d41171_Types(_1a8d3ee72_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1abe90e27:;
			{
				return nullptr;;
			}
		}
		else if ((_1a8e87493_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1abe90e8d:;
			{
				return jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1abe909b5:;
			{
				return (*(_1a8e87493_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1abe908b6:;
	};
}



inline jule::Bool _1a8d41407_IsBuiltin(_1a8d3ee72_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1a8d4168d_IsAnon(_1a8d3ee72_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1a8d3ce4d_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1a8d419ce_Same(_1a8d3ee72_FnIns* _self_, jule::Ptr<_1a8d3ee72_FnIns> _33219_f) {
	if ((((*(_self_))._field_Decl != (*(_33219_f))._field_Decl) || ((*_33219_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe9437b:;
		if (it != expr_end) {
			jule::I32 _33713_i = it - expr->begin();
			jule::Ptr<_1a8e81635_InsGeneric> *_33716_g = it;
			{
				jule::Ptr<_1a8e81635_InsGeneric> _33813_g2 = (*_33219_f.alloc)._field_Generics[_33713_i];;
				if ((((*((*((*(_33716_g))))._field_Kind))._field_BindIdent != (*(*(_33813_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a8e83725_Equal((*(*(_33716_g)).alloc)._field_Kind, (*_33813_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1abe9437b:;
			++it;
			_33713_i++;
			goto _iter_begin_1abe9437b;
		}
		_iter_end_1abe9437b:;
	};
	return true;;
}



inline jule::Str _1a8d41d20_GetKindStr(_1a8d3ee72_FnIns* _self_, jule::Bool _34925_ident) {
	_2234c269a_StrBuilder _35013_s = static__2234c2ac9_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_2234c313a_WriteStr(&_35013_s, jule::Str::lit("unsafe ", 7));
	};
	_2234c313a_WriteStr(&_35013_s, jule::Str::lit("fn", 2));
	if ((_34925_ident && ((*(_self_))._field_Decl != nullptr))) {
		_2234c33e3_WriteByte(&_35013_s, ' ');
		_2234c313a_WriteStr(&_35013_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_2234c33e3_WriteByte(&_35013_s, '(');
	jule::I32 _3649_n = (*(_self_))._field_Params.len();;
	if ((_3649_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abe996a0:;
			if (it != expr_end) {
				jule::I32 _36617_i = it - expr->begin();
				jule::Ptr<_1a8d3dde9_ParamIns> *_36620_p = it;
				{
					_2234c313a_WriteStr(&_35013_s, _1a8d3e25c_Str((*(_36620_p)).ptr()));
					if ((_36617_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_2234c33e3_WriteByte(&_35013_s, ',');
					};
				}
				_iter_next_1abe996a0:;
				++it;
				_36617_i++;
				goto _iter_begin_1abe996a0;
			}
			_iter_end_1abe996a0:;
		};
	};
	_2234c33e3_WriteByte(&_35013_s, ')');
	if ((*(*(_self_))._field_Decl.alloc)._field_Exceptional) {
		_2234c33e3_WriteByte(&_35013_s, '!');
	};
	if ((!(_1a8d3c414_IsVoid((*(_self_))._field_Decl)))) {
		_2234c33e3_WriteByte(&_35013_s, ':');
		_2234c313a_WriteStr(&_35013_s, _1a8e833d4_Str((*(_self_))._field_Result.ptr()));
	};
	return _2234c3932_Str(&_35013_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d3ee72_FnIns _Src) {
	_Stream << _1a8d402b3_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a8d43151_ReferenceStack> static__1a8d4343c_new(void) {
	return jule::new_ptr<_1a8d43151_ReferenceStack>(_1a8d43151_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I32 _1a8d43838_Len(_1a8d43151_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1a8d43b79_At(_1a8d43151_ReferenceStack* _self_, jule::I32 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1a8d43e32_Push(_1a8d43151_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1ac8a35c5_Exist(_1a8d43151_ReferenceStack* _self_, jule::Ptr<_1a8d3ee72_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8a494a:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ac8a494a:;
			++it;
			goto _iter_begin_1ac8a494a;
		}
		_iter_end_1ac8a494a:;
	};
	return false;;
}

inline jule::Bool _1ac8b94cb_Exist(_1a8d43151_ReferenceStack* _self_, jule::Ptr<_1a8de41ad_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8ba80c:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ac8ba80c:;
			++it;
			goto _iter_begin_1ac8ba80c;
		}
		_iter_end_1ac8ba80c:;
	};
	return false;;
}

inline jule::Bool _1ac774067_Exist(_1a8d43151_ReferenceStack* _self_, jule::Ptr<_1a8d29ba4_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac775431:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ac775431:;
			++it;
			goto _iter_begin_1ac775431;
		}
		_iter_end_1ac775431:;
	};
	return false;;
}

inline jule::Bool _1acd462c6_Exist(_1a8d43151_ReferenceStack* _self_, jule::Ptr<_1a8d5034a_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd475c4:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1acd475c4:;
			++it;
			goto _iter_begin_1acd475c4;
		}
		_iter_end_1acd475c4:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d43151_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d4465d_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1a8d49ab4_pushErr(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a875ce89_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_224743e15_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a8dbde8a_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1a8d4a345_pushSuggestion(_1a8d49113_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1a8dc0541_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1a8d4a741_checkCppUseDeclPath(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _2246a0459_Ext((*(_34556_path)));;
	if (((!(_224736ac8_IsValidHeaderExt(_3469_ext))) && (!(_224736d92_IsValidCppExt(_3469_ext))))) {
		_1a8d49ab4_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2232db12e_Status> _3539_info = ({
		auto except = static__2246a24b1_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1a8d49ab4_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_2232db12e_Status>(nullptr);});
	});;
	if (_2232db508_IsDir(_3539_info.ptr())) {
		_1a8d49ab4_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d4aa4e_buildCppHeaderImport(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_2247367ed_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_2246a01c3_Join(jule::Slice<jule::Str>::make({_1a8763dc4_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1a8d4a741_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2246a0723_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1a8d49ab4_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1a8da0ea0_ImportInfo>(_1a8da0ea0_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d4ad90_buildStdImport(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _39338_decl) {
	jule::Str _39513_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39513_path=_22469b026_Replace(_39513_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_39513_path=_2246a01c3_Join(jule::Slice<jule::Str>::make({_22480d573_PathStdlib,_39513_path}));
	jule::Bool _39815_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2246a0723_Abs(_39513_path);
		_39513_path = __jule_assign_result.__jule_result_arg0;
		_39815_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39815_ok))) {
		_1a8d49ab4_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2232db12e_Status> _4059_info = ({
		auto except = static__2246a24b1_Of(_39513_path);
		(except.ok()) ? (except.result) : ({{
			_1a8d49ab4_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_2232db12e_Status>(nullptr);});
	});;
	if ((!(_2232db508_IsDir(_4059_info.ptr())))) {
		_1a8d49ab4_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _4159_i = (_224696a9e_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4169_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4159_i);;
	return jule::new_ptr<_1a8da0ea0_ImportInfo>(_1a8da0ea0_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39513_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4169_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1a8da3dc6_Package>(_1a8da3dc6_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d4b1d1_buildIdentImport(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _43341_decl) {
	if ((((*((*(_43341_decl))))._field_LinkPath.equal("_", 1) || (_2246962eb_Find((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _224695a04_HasSuffix((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1a8d49ab4_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4419_modPath = ((_1a8d9d08a_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8d9c100_GetModPath((*_self_.alloc)._field_importer.data);;
	if ((_4419_modPath.len() == 0LL)) {
		_1a8d49ab4_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1a8d4a345_pushSuggestion(_self_, jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44813_path = (*((*(_43341_decl))))._field_LinkPath;;
	_44813_path=_22469b026_Replace(_44813_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_44813_path=_2246a01c3_Join(jule::Slice<jule::Str>::make({_4419_modPath,_44813_path}));
	jule::Bool _45215_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2246a0723_Abs(_44813_path);
		_44813_path = __jule_assign_result.__jule_result_arg0;
		_45215_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_45215_ok))) {
		_1a8d49ab4_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2232db12e_Status> _4599_info = ({
		auto except = static__2246a24b1_Of(_44813_path);
		(except.ok()) ? (except.result) : ({{
			_1a8d49ab4_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_2232db12e_Status>(nullptr);});
	});;
	if ((!(_2232db508_IsDir(_4599_info.ptr())))) {
		_1a8d49ab4_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _4699_i = (_224696a9e_FindLast((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4709_ident = (*((*(_43341_decl))))._field_LinkPath.slice(_4699_i);;
	return jule::new_ptr<_1a8da0ea0_ImportInfo>(_1a8da0ea0_ImportInfo{._field_Token=(*((*(_43341_decl))))._field_Token, ._field_Path=_44813_path, ._field_LinkPath=(*((*(_43341_decl))))._field_LinkPath, ._field_Ident=_4709_ident, ._field_Alias=(*((*(_43341_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43341_decl))))._field_Full, ._field_Package=jule::new_ptr<_1a8da3dc6_Package>(_1a8da3dc6_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d4b522_buildImport(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _48736_decl) {
	{
		
		if ((*((*(_48736_decl))))._field_Binded) {
			_case_begin_1abed906e:;
			{
				return _1a8d4aa4e_buildCppHeaderImport(_self_.ptr(), _48736_decl);;
			}
		}
		else if ((*((*(_48736_decl))))._field_Std) {
			_case_begin_1abed946a:;
			{
				return _1a8d4ad90_buildStdImport(_self_.ptr(), _48736_decl);;
			}
		}
		else {
			_case_begin_1abed9008:;
			{
				return _1a8d4b1d1_buildIdentImport(_self_, _48736_decl);;
			}
		}
		_match_end_1abed8e09:;
	};
}



inline jule::Bool _1a8d4b863_checkDuplicateUseDecl(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _49841_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8da0ea0_ImportInfo> _5009_lpkg = _1a8e46e36_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>>((void*)__jule_anon_1abedb637, jule::Ptr<__jule_anon_1abedb637_ctx>::make(__jule_anon_1abedb637_ctx{._49841_pkg=_49841_pkg}).as<jule::Uintptr>(), __jule_anon_1abedb637_ctx_handler));;
	if ((_5009_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1a8d49ab4_pushErr(_self_, &((*((*(_49841_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49841_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1a8d4a345_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1a8d4bbc6_implImportSelections(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _51244_imp, jule::Ptr<_1a8d1e12c_UseDecl>* _51267_decl) {
	(*((*(_51244_imp))))._field_Selected=(*((*(_51267_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51244_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abede0eb:;
		if (it != expr_end) {
			jule::Ptr<_1a875ce89_Token> _51416_item = *it;
			{
				{
					auto expr = &((*((*(_51244_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abede9e2:;
					if (it != expr_end) {
						jule::Ptr<_1a875ce89_Token> _51520_citem = *it;
						{
							if ((_51416_item == _51520_citem)) {
								goto _iter_end_1abede9e2;
							} else if (((*(_51416_item))._field_Kind == (*(_51520_citem))._field_Kind)) {
								_1a8d49ab4_pushErr(_self_, &(_51416_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*_51416_item.alloc)._field_Kind, &__jule_any_type4)}));
								_1a8d4a345_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1abede9e2;
							};
						}
						_iter_next_1abede9e2:;
						++it;
						goto _iter_begin_1abede9e2;
					}
					_iter_end_1abede9e2:;
				};
			}
			_iter_next_1abede0eb:;
			++it;
			goto _iter_begin_1abede0eb;
		}
		_iter_end_1abede0eb:;
	};
}



inline jule::Str _1a8d4c017_getAsLinkPath(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Str _52737_path) {
	if (_224695680_HasPrefix(_52737_path, _22480d573_PathStdlib)) {
		(_52737_path).mut_slice(_22480d573_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _22469b026_Replace(_52737_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5339_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2246a0723_Abs(((_1a8d9d08a_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a8d9c100_GetModPath((*(_self_))._field_importer.data));
		_5339_root = __jule_assign_result.__jule_result_arg0;
	});
	(_52737_path).mut_slice(_5339_root.len());;
	if ((_52737_path[0LL] == 92LLU)) {
		(_52737_path).mut_slice(1LL);;
	};
	return _22469b026_Replace(_52737_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1a8d4c435_pushCycleError(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8d49113_symbolBuilder>* _54135_sb, jule::Str _54155_path, _2234c269a_StrBuilder* _54171_message) {
	;
	jule::Str _5439_refersTo = _224744377_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1a8d4c017_getAsLinkPath(_self_, _1a8763dc4_Dir((*((*((*(_54135_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1a8d4c017_getAsLinkPath(_self_, _54155_path), &__jule_any_type4)}));;
	jule::Str _5479_m = _2234c3932_Str(_54171_message);;
	_2234c313a_WriteStr(_54171_message, _2246952b7_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2234c313a_WriteStr(_54171_message, _5439_refersTo);
	_2234c33e3_WriteByte(_54171_message, '\n');
	_2234c313a_WriteStr(_54171_message, _5479_m);
}



inline void _1a8d4c853_pushCrossCycleError(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8d49113_symbolBuilder>* _55440_target, jule::Ptr<_1a8da0ea0_ImportInfo>* _55465_imp, jule::Ptr<_1a875ce89_Token>* _55484_errorToken) {
	_2234c269a_StrBuilder _55513_message = static__2234c2ac9_New(32LL);;
	_1a8d4c435_pushCycleError(_self_, &(_self_), (*((*(_55465_imp))))._field_Path, &(_55513_message));
	jule::Ptr<_1a8d49113_symbolBuilder> _55913_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1a8d49113_symbolBuilder> _56013_old = _self_;;
	while (((*(_55913_owner))._field_owner != nullptr)) {
		{
			_1a8d4c435_pushCycleError(_self_, &((*_56013_old.alloc)._field_owner), _1a8763dc4_Dir((*((*_56013_old.alloc)._field_table))._field_File.ptr()), &(_55513_message));
			if (((*_55913_owner.alloc)._field_owner == (*(_55440_target)))) {
				_1a8d4c435_pushCycleError(_self_, _55440_target, _1a8763dc4_Dir((*(*_55913_owner.alloc)._field_table.alloc)._field_File), &(_55513_message));
				goto _iter_end_1abee8644;
			};
			_56013_old=_55913_owner;
			_55913_owner=(*_55913_owner.alloc)._field_owner;
		}
	_iter_next_1abee8644:;
	}
	_iter_end_1abee8644:;;
	_1a8d49ab4_pushErr(_self_, _55484_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_2234c3932_Str(&_55513_message), &__jule_any_type4)}));
}



inline jule::Bool _1a8d4cc4e_checkImportCycles(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8da0ea0_ImportInfo> _57737_imp, jule::Ptr<_1a8d1e12c_UseDecl>* _57756_decl) {
	if (((*(_57737_imp))._field_Path == _1a8763dc4_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1a8d49ab4_pushErr(_self_, &((*((*(_57756_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1a8d4c017_getAsLinkPath(_self_, (*_57737_imp.alloc)._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a8d49113_symbolBuilder> _58713_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1abeee040:;
	if ((_1a8763dc4_Dir((*(*(_58713_owner))._field_table.alloc)._field_File) == (*_57737_imp.alloc)._field_Path)) {
		_1a8d4c853_pushCrossCycleError(_self_, &(_58713_owner), &(_57737_imp), &((*((*(_57756_decl))))._field_Token));
		return false;;
	};
	if (((*_58713_owner.alloc)._field_owner != nullptr)) {
		_58713_owner=(*_58713_owner.alloc)._field_owner;
		goto _julec_label_1abeee040;
	};
	return true;;
}



inline void _1a8d4d16c_checkPackageAccessibility(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _60845_decl, jule::Str* _60862_mod, jule::Str* _60873_path) {
	if (((((_1a8d9d08a_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a8d9c100_GetModPath((*(_self_))._field_importer.data) != (*(_60862_mod))) && _224699b4b_Contains((*(_60873_path)), jule::Str::lit("internal", 8)))) {
		_1a8d49ab4_pushErr(_self_, &((*((*(_60845_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a8d4d568_importPackage(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _61438_imp, jule::Ptr<_1a8d1e12c_UseDecl>* _61461_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61438_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8da0ea0_ImportInfo> _61913_port = ((_1a8d9d08a_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a8d9c782_GetImport((*(_self_))._field_importer.data, (*((*(_61438_imp))))._field_Path);;
	if ((_61913_port != nullptr)) {
		(*((*(_61438_imp))))._field_Package=(*_61913_port.alloc)._field_Package;
		(*((*(_61438_imp))))._field_Duplicate=true;
		jule::Str _62413_oldMod = ((_1a8d9d08a_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8d9c100_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1a8d9d08a_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8d9bd69_SetModPath((*_self_.alloc)._field_importer.data, ((_1a8d9d08a_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8d9c441_ModById((*_self_.alloc)._field_importer.data, (*((*(_61438_imp))))._field_ModId));
		_1a8d4d16c_checkPackageAccessibility(_self_, _61461_decl, &(_62413_oldMod), &((*_61913_port.alloc)._field_Path));
		((_1a8d9d08a_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8d9bd69_SetModPath((*_self_.alloc)._field_importer.data, _62413_oldMod);
	} else {
		if ((!(_1a8d4cc4e_checkImportCycles(_self_, (*(_61438_imp)), _61461_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63313_oldMod = ((_1a8d9d08a_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8d9c100_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1a8d9d08a_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8d9bd69_SetModPath((*_self_.alloc)._field_importer.data, _63313_oldMod);
		});;
		if ((*((*(_61438_imp))))._field_Std) {
			((_1a8d9d08a_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8d9bd69_SetModPath((*_self_.alloc)._field_importer.data, _22480d573_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1a87715a7_Ast>> _63817_asts;
		jule::Slice<_224743e15_Log> _63827_errors;
		({
			__jule_tuple_sx_1a87715a7_Ast__jule_tuple_s_224743e15_Log __jule_assign_result = ((_1a8d9d08a_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8d9cb7d_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_61438_imp))))._field_Path, (!((*((*(_61438_imp))))._field_Std)));
			_63817_asts = __jule_assign_result.__jule_result_arg0;
			_63827_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63827_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63827_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1a8d4d16c_checkPackageAccessibility(_self_, _61461_decl, &(_63313_oldMod), &((*((*(_61438_imp))))._field_Path));
		{
			auto expr = &(_63817_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac00a667:;
			if (it != expr_end) {
				jule::Ptr<_1a87715a7_Ast> _64625_ast = *it;
				{
					jule::Ptr<_1a8e4694c_SymbolTable> _64725_table = nullptr;;
					({
						__jule_tuple_x_1a8e4694c_SymbolTable__jule_tuple_s_224743e15_Log __jule_assign_result = _1a8ea38ee_buildSymbols(&(_64625_ast), &((*_self_.alloc)._field_importer), _self_);
						_64725_table = __jule_assign_result.__jule_result_arg0;
						_63827_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63827_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63827_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_61438_imp))))._field_Package))._field_Files=jule::append((*(*((*(_61438_imp))))._field_Package.alloc)._field_Files,jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>::make({_64725_table}));
				}
				_iter_next_1ac00a667:;
				++it;
				goto _iter_begin_1ac00a667;
			}
			_iter_end_1ac00a667:;
		};
	};
	_1a8d4bbc6_implImportSelections(_self_, _61438_imp, _61461_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d4d8a9_importUseDecl(jule::Ptr<_1a8d49113_symbolBuilder> _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _66138_decl) {
	jule::Ptr<_1a8da0ea0_ImportInfo> _66213_imp = _1a8d4b522_buildImport(_self_, _66138_decl);;
	if ((_66213_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66813_ok = _1a8d4b863_checkDuplicateUseDecl(_self_, &(_66213_imp));;
	if ((!(_66813_ok))) {
		return nullptr;;
	};
	_66813_ok=_1a8d4d568_importPackage(_self_, &(_66213_imp), _66138_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Imports,jule::Slice<jule::Ptr<_1a8da0ea0_ImportInfo>>::make({_66213_imp}));
	if (_66813_ok) {
		((_1a8d9d08a_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8d9ce36_Imported((*_self_.alloc)._field_importer.data, _66213_imp);
		return _66213_imp;;
	};
	return nullptr;;
}



inline void _1a8d4daa7_importUseDecls(jule::Ptr<_1a8d49113_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac015e58:;
		if (it != expr_end) {
			jule::Ptr<_1a8d1e12c_UseDecl> _68321_decl = *it;
			{
				_1a8d4d8a9_importUseDecl(_self_, &(_68321_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1ac015e58;
				};
			}
			_iter_next_1ac015e58:;
			++it;
			goto _iter_begin_1ac015e58;
		}
		_iter_end_1ac015e58:;
	};
}



inline void _1a8d4dd60_appendNode(_1a8d49113_symbolBuilder* _self_, _1a8772564_Node* _69234_node) {
	{
		auto &_match_expr{ (*(_69234_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ac0164a8:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,jule::Slice<jule::Ptr<_1a8d789b1_Impl>>::make({_1a8d48a4c_buildImpl((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a8d22b8b_Impl>())}));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ac0174ba:;
			{
				jule::Ptr<_1a8e82229_TypeAlias> _69717_ta = _1a8d45098_buildTypeAlias((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a878a082_TypeAliasDecl>());;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>::make({_69717_ta}));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ac017531:;
			{
				jule::Ptr<_1a8d26e26_Struct> _70017_srct = _1a8d45939_buildStruct((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a8d21cde_StructDecl>());;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,jule::Slice<jule::Ptr<_1a8d26e26_Struct>>::make({_70017_srct}));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac017597:;
			{
				jule::Ptr<_1a8d3be91_Fn> _70317_f = _1a8d465d8_buildFunc((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a8785225_FnDecl>());;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,jule::Slice<jule::Ptr<_1a8d3be91_Fn>>::make({_70317_f}));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ac01760d:;
			{
				jule::Ptr<_1a8d5034a_Trait> _70617_t = _1a8d46e35_buildTrait((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a8d2252b_TraitDecl>());;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,jule::Slice<jule::Ptr<_1a8d5034a_Trait>>::make({_70617_t}));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ac017674:;
			{
				jule::Ptr<_1a8de41ad_Var> _70917_v = _1a8d484b9_buildVar((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a87863d0_VarDecl>());;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a8de41ad_Var>>::make({_70917_v}));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ac017cb2:;
			{
				jule::Ptr<_1a8d52a56_Enum> _71217_e = _1a8d479b3_buildEnum((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a8d20194_EnumDecl>());;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,jule::Slice<jule::Ptr<_1a8d52a56_Enum>>::make({_71217_e}));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1ac017d28:;
			{
				jule::Ptr<_1a8d54261_TypeEnum> _71517_e = _1a8d48200_buildTypeEnum((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a8d2112e_TypeEnumDecl>());;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,jule::Slice<jule::Ptr<_1a8d54261_TypeEnum>>::make({_71517_e}));
			}
		}
		else {
			_case_begin_1ac0173aa:;
			{
				_1a8d49ab4_pushErr(_self_, &((*(_69234_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac017355:;
	};
}



inline void _1a8d4e05d_appendNodes(_1a8d49113_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0220eb:;
		if (it != expr_end) {
			_1a8772564_Node _72321_node = *it;
			{
				_1a8d4dd60_appendNode(_self_, &(_72321_node));
			}
			_iter_next_1ac0220eb:;
			++it;
			goto _iter_begin_1ac0220eb;
		}
		_iter_end_1ac0220eb:;
	};
}



inline void _1a8d4e316_pushDirectivePass(_1a8d49113_symbolBuilder* _self_, jule::Ptr<_1a8772982_Directive>* _72841_d) {
	if (((*((*(_72841_d))))._field_Args.len() == 0LL)) {
		_1a8d49ab4_pushErr(_self_, &((*((*(_72841_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72841_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1a875ce89_Token> _73313_arg = (*((*(_72841_d))))._field_Args[1LL];;
		_1a8d49ab4_pushErr(_self_, &(_73313_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72841_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1a875ce89_Token> _7379_arg = (*((*(_72841_d))))._field_Args[0LL];;
	if (((*(_7379_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1a8d49ab4_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7379_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a8d49ab4_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,jule::Slice<_1a8d4465d_Pass>::make({_1a8d4465d_Pass{._field_Token=(*((*(_72841_d))))._field_Tag, ._field_Text=(*_7379_arg.alloc)._field_Kind.slice(1LL, ((*_7379_arg.alloc)._field_Kind.len() - 1LL))}}));
}



inline void _1a8d4e514_appendTopDirectives(_1a8d49113_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac027ed1:;
		if (it != expr_end) {
			jule::Ptr<_1a8772982_Directive> _75521_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75521_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1ac029235:;
						{
							_1a8d4e316_pushDirectivePass(_self_, &(_75521_d));
						}
					}
					_match_end_1ac029169:;
				};
			}
			_iter_next_1ac027ed1:;
			++it;
			goto _iter_begin_1ac027ed1;
		}
		_iter_end_1ac027ed1:;
	};
}



inline void _1a8d4e712_build(jule::Ptr<_1a8d49113_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1a8e4694c_SymbolTable>(_1a8e4694c_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, });
	_1a8d4e514_appendTopDirectives(_self_);
	_1a8d4daa7_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1a8d4e05d_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d49113_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8d50713_Str(_1a8d5034a_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a8d50a54_Equal(jule::Ptr<_1a8d5034a_Trait> _self_, jule::Ptr<_1a8e8301b_TypeKind> _2521_other) {
	jule::Ptr<_1a8d5034a_Trait> _269_trt = _1a8e86e76_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1a8d3be91_Fn> _1a8d50ee9_FindMethod(_1a8d5034a_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac02cb0c:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1ac02cb0c:;
			++it;
			goto _iter_begin_1ac02cb0c;
		}
		_iter_end_1ac02cb0c:;
	};
	return _1a8d5167b_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1a8d3be91_Fn> _1a8d5167b_findMethodInherit(_1a8d5034a_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac02ed2e:;
		if (it != expr_end) {
			jule::Ptr<_1a8e8a1dd_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1ac02ed2e;
				};
				jule::Ptr<_1a8d5034a_Trait> _6017_t = _1a8e86e76_Trait((*_5621_i.alloc)._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1a8d3be91_Fn> _6221_f2 = _1a8d50ee9_FindMethod(_6017_t, (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1ac02ed2e:;
			++it;
			goto _iter_begin_1ac02ed2e;
		}
		_iter_end_1ac02ed2e:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d5034a_Trait _Src) {
	_Stream << _1a8d50713_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a8d52391_AutoExpr(_1a8d51ed9_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d51ed9_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8d52dca_Str(_1a8d52a56_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a8d5321b_Equal(jule::Ptr<_1a8d52a56_Enum> _self_, jule::Ptr<_1a8e8301b_TypeKind> _3821_other) {
	jule::Ptr<_1a8d52a56_Enum> _399_enm = _1a8e85e20_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1a8d51ed9_EnumItem> _1a8d5364a_FindItem(_1a8d52a56_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac03453c:;
		if (it != expr_end) {
			jule::Ptr<_1a8d51ed9_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1ac03453c:;
			++it;
			goto _iter_begin_1ac03453c;
		}
		_iter_end_1ac03453c:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d52a56_Enum _Src) {
	_Stream << _1a8d52dca_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d53b89_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8d545a2_Str(_1a8d54261_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a8d548e3_Equal(jule::Ptr<_1a8d54261_TypeEnum> _self_, jule::Ptr<_1a8e8301b_TypeKind> _8021_other) {
	jule::Ptr<_1a8d54261_TypeEnum> _819_tenm = _1a8e861a6_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1a8d53b89_TypeEnumItem> _1a8d54d22_FindItem(_1a8d54261_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0367b4:;
		if (it != expr_end) {
			jule::Ptr<_1a8d53b89_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1ac0367b4:;
			++it;
			goto _iter_begin_1ac0367b4;
		}
		_iter_end_1ac0367b4:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d54261_TypeEnum _Src) {
	_Stream << _1a8d545a2_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d5773c_Str(_1a8d573b8_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1a8d57a7d_Equal(jule::Ptr<_1a8d573b8_comptimeRange> _self_, jule::Ptr<_1a8e8301b_TypeKind> _3621_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d573b8_comptimeRange _Src) {
	_Stream << _1a8d5773c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d58254_Str(_1a8d57d8b_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1a8d58595_Equal(jule::Ptr<_1a8d57d8b_comptimeStructField> _self_, jule::Ptr<_1a8e8301b_TypeKind> _4621_other) {
	return false;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d58b39__Name(jule::Ptr<_1a8d57d8b_comptimeStructField> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _5026_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _5041_fc) {
	if (((*((*(_5041_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_5026_e)).ptr(), (*((*((*(_5041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _5513_constant = static__20a2b82de_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065b48_primStr, ._field_Model=jule::Any(_5513_constant, &__jule_any_type19), ._field_Constant=_5513_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d59035__Type(jule::Ptr<_1a8d57d8b_comptimeStructField> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _6330_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _6345_fc) {
	if (((*((*(_6345_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_6330_e)).ptr(), (*((*((*(_6345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_6330_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d59431__Public(jule::Ptr<_1a8d57d8b_comptimeStructField> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _7132_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _7147_fc) {
	if (((*((*(_7147_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_7132_e)).ptr(), (*((*((*(_7147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _7613_constant = static__20a2b8025_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_7613_constant, &__jule_any_type19), ._field_Constant=_7613_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d5973e_subIdent(jule::Ptr<_1a8d57d8b_comptimeStructField> _self_, jule::Str* _8429_ident) {
	{
		auto &_match_expr{ (*(_8429_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ac0443c6:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _8717_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1ac0456b3, jule::Ptr<__jule_anon_1ac0456b3_ctx>::make(__jule_anon_1ac0456b3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac0456b3_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_8717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1ac044470:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _9417_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1ac04761b, jule::Ptr<__jule_anon_1ac04761b_ctx>::make(__jule_anon_1ac04761b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac04761b_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_9417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ac0444e7:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _10117_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1ac049574, jule::Ptr<__jule_anon_1ac049574_ctx>::make(__jule_anon_1ac049574_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac049574_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_10117_method));;
			}
		}
		else {
			_case_begin_1ac0440da:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac044261:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d57d8b_comptimeStructField _Src) {
	_Stream << _1a8d58254_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d59dc1_Str(_1a8d59a4c_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1a8d5a212_Equal(jule::Ptr<_1a8d59a4c_comptimeStructFields> _self_, jule::Ptr<_1a8e8301b_TypeKind> _12021_other) {
	return false;;
}



inline void _1a8d5a685_ready(_1a8d59a4c_comptimeStructFields* _self_, jule::Ptr<_1a8de41ad_Var>* _12429_keyA, jule::Ptr<_1a8de41ad_Var>* _12446_keyB) {
	if (((*(_12429_keyA)) != nullptr)) {
		(*((*(_12429_keyA))))._field_Constant=true;
		(*((*(_12429_keyA))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		(*((*(_12429_keyA))))._field_Kind=(*(_1a9068b7e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12446_keyB)) != nullptr)) {
		(*((*(_12446_keyB))))._field_Constant=true;
		(*((*(_12446_keyB))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		(*((*(_12446_keyB))))._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d57d8b_comptimeStructField>(), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data6)})});
	};
}



inline void _1a8d5aaa3_step(_1a8d59a4c_comptimeStructFields* _self_, jule::I32 _14523_i, jule::Ptr<_1a8de41ad_Var>* _14536_keyA, jule::Ptr<_1a8de41ad_Var>* _14553_keyB) {
	if (((*(_14536_keyA)) != nullptr)) {
		(*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Constant=static__20a2b7992_NewI64(static_cast<jule::I64>(_14523_i));
		(*(*(*((*(_14536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_14536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_14553_keyB)) != nullptr)) {
		(*(_1a8e87c46_comptimeStructField((*((*((*(_14553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14523_i];
	};
}



inline jule::I32 _1a8d5ad39_len(_1a8d59a4c_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d59a4c_comptimeStructFields _Src) {
	_Stream << _1a8d59dc1_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d5b4bb_Str(_1a8d5b147_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1a8d5b80c_Equal(jule::Ptr<_1a8d5b147_comptimeStatic> _self_, jule::Ptr<_1a8e8301b_TypeKind> _16921_other) {
	return false;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d5be39__Name(jule::Ptr<_1a8d5b147_comptimeStatic> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _17326_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _17341_fc) {
	if (((*((*(_17341_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_17326_e)).ptr(), (*((*((*(_17341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _17813_constant = static__20a2b82de_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065b48_primStr, ._field_Model=jule::Any(_17813_constant, &__jule_any_type19), ._field_Constant=_17813_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d5c335__Type(jule::Ptr<_1a8d5b147_comptimeStatic> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _18630_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _18645_fc) {
	if (((*((*(_18645_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_18630_e)).ptr(), (*((*((*(_18645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_18630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d5c731__Public(jule::Ptr<_1a8d5b147_comptimeStatic> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _19432_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _19447_fc) {
	if (((*((*(_19447_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_19432_e)).ptr(), (*((*((*(_19447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _19913_constant = static__20a2b8025_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_19913_constant, &__jule_any_type19), ._field_Constant=_19913_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d5ca72_subIdent(jule::Ptr<_1a8d5b147_comptimeStatic> _self_, jule::Str* _20729_ident) {
	{
		auto &_match_expr{ (*(_20729_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ac059ee1:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _21017_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1ac05b2cd, jule::Ptr<__jule_anon_1ac05b2cd_ctx>::make(__jule_anon_1ac05b2cd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac05b2cd_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_21017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1ac05a08a:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _21717_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1ac05d236, jule::Ptr<__jule_anon_1ac05d236_ctx>::make(__jule_anon_1ac05d236_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac05d236_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_21717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ac05a112:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _22417_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1ac06018e, jule::Ptr<__jule_anon_1ac06018e_ctx>::make(__jule_anon_1ac06018e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac06018e_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_22417_method));;
			}
		}
		else {
			_case_begin_1ac059c05:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac059d7b:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d5b147_comptimeStatic _Src) {
	_Stream << _1a8d5b4bb_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d5d17c_Str(_1a8d5cd08_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1a8d5d4bd_Equal(jule::Ptr<_1a8d5cd08_comptimeStatics> _self_, jule::Ptr<_1a8e8301b_TypeKind> _24321_other) {
	return false;;
}



inline void _1a8d5d941_ready(_1a8d5cd08_comptimeStatics* _self_, jule::Ptr<_1a8de41ad_Var>* _24729_keyA, jule::Ptr<_1a8de41ad_Var>* _24746_keyB) {
	if (((*(_24729_keyA)) != nullptr)) {
		(*((*(_24729_keyA))))._field_Constant=true;
		(*((*(_24729_keyA))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		(*((*(_24729_keyA))))._field_Kind=(*(_1a9068b7e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24746_keyB)) != nullptr)) {
		(*((*(_24746_keyB))))._field_Constant=true;
		(*((*(_24746_keyB))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		(*((*(_24746_keyB))))._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d5b147_comptimeStatic>(), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data8)})});
	};
}



inline void _1a8d5dd5e_step(_1a8d5cd08_comptimeStatics* _self_, jule::I32 _26823_i, jule::Ptr<_1a8de41ad_Var>* _26836_keyA, jule::Ptr<_1a8de41ad_Var>* _26853_keyB) {
	if (((*(_26836_keyA)) != nullptr)) {
		(*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Constant=static__20a2b7992_NewI64(static_cast<jule::I64>(_26823_i));
		(*(*(*((*(_26836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_26836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_26853_keyB)) != nullptr)) {
		(*(_1a8e89550_comptimeStatic((*((*((*(_26853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_26823_i];
	};
}



inline jule::I32 _1a8d5e0e5_len(_1a8d5cd08_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d5cd08_comptimeStatics _Src) {
	_Stream << _1a8d5d17c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d5e887_Str(_1a8d5e403_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1a8d5ebc8_Equal(jule::Ptr<_1a8d5e403_comptimeEnumField> _self_, jule::Ptr<_1a8e8301b_TypeKind> _29221_other) {
	return false;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6014b__Name(jule::Ptr<_1a8d5e403_comptimeEnumField> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _29626_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _29641_fc) {
	if (((*((*(_29641_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_29626_e)).ptr(), (*((*((*(_29641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _30113_constant = static__20a2b82de_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065b48_primStr, ._field_Model=jule::Any(_30113_constant, &__jule_any_type19), ._field_Constant=_30113_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6048c_subIdent(jule::Ptr<_1a8d5e403_comptimeEnumField> _self_, jule::Str* _30929_ident) {
	{
		auto &_match_expr{ (*(_30929_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ac06acd2:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _31217_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1ac06beae, jule::Ptr<__jule_anon_1ac06beae_ctx>::make(__jule_anon_1ac06beae_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac06beae_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_31217_method));;
			}
		}
		else {
			_case_begin_1ac06aa07:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac06ab7d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d5e403_comptimeEnumField _Src) {
	_Stream << _1a8d5e887_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d60b1e_Str(_1a8d6079a_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1a8d60e60_Equal(jule::Ptr<_1a8d6079a_comptimeEnumFields> _self_, jule::Ptr<_1a8e8301b_TypeKind> _33121_other) {
	return false;;
}



inline void _1a8d613d3_ready(_1a8d6079a_comptimeEnumFields* _self_, jule::Ptr<_1a8de41ad_Var>* _33529_keyA, jule::Ptr<_1a8de41ad_Var>* _33546_keyB) {
	if (((*(_33529_keyA)) != nullptr)) {
		(*((*(_33529_keyA))))._field_Constant=true;
		(*((*(_33529_keyA))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		(*((*(_33529_keyA))))._field_Kind=(*(_1a9068b7e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33546_keyB)) != nullptr)) {
		(*((*(_33546_keyB))))._field_Constant=true;
		(*((*(_33546_keyB))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		(*((*(_33546_keyB))))._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d5e403_comptimeEnumField>(), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data10)})});
	};
}



inline void _1a8d61801_step(_1a8d6079a_comptimeEnumFields* _self_, jule::I32 _35623_i, jule::Ptr<_1a8de41ad_Var>* _35636_keyA, jule::Ptr<_1a8de41ad_Var>* _35653_keyB) {
	if (((*(_35636_keyA)) != nullptr)) {
		(*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Constant=static__20a2b7992_NewI64(static_cast<jule::I64>(_35623_i));
		(*(*(*((*(_35636_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_35636_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_35653_keyB)) != nullptr)) {
		(*(_1a8e88263_comptimeEnumField((*((*((*(_35653_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35623_i];
	};
}



inline jule::I32 _1a8d61a87_len(_1a8d6079a_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d6079a_comptimeEnumFields _Src) {
	_Stream << _1a8d60b1e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d62219_Str(_1a8d61d95_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1a8d6255a_Equal(jule::Ptr<_1a8d61d95_comptimeParam> _self_, jule::Ptr<_1a8e8301b_TypeKind> _38021_other) {
	return false;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d62cb9__Name(jule::Ptr<_1a8d61d95_comptimeParam> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _38426_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _38441_fc) {
	if (((*((*(_38441_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_38426_e)).ptr(), (*((*((*(_38441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _38913_constant = static__20a2b82de_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065b48_primStr, ._field_Model=jule::Any(_38913_constant, &__jule_any_type19), ._field_Constant=_38913_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d631b5__Type(jule::Ptr<_1a8d61d95_comptimeParam> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _39730_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _39745_fc) {
	if (((*((*(_39745_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_39730_e)).ptr(), (*((*((*(_39745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_39730_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d635b1__Variadic(jule::Ptr<_1a8d61d95_comptimeParam> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _40534_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _40549_fc) {
	if (((*((*(_40549_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_40534_e)).ptr(), (*((*((*(_40549_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _41013_constant = static__20a2b8025_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_41013_constant, &__jule_any_type19), ._field_Constant=_41013_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d639ac__Reference(jule::Ptr<_1a8d61d95_comptimeParam> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _41835_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _41850_fc) {
	if (((*((*(_41850_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_41835_e)).ptr(), (*((*((*(_41850_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _42313_constant = static__20a2b8025_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_42313_constant, &__jule_any_type19), ._field_Constant=_42313_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d63ced_subIdent(jule::Ptr<_1a8d61d95_comptimeParam> _self_, jule::Str* _43129_ident) {
	{
		auto &_match_expr{ (*(_43129_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ac0806ed:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _43417_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1ac081a2e, jule::Ptr<__jule_anon_1ac081a2e_ctx>::make(__jule_anon_1ac081a2e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac081a2e_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_43417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1ac080764:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _44117_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1ac083987, jule::Ptr<__jule_anon_1ac083987_ctx>::make(__jule_anon_1ac083987_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac083987_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_44117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1ac0807db:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _44817_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1ac0858e0, jule::Ptr<__jule_anon_1ac0858e0_ctx>::make(__jule_anon_1ac0858e0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac0858e0_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_44817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ac080863:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _45517_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1ac087848, jule::Ptr<__jule_anon_1ac087848_ctx>::make(__jule_anon_1ac087848_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac087848_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_45517_method));;
			}
		}
		else {
			_case_begin_1ac0803bd:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac080544:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d61d95_comptimeParam _Src) {
	_Stream << _1a8d62219_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d64370_Str(_1a8d6402e_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1a8d646b1_Equal(jule::Ptr<_1a8d6402e_comptimeParams> _self_, jule::Ptr<_1a8e8301b_TypeKind> _47421_other) {
	return false;;
}



inline void _1a8d64b34_ready(_1a8d6402e_comptimeParams* _self_, jule::Ptr<_1a8de41ad_Var>* _47829_keyA, jule::Ptr<_1a8de41ad_Var>* _47846_keyB) {
	if (((*(_47829_keyA)) != nullptr)) {
		(*((*(_47829_keyA))))._field_Constant=true;
		(*((*(_47829_keyA))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		(*((*(_47829_keyA))))._field_Kind=(*(_1a9068b7e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47846_keyB)) != nullptr)) {
		(*((*(_47846_keyB))))._field_Constant=true;
		(*((*(_47846_keyB))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		(*((*(_47846_keyB))))._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d61d95_comptimeParam>(), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data12)})});
	};
}



inline void _1a8d65052_step(_1a8d6402e_comptimeParams* _self_, jule::I32 _49923_i, jule::Ptr<_1a8de41ad_Var>* _49936_keyA, jule::Ptr<_1a8de41ad_Var>* _49953_keyB) {
	if (((*(_49936_keyA)) != nullptr)) {
		(*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Constant=static__20a2b7992_NewI64(static_cast<jule::I64>(_49923_i));
		(*(*(*((*(_49936_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_49936_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_49953_keyB)) != nullptr)) {
		(*(_1a8e88780_comptimeParam((*((*((*(_49953_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49923_i];
	};
}



inline jule::I32 _1a8d652d8_len(_1a8d6402e_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d6402e_comptimeParams _Src) {
	_Stream << _1a8d64370_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d6596a_Str(_1a8d655e6_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1a8d65cab_Equal(jule::Ptr<_1a8d655e6_comptimeTypeInfos> _self_, jule::Ptr<_1a8e8301b_TypeKind> _52321_other) {
	return false;;
}



inline void _1a8d6622e_ready(_1a8d655e6_comptimeTypeInfos* _self_, jule::Ptr<_1a8de41ad_Var>* _52729_keyA, jule::Ptr<_1a8de41ad_Var>* _52746_keyB) {
	if (((*(_52729_keyA)) != nullptr)) {
		(*((*(_52729_keyA))))._field_Constant=true;
		(*((*(_52729_keyA))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		(*((*(_52729_keyA))))._field_Kind=(*(_1a9068b7e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52746_keyB)) != nullptr)) {
		(*((*(_52746_keyB))))._field_Constant=true;
		(*((*(_52746_keyB))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		(*((*(_52746_keyB))))._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d66be1_comptimeTypeInfo>(), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data15)})});
	};
}



inline void _1a8d6664c_step(_1a8d655e6_comptimeTypeInfos* _self_, jule::I32 _54823_i, jule::Ptr<_1a8de41ad_Var>* _54836_keyA, jule::Ptr<_1a8de41ad_Var>* _54853_keyB) {
	if (((*(_54836_keyA)) != nullptr)) {
		(*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Constant=static__20a2b7992_NewI64(static_cast<jule::I64>(_54823_i));
		(*(*(*((*(_54836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_54836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_54853_keyB)) != nullptr)) {
		(*((*((*((*(_54853_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_54823_i], (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data15);
	};
}



inline jule::I32 _1a8d668d3_len(_1a8d655e6_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d655e6_comptimeTypeInfos _Src) {
	_Stream << _1a8d6596a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d67065_Str(_1a8d66be1_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1a8e833d4_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1a8d673a6_Equal(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e8301b_TypeKind> _57221_other) {
	return false;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d67a05__Str(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _57625_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _57640_fc) {
	if (((*((*(_57640_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_57625_e)).ptr(), (*((*((*(_57640_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _58113_constant = static__20a2b82de_NewStr(_1a8e833d4_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065b48_primStr, ._field_Model=jule::Any(_58113_constant, &__jule_any_type19), ._field_Constant=_58113_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d67e01__Kind(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _58930_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _58945_fc) {
	if (((*((*(_58945_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_58930_e)).ptr(), (*((*((*(_58945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d52a56_Enum> _59413_enm = _1a8da2c0a_FindEnum(_1a8d7421a_findComptimePackage(&((*((*(_58930_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1a8d51ed9_EnumItem> _59517_item = nullptr;;
	{
		
		if (_1a8e84380_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1ac09d100:;
			{
				_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1a8e86be0_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac09d012:;
			{
				_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1a8e86e76_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac09cbc1:;
			{
				_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1a8e85b89_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac09cc37:;
			{
				if (_1a8e93922_IsUnsafe(_1a8e85b89_Ptr((*_self_.alloc)._field_base).ptr())) {
					_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1a8e85903_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac09cc9d:;
			{
				_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1a8e85e20_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac09cd14:;
			{
				_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1a8e8720c_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac09d85e:;
			{
				_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1a8e866c3_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac09d8c5:;
			{
				_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1a8e8643c_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac09d93b:;
			{
				_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1a8e86959_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac09d9a2:;
			{
				_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1a8e87493_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac09da18:;
			{
				_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1a8e8566c_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac09da90:;
			{
				jule::Ptr<_1a8e8aae5_Prim> _62413_prim = _1a8e8566c_Prim((*_self_.alloc)._field_base);;
				{
					
					if (_1a8e8e313_IsAny(_62413_prim.ptr())) {
						_case_begin_1ac0a9b01:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1a8e8dce6_IsBool(_62413_prim.ptr())) {
						_case_begin_1ac0a9a13:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1a8e8e07c_IsStr(_62413_prim.ptr())) {
						_case_begin_1ac0a9804:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1a8e8d026_IsF32(_62413_prim.ptr())) {
						_case_begin_1ac0a986a:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1a8e8d2ac_IsF64(_62413_prim.ptr())) {
						_case_begin_1ac0a98d1:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1a8e8b9a3_IsI8(_62413_prim.ptr())) {
						_case_begin_1ac0a9947:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1a8e8bc39_IsI16(_62413_prim.ptr())) {
						_case_begin_1ac0aa360:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1a8e8bec0_IsI32(_62413_prim.ptr())) {
						_case_begin_1ac0aa3d7:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1a8e8c256_IsI64(_62413_prim.ptr())) {
						_case_begin_1ac0aa45e:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1a8e8c4dc_IsU8(_62413_prim.ptr())) {
						_case_begin_1ac0aa4d6:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1a8e8c773_IsU16(_62413_prim.ptr())) {
						_case_begin_1ac0aa55d:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1a8e8ca09_IsU32(_62413_prim.ptr())) {
						_case_begin_1ac0aa5d5:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1a8e8cc90_IsU64(_62413_prim.ptr())) {
						_case_begin_1ac0aa65c:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1a8e8d543_IsInt(_62413_prim.ptr())) {
						_case_begin_1ac0aa6d4:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1a8e8d7c9_IsUint(_62413_prim.ptr())) {
						_case_begin_1ac0aa75b:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1a8e8da60_IsUintptr(_62413_prim.ptr())) {
						_case_begin_1ac0aa7d3:;
						{
							_59517_item=_1a8d5364a_FindItem(_59413_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1ac0a965b:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a8e833d4_Str((*_self_.alloc)._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:659:17"));;
						}
					}
					_match_end_1ac0a95e5:;
				};
			}
		}
		else {
			_case_begin_1ac09cb5a:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a8e833d4_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:662:13"));;
			}
		}
		_match_end_1ac09cab1:;
	};
	return _1a8e7e457_evalEnumStatic(&(_59413_enm), &(_59517_item), &((*((*(_58945_fc))))._field_Token));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d682ec__Bits(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _66730_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _66745_fc) {
	if (((*((*(_66745_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_66730_e)).ptr(), (*((*((*(_66745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _6729_prim = _1a8e8566c_Prim((*(_self_))._field_base.ptr());;
	if ((_6729_prim == nullptr)) {
		_1a8e4e03c_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _6779_n = _20a2ab8ba_BitsizeOf((*(_6729_prim))._field_Kind);;
	if ((_6779_n == -1LL)) {
		_1a8e4e03c_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _68213_constant = static__20a2b7992_NewI64(static_cast<jule::I64>(_6779_n));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065b48_primStr, ._field_Model=jule::Any(_68213_constant, &__jule_any_type19), ._field_Constant=_68213_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d686e8__Elem(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _69030_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _69045_fc) {
	if (((*((*(_69045_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_69030_e)).ptr(), (*((*((*(_69045_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8e92dd8_Ptr> _69513_ptr = _1a8e85b89_Ptr((*(_self_))._field_base.ptr());;
	if ((_69513_ptr != nullptr)) {
		if (_1a8e93922_IsUnsafe(_69513_ptr)) {
			_1a8e4e03c_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_69513_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a8e8e621_Sptr> _70313_sptr = _1a8e85903_Sptr((*_self_.alloc)._field_base);;
	if ((_70313_sptr != nullptr)) {
		return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_70313_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a8e900e4_Slc> _70713_slice = _1a8e866c3_Slc((*_self_.alloc)._field_base);;
	if ((_70713_slice != nullptr)) {
		return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_70713_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1a8e92415_Arr> _71113_array = _1a8e8643c_Arr((*_self_.alloc)._field_base);;
	if ((_71113_array != nullptr)) {
		return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_71113_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1a8d52a56_Enum> _71513_enm = _1a8e85e20_Enum((*_self_.alloc)._field_base);;
	if ((_71513_enm != nullptr)) {
		return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*((*_71513_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1a8e4e03c_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d68ae4__Size(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _72330_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _72345_fc) {
	if (((*((*(_72345_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_72330_e)).ptr(), (*((*((*(_72345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8e92415_Arr> _72813_arr = _1a8e8643c_Arr((*(_self_))._field_base.ptr());;
	if ((_72813_arr == nullptr)) {
		_1a8e4e03c_pushErr((*(_72330_e)).ptr(), (*((*(_72345_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _73313_constant = static__20a2b7992_NewI64(static_cast<jule::I64>((*(_72813_arr))._field_N));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a906682a_primInt, ._field_Model=jule::Any(_73313_constant, &__jule_any_type19), ._field_Constant=_73313_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d68ee0__Key(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _74129_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _74144_fc) {
	if (((*((*(_74144_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_74129_e)).ptr(), (*((*((*(_74144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8e91788_Map> _74613_m = _1a8e8720c_Map((*(_self_))._field_base.ptr());;
	if ((_74613_m == nullptr)) {
		_1a8e4e03c_pushErr((*(_74129_e)).ptr(), (*((*(_74144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_74129_e))))._field_s), &((*(_74613_m))._field_Key));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d693db__Value(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _75431_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _75446_fc) {
	if (((*((*(_75446_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_75431_e)).ptr(), (*((*((*(_75446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8e91788_Map> _75913_m = _1a8e8720c_Map((*(_self_))._field_base.ptr());;
	if ((_75913_m == nullptr)) {
		_1a8e4e03c_pushErr((*(_75431_e)).ptr(), (*((*(_75446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_75431_e))))._field_s), &((*(_75913_m))._field_Val));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d697d7__Fields(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _76732_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _76747_fc) {
	if (((*((*(_76747_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_76732_e)).ptr(), (*((*((*(_76747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _77213_s = _1a8e86be0_Struct((*(_self_))._field_base.ptr());;
	if ((_77213_s != nullptr)) {
		return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d59a4c_comptimeStructFields>(_1a8d59a4c_comptimeStructFields{._field_fields=(*_77213_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data7)}), });;
	};
	jule::Ptr<_1a8d52a56_Enum> _78213_enm = _1a8e85e20_Enum((*_self_.alloc)._field_base);;
	if ((_78213_enm != nullptr)) {
		return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d6079a_comptimeEnumFields>(_1a8d6079a_comptimeEnumFields{._field_fields=(*_78213_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data11)}), });;
	};
	_1a8e4e03c_pushErr((*(_76732_e)).ptr(), (*((*(_76747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d69bd3__Statics(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _79633_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _79648_fc) {
	if (((*((*(_79648_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_79633_e)).ptr(), (*((*((*(_79648_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _80113_s = _1a8e86be0_Struct((*(_self_))._field_base.ptr());;
	if ((_80113_s == nullptr)) {
		_1a8e4e03c_pushErr((*(_79633_e)).ptr(), (*((*(_79648_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d5cd08_comptimeStatics>(_1a8d5cd08_comptimeStatics{._field_fields=(*(_80113_s))._field_Statics}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data9)}), });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6a0ce__Public(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _81532_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _81547_fc) {
	if (((*((*(_81547_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_81532_e)).ptr(), (*((*((*(_81547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _82013_public = false;;
	{
		
		if ((_1a8e86be0_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac0dcd32:;
			{
				_82013_public=(*((*(_1a8e86be0_Struct((*_self_.alloc)._field_base)))._field_Decl))._field_Public;
			}
		}
		else if ((_1a8e86e76_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac0dde21:;
			{
				_82013_public=(*(_1a8e86e76_Trait((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1a8e85e20_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac0dde87:;
			{
				_82013_public=(*(_1a8e85e20_Enum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1a8e861a6_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ac0dca68:;
			{
				_82013_public=(*(_1a8e861a6_TypeEnum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else {
			_case_begin_1ac0dca02:;
			{
				_1a8e4e03c_pushErr((*(_81532_e)).ptr(), (*((*(_81547_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac0dc8c0:;
	};
	jule::Ptr<_20a2b7552_Const> _83413_constant = static__20a2b8025_NewBool(_82013_public);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_83413_constant, &__jule_any_type19), ._field_Constant=_83413_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6a4ca__Binded(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _84232_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _84247_fc) {
	if (((*((*(_84247_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_84232_e)).ptr(), (*((*((*(_84247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _84713_constant = static__20a2b8025_NewBool(_1a8e83d63_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_84713_constant, &__jule_any_type19), ._field_Constant=_84713_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6a8c6__Ordered(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _85529_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _85544_fc) {
	if (((*((*(_85544_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_85529_e)).ptr(), (*((*((*(_85544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _86013_constant = static__20a2b8025_NewBool(_1a8e84b33_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065b48_primStr, ._field_Model=jule::Any(_86013_constant, &__jule_any_type19), ._field_Constant=_86013_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6acc2__Comparable(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _86832_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _86847_fc) {
	if (((*((*(_86847_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_86832_e)).ptr(), (*((*((*(_86847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _87313_constant = static__20a2b8025_NewBool(_1a8e84616_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065b48_primStr, ._field_Model=jule::Any(_87313_constant, &__jule_any_type19), ._field_Constant=_87313_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6b1bd__Mutable(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _88129_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _88144_fc) {
	if (((*((*(_88144_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_88129_e)).ptr(), (*((*((*(_88144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _88613_constant = static__20a2b8025_NewBool(_1a8e8489c_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_88613_constant, &__jule_any_type19), ._field_Constant=_88613_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6b5b9__Types(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _89431_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _89446_fc) {
	if (((*((*(_89446_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_89431_e)).ptr(), (*((*((*(_89446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8e90bd8_Tuple> _89913_tup = _1a8e87493_Tup((*(_self_))._field_base.ptr());;
	if ((_89913_tup == nullptr)) {
		_1a8e4e03c_pushErr((*(_89431_e)).ptr(), (*((*(_89446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d655e6_comptimeTypeInfos> _90413_infos = jule::new_ptr<_1a8d655e6_comptimeTypeInfos>(_1a8d655e6_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1a8d66be1_comptimeTypeInfo>>::alloc(0LL, (*(_89913_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89913_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac103551:;
		if (it != expr_end) {
			jule::Ptr<_1a8e8301b_TypeKind> _90721_t = *it;
			{
				(*(_90413_infos))._field_types=jule::append((*_90413_infos.alloc)._field_types,jule::Slice<jule::Ptr<_1a8d66be1_comptimeTypeInfo>>::make({_1a8dc0b7e_pushComptimeTypeInfo((*((*((*(_89431_e))))._field_s))._field_meta.ptr(), &(_90721_t))}));
			}
			_iter_next_1ac103551:;
			++it;
			goto _iter_begin_1ac103551;
		}
		_iter_end_1ac103551:;
	};
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_90413_infos, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data14)}), });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6b9b5__Exceptional(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _91737_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _91752_fc) {
	if (((*((*(_91752_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_91737_e)).ptr(), (*((*((*(_91752_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _92213_f = _1a8e86959_Fn((*(_self_))._field_base.ptr());;
	if ((_92213_f == nullptr)) {
		_1a8e4e03c_pushErr((*(_91737_e)).ptr(), (*((*(_91752_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _92713_constant = static__20a2b8025_NewBool((((*(_92213_f))._field_Decl != nullptr) && (*(*(_92213_f))._field_Decl.alloc)._field_Exceptional));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_92713_constant, &__jule_any_type19), ._field_Constant=_92713_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6bdb1__CanNil(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _93532_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _93547_fc) {
	if (((*((*(_93547_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_93532_e)).ptr(), (*((*((*(_93547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _94013_constant = static__20a2b8025_NewBool(_1a8e84db9_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_94013_constant, &__jule_any_type19), ._field_Constant=_94013_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6c2ac__RC(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _94828_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _94843_fc) {
	if (((*((*(_94843_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_94828_e)).ptr(), (*((*((*(_94843_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _95313_constant = static__20a2b8025_NewBool(_1a8e85150_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_95313_constant, &__jule_any_type19), ._field_Constant=_95313_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6c6a8__Result(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _96132_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _96147_fc) {
	if (((*((*(_96147_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_96132_e)).ptr(), (*((*((*(_96147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _96613_f = _1a8e86959_Fn((*(_self_))._field_base.ptr());;
	if ((_96613_f == nullptr)) {
		_1a8e4e03c_pushErr((*(_96132_e)).ptr(), (*((*(_96147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96613_f))._field_Result == nullptr)) {
		return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &(_1a9065593_primVoid));;
	};
	return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &((*(_96613_f))._field_Result));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6caa4__Params(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _97732_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _97747_fc) {
	if (((*((*(_97747_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_97732_e)).ptr(), (*((*((*(_97747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _98213_f = _1a8e86959_Fn((*(_self_))._field_base.ptr());;
	if ((_98213_f == nullptr)) {
		_1a8e4e03c_pushErr((*(_97732_e)).ptr(), (*((*(_97747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d6402e_comptimeParams>(_1a8d6402e_comptimeParams{._field_params=(*(_98213_f))._field_Params}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data13)}), });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6cde5_subIdent(jule::Ptr<_1a8d66be1_comptimeTypeInfo> _self_, jule::Str* _99429_ident) {
	{
		auto &_match_expr{ (*(_99429_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1ac1186cb:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _99717_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1ac11a090, jule::Ptr<__jule_anon_1ac11a090_ctx>::make(__jule_anon_1ac11a090_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac11a090_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_99717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1ac118489:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _100417_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc4d2ab, jule::Ptr<__jule_anon_1abc4d2ab_ctx>::make(__jule_anon_1abc4d2ab_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc4d2ab_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_100417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1ac118500:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _101117_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc4ed07, jule::Ptr<__jule_anon_1abc4ed07_ctx>::make(__jule_anon_1abc4ed07_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc4ed07_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_101117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1ac118742:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _101817_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc51765, jule::Ptr<__jule_anon_1abc51765_ctx>::make(__jule_anon_1abc51765_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc51765_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_101817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1ac1187a8:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _102517_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc5359c, jule::Ptr<__jule_anon_1abc5359c_ctx>::make(__jule_anon_1abc5359c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc5359c_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_102517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1ac11881e:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _103217_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc55505, jule::Ptr<__jule_anon_1abc55505_ctx>::make(__jule_anon_1abc55505_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc55505_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_103217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1ac118885:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _103917_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc5745d, jule::Ptr<__jule_anon_1abc5745d_ctx>::make(__jule_anon_1abc5745d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc5745d_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_103917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1ac118962:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _104617_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc593b6, jule::Ptr<__jule_anon_1abc593b6_ctx>::make(__jule_anon_1abc593b6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc593b6_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_104617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1ac1189c8:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _105317_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc5b462, jule::Ptr<__jule_anon_1abc5b462_ctx>::make(__jule_anon_1abc5b462_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc5b462_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_105317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1ac118a3e:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _106017_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc5d3ba, jule::Ptr<__jule_anon_1abc5d3ba_ctx>::make(__jule_anon_1abc5d3ba_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc5d3ba_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_106017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1ac118ab6:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _106717_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc60323, jule::Ptr<__jule_anon_1abc60323_ctx>::make(__jule_anon_1abc60323_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc60323_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_106717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1ac118b3d:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _107417_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc6227b, jule::Ptr<__jule_anon_1abc6227b_ctx>::make(__jule_anon_1abc6227b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc6227b_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_107417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1ac118bb5:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _108117_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc641d4, jule::Ptr<__jule_anon_1abc641d4_ctx>::make(__jule_anon_1abc641d4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc641d4_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_108117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1ac118c3c:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _108817_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc6613c, jule::Ptr<__jule_anon_1abc6613c_ctx>::make(__jule_anon_1abc6613c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc6613c_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_108817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1ac118cb4:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _109517_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc68095, jule::Ptr<__jule_anon_1abc68095_ctx>::make(__jule_anon_1abc68095_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc68095_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_109517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1ac118d3b:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _110217_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc69eed, jule::Ptr<__jule_anon_1abc69eed_ctx>::make(__jule_anon_1abc69eed_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc69eed_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_110217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1ac118db3:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _110917_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc6be56, jule::Ptr<__jule_anon_1abc6be56_ctx>::make(__jule_anon_1abc6be56_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc6be56_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_110917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1ac118e3a:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _111617_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc6ddae, jule::Ptr<__jule_anon_1abc6ddae_ctx>::make(__jule_anon_1abc6ddae_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc6ddae_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_111617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1ac118eb2:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _112317_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc70d17, jule::Ptr<__jule_anon_1abc70d17_ctx>::make(__jule_anon_1abc70d17_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc70d17_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_112317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1ac119039:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _113017_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc72c70, jule::Ptr<__jule_anon_1abc72c70_ctx>::make(__jule_anon_1abc72c70_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc72c70_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_113017_method));;
			}
		}
		else {
			_case_begin_1ac116245:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac118269:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d66be1_comptimeTypeInfo _Src) {
	_Stream << _1a8d67065_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d6d577_Str(_1a8d6d203_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1a8d6d8b8_Equal(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e8301b_TypeKind> _114921_other) {
	return false;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6de18__Unwrap(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _115332_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _115347_fc) {
	if (((*((*(_115347_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_115332_e)).ptr(), (*((*((*(_115347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6e314__Type(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _116130_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _116145_fc) {
	if (((*((*(_116145_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_116130_e)).ptr(), (*((*((*(_116145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_116130_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6e710__Lvalue(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _116932_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _116947_fc) {
	if (((*((*(_116947_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_116932_e)).ptr(), (*((*((*(_116947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _117413_constant = static__20a2b8025_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_117413_constant, &__jule_any_type19), ._field_Constant=_117413_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d6eb0b__Mutable(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _118233_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _118248_fc) {
	if (((*((*(_118248_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_118233_e)).ptr(), (*((*((*(_118248_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _118713_constant = static__20a2b8025_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_118713_constant, &__jule_any_type19), ._field_Constant=_118713_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d70007__Const(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _119531_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _119546_fc) {
	if (((*((*(_119546_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_119531_e)).ptr(), (*((*((*(_119546_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _120013_constant = static__20a2b8025_NewBool(_1a8e4c6bc_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_120013_constant, &__jule_any_type19), ._field_Constant=_120013_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d70403__Field(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _120831_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _120846_fc) {
	if (((*((*(_120846_fc))))._field_Args.len() > 1LL)) {
		_1a8e4e03c_pushErr((*(_120831_e)).ptr(), (*((*((*(_120846_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _121313_s = _1a8e86be0_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_121313_s == nullptr)) {
		_1a8e4e03c_pushErr((*(_120831_e)).ptr(), (*((*(_120846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(*_self_.alloc)._field_data.alloc)._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8777899_Expr> _121813_arg = (*((*(_120846_fc))))._field_Args[0LL];;
	jule::Ptr<_1a8e4bcb5_Data> _121913_d = _1a8e6bc4c_evalExpr((*(_120831_e)), _121813_arg);;
	if ((_121913_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a8e4c6bc_IsConst(_121913_d.ptr())))) {
		_1a8e4e03c_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _12279_prim = _1a8e8566c_Prim((*(_121913_d))._field_Kind);;
	if (((_12279_prim == nullptr) || (!(_1a8e8e07c_IsStr(_12279_prim.ptr()))))) {
		_1a8e4e03c_pushErr((*(_120831_e)).ptr(), (*_121813_arg.alloc)._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(_121913_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12329_ident = _20a2b96ca_ReadStr((*(_121913_d))._field_Constant.ptr());;
	jule::Ptr<_1a8d29104_FieldIns> _123313_f = _1a8d2b05c_FindField(_121313_s.ptr(), _12329_ident);;
	if ((_123313_f == nullptr)) {
		_1a8e4e03c_pushErr((*(_120831_e)).ptr(), (*_121813_arg.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_121313_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12329_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121913_d=jule::new_ptr<_1a8e4bcb5_Data>((*(*_self_.alloc)._field_data.alloc));
	_121913_d=_1a8e65053_evalStructSubIdentField((*(_120831_e)).ptr(), &(_121913_d), &(_121313_s), &((*_121813_arg.alloc)._field_Token), &(_123313_f));
	return _1a8d748d0_buildComptimeValue(&(_121913_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d70744_subIdent(jule::Ptr<_1a8d6d203_comptimeValue> _self_, jule::Str* _124329_ident) {
	{
		auto &_match_expr{ (*(_124329_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1abc8bcde:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _124617_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc8d1ec, jule::Ptr<__jule_anon_1abc8d1ec_ctx>::make(__jule_anon_1abc8d1ec_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc8d1ec_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_124617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1abc8bd55:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _125317_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc90155, jule::Ptr<__jule_anon_1abc90155_ctx>::make(__jule_anon_1abc90155_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc90155_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_125317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1abc8bdbb:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _126017_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc920ad, jule::Ptr<__jule_anon_1abc920ad_ctx>::make(__jule_anon_1abc920ad_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc920ad_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_126017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1abc8be43:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _126717_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc94016, jule::Ptr<__jule_anon_1abc94016_ctx>::make(__jule_anon_1abc94016_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc94016_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_126717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1abc8beba:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _127417_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc95e6e, jule::Ptr<__jule_anon_1abc95e6e_ctx>::make(__jule_anon_1abc95e6e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc95e6e_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_127417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1abc8c141:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _128117_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abc97dc7, jule::Ptr<__jule_anon_1abc97dc7_ctx>::make(__jule_anon_1abc97dc7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc97dc7_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_128117_method));;
			}
		}
		else {
			_case_begin_1abc8ba8b:;
			{
				return nullptr;;
			}
		}
		_match_end_1abc8bbbd:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d6d203_comptimeValue _Src) {
	_Stream << _1a8d6d577_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d70dc6_Str(_1a8d70a52_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1a8d71217_Equal(jule::Ptr<_1a8d70a52_comptimeFiles> _self_, jule::Ptr<_1a8e8301b_TypeKind> _130021_other) {
	return false;;
}



inline void _1a8d7168a_ready(_1a8d70a52_comptimeFiles* _self_, jule::Ptr<_1a8de41ad_Var>* _130429_keyA, jule::Ptr<_1a8de41ad_Var>* _130446_keyB) {
	if (((*(_130429_keyA)) != nullptr)) {
		(*((*(_130429_keyA))))._field_Constant=true;
		(*((*(_130429_keyA))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		(*((*(_130429_keyA))))._field_Kind=(*(_1a9068b7e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130446_keyB)) != nullptr)) {
		(*((*(_130446_keyB))))._field_Constant=true;
		(*((*(_130446_keyB))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		(*((*(_130446_keyB))))._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d7214c_comptimeFile>(), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data18)})});
	};
}



inline void _1a8d71aa8_step(_1a8d70a52_comptimeFiles* _self_, jule::I32 _132523_i, jule::Ptr<_1a8de41ad_Var>* _132536_keyA, jule::Ptr<_1a8de41ad_Var>* _132553_keyB) {
	if (((*(_132536_keyA)) != nullptr)) {
		(*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Constant=static__20a2b7992_NewI64(static_cast<jule::I64>(_132523_i));
		(*(*(*((*(_132536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_132536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_132553_keyB)) != nullptr)) {
		(*((*((*((*((*(_132553_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1a8d7214c_comptimeFile>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_132523_i];
	};
}



inline jule::I32 _1a8d71d3e_len(_1a8d70a52_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d70a52_comptimeFiles _Src) {
	_Stream << _1a8d70dc6_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8d72702_Str(_1a8d7214c_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1a8d72a43_Equal(jule::Ptr<_1a8d7214c_comptimeFile> _self_, jule::Ptr<_1a8e8301b_TypeKind> _134921_other) {
	return false;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d72e50__Path(jule::Ptr<_1a8d7214c_comptimeFile> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _135330_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _135345_fc) {
	if (((*((*(_135345_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_135330_e)).ptr(), (*((*((*(_135345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _135813_constant = static__20a2b82de_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065b48_primStr, ._field_Model=jule::Any(_135813_constant, &__jule_any_type19), ._field_Constant=_135813_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d7334b__Name(jule::Ptr<_1a8d7214c_comptimeFile> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _136630_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _136645_fc) {
	if (((*((*(_136645_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_136630_e)).ptr(), (*((*((*(_136645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _137113_constant = static__20a2b82de_NewStr(_1a876415a_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065b48_primStr, ._field_Model=jule::Any(_137113_constant, &__jule_any_type19), ._field_Constant=_137113_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d73747__Dir(jule::Ptr<_1a8d7214c_comptimeFile> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _137929_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _137944_fc) {
	if (((*((*(_137944_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_137929_e)).ptr(), (*((*((*(_137944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20a2b7552_Const> _138413_constant = static__20a2b82de_NewStr(_1a8763dc4_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065b48_primStr, ._field_Model=jule::Any(_138413_constant, &__jule_any_type19), ._field_Constant=_138413_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d73a88_subIdent(jule::Ptr<_1a8d7214c_comptimeFile> _self_, jule::Str* _139229_ident) {
	{
		auto &_match_expr{ (*(_139229_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1abca9625:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _139517_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abcaa912, jule::Ptr<__jule_anon_1abcaa912_ctx>::make(__jule_anon_1abcaa912_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abcaa912_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_139517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1abca96be:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _140217_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abcac86a, jule::Ptr<__jule_anon_1abcac86a_ctx>::make(__jule_anon_1abcac86a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abcac86a_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_140217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1abca9746:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _140917_method = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>((void*)__jule_anon_1abcae7c3, jule::Ptr<__jule_anon_1abcae7c3_ctx>::make(__jule_anon_1abcae7c3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abcae7c3_ctx_handler), });;
				return _1a8d73e0c_buildAsComptimeMethodData(&(_140917_method));;
			}
		}
		else {
			_case_begin_1abca9339:;
			{
				return nullptr;;
			}
		}
		_match_end_1abca94b0:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d7214c_comptimeFile _Src) {
	_Stream << _1a8d72702_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool,jule::Ptr<_1a8dc1344_Sema>*,jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>*> _1a8d76a58_readyFn(jule::Ptr<_1a8d7665c_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1a8dc1344_Sema>*,jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>*>((void*)__jule_anon_1abcba306, jule::Ptr<__jule_anon_1abcba306_ctx>::make(__jule_anon_1abcba306_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abcba306_ctx_handler);;
}



inline jule::Bool _1a8d76cde_readyFi(jule::Ptr<_1a8d7665c_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a8dce819_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1a8d76a58_readyFn(_self_)));;
}



inline jule::Bool _1a8d77075_readySi(jule::Ptr<_1a8d7665c_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a8d76a58_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1a8d7730b_ready(jule::Ptr<_1a8d7665c_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1a8d76cde_readyFi(_self_);;
	};
	return _1a8d77075_readySi(_self_);;
}



inline jule::Bool _1a8d77592_check(jule::Ptr<_1a8d7665c_constraintChecker> _self_) {
	if ((!(_1a8d7730b_ready(_self_)))) {
		return false;;
	};
	_julec_label_1abcc99a8:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcca37c:;
		if (it != expr_end) {
			jule::I32 _12014_i = it - expr->begin();
			jule::Ptr<_1a8e81635_InsGeneric> _12021_g = *it;
			{
				if (((*(_12021_g))._field_Constraint == nullptr)) {
					goto _iter_next_1abcca37c;
				};
				{
					auto expr = &((*_12021_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abccb559:;
					if (it != expr_end) {
						jule::Ptr<_1a8e8301b_TypeKind> _12425_c2 = *it;
						{
							jule::Ptr<_1a8e8aae5_Prim> _12521_prim = _1a8e8566c_Prim(_12425_c2.ptr());;
							if (((_12521_prim != nullptr) && _1a8e8b71c_IsConstraint(_12521_prim))) {
								if (_1a8d77d23_matchConstraint(&((*_12521_prim.alloc)._field_Kind), &((*_12021_g.alloc)._field_Kind))) {
									goto _iter_next_1abcca37c;
								};
								goto _iter_next_1abccb559;
							};
							if (_1a8e83725_Equal(_12425_c2, (*_12021_g.alloc)._field_Kind)) {
								goto _iter_next_1abcca37c;
							};
						}
						_iter_next_1abccb559:;
						++it;
						goto _iter_begin_1abccb559;
					}
					_iter_end_1abccb559:;
				};
				_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_12021_g.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*_self_.alloc)._field_genericsD[_12014_i]))._field_Ident, &__jule_any_type4),jule::Any(_1a8d7795a_toStrConstraints(_12021_g), &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1abcca37c:;
			++it;
			_12014_i++;
			goto _iter_begin_1abcca37c;
		}
		_iter_end_1abcca37c:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d7665c_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8d78d79_IsTraitImpl(_1a8d789b1_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1a8d79110_IsStructImpl(_1a8d789b1_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d789b1_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d7de17_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d7e335_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d7e632_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d7ea50_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d7ed4c_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d80303_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d80c4e_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d810d4_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d814ad_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d817aa_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d81b84_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d8205d_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d82514_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d829ba_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "Decls:" << _Src._field_Decls << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d8312a_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d83b53_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d8434b_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d846e2_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d84d52_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d853d5_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d8686a_SelectPackage(_1a8d863c5_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> _46032_selector) {
	return _1a8dc17d9_SelectPackage((*(_self_))._field_s.ptr(), _46032_selector);;
}



inline jule::Ptr<_1a8de41ad_Var> _1a8d86c66_FindVar(_1a8d863c5_scopeChecker* _self_, jule::Str _47126_ident, jule::Bool _47138_binded) {
	if ((!(_47138_binded))) {
		jule::Ptr<_1a8de41ad_Var> _47317_v = _1a8d89d46_findVar(_self_, _47126_ident);;
		if ((_47317_v != nullptr)) {
			return _47317_v;;
		};
	};
	return _1a8dc1bd5_FindVar((*(_self_))._field_s.ptr(), _47126_ident, _47138_binded);;
}



inline jule::Ptr<_1a8e82229_TypeAlias> _1a8d87162_FindTypeAlias(_1a8d863c5_scopeChecker* _self_, jule::Str _48832_ident, jule::Bool _48844_binded) {
	;
	jule::Ptr<_1a8e82229_TypeAlias> _49113_ta = _1a8e495ba_findTypeAlias((*(_self_))._field_table.ptr(), &(_48832_ident), _48844_binded, true);;
	if ((_49113_ta != nullptr)) {
		return _49113_ta;;
	};
	jule::Ptr<_1a8d863c5_scopeChecker> _49613_parent = (*(_self_))._field_parent;;
	while ((_49613_parent != nullptr)) {
		{
			_49113_ta=_1a8e495ba_findTypeAlias((*_49613_parent.alloc)._field_table, &(_48832_ident), _48844_binded, true);
			if ((_49113_ta != nullptr)) {
				return _49113_ta;;
			};
			_49613_parent=(*_49613_parent.alloc)._field_parent;
		}
	_iter_next_1abd1a488:;
	}
	_iter_end_1abd1a488:;;
	return _1a8dc20d1_FindTypeAlias((*(_self_))._field_s.ptr(), _48832_ident, _48844_binded);;
}



inline jule::Ptr<_1a8d26e26_Struct> _1a8d8755d_FindStruct(_1a8d863c5_scopeChecker* _self_, jule::Str _51329_ident, jule::Bool _51341_binded) {
	return _1a8dc24cc_FindStruct((*(_self_))._field_s.ptr(), _51329_ident, _51341_binded);;
}



inline jule::Ptr<_1a8d3be91_Fn> _1a8d87959_FindFn(_1a8d863c5_scopeChecker* _self_, jule::Str _52225_ident, jule::Bool _52237_binded) {
	return _1a8dc28c8_FindFn((*(_self_))._field_s.ptr(), _52225_ident, _52237_binded);;
}



inline jule::Ptr<_1a8d5034a_Trait> _1a8d87c9a_FindTrait(_1a8d863c5_scopeChecker* _self_, jule::Str _53128_ident) {
	return _1a8dc2c19_FindTrait((*(_self_))._field_s.ptr(), _53128_ident);;
}



inline jule::Ptr<_1a8d52a56_Enum> _1a8d880db_FindEnum(_1a8d863c5_scopeChecker* _self_, jule::Str _54027_ident) {
	return _1a8dc305a_FindEnum((*(_self_))._field_s.ptr(), _54027_ident);;
}



inline jule::Ptr<_1a8d54261_TypeEnum> _1a8d8842c_FindTypeEnum(_1a8d863c5_scopeChecker* _self_, jule::Str _54931_ident) {
	return _1a8dc339b_FindTypeEnum((*(_self_))._field_s.ptr(), _54931_ident);;
}



inline jule::Bool _1a8d8877e_isUnsafe(jule::Ptr<_1a8d863c5_scopeChecker> _self_) {
	jule::Ptr<_1a8d863c5_scopeChecker> _55713_scope = _self_;;
	_julec_label_1abd20180:;
	if ((*((*(_55713_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_55713_scope.alloc)._field_parent != nullptr)) {
		_55713_scope=(*_55713_scope.alloc)._field_parent;
		goto _julec_label_1abd20180;
	};
	return false;;
}



inline jule::Bool _1a8d88a15_isRoot(_1a8d863c5_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1a8d88c13_stop(_1a8d863c5_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1a8d88e99_stopped(_1a8d863c5_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1a8d89230_isDeferred(jule::Ptr<_1a8d863c5_scopeChecker> _self_) {
	jule::Ptr<_1a8d863c5_scopeChecker> _59013_scope = _self_;;
	_julec_label_1abd234c4:;
	if ((*((*(_59013_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_59013_scope.alloc)._field_parent != nullptr)) {
		_59013_scope=(*_59013_scope.alloc)._field_parent;
		goto _julec_label_1abd234c4;
	};
	return false;;
}



inline void _1a8d894d8_pushCaptured(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8de41ad_Var>* _61037_v) {
	jule::Ptr<_1a8d863c5_scopeChecker> _61113_sc = _self_;;
	for (;;) {
		{
			if (((*(_61113_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*_61113_sc.alloc)._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abd263d9:;
					if (it != expr_end) {
						jule::Ptr<_1a8de41ad_Var> _61424_cv = *it;
						{
							if ((_61424_cv == (*(_61037_v)))) {
								goto _julec_label_1abd27198;
							};
						}
						_iter_next_1abd263d9:;
						++it;
						goto _iter_begin_1abd263d9;
					}
					_iter_end_1abd263d9:;
				};
				(*(*_61113_sc.alloc)._field_captured.alloc)=jule::append((*(*_61113_sc.alloc)._field_captured.alloc),jule::Slice<jule::Ptr<_1a8de41ad_Var>>::make({(*(_61037_v))}));
				_julec_label_1abd27198:;
			};
			if (((*_61113_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1abd24294;
			};
			_61113_sc=(*_61113_sc.alloc)._field_parent;
		}
	_iter_next_1abd24294:;
	}
	_iter_end_1abd24294:;;
}



inline jule::Ptr<_1a8d863c5_scopeChecker> _1a8d8976e_getRoot(jule::Ptr<_1a8d863c5_scopeChecker> _self_) {
	jule::Ptr<_1a8d863c5_scopeChecker> _63213_root = _self_;;
	while ((((*(_63213_root))._field_parent != nullptr) && ((*_63213_root.alloc)._field_owner == nullptr))) {
		{
			_63213_root=(*_63213_root.alloc)._field_parent;
		}
	_iter_next_1abd29211:;
	}
	_iter_end_1abd29211:;;
	return _63213_root;;
}



inline jule::Ptr<_1a8d863c5_scopeChecker> _1a8d89a05_getHardRoot(jule::Ptr<_1a8d863c5_scopeChecker> _self_) {
	jule::Ptr<_1a8d863c5_scopeChecker> _64213_root = _self_;;
	while (((*(_64213_root))._field_parent != nullptr)) {
		{
			_64213_root=(*_64213_root.alloc)._field_parent;
		}
	_iter_next_1abd2a542:;
	}
	_iter_end_1abd2a542:;;
	return _64213_root;;
}



inline jule::Ptr<_1a8de41ad_Var> _1a8d89d46_findVar(_1a8d863c5_scopeChecker* _self_, jule::Str _65026_ident) {
	;
	;
	jule::Ptr<_1a8de41ad_Var> _65313_v = _1a8e49114_findVar((*(_self_))._field_table.ptr(), &(_65026_ident), false, true);;
	if ((_65313_v != nullptr)) {
		return _65313_v;;
	};
	jule::Ptr<_1a8d863c5_scopeChecker> _65713_parent = (*(_self_))._field_parent;;
	while ((_65713_parent != nullptr)) {
		{
			_65313_v=_1a8e49114_findVar((*_65713_parent.alloc)._field_table, &(_65026_ident), false, true);
			if ((_65313_v != nullptr)) {
				return _65313_v;;
			};
			_65713_parent=(*_65713_parent.alloc)._field_parent;
		}
	_iter_next_1abd2c500:;
	}
	_iter_end_1abd2c500:;;
	return nullptr;;
}



inline jule::Ptr<_1a8d817aa_Label> _1a8d8a187_findLabel(_1a8d863c5_scopeChecker* _self_, jule::Str* _67129_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd2e535:;
		if (it != expr_end) {
			jule::Any _67221_st = *it;
			{
				{
					auto &_match_expr{ _67221_st };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1abd2ed0a:;
						{
							jule::Ptr<_1a8d817aa_Label> _67521_label = _67221_st.unsafe_cast_ptr<_1a8d817aa_Label>();;
							if (((*(_67521_label))._field_Ident == (*(_67129_ident)))) {
								return _67521_label;;
							};
						}
					}
					_match_end_1abd2eca5:;
				};
			}
			_iter_next_1abd2e535:;
			++it;
			goto _iter_begin_1abd2e535;
		}
		_iter_end_1abd2e535:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d84d52_scopeLabel> _1a8d8a4c8_findLabelScope(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Str* _68735_ident) {
	jule::Ptr<_1a8d84d52_scopeLabel> _68813_label = _1a8d8a819_findLabelAll(_self_.ptr(), _68735_ident);;
	if (((_68813_label != nullptr) && ((*_68813_label.alloc)._field_scope == _self_))) {
		return _68813_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d84d52_scopeLabel> _1a8d8a819_findLabelAll(_1a8d863c5_scopeChecker* _self_, jule::Str* _69932_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd323c3:;
		if (it != expr_end) {
			jule::Ptr<_1a8d84d52_scopeLabel> _70021_lbl = *it;
			{
				if (((*((*(_70021_lbl))._field_label))._field_Ident == (*(_69932_ident)))) {
					return _70021_lbl;;
				};
			}
			_iter_next_1abd323c3:;
			++it;
			goto _iter_begin_1abd323c3;
		}
		_iter_end_1abd323c3:;
	};
	return nullptr;;
}



inline jule::Bool _1a8d8ac15_isDuplicatedIdent(_1a8d863c5_scopeChecker* _self_, jule::Uintptr _71136_itself, jule::Str* _71154_ident) {
	jule::Ptr<_1a8de41ad_Var> _7129_v = _1a8d86c66_FindVar(_self_, (*(_71154_ident)), false);;
	if (((_7129_v != nullptr) && (static_cast<jule::Uintptr>(_7129_v) != _71136_itself))) {
		if (((*_7129_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7129_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1a8dc37a8_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_1a8e82229_TypeAlias> _7209_ta = _1a8d87162_FindTypeAlias(_self_, (*(_71154_ident)), false);;
	if (((_7209_ta != nullptr) && (static_cast<jule::Uintptr>(_7209_ta) != _71136_itself))) {
		if (((*_7209_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7209_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1a8dc37a8_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _1a8d8aebd_checkVarDecl(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a87863d0_VarDecl> _73136_decl) {
	jule::Ptr<_1a8de41ad_Var> _73213_v = _1a8d484b9_buildVar(_73136_decl);;
	(*(_73213_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a8de41ad_Var>>::make({_73213_v}));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_73213_v, &__jule_any_type8)}));
	});;
	if (_1a8d8ac15_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_73213_v), &((*_73213_v.alloc)._field_Ident))) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), (*_73213_v.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_73213_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a8d88c13_stop(_self_);
		return;;
	};
	_1a8dd7503_checkVarDecl((*_self_.alloc)._field_s, &(_73213_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0));
	if (((!(_1a8de481d_IsTypeInferred(_73213_v))) && (((*_73213_v.alloc)._field_Kind == nullptr) || ((*((*_73213_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1a8ddac98_evalVarValue((*_self_.alloc)._field_s, &(_73213_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0));
	if (((!(_1a8de4587_IsInitialized(_73213_v))) || ((*((*_73213_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1a8d92238_removeInteriorMutRisk(_self_, &((*(*_73213_v.alloc)._field_Value.alloc)._field_Data));
	_1a8dda935_checkVarValue((*_self_.alloc)._field_s, &(_73213_v));
}



inline void _1a8d8b276_checkTypeAlias(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8e82229_TypeAlias>* _76239_ta) {
	if (_1a8d8ac15_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_76239_ta))), &((*((*(_76239_ta))))._field_Ident))) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_76239_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_76239_ta))))._field_Ident, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a8d88c13_stop(_self_);
		return;;
	};
	_1a8dd1585_checkTypeAliasDecl((*_self_.alloc)._field_s, _76239_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*_self_.alloc)._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>::make({(*(_76239_ta))}));
	if (((*((*((*(_76239_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1a8d88c13_stop(_self_);
	};
}



inline void _1a8d8b52e_checkTypeAliasDecl(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a878a082_TypeAliasDecl> _77842_decl) {
	jule::Ptr<_1a8e82229_TypeAlias> _77913_ta = _1a8d45098_buildTypeAlias(_77842_decl);;
	_1a8d8b276_checkTypeAlias(_self_, &(_77913_ta));
}



inline jule::Ptr<_1a8d7de17_Scope> _1a8d8b7b5_getChild(_1a8d863c5_scopeChecker* _self_) {
	return jule::new_ptr<_1a8d7de17_Scope>(_1a8d7de17_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1a8d8bbd3_checkChildSsc(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8783586_ScopeTree>* _78938_tree, jule::Ptr<_1a8d7de17_Scope>* _78961_s, jule::Ptr<_1a8d863c5_scopeChecker>* _78977_ssc) {
	(*((*(_78977_ssc))))._field_parent=_self_;
	_1a8d981c8_check((*(_78977_ssc)), _78938_tree, _78961_s);
}



inline jule::Ptr<_1a8d7de17_Scope> _1a8d8c0ce_checkChildSc(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8783586_ScopeTree>* _79437_tree, jule::Ptr<_1a8d863c5_scopeChecker>* _79460_ssc) {
	jule::Ptr<_1a8d7de17_Scope> _79513_s = _1a8d8b7b5_getChild(_self_.ptr());;
	_1a8d8bbd3_checkChildSsc(_self_, _79437_tree, &(_79513_s), _79460_ssc);
	return _79513_s;;
}



inline jule::Ptr<_1a8d7de17_Scope> _1a8d8c420_checkChild(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8783586_ScopeTree>* _80035_tree) {
	jule::Ptr<_1a8d863c5_scopeChecker> _80113_ssc = _1a8d9845e_newChildChecker(_self_);;
	return _1a8d8c0ce_checkChildSc(_self_, _80035_tree, &(_80113_ssc));;
}



inline void _1a8d8c6c8_checkAnonScope(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8783586_ScopeTree> _80538_tree) {
	jule::Ptr<_1a8d7de17_Scope> _80613_s = _1a8d8c420_checkChild(_self_, &(_80538_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_80613_s, &__jule_any_type21)}));
}



inline void _1a8d8ca3b_processErrorCall(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8d3792b_BuiltinErrorCallExprModel>* _81041_m, jule::Ptr<_1a875ce89_Token> _81072_err) {
	if (_1a8d89230_isDeferred(_self_)) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), _81072_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a8d863c5_scopeChecker> _81513_root = _1a8d8976e_getRoot(_self_);;
	if ((!((*((*((*(_81513_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, _81072_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_81041_m))))._field_Func=(*_81513_root.alloc)._field_owner;
}



inline void _1a8d8cce4_checkExpr(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8777899_Expr> _82333_expr) {
	jule::Ptr<_1a8e4d9dc_Eval> _82413_eval = _1a8dcb42b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0));;
	(*(_82413_eval))._field_ignored=true;
	jule::Ptr<_1a8e4bcb5_Data> _82613_d = _1a8e6bc4c_evalExpr(_82413_eval, _82333_expr);;
	if (((_82613_d == nullptr) || ((*(_82613_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_82613_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1abd4eae9:;
			{
				jule::Ptr<_1a8d3792b_BuiltinErrorCallExprModel> _83517_m = (*(_82613_d))._field_Model.unsafe_cast_ptr<_1a8d3792b_BuiltinErrorCallExprModel>();;
				_1a8d8ca3b_processErrorCall(_self_, &(_83517_m), (*(_82333_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_82613_d, &__jule_any_type23)}));
			}
		}
		else if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33) {
			_case_begin_1abd50226:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_82613_d, &__jule_any_type23)}));
			}
		}
		else {
			_case_begin_1abd501b0:;
			{
				_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*(_82333_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1abd5015a:;
	};
}



inline jule::Ptr<_1a8d7e335_If> _1a8d8d135_checkIf(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8788eb5_If> _85431_i) {
	jule::Ptr<_1a8d7de17_Scope> _85513_s = _1a8d8c420_checkChild(_self_, &((*(_85431_i))._field_Scope));;
	jule::Ptr<_1a8e4bcb5_Data> _85713_d = _1a8e6bc4c_evalExpr(_1a8dcb42b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)), (*_85431_i.alloc)._field_Expr);;
	if ((_85713_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _86213_prim = _1a8e8566c_Prim((*(_85713_d))._field_Kind.ptr());;
	if (((_86213_prim == nullptr) || (!(_1a8e8dce6_IsBool(_86213_prim.ptr()))))) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*((*_85431_i.alloc)._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a8d7e335_If>(_1a8d7e335_If{._field_Expr=(*(_85713_d))._field_Model, ._field_Scope=_85513_s});;
}



inline jule::Ptr<_1a8d7e632_Else> _1a8d8d476_checkElse(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a878938e_Else> _87433_e) {
	return jule::new_ptr<_1a8d7e632_Else>(_1a8d7e632_Else{._field_Scope=_1a8d8c420_checkChild(_self_, &((*(_87433_e))._field_Scope))});;
}



inline void _1a8d8d72e_checkConditional(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8789845_Conditional> _88040_conditional) {
	jule::Ptr<_1a8d7ea50_Conditional> _88113_c = jule::new_ptr<_1a8d7ea50_Conditional>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_88113_c, &__jule_any_type34)}));
	(*_88113_c.alloc)._field_Elifs=jule::Slice<jule::Ptr<_1a8d7e335_If>>::alloc(0LL, ((*(_88040_conditional))._field_Tail.len() + 1LL));
	(*_88113_c.alloc)._field_Elifs=jule::append((*_88113_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1a8d7e335_If>>::make({_1a8d8d135_checkIf(_self_, (*_88040_conditional.alloc)._field_Head)}));
	{
		auto expr = &((*_88040_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd5b809:;
		if (it != expr_end) {
			jule::Ptr<_1a8788eb5_If> _88721_elif = *it;
			{
				(*_88113_c.alloc)._field_Elifs=jule::append((*_88113_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1a8d7e335_If>>::make({_1a8d8d135_checkIf(_self_, _88721_elif)}));
			}
			_iter_next_1abd5b809:;
			++it;
			goto _iter_begin_1abd5b809;
		}
		_iter_end_1abd5b809:;
	};
	if (((*_88040_conditional.alloc)._field_Default != nullptr)) {
		(*_88113_c.alloc)._field_Default=_1a8d8d476_checkElse(_self_, (*_88040_conditional.alloc)._field_Default);
	};
}



inline void _1a8d8dc07_checkIterScopeSsc(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Uintptr _89637_it, jule::Ptr<_1a8783586_ScopeTree> _89654_tree, jule::Ptr<_1a8d7de17_Scope>* _89677_s, jule::Ptr<_1a8d863c5_scopeChecker> _89692_ssc) {
	(*(_89692_ssc))._field_it=_89637_it;
	_1a8d8bbd3_checkChildSsc(_self_, &(_89654_tree), _89677_s, &(_89692_ssc));
}



inline jule::Ptr<_1a8d7de17_Scope> _1a8d8e1ad_checkIterScopeSc(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Uintptr _90136_it, jule::Ptr<_1a8783586_ScopeTree> _90153_tree, jule::Ptr<_1a8d863c5_scopeChecker> _90175_ssc) {
	jule::Ptr<_1a8d7de17_Scope> _90213_scope = _1a8d8b7b5_getChild(_self_.ptr());;
	_1a8d8dc07_checkIterScopeSsc(_self_, _90136_it, _90153_tree, &(_90213_scope), _90175_ssc);
	return _90213_scope;;
}



inline jule::Ptr<_1a8d7de17_Scope> _1a8d8e5a9_checkIterScope(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Uintptr _90734_it, jule::Ptr<_1a8783586_ScopeTree>* _90752_tree) {
	jule::Ptr<_1a8d863c5_scopeChecker> _90813_ssc = _1a8d9845e_newChildChecker(_self_);;
	return _1a8d8e1ad_checkIterScopeSc(_self_, _90734_it, (*(_90752_tree)), _90813_ssc);;
}



inline void _1a8d8e862_checkInfIter(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8787029_Iter>* _91237_it) {
	jule::Ptr<_1a8d7ed4c_InfIter> _91313_kind = jule::new_ptr<_1a8d7ed4c_InfIter>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_91313_kind, &__jule_any_type35)}));
	(*_91313_kind.alloc)._field_Scope=_1a8d8e5a9_checkIterScope(_self_, static_cast<jule::Uintptr>(_91313_kind), &((*((*(_91237_it))))._field_Scope));
}



inline void _1a8d8eb1a_checkWhileIter(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8787029_Iter>* _91839_it) {
	jule::Ptr<_1a8787854_WhileKind> _91913_wh = (*((*(_91839_it))))._field_Kind.cast_ptr<_1a8787854_WhileKind>(&__jule_any_type36);;
	if ((((*(_91913_wh))._field_Expr == nullptr) && ((*_91913_wh.alloc)._field_Next == nullptr))) {
		_1a8d8e862_checkInfIter(_self_, _91839_it);
		return;;
	};
	jule::Ptr<_1a8d80303_WhileIter> _92513_kind = jule::new_ptr<_1a8d80303_WhileIter>();;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_92513_kind, &__jule_any_type37)}));
	(*_92513_kind.alloc)._field_Scope=_1a8d8e5a9_checkIterScope(_self_, static_cast<jule::Uintptr>(_92513_kind), &((*((*(_91839_it))))._field_Scope));
	if (((*_91913_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1a8e4bcb5_Data> _93017_d = _1a8e6bc4c_evalExpr(_1a8dcb42b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)), (*_91913_wh.alloc)._field_Expr);;
		if ((_93017_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a8e8aae5_Prim> _93513_prim = _1a8e8566c_Prim((*(_93017_d))._field_Kind.ptr());;
		if ((_93513_prim == nullptr)) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*((*(_91839_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a8e8dce6_IsBool(_93513_prim.ptr())))) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*((*(_91839_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*_92513_kind.alloc)._field_Expr=(*(_93017_d))._field_Model;
	};
	if (_1a8787bb7_IsWhileNext(_91913_wh)) {
		if ((!(_1a8d7d39a_isValidAstStForNextSt(&((*_91913_wh.alloc)._field_Next))))) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_91913_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _95513_n = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len();;
		_1a8d96d0e_checkNode(_self_, &((*_91913_wh.alloc)._field_Next));
		if ((_95513_n < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _95821_st = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[_95513_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _95513_n);;
			if ((!(_1a8d7d664_isValidStForNextSt(&(_95821_st))))) {
				_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_91913_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*_92513_kind.alloc)._field_Next=_95821_st;
		};
	};
}



inline void _1a8d90038_checkComptimeRangeIter(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8787029_Iter>* _96847_it, jule::Ptr<_1a8d80c4e_RangeIter>* _96863_kind, jule::Ptr<_1a8e4bcb5_Data>* _96886_d) {
	if (((*((*(_96863_kind))))._field_KeyA != nullptr)) {
		if (((!(_1a8dc37a8_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1a8d8ac15_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_96863_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*(*((*(_96863_kind))))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96863_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_96863_kind))))._field_KeyB != nullptr)) {
		if (((!(_1a8dc37a8_isFlag((*_self_.alloc)._field_s, static_cast<jule::I32>(1LL)))) && _1a8d8ac15_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_96863_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*(*((*(_96863_kind))))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96863_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1a878825b_RangeKind> _98213_rang = (*((*(_96847_it))))._field_Kind.cast_ptr<_1a878825b_RangeKind>(&__jule_any_type38);;
	_1a8d98a14_makeComptimeRange(_96886_d);
	if ((*((*(_96886_d))))._field_Decl) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*((*(_98213_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_96886_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	_1a8e41b78_rangeChecker _98913_rc = _1a8e41b78_rangeChecker{._field_sc=_self_, ._field_rang=_98213_rang, ._field_Kind=(*(_96863_kind)), ._field_d=(*(_96886_d))};;
	jule::Bool _9959_ok = _1a8e43b8b_check(&_98913_rc);;
	if ((!(_9959_ok))) {
		return;;
	};
	jule::Ptr<_1a8d573b8_comptimeRange> _100013_comptime = _1a8e88a16_comptimeRange((*((*(_96886_d))))._field_Kind);;
	((_1a8d57198_comptimeRangeKindMptrData*)(*(_100013_comptime))._field_kind.safe_type())->_1a8d56890_ready((*(_100013_comptime))._field_kind.data, &((*((*(_96863_kind))))._field_KeyA), &((*((*(_96863_kind))))._field_KeyB));
	jule::I32 _100213_i = 0LL;;
	jule::I32 _10039_errors = (*(*_self_.alloc)._field_s.alloc)._field_errors.len();;
	for (; (_100213_i < ((_1a8d57198_comptimeRangeKindMptrData*)(*_100013_comptime.alloc)._field_kind.safe_type())->_1a8d57044_len((*_100013_comptime.alloc)._field_kind.data)); (_100213_i)++) {
		{
			jule::Ptr<_1a8d863c5_scopeChecker> _100517_ssc = _1a8d9845e_newChildChecker(_self_);;
			jule::Ptr<_1a8d7de17_Scope> _100617_scope = _1a8d8b7b5_getChild(_self_);;
			if (((*((*(_96863_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_96863_kind))))._field_KeyA.alloc)._field_Scope=_100617_scope;
				(*((*(_100517_ssc))._field_table))._field_Vars=jule::append((*(*_100517_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a8de41ad_Var>>::make({(*((*(_96863_kind))))._field_KeyA}));
			};
			if (((*((*(_96863_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_96863_kind))))._field_KeyB.alloc)._field_Scope=_100617_scope;
				(*(*_100517_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_100517_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a8de41ad_Var>>::make({(*((*(_96863_kind))))._field_KeyB}));
			};
			((_1a8d57198_comptimeRangeKindMptrData*)(*_100013_comptime.alloc)._field_kind.safe_type())->_1a8d56cad_step((*_100013_comptime.alloc)._field_kind.data, _100213_i, &((*((*(_96863_kind))))._field_KeyA), &((*((*(_96863_kind))))._field_KeyB));
			_1a8d8bbd3_checkChildSsc(_self_, &((*((*(_96847_it))))._field_Scope), &(_100617_scope), &(_100517_ssc));
			if ((_10039_errors != (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1abd7c077;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_100617_scope, &__jule_any_type21)}));
		}
	_iter_next_1abd7c077:;
	}
	_iter_end_1abd7c077:;;
}



inline void _1a8d902e1_checkRangeIter(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8787029_Iter>* _102539_it) {
	jule::Ptr<_1a878825b_RangeKind> _102613_rang = (*((*(_102539_it))))._field_Kind.cast_ptr<_1a878825b_RangeKind>(&__jule_any_type38);;
	jule::Ptr<_1a8e4bcb5_Data> _102813_d = _1a8e6b90b_evalExpr1(_1a8dcb42b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)), (*(_102613_rang))._field_Expr);;
	if ((_102813_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a8d80c4e_RangeIter> _103313_kind = jule::new_ptr<_1a8d80c4e_RangeIter>(_1a8d80c4e_RangeIter{._field_Expr=_102813_d, });;
	if ((*((*(_102539_it))))._field_Comptime) {
		_1a8d90038_checkComptimeRangeIter(_self_, _102539_it, &(_103313_kind), &(_102813_d));
		return;;
	};
	if (_1a8e87729_comptime((*(_102813_d))._field_Kind.ptr())) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*((*_102613_rang.alloc)._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1a8e41b78_rangeChecker _104713_rc = _1a8e41b78_rangeChecker{._field_sc=_self_, ._field_rang=_102613_rang, ._field_Kind=_103313_kind, ._field_d=_102813_d};;
	jule::Bool _10539_ok = _1a8e43b8b_check(&_104713_rc);;
	if ((!(_10539_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_103313_kind, &__jule_any_type39)}));
	jule::Ptr<_1a8d863c5_scopeChecker> _106013_ssc = _1a8d9845e_newChildChecker(_self_);;
	jule::Ptr<_1a8d7de17_Scope> _106113_scope = _1a8d8b7b5_getChild(_self_);;
	if (((*(_103313_kind))._field_KeyA != nullptr)) {
		if (((!(_1a8dc37a8_isFlag((*_self_.alloc)._field_s, static_cast<jule::I32>(1LL)))) && _1a8d8ac15_isDuplicatedIdent(_self_, 0LLU, &((*(*_103313_kind.alloc)._field_KeyA.alloc)._field_Ident)))) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*(*_103313_kind.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_103313_kind.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_103313_kind.alloc)._field_KeyA.alloc)._field_Scope=_106113_scope;
		(*((*(_106013_ssc))._field_table))._field_Vars=jule::append((*(*_106013_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a8de41ad_Var>>::make({(*_103313_kind.alloc)._field_KeyA}));
	};
	if (((*_103313_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1a8dc37a8_isFlag((*_self_.alloc)._field_s, static_cast<jule::I32>(1LL)))) && _1a8d8ac15_isDuplicatedIdent(_self_, 0LLU, &((*(*_103313_kind.alloc)._field_KeyB.alloc)._field_Ident)))) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*(*_103313_kind.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_103313_kind.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_103313_kind.alloc)._field_KeyB.alloc)._field_Scope=_106113_scope;
		(*(*_106013_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_106013_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a8de41ad_Var>>::make({(*_103313_kind.alloc)._field_KeyB}));
	};
	_1a8d8dc07_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_103313_kind), (*((*(_102539_it))))._field_Scope, &(_106113_scope), _106013_ssc);
	(*_103313_kind.alloc)._field_Scope=_106113_scope;
}



inline void _1a8d90599_checkIter(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8787029_Iter> _108533_it) {
	if (_1a878738c_IsInf(_108533_it.ptr())) {
		if ((*_108533_it.alloc)._field_Comptime) {
			_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*_108533_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1a8d8e862_checkInfIter(_self_, &(_108533_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_108533_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1abd94b72:;
			{
				if ((*_108533_it.alloc)._field_Comptime) {
					_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_108533_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1a8d8eb1a_checkWhileIter(_self_, &(_108533_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1abd96404:;
			{
				_1a8d902e1_checkRangeIter(_self_, &(_108533_it));
			}
		}
		else {
			_case_begin_1abd95e09:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1abd95da4:;
	};
}



inline jule::Bool _1a8d908da_checkValidContLabel(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Uintptr _110939_it) {
	jule::Ptr<_1a8d863c5_scopeChecker> _111013_scope = _self_;;
	_julec_label_1abd983e5:;
	if (((*(_111013_scope))._field_it == _110939_it)) {
		return true;;
	};
	if (((*_111013_scope.alloc)._field_parent != nullptr)) {
		_111013_scope=(*_111013_scope.alloc)._field_parent;
		goto _julec_label_1abd983e5;
	};
	return false;;
}



inline jule::Bool _1a8d90c2b_checkValidBreakLabel(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Uintptr _112540_ptr) {
	jule::Ptr<_1a8d863c5_scopeChecker> _112613_scope = _self_;;
	_julec_label_1abd9a491:;
	if (((*(_112613_scope))._field_it == _112540_ptr)) {
		return true;;
	};
	if (((*_112613_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _113413_mtch = static_cast<jule::Uintptr>((*(((_1a8d83b53_Case*)((*_112613_scope.alloc)._field_cse))))._field_Owner);;
		if ((_113413_mtch == _112540_ptr)) {
			return true;;
		};
	};
	if (((*_112613_scope.alloc)._field_parent != nullptr)) {
		_112613_scope=(*_112613_scope.alloc)._field_parent;
		goto _julec_label_1abd9a491;
	};
	return false;;
}



inline jule::Ptr<_1a8d810d4_ContSt> _1a8d9106c_checkContValidScope(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8788a0e_ContSt> _114839_c) {
	if (_1a8d89230_isDeferred(_self_)) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_114839_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_114839_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1a8d810d4_ContSt>();;
	};
	jule::Ptr<_1a8d863c5_scopeChecker> _115813_scope = _self_;;
	_julec_label_1abd9d3c8:;
	{
		
		if (((((*_115813_scope.alloc)._field_it == 0LLU) && ((*_115813_scope.alloc)._field_parent != nullptr)) && ((*_115813_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1abda01bb:;
			{
				_115813_scope=(*_115813_scope.alloc)._field_parent;
				goto _julec_label_1abd9d3c8;
			}
		}
		else if (((*_115813_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1abda0254:;
			{
				return jule::new_ptr<_1a8d810d4_ContSt>(_1a8d810d4_ContSt{._field_It=(*_115813_scope.alloc)._field_it});;
			}
		}
		_match_end_1abda0133:;
	};
	_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_114839_c.alloc)._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a8d91325_checkCont(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8788a0e_ContSt> _117229_c) {
	jule::Ptr<_1a8d810d4_ContSt> _117313_cont = _1a8d9106c_checkContValidScope(_self_, _117229_c);;
	if ((_117313_cont == nullptr)) {
		return;;
	};
	if (((*(_117229_c))._field_Label != nullptr)) {
		jule::Ptr<_1a8d84d52_scopeLabel> _117917_label = _1a8d7b431_findLabelParent(&((*(*_117229_c.alloc)._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_117917_label == nullptr)) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), (*_117229_c.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_117229_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_117917_label))._field_used=true;
		if ((((*(_117917_label))._field_pos + 1LL) >= (*((*((*(_117917_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_117229_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_117229_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I32 _119213_i = ((*(_117917_label))._field_pos + 1LL);;
		if ((_119213_i >= (*(*(*(_117917_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_117229_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _119621_st = (*(*(*(_117917_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_119213_i];;
			{
				auto &_match_expr{ _119621_st };
				
				if (_match_expr.type == &__jule_any_type35) {
					_case_begin_1ac176dcc:;
					{
						(*(_117313_cont))._field_It=static_cast<jule::Uintptr>(_119621_st.unsafe_cast_ptr<_1a8d7ed4c_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1ac1770a8:;
					{
						(*(_117313_cont))._field_It=static_cast<jule::Uintptr>(_119621_st.unsafe_cast_ptr<_1a8d80c4e_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1ac17711e:;
					{
						(*(_117313_cont))._field_It=static_cast<jule::Uintptr>(_119621_st.unsafe_cast_ptr<_1a8d80303_WhileIter>());
					}
				}
				else {
					_case_begin_1ac177042:;
					{
						_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_117229_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_117229_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1ac176edc:;
			};
		};
	};
	if (((*(_117313_cont))._field_It != 0LLU)) {
		if ((!(_1a8d908da_checkValidContLabel(_self_, (*(_117313_cont))._field_It)))) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_117229_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_117229_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_117313_cont, &__jule_any_type40)}));
}



inline void _1a8d915cd_checkLabel(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8780b49_LabelSt> _121934_l) {
	if ((_1a8d8a187_findLabel(_self_.ptr(), &((*(_121934_l))._field_Ident)) != nullptr)) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), (*_121934_l.alloc)._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*_121934_l.alloc)._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a8d817aa_Label> _122513_label = jule::new_ptr<_1a8d817aa_Label>(_1a8d817aa_Label{._field_Ident=(*_121934_l.alloc)._field_Ident});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_122513_label, &__jule_any_type20)}));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1a8d84d52_scopeLabel>>::make({jule::new_ptr<_1a8d84d52_scopeLabel>(_1a8d84d52_scopeLabel{._field_token=(*_121934_l.alloc)._field_Token, ._field_label=_122513_label, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL), ._field_scope=_self_, })}));
}



inline void _1a8d91886_pushGoto(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8781023_GotoSt> _123832_gt) {
	jule::Ptr<_1a8d81b84_GotoSt> _123913_st = jule::new_ptr<_1a8d81b84_GotoSt>(_1a8d81b84_GotoSt{._field_Ident=(*((*(_123832_gt))._field_Label))._field_Kind, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_123913_st, &__jule_any_type41)}));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1a8d853d5_scopeGoto>>::make({jule::new_ptr<_1a8d853d5_scopeGoto>(_1a8d853d5_scopeGoto{._field_st=_123913_st, ._field_gt=_123832_gt, ._field_scope=_self_, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL)})}));
}



inline void _1a8d91b3e_checkPostfix(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8782013_AssignSt> _125236_a) {
	if (((*(_125236_a))._field_Left.len() > 1LL)) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*_125236_a.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8777899_Expr> _125813_expr = (*((*_125236_a.alloc)._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1a8e4bcb5_Data> _125913_d = _1a8e6bc4c_evalExpr(_1a8dcb42b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)), _125813_expr);;
	if ((_125913_d == nullptr)) {
		return;;
	};
	_1a8d7d0d1_checkAssign(&((*_self_.alloc)._field_s), &(_125913_d), nullptr, (*_125236_a.alloc)._field_Setter);
	if ((_1a8e85b89_Ptr((*(_125913_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a8e92dd8_Ptr> _126717_ptr = _1a8e85b89_Ptr((*(_125913_d))._field_Kind);;
		if (_1a8e93922_IsUnsafe(_126717_ptr.ptr())) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_125236_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_125236_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(_125913_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1a8e8566c_Prim((*(_125913_d))._field_Kind.ptr()) == nullptr) || (!(_20a2b6ead_IsNum((*(_1a8e8566c_Prim((*(_125913_d))._field_Kind)))._field_Kind))))) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_125236_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_125236_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(_125913_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a8d8205d_Postfix>(_1a8d8205d_Postfix{._field_Expr=(*(_125913_d))._field_Model, ._field_Op=(*((*_125236_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type42)}));
}



inline jule::Bool _1a8d91e80_isNewAssignIdent(_1a8d863c5_scopeChecker* _self_, jule::Str _128535_ident) {
	if ((_1a8760871_IsIgnoreIdent(_128535_ident) || (_128535_ident).empty())) {
		return false;;
	};
	return (_1a8e499b6_defByIdent((*(_self_))._field_table.ptr(), &(_128535_ident), false) == nullptr);;
}



inline void _1a8d92238_removeInteriorMutRisk(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8e4bcb5_Data>* _129846_d) {
	jule::Ptr<_1a8d29ba4_StructIns> _12999_s = _1a8e86be0_Struct((*((*(_129846_d))))._field_Kind.ptr());;
	if ((_12999_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1a8d863c5_scopeChecker> _13039_root = _1a8d89a05_getHardRoot(_self_);;
	if (((*((*(_13039_root))._field_owner))._field_Owner != _12999_s)) {
		return;;
	};
	(*((*(_129846_d))))._field_Mutable=true;
}



inline jule::Bool _1a8d926de_checkStructureAssignOp(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _131247_s, jule::Ptr<_1a8782013_AssignSt>* _131267_a, jule::Ptr<_1a8e4bcb5_Data>* _131286_r) {
	jule::Ptr<_1a8d3ee72_FnIns> _131517_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_131267_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1ac19339e:;
			{
				_131517_overload=(*((*(_131247_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1ac19305d:;
			{
				_131517_overload=(*((*(_131247_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1ac1930c4:;
			{
				_131517_overload=(*((*(_131247_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1ac19313a:;
			{
				_131517_overload=(*((*(_131247_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1ac1931a1:;
			{
				_131517_overload=(*((*(_131247_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1ac193217:;
			{
				_131517_overload=(*((*(_131247_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1ac19327d:;
			{
				_131517_overload=(*((*(_131247_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1ac194900:;
			{
				_131517_overload=(*((*(_131247_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1ac194966:;
			{
				_131517_overload=(*((*(_131247_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1ac1949cc:;
			{
				_131517_overload=(*((*(_131247_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1ac192832:;
			{
				_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_131267_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_131267_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a8d2a028_Str((*(_131247_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1ac192ee7:;
	};
	if ((_131517_overload == nullptr)) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_131267_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_131267_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a8d2a028_Str((*(_131247_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1a8d3dde9_ParamIns> _134713_p = (*(_131517_overload))._field_Params[1LL];;
	return _1a8dcb98c_checkAssignType((*_self_.alloc)._field_s, (*((*(_134713_p))._field_Decl))._field_Reference, &((*_134713_p.alloc)._field_Kind), _131286_r, (*((*(_131267_a))))._field_Setter);;
}



inline void _1a8d92997_checkSingleAssign(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8782013_AssignSt>* _135142_a) {
	jule::Ptr<_1a8e4bcb5_Data> _135217_l = nullptr;;
	if ((!(_1a8760871_IsIgnoreIdent((*((*((*(_135142_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1a8777899_Expr> _135517_expr = (*((*((*(_135142_a))))._field_Left[0LL]))._field_Expr;;
		_135217_l=_1a8e6bc4c_evalExpr(_1a8dcb42b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)), _135517_expr);
		if ((_135217_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a8e4d9dc_Eval> _136217_eval = nullptr;;
	if ((_135217_l != nullptr)) {
		_136217_eval=_1a8dcb0da_evalp((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0), (*(_135217_l))._field_Kind);
	} else {
		_136217_eval=_1a8dcb42b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0));
	};
	(*(_136217_eval))._field_unsafety=_1a8d8877e_isUnsafe(_self_);
	jule::Ptr<_1a8e4bcb5_Data> _136913_r = _1a8e6bc4c_evalExpr(_136217_eval, (*((*(_135142_a))))._field_Right);;
	if ((_136913_r == nullptr)) {
		return;;
	};
	_1a8d92238_removeInteriorMutRisk(_self_, &(_136913_r));
	if ((_135217_l == nullptr)) {
		if (_1a8e84380_Void((*(_136913_r))._field_Kind.ptr())) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*((*((*(_135142_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_136913_r, &__jule_any_type23)}));
		return;;
	};
	if ((!(_1a8d7d0d1_checkAssign(&((*_self_.alloc)._field_s), &(_135217_l), _136913_r, (*((*(_135142_a))))._field_Setter)))) {
		return;;
	};
	if ((_1a8e87493_Tup((*(_136913_r))._field_Kind) != nullptr)) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*((*(_135142_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8d2db53_OperandExprModel> _139313_lm = jule::new_ptr<_1a8d2db53_OperandExprModel>(_1a8d2db53_OperandExprModel{._field_Kind=(*(_135217_l))._field_Kind, ._field_Model=(*(_135217_l))._field_Model});;
	jule::Ptr<_1a8d2db53_OperandExprModel> _139713_rm = jule::new_ptr<_1a8d2db53_OperandExprModel>(_1a8d2db53_OperandExprModel{._field_Kind=(*(_136913_r))._field_Kind, ._field_Model=(*(_136913_r))._field_Model});;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a8d82514_Assign>(_1a8d82514_Assign{._field_Left=_139313_lm, ._field_Right=_139713_rm, ._field_Op=(*((*(_135142_a))))._field_Setter}), &__jule_any_type43)}));
	if (((*((*((*(_135142_a))))._field_Setter))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1a8e3572c_assignTypeChecker _140417_checker = _1a8e3572c_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_135217_l))._field_Kind, ._field_d=_136913_r, ._field_errorToken=(*((*(_135142_a))))._field_Setter};;
		if (_1a8e366ea_check(&_140417_checker)) {
			(*(_139713_rm))._field_Model=(*(_136913_r))._field_Model;
			(*(_139313_lm))._field_Model=(*(_135217_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _141613_strct = _1a8e86be0_Struct((*(_135217_l))._field_Kind);;
	if ((_141613_strct != nullptr)) {
		_1a8d926de_checkStructureAssignOp(_self_, &(_141613_strct), _135142_a, &(_136913_r));
		return;;
	};
	jule::U32 _14219_id = (*(*((*(_135142_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_135142_a))))._field_Setter.alloc)._field_Id=_1a8d987d3_removeEqFromOp((*(*((*(_135142_a))))._field_Setter.alloc)._field_Id);
	_1a8e6e1a0_binaryEval _142313_solver = static__1a8e6eac9_new(_136217_eval, (*((*(_135142_a))))._field_Setter);;
	({
		jule::Ptr<_1a8e4bcb5_Data> ___jule_assign_arg = _135217_l;
		jule::Ptr<_1a8e4bcb5_Data> _1___jule_assign_arg = _136913_r;
		_142313_solver._field_l = ___jule_assign_arg;
		_142313_solver._field_r = _1___jule_assign_arg;
	});
	_1a8e73c21_evalOp(&_142313_solver);
	(*(*((*(_135142_a))))._field_Setter.alloc)._field_Id=_14219_id;
}



inline void _1a8d9302a_processEndPartOfMultiAssign(_1a8d863c5_scopeChecker* _self_, jule::Ptr<_1a8d829ba_MultiAssign>* _142951_st, jule::Ptr<_1a8782013_AssignSt>* _143014_a, jule::Ptr<_1a8781980_AssignLeft>* _143033_lexpr, jule::Ptr<_1a8e4bcb5_Data>* _143058_l, jule::Ptr<_1a8e4bcb5_Data>* _143073_r) {
	if (((!((*((*(_143033_lexpr))))._field_Reference)) && _1a8760871_IsIgnoreIdent((*((*(_143033_lexpr))))._field_Ident))) {
		if (_1a8e84380_Void((*((*(_143073_r))))._field_Kind.ptr())) {
			_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_143014_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> &__jule_push_dest = (*((*(_142951_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_143014_a))))._field_Declarative && ((*((*(_143033_lexpr))))._field_Reference || _1a8d91e80_isNewAssignIdent(_self_, (*((*(_143033_lexpr))))._field_Ident)))) {
		if (_1a8d8ac15_isDuplicatedIdent(_self_, 0LLU, &((*((*(_143033_lexpr))))._field_Ident))) {
			_1a8dc3e7e_pushErr((*(_self_))._field_s, (*((*(_143033_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143033_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1a8dc42e2_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1a8d88c13_stop(_self_);
			return;;
		};
		if (_1a8760871_IsIgnoreIdent((*((*(_143033_lexpr))))._field_Ident)) {
			_1a8dc3e7e_pushErr((*(_self_))._field_s, (*((*(_143033_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a8de41ad_Var> _145117_v = jule::new_ptr<_1a8de41ad_Var>(_1a8de41ad_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_143033_lexpr))))._field_Token, ._field_Ident=(*((*(_143033_lexpr))))._field_Ident, ._field_Mutable=(*((*(_143033_lexpr))))._field_Mutable, ._field_Reference=(*((*(_143033_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Expr=(*((*(_143014_a))))._field_Right, ._field_Data=(*(_143073_r))}), });;
		_1a8dda935_checkVarValue((*(_self_))._field_s, &(_145117_v));
		{ jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> &__jule_push_dest = (*((*(_142951_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=(*((*_145117_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_145117_v.alloc)._field_Mutable, ._field_Reference=(*_145117_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_145117_v))._field_Constant)), ._field_Model=jule::Any(_145117_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1a8de41ad_Var>> &__jule_push_dest = (*((*(_142951_st))))._field_Decls; __jule_push_dest.push(_145117_v); };
		(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a8de41ad_Var>>::make({_145117_v}));
		return;;
	};
	if (((*((*(_143033_lexpr))))._field_Mutable || (*((*(_143033_lexpr))))._field_Reference)) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s, (*((*(_143033_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143033_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1a8d7d0d1_checkAssign(&((*(_self_))._field_s), _143058_l, (*(_143073_r)), (*((*(_143033_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1a8dd0d26_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_143058_l))))._field_Mutable, false, &((*((*(_143058_l))))._field_Kind), _143073_r, &((*((*(_143014_a))))._field_Setter));
	_1a8e3572c_assignTypeChecker _148913_checker = _1a8e3572c_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_143058_l))))._field_Kind, ._field_d=(*(_143073_r)), ._field_errorToken=(*((*(_143014_a))))._field_Setter};;
	_1a8e366ea_check(&_148913_checker);
	{ jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> &__jule_push_dest = (*((*(_142951_st))))._field_Left; __jule_push_dest.push((*(_143058_l))); };
}



inline void _1a8d932d3_checkMultiAssign(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8782013_AssignSt>* _149941_a) {
	jule::Ptr<_1a8e4bcb5_Data> _150013_rd = _1a8e6bc4c_evalExpr(_1a8dcb42b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)), (*((*(_149941_a))))._field_Right);;
	if ((_150013_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> _150413_right = _1a8d7c2ab_getDatasFromTupleData(&(_150013_rd));;
	if ((_150413_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_150413_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1ac1c108b:;
				{
					jule::Ptr<_1a8d319ad_IndexingExprModel> _150821_iem = (*(_150413_right[0LL]))._field_Model.unsafe_cast_ptr<_1a8d319ad_IndexingExprModel>();;
					if ((_1a8e8720c_Map((*((*(_150821_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_150413_right=jule::Slice<jule::Ptr<_1a8e4bcb5_Data>>::make({jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=(*(_1a8e8720c_Map((*(*_150821_iem.alloc)._field_Expr.alloc)._field_Kind)))._field_Val, }),jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, })});
					};
				}
			}
			_match_end_1ac1c0ee2:;
		};
	};
	{
		
		if (((*((*(_149941_a))))._field_Left.len() > _150413_right.len())) {
			_case_begin_1ac1c09d6:;
			{
				_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*((*(_149941_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_149941_a))))._field_Left.len() < _150413_right.len())) {
			_case_begin_1ac1c13bb:;
			{
				_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*((*(_149941_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ac1c1146:;
	};
	jule::Ptr<_1a8d829ba_MultiAssign> _152713_st = jule::new_ptr<_1a8d829ba_MultiAssign>(_1a8d829ba_MultiAssign{._field_Right=(*(_150013_rd))._field_Model});;
	{
		auto expr = &((*((*(_149941_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1c606e:;
		if (it != expr_end) {
			jule::I32 _153013_i = it - expr->begin();
			{
				jule::Ptr<_1a8781980_AssignLeft> _153117_lexpr = (*((*(_149941_a))))._field_Left[_153013_i];;
				jule::Ptr<_1a8e4bcb5_Data> _153221_l = nullptr;;
				if (((!(_1a8760871_IsIgnoreIdent((*(_153117_lexpr))._field_Ident))) && ((!((*((*(_149941_a))))._field_Declarative)) || (!(_1a8d91e80_isNewAssignIdent(_self_, (*_153117_lexpr.alloc)._field_Ident)))))) {
					_153221_l=_1a8e6bc4c_evalExpr(_1a8dcb42b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)), (*_153117_lexpr.alloc)._field_Expr);
					if ((_153221_l == nullptr)) {
						goto _iter_next_1ac1c606e;
					};
				};
				jule::Ptr<_1a8e4bcb5_Data> _154017_r = _150413_right[_153013_i];;
				_1a8d92238_removeInteriorMutRisk(_self_, &(_154017_r));
				_1a8d9302a_processEndPartOfMultiAssign(_self_, &(_152713_st), _149941_a, &(_153117_lexpr), &(_153221_l), &(_154017_r));
			}
			_iter_next_1ac1c606e:;
			++it;
			_153013_i++;
			goto _iter_begin_1ac1c606e;
		}
		_iter_end_1ac1c606e:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_152713_st, &__jule_any_type45)}));
}



inline void _1a8d9358b_checkAssignSt(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8782013_AssignSt> _154737_a) {
	{
		
		if (_1a8762a1b_IsPostfixOp((*((*(_154737_a))._field_Setter))._field_Id)) {
			_case_begin_1ac1cb2d8:;
			{
				_1a8d91b3e_checkPostfix(_self_, _154737_a);
			}
		}
		else if (((*(_154737_a))._field_Left.len() == 1LL)) {
			_case_begin_1ac1cae97:;
			{
				_1a8d92997_checkSingleAssign(_self_, &(_154737_a));
			}
		}
		else {
			_case_begin_1ac1cae31:;
			{
				_1a8d932d3_checkMultiAssign(_self_, &(_154737_a));
			}
		}
		_match_end_1ac1cad32:;
	};
}



inline jule::Ptr<_1a8d7de17_Scope> _1a8d93987_checkCaseScope(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8d83b53_Case>* _155835_c, jule::Ptr<_1a8783586_ScopeTree>* _155850_tree) {
	jule::Ptr<_1a8d863c5_scopeChecker> _155913_ssc = _1a8d9845e_newChildChecker(_self_);;
	(*(_155913_ssc))._field_cse=static_cast<jule::Uintptr>((*(_155835_c)));
	return _1a8d8c0ce_checkChildSc(_self_, _155850_tree, &(_155913_ssc));;
}



inline jule::Ptr<_1a8d83b53_Case> _1a8d93ee8_checkCase(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8d8312a_Match> _156433_m, jule::I32 _156444_i, jule::Ptr<_1a878a538_Case> _156456_c, jule::Ptr<_1a8e4bcb5_Data> _156475_expr) {
	jule::Ptr<_1a8d83b53_Case> _156513_case = (*(_156433_m))._field_Cases[_156444_i];;
	(*(_156513_case))._field_Exprs=jule::Slice<jule::Ptr<_1a8e4bcb5_Data>>::alloc(0LL, (*(_156456_c))._field_Exprs.len());
	jule::Bool _156713_constMatched = false;;
	jule::Ptr<_1a8e4d9dc_Eval> _156813_eval = _1a8dcb42b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0));;
	{
		auto expr = &((*_156456_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1d1a5d:;
		if (it != expr_end) {
			jule::Ptr<_1a8777899_Expr> _156921_e = *it;
			{
				jule::Ptr<_1a8e4bcb5_Data> _157017_d = _1a8e6ae38_evalExprKind(_156813_eval, (*(_156921_e))._field_Kind);;
				if ((_157017_d == nullptr)) {
					goto _iter_next_1ac1d1a5d;
				};
				if ((*_156433_m.alloc)._field_TypeMatch) {
					(*_156513_case.alloc)._field_Exprs=jule::append((*_156513_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a8e4bcb5_Data>>::make({_157017_d}));
					if ((_1a8d7bee2_countMatchType(&(_156433_m), &((*(_157017_d))._field_Kind)) > 1LL)) {
						_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_156921_e.alloc)._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_157017_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*_156433_m.alloc)._field_Comptime) {
						_156713_constMatched=(_156713_constMatched || _1a8e83725_Equal((*(_156475_expr))._field_Kind, (*(_157017_d))._field_Kind));
					} else {
						if ((_1a8e861a6_TypeEnum((*(_156475_expr))._field_Kind) != nullptr)) {
							_1a8dcc3e9_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_156475_expr.alloc)._field_Kind), &((*(_157017_d))._field_Kind), &((*_156921_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1a8d5034a_Trait> _158925_trt = _1a8e86e76_Trait((*(_156475_expr))._field_Kind);;
							if ((_158925_trt != nullptr)) {
								_1a8dcc3e9_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_156475_expr.alloc)._field_Kind), &((*(_157017_d))._field_Kind), &((*_156921_e.alloc)._field_Token));
							};
						};
					};
					goto _iter_next_1ac1d1a5d;
				};
				if ((*(_157017_d))._field_Decl) {
					_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_156921_e.alloc)._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1ac1d1a5d;
				};
				if ((*_156433_m.alloc)._field_Comptime) {
					if (((!(_1a8e4c6bc_IsConst(_157017_d.ptr()))) && (_1a8e89033_comptimeTypeInfo((*(_157017_d))._field_Kind) == nullptr))) {
						_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_156921_e.alloc)._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1ac1d1a5d;
					};
					if ((!(_156713_constMatched))) {
						if (_1a8e4c6bc_IsConst(_157017_d.ptr())) {
							_156713_constMatched=(_1a8e4c6bc_IsConst(_156475_expr.ptr()) && _20a2bd107_Eq((*(_157017_d))._field_Constant.ptr(), (*(*_156475_expr.alloc)._field_Constant.alloc)));
						} else {
							jule::Ptr<_1a8d66be1_comptimeTypeInfo> _161425_exprCti = _1a8e89033_comptimeTypeInfo((*(_156475_expr))._field_Kind);;
							_156713_constMatched=((_161425_exprCti != nullptr) && _1a8e83725_Equal((*(_1a8e89033_comptimeTypeInfo((*(_157017_d))._field_Kind)))._field_base, (*_161425_exprCti.alloc)._field_base));
						};
					};
				};
				(*_156513_case.alloc)._field_Exprs=jule::append((*_156513_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a8e4bcb5_Data>>::make({_157017_d}));
				if ((((!((*_156433_m.alloc)._field_Comptime)) || (_1a8e89033_comptimeTypeInfo((*(_156475_expr))._field_Kind) == nullptr)) || (_1a8e89033_comptimeTypeInfo((*(_157017_d))._field_Kind) == nullptr))) {
					_1a8e3572c_assignTypeChecker _162421_checker = _1a8e3572c_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*_156475_expr.alloc)._field_Kind, ._field_d=_157017_d, ._field_errorToken=(*_156921_e.alloc)._field_Token};;
					_1a8e366ea_check(&_162421_checker);
				};
			}
			_iter_next_1ac1d1a5d:;
			++it;
			goto _iter_begin_1ac1d1a5d;
		}
		_iter_end_1ac1d1a5d:;
	};
	if (((!((*_156433_m.alloc)._field_Comptime)) || _156713_constMatched)) {
		(*_156513_case.alloc)._field_Scope=_1a8d93987_checkCaseScope(_self_, &(_156513_case), &((*_156456_c.alloc)._field_Scope));
	};
	return _156513_case;;
}



inline void _1a8d94416_checkCases(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a878ad52_MatchCase>* _163935_m, jule::Ptr<_1a8d8312a_Match> _163954_rm, jule::Ptr<_1a8e4bcb5_Data> _163970_expr) {
	(*(_163954_rm))._field_Cases=jule::Slice<jule::Ptr<_1a8d83b53_Case>>::alloc(0LL, (*((*(_163935_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_163935_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1e4169:;
		if (it != expr_end) {
			jule::I32 _164113_i = it - expr->begin();
			{
				jule::Ptr<_1a8d83b53_Case> _164217_case = jule::new_ptr<_1a8d83b53_Case>(_1a8d83b53_Case{._field_Owner=_163954_rm, });;
				if ((_164113_i > 0LL)) {
					(*((*_163954_rm.alloc)._field_Cases[(_164113_i - 1LL)]))._field_Next=_164217_case;
				};
				(*_163954_rm.alloc)._field_Cases=jule::append((*_163954_rm.alloc)._field_Cases,jule::Slice<jule::Ptr<_1a8d83b53_Case>>::make({_164217_case}));
			}
			_iter_next_1ac1e4169:;
			++it;
			_164113_i++;
			goto _iter_begin_1ac1e4169;
		}
		_iter_end_1ac1e4169:;
	};
	if ((((*_163954_rm.alloc)._field_Default != nullptr) && ((*((*(_163935_m))))._field_Cases.len() > 0LL))) {
		(*((*_163954_rm.alloc)._field_Cases[((*_163954_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_163954_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_163935_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1e7744:;
		if (it != expr_end) {
			jule::I32 _165514_i = it - expr->begin();
			jule::Ptr<_1a878a538_Case> _165521_c = *it;
			{
				_1a8d93ee8_checkCase(_self_, _163954_rm, _165514_i, _165521_c, _163970_expr);
			}
			_iter_next_1ac1e7744:;
			++it;
			_165514_i++;
			goto _iter_begin_1ac1e7744;
		}
		_iter_end_1ac1e7744:;
	};
}



inline jule::Ptr<_1a8d83b53_Case> _1a8d94812_checkDefault(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8d8312a_Match> _166036_m, jule::Ptr<_1a878938e_Else> _166051_d) {
	jule::Ptr<_1a8d83b53_Case> _166113_def = jule::new_ptr<_1a8d83b53_Case>(_1a8d83b53_Case{._field_Owner=_166036_m, });;
	(*(_166113_def))._field_Scope=_1a8d93987_checkCaseScope(_self_, &(_166113_def), &((*(_166051_d))._field_Scope));
	return _166113_def;;
}



inline void _1a8d94b75_checkComptimePanic(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a875ce89_Token> _166842_callToken, jule::Ptr<_1a8d7de17_Scope>* _166862_s) {
	if (((*((*(_166862_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16729_stmt = (*((*(_166862_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16729_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac1eae51:;
			{
				jule::Ptr<_1a8e4bcb5_Data> _167513_d = _16729_stmt.unsafe_cast_ptr<_1a8e4bcb5_Data>();;
				{
					auto &_match_expr{ (*(_167513_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type28) {
						_case_begin_1ac1ebdca:;
						{
							jule::Ptr<_1a8d3586e_BuiltinPanicCallExprModel> _167821_m = (*(_167513_d))._field_Model.unsafe_cast_ptr<_1a8d3586e_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_167821_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1ac1ed074:;
									{
										jule::Ptr<_20a2b7552_Const> _168121_c = (*(_167821_m))._field_Expr.unsafe_cast_ptr<_20a2b7552_Const>();;
										if ((!(_20a2bbcc6_IsStr(_168121_c.ptr())))) {
											goto _match_end_1ac1ed00d;
										};
										if ((_166842_callToken == nullptr)) {
											jule::Ptr<_1a8d863c5_scopeChecker> _168629_root = _1a8d89a05_getHardRoot(_self_);;
											if (((*(_168629_root))._field_calledFrom == nullptr)) {
												_166842_callToken=(*(_167821_m))._field_Token;
											} else {
												_166842_callToken=(*(_168629_root))._field_calledFrom;
											};
										};
										_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), _166842_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_20a2b96ca_ReadStr(_168121_c), &__jule_any_type4)}));
										_1a8d88c13_stop(_self_);
									}
								}
								_match_end_1ac1ed00d:;
							};
						}
					}
					_match_end_1ac1ebd64:;
				};
			}
		}
		_match_end_1ac1eadeb:;
	};
}



inline void _1a8d94ed8_processConstMatch(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8d8312a_Match>* _170042_tm, jule::Ptr<_1a878ad52_MatchCase>* _170059_m) {
	{
		auto expr = &((*((*(_170042_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1ed3c6:;
		if (it != expr_end) {
			jule::I32 _170114_i = it - expr->begin();
			jule::Ptr<_1a8d83b53_Case> _170121_c = *it;
			{
				if (((*(_170121_c))._field_Scope != nullptr)) {
					jule::Ptr<_1a875ce89_Token> _170325_token = nullptr;;
					if (((!((*((*(_170042_tm))))._field_TypeMatch)) && ((*(*_170121_c.alloc)._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_170325_token=(*((*((*((*(_170059_m))))._field_Cases[_170114_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1a8d94b75_checkComptimePanic(_self_, _170325_token, &((*_170121_c.alloc)._field_Scope));
					(*((*(_170042_tm))))._field_Default=_170121_c;
					(*((*(_170042_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1ac1ed3c6:;
			++it;
			_170114_i++;
			goto _iter_begin_1ac1ed3c6;
		}
		_iter_end_1ac1ed3c6:;
	};
	if (((*((*(_170059_m))))._field_Default != nullptr)) {
		(*((*(_170042_tm))))._field_Cases=nullptr;
		(*((*(_170042_tm))))._field_Default=_1a8d94812_checkDefault(_self_, (*(_170042_tm)), (*((*(_170059_m))))._field_Default);
		if (((*((*(_170042_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1a875ce89_Token> _171725_token = nullptr;;
			if ((!((*((*(_170042_tm))))._field_TypeMatch))) {
				_171725_token=(*((*(*((*(_170059_m))))._field_Default.alloc)._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1a8d94b75_checkComptimePanic(_self_, _171725_token, &((*(*((*(_170042_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_170042_tm))))._field_Cases=nullptr;
	};
}



inline void _1a8d95291_checkTypeMatch(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a878ad52_MatchCase>* _172939_m) {
	jule::Ptr<_1a8e4bcb5_Data> _173013_d = _1a8e6b279_eval1(_1a8dcb42b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)), (*((*(_172939_m))))._field_Expr);;
	if ((_173013_d == nullptr)) {
		return;;
	};
	if ((*((*(_172939_m))))._field_Comptime) {
		jule::Ptr<_1a8d66be1_comptimeTypeInfo> _173617_cti = _1a8e89033_comptimeTypeInfo((*(_173013_d))._field_Kind.ptr());;
		if ((_173617_cti == nullptr)) {
			if ((!((*(_173013_d))._field_Decl))) {
				_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*((*((*(_172939_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_173013_d))._field_Kind=(*(_173617_cti))._field_base;
		};
	} else if (((*(_173013_d))._field_Decl || (!(((((_1a8e8566c_Prim((*(_173013_d))._field_Kind.ptr()) != nullptr) && _1a8e8e313_IsAny(_1a8e8566c_Prim((*(_173013_d))._field_Kind).ptr())) || (_1a8e86e76_Trait((*(_173013_d))._field_Kind) != nullptr)) || (_1a8e861a6_TypeEnum((*(_173013_d))._field_Kind) != nullptr)))))) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*((*((*(_172939_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8d8312a_Match> _175013_tm = jule::new_ptr<_1a8d8312a_Match>(_1a8d8312a_Match{._field_Expr=_173013_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_172939_m))))._field_Comptime, });;
	if (((!((*(_175013_tm))._field_Comptime)) && ((*((*(_172939_m))))._field_Default != nullptr))) {
		(*_175013_tm.alloc)._field_Default=_1a8d94812_checkDefault(_self_, _175013_tm, (*((*(_172939_m))))._field_Default);
	};
	_1a8d94416_checkCases(_self_, _172939_m, _175013_tm, _173013_d);
	if ((*_175013_tm.alloc)._field_Comptime) {
		_1a8d94ed8_processConstMatch(_self_, &(_175013_tm), _172939_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_175013_tm, &__jule_any_type46)}));
}



inline void _1a8d95549_checkCommonMatch(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a878ad52_MatchCase>* _177141_m) {
	jule::Ptr<_1a8e4bcb5_Data> _177217_d = nullptr;;
	if (((*((*(_177141_m))))._field_Expr == nullptr)) {
		_177217_d=jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Constant=static__20a2b8025_NewBool(true)});
		(*(_177217_d))._field_Model=jule::Any((*_177217_d.alloc)._field_Constant, &__jule_any_type19);
	} else {
		_177217_d=_1a8e6b90b_evalExpr1(_1a8dcb42b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)), (*((*(_177141_m))))._field_Expr);
		if ((_177217_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_177141_m))))._field_Comptime) {
		if ((!(_1a8d9900e_canComptimeMatch(&(_177217_d))))) {
			_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_177141_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1a8e87729_comptime((*(_177217_d))._field_Kind.ptr())) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_177141_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8d8312a_Match> _179813_mc = jule::new_ptr<_1a8d8312a_Match>(_1a8d8312a_Match{._field_Expr=_177217_d, ._field_Comptime=(*((*(_177141_m))))._field_Comptime, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_179813_mc, &__jule_any_type46)}));
	if (((!((*(_179813_mc))._field_Comptime)) && ((*((*(_177141_m))))._field_Default != nullptr))) {
		(*_179813_mc.alloc)._field_Default=_1a8d94812_checkDefault(_self_, _179813_mc, (*((*(_177141_m))))._field_Default);
	};
	_1a8d94416_checkCases(_self_, _177141_m, _179813_mc, _177217_d);
	if ((*_179813_mc.alloc)._field_Comptime) {
		_1a8d94ed8_processConstMatch(_self_, &(_179813_mc), _177141_m);
	};
}



inline void _1a8d95802_checkMatch(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a878ad52_MatchCase> _182134_m) {
	if ((*(_182134_m))._field_TypeMatch) {
		_1a8d95291_checkTypeMatch(_self_, &(_182134_m));
		return;;
	};
	_1a8d95549_checkCommonMatch(_self_, &(_182134_m));
}



inline void _1a8d95aaa_checkFall(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8781320_FallSt> _182929_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) || _1a8d89230_isDeferred(_self_))) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_182929_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1a8d83b53_Case* _183713_case = ((_1a8d83b53_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_183713_case))._field_Owner))._field_Comptime) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_182929_f.alloc)._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_183713_case))._field_Next == nullptr)) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_182929_f.alloc)._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a8d8434b_FallSt>(_1a8d8434b_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_183713_case))._field_Next)}), &__jule_any_type47)}));
}



inline jule::Ptr<_1a8d814ad_BreakSt> _1a8d95deb_checkBreakWithLabel(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8788635_BreakSt> _185239_b) {
	jule::Ptr<_1a8d814ad_BreakSt> _185313_brk = _1a8d9623c_checkPlainBreak(_self_, _185239_b);;
	if ((_185313_brk == nullptr)) {
		return nullptr;;
	};
	(*(_185313_brk))._field_It=0LLU;
	(*(_185313_brk))._field_Mtch=0LLU;
	jule::Ptr<_1a8d84d52_scopeLabel> _186313_label = _1a8d7b431_findLabelParent(&((*((*(_185239_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_186313_label == nullptr)) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), (*_185239_b.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_185239_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_186313_label))._field_used=true;
	if ((((*(_186313_label))._field_pos + 1LL) >= (*((*((*(_186313_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_185239_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185239_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _18769_i = ((*(_186313_label))._field_pos + 1LL);;
	if ((_18769_i >= (*(*(*(_186313_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_185239_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185239_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _188017_st = (*(*(*(_186313_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_18769_i];;
		{
			auto &_match_expr{ _188017_st };
			
			if (_match_expr.type == &__jule_any_type35) {
				_case_begin_1ac22c27e:;
				{
					(*(_185313_brk))._field_It=static_cast<jule::Uintptr>(_188017_st.unsafe_cast_ptr<_1a8d7ed4c_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1ac22c45a:;
				{
					(*(_185313_brk))._field_It=static_cast<jule::Uintptr>(_188017_st.unsafe_cast_ptr<_1a8d80c4e_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1ac22c4c1:;
				{
					(*(_185313_brk))._field_It=static_cast<jule::Uintptr>(_188017_st.unsafe_cast_ptr<_1a8d80303_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1ac22c537:;
				{
					(*(_185313_brk))._field_Mtch=static_cast<jule::Uintptr>(_188017_st.unsafe_cast_ptr<_1a8d8312a_Match>());
				}
			}
			else {
				_case_begin_1ac22c3e4:;
				{
					_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_185239_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185239_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1ac22c38e:;
		};
	};
	if (((*(_185313_brk))._field_It != 0LLU)) {
		if ((!(_1a8d90c2b_checkValidBreakLabel(_self_, (*(_185313_brk))._field_It)))) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_185239_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185239_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_185313_brk))._field_Mtch != 0LLU)) {
		if ((!(_1a8d90c2b_checkValidBreakLabel(_self_, (*(_185313_brk))._field_Mtch)))) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_185239_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185239_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	return _185313_brk;;
}



inline jule::Ptr<_1a8d814ad_BreakSt> _1a8d9623c_checkPlainBreak(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8788635_BreakSt> _191035_b) {
	if (_1a8d89230_isDeferred(_self_)) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_191035_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8d863c5_scopeChecker> _191613_scope = _self_;;
	_julec_label_1ac2346a4:;
	{
		
		if ((((((*_191613_scope.alloc)._field_it == 0LLU) && ((*_191613_scope.alloc)._field_cse == 0LLU)) && ((*_191613_scope.alloc)._field_parent != nullptr)) && ((*_191613_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1ac2356b6:;
			{
				_191613_scope=(*_191613_scope.alloc)._field_parent;
				goto _julec_label_1ac2346a4;
			}
		}
		else if (((*_191613_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1ac23574e:;
			{
				return jule::new_ptr<_1a8d814ad_BreakSt>(_1a8d814ad_BreakSt{._field_It=(*_191613_scope.alloc)._field_it, });;
			}
		}
		else if (((*_191613_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1ac2357b5:;
			{
				return jule::new_ptr<_1a8d814ad_BreakSt>(_1a8d814ad_BreakSt{._field_Mtch=static_cast<jule::Uintptr>((*(((_1a8d83b53_Case*)((*_191613_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1ac2355d9:;
	};
	_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_191035_b.alloc)._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a8d964e5_checkBreak(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8788635_BreakSt> _193230_b) {
	if (((*(_193230_b))._field_Label != nullptr)) {
		jule::Ptr<_1a8d814ad_BreakSt> _193417_brk = _1a8d95deb_checkBreakWithLabel(_self_, _193230_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_193417_brk, &__jule_any_type48)}));
		return;;
	};
	jule::Ptr<_1a8d814ad_BreakSt> _193913_brk = _1a8d9623c_checkPlainBreak(_self_, _193230_b);;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_193913_brk, &__jule_any_type48)}));
}



inline void _1a8d9679d_checkRet(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a87867a9_RetSt> _194332_r) {
	if (_1a8d89230_isDeferred(_self_)) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_194332_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a8d846e2_RetSt> _194813_rt = jule::new_ptr<_1a8d846e2_RetSt>(_1a8d846e2_RetSt{._field_Func=(*(_1a8d8976e_getRoot(_self_)))._field_owner, });;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_194813_rt, &__jule_any_type49)}));
	jule::Ptr<_1a8e443d9_retTypeChecker> _195313_rtc = jule::new_ptr<_1a8e443d9_retTypeChecker>(_1a8e443d9_retTypeChecker{._field_sc=_self_, ._field_f=(*(_194813_rt))._field_Func, ._field_errorToken=(*_194332_r.alloc)._field_Token, });;
	jule::Bool _19589_ok = _1a8e45396_check(_195313_rtc.ptr(), &((*_194332_r.alloc)._field_Expr));;
	if ((!(_19589_ok))) {
		return;;
	};
	if (((*_194332_r.alloc)._field_Expr != nullptr)) {
		(*_194813_rt.alloc)._field_Expr=(*_195313_rtc.alloc)._field_model;
	};
}



inline void _1a8d96a56_checkUseExpr(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a877826d_UseExpr> _196832_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_196832_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1a8d89230_isDeferred(_self_)) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_196832_ue.alloc)._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_196832_ue.alloc)._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1a8d96d0e_checkNode(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Any* _198434_node) {
	{
		auto &_match_expr{ (*(_198434_node)) };
		
		if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1ac246353:;
			{
				_1a8d8c6c8_checkAnonScope(_self_, (*(_198434_node)).cast_ptr<_1a8783586_ScopeTree>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ac245bc1:;
			{
				_1a8d8aebd_checkVarDecl(_self_, (*(_198434_node)).cast_ptr<_1a87863d0_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ac246023:;
			{
				_1a8d8b52e_checkTypeAliasDecl(_self_, (*(_198434_node)).cast_ptr<_1a878a082_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ac246089:;
			{
				_1a8d8cce4_checkExpr(_self_, (*(_198434_node)).cast_ptr<_1a8777899_Expr>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ac246100:;
			{
				_1a8d8d72e_checkConditional(_self_, (*(_198434_node)).cast_ptr<_1a8789845_Conditional>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ac246463:;
			{
				_1a8d90599_checkIter(_self_, (*(_198434_node)).cast_ptr<_1a8787029_Iter>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1ac2464c9:;
			{
				_1a8d91325_checkCont(_self_, (*(_198434_node)).cast_ptr<_1a8788a0e_ContSt>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1ac246540:;
			{
				_1a8d915cd_checkLabel(_self_, (*(_198434_node)).cast_ptr<_1a8780b49_LabelSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1ac2465a6:;
			{
				_1a8d91886_pushGoto(_self_, (*(_198434_node)).cast_ptr<_1a8781023_GotoSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1ac24661c:;
			{
				_1a8d9358b_checkAssignSt(_self_, (*(_198434_node)).cast_ptr<_1a8782013_AssignSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ac246683:;
			{
				_1a8d95802_checkMatch(_self_, (*(_198434_node)).cast_ptr<_1a878ad52_MatchCase>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ac2466e9:;
			{
				_1a8d95aaa_checkFall(_self_, (*(_198434_node)).cast_ptr<_1a8781320_FallSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1ac246760:;
			{
				_1a8d964e5_checkBreak(_self_, (*(_198434_node)).cast_ptr<_1a8788635_BreakSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1ac2467d7:;
			{
				_1a8d9679d_checkRet(_self_, (*(_198434_node)).cast_ptr<_1a87867a9_RetSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1ac24685e:;
			{
				_1a8d96a56_checkUseExpr(_self_, (*(_198434_node)).cast_ptr<_1a877826d_UseExpr>(&__jule_any_type62));
			}
		}
		else {
			_case_begin_1ac245d8b:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1ac245d36:;
	};
}



inline void _1a8d9700c_checkResult(jule::Ptr<_1a8d863c5_scopeChecker> _self_) {
	_1a8782e26_Stmt _202213_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _202213_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1ac25035c:;
			{
				jule::Ptr<_1a877826d_UseExpr> _202517_ue = _202213_stmt._field_Data.unsafe_cast_ptr<_1a877826d_UseExpr>();;
				jule::Ptr<_1a8e4bcb5_Data> _202617_d = _1a8e6bc4c_evalExpr(_1a8dcb42b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)), (*(_202517_ue))._field_Expr);;
				if ((_202617_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_202617_d, &__jule_any_type23)}));
				jule::Ptr<_1a8e443d9_retTypeChecker> _203117_rtc = jule::new_ptr<_1a8e443d9_retTypeChecker>(_1a8e443d9_retTypeChecker{._field_sc=_self_, ._field_types=_1a8d41171_Types((*_self_.alloc)._field_result.ptr()), ._field_errorToken=(*((*_202517_ue.alloc)._field_Expr))._field_Token, });;
				_1a8e45396_check(_203117_rtc.ptr(), &((*_202517_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ac250e2e:;
			{
				jule::Ptr<_1a8777899_Expr> _203817_expr = _202213_stmt._field_Data.unsafe_cast_ptr<_1a8777899_Expr>();;
				jule::Ptr<_1a8e4bcb5_Data> _203917_d = _1a8e6bc4c_evalExpr(_1a8dcb42b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)), _203817_expr);;
				if ((_203917_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_203917_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1ac2564ea:;
						{
							jule::Ptr<_1a8d3792b_BuiltinErrorCallExprModel> _204521_m = (*(_203917_d))._field_Model.unsafe_cast_ptr<_1a8d3792b_BuiltinErrorCallExprModel>();;
							_1a8d8ca3b_processErrorCall(_self_, &(_204521_m), (*(_203817_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_203917_d, &__jule_any_type23)}));
						}
					}
					else {
						_case_begin_1ac256a06:;
						{
							return;;
						}
					}
					_match_end_1ac2569a1:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type60 || _match_expr.type == &__jule_any_type54 || _match_expr.type == &__jule_any_type61) {
			_case_begin_1ac2505e3:;
			{
				_1a8d96d0e_checkNode(_self_, &(_202213_stmt._field_Data));
			}
		}
		else {
			_case_begin_1ac25057c:;
			{
				_1a8d96d0e_checkNode(_self_, &(_202213_stmt._field_Data));
				return;;
			}
		}
		_match_end_1ac250527:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1a8d9720a_checkTree(jule::Ptr<_1a8d863c5_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I32 _206713_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_206713_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _206713_n); ((*_self_.alloc)._field_i)++) {
		{
			_1a8782e26_Stmt _207517_stmt = (*(*_self_.alloc)._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1a8d96d0e_checkNode(_self_, &(_207517_stmt._field_Data));
			if (_1a8d88e99_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1ac25a9b6:;
	}
	_iter_end_1ac25a9b6:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1a8d9700c_checkResult(_self_);
	};
}



inline void _1a8d9756d_checkGoto(_1a8d863c5_scopeChecker* _self_, jule::Ptr<_1a8d853d5_scopeGoto>* _208633_gt, jule::Ptr<_1a8d84d52_scopeLabel>* _208654_label) {
	jule::Ptr<_1a8d863c5_scopeChecker> _208713_gtsc = (*((*(_208633_gt))))._field_scope;;
	while ((((*(_208713_gtsc))._field_childIndex - 1LL) > (*((*((*(_208654_label))))._field_scope))._field_childIndex)) {
		{
			_208713_gtsc=(*_208713_gtsc.alloc)._field_parent;
		}
	_iter_next_1ac25e1b2:;
	}
	_iter_end_1ac25e1b2:;;
	jule::I32 _209213_n = 0LL;;
	if (((*_208713_gtsc.alloc)._field_scope == (*(*((*(_208654_label))))._field_scope.alloc)._field_scope)) {
		if (((*((*(_208633_gt))))._field_pos > (*((*(_208654_label))))._field_pos)) {
			return;;
		};
		_209213_n=(*((*(_208633_gt))))._field_pos;
	};
	jule::I32 _210513_i = ((*((*(_208654_label))))._field_pos - 1LL);;
	if ((_209213_n == 0LL)) {
		{
			auto expr = &((*((*(*((*(_208654_label))))._field_scope.alloc)._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac2627d1:;
			if (it != expr_end) {
				jule::I32 _210817_j = it - expr->begin();
				jule::Any _210820_stmt = *it;
				{
					if (_1a8d7bb6d_stmtIsGotoScope(&(_210820_stmt), &((*_208713_gtsc.alloc)._field_scope))) {
						_209213_n=_210817_j;
						goto _iter_end_1ac2627d1;
					};
				}
				_iter_next_1ac2627d1:;
				++it;
				_210817_j++;
				goto _iter_begin_1ac2627d1;
			}
			_iter_end_1ac2627d1:;
		};
	};
	for (; (_210513_i >= _209213_n); (_210513_i)--) {
		{
			jule::Any _211817_stmt = (*(*(*((*(_208654_label))))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_210513_i];;
			if (_1a8d7d92d_stmtIsDef(&(_211817_stmt))) {
				_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_208633_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*(*((*(_208633_gt))))._field_gt.alloc)._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1ac261d1e:;
	}
	_iter_end_1ac261d1e:;;
}



inline void _1a8d9776b_checkGotos(_1a8d863c5_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac263051:;
		if (it != expr_end) {
			jule::Ptr<_1a8d853d5_scopeGoto> _212721_gt = *it;
			{
				jule::Ptr<_1a8d84d52_scopeLabel> _212817_label = _1a8d8a819_findLabelAll(_self_, &((*((*((*(_212721_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_212817_label == nullptr)) {
					_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*(*_212721_gt.alloc)._field_gt.alloc)._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*(*_212721_gt.alloc)._field_gt.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1ac263051;
				};
				(*((*_212721_gt.alloc)._field_st))._field_Label=(*(_212817_label))._field_label;
				(*(_212817_label))._field_used=true;
				_1a8d9756d_checkGoto(_self_, &(_212721_gt), &(_212817_label));
			}
			_iter_next_1ac263051:;
			++it;
			goto _iter_begin_1ac263051;
		}
		_iter_end_1ac263051:;
	};
}



inline void _1a8d97969_checkLabels(_1a8d863c5_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2691de:;
		if (it != expr_end) {
			jule::Ptr<_1a8d84d52_scopeLabel> _214016_l = *it;
			{
				if ((!((*(_214016_l))._field_used))) {
					_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*_214016_l.alloc)._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*_214016_l.alloc)._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1ac2691de:;
			++it;
			goto _iter_begin_1ac2691de;
		}
		_iter_end_1ac2691de:;
	};
}



inline void _1a8d97b67_checkVars(_1a8d863c5_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac26ad39:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> _214816_v = *it;
			{
				if (((((!((*(_214816_v))._field_Used)) && (!((*_214816_v.alloc)._field_Constant))) && (!(_1a8760871_IsIgnoreIdent((*_214816_v.alloc)._field_Ident)))) && (!(_1a8760b3a_IsAnonIdent((*_214816_v.alloc)._field_Ident))))) {
					_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*_214816_v.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_214816_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1ac26ad39:;
			++it;
			goto _iter_begin_1ac26ad39;
		}
		_iter_end_1ac26ad39:;
	};
}



inline void _1a8d97d65_checkAliases(_1a8d863c5_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac26d4e0:;
		if (it != expr_end) {
			jule::Ptr<_1a8e82229_TypeAlias> _215616_a = *it;
			{
				if ((((!((*(_215616_a))._field_Used)) && (!(_1a8760871_IsIgnoreIdent((*_215616_a.alloc)._field_Ident)))) && (!(_1a8760b3a_IsAnonIdent((*_215616_a.alloc)._field_Ident))))) {
					_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*_215616_a.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_215616_a.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1ac26d4e0:;
			++it;
			goto _iter_begin_1ac26d4e0;
		}
		_iter_end_1ac26d4e0:;
	};
}



inline void _1a8d981c8_check(jule::Ptr<_1a8d863c5_scopeChecker> _self_, jule::Ptr<_1a8783586_ScopeTree>* _216430_tree, jule::Ptr<_1a8d7de17_Scope>* _216453_s) {
	(*((*(_216453_s))))._field_Deferred=(*((*(_216430_tree))))._field_Deferred;
	(*((*(_216453_s))))._field_Unsafety=(*((*(_216430_tree))))._field_Unsafety;
	jule::I32 _21689_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_216430_tree));
	(*_self_.alloc)._field_scope=(*(_216453_s));
	_1a8d9720a_checkTree(_self_);
	if ((_21689_errors == (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
		_1a8d97b67_checkVars(_self_);
		_1a8d97d65_checkAliases(_self_);
		if (_1a8d88a15_isRoot(_self_)) {
			_1a8d9776b_checkGotos(_self_);
			_1a8d97969_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1a8d863c5_scopeChecker> _1a8d9845e_newChildChecker(jule::Ptr<_1a8d863c5_scopeChecker> _self_) {
	jule::Ptr<_1a8d863c5_scopeChecker> _218813_base = _1a8d7abe4_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_218813_base))._field_parent=_self_;
	(*_218813_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_218813_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_218813_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _218813_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d863c5_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "captured:" << _Src._field_captured << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1a8d99e11_checkCdef(_1a8d99a04_directiveChecker* _self_, jule::Ptr<_1a8772982_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ac276273:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a8d3be91_Fn>()))._field_Binded) {
					goto _match_end_1ac2764a4;
				};
				goto _case_begin_1ac276509;
			}
		}
		else {
			_case_begin_1ac276509:;
			{
				_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ac2764a4:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a8d9a1b9_checkTypedef(_1a8d99a04_directiveChecker* _self_, jule::Ptr<_1a8772982_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac2791cc:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a8d26e26_Struct>()))._field_Binded) {
					goto _match_end_1ac27940d;
				};
				goto _case_begin_1ac279463;
			}
		}
		else {
			_case_begin_1ac279463:;
			{
				_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ac27940d:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a8d9a472_checkNamespace(_1a8d99a04_directiveChecker* _self_, jule::Ptr<_1a8772982_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac27c136:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a8d26e26_Struct>()))._field_Binded))) {
					_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ac27cd5c:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a8d3be91_Fn>()))._field_Binded))) {
					_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac27c433:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a8de41ad_Var>()))._field_Binded))) {
					_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1ac27c3bc:;
			{
				_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ac27c367:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1a875ce89_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_739_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s, _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*_739_arg.alloc)._field_Kind.slice(1LL, ((*_739_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab6a20a6:;
			{
				if ((_1a8e7a4b9_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1a8772982_Directive> _9021_typedef = jule::new_ptr<_1a8772982_Directive>(_1a8772982_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),jule::Slice<jule::Ptr<_1a8772982_Directive>>::make({_9021_typedef}));
				};
			}
		}
		_match_end_1ab6a2040:;
	};
}



inline void _1a8d9a72a_checkDeprecated(_1a8d99a04_directiveChecker* _self_, jule::Ptr<_1a8772982_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab69ce5e:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a8d26e26_Struct>()))._field_Binded) {
					_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab6a4828:;
			{
				jule::Ptr<_1a8d3be91_Fn> _10617_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a8d3be91_Fn>();;
				if ((((*(_10617_f))._field_Binded || _1a8d3c931_IsEntryPoint(_10617_f)) || _1a8d3cbb7_IsInit(_10617_f))) {
					_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab6a488e:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a8de41ad_Var>()))._field_Binded) {
					_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1ab6a47b2:;
			{
				_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab6a462a:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1a875ce89_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s, _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1259_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s, _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*_1259_arg.alloc)._field_Kind.slice(1LL, ((*_1259_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1a8d9a9d3_checkTest(_1a8d99a04_directiveChecker* _self_, jule::Ptr<_1a8772982_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab6aaeb1:;
			{
				jule::Ptr<_1a8d3be91_Fn> _14213_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a8d3be91_Fn>();;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1a8d3cbb7_IsInit(_14213_f)))) && (!(_1a8d3c931_IsEntryPoint(_14213_f))))) {
					goto _match_end_1ab6b0999;
				};
				if (_1a8d3c69a_IsMethod(_14213_f)) {
					_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*_14213_f.alloc)._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1ab6b0999;
				};
				goto _case_begin_1ab6b09ee;
			}
		}
		else {
			_case_begin_1ab6b09ee:;
			{
				_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab6b0999:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a8d9ac8b_checkDirective(_1a8d99a04_directiveChecker* _self_, jule::Ptr<_1a8772982_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1ab6b566e:;
			{
				_1a8d99e11_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1ab6b56d5:;
			{
				_1a8d9a1b9_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1ab6b574b:;
			{
				_1a8d9a472_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1ab6b57b2:;
			{
				_1a8d9a72a_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1ab6b5828:;
			{
				_1a8d9a9d3_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1ab6b588e:;
			{
				_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1ab6b50a8:;
			{
				_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab6b55a3:;
	};
}



inline void _1a8d9ae89_check(_1a8d99a04_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2c9c55:;
		if (it != expr_end) {
			jule::Ptr<_1a8772982_Directive> _18121_d = *it;
			{
				_1a8d9ac8b_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1ac2c9c55:;
			++it;
			goto _iter_begin_1ac2c9c55;
		}
		_iter_end_1ac2c9c55:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d99a04_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8da1489_SelectPackage(_1a8da0ea0_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a8de41ad_Var> _1a8da1885_FindVar(_1a8da0ea0_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1a8da34e1_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1a8d9d486_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1a8e82229_TypeAlias> _1a8da1c81_FindTypeAlias(_1a8da0ea0_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1a8da34e1_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1a8d9d909_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1a8d26e26_Struct> _1a8da217c_FindStruct(_1a8da0ea0_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1a8da34e1_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1a8d9dd38_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1a8d3be91_Fn> _1a8da2578_FindFn(_1a8da0ea0_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1a8da34e1_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1a8d9e2de_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1a8d5034a_Trait> _1a8da28b9_FindTrait(_1a8da0ea0_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1a8da34e1_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1a8d9e630_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1a8d52a56_Enum> _1a8da2c0a_FindEnum(_1a8da0ea0_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1a8da34e1_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1a8d9e9a4_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1a8d54261_TypeEnum> _1a8da304b_FindTypeEnum(_1a8da0ea0_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1a8da34e1_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1a8d9ed28_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1a8da34e1_isLookupable(_1a8da0ea0_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1a8da3832_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1a8da3832_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1a8da3832_existIdent(_1a8da0ea0_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2dec6a:;
		if (it != expr_end) {
			jule::Ptr<_1a875ce89_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1ac2dec6a:;
			++it;
			goto _iter_begin_1ac2dec6a;
		}
		_iter_end_1ac2dec6a:;
	};
	return false;;
}



inline jule::Bool _1a8da3ab8_isAccessibleViaSelection(_1a8da0ea0_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1a8da3832_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8da0ea0_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8da436b_SelectPackage(_1a8da3dc6_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a8de41ad_Var> _1a8da4767_FindVar(_1a8da3dc6_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1a8d9d486_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1a8e82229_TypeAlias> _1a8da4b63_FindTypeAlias(_1a8da3dc6_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1a8d9d909_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1a8d26e26_Struct> _1a8da505e_FindStruct(_1a8da3dc6_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1a8d9dd38_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1a8d3be91_Fn> _1a8da545a_FindFn(_1a8da3dc6_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1a8d9e2de_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1a8d5034a_Trait> _1a8da579b_FindTrait(_1a8da3dc6_Package* _self_, jule::Str _33828_ident) {
	return _1a8d9e630_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1a8d52a56_Enum> _1a8da5adc_FindEnum(_1a8da3dc6_Package* _self_, jule::Str _34427_ident) {
	return _1a8d9e9a4_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1a8d54261_TypeEnum> _1a8da5e2d_FindTypeEnum(_1a8da3dc6_Package* _self_, jule::Str _35031_ident) {
	return _1a8d9ed28_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8da3dc6_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8d66be1_comptimeTypeInfo> _1a8dc0b7e_pushComptimeTypeInfo(_1a8dc073e_commonSemaMeta* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _21444_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac32175d:;
		if (it != expr_end) {
			jule::Ptr<_1a8d66be1_comptimeTypeInfo> _21521_t2 = *it;
			{
				if ((((*((*(_21521_t2))._field_base))._field_BindIdent == (*((*(_21444_t))))._field_BindIdent) && _1a8e83725_Equal((*_21521_t2.alloc)._field_base, (*(_21444_t))))) {
					return _21521_t2;;
				};
			}
			_iter_next_1ac32175d:;
			++it;
			goto _iter_begin_1ac32175d;
		}
		_iter_end_1ac32175d:;
	};
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _22013_t1 = jule::new_ptr<_1a8d66be1_comptimeTypeInfo>(_1a8d66be1_comptimeTypeInfo{._field_base=(*(_21444_t))});;
	{ jule::Slice<jule::Ptr<_1a8d66be1_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22013_t1); };
	return _22013_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8dc073e_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8dc17d9_SelectPackage(_1a8dc1344_Sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> _24332_selector) {
	return _1a8e46e36_SelectPackage((*(_self_))._field_file.ptr(), _24332_selector);;
}



inline jule::Ptr<_1a8de41ad_Var> _1a8dc1bd5_FindVar(_1a8dc1344_Sema* _self_, jule::Str _25326_ident, jule::Bool _25338_binded) {
	jule::Ptr<_1a8de41ad_Var> _25513_v = _1a8d9d486_findVarInPackage(&((*(_self_))._field_files), &(_25326_ident), _25338_binded);;
	if ((_25513_v != nullptr)) {
		return _25513_v;;
	};
	if ((!(_1a8dbd40c_IsPub(_25326_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac32571d:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _26621_imp = *it;
			{
				if ((!(_1a8dbe30e_impIsLookupable(&(_26621_imp), &(_25326_ident))))) {
					goto _iter_next_1ac32571d;
				};
				_25513_v=_1a8da1885_FindVar(_26621_imp.ptr(), _25326_ident, _25338_binded);
				if (((_25513_v != nullptr) && _1a8dc46dd_isAccessibleDefine(_self_, (*_25513_v.alloc)._field_Public, (*_25513_v.alloc)._field_Token))) {
					return _25513_v;;
				};
			}
			_iter_next_1ac32571d:;
			++it;
			goto _iter_begin_1ac32571d;
		}
		_iter_end_1ac32571d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8e82229_TypeAlias> _1a8dc20d1_FindTypeAlias(_1a8dc1344_Sema* _self_, jule::Str _28532_ident, jule::Bool _28544_binded) {
	jule::Ptr<_1a8e82229_TypeAlias> _28713_ta = _1a8d9d909_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28532_ident), _28544_binded);;
	if ((_28713_ta != nullptr)) {
		return _28713_ta;;
	};
	if ((!(_1a8dbd40c_IsPub(_28532_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac328622:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _29821_imp = *it;
			{
				if ((!(_1a8dbe30e_impIsLookupable(&(_29821_imp), &(_28532_ident))))) {
					goto _iter_next_1ac328622;
				};
				_28713_ta=_1a8da1c81_FindTypeAlias(_29821_imp.ptr(), _28532_ident, _28544_binded);
				if (((_28713_ta != nullptr) && _1a8dc46dd_isAccessibleDefine(_self_, (*_28713_ta.alloc)._field_Public, (*_28713_ta.alloc)._field_Token))) {
					return _28713_ta;;
				};
			}
			_iter_next_1ac328622:;
			++it;
			goto _iter_begin_1ac328622;
		}
		_iter_end_1ac328622:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d26e26_Struct> _1a8dc24cc_FindStruct(_1a8dc1344_Sema* _self_, jule::Str _31729_ident, jule::Bool _31741_binded) {
	jule::Ptr<_1a8d26e26_Struct> _31913_s = _1a8d9dd38_findStructInPackage(&((*(_self_))._field_files), &(_31729_ident), _31741_binded);;
	if ((_31913_s != nullptr)) {
		return _31913_s;;
	};
	if ((!(_1a8dbd40c_IsPub(_31729_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac32b526:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1a8dbe30e_impIsLookupable(&(_33021_imp), &(_31729_ident))))) {
					goto _iter_next_1ac32b526;
				};
				_31913_s=_1a8da217c_FindStruct(_33021_imp.ptr(), _31729_ident, _31741_binded);
				if (((_31913_s != nullptr) && _1a8dc46dd_isAccessibleDefine(_self_, (*_31913_s.alloc)._field_Public, (*_31913_s.alloc)._field_Token))) {
					return _31913_s;;
				};
			}
			_iter_next_1ac32b526:;
			++it;
			goto _iter_begin_1ac32b526;
		}
		_iter_end_1ac32b526:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d3be91_Fn> _1a8dc28c8_FindFn(_1a8dc1344_Sema* _self_, jule::Str _34825_ident, jule::Bool _34837_binded) {
	jule::Ptr<_1a8d3be91_Fn> _35013_f = _1a8d9e2de_findFnInPackage(&((*(_self_))._field_files), &(_34825_ident), _34837_binded);;
	if ((_35013_f != nullptr)) {
		return _35013_f;;
	};
	if ((!(_1a8dbd40c_IsPub(_34825_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac32e42a:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _36121_imp = *it;
			{
				if ((!(_1a8dbe30e_impIsLookupable(&(_36121_imp), &(_34825_ident))))) {
					goto _iter_next_1ac32e42a;
				};
				_35013_f=_1a8da2578_FindFn(_36121_imp.ptr(), _34825_ident, _34837_binded);
				if (((_35013_f != nullptr) && _1a8dc46dd_isAccessibleDefine(_self_, (*_35013_f.alloc)._field_Public, (*_35013_f.alloc)._field_Token))) {
					return _35013_f;;
				};
			}
			_iter_next_1ac32e42a:;
			++it;
			goto _iter_begin_1ac32e42a;
		}
		_iter_end_1ac32e42a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d5034a_Trait> _1a8dc2c19_FindTrait(_1a8dc1344_Sema* _self_, jule::Str _38028_ident) {
	jule::Ptr<_1a8d5034a_Trait> _38213_t = _1a8d9e630_findTraitInPackage(&((*(_self_))._field_files), &(_38028_ident));;
	if ((_38213_t != nullptr)) {
		return _38213_t;;
	};
	if ((!(_1a8dbd40c_IsPub(_38028_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3320dc:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _39321_imp = *it;
			{
				if ((!(_1a8dbe30e_impIsLookupable(&(_39321_imp), &(_38028_ident))))) {
					goto _iter_next_1ac3320dc;
				};
				_38213_t=_1a8da28b9_FindTrait(_39321_imp.ptr(), _38028_ident);
				if (((_38213_t != nullptr) && _1a8dc46dd_isAccessibleDefine(_self_, (*_38213_t.alloc)._field_Public, (*_38213_t.alloc)._field_Token))) {
					return _38213_t;;
				};
			}
			_iter_next_1ac3320dc:;
			++it;
			goto _iter_begin_1ac3320dc;
		}
		_iter_end_1ac3320dc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d52a56_Enum> _1a8dc305a_FindEnum(_1a8dc1344_Sema* _self_, jule::Str _41227_ident) {
	jule::Ptr<_1a8d52a56_Enum> _41413_e = _1a8d9e9a4_findEnumInPackage(&((*(_self_))._field_files), &(_41227_ident));;
	if ((_41413_e != nullptr)) {
		return _41413_e;;
	};
	if ((!(_1a8dbd40c_IsPub(_41227_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac334c9e:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _42521_imp = *it;
			{
				if ((!(_1a8dbe30e_impIsLookupable(&(_42521_imp), &(_41227_ident))))) {
					goto _iter_next_1ac334c9e;
				};
				_41413_e=_1a8da2c0a_FindEnum(_42521_imp.ptr(), _41227_ident);
				if (((_41413_e != nullptr) && _1a8dc46dd_isAccessibleDefine(_self_, (*_41413_e.alloc)._field_Public, (*_41413_e.alloc)._field_Token))) {
					return _41413_e;;
				};
			}
			_iter_next_1ac334c9e:;
			++it;
			goto _iter_begin_1ac334c9e;
		}
		_iter_end_1ac334c9e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d54261_TypeEnum> _1a8dc339b_FindTypeEnum(_1a8dc1344_Sema* _self_, jule::Str _44431_ident) {
	jule::Ptr<_1a8d54261_TypeEnum> _44613_e = _1a8d9ed28_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44431_ident));;
	if ((_44613_e != nullptr)) {
		return _44613_e;;
	};
	if ((!(_1a8dbd40c_IsPub(_44431_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac337961:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _45721_imp = *it;
			{
				if ((!(_1a8dbe30e_impIsLookupable(&(_45721_imp), &(_44431_ident))))) {
					goto _iter_next_1ac337961;
				};
				_44613_e=_1a8da304b_FindTypeEnum(_45721_imp.ptr(), _44431_ident);
				if (((_44613_e != nullptr) && _1a8dc46dd_isAccessibleDefine(_self_, (*_44613_e.alloc)._field_Public, (*_44613_e.alloc)._field_Token))) {
					return _44613_e;;
				};
			}
			_iter_next_1ac337961:;
			++it;
			goto _iter_begin_1ac337961;
		}
		_iter_end_1ac337961:;
	};
	return nullptr;;
}



inline jule::Bool _1a8dc37a8_isFlag(_1a8dc1344_Sema* _self_, jule::I32 _47321_flags) {
	return (((*(_self_))._field_flags & _47321_flags) == _47321_flags);;
}



inline void _1a8dc3a61_setCurrentFile(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8e4694c_SymbolTable> _47537_f) {
	(*(_self_))._field_file=_47537_f;
}



inline void _1a8dc3e7e_pushErr(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token> _47726_token, jule::Str _47741_fmt, jule::Slice<jule::Any> _47754_args) {
	{ jule::Slice<_224743e15_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a8dbde8a_compilerErr(&(_47726_token), true, _47741_fmt, _47754_args)); };
}



inline void _1a8dc42e2_pushSuggestion(_1a8dc1344_Sema* _self_, jule::Str _48233_fmt, jule::Slice<jule::Any> _48246_args) {
	{
		_1a8dc0541_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48233_fmt, _48246_args);
	};
}



inline jule::Bool _1a8dc46dd_isAccessibleDefine(_1a8dc1344_Sema* _self_, jule::Bool _48733_public, jule::Ptr<_1a875ce89_Token> _48747_token) {
	return ((_48733_public || ((*(_48747_token))._field_File == nullptr)) || (_1a8763dc4_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1a8763dc4_Dir((*_48747_token.alloc)._field_File.ptr())));;
}



inline jule::Bool _1a8dc4b94_isDuplicatedIdent(_1a8dc1344_Sema* _self_, jule::Uintptr _49432_itself, jule::Str* _49450_ident, jule::Bool _49462_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac33e160:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> *_49516_f = it;
			{
				if (_1a8e49e6c_isDuplicatedIdent((*(_49516_f)).ptr(), _49432_itself, _49450_ident, _49462_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_49516_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac340161:;
					if (it != expr_end) {
						jule::Ptr<_1a8da0ea0_ImportInfo> *_50020_imp = it;
						{
							{
								auto expr = &((*((*(_50020_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac340a57:;
								if (it != expr_end) {
									jule::Ptr<_1a875ce89_Token> *_50124_selected = it;
									{
										if (((*((*(_50124_selected))))._field_Kind == (*(_49450_ident)))) {
											return true;;
										};
									}
									_iter_next_1ac340a57:;
									++it;
									goto _iter_begin_1ac340a57;
								}
								_iter_end_1ac340a57:;
							};
						}
						_iter_next_1ac340161:;
						++it;
						goto _iter_begin_1ac340161;
					}
					_iter_end_1ac340161:;
				};
			}
			_iter_next_1ac33e160:;
			++it;
			goto _iter_begin_1ac33e160;
		}
		_iter_end_1ac33e160:;
	};
	return false;;
}



inline void _1a8dc5007_checkDirectives(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Slice<jule::Ptr<_1a8772982_Directive>>* _51140_d, jule::Any _51166_o) {
	_1a8d99a04_directiveChecker _51213_dc = _1a8d99a04_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1a8772982_Directive>>>)(_51140_d)), ._field_o=_51166_o};;
	_1a8d9ae89_check(&_51213_dc);
}



inline jule::Bool _1a8dc54ad_checkGenericQuantity(_1a8dc1344_Sema* _self_, jule::I32 _52039_required, jule::I32 _52054_given, jule::Ptr<_1a875ce89_Token> _52066_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52039_required == 0LL) && (_52054_given > 0LL))) {
			_case_begin_1ac343043:;
			{
				_1a8dc3e7e_pushErr(_self_, _52066_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52039_required > 0LL) && (_52054_given == 0LL))) {
			_case_begin_1ac3430ba:;
			{
				_1a8dc3e7e_pushErr(_self_, _52066_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required < _52054_given)) {
			_case_begin_1ac343142:;
			{
				_1a8dc3e7e_pushErr(_self_, _52066_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required > _52054_given)) {
			_case_begin_1ac3431b9:;
			{
				_1a8dc3e7e_pushErr(_self_, _52066_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac342e77:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac342dab:;
	};
}



inline jule::Bool _1a8dc58a9_isDuplicatedImportSelection(_1a8dc1344_Sema* _self_, jule::Uintptr _53942_itself, jule::Str* _53960_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac345dae:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> *_54016_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54016_imp))) == _53942_itself)) {
					goto _iter_end_1ac345dae;
				};
				if (_1a8da3832_existIdent((*(_54016_imp)).ptr(), (*(_53960_ident)))) {
					return true;;
				};
			}
			_iter_next_1ac345dae:;
			++it;
			goto _iter_begin_1ac345dae;
		}
		_iter_end_1ac345dae:;
	};
	return false;;
}



inline jule::Any _1a8dc5ca5_getImportDef(_1a8dc1344_Sema* _self_, jule::Str* _55228_ident, jule::Ptr<_1a8da0ea0_ImportInfo>* _55245_imp) {
	if ((_1a9069e38_findPackageBuiltinDef(&((*((*(_55245_imp))))._field_LinkPath), _55228_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55245_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac348015:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _55621_f = *it;
			{
				;
				jule::Any _55917_def = _1a8e499b6_defByIdent(_55621_f.ptr(), _55228_ident, false);;
				if ((_55917_def != nullptr)) {
					return _55917_def;;
				};
			}
			_iter_next_1ac348015:;
			++it;
			goto _iter_begin_1ac348015;
		}
		_iter_end_1ac348015:;
	};
	return nullptr;;
}



inline jule::Bool _1ac34e56b_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8de41ad_Var>* _56759_s) {
	if ((!(_1a8dc46dd_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a8da0367_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac35385b_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8e82229_TypeAlias>* _56759_s) {
	if ((!(_1a8dc46dd_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a8da0367_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac357ad5_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8d26e26_Struct>* _56759_s) {
	if ((!(_1a8dc46dd_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a8da0367_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac35c14a_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8d5034a_Trait>* _56759_s) {
	if ((!(_1a8dc46dd_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a8da0367_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac3613e6_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8d52a56_Enum>* _56759_s) {
	if ((!(_1a8dc46dd_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a8da0367_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac365692_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8d54261_TypeEnum>* _56759_s) {
	if ((!(_1a8dc46dd_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a8da0367_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac36991b_checkImportSelection(_1a8dc1344_Sema* _self_, jule::Ptr<_1a875ce89_Token>* _56743_ident, jule::Ptr<_1a8d3be91_Fn>* _56759_s) {
	if ((!(_1a8dc46dd_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a8da0367_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a8dc3e7e_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1a8dc64e2_checkImportSelectedSelections(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _58153_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58153_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac349b4e:;
		if (it != expr_end) {
			jule::Ptr<_1a875ce89_Token> _58316_ident = *it;
			{
				if ((*(_58316_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1ac349b4e;
				};
				if (_1a8dc58a9_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_58153_imp))), &((*_58316_ident.alloc)._field_Kind))) {
					_1a8dc3e7e_pushErr(_self_, _58316_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_58316_ident.alloc)._field_Kind, &__jule_any_type4)}));
					_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ac349b4e;
				};
				jule::Any _59517_def = _1a8dc5ca5_getImportDef(_self_, &((*_58316_ident.alloc)._field_Kind), _58153_imp);;
				{
					auto &_match_expr{ _59517_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1ac34ac1b:;
						{
							goto _iter_next_1ac349b4e;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ac34c635:;
						{
							jule::Ptr<_1a8de41ad_Var> _60121_v = _59517_def.unsafe_cast_ptr<_1a8de41ad_Var>();;
							__jule_func_result=(_1ac34e56b_checkImportSelection(_self_, &(_58316_ident), &(_60121_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1ac34c69b:;
						{
							jule::Ptr<_1a8e82229_TypeAlias> _60421_ta = _59517_def.unsafe_cast_ptr<_1a8e82229_TypeAlias>();;
							__jule_func_result=(_1ac35385b_checkImportSelection(_self_, &(_58316_ident), &(_60421_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1ac34c712:;
						{
							jule::Ptr<_1a8d26e26_Struct> _60721_s = _59517_def.unsafe_cast_ptr<_1a8d26e26_Struct>();;
							__jule_func_result=(_1ac357ad5_checkImportSelection(_self_, &(_58316_ident), &(_60721_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1ac34c778:;
						{
							jule::Ptr<_1a8d5034a_Trait> _61021_t = _59517_def.unsafe_cast_ptr<_1a8d5034a_Trait>();;
							__jule_func_result=(_1ac35c14a_checkImportSelection(_self_, &(_58316_ident), &(_61021_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1ac34c7de:;
						{
							jule::Ptr<_1a8d52a56_Enum> _61321_e = _59517_def.unsafe_cast_ptr<_1a8d52a56_Enum>();;
							__jule_func_result=(_1ac3613e6_checkImportSelection(_self_, &(_58316_ident), &(_61321_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1ac34d405:;
						{
							jule::Ptr<_1a8d54261_TypeEnum> _61621_e = _59517_def.unsafe_cast_ptr<_1a8d54261_TypeEnum>();;
							__jule_func_result=(_1ac365692_checkImportSelection(_self_, &(_58316_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type63) {
						_case_begin_1ac34d46b:;
						{
							jule::Ptr<_1a8d3be91_Fn> _61921_f = _59517_def.unsafe_cast_ptr<_1a8d3be91_Fn>();;
							__jule_func_result=(_1ac36991b_checkImportSelection(_self_, &(_58316_ident), &(_61921_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1ac34c525:;
						{
							_1a8dc3e7e_pushErr(_self_, _58316_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*_58316_ident.alloc)._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1ac349b4e;
						}
					}
					_match_end_1ac34c190:;
				};
			}
			_iter_next_1ac349b4e:;
			++it;
			goto _iter_begin_1ac349b4e;
		}
		_iter_end_1ac349b4e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac36e1d4_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac370e3e:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ac34e56b_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ac370e3e:;
			++it;
			goto _iter_begin_1ac370e3e;
		}
		_iter_end_1ac370e3e:;
	};
	return _63113_ok;;
}

inline jule::Bool _1ac36ed72_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac373639:;
		if (it != expr_end) {
			jule::Ptr<_1a8e82229_TypeAlias> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ac35385b_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ac373639:;
			++it;
			goto _iter_begin_1ac373639;
		}
		_iter_end_1ac373639:;
	};
	return _63113_ok;;
}

inline jule::Bool _1ac373062_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d26e26_Struct>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac375d23:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ac357ad5_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ac375d23:;
			++it;
			goto _iter_begin_1ac375d23;
		}
		_iter_end_1ac375d23:;
	};
	return _63113_ok;;
}

inline jule::Bool _1ac374371_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d3be91_Fn>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac37852e:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ac36991b_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ac37852e:;
			++it;
			goto _iter_begin_1ac37852e;
		}
		_iter_end_1ac37852e:;
	};
	return _63113_ok;;
}

inline jule::Bool _1ac376a5a_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d5034a_Trait>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac37abc4:;
		if (it != expr_end) {
			jule::Ptr<_1a8d5034a_Trait> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ac35c14a_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ac37abc4:;
			++it;
			goto _iter_begin_1ac37abc4;
		}
		_iter_end_1ac37abc4:;
	};
	return _63113_ok;;
}

inline jule::Bool _1ac37a102_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d52a56_Enum>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac37d369:;
		if (it != expr_end) {
			jule::Ptr<_1a8d52a56_Enum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ac3613e6_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ac37d369:;
			++it;
			goto _iter_begin_1ac37d369;
		}
		_iter_end_1ac37d369:;
	};
	return _63113_ok;;
}

inline jule::Bool _1ac37c797_checkImportsAllSelectionsFromCollection(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d54261_TypeEnum>>* _63062_s, jule::Ptr<_1a875ce89_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac380a97:;
		if (it != expr_end) {
			jule::Ptr<_1a8d54261_TypeEnum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1ac365692_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ac380a97:;
			++it;
			goto _iter_begin_1ac380a97;
		}
		_iter_end_1ac380a97:;
	};
	return _63113_ok;;
}



inline jule::Bool _1a8dc6c2e_checkImportAllSelections(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _64044_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64044_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac349ed4:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> *_64216_file = it;
			{
				__jule_func_result=(_1ac36e1d4_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64216_file))))._field_Vars), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac36ed72_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_TypeAliases), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac373062_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Structs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac374371_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Funcs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac376a5a_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Traits), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac37a102_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Enums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac37c797_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_TypeEnums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1ac349ed4:;
			++it;
			goto _iter_begin_1ac349ed4;
		}
		_iter_end_1ac349ed4:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a8dc7070_checkImportSelections(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _65445_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65445_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1a8dc64e2_checkImportSelectedSelections(_self_, _65445_imp);
		return __jule_func_result;;
	} else if ((*((*(_65445_imp))))._field_ImportAll) {
		__jule_func_result = _1a8dc6c2e_checkImportAllSelections(_self_, _65445_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a8dc73b1_isUseAliasDuplication(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _66341_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac382b32:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _66421_imp2 = *it;
			{
				if ((_66421_imp2 == (*(_66341_imp)))) {
					goto _iter_end_1ac382b32;
				};
				if (((*(_66421_imp2))._field_Alias == (*((*(_66341_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_66421_imp2.alloc)._field_Ident == (*_66421_imp2.alloc)._field_LinkPath) && ((*_66421_imp2.alloc)._field_Ident == (*((*(_66341_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1ac382b32:;
			++it;
			goto _iter_begin_1ac382b32;
		}
		_iter_end_1ac382b32:;
	};
	return false;;
}



inline jule::Bool _1a8dc7702_checkImport(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8da0ea0_ImportInfo>* _67935_imp) {
	if (((*((*(_67935_imp))))._field_Binded || ((*((*((*(_67935_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_67935_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_67935_imp))))._field_ImportAll || !((*((*(_67935_imp))))._field_Alias).empty()) || ((*((*(_67935_imp))))._field_Selected.len() > 0LL))) {
			_1a8dc3e7e_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (((*((*(_67935_imp))))._field_Alias.len() != 0LL)) {
		if (_1a8760871_IsIgnoreIdent((*((*(_67935_imp))))._field_Alias)) {
			_1a8dc3e7e_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1a8dc73b1_isUseAliasDuplication(_self_, _67935_imp)) {
			_1a8dc3e7e_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_67935_imp))))._field_Alias, &__jule_any_type4)}));
			_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_67935_imp))))._field_Duplicate))) {
		jule::Ptr<_1a8dc1344_Sema> _70217_sema = jule::new_ptr<_1a8dc1344_Sema>(_1a8dc1344_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1a8de0ad3_check(_70217_sema, &((*(*((*(_67935_imp))))._field_Package.alloc)._field_Files));
		if (((*_70217_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_70217_sema.alloc)._field_errors);;
			(*_70217_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1a8dc7070_checkImportSelections(_self_, _67935_imp);;
}



inline void _1a8dc7900_checkImports(_1a8dc1344_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac38c158:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _71721_file = *it;
			{
				_1a8dc3a61_setCurrentFile(_self_, _71721_file);
				{
					auto expr = &((*(_71721_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac38cd18:;
					if (it != expr_end) {
						jule::Ptr<_1a8da0ea0_ImportInfo> _71925_imp = *it;
						{
							jule::Bool _72017_ok = _1a8dc7702_checkImport(_self_, &(_71925_imp));;
							if ((!(_72017_ok))) {
								return;;
							};
						}
						_iter_next_1ac38cd18:;
						++it;
						goto _iter_begin_1ac38cd18;
					}
					_iter_end_1ac38cd18:;
				};
			}
			_iter_next_1ac38c158:;
			++it;
			goto _iter_begin_1ac38c158;
		}
		_iter_end_1ac38c158:;
	};
}



inline void _1a8dc7aed_implFileImpls(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac38d27a:;
		if (it != expr_end) {
			jule::Ptr<_1a8d789b1_Impl> _73021_imp = *it;
			{
				_1a8dd7190_implImpl(_self_, &(_73021_imp));
			}
			_iter_next_1ac38d27a:;
			++it;
			goto _iter_begin_1ac38d27a;
		}
		_iter_end_1ac38d27a:;
	};
}



inline void _1a8dc7ceb_implImpls(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac38eb50:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _73621_file = *it;
			{
				_1a8dc3a61_setCurrentFile(_self_.ptr(), _73621_file);
				_1a8dc7aed_implFileImpls(_self_);
			}
			_iter_next_1ac38eb50:;
			++it;
			goto _iter_begin_1ac38eb50;
		}
		_iter_end_1ac38eb50:;
	};
}



inline void _1a8dc7ee9_checkEnums(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac390bea:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _74321_file = *it;
			{
				_1a8dc3a61_setCurrentFile(_self_.ptr(), _74321_file);
				{
					
					if ((!(_1a8dd35cb_checkEnumDecls(_self_)))) {
						_case_begin_1ac391338:;
					}
					else if ((!(_1a8dd3862_checkTypeEnumDecls(_self_)))) {
						_case_begin_1ac3918ee:;
					}
					_match_end_1ac391833:;
				};
			}
			_iter_next_1ac390bea:;
			++it;
			goto _iter_begin_1ac390bea;
		}
		_iter_end_1ac390bea:;
	};
}



inline void _1a8dc81e7_checkFileInherits(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac392757:;
		if (it != expr_end) {
			jule::Ptr<_1a8d5034a_Trait> _75321_t = *it;
			{
				jule::Bool _75413_ok = _1a8dd5226__checkTraitDeclInherits(_self_, &(_75321_t));;
				if ((!(_75413_ok))) {
					return;;
				};
			}
			_iter_next_1ac392757:;
			++it;
			goto _iter_begin_1ac392757;
		}
		_iter_end_1ac392757:;
	};
}



inline void _1a8dc83e5_checkInherits(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac393a99:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _76221_file = *it;
			{
				_1a8dc3a61_setCurrentFile(_self_.ptr(), _76221_file);
				_1a8dc81e7_checkFileInherits(_self_);
			}
			_iter_next_1ac393a99:;
			++it;
			goto _iter_begin_1ac393a99;
		}
		_iter_end_1ac393a99:;
	};
}



inline _1a8e94dc9_typeChecker _1a8dc889b_typeChecker(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Trait _76835_l, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _76850_generics, jule::Ptr<_1a8e93dd9_referencer> _76913_referencer) {
	_1a8e94dc9_typeChecker _77013_tc = _1a8e94dc9_typeChecker{._field_s=_self_, ._field_rootLookup=_76835_l, ._field_lookup=_76835_l, ._field_referencer=_76913_referencer, ._field_useGenerics=_76850_generics, };;
	{
		auto &_match_expr{ _76835_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)) {
			_case_begin_1ac395936:;
			{
				jule::Ptr<_1a8d863c5_scopeChecker> _77917_hard = _1a8d89a05_getHardRoot(_76835_l.cast_ptr<_1a8d863c5_scopeChecker>((jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0));;
				_77013_tc._field_refers=(*((*(_77917_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1ac3953a3:;
	};
	if (((_76913_referencer != nullptr) && ((*_76913_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_76913_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1ac3972c8:;
				{
					_77013_tc._field_ownerAlias=(*(_76913_referencer))._field_owner.unsafe_cast_ptr<_1a8e82229_TypeAlias>();
				}
			}
			_match_end_1ac397273:;
		};
	};
	return _77013_tc;;
}



inline jule::Ptr<_1a8e8301b_TypeKind> _1a8dc8e0c_buildTypeWithRefers(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8773565_TypeDecl>* _79544_t, jule::Trait _79567_l, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _79613_generics, jule::Ptr<_1a8e93dd9_referencer> _79641_referencer) {
	return ({ auto _wrap_copy = _1a8dc889b_typeChecker(_self_, _79567_l, _79613_generics, _79641_referencer); _1a8e9c574_checkDecl(&_wrap_copy, _79544_t); });;
}



inline jule::Bool _1a8dc946d_checkTypeWithRefers(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8a1dd_TypeSymbol>* _80244_t, jule::Trait _80264_l, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _80313_generics, jule::Ptr<_1a8e93dd9_referencer> _80341_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1a8e8a562_checked((*(_80244_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80244_t))))._field_Kind=_1a8dc8e0c_buildTypeWithRefers(_self_, &((*((*(_80244_t))))._field_Decl), _80264_l, _80313_generics, _80341_referencer);
	__jule_func_result = _1a8e8a562_checked((*(_80244_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1a8d7665c_constraintChecker> _1a8dc9704_constraintChecker(jule::Ptr<_1a8dc1344_Sema> _self_) {
	return jule::new_ptr<_1a8d7665c_constraintChecker>(_1a8d7665c_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1a8dc9b00_checkType(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8a1dd_TypeSymbol>* _81734_t, jule::Trait _81754_l) {
	return _1a8dc946d_checkTypeWithRefers(_self_, _81734_t, _81754_l, nullptr, nullptr);;
}



inline jule::Ptr<_1a8e8301b_TypeKind> _1a8dca0a6_buildTypeWithGenerics(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8773565_TypeDecl>* _82346_t, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _82413_generics, jule::Ptr<_1a8d43151_ReferenceStack> _82441_refers) {
	jule::Ptr<_1a8e94dc9_typeChecker> _82513_tc = jule::new_ptr<_1a8e94dc9_typeChecker>(_1a8e94dc9_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3), ._field_refers=_82441_refers, ._field_useGenerics=_82413_generics, });;
	return _1a8e9c574_checkDecl(_82513_tc.ptr(), _82346_t);;
}



inline jule::Ptr<_1a8e8301b_TypeKind> _1a8dca738_selectType(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8773565_TypeDecl>* _84135_t) {
	jule::Ptr<_1a8e94dc9_typeChecker> _84213_tc = jule::new_ptr<_1a8e94dc9_typeChecker>(_1a8e94dc9_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3), ._field_selection=true, });;
	return _1a8e9c574_checkDecl(_84213_tc.ptr(), _84135_t);;
}



inline jule::Ptr<_1a8e4d9dc_Eval> _1a8dcabde_evalpd(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Trait _85330_l, jule::Ptr<_1a8e8301b_TypeKind> _85345_p, jule::Ptr<_1a8de41ad_Var> _85363_owner) {
	jule::Ptr<_1a8e4d9dc_Eval> _85413_e = jule::new_ptr<_1a8e4d9dc_Eval>(_1a8e4d9dc_Eval{._field_s=_self_, ._field_lookup=_85330_l, ._field_owner=_85363_owner, });;
	{
		auto &_match_expr{ _85330_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)) {
			_case_begin_1ac3a15e0:;
			{
				(*(_85413_e))._field_unsafety=_1a8d8877e_isUnsafe(_85330_l.cast_ptr<_1a8d863c5_scopeChecker>((jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0));
			}
		}
		_match_end_1ac3a139d:;
	};
	(*_85413_e.alloc)._field_prefix=_85345_p;
	return _85413_e;;
}



inline jule::Ptr<_1a8e4d9dc_Eval> _1a8dcb0da_evalp(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Trait _86829_l, jule::Ptr<_1a8e8301b_TypeKind> _86844_p) {
	return _1a8dcabde_evalpd(_self_, _86829_l, _86844_p, nullptr);;
}



inline jule::Ptr<_1a8e4d9dc_Eval> _1a8dcb42b_eval(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Trait _87328_l) {
	return _1a8dcb0da_evalp(_self_, _87328_l, nullptr);;
}



inline jule::Bool _1a8dcb98c_checkAssignType(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Bool _87735_destIsRef, jule::Ptr<_1a8e8301b_TypeKind>* _87757_dest, jule::Ptr<_1a8e4bcb5_Data>* _87814_d, jule::Ptr<_1a875ce89_Token> _87828_errorToken) {
	if ((*((*(_87814_d))))._field_Decl) {
		_1a8dc3e7e_pushErr(_self_.ptr(), _87828_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_87735_destIsRef) {
		if ((!(_1a8e83725_Equal((*(_87757_dest)), (*((*(_87814_d))))._field_Kind)))) {
			_1a8dc3e7e_pushErr(_self_, _87828_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_87757_dest)).ptr()), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*((*(_87814_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1a8e3572c_assignTypeChecker> _88917_atc = jule::new_ptr<_1a8e3572c_assignTypeChecker>(_1a8e3572c_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_87757_dest)), ._field_d=(*(_87814_d)), ._field_errorToken=_87828_errorToken});;
		jule::Bool _89513_ok = _1a8e366ea_check(_88917_atc.ptr());;
		if ((!(_89513_ok))) {
			return false;;
		};
	};
	if (((!(_1a8e4c6bc_IsConst((*(_87814_d)).ptr()))) || (_1a8e8566c_Prim((*(_87757_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90513_kind = (*(_1a8e8566c_Prim((*(_87757_dest)).ptr())))._field_Kind;;
	{
		
		if (_20a2b630e_IsSigInt(_90513_kind)) {
			_case_begin_1ac3a8e44:;
			{
				_20a2ba4bc_SetI64((*((*(_87814_d))))._field_Constant.ptr(), _20a2b9be7_AsI64((*((*(_87814_d))))._field_Constant));
			}
		}
		else if (_20a2b661c_IsUnsigInt(_90513_kind)) {
			_case_begin_1ac3a8edd:;
			{
				_20a2ba775_SetU64((*((*(_87814_d))))._field_Constant.ptr(), _20a2b9e7d_AsU64((*((*(_87814_d))))._field_Constant));
			}
		}
		else if (_20a2b6c27_IsFloat(_90513_kind)) {
			_case_begin_1ac3a9054:;
			{
				_20a2bb08e_SetF64((*((*(_87814_d))))._field_Constant.ptr(), _20a2ba214_AsF64((*((*(_87814_d))))._field_Constant));
			}
		}
		_match_end_1ac3a8d78:;
	};
	return true;;
}



inline jule::Bool _1a8dcbe43__checkTypeCompatibility(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8301b_TypeKind>* _91948_dest, jule::Ptr<_1a8e8301b_TypeKind>* _91970_src, jule::Ptr<_1a875ce89_Token> _92013_errorToken) {
	if (((*(_91970_src)) == nullptr)) {
		return false;;
	};
	if ((_1a8e87493_Tup((*(_91970_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1a8e3397d_typeCompatibilityChecker _92813_tcc = _1a8e3397d_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91948_dest)), ._field_src=(*(_91970_src)), ._field_errorToken=_92013_errorToken};;
	return _1a8e35144_check(&_92813_tcc);;
}



inline jule::Bool _1a8dcc3e9_checkTypeCompatibility(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8301b_TypeKind>* _93747_dest, jule::Ptr<_1a8e8301b_TypeKind>* _93814_src, jule::Ptr<_1a875ce89_Token>* _93835_errorToken) {
	if (_1a8dcbe43__checkTypeCompatibility(_self_, _93747_dest, _93814_src, (*(_93835_errorToken)))) {
		return true;;
	};
	_1a8dc3e7e_pushErr(_self_, (*(_93835_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_93747_dest)).ptr()), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(_93814_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline void _1a8dcc817_pushCompatiblityError(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _94645_dest, jule::Ptr<_1a8e4bcb5_Data>* _94667_src, jule::Ptr<_1a875ce89_Token>* _94714_errorToken) {
	if ((*((*(_94667_src))))._field_untyped) {
		{
			
			if (_20a2bb523_IsI64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1ac3b148a:;
				{
					_1a8dc3e7e_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_20a2bb7a9_IsU64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1ac3b1534:;
				{
					_1a8dc3e7e_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_20a2bc05c_IsF64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1ac3b159a:;
				{
					_1a8dc3e7e_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4)}));
					return;;
				}
			}
			_match_end_1ac3b1369:;
		};
	};
	_1a8dc3e7e_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*((*(_94667_src))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1a8dcccbd_checkTypeCompatibility1(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8301b_TypeKind>* _96448_dest, jule::Ptr<_1a8e4bcb5_Data>* _96470_src, jule::Ptr<_1a875ce89_Token>* _96514_errorToken) {
	if (_1a8dcbe43__checkTypeCompatibility(_self_, _96448_dest, &((*((*(_96470_src))))._field_Kind), (*(_96514_errorToken)))) {
		return true;;
	};
	_1a8dcc817_pushCompatiblityError(_self_, _96448_dest, _96470_src, _96514_errorToken);
	return false;;
}



inline jule::Ptr<_1a8e8301b_TypeKind> _1a8dcd274_buildNonGenericTypeKind(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8773565_TypeDecl>* _97948_ast, jule::Slice<jule::Ptr<_1a8780770_GenericDecl>>* _98014_generics, jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>>* _98050_ignored) {
	jule::Ptr<_1a8e94dc9_typeChecker> _98113_tc = jule::new_ptr<_1a8e94dc9_typeChecker>(_1a8e94dc9_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3), ._field_ignoreGenerics=(*(_98014_generics)), ._field_ignoredGenerics=_98050_ignored, });;
	return _1a8e9c574_checkDecl(_98113_tc.ptr(), _97948_ast);;
}



inline jule::Bool _1a8dcd670_buildFnNonGenericTypeKinds(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _99151_f, jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>>* _99167_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1a8780770_GenericDecl>> _99317_generics = nullptr;;
	if (_1a8d3c69a_IsMethod((*((*(_99151_f))))._field_Decl.ptr())) {
		_99317_generics=jule::append((*(*((*(_99151_f))))._field_Decl.alloc)._field_Generics,(*((*(*((*(_99151_f))))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_99317_generics=(*((*((*(_99151_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_99151_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3ba818:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3dde9_ParamIns> _100021_p = *it;
			{
				if ((!(_1a8d3aad8_IsSelf((*(_100021_p))._field_Decl.ptr())))) {
					(*_100021_p.alloc)._field_Kind=_1a8dcd274_buildNonGenericTypeKind(_self_, &((*((*(*_100021_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl), &(_99317_generics), _99167_ignored);
					__jule_func_result=(__jule_func_result && ((*_100021_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1ac3ba818:;
			++it;
			goto _iter_begin_1ac3ba818;
		}
		_iter_end_1ac3ba818:;
	};
	if ((!(_1a8d3c414_IsVoid((*((*(_99151_f))))._field_Decl.ptr())))) {
		(*((*(_99151_f))))._field_Result=_1a8dcd274_buildNonGenericTypeKind(_self_, &((*((*((*(*((*(_99151_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(_99317_generics), _99167_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_99151_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a8d3ee72_FnIns> _1a8dcd9b1_getTraitCheckFnKind(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _101344_f) {
	if (((*((*(_101344_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_101344_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _101713_ins = _1a8d3d46a_instanceForce((*(_101344_f)));;
	jule::Ptr<_1a8e94dc9_typeChecker> _101913_tc = jule::new_ptr<_1a8e94dc9_typeChecker>(_1a8e94dc9_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3), });;
	{
		auto expr = &((*(_101713_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3c1940:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3dde9_ParamIns> _102421_p = *it;
			{
				if ((!(_1a8d3aad8_IsSelf((*(_102421_p))._field_Decl.ptr())))) {
					(*_102421_p.alloc)._field_Kind=_1a8e9c574_checkDecl(_101913_tc.ptr(), &((*((*(*_102421_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl));
				};
			}
			_iter_next_1ac3c1940:;
			++it;
			goto _iter_begin_1ac3c1940;
		}
		_iter_end_1ac3c1940:;
	};
	if ((!(_1a8d3c414_IsVoid((*(_101344_f)).ptr())))) {
		(*_101713_ins.alloc)._field_Result=_1a8e9c574_checkDecl(_101913_tc, &((*((*((*((*(_101344_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _101713_ins;;
}



inline jule::Bool _1a8dcde67_checkConstraintsFn(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _103643_f, jule::Ptr<_1a875ce89_Token>* _103659_et, jule::Ptr<_1a8d3ee72_FnIns> _103675_exist) {
	jule::Ptr<_1a8d7665c_constraintChecker> _103713_cc = _1a8dc9704_constraintChecker(_self_);;
	(*(_103713_cc))._field_et=(*(_103659_et));
	(*_103713_cc.alloc)._field_fi=(*(_103643_f));
	if ((_103675_exist != nullptr)) {
		{
			auto expr = &((*_103675_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac3c5e50:;
			if (it != expr_end) {
				jule::I32 _104118_i = it - expr->begin();
				jule::Ptr<_1a8e81635_InsGeneric> _104125_g = *it;
				{
					(*((*((*(_103643_f))))._field_Generics[_104118_i]))._field_Constraint=(*(_104125_g))._field_Constraint;
				}
				_iter_next_1ac3c5e50:;
				++it;
				_104118_i++;
				goto _iter_begin_1ac3c5e50;
			}
			_iter_end_1ac3c5e50:;
		};
	} else {
		(*_103713_cc.alloc)._field_uniq=true;
	};
	return _1a8d77592_check(_103713_cc);;
}



inline jule::Bool _1a8dce41d_checkConstraintsStruct(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _105047_s, jule::Ptr<_1a875ce89_Token>* _105067_et, jule::Ptr<_1a8d29ba4_StructIns> _105083_exist) {
	jule::Ptr<_1a8d7665c_constraintChecker> _105113_cc = _1a8dc9704_constraintChecker(_self_);;
	(*(_105113_cc))._field_et=(*(_105067_et));
	(*_105113_cc.alloc)._field_si=(*(_105047_s));
	if ((_105083_exist != nullptr)) {
		{
			auto expr = &((*_105083_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac3c90da:;
			if (it != expr_end) {
				jule::I32 _105518_i = it - expr->begin();
				jule::Ptr<_1a8e81635_InsGeneric> _105525_g = *it;
				{
					(*((*((*(_105047_s))))._field_Generics[_105518_i]))._field_Constraint=(*(_105525_g))._field_Constraint;
				}
				_iter_next_1ac3c90da:;
				++it;
				_105518_i++;
				goto _iter_begin_1ac3c90da;
			}
			_iter_end_1ac3c90da:;
		};
	} else {
		(*_105113_cc.alloc)._field_uniq=true;
	};
	return _1a8d77592_check(_105113_cc);;
}



inline jule::Bool _1a8dce819_fnEnvironment(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _106738_f, jule::Fn<jule::Bool,jule::Ptr<_1a8dc1344_Sema>*,jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>*> _106749_algo) {
	jule::Ptr<_1a8dc1344_Sema> _106813_sema = (*((*((*(_106738_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1a8e4694c_SymbolTable> _106913_old = (*((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1a8dc3a61_setCurrentFile((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema, _106913_old);
	});;
	jule::Ptr<_1a8e4694c_SymbolTable> _107113_file = _1a8dc008a_findFile(&((*(*(*((*(_106738_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_106738_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_107113_file != nullptr)) {
		_1a8dc3a61_setCurrentFile((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema, _107113_file);
	};
	jule::I32 _107613_size = (*((*(_106738_f))))._field_Generics.len();;
	if ((((*((*(_106738_f))))._field_Decl != nullptr) && ((*(*((*(_106738_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_107613_size+=(*(*(*((*(_106738_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _108113_generics = jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>::alloc(0LL, _107613_size);;
	_1a8dbec16_appendGenericTypeAliases(&(_108113_generics), _106738_f);
	jule::Bool _10849_ok = _106749_algo(&(_106813_sema), &(_108113_generics));;
	if ((_106813_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_106813_sema))._field_errors);
		(*_106813_sema.alloc)._field_errors=nullptr;
	};
	return _10849_ok;;
}



inline void _1a8dceac2_checkFnParamKind(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3dde9_ParamIns>* _109441_p) {
	(*((*((*(_109441_p))))._field_Kind))._field_Variadic=(*((*((*(_109441_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_109441_p))))._field_Decl.alloc)._field_Reference && (!(_1a8e9e4cc_isValidForRef(&((*((*(_109441_p))))._field_Kind)))))) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*(*((*(_109441_p))))._field_Decl.alloc)._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_109441_p))))._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Bool _1a8dcee13_reloadFnInsTypes(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3ee72_FnIns> _110140_f) {
	if ((_1a8d41407_IsBuiltin(_110140_f.ptr()) || _1a8d4168d_IsAnon(_110140_f))) {
		return true;;
	};
	return _1a8dce819_fnEnvironment(_self_, &(_110140_f), jule::__new_closure<jule::Bool,jule::Ptr<_1a8dc1344_Sema>*,jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>*>((void*)__jule_anon_1ac3d67bd, jule::Ptr<__jule_anon_1ac3d67bd_ctx>::make(__jule_anon_1ac3d67bd_ctx{._110140_f=_110140_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac3d67bd_ctx_handler));;
}



inline jule::Bool _1a8dd03b9_checkRefValidityForInitExpr(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Bool _113747_leftMut, jule::Ptr<_1a8e4bcb5_Data>* _113767_d, jule::Ptr<_1a875ce89_Token>* _113782_errorToken) {
	if ((!(_1a8dbd9d4_isValidModelForRef(&((*((*(_113767_d))))._field_Model))))) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*(_113782_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_113747_leftMut && (!((*((*(_113767_d))))._field_Mutable)))) {
		_1a8dc3e7e_pushErr(_self_, (*(_113782_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1a8dd070a_isMutRiskyStruct(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d29ba4_StructIns>* _115432_s) {
	{
		auto expr = &((*((*(_115432_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3e11ce:;
		if (it != expr_end) {
			jule::Ptr<_1a8d29104_FieldIns> *_115516_f = it;
			{
				if ((((*((*((*(_115516_f))))._field_Decl))._field_Mutable && _1a8e8489c_Mutable((*(*(_115516_f)).alloc)._field_Kind.ptr())) && _1a8dc46dd_isAccessibleDefine(_self_, (*(*(*(_115516_f)).alloc)._field_Decl.alloc)._field_Public, (*(*(*(_115516_f)).alloc)._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1ac3e11ce:;
			++it;
			goto _iter_begin_1ac3e11ce;
		}
		_iter_end_1ac3e11ce:;
	};
	return false;;
}



inline jule::Bool _1a8dd0d26_checkValidityForInitExpr(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Bool _118144_leftMut, jule::Bool _118159_leftRef, jule::Ptr<_1a8e8301b_TypeKind>* _118210_leftKind, jule::Ptr<_1a8e4bcb5_Data>* _118236_d, jule::Ptr<_1a875ce89_Token>* _118251_errorToken) {
	if ((_118144_leftMut && (!((*((*(_118236_d))))._field_Mutable)))) {
		if (_1a8e8489c_Mutable((*((*(_118236_d))))._field_Kind.ptr())) {
			_1a8dc3e7e_pushErr(_self_.ptr(), (*(_118251_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_118236_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1a8d29ba4_StructIns> _119013_s = _1a8e86be0_Struct((*((*(_118236_d))))._field_Kind);;
		if (((_119013_s != nullptr) && _1a8dd070a_isMutRiskyStruct(_self_, &(_119013_s)))) {
			_1a8dc3e7e_pushErr(_self_, (*(_118251_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_118236_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_118159_leftRef) {
		if ((!(_1a8dd03b9_checkRefValidityForInitExpr(_self_, _118144_leftMut, _118236_d, _118251_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1a8e3572c_assignTypeChecker> _120113_atc = jule::new_ptr<_1a8e3572c_assignTypeChecker>(_1a8e3572c_assignTypeChecker{._field_s=_self_, ._field_d=(*(_118236_d)), ._field_errorToken=(*(_118251_errorToken))});;
	return _1a8e35e47_checkValidity(_120113_atc.ptr());;
}



inline jule::Bool _1a8dd1222_checkTypeAliasDeclKind(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e82229_TypeAlias>* _120947_ta, jule::Trait _120967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8e4694c_SymbolTable> _121013_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a8dc3a61_setCurrentFile(_self_, _121013_old);
	});;
	if (((*((*(_120947_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1a8e4694c_SymbolTable> _121517_file = _1a8dc008a_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_120947_ta))))._field_Token.alloc)._field_File));;
		if ((_121517_file != nullptr)) {
			_1a8dc3a61_setCurrentFile(_self_, _121517_file);
		};
	};
	__jule_func_result=_1a8dc946d_checkTypeWithRefers(_self_, &((*((*(_120947_ta))))._field_Kind), _120967_l, nullptr, jule::new_ptr<_1a8e93dd9_referencer>(_1a8e93dd9_referencer{._field_ident=(*((*(_120947_ta))))._field_Ident, ._field_owner=jule::Any((*(_120947_ta)), &__jule_any_type65), ._field_refs=(&((*((*(_120947_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1a8e8643c_Arr((*((*((*(_120947_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1a8e8643c_Arr((*(*((*(_120947_ta))))._field_Kind.alloc)._field_Kind)))._field_Auto)) {
		_1a8dc3e7e_pushErr(_self_, (*((*(*((*(_120947_ta))))._field_Kind.alloc)._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1a8dd1585_checkTypeAliasDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e82229_TypeAlias>* _123243_ta, jule::Trait _123263_l) {
	if (_1a8760871_IsIgnoreIdent((*((*(_123243_ta))))._field_Ident)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_123243_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1a8dd1222_checkTypeAliasDeclKind(_self_, _123243_ta, _123263_l);
}



inline void _1a8dd183d_checkTypeAliasDeclDup(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e82229_TypeAlias>* _124046_ta) {
	if (_1a8760871_IsIgnoreIdent((*((*(_124046_ta))))._field_Ident)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_124046_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a8dc4b94_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_124046_ta))), &((*((*(_124046_ta))))._field_Ident), (*((*(_124046_ta))))._field_Binded)) {
		_1a8dc3e7e_pushErr(_self_, (*((*(_124046_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124046_ta))))._field_Ident, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a8dd1222_checkTypeAliasDeclKind(_self_, _124046_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3));
}



inline jule::Bool _1a8dd1ac4_checkTypeAliasDecls(jule::Ptr<_1a8dc1344_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac403d90:;
		if (it != expr_end) {
			jule::Ptr<_1a8e82229_TypeAlias> _125321_ta = *it;
			{
				_1a8dd183d_checkTypeAliasDeclDup(_self_, &(_125321_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac403d90:;
			++it;
			goto _iter_begin_1ac403d90;
		}
		_iter_end_1ac403d90:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ac435784_checkEnumItemsDup(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d51ed9_EnumItem>> _126439_items) {
	{
		auto expr = &(_126439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac436b92:;
		if (it != expr_end) {
			jule::Ptr<_1a8d51ed9_EnumItem> *_126516_item = it;
			{
				if (((*((*(_126516_item))))._field_Ident).empty()) {
					goto _iter_next_1ac436b92;
				} else if (_1a8760871_IsIgnoreIdent((*((*(_126516_item))))._field_Ident)) {
					_1a8dc3e7e_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac438688:;
						if (it != expr_end) {
							jule::Ptr<_1a8d51ed9_EnumItem> *_127124_citem = it;
							{
								if (((*(_126516_item)) == (*(_127124_citem)))) {
									goto _iter_end_1ac438688;
								} else if (((*((*(_126516_item))))._field_Ident == (*((*(_127124_citem))))._field_Ident)) {
									_1a8dc3e7e_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126516_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ac438688;
								};
							}
							_iter_next_1ac438688:;
							++it;
							goto _iter_begin_1ac438688;
						}
						_iter_end_1ac438688:;
					};
				};
			}
			_iter_next_1ac436b92:;
			++it;
			goto _iter_begin_1ac436b92;
		}
		_iter_end_1ac436b92:;
	};
}

inline void _1ac442a8d_checkEnumItemsDup(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8d53b89_TypeEnumItem>> _126439_items) {
	{
		auto expr = &(_126439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac443e79:;
		if (it != expr_end) {
			jule::Ptr<_1a8d53b89_TypeEnumItem> *_126516_item = it;
			{
				if (((*((*(_126516_item))))._field_Ident).empty()) {
					goto _iter_next_1ac443e79;
				} else if (_1a8760871_IsIgnoreIdent((*((*(_126516_item))))._field_Ident)) {
					_1a8dc3e7e_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac445970:;
						if (it != expr_end) {
							jule::Ptr<_1a8d53b89_TypeEnumItem> *_127124_citem = it;
							{
								if (((*(_126516_item)) == (*(_127124_citem)))) {
									goto _iter_end_1ac445970;
								} else if (((*((*(_126516_item))))._field_Ident == (*((*(_127124_citem))))._field_Ident)) {
									_1a8dc3e7e_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126516_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ac445970;
								};
							}
							_iter_next_1ac445970:;
							++it;
							goto _iter_begin_1ac445970;
						}
						_iter_end_1ac445970:;
					};
				};
			}
			_iter_next_1ac443e79:;
			++it;
			goto _iter_begin_1ac443e79;
		}
		_iter_end_1ac443e79:;
	};
}



inline void _1a8dd2135_checkEnumItemsStr(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d52a56_Enum>* _128442_e) {
	jule::Ptr<_1a8e4d9dc_Eval> _128513_eval = _1a8dcb42b_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3));;
	{
		auto expr = &((*((*(_128442_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac405b0b:;
		if (it != expr_end) {
			jule::Ptr<_1a8d51ed9_EnumItem> _128621_item = *it;
			{
				if (_1a8d52391_AutoExpr(_128621_item.ptr())) {
					(*_128621_item.alloc)._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Constant=static__20a2b82de_NewStr((*_128621_item.alloc)._field_Ident)})});
					(*((*((*_128621_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*(*_128621_item.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1a8e4bcb5_Data> _129521_d = _1a8e6bc4c_evalExpr(_128513_eval, (*((*(_128621_item))._field_Value))._field_Expr);;
					if ((_129521_d == nullptr)) {
						goto _iter_next_1ac405b0b;
					};
					if ((!(_1a8e4c6bc_IsConst(_129521_d.ptr())))) {
						_1a8dc3e7e_pushErr(_self_, (*((*(*_128621_item.alloc)._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1a8dcb98c_checkAssignType(_self_, false, &((*((*((*(_128442_e))))._field_Kind))._field_Kind), &(_129521_d), (*_128621_item.alloc)._field_Token);
					(*(*_128621_item.alloc)._field_Value.alloc)._field_Data=_129521_d;
				};
			}
			_iter_next_1ac405b0b:;
			++it;
			goto _iter_begin_1ac405b0b;
		}
		_iter_end_1ac405b0b:;
	};
}



inline void _1ac411397_checkEnumItemInt(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _131046_eval, jule::Ptr<_1a8d52a56_Enum>* _131064_e, jule::Ptr<_1a8e8aae5_Prim>* _131075_prim, jule::Ptr<_1a8d51ed9_EnumItem>* _131093_item, jule::U64* _1310115_n) {
	if (_1a8d52391_AutoExpr((*(_131093_item)).ptr())) {
		(*((*(_131093_item))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		{
			
{
				_case_begin_1ac413773:;
				{
					(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Constant=static__20a2b7c5b_NewU64((*(_1310115_n)));
				}
			}
			_match_end_1ac413ad6:;
		};
		(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131093_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1a8e4bcb5_Data> _132517_d = _1a8e6bc4c_evalExpr((*(_131046_eval)), (*((*((*(_131093_item))))._field_Value))._field_Expr);;
		if ((_132517_d == nullptr)) {
			return;;
		};
		if ((!(_1a8e4c6bc_IsConst(_132517_d.ptr())))) {
			_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(*((*(_131093_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1a8dcb98c_checkAssignType(_self_, false, &((*((*((*(_131064_e))))._field_Kind))._field_Kind), &(_132517_d), (*((*(_131093_item))))._field_Token);
		(*(*((*(_131093_item))))._field_Value.alloc)._field_Data=_132517_d;
		{
			
{
				_case_begin_1ac416963:;
				{
					(*(_1310115_n))=_20a2b91ad_ReadU64((*((*(*((*(_131093_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1ac418e3d:;
		};
	};
}

inline void _1ac42141d_checkEnumItemInt(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e4d9dc_Eval>* _131046_eval, jule::Ptr<_1a8d52a56_Enum>* _131064_e, jule::Ptr<_1a8e8aae5_Prim>* _131075_prim, jule::Ptr<_1a8d51ed9_EnumItem>* _131093_item, jule::I64* _1310115_n) {
	if (_1a8d52391_AutoExpr((*(_131093_item)).ptr())) {
		(*((*(_131093_item))))._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()});
		{
			
{
				_case_begin_1ac424157:;
				{
					(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Constant=static__20a2b7992_NewI64((*(_1310115_n)));
				}
			}
			_match_end_1ac423ae6:;
		};
		(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131093_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1a8e4bcb5_Data> _132517_d = _1a8e6bc4c_evalExpr((*(_131046_eval)), (*((*((*(_131093_item))))._field_Value))._field_Expr);;
		if ((_132517_d == nullptr)) {
			return;;
		};
		if ((!(_1a8e4c6bc_IsConst(_132517_d.ptr())))) {
			_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(*((*(_131093_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1a8dcb98c_checkAssignType(_self_, false, &((*((*((*(_131064_e))))._field_Kind))._field_Kind), &(_132517_d), (*((*(_131093_item))))._field_Token);
		(*(*((*(_131093_item))))._field_Value.alloc)._field_Data=_132517_d;
		{
			
{
				_case_begin_1ac42914b:;
				{
					(*(_1310115_n))=_20a2b8e27_ReadI64((*((*(*((*(_131093_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1ac4290d5:;
		};
	};
}



inline void _1ac40c53b_checkEnumItemsInt1(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8aae5_Prim>* _134544_prim, jule::Ptr<_1a8d52a56_Enum>* _134562_e) {
	jule::U64 _134613_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1ac40e252:;
			{
				_134613_max=_20a2b2c12_MaxU(_1a8e8ae36_Str((*(_134544_prim)).ptr()));
			}
		}
		_match_end_1ac40e076:;
	};
	jule::Ptr<_1a8e4d9dc_Eval> _135613_eval = _1a8dcb42b_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3));;
	jule::U64 _135713_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a8d51ed9_EnumItem> _135813_first = (*((*(_134562_e))))._field_Items[0LL];;
	_1ac411397_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_135813_first), &(_135713_n));
	if (((*((*(_135813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ac40da7b:;
				{
					_135713_n=_20a2b9e7d_AsU64((*(*(*_135813_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1ac41a071:;
		};
	};
	{
		auto expr = (*((*(_134562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac415c2b:;
		if (it != expr_end) {
			jule::Ptr<_1a8d51ed9_EnumItem> _137021_item = *it;
			{
				if (((_1a8d52391_AutoExpr(_137021_item.ptr()) && (_135713_n > 0LLU)) && ((_134613_max - _135713_n) <= 0LLU))) {
					_1a8dc3e7e_pushErr(_self_, (*_137021_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ac415c2b;
				};
				(_135713_n)++;
				_1ac411397_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_137021_item), &(_135713_n));
			}
			_iter_next_1ac415c2b:;
			++it;
			goto _iter_begin_1ac415c2b;
		}
		_iter_end_1ac415c2b:;
	};
}

inline void _1ac41cb23_checkEnumItemsInt1(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8e8aae5_Prim>* _134544_prim, jule::Ptr<_1a8d52a56_Enum>* _134562_e) {
	jule::I64 _134613_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1ac41e2b7:;
			{
				_134613_max=_20a2b2948_MaxI(_1a8e8ae36_Str((*(_134544_prim)).ptr()));
			}
		}
		_match_end_1ac41de65:;
	};
	jule::Ptr<_1a8e4d9dc_Eval> _135613_eval = _1a8dcb42b_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3));;
	jule::I64 _135713_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1a8d51ed9_EnumItem> _135813_first = (*((*(_134562_e))))._field_Items[0LL];;
	_1ac42141d_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_135813_first), &(_135713_n));
	if (((*((*(_135813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ac42030c:;
				{
					_135713_n=_20a2b9be7_AsI64((*(*(*_135813_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1ac4296ce:;
		};
	};
	{
		auto expr = (*((*(_134562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac42abec:;
		if (it != expr_end) {
			jule::Ptr<_1a8d51ed9_EnumItem> _137021_item = *it;
			{
				if (((_1a8d52391_AutoExpr(_137021_item.ptr()) && (_135713_n > 0LL)) && ((_134613_max - _135713_n) <= 0LL))) {
					_1a8dc3e7e_pushErr(_self_, (*_137021_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ac42abec;
				};
				(_135713_n)++;
				_1ac42141d_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_137021_item), &(_135713_n));
			}
			_iter_next_1ac42abec:;
			++it;
			goto _iter_begin_1ac42abec;
		}
		_iter_end_1ac42abec:;
	};
}



inline void _1a8dd2cd4_checkEnumItemsInt(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d52a56_Enum>* _138042_e) {
	jule::Ptr<_1a8e8aae5_Prim> _13819_prim = _1a8e8566c_Prim((*((*((*(_138042_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_20a2b630e_IsSigInt((*(_13819_prim))._field_Kind)) {
			_case_begin_1ac41b380:;
			{
				_1ac41cb23_checkEnumItemsInt1(_self_, &(_13819_prim), _138042_e);
			}
		}
		else {
			_case_begin_1ac40bcbb:;
			{
				_1ac40c53b_checkEnumItemsInt1(_self_, &(_13819_prim), _138042_e);
			}
		}
		_match_end_1ac40bc55:;
	};
}



inline void _1a8dd308c_checkEnumDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d52a56_Enum>* _139038_e) {
	if (_1a8760871_IsIgnoreIdent((*((*(_139038_e))))._field_Ident)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_139038_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a8dc4b94_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_139038_e))), &((*((*(_139038_e))))._field_Ident), false)) {
		_1a8dc3e7e_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139038_e))))._field_Ident, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_139038_e))))._field_Items.len() == 0LL)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_139038_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_139038_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1ac435784_checkEnumItemsDup(_self_, (*((*(_139038_e))))._field_Items);
	if (((*((*(_139038_e))))._field_Kind != nullptr)) {
		if ((!(_1a8dc9b00_checkType(_self_, &((*((*(_139038_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3))))) {
			return;;
		};
	} else {
		(*((*(_139038_e))))._field_Kind=(*(_1a9068b7e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1a8e8aae5_Prim> _141413_t = _1a8e8566c_Prim((*((*((*(_139038_e))))._field_Kind))._field_Kind.ptr());;
	if ((_141413_t == nullptr)) {
		_1a8dc3e7e_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a8e8e07c_IsStr(_141413_t.ptr())) {
			_case_begin_1ac43c3e5:;
			{
				_1a8dd2135_checkEnumItemsStr(_self_, _139038_e);
			}
		}
		else if (_20a2b68d6_IsInt(_1a8e8ae36_Str(_141413_t.ptr()))) {
			_case_begin_1ac43b735:;
			{
				_1a8dd2cd4_checkEnumItemsInt(_self_, _139038_e);
			}
		}
		else {
			_case_begin_1ac43b6be:;
			{
				_1a8dc3e7e_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac43c1d6:;
	};
}



inline void _1a8dd3345_checkTypeEnumDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d54261_TypeEnum>* _143142_e) {
	if (_1a8760871_IsIgnoreIdent((*((*(_143142_e))))._field_Ident)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_143142_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a8dc4b94_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_143142_e))), &((*((*(_143142_e))))._field_Ident), false)) {
		_1a8dc3e7e_pushErr(_self_, (*((*(_143142_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143142_e))))._field_Ident, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_143142_e))))._field_Items.len() == 0LL)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_143142_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_143142_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1ac442a8d_checkEnumItemsDup(_self_, (*((*(_143142_e))))._field_Items);
	{
		auto expr = &((*((*(_143142_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac443a28:;
		if (it != expr_end) {
			jule::Ptr<_1a8d53b89_TypeEnumItem> _144521_item = *it;
			{
				if (((*(_144521_item))._field_Kind == nullptr)) {
					_1a8dc3e7e_pushErr(_self_, (*_144521_item.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1ac443a28;
				};
				jule::Bool _145013_ok = _1a8dc9b00_checkType(_self_, &((*_144521_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3));;
				if ((!(_145013_ok))) {
					goto _iter_next_1ac443a28;
				};
				jule::Ptr<_1a8e8aae5_Prim> _145413_p = _1a8e8566c_Prim((*((*_144521_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_145413_p != nullptr) && _1a8e8e313_IsAny(_145413_p))) {
					_1a8dc3e7e_pushErr(_self_, (*_144521_item.alloc)._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ac443a28:;
			++it;
			goto _iter_begin_1ac443a28;
		}
		_iter_end_1ac443a28:;
	};
	if (((*((*(_143142_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1a8d53b89_TypeEnumItem> _146017_item = (*((*(_143142_e))))._field_Items[0LL];;
		_1a8e8301b_TypeKind _146113_tk = _1a8e8301b_TypeKind{._field_Kind=jule::Trait((*(_143142_e)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data4)};;
		if ((((*((*(_146017_item))._field_Kind))._field_Kind != nullptr) && _1a8e83725_Equal((*((*_146017_item.alloc)._field_Kind))._field_Kind, ((jule::Ptr<_1a8e8301b_TypeKind>)((&(_146113_tk))))))) {
			_1a8dc3e7e_pushErr(_self_, (*_146017_item.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1a8d545a2_Str((*(_143142_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1a8dd35cb_checkEnumDecls(jule::Ptr<_1a8dc1344_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac44dd30:;
		if (it != expr_end) {
			jule::Ptr<_1a8d52a56_Enum> _147221_e = *it;
			{
				_1a8dd308c_checkEnumDecl(_self_, &(_147221_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac44dd30:;
			++it;
			goto _iter_begin_1ac44dd30;
		}
		_iter_end_1ac44dd30:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a8dd3862_checkTypeEnumDecls(jule::Ptr<_1a8dc1344_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4504d5:;
		if (it != expr_end) {
			jule::Ptr<_1a8d54261_TypeEnum> _148421_e = *it;
			{
				_1a8dd3345_checkTypeEnumDecl(_self_, &(_148421_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac4504d5:;
			++it;
			goto _iter_begin_1ac4504d5;
		}
		_iter_end_1ac4504d5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a8dd3ba3_checkDeclGenerics(_1a8dc1344_Sema* _self_, jule::Slice<jule::Ptr<_1a8780770_GenericDecl>>* _149437_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149437_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac45198c:;
		if (it != expr_end) {
			jule::I32 _149613_i = it - expr->begin();
			jule::Ptr<_1a8780770_GenericDecl> *_149616_g = it;
			{
				if (_1a8760871_IsIgnoreIdent((*((*(_149616_g))))._field_Ident)) {
					_1a8dc3e7e_pushErr(_self_, (*(*(_149616_g)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ac45198c;
				};
				_julec_label_1ac452d34:;
				{
					auto expr = _149437_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac4527c3:;
					if (it != expr_end) {
						jule::I32 _150517_j = it - expr->begin();
						jule::Ptr<_1a8780770_GenericDecl> *_150520_ct = it;
						{
							{
								
								if ((_150517_j >= _149613_i)) {
									_case_begin_1ac453e12:;
									{
										goto _iter_end_1ac4527c3;
									}
								}
								else if (((*(*(_149616_g)).alloc)._field_Ident == (*((*(_150520_ct))))._field_Ident)) {
									_case_begin_1ac453e9a:;
									{
										_1a8dc3e7e_pushErr(_self_, (*(*(_149616_g)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_149616_g)).alloc)._field_Ident, &__jule_any_type4)}));
										_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1ac4527c3;
									}
								}
								_match_end_1ac453d13:;
							};
						}
						_iter_next_1ac4527c3:;
						++it;
						_150517_j++;
						goto _iter_begin_1ac4527c3;
					}
					_iter_end_1ac4527c3:;
				};
			}
			_iter_next_1ac45198c:;
			++it;
			_149613_i++;
			goto _iter_begin_1ac45198c;
		}
		_iter_end_1ac45198c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a8dd3ee4_checkFnDeclParamsDup(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d3be91_Fn>* _152140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1ac456211:;
	{
		auto expr = &((*((*(_152140_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4564ec:;
		if (it != expr_end) {
			jule::I32 _152413_i = it - expr->begin();
			jule::Ptr<_1a8d3a4bc_Param> *_152416_p = it;
			{
				{
					auto expr = &((*((*(_152140_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac4571ce:;
					if (it != expr_end) {
						jule::Ptr<_1a8780770_GenericDecl> *_152620_g = it;
						{
							if (((*((*(_152416_p))))._field_Ident == (*((*(_152620_g))))._field_Ident)) {
								__jule_func_result=false;
								_1a8dc3e7e_pushErr(_self_, (*(*(_152416_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152416_p)).alloc)._field_Ident, &__jule_any_type4)}));
								_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1ac4564ec;
							};
						}
						_iter_next_1ac4571ce:;
						++it;
						goto _iter_begin_1ac4571ce;
					}
					_iter_end_1ac4571ce:;
				};
				_julec_label_1ac458a1b:;
				{
					auto expr = &((*((*(_152140_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac4576a7:;
					if (it != expr_end) {
						jule::I32 _153617_j = it - expr->begin();
						jule::Ptr<_1a8d3a4bc_Param> *_153620_jp = it;
						{
							{
								
								if ((_153617_j >= _152413_i)) {
									_case_begin_1ac4599d9:;
									{
										goto _iter_end_1ac4576a7;
									}
								}
								else if (_1a8760871_IsIgnoreIdent((*(*(_152416_p)).alloc)._field_Ident) || _1a8760871_IsIgnoreIdent((*((*(_153620_jp))))._field_Ident) || _1a8760b3a_IsAnonIdent((*(*(_152416_p)).alloc)._field_Ident) || _1a8760b3a_IsAnonIdent((*(*(_153620_jp)).alloc)._field_Ident)) {
									_case_begin_1ac459a72:;
									{
										goto _iter_end_1ac4576a7;
									}
								}
								else if (((*(*(_152416_p)).alloc)._field_Ident == (*((*(_153620_jp))))._field_Ident)) {
									_case_begin_1ac459ad8:;
									{
										__jule_func_result=false;
										_1a8dc3e7e_pushErr(_self_, (*(*(_152416_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152416_p)).alloc)._field_Ident, &__jule_any_type4)}));
										_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1ac4564ec;
									}
								}
								_match_end_1ac459896:;
							};
						}
						_iter_next_1ac4576a7:;
						++it;
						_153617_j++;
						goto _iter_begin_1ac4576a7;
					}
					_iter_end_1ac4576a7:;
				};
			}
			_iter_next_1ac4564ec:;
			++it;
			_152413_i++;
			goto _iter_begin_1ac4564ec;
		}
		_iter_end_1ac4564ec:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a8dd4335_checkFnDeclResultDup(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d3be91_Fn>* _155840_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1a8d3c414_IsVoid((*(_155840_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_155840_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac45d5c0:;
		if (it != expr_end) {
			jule::I32 _156513_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> *_156516_v = it;
			{
				if ((_1a8760871_IsIgnoreIdent((*((*(_156516_v))))._field_Kind) || _1a8760b3a_IsAnonIdent((*(*(_156516_v)).alloc)._field_Kind))) {
					goto _iter_next_1ac45d5c0;
				};
				{
					auto expr = &((*((*(_155840_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac45eb65:;
					if (it != expr_end) {
						jule::Ptr<_1a8780770_GenericDecl> *_157020_g = it;
						{
							if (((*(*(_156516_v)).alloc)._field_Kind == (*((*(_157020_g))))._field_Ident)) {
								goto _julec_label_1ac4639c1;
							};
						}
						_iter_next_1ac45eb65:;
						++it;
						goto _iter_begin_1ac45eb65;
					}
					_iter_end_1ac45eb65:;
				};
				{
					auto expr = &((*((*(_155840_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac4610c8:;
					if (it != expr_end) {
						jule::Ptr<_1a8d3a4bc_Param> *_157620_p = it;
						{
							if (((*(*(_156516_v)).alloc)._field_Kind == (*((*(_157620_p))))._field_Ident)) {
								goto _julec_label_1ac4639c1;
							};
						}
						_iter_next_1ac4610c8:;
						++it;
						goto _iter_begin_1ac4610c8;
					}
					_iter_end_1ac4610c8:;
				};
				_julec_label_1ac461d65:;
				{
					auto expr = &((*((*((*(_155840_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac462827:;
					if (it != expr_end) {
						jule::I32 _158417_j = it - expr->begin();
						jule::Ptr<_1a875ce89_Token> *_158420_jv = it;
						{
							{
								
								if ((_158417_j >= _156513_i)) {
									_case_begin_1ac463394:;
									{
										goto _iter_end_1ac462827;
									}
								}
								else if (((*((*(_158420_jv))))._field_Kind == (*(*(_156516_v)).alloc)._field_Kind)) {
									_case_begin_1ac46342c:;
									{
										goto _julec_label_1ac4639c1;
									}
								}
								_match_end_1ac463295:;
							};
						}
						_iter_next_1ac462827:;
						++it;
						_158417_j++;
						goto _iter_begin_1ac462827;
					}
					_iter_end_1ac462827:;
				};
				goto _iter_next_1ac45d5c0;
				_julec_label_1ac4639c1:;
				_1a8dc3e7e_pushErr(_self_, (*(_156516_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_156516_v)).alloc)._field_Kind, &__jule_any_type4)}));
				_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1ac45d5c0:;
			++it;
			_156513_i++;
			goto _iter_begin_1ac45d5c0;
		}
		_iter_end_1ac45d5c0:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a8dd4676_checkFnVariadicParam(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _160345_f) {
	if (((*((*(_160345_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1a8d3a4bc_Param> _160713_param = (*((*(_160345_f))))._field_Params[((*((*(_160345_f))))._field_Params.len() - 1LL)];;
	if (((*(_160713_param))._field_Variadic && (*_160713_param.alloc)._field_Reference)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*_160713_param.alloc)._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1a8dd492e_checkFnDeclPrototype(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _161645_f) {
	if (((*((*(_161645_f))))._field_Exceptional && (*((*(_161645_f))))._field_Binded)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_161645_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_161645_f))))._field_Exceptional) {
		if (_1a8d3c931_IsEntryPoint((*(_161645_f)).ptr())) {
			_1a8dc3e7e_pushErr(_self_, (*((*(_161645_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1a8d3cbb7_IsInit((*(_161645_f)).ptr())) {
			_1a8dc3e7e_pushErr(_self_, (*((*(_161645_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a8dd3ba3_checkDeclGenerics(_self_, &((*((*(_161645_f))))._field_Generics))))) {
			_case_begin_1ac46a951:;
		}
		else if ((!(_1a8dd3ee4_checkFnDeclParamsDup(_self_, _161645_f)))) {
			_case_begin_1ac46a9b7:;
		}
		else if ((!(_1a8dd4335_checkFnDeclResultDup(_self_, _161645_f)))) {
			_case_begin_1ac46aa2d:;
		}
		else if ((!(_1a8dd4676_checkFnVariadicParam(_self_, _161645_f)))) {
			_case_begin_1ac46aa94:;
		}
		_match_end_1ac469037:;
	};
}



inline jule::Bool _1a8dd4dd5_catchTraitInheritCycle(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d5034a_Trait> _163842_t1, jule::Ptr<_1a8d5034a_Trait> _163858_t2, _2234c269a_StrBuilder* _163875_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_163858_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac46d0d5:;
		if (it != expr_end) {
			jule::Ptr<_1a8e8a1dd_TypeSymbol> _164021_i = *it;
			{
				if (((*(_164021_i))._field_Kind == nullptr)) {
					goto _iter_next_1ac46d0d5;
				};
				jule::Ptr<_1a8d5034a_Trait> _164417_t3 = _1a8e86e76_Trait((*_164021_i.alloc)._field_Kind.ptr());;
				if ((_163842_t1 == _164417_t3)) {
					_1a8dd9b65_pushCycleError(_self_.ptr(), &((*(_163858_t2))._field_Ident), &((*(_164417_t3))._field_Ident), _163875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1a8dd4dd5_catchTraitInheritCycle(_self_, _163842_t1, _164417_t3, _163875_message)))) {
					_1a8dd9b65_pushCycleError(_self_, &((*_163858_t2.alloc)._field_Ident), &((*_164417_t3.alloc)._field_Ident), _163875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac46d0d5:;
			++it;
			goto _iter_begin_1ac46d0d5;
		}
		_iter_end_1ac46d0d5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a8dd5226__checkTraitDeclInherits(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d5034a_Trait>* _165748_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165748_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac471858:;
		if (it != expr_end) {
			jule::I32 _165914_i = it - expr->begin();
			jule::Ptr<_1a8e8a1dd_TypeSymbol> _165921_it = *it;
			{
				if ((!(_1a8dc9b00_checkType(_self_, &(_165921_it), jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3))))) {
					__jule_func_result=false;
					goto _iter_next_1ac471858;
				};
				jule::Ptr<_1a8d5034a_Trait> _166417_t2 = _1a8e86e76_Trait((*(_165921_it))._field_Kind.ptr());;
				if ((_166417_t2 == nullptr)) {
					_1a8dc3e7e_pushErr(_self_, (*((*_165921_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165748_t))))._field_Ident, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*_165921_it.alloc)._field_Kind), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1ac471858;
				};
				{
					auto expr = &((*((*(_165748_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac474cac:;
					if (it != expr_end) {
						jule::I32 _167017_j = it - expr->begin();
						jule::Ptr<_1a8e8a1dd_TypeSymbol> _167020_it2 = *it;
						{
							if ((_167017_j >= _165914_i)) {
								goto _iter_end_1ac474cac;
							};
							if ((((*(_167020_it2))._field_Kind != nullptr) && _1a8e83725_Equal((*_165921_it.alloc)._field_Kind, (*_167020_it2.alloc)._field_Kind))) {
								_1a8dc3e7e_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_166417_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1ac474cac;
							};
						}
						_iter_next_1ac474cac:;
						++it;
						_167017_j++;
						goto _iter_begin_1ac474cac;
					}
					_iter_end_1ac474cac:;
				};
				if (((*(_165748_t)) == _166417_t2)) {
					_1a8dc3e7e_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165748_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_2234c269a_StrBuilder _168421_message = static__2234c2ac9_New(64LL);;
					__jule_func_result=(__jule_func_result && _1a8dd4dd5_catchTraitInheritCycle(_self_, (*(_165748_t)), _166417_t2, &(_168421_message)));
					if ((_2234c3db6_Len(&_168421_message) > 0LL)) {
						jule::Str _168725_errMsg = _2234c3932_Str(&_168421_message);;
						_2234c3b30_Clear(&_168421_message);
						_1a8dd9b65_pushCycleError(_self_, &((*((*(_165748_t))))._field_Ident), &((*(_166417_t2))._field_Ident), &(_168421_message));
						_168725_errMsg+=_2234c3932_Str(&_168421_message);
						_1a8dc3e7e_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_168725_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1ac471858:;
			++it;
			_165914_i++;
			goto _iter_begin_1ac471858;
		}
		_iter_end_1ac471858:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a8dd54ce_checkTraitDeclInherits(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d5034a_Trait>* _169847_t) {
	{
		auto expr = &((*((*(_169847_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac47b7b9:;
		if (it != expr_end) {
			jule::I32 _169914_i = it - expr->begin();
			jule::Ptr<_1a8e8a1dd_TypeSymbol> _169921_it = *it;
			{
				jule::Ptr<_1a8d5034a_Trait> _170017_t1 = _1a8e86e76_Trait((*(_169921_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_169847_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac47ccc6:;
					if (it != expr_end) {
						jule::I32 _170118_j = it - expr->begin();
						jule::Ptr<_1a8e8a1dd_TypeSymbol> _170125_it2 = *it;
						{
							if ((_170118_j == _169914_i)) {
								goto _iter_next_1ac47ccc6;
							};
							jule::Ptr<_1a8d5034a_Trait> _170521_t2 = _1a8e86e76_Trait((*(_170125_it2))._field_Kind);;
							{
								auto expr = &((*(_170017_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac47e547:;
								if (it != expr_end) {
									jule::Ptr<_1a8d3be91_Fn> _170629_t1m = *it;
									{
										jule::Ptr<_1a8d3be91_Fn> _170725_t2m = _1a8d50ee9_FindMethod(_170521_t2.ptr(), (*(_170629_t1m))._field_Ident);;
										if ((_170725_t2m == nullptr)) {
											goto _iter_next_1ac47e547;
										};
										jule::Ptr<_1a8d3ee72_FnIns> _171121_t1f = _1a8dcd9b1_getTraitCheckFnKind(_self_, &(_170629_t1m));;
										jule::Ptr<_1a8d3ee72_FnIns> _171221_t2f = _1a8dcd9b1_getTraitCheckFnKind(_self_, &(_170725_t2m));;
										if ((!(_1a8d40dda_equalTrait(_171121_t1f, &(_171221_t2f))))) {
											_1a8dc3e7e_pushErr(_self_, (*((*_169921_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_169847_t))))._field_Ident, &__jule_any_type4),jule::Any((*_170521_t2.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1a8d41d20_GetKindStr(_171121_t1f, true), &__jule_any_type4),jule::Any(_1a8d41d20_GetKindStr(_171221_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1ac47e547:;
									++it;
									goto _iter_begin_1ac47e547;
								}
								_iter_end_1ac47e547:;
							};
						}
						_iter_next_1ac47ccc6:;
						++it;
						_170118_j++;
						goto _iter_begin_1ac47ccc6;
					}
					_iter_end_1ac47ccc6:;
				};
			}
			_iter_next_1ac47b7b9:;
			++it;
			_169914_i++;
			goto _iter_begin_1ac47b7b9;
		}
		_iter_end_1ac47b7b9:;
	};
}



inline void _1a8dd5787_checkTraitDeclMethod(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _172345_f) {
	if (_1a8760871_IsIgnoreIdent((*((*(_172345_f))))._field_Ident)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_172345_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a8760b3a_IsAnonIdent((*((*(_172345_f))))._field_Ident)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_172345_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_172345_f))))._field_sema=_self_;
	_1a8dd492e_checkFnDeclPrototype(_self_, _172345_f);
	jule::Ptr<_1a8d3ee72_FnIns> _173113_ins = _1a8d3d701_instance((*(_172345_f)));;
	_1a8dcee13_reloadFnInsTypes(_self_, _173113_ins);
	(*(_173113_ins))._field_reloaded=true;
	_1a8d3da0e_appendInstance((*(_172345_f)).ptr(), &(_173113_ins));
}



inline void _1a8dd5a40_checkTraitDeclMethods(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d5034a_Trait>* _173746_t) {
	{
		auto expr = &((*((*(_173746_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac486670:;
		if (it != expr_end) {
			jule::I32 _173814_i = it - expr->begin();
			jule::Ptr<_1a8d3be91_Fn> _173821_f = *it;
			{
				_1a8dd5787_checkTraitDeclMethod(_self_, &(_173821_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1a8d5167b_findMethodInherit((*(_173746_t)).ptr(), &((*(_173821_f))._field_Ident)) != nullptr)) {
					_1a8dc3e7e_pushErr(_self_, (*_173821_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173821_f.alloc)._field_Ident, &__jule_any_type4)}));
					_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1ac486670;
				};
				_julec_label_1ac488089:;
				{
					auto expr = &((*((*(_173746_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac489673:;
					if (it != expr_end) {
						jule::I32 _175417_j = it - expr->begin();
						jule::Ptr<_1a8d3be91_Fn> _175420_jf = *it;
						{
							{
								
								if ((_175417_j >= _173814_i)) {
									_case_begin_1ac48a1e0:;
									{
										goto _iter_end_1ac489673;
									}
								}
								else if (((*_173821_f.alloc)._field_Ident == (*(_175420_jf))._field_Ident)) {
									_case_begin_1ac48a278:;
									{
										_1a8dc3e7e_pushErr(_self_, (*_173821_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173821_f.alloc)._field_Ident, &__jule_any_type4)}));
										_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1ac489673;
									}
								}
								_match_end_1ac48a0e1:;
							};
						}
						_iter_next_1ac489673:;
						++it;
						_175417_j++;
						goto _iter_begin_1ac489673;
					}
					_iter_end_1ac489673:;
				};
			}
			_iter_next_1ac486670:;
			++it;
			_173814_i++;
			goto _iter_begin_1ac486670;
		}
		_iter_end_1ac486670:;
	};
}



inline void _1a8dd5ce8_checkTraitDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d5034a_Trait>* _177339_t) {
	if (_1a8760871_IsIgnoreIdent((*((*(_177339_t))))._field_Ident)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_177339_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a8dc4b94_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_177339_t))), &((*((*(_177339_t))))._field_Ident), false)) {
		_1a8dc3e7e_pushErr(_self_, (*((*(_177339_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_177339_t))))._field_Ident, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a8dd54ce_checkTraitDeclInherits(_self_, _177339_t);
	_1a8dd5a40_checkTraitDeclMethods(_self_, _177339_t);
}



inline jule::Bool _1a8dd607e_checkTraitDecls(jule::Ptr<_1a8dc1344_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4905d0:;
		if (it != expr_end) {
			jule::Ptr<_1a8d5034a_Trait> _178721_t = *it;
			{
				_1a8dd5ce8_checkTraitDecl(_self_, &(_178721_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac4905d0:;
			++it;
			goto _iter_begin_1ac4905d0;
		}
		_iter_end_1ac4905d0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a8dd647a_checkTraitImplMethods(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d5034a_Trait>* _179745_base, jule::Ptr<_1a8d789b1_Impl>* _179760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_179760_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac492093:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> *_179916_f = it;
			{
				if ((_1a8d50ee9_FindMethod((*(_179745_base)).ptr(), (*((*(_179916_f))))._field_Ident) == nullptr)) {
					_1a8dc3e7e_pushErr(_self_, (*(*(_179916_f)).alloc)._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_179745_base))))._field_Ident, &__jule_any_type4),jule::Any((*(*(_179916_f)).alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1ac492093:;
			++it;
			goto _iter_begin_1ac492093;
		}
		_iter_end_1ac492093:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a8dd6876_implToStruct(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _180837_dest, jule::Ptr<_1a8d789b1_Impl>* _180857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180857_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4947b0:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _181221_f = *it;
			{
				if (((_1a8d27a92_FindMethod((*(_180837_dest)).ptr(), (*(_181221_f))._field_Ident, (*_181221_f.alloc)._field_Statically) != nullptr) || (_1a8d28224_FindField((*(_180837_dest)).ptr(), (*_181221_f.alloc)._field_Ident) != nullptr))) {
					_1a8dc3e7e_pushErr(_self_.ptr(), (*_181221_f.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_181221_f.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1ac4947b0;
				};
				if ((((*((*(_180837_dest))))._field_Generics.len() > 0LL) && ((*_181221_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_181221_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac4976a3:;
						if (it != expr_end) {
							jule::Ptr<_1a8780770_GenericDecl> _182024_fg = *it;
							{
								{
									auto expr = &((*((*(_180837_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ac4980ee:;
									if (it != expr_end) {
										jule::Ptr<_1a8780770_GenericDecl> _182128_dg = *it;
										{
											if (((*(_182024_fg))._field_Ident == (*(_182128_dg))._field_Ident)) {
												_1a8dc3e7e_pushErr(_self_, (*_182024_fg.alloc)._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1ac4980ee:;
										++it;
										goto _iter_begin_1ac4980ee;
									}
									_iter_end_1ac4980ee:;
								};
							}
							_iter_next_1ac4976a3:;
							++it;
							goto _iter_begin_1ac4976a3;
						}
						_iter_end_1ac4976a3:;
					};
				};
				_1a8dc5007_checkDirectives(_self_, &((*_181221_f.alloc)._field_Directives), jule::Any(_181221_f, &__jule_any_type63));
				(*_181221_f.alloc)._field_sema=_self_;
				(*_181221_f.alloc)._field_Owner=(*(_180837_dest));
				{ jule::Slice<jule::Ptr<_1a8d3be91_Fn>> &__jule_push_dest = (*((*(_180837_dest))))._field_Methods; __jule_push_dest.push(_181221_f); };
			}
			_iter_next_1ac4947b0:;
			++it;
			goto _iter_begin_1ac4947b0;
		}
		_iter_end_1ac4947b0:;
	};
	{
		auto expr = &((*((*(_180857_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac494b89:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> _183721_v = *it;
			{
				;
				if (((_1a8d27a92_FindMethod((*(_180837_dest)).ptr(), (*(_183721_v))._field_Ident, true) != nullptr) || (_1a8d27dd3_FindStatic((*(_180837_dest)).ptr(), (*_183721_v.alloc)._field_Ident) != nullptr))) {
					_1a8dc3e7e_pushErr(_self_, (*_183721_v.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_183721_v.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1ac494b89;
				};
				{ jule::Slice<jule::Ptr<_1a8de41ad_Var>> &__jule_push_dest = (*((*(_180837_dest))))._field_Statics; __jule_push_dest.push(_183721_v); };
			}
			_iter_next_1ac494b89:;
			++it;
			goto _iter_begin_1ac494b89;
		}
		_iter_end_1ac494b89:;
	};
	return __jule_func_result;;
}



inline void _1a8dd6b2e_implTrait(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d789b1_Impl>* _185034_decl) {
	jule::Ptr<_1a8e8301b_TypeKind> _185113_base_t = _1a8dca738_selectType(_self_, &((*((*(_185034_decl))))._field_Base));;
	if ((_185113_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a8d5034a_Trait> _185513_base = _1a8e86e76_Trait(_185113_base_t.ptr());;
	if ((_185513_base == nullptr)) {
		_1a8dc3e7e_pushErr(_self_, (*((*((*(_185034_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str(_185113_base_t.ptr()), &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8e8301b_TypeKind> _186213_destT = _1a8dca738_selectType(_self_, &((*((*(_185034_decl))))._field_Dest));;
	if ((_186213_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _186613_destS = _1a8e86be0_Struct(_186213_destT.ptr());;
	if ((_186613_destS == nullptr)) {
		_1a8dc3e7e_pushErr(_self_, (*((*((*(_185034_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str(_186213_destT.ptr()), &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8d26e26_Struct> _187313_dest = (*(_186613_destS))._field_Decl;;
	if ((_1a8763dc4_Dir((*((*(_187313_dest))._field_Token))._field_File.ptr()) != _1a8763dc4_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a8dc3e7e_pushErr(_self_, (*(*((*(_185034_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1a8de2893_pushImplemented(_185513_base, &(_187313_dest));
	_1a8de2b7e_pushImplements(&(_187313_dest), _185513_base);
	if (((*((*(_185034_decl))))._field_Statics.len() > 0LL)) {
		_1a8dc3e7e_pushErr(_self_, (*((*((*(_185034_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a8dd647a_checkTraitImplMethods(_self_, &(_185513_base), _185034_decl)))) {
			_case_begin_1ac4a7295:;
		}
		else if ((!(_1a8dd6876_implToStruct(_self_, &(_187313_dest), _185034_decl)))) {
			_case_begin_1ac4a732d:;
		}
		_match_end_1ac4a600d:;
	};
}



inline void _1a8dd6dd7_implStruct(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d789b1_Impl>* _189335_decl) {
	jule::Ptr<_1a8e8301b_TypeKind> _189413_destT = _1a8dca738_selectType(_self_, &((*((*(_189335_decl))))._field_Dest));;
	if ((_189413_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _189813_destS = _1a8e86be0_Struct(_189413_destT.ptr());;
	if ((_189813_destS == nullptr)) {
		_1a8dc3e7e_pushErr(_self_, (*((*((*(_189335_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str(_189413_destT.ptr()), &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8d26e26_Struct> _190513_dest = (*(_189813_destS))._field_Decl;;
	if ((_1a8763dc4_Dir((*((*(_190513_dest))._field_Token))._field_File.ptr()) != _1a8763dc4_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a8dc3e7e_pushErr(_self_, (*(*((*(_189335_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a8dd6876_implToStruct(_self_, &(_190513_dest), _189335_decl)))) {
			_case_begin_1ac4ace9e:;
		}
		_match_end_1ac4accb2:;
	};
}



inline void _1a8dd7190_implImpl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d789b1_Impl>* _191733_decl) {
	{
		
		if (_1a8d78d79_IsTraitImpl((*(_191733_decl)).ptr())) {
			_case_begin_1ac4ada1b:;
			{
				_1a8dd6b2e_implTrait(_self_, _191733_decl);
			}
		}
		else if (_1a8d79110_IsStructImpl((*(_191733_decl)).ptr())) {
			_case_begin_1ac4adab5:;
			{
				_1a8dd6dd7_implStruct(_self_, _191733_decl);
			}
		}
		_match_end_1ac4ad90b:;
	};
}



inline void _1a8dd7503_checkVarDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8de41ad_Var>* _192837_decl, jule::Trait _192853_l) {
	if (_1a8760871_IsIgnoreIdent((*((*(_192837_decl))))._field_Ident)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_192837_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a8de481d_IsTypeInferred((*(_192837_decl)).ptr())) {
		if ((!(_1a8de4587_IsInitialized((*(_192837_decl)).ptr())))) {
			_1a8dc3e7e_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1a8dc9b00_checkType(_self_, &((*((*(_192837_decl))))._field_Kind), _192853_l);
	};
	if ((*((*(_192837_decl))))._field_Reference) {
		if ((*((*(_192837_decl))))._field_Constant) {
			_1a8dc3e7e_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Statically) {
			_1a8dc3e7e_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1a8de4587_IsInitialized((*(_192837_decl)).ptr())))) {
		if ((*((*(_192837_decl))))._field_Constant) {
			_1a8dc3e7e_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Statically) {
			_1a8dc3e7e_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Reference) {
			_1a8dc3e7e_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1a8dd77ab_checkGlobalVarDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8de41ad_Var>* _196543_decl) {
	if (_1a8dc4b94_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_196543_decl))), &((*((*(_196543_decl))))._field_Ident), (*((*(_196543_decl))))._field_Binded)) {
		_1a8dc3e7e_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_196543_decl))))._field_Ident, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_196543_decl))))._field_Binded && (*((*(_196543_decl))))._field_Constant)) {
		_1a8dc3e7e_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_196543_decl))))._field_Binded)) && (!((*((*(_196543_decl))))._field_Constant))) && (!((*((*(_196543_decl))))._field_Statically)))) {
		_1a8dc3e7e_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1a8dc5007_checkDirectives(_self_, &((*((*(_196543_decl))))._field_Directives), jule::Any((*(_196543_decl)), &__jule_any_type8));
	_1a8dd7503_checkVarDecl(_self_, _196543_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3));
}



inline jule::Bool _1a8dd7a42_checkGlobalDecls(jule::Ptr<_1a8dc1344_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4bbb8e:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> _198321_decl = *it;
			{
				_1a8dd77ab_checkGlobalVarDecl(_self_, &(_198321_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac4bbb8e:;
			++it;
			goto _iter_begin_1ac4bbb8e;
		}
		_iter_end_1ac4bbb8e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a8dd7e3d_checkStructTraitImpl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _199345_strct, jule::Ptr<_1a8d5034a_Trait>* _199366_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_199366_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4bd553:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _199421_tf = *it;
			{
				jule::Bool _199517_exist = false;;
				jule::Ptr<_1a8d3be91_Fn> _199617_sf = _1a8d27a92_FindMethod((*(_199345_strct)).ptr(), (*(_199421_tf))._field_Ident, (*_199421_tf.alloc)._field_Statically);;
				jule::Ptr<_1a8d3ee72_FnIns> _199713_tfK = _1a8dcd9b1_getTraitCheckFnKind(_self_, &(_199421_tf));;
				if ((_199617_sf != nullptr)) {
					jule::Ptr<_1a8d3ee72_FnIns> _199921_sfK = _1a8dcd9b1_getTraitCheckFnKind(_self_, &(_199617_sf));;
					_199517_exist=_1a8d40dda_equalTrait(_199713_tfK, &(_199921_sfK));
				};
				if (_199517_exist) {
					jule::Ptr<_1a8772982_Directive> _200317_d = _1a8e7a4b9_findDirective(&((*_199617_sf.alloc)._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_200317_d != nullptr)) {
						_1a8dc3e7e_pushErr(_self_, (*_200317_d.alloc)._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1a8dc3e7e_pushErr(_self_, (*((*(_199345_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_199366_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1a8d41d20_GetKindStr(_199713_tfK, true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1ac4bd553:;
			++it;
			goto _iter_begin_1ac4bd553;
		}
		_iter_end_1ac4bd553:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a8dd827e_checkStructImpls(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _201741_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_201741_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4c4290:;
		if (it != expr_end) {
			jule::Ptr<_1a8d5034a_Trait> _201921_trt = *it;
			{
				__jule_func_result=(_1a8dd7e3d_checkStructTraitImpl(_self_, _201741_s, &(_201921_trt)) && __jule_func_result);
			}
			_iter_next_1ac4c4290:;
			++it;
			goto _iter_begin_1ac4c4290;
		}
		_iter_end_1ac4c4290:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a8dd85c0_checkStructFields(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _202542_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202542_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4c5725:;
		if (it != expr_end) {
			jule::Ptr<_1a8d24000_Field> _202721_f = *it;
			{
				(*(_202721_f))._field_Owner=(*(_202542_st));
				{
					auto expr = &((*((*(_202542_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac4c643a:;
					if (it != expr_end) {
						jule::Ptr<_1a8d24000_Field> _202920_cf = *it;
						{
							if ((_202721_f == _202920_cf)) {
								goto _iter_end_1ac4c643a;
							} else if (((*_202721_f.alloc)._field_Ident == (*(_202920_cf))._field_Ident)) {
								_1a8dc3e7e_pushErr(_self_.ptr(), (*_202721_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_202721_f.alloc)._field_Ident, &__jule_any_type4)}));
								_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1ac4c643a:;
						++it;
						goto _iter_begin_1ac4c643a;
					}
					_iter_end_1ac4c643a:;
				};
			}
			_iter_next_1ac4c5725:;
			++it;
			goto _iter_begin_1ac4c5725;
		}
		_iter_end_1ac4c5725:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a8dd8878_checkStructDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _204240_s) {
	if (_1a8760871_IsIgnoreIdent((*((*(_204240_s))))._field_Ident)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_204240_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a8dc4b94_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_204240_s))), &((*((*(_204240_s))))._field_Ident), (*((*(_204240_s))))._field_Binded)) {
		_1a8dc3e7e_pushErr(_self_, (*((*(_204240_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204240_s))))._field_Ident, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a8dc5007_checkDirectives(_self_, &((*((*(_204240_s))))._field_Directives), jule::Any((*(_204240_s)), &__jule_any_type64));
	{
		
		if ((!(_1a8dd3ba3_checkDeclGenerics(_self_, &((*((*(_204240_s))))._field_Generics))))) {
			_case_begin_1ac4cb198:;
		}
		else if ((!(_1a8dd85c0_checkStructFields(_self_, _204240_s)))) {
			_case_begin_1ac4cb20e:;
		}
		else if ((!(_1a8dd827e_checkStructImpls(_self_, _204240_s)))) {
			_case_begin_1ac4cb275:;
		}
		else if ((!(_1a8dd94b1_checkFuncDeclsBy(_self_, &((*((*(_204240_s))))._field_Methods))))) {
			_case_begin_1ac4cb2db:;
		}
		_match_end_1ac4cb066:;
	};
}



inline jule::Bool _1a8dd8b0e_checkStructDecls(jule::Ptr<_1a8dc1344_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4cd4a8:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> _206221_s = *it;
			{
				_1a8dd8878_checkStructDecl(_self_, &(_206221_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac4cd4a8:;
			++it;
			goto _iter_begin_1ac4cd4a8;
		}
		_iter_end_1ac4cd4a8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a8dd8db7_checkAnonFuncDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _207242_f) {
	(*((*(_207242_f))))._field_sema=_self_;
	_1a8dd492e_checkFnDeclPrototype(_self_, _207242_f);
}



inline void _1a8dd9170_checkFuncDecl(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _207738_f) {
	if (_1a8760871_IsIgnoreIdent((*((*(_207738_f))))._field_Ident)) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_207738_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a8d3ce4d_IsAnon((*(_207738_f)).ptr())) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_207738_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1a8dc5007_checkDirectives(_self_, &((*((*(_207738_f))))._field_Directives), jule::Any((*(_207738_f)), &__jule_any_type63));
	_1a8dd8db7_checkAnonFuncDecl(_self_, _207738_f);
	if ((((*((*(_207738_f))))._field_Owner == nullptr) && _1a8dc4b94_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_207738_f))), &((*((*(_207738_f))))._field_Ident), (*((*(_207738_f))))._field_Binded))) {
		if ((*((*(_207738_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1a8d3be91_Fn> _208917_init = _1a8dc28c8_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_208917_init != nullptr)) {
				return;;
			};
		};
		_1a8dc3e7e_pushErr(_self_, (*((*(_207738_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_207738_f))))._field_Ident, &__jule_any_type4)}));
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a8dd94b1_checkFuncDeclsBy(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Slice<jule::Ptr<_1a8d3be91_Fn>>* _209941_funcs) {
	{
		auto expr = _209941_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4d5724:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _210021_f = *it;
			{
				_1a8dd9170_checkFuncDecl(_self_, &(_210021_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1ac4d5724:;
			++it;
			goto _iter_begin_1ac4d5724;
		}
		_iter_end_1ac4d5724:;
	};
	return true;;
}



inline jule::Bool _1a8dd9747_checkFuncDecls(jule::Ptr<_1a8dc1344_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a8dd94b1_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1a8dd9b65_pushCycleError(_1a8dc1344_Sema* _self_, jule::Str* _211530_st1, jule::Str* _211541_st2, _2234c269a_StrBuilder* _211556_message) {
	;
	jule::Str _21179_refersTo = _224744377_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_211530_st1)), &__jule_any_type4),jule::Any((*(_211541_st2)), &__jule_any_type4)}));;
	jule::Str _21189_m = _2234c3932_Str(_211556_message);;
	_2234c313a_WriteStr(_211556_message, _2246952b7_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2234c313a_WriteStr(_211556_message, _21179_refersTo);
	_2234c33e3_WriteByte(_211556_message, '\n');
	_2234c313a_WriteStr(_211556_message, _21189_m);
}



inline void _1a8dda319_checkPackageDecls(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4dc374:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _214221_f = *it;
			{
				_1a8dc3a61_setCurrentFile(_self_.ptr(), _214221_f);
				if ((!(_1a8dd1ac4_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ac4dc374:;
			++it;
			goto _iter_begin_1ac4dc374;
		}
		_iter_end_1ac4dc374:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4dc819:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _214921_f = *it;
			{
				_1a8dc3a61_setCurrentFile(_self_, _214921_f);
				if ((!(_1a8dd607e_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ac4dc819:;
			++it;
			goto _iter_begin_1ac4dc819;
		}
		_iter_end_1ac4dc819:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4dd7e8:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _215621_f = *it;
			{
				_1a8dc3a61_setCurrentFile(_self_, _215621_f);
				if ((!(_1a8dd7a42_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ac4dd7e8:;
			++it;
			goto _iter_begin_1ac4dd7e8;
		}
		_iter_end_1ac4dd7e8:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4de82c:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _216321_f = *it;
			{
				_1a8dc3a61_setCurrentFile(_self_, _216321_f);
				{
					
					if ((!(_1a8dd9747_checkFuncDecls(_self_)))) {
						_case_begin_1ac4e0e38:;
					}
					else if ((!(_1a8dd8b0e_checkStructDecls(_self_)))) {
						_case_begin_1ac4e0ed2:;
					}
					else {
						_case_begin_1ac4e0894:;
						{
							goto _iter_next_1ac4de82c;
						}
					}
					_match_end_1ac4e0da0:;
				};
				return;;
			}
			_iter_next_1ac4de82c:;
			++it;
			goto _iter_begin_1ac4de82c;
		}
		_iter_end_1ac4de82c:;
	};
}



inline void _1a8dda67c_checkDataForTypeInference(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8e4bcb5_Data>* _217545_d, jule::Ptr<_1a875ce89_Token>* _217556_err_token) {
	{
		
		if (_1a8e4c1a0_IsNil((*(_217545_d)).ptr())) {
			_case_begin_1ac4e208d:;
			{
				_1a8dc3e7e_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1a8e4c436_IsVoid((*(_217545_d)).ptr())) {
			_case_begin_1ac4e2137:;
			{
				_1a8dc3e7e_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_217545_d))))._field_Kind))._field_Variadic) {
			_case_begin_1ac4e219d:;
			{
				_1a8dc3e7e_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac4e1e6c:;
	};
}



inline void _1a8dda935_checkVarValue(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8de41ad_Var>* _218738_v) {
	if (_1a8de481d_IsTypeInferred((*(_218738_v)).ptr())) {
		(*((*(_218738_v))))._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=(*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Kind});
		_1a8dda67c_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1a8dd0d26_checkValidityForInitExpr(_self_, (*((*(_218738_v))))._field_Mutable, (*((*(_218738_v))))._field_Reference, &((*((*((*(_218738_v))))._field_Kind))._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1a8e92415_Arr> _220017_arr = _1a8e8643c_Arr((*((*((*(_218738_v))))._field_Kind))._field_Kind.ptr());;
		if ((_220017_arr != nullptr)) {
			if ((*_220017_arr.alloc)._field_Auto) {
				jule::Ptr<_1a8e92415_Arr> _220321_dataArr = _1a8e8643c_Arr((*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_220321_dataArr != nullptr)) {
					(*_220017_arr.alloc)._field_N=(*_220321_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1a8dcb98c_checkAssignType(_self_, (*((*(_218738_v))))._field_Reference, &((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token)) {
			_1a8dd0d26_checkValidityForInitExpr(_self_, (*((*(_218738_v))))._field_Mutable, (*((*(_218738_v))))._field_Reference, &((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_218738_v))))._field_Reference && (!(_1a8e9e4cc_isValidForRef(&((*((*((*(_218738_v))))._field_Kind))._field_Kind)))))) {
		_1a8dc3e7e_pushErr(_self_.ptr(), (*((*(_218738_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_218738_v))))._field_Constant) {
		if (((!(_1a8e4c6bc_IsConst((*((*((*(_218738_v))))._field_Value))._field_Data.ptr()))) && (!(_1a8e87729_comptime((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Data.alloc)._field_Kind.ptr()))))) {
			_1a8dc3e7e_pushErr(_self_, (*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*(*((*(_218738_v))))._field_Value.alloc)._field_Data.alloc)._field_untyped=false;
	};
	if ((_1a8e87493_Tup((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind) != nullptr)) {
		(*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1a8ddac98_evalVarValue(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8de41ad_Var>* _224037_decl, jule::Trait _224053_l) {
	if ((!(_1a8de4587_IsInitialized((*(_224037_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1a8e4d9dc_Eval> _224517_eval = nullptr;;
	if (((*((*(_224037_decl))))._field_Kind != nullptr)) {
		_224517_eval=_1a8dcabde_evalpd(_self_, _224053_l, (*(*((*(_224037_decl))))._field_Kind.alloc)._field_Kind, (*(_224037_decl)));
	} else {
		_224517_eval=_1a8dcabde_evalpd(_self_, _224053_l, nullptr, (*(_224037_decl)));
	};
	(*(_224517_eval))._field_immutable=(!((*((*(_224037_decl))))._field_Mutable));
	(*((*((*(_224037_decl))))._field_Value))._field_Data=_1a8e6bc4c_evalExpr(_224517_eval, (*(*((*(_224037_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1a8ddb10b_checkVar(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8de41ad_Var>* _225733_decl, jule::Trait _225749_l) {
	_1a8ddac98_evalVarValue(_self_, _225733_decl, _225749_l);
	if (((*((*((*(_225733_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1a8dda935_checkVarValue(_self_, _225733_decl);
}



inline void _1a8ddb309_checkGlobals(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac508b21:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> _226721_decl = *it;
			{
				if ((*(_226721_decl))._field_Binded) {
					goto _iter_next_1ac508b21;
				};
				if (((_1a8de4587_IsInitialized(_226721_decl) && ((*((*_226721_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1a8de481d_IsTypeInferred(_226721_decl) && ((*((*_226721_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1a8ddb10b_checkVar(_self_, &(_226721_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3));
				};
			}
			_iter_next_1ac508b21:;
			++it;
			goto _iter_begin_1ac508b21;
		}
		_iter_end_1ac508b21:;
	};
}



inline jule::Ptr<_1a8d3ee72_FnIns> _1a8ddb705_readyToCheckFn(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _228139_s, jule::Ptr<_1a8d3be91_Fn>* _228159_f) {
	jule::Ptr<_1a8d3ee72_FnIns> _228213_ins = _1a8d3d701_instance((*(_228159_f)));;
	if (((*((*(_228159_f))))._field_Instances.len() != 0LL)) {
		return _228213_ins;;
	};
	(*(_228213_ins))._field_Owner=(*(_228139_s));
	_1a8d3da0e_appendInstance((*(_228159_f)).ptr(), &(_228213_ins));
	(*_228213_ins.alloc)._field_reloaded=true;
	if (_1a8dcee13_reloadFnInsTypes(_self_, _228213_ins)) {
		return _228213_ins;;
	};
	return nullptr;;
}



inline void _1a8ddba68_checkTypeMethod(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _229540_s, jule::Ptr<_1a8d3be91_Fn>* _229560_f) {
	if (((*((*(_229560_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _230013_ins = (*((*(_229560_f))))._field_Instances[0LL];;
	if (((*((*(_230013_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1a8dde51b_checkFnIns(_self_, &(_230013_ins));
}



inline jule::Ptr<_1a8d3ee72_FnIns> _1a8ddc01e_checkStructInsOp(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _230841_s, jule::Ptr<_1a8d3be91_Fn>* _230861_f, jule::Fn<jule::Bool,jule::Ptr<_1a8d3be91_Fn>> _230869_p) {
	if (((((*(_230861_f)) == nullptr) || ((*((*(_230861_f))))._field_Generics.len() > 0LL)) || (!(_230869_p((*(_230861_f))))))) {
		return nullptr;;
	};
	return (*((*(_230861_f))))._field_Instances[0LL];;
}



inline jule::Bool _1a8ddc41a_checkStructEnv(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _231839_s, jule::Ptr<_1a875ce89_Token> _231858_errorToken) {
	jule::Bool __jule_func_result = false;
	_1a8e94dc9_typeChecker _231913_tc = _1a8e94dc9_typeChecker{._field_s=(*((*((*(_231839_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3), ._field_lookup=jule::Trait((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3), ._field_referencer=jule::new_ptr<_1a8e93dd9_referencer>(_1a8e93dd9_referencer{._field_ident=(*(*((*(_231839_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_231839_s))))._field_Decl, &__jule_any_type64), }), ._field_refers=(*((*(_231839_s))))._field_Refers, };;
	if (((*((*(_231839_s))))._field_Generics.len() > 0LL)) {
		_231913_tc._field_useGenerics=jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>::alloc(0LL, (*((*(_231839_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_231839_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac51518d:;
			if (it != expr_end) {
				jule::I32 _233218_i = it - expr->begin();
				jule::Ptr<_1a8e81635_InsGeneric> _233225_g = *it;
				{
					jule::Ptr<_1a8780770_GenericDecl> _233321_decl = (*(*((*(_231839_s))))._field_Decl.alloc)._field_Generics[_233218_i];;
					{ jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> &__jule_push_dest = _231913_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1a8e82229_TypeAlias>(_1a8e82229_TypeAlias{._field_Token=(*_233321_decl.alloc)._field_Token, ._field_Ident=(*(_233321_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=(*(_233225_g))._field_Kind}), })); };
				}
				_iter_next_1ac51518d:;
				++it;
				_233218_i++;
				goto _iter_begin_1ac51518d;
			}
			_iter_end_1ac51518d:;
		};
	};
	jule::Ptr<_1a8e4694c_SymbolTable> _234213_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a8dc3a61_setCurrentFile(_self_, _234213_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_231839_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1a8e4694c_SymbolTable> _234617_file = _1a8dc008a_findFile(&((*_self_.alloc)._field_files), &((*(*(*((*(_231839_s))))._field_Decl.alloc)._field_Token.alloc)._field_File));;
		if ((_234617_file != nullptr)) {
			_1a8dc3a61_setCurrentFile(_self_, _234617_file);
		};
	};
	if (((*((*(_231839_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1a8d7665c_constraintChecker> _235317_cc = _1a8dc9704_constraintChecker(_self_);;
		(*(_235317_cc))._field_et=_231858_errorToken;
		(*_235317_cc.alloc)._field_si=(*(_231839_s));
		(*_235317_cc.alloc)._field_genericsA=_231913_tc._field_useGenerics;
		(*_235317_cc.alloc)._field_uniq=true;
		if ((!(_1a8d77592_check(_235317_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_231839_s))))._field_Statics.len() > 0LL)) {
		jule::I32 _236617_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_231913_tc._field_useGenerics,(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_231839_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac51d99e:;
			if (it != expr_end) {
				jule::Ptr<_1a8de41ad_Var> _236825_v = *it;
				{
					_1a8dd7503_checkVarDecl(_self_, &(_236825_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3));
					_1a8ddb10b_checkVar(_self_, &(_236825_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _236617_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1ac51d99e:;
				++it;
				goto _iter_begin_1ac51d99e;
			}
			_iter_end_1ac51d99e:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_231913_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1a8e4d9dc_Eval> _237913_eval = _1a8dcb42b_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3));;
	(*((*(_231839_s))))._field_Comparable=(!((*(*((*(_231839_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_231839_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5226ea:;
		if (it != expr_end) {
			jule::Ptr<_1a8d29104_FieldIns> _238121_f = *it;
			{
				jule::Ptr<_1a8e8301b_TypeKind> _238217_kind = _1a8e9c574_checkDecl(&_231913_tc, &((*((*((*(_238121_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_238217_kind != nullptr) && __jule_func_result);
				if ((_238217_kind == nullptr)) {
					if (((_self_ != (*(*((*(_231839_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_231839_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
						(*(*(*((*(_231839_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1ac5226ea;
				};
				(*_238121_f.alloc)._field_Kind=_238217_kind;
				(*((*(_231839_s))))._field_Mutable=((*((*(_231839_s))))._field_Mutable || ((!((*(*_238121_f.alloc)._field_Decl.alloc)._field_Mutable)) && _1a8e8489c_Mutable((*_238121_f.alloc)._field_Kind)));
				(*((*(_231839_s))))._field_Comparable=((*((*(_231839_s))))._field_Comparable && _1a8e84616_Comparable((*_238121_f.alloc)._field_Kind));
				if (((*(*_238121_f.alloc)._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1ac5226ea;
				};
				(*(_237913_eval))._field_prefix=(*_238121_f.alloc)._field_Kind;
				(*_237913_eval.alloc)._field_field=_238121_f;
				(*_238121_f.alloc)._field_Default=_1a8e6bc4c_evalExpr(_237913_eval, (*(*_238121_f.alloc)._field_Decl.alloc)._field_Default);
				if (((*_238121_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1ac5226ea;
				};
				;
				_1a8dcb98c_checkAssignType(_self_, false, &((*_238121_f.alloc)._field_Kind), &((*_238121_f.alloc)._field_Default), (*((*(*_238121_f.alloc)._field_Decl.alloc)._field_Default))._field_Token);
			}
			_iter_next_1ac5226ea:;
			++it;
			goto _iter_begin_1ac5226ea;
		}
		_iter_end_1ac5226ea:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a8ddc816_precheckStructIns(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _241542_s, jule::Ptr<_1a875ce89_Token> _241561_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1a8ddc41a_checkStructEnv(_self_, _241542_s, _241561_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_241542_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac52c2e8:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _242021_f = *it;
			{
				if (((*(_242021_f))._field_Generics.len() == 0LL)) {
					if ((_1a8ddb705_readyToCheckFn(_self_, _241542_s, &(_242021_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1ac52c2e8:;
			++it;
			goto _iter_begin_1ac52c2e8;
		}
		_iter_end_1ac52c2e8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a8ddcabe_checkStructIns(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _243039_s) {
	{
		auto expr = &((*((*(_243039_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac52dc12:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _243121_f = *it;
			{
				_1a8ddba68_checkTypeMethod(_self_, _243039_s, &(_243121_f));
			}
			_iter_next_1ac52dc12:;
			++it;
			goto _iter_begin_1ac52dc12;
		}
		_iter_end_1ac52dc12:;
	};
}



inline void _1a8ddcd77_checkTypeStruct(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _243640_s) {
	if ((*((*(_243640_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243640_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_243640_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5306c5:;
		if (it != expr_end) {
			jule::Ptr<_1a8d29ba4_StructIns> _244921_ins = *it;
			{
				_1a8ddcabe_checkStructIns(_self_, &(_244921_ins));
			}
			_iter_next_1ac5306c5:;
			++it;
			goto _iter_begin_1ac5306c5;
		}
		_iter_end_1ac5306c5:;
	};
}



inline void _1a8ddd075_checkStructTypes(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac531671:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> _245521_s = *it;
			{
				_1a8ddcd77_checkTypeStruct(_self_, &(_245521_s));
			}
			_iter_next_1ac531671:;
			++it;
			goto _iter_begin_1ac531671;
		}
		_iter_end_1ac531671:;
	};
}



inline void _1a8ddd32d_checkStructInsOperators(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d29ba4_StructIns> _246047_s) {
	{
		auto expr = &((*(_246047_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5325ea:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _246121_m = *it;
			{
				{
					auto &_match_expr{ (*(_246121_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1ac532c6b:;
						{
							(*(_246047_s))._field_Operators._field_Eq=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de605b_Eq);
							(*_246047_s.alloc)._field_Comparable=((*_246047_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1ac533354:;
						{
							(*(_246047_s))._field_Operators._field_Gt=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de6325_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1ac5333ba:;
						{
							(*(_246047_s))._field_Operators._field_GtEq=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de65de_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1ac533431:;
						{
							(*(_246047_s))._field_Operators._field_Lt=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de68a8_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1ac533497:;
						{
							(*(_246047_s))._field_Operators._field_LtEq=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de6b72_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1ac53351e:;
						{
							(*(_246047_s))._field_Operators._field_Shl=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de72b0_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1ac533596:;
						{
							(*(_246047_s))._field_Operators._field_Shr=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de7579_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1ac53361d:;
						{
							(*(_246047_s))._field_Operators._field_Add=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de7843_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1ac533695:;
						{
							(*(_246047_s))._field_Operators._field_Sub=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de7b0c_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1ac53371c:;
						{
							(*(_246047_s))._field_Operators._field_Div=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de7dc6_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1ac533794:;
						{
							(*(_246047_s))._field_Operators._field_Mul=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de8190_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1ac53381b:;
						{
							(*(_246047_s))._field_Operators._field_Mod=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de8459_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1ac533893:;
						{
							(*(_246047_s))._field_Operators._field_BitAnd=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de8723_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1ac53391a:;
						{
							(*(_246047_s))._field_Operators._field_BitOr=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de89dc_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1ac533992:;
						{
							(*(_246047_s))._field_Operators._field_BitXor=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de8ca6_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1ac533a19:;
						{
							(*(_246047_s))._field_Operators._field_Neg=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de93e4_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1ac533a91:;
						{
							(*(_246047_s))._field_Operators._field_Pos=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de96ad_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1ac533b18:;
						{
							(*(_246047_s))._field_Operators._field_BitNot=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8de9977_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1ac533b90:;
						{
							(*(_246047_s))._field_Operators._field_AddAssign=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8dea0b5_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1ac533c17:;
						{
							(*(_246047_s))._field_Operators._field_SubAssign=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8dea37e_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1ac533c8e:;
						{
							(*(_246047_s))._field_Operators._field_DivAssign=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8dea648_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1ac533d16:;
						{
							(*(_246047_s))._field_Operators._field_MulAssign=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8dea912_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1ac533d8d:;
						{
							(*(_246047_s))._field_Operators._field_ModAssign=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8deabcb_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1ac533e15:;
						{
							(*(_246047_s))._field_Operators._field_ShlAssign=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8deae95_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1ac533e8c:;
						{
							(*(_246047_s))._field_Operators._field_ShrAssign=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8deb25e_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1ac534014:;
						{
							(*(_246047_s))._field_Operators._field_BitOrAssign=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8deb528_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1ac53408b:;
						{
							(*(_246047_s))._field_Operators._field_BitAndAssign=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8deb7e2_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1ac534113:;
						{
							(*(_246047_s))._field_Operators._field_BitXorAssign=_1a8ddc01e_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a8debaab_BitXorAssign);
						}
					}
					_match_end_1ac533046:;
				};
			}
			_iter_next_1ac5325ea:;
			++it;
			goto _iter_begin_1ac5325ea;
		}
		_iter_end_1ac5325ea:;
	};
}



inline void _1a8ddd5d6_precheckStructType(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d26e26_Struct>* _252443_s) {
	if ((*((*(_252443_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_252443_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_252443_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a8d29ba4_StructIns> _253517_ins = _1a8d27388_instance((*(_252443_s)));;
		(*(_253517_ins))._field_Checked=true;
		_1a8d27696_appendInstance((*(_252443_s)).ptr(), &(_253517_ins));
		_1a8ddc816_precheckStructIns(_self_, &(_253517_ins), nullptr);
	};
	_1a8ddd32d_checkStructInsOperators(_self_, (*((*(_252443_s))))._field_Instances[0LL]);
}



inline void _1a8ddd7d4_precheckStructTypes(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac54a14b:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> _254521_s = *it;
			{
				_1a8ddd5d6_precheckStructType(_self_, &(_254521_s));
			}
			_iter_next_1ac54a14b:;
			++it;
			goto _iter_begin_1ac54a14b;
		}
		_iter_end_1ac54a14b:;
	};
}



inline void _1a8ddda8c_checkRets(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _255033_f) {
	if (_1a8d3c414_IsVoid((*((*(_255033_f))))._field_Decl.ptr())) {
		return;;
	};
	_1a8de1012_missingRetChecker _25549_mrc = static__1a8de13ca_new();;
	jule::Bool _25559_ok = _1a8de24ec_check(&_25549_mrc, (*((*(_255033_f))))._field_Scope);;
	if ((!(_25559_ok))) {
		_1a8dc3e7e_pushErr(_self_, (*(*((*(_255033_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1a8ddde00_checkFnInsSc(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _256136_f, jule::Ptr<_1a8d863c5_scopeChecker>* _256152_sc) {
	_1a8dbe63e_appendRetVars(&((*((*((*(_256152_sc))))._field_table))._field_Vars), _256136_f);
	_1a8dbe92a_appendParamVars(&((*(*((*(_256152_sc))))._field_table.alloc)._field_Vars), _256136_f);
	_1a8dbec16_appendGenericTypeAliases(&((*(*((*(_256152_sc))))._field_table.alloc)._field_TypeAliases), _256136_f);
	_1a8d981c8_check((*(_256152_sc)), &((*((*((*(_256136_f))))._field_Decl))._field_Scope), &((*((*(_256136_f))))._field_Scope));
	if ((!(_1a8d88e99_stopped((*(_256152_sc)).ptr())))) {
		_1a8ddda8c_checkRets(_self_, _256136_f);
	};
}



inline void _1a8dde263_checkFnInsCaller(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _257441_f, jule::Ptr<_1a875ce89_Token> _257456_caller) {
	if ((*((*((*(_257441_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1a8e4694c_SymbolTable> _257913_old = (*((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1a8dc3a61_setCurrentFile((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema, _257913_old);
	});;
	jule::Ptr<_1a8e4694c_SymbolTable> _258113_file = _1a8dc008a_findFile(&((*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_257441_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_258113_file != nullptr)) {
		_1a8dc3a61_setCurrentFile((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema, _258113_file);
	};
	jule::Ptr<_1a8d863c5_scopeChecker> _258613_sc = _1a8d7b0ac_newScopeChecker(&((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema), (*(_257441_f)));;
	(*(_258613_sc))._field_calledFrom=_257456_caller;
	_1a8ddde00_checkFnInsSc(_self_.ptr(), _257441_f, &(_258613_sc));
	if (((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
		(*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1a8dde51b_checkFnIns(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _259635_f) {
	_1a8dde263_checkFnInsCaller(_self_, _259635_f, nullptr);
}



inline void _1a8dde7c4_checkFunc(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _260034_f) {
	if ((*((*(_260034_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_260034_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_260034_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac558588:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3ee72_FnIns> _261021_ins = *it;
			{
				_1a8dde51b_checkFnIns(_self_, &(_261021_ins));
			}
			_iter_next_1ac558588:;
			++it;
			goto _iter_begin_1ac558588;
		}
		_iter_end_1ac558588:;
	};
}



inline void _1a8ddea7c_checkTestFn(_1a8dc1344_Sema* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _261535_f) {
	if ((*((*((*(_261535_f))))._field_Decl))._field_Public) {
		_1a8dc3e7e_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_261535_f))))._field_Decl.alloc)._field_Unsafety || (!(_1a8d3c414_IsVoid((*((*(_261535_f))))._field_Decl)))) || ((*(*((*(_261535_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_261535_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_261535_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*(*((*(_261535_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Reference)) {
		_1a8dc3e7e_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8e8e621_Sptr> _263313_sptr = _1a8e85903_Sptr((*((*((*(_261535_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_263313_sptr == nullptr)) {
		_1a8dc3e7e_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _26409_s = _1a8e86be0_Struct((*(_263313_sptr))._field_Elem.ptr());;
	if (((_26409_s == nullptr) || (!(_1a8da63a1_isStdPackage(&((*((*((*((*(_26409_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1a8dc3e7e_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a8dc42e2_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a8dded35_precheckFunc(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Ptr<_1a8d3be91_Fn>* _264837_f) {
	if ((*((*(_264837_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_264837_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_264837_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a8d3ee72_FnIns> _265917_ins = _1a8d3d46a_instanceForce((*(_264837_f)));;
		{ jule::Slice<jule::Ptr<_1a8d3ee72_FnIns>> &__jule_push_dest = (*((*(_264837_f))))._field_Instances; __jule_push_dest.push(_265917_ins); };
		jule::Bool _266113_ok = _1a8dcee13_reloadFnInsTypes(_self_, _265917_ins);;
		(*(_265917_ins))._field_reloaded=true;
		if ((_266113_ok && _1a8e9db3b_hasDirective(&((*((*(_264837_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1a8ddea7c_checkTestFn(_self_, &(_265917_ins));
		};
	};
}



inline void _1a8de0033_precheckFuncs(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac566662:;
		if (it != expr_end) {
			jule::Ptr<_1a8d5034a_Trait> _267221_decl = *it;
			{
				{
					auto expr = &((*(_267221_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac5670ad:;
					if (it != expr_end) {
						jule::Ptr<_1a8d3be91_Fn> _267325_m = *it;
						{
							_1a8dded35_precheckFunc(_self_, &(_267325_m));
						}
						_iter_next_1ac5670ad:;
						++it;
						goto _iter_begin_1ac5670ad;
					}
					_iter_end_1ac5670ad:;
				};
			}
			_iter_next_1ac566662:;
			++it;
			goto _iter_begin_1ac566662;
		}
		_iter_end_1ac566662:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac567432:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _267721_decl = *it;
			{
				_1a8dded35_precheckFunc(_self_, &(_267721_decl));
			}
			_iter_next_1ac567432:;
			++it;
			goto _iter_begin_1ac567432;
		}
		_iter_end_1ac567432:;
	};
}



inline void _1a8de0231_checkFuncs(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac568873:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _268421_decl = *it;
			{
				_1a8dde7c4_checkFunc(_self_, &(_268421_decl));
			}
			_iter_next_1ac568873:;
			++it;
			goto _iter_begin_1ac568873;
		}
		_iter_end_1ac568873:;
	};
}



inline void _1a8de042e_checkPackageTypes(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac569654:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _269221_f = *it;
			{
				_1a8dc3a61_setCurrentFile(_self_.ptr(), _269221_f);
				_1a8ddb309_checkGlobals(_self_);
				_1a8de0033_precheckFuncs(_self_);
				_1a8ddd7d4_precheckStructTypes(_self_);
			}
			_iter_next_1ac569654:;
			++it;
			goto _iter_begin_1ac569654;
		}
		_iter_end_1ac569654:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac56b1a0:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _270321_f = *it;
			{
				_1a8dc3a61_setCurrentFile(_self_, _270321_f);
				_1a8de0231_checkFuncs(_self_);
				_1a8ddd075_checkStructTypes(_self_);
			}
			_iter_next_1ac56b1a0:;
			++it;
			goto _iter_begin_1ac56b1a0;
		}
		_iter_end_1ac56b1a0:;
	};
}



inline void _1a8de062c_setFileSemaFields(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac56c778:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _271121_f = *it;
			{
				(*(_271121_f))._field_sema=_self_;
			}
			_iter_next_1ac56c778:;
			++it;
			goto _iter_begin_1ac56c778;
		}
		_iter_end_1ac56c778:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac56d3d3:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> _271421_st = *it;
			{
				(*(_271421_st))._field_sema=_self_;
			}
			_iter_next_1ac56d3d3:;
			++it;
			goto _iter_begin_1ac56d3d3;
		}
		_iter_end_1ac56d3d3:;
	};
}



inline void _1a8de082a_setSemaFields(jule::Ptr<_1a8dc1344_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac56e093:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _272021_file = *it;
			{
				_1a8dc3a61_setCurrentFile(_self_.ptr(), _272021_file);
				_1a8de062c_setFileSemaFields(_self_);
			}
			_iter_next_1ac56e093:;
			++it;
			goto _iter_begin_1ac56e093;
		}
		_iter_end_1ac56e093:;
	};
}



inline void _1a8de0ad3_check(jule::Ptr<_1a8dc1344_Sema> _self_, jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _272630_files) {
	(*(_self_))._field_files=(*(_272630_files));
	_1a8dc7900_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a8de082a_setSemaFields(_self_);
	_1a8dc83e5_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a8dc7ceb_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a8dc7ee9_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a8dda319_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a8de042e_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a8dc1344_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1a8de1012_missingRetChecker static__1a8de13ca_new(void) {
	return _1a8de1012_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1a8de16d8_checkConditional(_1a8de1012_missingRetChecker* _self_, jule::Ptr<_1a8d7ea50_Conditional> _277435_c) {
	{
		auto expr = &((*(_277435_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5746d6:;
		if (it != expr_end) {
			jule::Ptr<_1a8d7e335_If> _277521_elif = *it;
			{
				if ((_277521_elif == nullptr)) {
					return false;;
				};
				if ((!(_1a8de21ab_checkScope(_self_, (*(_277521_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1ac5746d6:;
			++it;
			goto _iter_begin_1ac5746d6;
		}
		_iter_end_1ac5746d6:;
	};
	return (((*_277435_c.alloc)._field_Default != nullptr) && _1a8de21ab_checkScope(_self_, (*(*_277435_c.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a8de1a29_checkMatch(_1a8de1012_missingRetChecker* _self_, jule::Ptr<_1a8d8312a_Match> _278629_m) {
	{
		auto expr = &((*(_278629_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac576771:;
		if (it != expr_end) {
			jule::Ptr<_1a8d83b53_Case> _278721_c = *it;
			{
				if ((_278721_c == nullptr)) {
					return false;;
				};
				jule::I32 _279113_n = (*(_self_))._field_breaked.len();;
				jule::Bool _279213_ok = _1a8de21ab_checkScope(_self_, (*(_278721_c))._field_Scope);;
				{
					
					if ((_279113_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1ac578201:;
						{
							return false;;
						}
					}
					else if ((!(_279213_ok))) {
						_case_begin_1ac57829a:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1ac578311;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1ac578311:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_278721_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1ac576771;
						}
					}
					_match_end_1ac578157:;
				};
			}
			_iter_next_1ac576771:;
			++it;
			goto _iter_begin_1ac576771;
		}
		_iter_end_1ac576771:;
	};
	return (((*_278629_m.alloc)._field_Default != nullptr) && _1a8de21ab_checkScope(_self_, (*(*_278629_m.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a8de1d6a_checkInfIter(_1a8de1012_missingRetChecker* _self_, jule::Ptr<_1a8d7ed4c_InfIter> _281231_it) {
	jule::I32 _28139_n = (*(_self_))._field_breaked.len();;
	if (_1a8de21ab_checkScope(_self_, (*(_281231_it))._field_Scope)) {
		((*(_self_))._field_breaked).mut_slice(0LL, _28139_n);;
		return true;;
	};
	if ((_28139_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _281913_itaddr = static_cast<jule::Uintptr>(_281231_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_28139_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ac57c0b2:;
			if (it != expr_end) {
				jule::Uintptr _282020_addr = *it;
				{
					if ((_281913_itaddr == _282020_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _28139_n);;
						return false;;
					};
				}
				_iter_next_1ac57c0b2:;
				++it;
				goto _iter_begin_1ac57c0b2;
			}
			_iter_end_1ac57c0b2:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _28139_n);;
	};
	return true;;
}



inline jule::Bool _1a8de21ab_checkScope(_1a8de1012_missingRetChecker* _self_, jule::Ptr<_1a8d7de17_Scope> _283129_s) {
	if ((_283129_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_283129_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac57d6ac:;
		if (it != expr_end) {
			jule::Any _283521_st = *it;
			{
				{
					auto &_match_expr{ _283521_st };
					
					if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1ac57e37d:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1ac57e15d:;
						{
							jule::Uintptr _284117_addr = (*(_283521_st.unsafe_cast_ptr<_1a8d814ad_BreakSt>()))._field_It;;
							if ((_284117_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_284117_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type40) {
						_case_begin_1ac57e405:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1ac57e47c:;
						{
							if (_1a8de1d6a_checkInfIter(_self_, _283521_st.unsafe_cast_ptr<_1a8d7ed4c_InfIter>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1ac57e504:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1ac57e57b:;
						{
							if (_1a8de21ab_checkScope(_self_, _283521_st.unsafe_cast_ptr<_1a8d7de17_Scope>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1ac57e603:;
						{
							{
								auto &_match_expr{ (*(_283521_st.cast_ptr<_1a8e4bcb5_Data>(&__jule_any_type23)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type22) {
									_case_begin_1ac28601e:;
									{
										return true;;
									}
								}
								_match_end_1ac285ea8:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1ac57e67a:;
						{
							if (_1a8de16d8_checkConditional(_self_, _283521_st.unsafe_cast_ptr<_1a8d7ea50_Conditional>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1ac57e702:;
						{
							if (_1a8de1a29_checkMatch(_self_, _283521_st.unsafe_cast_ptr<_1a8d8312a_Match>())) {
								return true;;
							};
						}
					}
					_match_end_1ac57e26d:;
				};
			}
			_iter_next_1ac57d6ac:;
			++it;
			goto _iter_begin_1ac57d6ac;
		}
		_iter_end_1ac57d6ac:;
	};
	return false;;
}



inline jule::Bool _1a8de24ec_check(_1a8de1012_missingRetChecker* _self_, jule::Ptr<_1a8d7de17_Scope> _287724_s) {
	return _1a8de21ab_checkScope(_self_, _287724_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8de1012_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8de4587_IsInitialized(_1a8de41ad_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1a8de481d_IsTypeInferred(_1a8de41ad_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1a8de4aa4_untypedConstant(_1a8de41ad_Var* _self_) {
	return (_1a8de481d_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8de41ad_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a8de5654_Dispose(jule::Ptr<_1a8d3be91_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*_1023_f.alloc)._field_Owner != nullptr)) && (*_1023_f.alloc)._field_Ident.equal("Dispose", 7)) && (!((*_1023_f.alloc)._field_Statically))) && (!((*_1023_f.alloc)._field_Unsafety))) && _1a8d3c414_IsVoid(_1023_f)) && ((*_1023_f.alloc)._field_Generics.len() == 0LL)) && ((*_1023_f.alloc)._field_Params.len() == 1LL)) && (*((*_1023_f.alloc)._field_Params[0LL]))._field_Mutable) && (!(_1a8d3ad6e_IsRef((*_1023_f.alloc)._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1a8de591d_Str(jule::Ptr<_1a8d3be91_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1a8d3c414_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1a8d3ad6e_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1a8e8aae5_Prim> _399_prim = _1a8e8566c_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1a8e8e07c_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1a8de5c92_logical(jule::Ptr<_1a8d3be91_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1a8d3c414_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1a8d3ad6e_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1a8e8aae5_Prim> _649_prim = _1a8e8566c_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1a8e8dce6_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*_6313_ins.alloc)._field_Owner == _1a8e86be0_Struct((*((*_6313_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1a8de605b_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _7218_f) {
	return static__1a8de5c92_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1a8de6325_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _7718_f) {
	return static__1a8de5c92_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1a8de65de_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _8220_f) {
	return static__1a8de5c92_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1a8de68a8_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _8718_f) {
	return static__1a8de5c92_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1a8de6b72_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _9220_f) {
	return static__1a8de5c92_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1a8de6ee6_result(jule::Ptr<_1a8d3be91_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1a8d3c414_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1a8d3ad6e_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1a8e86be0_Struct((*(_11313_ins))._field_Result.ptr()) == (*_11313_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a8de72b0_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _11819_f) {
	return static__1a8de6ee6_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1a8de7579_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _12319_f) {
	return static__1a8de6ee6_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1a8de7843_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _12819_f) {
	return static__1a8de6ee6_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1a8de7b0c_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _13319_f) {
	return static__1a8de6ee6_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1a8de7dc6_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _13819_f) {
	return static__1a8de6ee6_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1a8de8190_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _14319_f) {
	return static__1a8de6ee6_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1a8de8459_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _14819_f) {
	return static__1a8de6ee6_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1a8de8723_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _15322_f) {
	return static__1a8de6ee6_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1a8de89dc_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _15821_f) {
	return static__1a8de6ee6_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1a8de8ca6_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _16322_f) {
	return static__1a8de6ee6_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1a8de912a_unary(jule::Ptr<_1a8d3be91_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1a8d3c414_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1a8d3ad6e_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1a8e86be0_Struct((*(_18213_ins))._field_Result.ptr()) == (*_18213_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a8de93e4_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _18719_f) {
	return static__1a8de912a_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1a8de96ad_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _19219_f) {
	return static__1a8de912a_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1a8de9977_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _19722_f) {
	return static__1a8de912a_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1a8de9ceb_assign(jule::Ptr<_1a8d3be91_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1a8d3c414_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1a8d3ad6e_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1a8dea0b5_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _22125_f) {
	return static__1a8de9ceb_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1a8dea37e_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _22625_f) {
	return static__1a8de9ceb_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1a8dea648_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _23125_f) {
	return static__1a8de9ceb_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1a8dea912_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _23625_f) {
	return static__1a8de9ceb_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1a8deabcb_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _24125_f) {
	return static__1a8de9ceb_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1a8deae95_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _24625_f) {
	return static__1a8de9ceb_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1a8deb25e_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _25125_f) {
	return static__1a8de9ceb_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1a8deb528_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _25627_f) {
	return static__1a8de9ceb_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1a8deb7e2_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _26128_f) {
	return static__1a8de9ceb_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1a8debaab_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3be91_Fn> _26628_f) {
	return static__1a8de9ceb_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8de5038_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1a8e33e78_pushErr(_1a8e3397d_typeCompatibilityChecker* _self_, jule::Str _11926_fmt, jule::Slice<jule::Any> _11939_args) {
	_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11926_fmt, _11939_args);
}



inline jule::Bool _1a8e3420e_checkTrait(_1a8e3397d_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a8e840e9_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8d5034a_Trait> _12713_trt = _1a8e86e76_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12813_ref = false;;
	{
		
		if ((_1a8e85903_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1ac594591:;
			{
				_12813_ref=true;
				(*(_self_))._field_src=(*(_1a8e85903_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1a8e86be0_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1ac59463a;
			}
		}
		else if ((_1a8e86be0_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1ac59463a:;
			{
				jule::Ptr<_1a8d29ba4_StructIns> _13813_s = _1a8e86be0_Struct((*(_self_))._field_src);;
				if ((!(_1a8d28565_IsImplements((*(_13813_s))._field_Decl.ptr(), _12713_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12813_ref)) && _1a8e3252b_traitHasReferenceReceiver(&(_12713_trt)))) {
					_1a8e33e78_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a8e86e76_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1ac5946b2:;
			{
				jule::Ptr<_1a8d5034a_Trait> _14817_base = _1a8e86e76_Trait((*(_self_))._field_src);;
				if ((_12713_trt == _14817_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1ac599783:;
				{
					auto expr = &((*(_14817_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac599860:;
					if (it != expr_end) {
						jule::Ptr<_1a8d26e26_Struct> _15320_s1 = *it;
						{
							{
								auto expr = &((*(_12713_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac59a223:;
								if (it != expr_end) {
									jule::Ptr<_1a8d26e26_Struct> _15424_s2 = *it;
									{
										if ((_15320_s1 == _15424_s2)) {
											goto _iter_next_1ac599860;
										};
									}
									_iter_next_1ac59a223:;
									++it;
									goto _iter_begin_1ac59a223;
								}
								_iter_end_1ac59a223:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1ac599860:;
						++it;
						goto _iter_begin_1ac599860;
					}
					_iter_end_1ac599860:;
				};
				{
					auto expr = &((*_12713_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac59a641:;
					if (it != expr_end) {
						jule::Ptr<_1a8d3be91_Fn> _16125_m1 = *it;
						{
							jule::Ptr<_1a8d3be91_Fn> _16221_m2 = _1a8d50ee9_FindMethod(_14817_base, (*(_16125_m1))._field_Ident);;
							if ((_16221_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1a8d3ee72_FnIns> _16617_m1k = _1a8dcd9b1_getTraitCheckFnKind((*(_self_))._field_s, &(_16125_m1));;
							jule::Ptr<_1a8d3ee72_FnIns> _16717_m2k = _1a8dcd9b1_getTraitCheckFnKind((*(_self_))._field_s, &(_16221_m2));;
							if ((!(_1a8d40dda_equalTrait(_16617_m1k, &(_16717_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1ac59a641:;
						++it;
						goto _iter_begin_1ac59a641;
					}
					_iter_end_1ac59a641:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac594519:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ac594481:;
	};
}



inline jule::Bool _1a8e34495_checkPtr(_1a8e3397d_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a8e840e9_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8e92dd8_Ptr> _18213_dest = _1a8e85b89_Ptr((*(_self_))._field_dest.ptr());;
	if (_1a8e93922_IsUnsafe(_18213_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1a8e83725_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a8e3472b_checkPrim(_1a8e3397d_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1a8e8aae5_Prim> _19113_prim = _1a8e8566c_Prim((*(_self_))._field_dest);;
		if (((_19113_prim != nullptr) && _1a8e8e313_IsAny(_19113_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1a8e83725_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a8e34b27_typeEnum(_1a8e3397d_typeCompatibilityChecker* _self_, jule::Ptr<_1a8d54261_TypeEnum>* _19928_e, jule::Ptr<_1a8e8301b_TypeKind>* _19947_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19928_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5a24d3:;
		if (it != expr_end) {
			jule::Ptr<_1a8d53b89_TypeEnumItem> _20021_item = *it;
			{
				if (_1a8e83725_Equal((*((*(_20021_item))._field_Kind))._field_Kind, (*(_19947_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1a8d54261_TypeEnum> _20417_ke = _1a8e861a6_TypeEnum((*(*_20021_item.alloc)._field_Kind.alloc)._field_Kind);;
				if ((_20417_ke == nullptr)) {
					goto _iter_next_1ac5a24d3;
				};
				if (_1a8e34b27_typeEnum(_self_, &(_20417_ke), _19947_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac5a24d3:;
			++it;
			goto _iter_begin_1ac5a24d3;
		}
		_iter_end_1ac5a24d3:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a8e34dad_checkTypeEnum(_1a8e3397d_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a8e83725_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8d54261_TypeEnum> _21913_e = _1a8e861a6_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1a8e34b27_typeEnum(_self_, &(_21913_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1a8e35144_check(_1a8e3397d_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1a8e85b89_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1a8e34495_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1a8e84db9_NilCompatible((*(_self_))._field_dest)) {
		if (_1a8e840e9_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1a8e8566c_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1ac5a7c36:;
			{
				__jule_func_result = _1a8e3472b_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a8e861a6_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1ac5a7cbe:;
			{
				__jule_func_result = _1a8e34dad_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a8e86e76_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1ac5a76e7:;
			{
				__jule_func_result = _1a8e3420e_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac5a730c:;
			{
				__jule_func_result = _1a8e83725_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1ac5a71ec:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e3397d_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1a8e35bb1_pushErr(_1a8e3572c_assignTypeChecker* _self_, jule::Str _25526_fmt, jule::Slice<jule::Any> _25539_args) {
	_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25526_fmt, _25539_args);
}



inline jule::Bool _1a8e35e47_checkValidity(_1a8e3572c_assignTypeChecker* _self_) {
	jule::Bool _26013_valid = true;;
	{
		
		if ((_1a8e86959_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac5aa9e7:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _26313_f = _1a8e86959_Fn((*(*(_self_))._field_d.alloc)._field_Kind);;
				{
					
					if (_1a8d41407_IsBuiltin(_26313_f.ptr())) {
						_case_begin_1ac5ac345:;
						{
							_1a8e35bb1_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if ((*((*(_26313_f))._field_Decl))._field_Binded) {
						_case_begin_1ac5ac3de:;
						{
							_1a8e35bb1_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if (((!((*((*(_26313_f))._field_Decl))._field_Statically)) && _1a8d3c69a_IsMethod((*_26313_f.alloc)._field_Decl))) {
						_case_begin_1ac5ac455:;
						{
							_1a8e35bb1_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if ((((*((*(_26313_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_26313_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1ac5ac4bb:;
						{
							_1a8e35bb1_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1a8dc42e2_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					_match_end_1ac5ac268:;
				};
			}
		}
		else if ((_1a8e87493_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac5aaa91:;
			{
				_1a8e35bb1_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_26013_valid=false;
			}
		}
		_match_end_1ac5aa970:;
	};
	return _26013_valid;;
}



inline jule::Bool _1a8e361cd_checkConst(_1a8e3572c_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1a8e8566c_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2929_kind = (*(_1a8e8566c_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_20a2b6c27_IsFloat(_2929_kind)) {
			_case_begin_1ac5b344a:;
			{
				if ((!(_1a8e328d3_floatAssignable(&(_2929_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2929_kind;
			}
		}
		else if (_20a2b68d6_IsInt(_2929_kind)) {
			_case_begin_1ac5b34d3:;
			{
				if ((!(_1a8e33494_intAssignable(_2929_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2929_kind;
			}
		}
		else {
			_case_begin_1ac5b33d4:;
			{
				return false;;
			}
		}
		_match_end_1ac5b32a2:;
	};
	return true;;
}



inline jule::Bool _1a8e36464_checkCompatibility(_1a8e3572c_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ac5b5716:;
			{
				return false;;
			}
		}
		else if ((!(_1a8e35e47_checkValidity(_self_)))) {
			_case_begin_1ac5b577c:;
			{
				return false;;
			}
		}
		else if (_1a8e361cd_checkConst(_self_)) {
			_case_begin_1ac5b57e3:;
			{
				return true;;
			}
		}
		else if ((_1a8e85e20_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac5b5859:;
			{
				jule::Ptr<_1a8e8301b_TypeKind> _32117_dkind = (*(_self_))._field_dest;;
				if ((_1a8e85e20_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_32117_dkind=(*((*(_1a8e85e20_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1a8e8aae5_Prim> _32513_prim = _1a8e8566c_Prim((*(_self_))._field_dest);;
				if (((_32513_prim == nullptr) || _1a8e8e313_IsAny(_32513_prim.ptr()))) {
					goto _match_end_1ac5b4a34;
				};
				jule::Ptr<_1a8e8301b_TypeKind> _33017_dest = (*(*(_1a8e85e20_Enum((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind;;
				return _1a8dcc3e9_checkTypeCompatibility((*(_self_))._field_s, &(_33017_dest), &(_32117_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1ac5b4a34:;
	};
	return _1a8dcccbd_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1a8e366ea_check(_1a8e3572c_assignTypeChecker* _self_) {
	jule::Bool _3379_ok = _1a8e36464_checkCompatibility(_self_);;
	if ((_3379_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1a8ea0522_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));
	};
	return _3379_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e3572c_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac5ceb09_annotateConstraintElem(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ac5d1303:;
			{
				jule::Ptr<_1a8e8301b_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1ac5d2117:;
						{
							_36021_elem=(*(_1a8e8643c_Arr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac5d205c:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a8775831_ArrTypeDecl>()))._field_Elem;
				return _1a8e3880c_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1ac5d128c:;
	};
	return false;;
}

inline jule::Bool _1ac5ce4aa_annotateConstraintElem(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ac5d4c74:;
			{
				jule::Ptr<_1a8e8301b_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1ac5d5901:;
						{
							_36021_elem=(*(_1a8e866c3_Slc((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac5d59cd:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a8774995_SlcTypeDecl>()))._field_Elem;
				return _1a8e3880c_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1ac5d4c0d:;
	};
	return false;;
}

inline jule::Bool _1ac5d1633_annotateConstraintElem(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ac5d8827:;
			{
				jule::Ptr<_1a8e8301b_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1ac5d96c4:;
						{
							_36021_elem=(*(_1a8e85b89_Ptr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac5d9581:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a877508e_PtrTypeDecl>()))._field_Elem;
				return _1a8e3880c_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1ac5d87b1:;
	};
	return false;;
}

inline jule::Bool _1ac5d8c23_annotateConstraintElem(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ac5dbe79:;
			{
				jule::Ptr<_1a8e8301b_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1ac5dcd9d:;
						{
							_36021_elem=(*(_1a8e85903_Sptr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac5dcbd3:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a8774610_SptrTypeDecl>()))._field_Elem;
				return _1a8e3880c_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1ac5dbe13:;
	};
	return false;;
}



inline jule::Bool _1a8e379e8_annotateConstraintMap(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _37745_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ac5bcb08:;
			{
				jule::Ptr<_1a8e91788_Map> _38017_m = _1a8e8720c_Map((*(_37745_k)).ptr());;
				jule::Ptr<_1a877607e_MapTypeDecl> _38117_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a877607e_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_38117_m2))._field_Key;
				if ((!(_1a8e3880c_annotateConstraint(_self_, &((*(_38017_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_38117_m2.alloc)._field_Val;
				__jule_func_result = _1a8e3880c_annotateConstraint(_self_, &((*_38017_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1ac5bca92:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a8e37d39_annotateConstraintTup(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _39245_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ac5c09eb:;
			{
				jule::Ptr<_1a8774c92_TupleTypeDecl> _39517_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a8774c92_TupleTypeDecl>();;
				jule::Ptr<_1a8e90bd8_Tuple> _39617_tup2 = _1a8e87493_Tup((*(_39245_k)).ptr());;
				{
					auto expr = &((*(_39617_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac5c22e4:;
					if (it != expr_end) {
						jule::Ptr<_1a8e8301b_TypeKind> _39725_t2 = *it;
						{
							{
								auto expr = &((*(_39517_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac5c2c51:;
								if (it != expr_end) {
									jule::Ptr<_1a8773565_TypeDecl> _39829_t = *it;
									{
										(*(_self_))._field_c=_39829_t;
										if (_1a8e3880c_annotateConstraint(_self_, &(_39725_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1ac5c2c51:;
									++it;
									goto _iter_begin_1ac5c2c51;
								}
								_iter_end_1ac5c2c51:;
							};
						}
						_iter_next_1ac5c22e4:;
						++it;
						goto _iter_begin_1ac5c22e4;
					}
					_iter_end_1ac5c22e4:;
				};
			}
		}
		_match_end_1ac5c0985:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a8e3817a_annotateConstraintFn(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _40944_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac5c324b:;
			{
				jule::Ptr<_1a8785225_FnDecl> _41217_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a8785225_FnDecl>();;
				jule::Ptr<_1a8d3ee72_FnIns> _41317_f = _1a8e86959_Fn((*(_40944_k)).ptr());;
				{
					auto expr = &((*(_41317_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac5c521a:;
					if (it != expr_end) {
						jule::I32 _41418_i = it - expr->begin();
						jule::Ptr<_1a8d3dde9_ParamIns> _41425_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_41217_pf))._field_Params[_41418_i]))._field_Kind;
							if (_1a8e3880c_annotateConstraint(_self_, &((*(_41425_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1ac5c521a:;
						++it;
						_41418_i++;
						goto _iter_begin_1ac5c521a;
					}
					_iter_end_1ac5c521a:;
				};
				if (((*_41217_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*_41217_pf.alloc)._field_Result.alloc)._field_Kind;
					if (_1a8e3880c_annotateConstraint(_self_, &((*_41317_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1ac5c31d5:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a8e384bb_annotateConstraintIdent(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _43047_k) {
	jule::Ptr<_1a8773b70_IdentTypeDecl> _43113_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1a8773b70_IdentTypeDecl>(&__jule_any_type74);;
	jule::Ptr<_1a8d29ba4_StructIns> _43213_s = _1a8e86be0_Struct((*(_43047_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5c8b69:;
		if (it != expr_end) {
			jule::I32 _43313_i = it - expr->begin();
			jule::Ptr<_1a8780770_GenericDecl> _43316_g = *it;
			{
				if (((*(_43316_g))._field_Ident == (*(_43113_ident))._field_Ident)) {
					jule::Ptr<_1a8e81635_InsGeneric> _43521_fg = (*((*(_self_))._field_f))._field_Generics[_43313_i];;
					if ((_43521_fg != nullptr)) {
						return false;;
					};
					_1a8e38b70_pushGeneric(_self_, _43047_k, _43313_i);
					return true;;
				};
				if ((_43213_s == nullptr)) {
					goto _iter_next_1ac5c8b69;
				};
				jule::Ptr<_1a8773565_TypeDecl> _44517_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_43113_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac5cb6e9:;
					if (it != expr_end) {
						jule::Ptr<_1a8773565_TypeDecl> _44625_ig = *it;
						{
							(*(_self_))._field_c=_44625_ig;
							{
								auto expr = &((*(_43213_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac5cc2bb:;
								if (it != expr_end) {
									jule::Ptr<_1a8e81635_InsGeneric> _44829_sg = *it;
									{
										if (_1a8e3880c_annotateConstraint(_self_, &((*(_44829_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1ac5cc2bb:;
									++it;
									goto _iter_begin_1ac5cc2bb;
								}
								_iter_end_1ac5cc2bb:;
							};
						}
						_iter_next_1ac5cb6e9:;
						++it;
						goto _iter_begin_1ac5cb6e9;
					}
					_iter_end_1ac5cb6e9:;
				};
				(*(_self_))._field_c=_44517_c;
			}
			_iter_next_1ac5c8b69:;
			++it;
			_43313_i++;
			goto _iter_begin_1ac5c8b69;
		}
		_iter_end_1ac5c8b69:;
	};
	return false;;
}



inline jule::Bool _1a8e3880c_annotateConstraint(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _45942_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ac5cc772:;
			{
				return _1a8e384bb_annotateConstraintIdent(_self_, _45942_k);;
			}
		}
		_match_end_1ac5cc70b:;
	};
	{
		
		if ((_1a8e8643c_Arr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ac5cd410:;
			{
				return _1ac5ceb09_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1a8e866c3_Slc((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ac5cd476:;
			{
				return _1ac5ce4aa_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1a8e85b89_Ptr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ac5cd4dc:;
			{
				return _1ac5d1633_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1a8e85903_Sptr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ac5cd553:;
			{
				return _1ac5d8c23_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1a8e8720c_Map((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ac5cd5b9:;
			{
				return _1a8e379e8_annotateConstraintMap(_self_, _45942_k);;
			}
		}
		else if ((_1a8e86959_Fn((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ac5cdba2:;
			{
				return _1a8e3817a_annotateConstraintFn(_self_, _45942_k);;
			}
		}
		else if ((_1a8e87493_Tup((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1ac5cdc18:;
			{
				return _1a8e37d39_annotateConstraintTup(_self_, _45942_k);;
			}
		}
		else {
			_case_begin_1ac5cd751:;
			{
				return false;;
			}
		}
		_match_end_1ac5cd6eb:;
	};
}



inline void _1a8e38b70_pushGeneric(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _48435_k, jule::I32 _48449_i) {
	(*((*(_self_))._field_f))._field_Generics[_48449_i]=jule::new_ptr<_1a8e81635_InsGeneric>(_1a8e81635_InsGeneric{._field_Kind=(*(_48435_k)), });
	jule::Ptr<_1a8780770_GenericDecl> _48613_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48449_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5e0ed3:;
		if (it != expr_end) {
			jule::Ptr<_1a8e8301b_TypeKind> _48721_ignored = *it;
			{
				if (((*(_48613_gd))._field_Ident == _1a8e833d4_Str(_48721_ignored.ptr()))) {
					(*_48721_ignored.alloc)._field_Kind=(*((*(_48435_k))))._field_Kind;
				};
			}
			_iter_next_1ac5e0ed3:;
			++it;
			goto _iter_begin_1ac5e0ed3;
		}
		_iter_end_1ac5e0ed3:;
	};
	if ((((*_48613_gd.alloc)._field_Constraint == nullptr) || ((*((*_48613_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_48613_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1a8e3880c_annotateConstraint(_self_, _48435_k);
}



inline jule::Bool _1a8e38eb1_annotatePrim(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _49943_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a8e3aed5_annotateAny(_self_, _49943_k);
	return __jule_func_result;;
}



inline jule::Bool _1a8e39302_annotateArr(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _50342_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8e92415_Arr> _50413_parr = _1a8e8643c_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_50413_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8e92415_Arr> _50813_arr = _1a8e8643c_Arr((*(_50342_k)).ptr());;
	(*(_self_))._field_k=(&((*(_50413_parr))._field_Elem));
	__jule_func_result = _1a8e3b326_annotateKind(_self_, &((*(_50813_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a8e39643_annotateSlc(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _51342_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8e900e4_Slc> _51413_pslc = _1a8e866c3_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_51413_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8e900e4_Slc> _51813_slc = _1a8e866c3_Slc((*(_51342_k)).ptr());;
	(*(_self_))._field_k=(&((*(_51413_pslc))._field_Elem));
	__jule_func_result = _1a8e3b326_annotateKind(_self_, &((*(_51813_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a8e39a3e_checkMapKey(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _52341_k, jule::Ptr<_1a8e8301b_TypeKind>* _52361_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8e8301b_TypeKind>* _52413_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52341_k;
	__jule_func_result=_1a8e3b326_annotateKind(_self_, _52361_ck);
	(*(_self_))._field_k=_52413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a8e39d80_annotateMap(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8e91788_Map> _53213_pmap = _1a8e8720c_Map((*((*(_self_))._field_k)).ptr());;
	if ((_53213_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8e91788_Map> _53613_m = _1a8e8720c_Map((*(_53142_k)).ptr());;
	__jule_func_result = (_1a8e39a3e_checkMapKey(_self_, (&((*(_53213_pmap))._field_Key)), &((*(_53613_m))._field_Key)) && _1a8e39a3e_checkMapKey(_self_, (&((*(_53213_pmap))._field_Val)), &((*_53613_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1a8e3a1c1_annotateFn(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _54141_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8d3ee72_FnIns> _54213_pf = _1a8e86959_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_54213_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _54613_f = _1a8e86959_Fn((*(_54141_k)).ptr());;
	{
		
		if (((*(_54213_pf))._field_Params.len() != (*(_54613_f))._field_Params.len())) {
			_case_begin_1ac5ed683:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1a8d3c414_IsVoid((*(_54213_pf))._field_Decl.ptr()) != _1a8d3c414_IsVoid((*(_54613_f))._field_Decl))) {
			_case_begin_1ac5ed71b:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ac5ed5ea:;
	};
	__jule_func_result=true;
	jule::Ptr<_1a8e8301b_TypeKind>* _55513_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_54613_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac600586:;
		if (it != expr_end) {
			jule::I32 _55614_i = it - expr->begin();
			jule::Ptr<_1a8d3dde9_ParamIns> _55621_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_54213_pf))._field_Params[_55614_i]))._field_Kind));
				__jule_func_result=(_1a8e3b326_annotateKind(_self_, &((*(_55621_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1ac600586:;
			++it;
			_55614_i++;
			goto _iter_begin_1ac600586;
		}
		_iter_end_1ac600586:;
	};
	if ((!(_1a8d3c414_IsVoid((*(_54213_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_54213_pf))._field_Result));
		__jule_func_result=(_1a8e3b326_annotateKind(_self_, &((*_54613_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_55513_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a8e3a512_annotatePtr(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _57042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8e92dd8_Ptr> _57113_pptr = _1a8e85b89_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_57113_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8e92dd8_Ptr> _57513_ptr = _1a8e85b89_Ptr((*(_57042_k)).ptr());;
	(*(_self_))._field_k=(&((*(_57113_pptr))._field_Elem));
	__jule_func_result = _1a8e3b326_annotateKind(_self_, &((*(_57513_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a8e3a853_annotateSptr(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _58043_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8e8e621_Sptr> _58113_ssptr = _1a8e85903_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_58113_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8e8e621_Sptr> _58513_sptr = _1a8e85903_Sptr((*(_58043_k)).ptr());;
	(*(_self_))._field_k=(&((*(_58113_ssptr))._field_Elem));
	__jule_func_result = _1a8e3b326_annotateKind(_self_, &((*(_58513_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a8e3ab94_annotateStruct(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _59045_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8d29ba4_StructIns> _59113_s = _1a8e86be0_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_59113_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _59513_s2 = _1a8e86be0_Struct((*(_59045_k)).ptr());;
	if (((*(_59113_s))._field_Generics.len() != (*(_59513_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_59113_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6094d5:;
		if (it != expr_end) {
			jule::I32 _59914_i = it - expr->begin();
			jule::Ptr<_1a8e81635_InsGeneric> _59921_g = *it;
			{
				jule::Ptr<_1a8e81635_InsGeneric> _60017_g2 = (*_59513_s2.alloc)._field_Generics[_59914_i];;
				if (_1a8e83725_Equal((*(_59921_g))._field_Kind, (*(_60017_g2))._field_Kind)) {
					goto _iter_next_1ac6094d5;
				};
				(*(_self_))._field_k=(&((*_59921_g.alloc)._field_Kind));
				if ((!(_1a8e3b326_annotateKind(_self_, &((*_60017_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac6094d5:;
			++it;
			_59914_i++;
			goto _iter_begin_1ac6094d5;
		}
		_iter_end_1ac6094d5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a8e3aed5_annotateAny(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _61242_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6139_kind = _1a8e833d4_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac60ca7c:;
		if (it != expr_end) {
			jule::I32 _61413_i = it - expr->begin();
			jule::Ptr<_1a8780770_GenericDecl> _61416_g = *it;
			{
				if ((_6139_kind != (*(_61416_g))._field_Ident)) {
					goto _iter_next_1ac60ca7c;
				};
				jule::Ptr<_1a8e81635_InsGeneric> _61813_t = (*((*(_self_))._field_f))._field_Generics[_61413_i];;
				{
					
					if ((_61813_t == nullptr) || ((*(_61813_t))._field_Kind == nullptr)) {
						_case_begin_1ac60e3a8:;
						{
							_1a8e38b70_pushGeneric(_self_, _61242_k, _61413_i);
						}
					}
					else if ((!(_1a8e83725_Equal((*(_61813_t))._field_Kind, (*(_61242_k)))))) {
						_case_begin_1ac60e441:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1ac60e298:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61242_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1ac60ca7c:;
			++it;
			_61413_i++;
			goto _iter_begin_1ac60ca7c;
		}
		_iter_end_1ac60ca7c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a8e3b326_annotateKind(_1a8e37102_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _63343_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1a8e3aed5_annotateAny(_self_, _63343_k)) {
			_case_begin_1ac611971:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a8e8566c_Prim((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ac6119d7:;
			{
				__jule_func_result = _1a8e38eb1_annotatePrim(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a8e8643c_Arr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ac611a4d:;
			{
				__jule_func_result = _1a8e39302_annotateArr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a8e866c3_Slc((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ac611ac5:;
			{
				__jule_func_result = _1a8e39643_annotateSlc(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a8e8720c_Map((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ac611c90:;
			{
				__jule_func_result = _1a8e39d80_annotateMap(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a8e86959_Fn((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ac611d06:;
			{
				__jule_func_result = _1a8e3a1c1_annotateFn(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a8e85b89_Ptr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ac611d6c:;
			{
				__jule_func_result = _1a8e3a512_annotatePtr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a8e85903_Sptr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ac611dd3:;
			{
				__jule_func_result = _1a8e3a853_annotateSptr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a8e86be0_Struct((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1ac611e5a:;
			{
				__jule_func_result = _1a8e3ab94_annotateStruct(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac611850:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ac6113dd:;
	};
}



inline jule::Bool _1a8e3b5ac_annotate(_1a8e37102_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1a8e3b326_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e37102_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a8e3c4c0_pushErrToken(_1a8e3be5e_fnCallArgChecker* _self_, jule::Ptr<_1a875ce89_Token> _67831_token, jule::Str _67846_fmt, jule::Slice<jule::Any> _67859_args) {
	_1a8dc3e7e_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67831_token, _67846_fmt, _67859_args);
}



inline void _1a8e3c833_pushErr(_1a8e3be5e_fnCallArgChecker* _self_, jule::Str _68226_fmt, jule::Slice<jule::Any> _68239_args) {
	_1a8e3c4c0_pushErrToken(_self_, (*(_self_))._field_errorToken, _68226_fmt, _68239_args);
}



inline jule::Slice<jule::Ptr<_1a8d3dde9_ParamIns>> _1a8e3cab9_getParams(_1a8e3be5e_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl != nullptr)) && _1a8d3aad8_IsSelf((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1a8e3ce0a_checkCounts(_1a8e3be5e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a8d3dde9_ParamIns>>* _69531_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _69613_n = (*(_69531_params)).len();;
	if (((_69613_n > 0LL) && _1a8d3aad8_IsSelf((*((*(_69531_params))[0LL]))._field_Decl.ptr()))) {
		(_69613_n)--;
	};
	jule::I32 _70113_diff = (_69613_n - (*(_self_))._field_args.len());;
	jule::Str _70213_log = jule::Str();;
	{
		
		if ((_70113_diff == 0LL)) {
			_case_begin_1ac61d928:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_69613_n > 0LL) && (*(*((*(_69531_params))[(_69613_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1ac61d84b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70113_diff < 0LL) || (_70113_diff > (*(_69531_params)).len()))) {
			_case_begin_1ac61d50a:;
			{
				_70213_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1ac61d494:;
			{
				_70213_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1ac61d42d:;
	};
	_2234c269a_StrBuilder _71313_err = static__2234c2ac9_New(32LL);;
	_2234c313a_WriteStr(&_71313_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_2234c313a_WriteStr(&_71313_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69531_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac621211:;
		if (it != expr_end) {
			jule::I32 _71613_i = it - expr->begin();
			jule::Ptr<_1a8d3dde9_ParamIns> *_71616_p = it;
			{
				_2234c313a_WriteStr(&_71313_err, _1a8e833d4_Str((*((*(_71616_p))))._field_Kind.ptr()));
				if ((((*(_69531_params)).len() - _71613_i) > 1LL)) {
					_2234c313a_WriteStr(&_71313_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ac621211:;
			++it;
			_71613_i++;
			goto _iter_begin_1ac621211;
		}
		_iter_end_1ac621211:;
	};
	_2234c33e3_WriteByte(&_71313_err, ')');
	_1a8e3c833_pushErr(_self_, _70213_log, jule::Slice<jule::Any>::make({jule::Any(_2234c3932_Str(&_71313_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a8e3d3b1_checkArg(_1a8e3be5e_fnCallArgChecker* _self_, jule::Ptr<_1a8d3dde9_ParamIns>* _72732_p, jule::Ptr<_1a8e4bcb5_Data>* _72751_arg, jule::Ptr<_1a875ce89_Token>* _72768_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1a8d4224e_parameterUsesGenerics(_72732_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72732_p))))._field_Decl))._field_Variadic)) && _1a8e45a4a_isGoodValueToInfer(_72751_arg));
		if (__jule_func_result) {
			_1a8e37102_dynamicTypeAnnotation _73221_dta = _1a8e37102_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72732_p)), ._field_a=(*(_72751_arg)), ._field_errorToken=(*(_72768_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1a8e3b5ac_annotate(&_73221_dta);
		};
		if ((!(__jule_func_result))) {
			_1a8e3c4c0_pushErrToken(_self_, (*(_72768_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1a8dd0d26_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72732_p))))._field_Kind), _72751_arg, _72768_errorToken)) {
		__jule_func_result = _1a8dcb98c_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72732_p))))._field_Kind), _72751_arg, (*(_72768_errorToken)));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a8e3d7ac_push(_1a8e3be5e_fnCallArgChecker* _self_, jule::Ptr<_1a8d3dde9_ParamIns>* _75628_p, jule::Ptr<_1a8777899_Expr> _75646_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8e8301b_TypeKind> _75713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7589_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75628_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75628_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75628_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1a8e4bcb5_Data> _76613_d = _1a8e6bc4c_evalExpr((*(_self_))._field_e, _75646_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_75713_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7589_oldImmut;
	if ((_76613_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a8e3d3b1_checkArg(_self_, _75628_p, &(_76613_d), &((*(_75646_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_76613_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1a8e3dba8_pushVariadic(_1a8e3be5e_fnCallArgChecker* _self_, jule::Ptr<_1a8d3dde9_ParamIns>* _78036_p, jule::I32 _78054_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78213_variadiced = false;;
	jule::Bool _7839_more = ((_78054_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1a8d31507_SliceExprModel> _78413_model = jule::new_ptr<_1a8d31507_SliceExprModel>(_1a8d31507_SliceExprModel{._field_ElemKind=(*((*(_78036_p))))._field_Kind, });;
	jule::Ptr<_1a8e8301b_TypeKind> _78813_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1a8e8301b_TypeKind> _79513_oldKind = (*((*(_78036_p))))._field_Kind;;
	(*((*(_78036_p))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>((*(*((*(_78036_p))))._field_Kind.alloc));
	(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78036_p))))._field_Kind=_79513_oldKind;
	});;
	for (; (_78054_i < (*(_self_))._field_args.len()); (_78054_i)++) {
		{
			jule::Ptr<_1a8777899_Expr> _80417_arg = (*(_self_))._field_args[_78054_i];;
			{
				auto &_match_expr{ (*(_80417_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1ac6332de:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8e900e4_Slc>(_1a8e900e4_Slc{._field_Elem=(*((*(_78036_p))))._field_Kind}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data22)});
					}
				}
				else {
					_case_begin_1ac6335db:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78036_p))))._field_Kind;
					}
				}
				_match_end_1ac633586:;
			};
			jule::Ptr<_1a8e4bcb5_Data> _81717_d = _1a8e6b5ba_eval((*(_self_))._field_e, _80417_arg);;
			if ((_81717_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1ac632794;
			};
			if ((*((*(_81717_d))._field_Kind))._field_Variadic) {
				_78213_variadiced=true;
				(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1a8e3d3b1_checkArg(_self_, _78036_p, &(_81717_d), &((*(_80417_arg))._field_Token)));
				(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_81717_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1ac635c4d:;
						{
							_78413_model=(*(_81717_d))._field_Model.unsafe_cast_ptr<_1a8d31507_SliceExprModel>();
							(*(_78413_model))._field_ElemKind=(*((*(_78036_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1ac63736a:;
						{
							_78413_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_81717_d))._field_Model); };
						}
					}
					_match_end_1ac637315:;
				};
				(_78054_i)++;
				goto _iter_end_1ac632794;
			};
			__jule_func_result=(__jule_func_result && _1a8e3d3b1_checkArg(_self_, _78036_p, &(_81717_d), &((*_80417_arg.alloc)._field_Token)));
			(*(_78413_model))._field_Elems=jule::append((*_78413_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_81717_d))._field_Model}));
		}
	_iter_next_1ac632794:;
	}
	_iter_end_1ac632794:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_78813_old;
	if ((_78213_variadiced && _7839_more)) {
		_1a8e3c4c0_pushErrToken(_self_, (*((*(_self_))._field_args[_78054_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_78413_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_78413_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a8e3dee9_checkArgs(_1a8e3be5e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a8d3dde9_ParamIns>>* _86133_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8629_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I32 _86613_i = 0LL;;
	if ((((*(_86133_params)).len() > 0LL) && _1a8d3aad8_IsSelf((*((*(_86133_params))[0LL]))._field_Decl.ptr()))) {
		(_86613_i)++;
	};
	_julec_label_1ac63c6c2:;
	while ((_86613_i < (*(_86133_params)).len())) {
		{
			jule::Ptr<_1a8d3dde9_ParamIns> _87317_p = (*(_86133_params))[_86613_i];;
			{
				
				if ((*(*(_87317_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1ac63e32d:;
					{
						__jule_func_result=(_1a8e3dba8_pushVariadic(_self_, &(_87317_p), _86613_i) && __jule_func_result);
						goto _iter_end_1ac63ca57;
					}
				}
				else if (((*(_self_))._field_args.len() <= _86613_i)) {
					_case_begin_1ac63e41b:;
					{
						__jule_func_result=false;
						goto _iter_end_1ac63ca57;
					}
				}
				else {
					_case_begin_1ac63de76:;
					{
						__jule_func_result=(_1a8e3d7ac_push(_self_, &(_87317_p), (*(_self_))._field_args[_86613_i]) && __jule_func_result);
					}
				}
				_match_end_1ac63de10:;
			};
			(_86613_i)++;
		}
	_iter_next_1ac63ca57:;
	}
	_iter_end_1ac63ca57:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8629_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a8e3e280_checkDynamicTypeAnnotation(_1a8e3be5e_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6415d8:;
		if (it != expr_end) {
			jule::Ptr<_1a8e81635_InsGeneric> _89316_g = *it;
			{
				if ((_89316_g == nullptr)) {
					_1a8e3c833_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac6415d8:;
			++it;
			goto _iter_begin_1ac6415d8;
		}
		_iter_end_1ac6415d8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a8e3e516_check(_1a8e3be5e_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a8d3dde9_ParamIns>> _90313_params = _1a8e3cab9_getParams(_self_);;
	__jule_func_result=_1a8e3ce0a_checkCounts(_self_, &(_90313_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a8e3dee9_checkArgs(_self_, &(_90313_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1a8e3e280_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e3be5e_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a8e403e6_pushErr(_1a8e3ed96_structLitChecker* _self_, jule::Ptr<_1a875ce89_Token> _94126_token, jule::Str _94141_fmt, jule::Slice<jule::Any> _94154_args) {
	_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), _94126_token, _94141_fmt, _94154_args);
}



inline void _1a8e40759_pushSuggestion(_1a8e3ed96_structLitChecker* _self_, jule::Str _94633_fmt, jule::Slice<jule::Any> _94646_args) {
	_1a8e4e3a0_pushSuggestion((*(_self_))._field_e.ptr(), _94633_fmt, _94646_args);
}



inline void _1a8e40b77_pushMatch(_1a8e3ed96_structLitChecker* _self_, jule::Ptr<_1a8d29104_FieldIns>* _95033_f, jule::Ptr<_1a8e4bcb5_Data>* _95052_d, jule::Ptr<_1a875ce89_Token>* _95067_errorToken) {
	;
	jule::Bool _9569_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95033_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1a8dd0d26_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9569_mutable, false, &((*((*(_95033_f))))._field_Kind), _95052_d, _95067_errorToken)) {
		_1a8dcb98c_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, false, &((*((*(_95033_f))))._field_Kind), _95052_d, (*(_95067_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1a8d2ea55_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1a8d2ea55_StructArgExprModel>(_1a8d2ea55_StructArgExprModel{._field_Token=(*(_95067_errorToken)), ._field_Field=(*(_95033_f)), ._field_Expr=(*(_95052_d))})); };
}



inline void _1a8e40eda_checkPair(_1a8e3ed96_structLitChecker* _self_, jule::Ptr<_1a877c0b8_FieldExprPair>* _96933_pair, jule::Slice<jule::Ptr<_1a8777899_Expr>>* _96960_exprs) {
	jule::Ptr<_1a8d29104_FieldIns> _97113_f = _1a8d2b05c_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96933_pair))))._field_Field))._field_Kind);;
	if ((_97113_f == nullptr)) {
		_1a8e403e6_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1a8dc46dd_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_97113_f))._field_Decl))._field_Public, (*(*(_97113_f))._field_Decl.alloc)._field_Token)))) {
		_1a8e403e6_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		_1a8e40759_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1ac64c79d:;
	{
		auto expr = _96960_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac64a59d:;
		if (it != expr_end) {
			jule::Ptr<_1a8777899_Expr> _98321_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98321_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1ac64db78:;
						{
							jule::Ptr<_1a877c0b8_FieldExprPair> _98621_dpair = (*(_98321_expr))._field_Kind.unsafe_cast_ptr<_1a877c0b8_FieldExprPair>();;
							{
								
								if (((*(_96933_pair)) == _98621_dpair)) {
									_case_begin_1ac64eb68:;
									{
										goto _iter_end_1ac64a59d;
									}
								}
								else if (((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind == (*(*(_98621_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1ac64ec12:;
									{
										_1a8e403e6_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1ac64a59d;
									}
								}
								_match_end_1ac64eae1:;
							};
						}
					}
					_match_end_1ac64db12:;
				};
			}
			_iter_next_1ac64a59d:;
			++it;
			goto _iter_begin_1ac64a59d;
		}
		_iter_end_1ac64a59d:;
	};
	jule::Ptr<_1a8e8301b_TypeKind> _99713_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_99713_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_97113_f))._field_Kind;
	jule::Ptr<_1a8e4bcb5_Data> _100113_d = _1a8e6bc4c_evalExpr((*(_self_))._field_e, (*((*(_96933_pair))))._field_Expr);;
	if ((_100113_d == nullptr)) {
		return;;
	};
	_1a8e40b77_pushMatch(_self_, &(_97113_f), &(_100113_d), &((*((*(_96933_pair))))._field_Field));
}



inline jule::Bool _1a8e4132b_readyExprs(_1a8e3ed96_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a8777899_Expr>>* _100834_exprs) {
	jule::Bool _100913_ok = true;;
	{
		auto expr = _100834_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6540ce:;
		if (it != expr_end) {
			jule::I32 _101014_i = it - expr->begin();
			jule::Ptr<_1a8777899_Expr> _101021_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101021_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1ac654cb1:;
						{
							jule::Ptr<_1a877d6c4_KeyValPair> _101321_pair = (*(_101021_expr))._field_Kind.unsafe_cast_ptr<_1a877d6c4_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_101321_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1ac655b19:;
									{
										goto _match_end_1ac6560d1;
									}
								}
								else {
									_case_begin_1ac656136:;
									{
										_1a8e403e6_pushErr(_self_, (*(_101321_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_100913_ok=false;
										goto _iter_next_1ac6540ce;
									}
								}
								_match_end_1ac6560d1:;
							};
							(*((*(_100834_exprs))[_101014_i]))._field_Kind=jule::Any(jule::new_ptr<_1a877c0b8_FieldExprPair>(_1a877c0b8_FieldExprPair{._field_Field=(*((*(_101321_pair))._field_Key))._field_Token, ._field_Expr=(*_101321_pair.alloc)._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1ac654c4a:;
				};
			}
			_iter_next_1ac6540ce:;
			++it;
			_101014_i++;
			goto _iter_begin_1ac6540ce;
		}
		_iter_end_1ac6540ce:;
	};
	return _100913_ok;;
}



inline void _1a8e415d4_check(_1a8e3ed96_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a8777899_Expr>>* _103229_exprs) {
	if (((*(_103229_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1a8e4132b_readyExprs(_self_, _103229_exprs)))) {
		return;;
	};
	jule::Bool _103913_paired = false;;
	{
		auto expr = _103229_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac658655:;
		if (it != expr_end) {
			jule::I32 _104014_i = it - expr->begin();
			jule::Ptr<_1a8777899_Expr> _104021_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104021_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1ac65ecee:;
						{
							jule::Ptr<_1a877c0b8_FieldExprPair> _104321_pair = (*(_104021_expr))._field_Kind.unsafe_cast_ptr<_1a877c0b8_FieldExprPair>();;
							if (((_104014_i > 0LL) && (!(_103913_paired)))) {
								_1a8e403e6_pushErr(_self_, (*(_104321_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103913_paired=true;
							_1a8e40eda_checkPair(_self_, &(_104321_pair), _103229_exprs);
						}
					}
					else {
						_case_begin_1ac659557:;
						{
							if (_103913_paired) {
								_1a8e403e6_pushErr(_self_, (*(_104021_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_104014_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1a8e403e6_pushErr(_self_, (*_104021_expr.alloc)._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1ac658655;
							};
							jule::Ptr<_1a8d29104_FieldIns> _105821_field = (*(*(_self_))._field_s.alloc)._field_Fields[_104014_i];;
							if ((!(_1a8dc46dd_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_105821_field))._field_Decl))._field_Public, (*(*_105821_field.alloc)._field_Decl.alloc)._field_Token)))) {
								_1a8e403e6_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1a8e40759_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a8e8301b_TypeKind> _106621_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_106621_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_105821_field.alloc)._field_Kind;
							jule::Ptr<_1a8e4bcb5_Data> _107021_d = _1a8e6bc4c_evalExpr((*(_self_))._field_e, _104021_expr);;
							if ((_107021_d == nullptr)) {
								goto _iter_next_1ac658655;
							};
							_1a8e40b77_pushMatch(_self_, &(_105821_field), &(_107021_d), &((*_104021_expr.alloc)._field_Token));
						}
					}
					_match_end_1ac659502:;
				};
			}
			_iter_next_1ac658655:;
			++it;
			_104014_i++;
			goto _iter_begin_1ac658655;
		}
		_iter_end_1ac658655:;
	};
	if ((!(_103913_paired))) {
		jule::I32 _108113_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I32 _108217_diff = (_108113_n - (*(_103229_exprs)).len());;
		{
			
			if ((_108217_diff <= 0LL)) {
				_case_begin_1ac662681:;
				{
					return;;
				}
			}
			_match_end_1ac662571:;
		};
		_2234c269a_StrBuilder _108817_idents = static__2234c2ac9_New(32LL);;
		for (; (_108217_diff > 0LL); (_108217_diff)--) {
			{
				_2234c313a_WriteStr(&_108817_idents, jule::Str::lit(", ", 2));
				_2234c313a_WriteStr(&_108817_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_108113_n - _108217_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1ac662ecd:;
		}
		_iter_end_1ac662ecd:;;
		_1a8e403e6_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_2234c43d3_Buf(&_108817_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e3ed96_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8de41ad_Var> _1a8e42162_buildVar(_1a8e41b78_rangeChecker* _self_, jule::Ptr<_1a87863d0_VarDecl>* _110828_decl) {
	jule::Ptr<_1a8de41ad_Var> _110913_v = _1a8d484b9_buildVar((*(_110828_decl)));;
	return _110913_v;;
}



inline void _1a8e42360_setSizeKey(_1a8e41b78_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a8760871_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1a8e42162_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1a9068b7e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
}



inline void _1a8e4277d_checkRangeExprValidity(_1a8e41b78_rangeChecker* _self_, jule::Ptr<_1a8e4bcb5_Data>* _112746_d, jule::Ptr<_1a8de41ad_Var>* _112757_key, jule::Ptr<_1a8e8301b_TypeKind>* _112773_k) {
	jule::Bool _112813__mut = (*((*(_112757_key))))._field_Mutable;;
	if ((_112813__mut && (!(_1a8e8489c_Mutable((*(_112773_k)).ptr()))))) {
		_112813__mut=false;
	};
	_1a8dd0d26_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _112813__mut, (*((*(_112757_key))))._field_Reference, &((*((*((*(_112757_key))))._field_Kind))._field_Kind), _112746_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1a8e4297b_checkSlice(_1a8e41b78_rangeChecker* _self_) {
	_1a8e42360_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a8760871_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a8e900e4_Slc> _114613_slc = _1a8e866c3_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a8e42162_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=(*(_114613_slc))._field_Elem});
	_1a8e4277d_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_114613_slc.alloc)._field_Elem));
}



inline void _1a8e42b79_checkArray(_1a8e41b78_rangeChecker* _self_) {
	_1a8e42360_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a8760871_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a8e92415_Arr> _115913_arr = _1a8e8643c_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a8e42162_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=(*(_115913_arr))._field_Elem});
	_1a8e4277d_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_115913_arr.alloc)._field_Elem));
}



inline void _1a8e42d77_checkMapKeyA(_1a8e41b78_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a8760871_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a8e91788_Map> _117113_m = _1a8e8720c_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1a8e42162_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=(*(_117113_m))._field_Key});
	jule::Ptr<_1a8e4bcb5_Data> _117513_d = jule::new_ptr<_1a8e4bcb5_Data>((*(*(_self_))._field_d.alloc));;
	(*_117513_d.alloc)._field_Kind=(*_117113_m.alloc)._field_Key;
	_1a8e4277d_checkRangeExprValidity(_self_, &(_117513_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_117113_m.alloc)._field_Key));
}



inline void _1a8e43075_checkMapKeyB(_1a8e41b78_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a8760871_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a8e91788_Map> _118613_m = _1a8e8720c_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a8e42162_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=(*(_118613_m))._field_Val});
	jule::Ptr<_1a8e4bcb5_Data> _119013_d = jule::new_ptr<_1a8e4bcb5_Data>((*(*(_self_))._field_d.alloc));;
	(*_119013_d.alloc)._field_Kind=(*_118613_m.alloc)._field_Val;
	_1a8e4277d_checkRangeExprValidity(_self_, &(_119013_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_118613_m.alloc)._field_Val));
}



inline void _1a8e43273_checkMap(_1a8e41b78_rangeChecker* _self_) {
	_1a8e42d77_checkMapKeyA(_self_);
	_1a8e43075_checkMapKeyB(_self_);
}



inline void _1a8e43471_checkStr(_1a8e41b78_rangeChecker* _self_) {
	_1a8e42360_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a8760871_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a8e42162_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1a9068b7e_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1a8e4366e_checkComptime(_1a8e41b78_rangeChecker* _self_) {
	_1a8e42360_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Mutable)) {
		_1a8dc3e7e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Mutable)) {
		_1a8dc3e7e_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1a8760871_IsIgnoreIdent((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a8e42162_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1a8e43905_checkComptimeRange(_1a8e41b78_rangeChecker* _self_) {
	jule::Ptr<_1a8d573b8_comptimeRange> _122513_range = _1a8e88a16_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_122513_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8d57198_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a8d57198_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a8d57198_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a8d57198_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a8d57198_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a8d57198_comptimeRangeKind_mptr_data5)) {
			_case_begin_1ac68542e:;
			{
				_1a8e4366e_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1ac684472:;
			{
				_1a8dc3e7e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ac68441c:;
	};
}



inline jule::Bool _1a8e43b8b_check(_1a8e41b78_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1ac687563:;
		}
		else if ((_1a8e866c3_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac685e57:;
			{
				_1a8e4297b_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1a8e8643c_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac685ebd:;
			{
				_1a8e42b79_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1a8e8720c_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac68652e:;
			{
				_1a8e43273_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1a8e88a16_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac686595:;
			{
				return _1a8e43905_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1ac685dbe:;
			{
				jule::Ptr<_1a8e8aae5_Prim> _125713_prim = _1a8e8566c_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_125713_prim != nullptr) && _1a8e8e07c_IsStr(_125713_prim))) {
					_1a8e43471_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1ac685cc0:;
	};
	_1a8dc3e7e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e41b78_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1a8e44818_prepareTypes(_1a8e443d9_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1a8d41171_Types((*(_self_))._field_f);
	};
}



inline void _1a8e44ac1_prepareExprs(_1a8e443d9_retTypeChecker* _self_, jule::Ptr<_1a8777899_Expr>* _128536_e) {
	if (((*(_128536_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128536_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ac68d0b3:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128536_e))))._field_Kind.unsafe_cast_ptr<_1a877848d_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1ac68d27d:;
			{
				{ jule::Slice<jule::Ptr<_1a8777899_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128536_e))); };
			}
		}
		_match_end_1ac68d228:;
	};
}



inline void _1a8e44cbe_checkExprs(_1a8e443d9_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> _130113_datas = jule::Slice<jule::Ptr<_1a8e4bcb5_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1a8e4d9dc_Eval> _130213_eval = _1a8dcb42b_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac68d3e3:;
		if (it != expr_end) {
			jule::I32 _130314_i = it - expr->begin();
			jule::Ptr<_1a8777899_Expr> _130321_expr = *it;
			{
				if ((_130314_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1ac68d3e3;
				};
				jule::Ptr<_1a8e8301b_TypeKind> _130817_t = (*(_self_))._field_types[_130314_i];;
				(*(_130213_eval))._field_prefix=_130817_t;
				jule::Ptr<_1a8e4bcb5_Data> _131117_d = _1a8e6bc4c_evalExpr(_130213_eval, _130321_expr);;
				if ((_131117_d == nullptr)) {
					goto _iter_next_1ac68d3e3;
				};
				{ jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> &__jule_push_dest = _130113_datas; __jule_push_dest.push(_131117_d); };
				if (((!((*(_131117_d))._field_Mutable)) && _1a8e8489c_Mutable((*(_131117_d))._field_Kind.ptr()))) {
					_1a8dc3e7e_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1a8e3572c_assignTypeChecker _132317_ac = _1a8e3572c_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_130817_t, ._field_d=_131117_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1a8e366ea_check(&_132317_ac);
			}
			_iter_next_1ac68d3e3:;
			++it;
			_130314_i++;
			goto _iter_begin_1ac68d3e3;
		}
		_iter_end_1ac68d3e3:;
	};
	if ((_130113_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1a8d34818_TupleExprModel>(_1a8d34818_TupleExprModel{._field_Datas=_130113_datas}), &__jule_any_type81);
	} else if ((_130113_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_130113_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1a8e45055_tryFuncMultiRetForward(_1a8e443d9_retTypeChecker* _self_) {
	jule::Ptr<_1a8e4d9dc_Eval> _134413_eval = _1a8dcb42b_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0));;
	jule::Ptr<_1a8e4bcb5_Data> _134513_d = _1a8e6bc4c_evalExpr(_134413_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_134513_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a8e90bd8_Tuple> _135113_tup = _1a8e87493_Tup((*(_134513_d))._field_Kind.ptr());;
	if ((_135113_tup == nullptr)) {
		return false;;
	};
	if (((*(_135113_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1ac69a961;
	};
	(*(_self_))._field_model=(*(_134513_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac697bd3:;
		if (it != expr_end) {
			jule::I32 _135913_i = it - expr->begin();
			{
				if ((!(_1a8dcbe43__checkTypeCompatibility((*(*(_self_))._field_sc.alloc)._field_s, &((*(_self_))._field_types[_135913_i]), &((*(_135113_tup))._field_Types[_135913_i]), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1ac69a961;
				};
			}
			_iter_next_1ac697bd3:;
			++it;
			_135913_i++;
			goto _iter_begin_1ac697bd3;
		}
		_iter_end_1ac697bd3:;
	};
	return true;;
	_julec_label_1ac69a961:;
	_2234c269a_StrBuilder _136613_wanted = static__2234c2ac9_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac69c006:;
		if (it != expr_end) {
			jule::I32 _136713_i = it - expr->begin();
			jule::Ptr<_1a8e8301b_TypeKind> _136716_t = *it;
			{
				_2234c313a_WriteStr(&_136613_wanted, _1a8e833d4_Str(_136716_t.ptr()));
				if ((((*(_self_))._field_types.len() - _136713_i) > 1LL)) {
					_2234c313a_WriteStr(&_136613_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ac69c006:;
			++it;
			_136713_i++;
			goto _iter_begin_1ac69c006;
		}
		_iter_end_1ac69c006:;
	};
	_2234c269a_StrBuilder _137313_given = static__2234c2ac9_New(32LL);;
	{
		auto expr = &((*(_135113_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac69dc1c:;
		if (it != expr_end) {
			jule::I32 _137413_i = it - expr->begin();
			jule::Ptr<_1a8e8301b_TypeKind> _137416_t = *it;
			{
				_2234c313a_WriteStr(&_137313_given, _1a8e833d4_Str(_137416_t.ptr()));
				if ((((*(_self_))._field_types.len() - _137413_i) > 1LL)) {
					_2234c313a_WriteStr(&_137313_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ac69dc1c:;
			++it;
			_137413_i++;
			goto _iter_begin_1ac69dc1c;
		}
		_iter_end_1ac69dc1c:;
	};
	_1a8dc3e7e_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66), jule::Slice<jule::Any>::make({jule::Any(_2234c3932_Str(&_136613_wanted), &__jule_any_type4),jule::Any(_2234c3932_Str(&_137313_given), &__jule_any_type4)}));
	return false;;
}



inline jule::Bool _1a8e45396_check(_1a8e443d9_retTypeChecker* _self_, jule::Ptr<_1a8777899_Expr>* _138429_e) {
	_1a8e44818_prepareTypes(_self_);
	_1a8e44ac1_prepareExprs(_self_, _138429_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1ac6a21e8:;
			{
				if ((!(_1a8d3d1d4_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1a8dc3e7e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1a8d3c414_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1ac6a225e:;
			{
				_1a8dc3e7e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1ac6a22c5:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1ac6a697d:;
						{
							if (_1a8e45055_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1ac6a68d4:;
				};
				_1a8dc3e7e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1ac6a233b:;
			{
				_1a8dc3e7e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1ac6a23a2:;
			{
				_1a8dc3e7e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac6a2094:;
	};
	_1a8e44cbe_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e443d9_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8e46e36_SelectPackage(_1a8e4694c_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6aa0d0:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1ac6aa0d0:;
			++it;
			goto _iter_begin_1ac6aa0d0;
		}
		_iter_end_1ac6aa0d0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8de41ad_Var> _1a8e47332_FindVar(_1a8e4694c_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1a8e49114_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1a8e82229_TypeAlias> _1a8e4772d_FindTypeAlias(_1a8e4694c_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1a8e495ba_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1a8d26e26_Struct> _1a8e47b29_FindStruct(_1a8e4694c_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6ac478:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*_5421_s.alloc)._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1ac6ac478:;
			++it;
			goto _iter_begin_1ac6ac478;
		}
		_iter_end_1ac6ac478:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d3be91_Fn> _1a8e48025_FindFn(_1a8e4694c_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6ad9b8:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*_6521_f.alloc)._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1ac6ad9b8:;
			++it;
			goto _iter_begin_1ac6ad9b8;
		}
		_iter_end_1ac6ad9b8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d5034a_Trait> _1a8e48366_FindTrait(_1a8e4694c_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6aecd8:;
		if (it != expr_end) {
			jule::Ptr<_1a8d5034a_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1ac6aecd8:;
			++it;
			goto _iter_begin_1ac6aecd8;
		}
		_iter_end_1ac6aecd8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d52a56_Enum> _1a8e486a7_FindEnum(_1a8e4694c_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6b0c84:;
		if (it != expr_end) {
			jule::Ptr<_1a8d52a56_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1ac6b0c84:;
			++it;
			goto _iter_begin_1ac6b0c84;
		}
		_iter_end_1ac6b0c84:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d54261_TypeEnum> _1a8e489e8_FindTypeEnum(_1a8e4694c_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6b1c52:;
		if (it != expr_end) {
			jule::Ptr<_1a8d54261_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1ac6b1c52:;
			++it;
			goto _iter_begin_1ac6b1c52;
		}
		_iter_end_1ac6b1c52:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8de41ad_Var> _1a8e49114_findVar(_1a8e4694c_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I32 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1a8de41ad_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*_11221_v.alloc)._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1ac6b3acd:;
		}
		_iter_end_1ac6b3acd:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac6b4a46:;
			if (it != expr_end) {
				jule::Ptr<_1a8de41ad_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*_11825_v.alloc)._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1ac6b4a46:;
				++it;
				goto _iter_begin_1ac6b4a46;
			}
			_iter_end_1ac6b4a46:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1a8e82229_TypeAlias> _1a8e495ba_findTypeAlias(_1a8e4694c_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I32 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1a8e82229_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*_13121_ta.alloc)._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1ac6b6e22:;
		}
		_iter_end_1ac6b6e22:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac6b7d8a:;
			if (it != expr_end) {
				jule::Ptr<_1a8e82229_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*_13725_ta.alloc)._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1ac6b7d8a:;
				++it;
				goto _iter_begin_1ac6b7d8a;
			}
			_iter_end_1ac6b7d8a:;
		};
	};
	return nullptr;;
}



inline jule::Any _1a8e499b6_defByIdent(_1a8e4694c_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6b95ea:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*_14921_v.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1ac6b95ea:;
			++it;
			goto _iter_begin_1ac6b95ea;
		}
		_iter_end_1ac6b95ea:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6b994c:;
		if (it != expr_end) {
			jule::Ptr<_1a8e82229_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*_15521_ta.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type65);;
				};
			}
			_iter_next_1ac6b994c:;
			++it;
			goto _iter_begin_1ac6b994c;
		}
		_iter_end_1ac6b994c:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6ba8b5:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*_16121_s.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type64);;
				};
			}
			_iter_next_1ac6ba8b5:;
			++it;
			goto _iter_begin_1ac6ba8b5;
		}
		_iter_end_1ac6ba8b5:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6bb883:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*_16721_f.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type63);;
				};
			}
			_iter_next_1ac6bb883:;
			++it;
			goto _iter_begin_1ac6bb883;
		}
		_iter_end_1ac6bb883:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6bc6ec:;
		if (it != expr_end) {
			jule::Ptr<_1a8d5034a_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1ac6bc6ec:;
			++it;
			goto _iter_begin_1ac6bc6ec;
		}
		_iter_end_1ac6bc6ec:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6bde3a:;
		if (it != expr_end) {
			jule::Ptr<_1a8d52a56_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type66);;
				};
			}
			_iter_next_1ac6bde3a:;
			++it;
			goto _iter_begin_1ac6bde3a;
		}
		_iter_end_1ac6bde3a:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6beab7:;
		if (it != expr_end) {
			jule::Ptr<_1a8d54261_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type67);;
				};
			}
			_iter_next_1ac6beab7:;
			++it;
			goto _iter_begin_1ac6beab7;
		}
		_iter_end_1ac6beab7:;
	};
	return nullptr;;
}



inline jule::Bool _1a8e49e6c_isDuplicatedIdent(_1a8e4694c_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6c10e6:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*(*(_20216_v)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1ac6c10e6:;
			++it;
			goto _iter_begin_1ac6c10e6;
		}
		_iter_end_1ac6c10e6:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6c1448:;
		if (it != expr_end) {
			jule::Ptr<_1a8e82229_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*(*(_20816_ta)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1ac6c1448:;
			++it;
			goto _iter_begin_1ac6c1448;
		}
		_iter_end_1ac6c1448:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6c2636:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*(*(_21416_s)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1ac6c2636:;
			++it;
			goto _iter_begin_1ac6c2636;
		}
		_iter_end_1ac6c2636:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6c3879:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*(*(_22016_f)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1ac6c3879:;
			++it;
			goto _iter_begin_1ac6c3879;
		}
		_iter_end_1ac6c3879:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6c4968:;
		if (it != expr_end) {
			jule::Ptr<_1a8d5034a_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1ac6c4968:;
			++it;
			goto _iter_begin_1ac6c4968;
		}
		_iter_end_1ac6c4968:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6c5dba:;
		if (it != expr_end) {
			jule::Ptr<_1a8d52a56_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1ac6c5dba:;
			++it;
			goto _iter_begin_1ac6c5dba;
		}
		_iter_end_1ac6c5dba:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6c6d11:;
		if (it != expr_end) {
			jule::Ptr<_1a8d54261_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1ac6c6d11:;
			++it;
			goto _iter_begin_1ac6c6d11;
		}
		_iter_end_1ac6c6d11:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e4694c_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8e4c1a0_IsNil(_1a8e4bcb5_Data* _self_) {
	return _1a8e840e9_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a8e4c436_IsVoid(_1a8e4bcb5_Data* _self_) {
	return _1a8e84380_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a8e4c6bc_IsConst(_1a8e4bcb5_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1a8e4ca0d_GoodOperand(_1a8e4bcb5_Data* _self_, jule::Ptr<_1a8e4bcb5_Data>* _10531_other) {
	if ((_1a8e861a6_TypeEnum((*((*(_10531_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1a8e8566c_Prim((*((*(_10531_other))))._field_Kind) == nullptr) || (!(_1a8e8e313_IsAny(_1a8e8566c_Prim((*((*(_10531_other))))._field_Kind).ptr())))) && (_1a8e86e76_Trait((*((*(_10531_other))))._field_Kind) == nullptr)) && (!(_1a8e840e9_IsNil((*(_self_))._field_Kind))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e4bcb5_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e4ce3c_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1a8e4e03c_pushErr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _13626_token, jule::Str _13641_fmt, jule::Slice<jule::Any> _13654_args) {
	_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), _13626_token, _13641_fmt, _13654_args);
}



inline void _1a8e4e3a0_pushSuggestion(_1a8e4d9dc_Eval* _self_, jule::Str _14133_fmt, jule::Slice<jule::Any> _14146_args) {
	_1a8dc42e2_pushSuggestion((*(_self_))._field_s.ptr(), _14133_fmt, _14146_args);
}



inline void _1a8e4e59d_allowBuiltin(_1a8e4d9dc_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a8e4e79b_disallowBuiltin(_1a8e4d9dc_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1a8e4ea32_isUnsafe(_1a8e4d9dc_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1a8e4ecb8_isGlobal(_1a8e4d9dc_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3)) {
			_case_begin_1ac86790d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac867d09:;
			{
				return false;;
			}
		}
		_match_end_1ac867ca4:;
	};
}



inline jule::Bool _1a8e500c6_applyNumericPrefix(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _16842_d) {
	if ((((((*(_16842_d)) == nullptr) || (!(_1a8e4c6bc_IsConst((*(_16842_d)).ptr())))) || (_1a8e8566c_Prim((*((*(_16842_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _1759_prim = _1a8e8566c_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1759_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_20a2b6c27_IsFloat(_1a8e8ae36_Str(_1759_prim.ptr()))) {
			_case_begin_1ac86a427:;
			{
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>((*((*(_self_))._field_prefix)));
				_20a2bb08e_SetF64((*((*(_16842_d))))._field_Constant.ptr(), _20a2ba214_AsF64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_20a2b630e_IsSigInt(_1a8e8ae36_Str(_1759_prim.ptr()))) {
			_case_begin_1ac86a4b0:;
			{
				if ((!(_1a8e32c57_sigAssignable(_1a8e8ae36_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>((*((*(_self_))._field_prefix)));
				_20a2ba4bc_SetI64((*((*(_16842_d))))._field_Constant.ptr(), _20a2b9be7_AsI64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_20a2b661c_IsUnsigInt(_1a8e8ae36_Str(_1759_prim.ptr()))) {
			_case_begin_1ac86a526:;
			{
				if ((!(_1a8e33120_unsigAssignable(_1a8e8ae36_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>((*((*(_self_))._field_prefix)));
				_20a2ba775_SetU64((*((*(_16842_d))))._field_Constant.ptr(), _20a2b9e7d_AsU64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		_match_end_1ac86a34a:;
	};
	return true;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e50417_litStr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8778834_LitExpr>* _20322_l) {
	jule::Str _20413_s = jule::Str();;
	if (_1a875e375_IsRawStr((*((*(_20322_l))))._field_Value)) {
		_20413_s=_1a8e30ea8_ToRawStr((*((*(_20322_l))))._field_Value);
	} else {
		_20413_s=_1a8e312e9_ToStr((*((*(_20322_l))))._field_Value);
	};
	jule::Ptr<_20a2b7552_Const> _21013_constant = static__20a2b82de_NewStr(_20413_s);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065b48_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21013_constant, &__jule_any_type19), ._field_Constant=_21013_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e50758_litRune(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8778834_LitExpr>* _22023_l) {
	jule::I32 _2219_r = _1a8e30c99_ToRune((*((*(_22023_l))))._field_Value);;
	jule::Ptr<_1a8e4bcb5_Data> _22213_data = jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Constant=static__20a2b7992_NewI64(static_cast<jule::I64>(_2219_r))});;
	if ((_2219_r <= 255LL)) {
		(*(_22213_data))._field_Kind=_1a906762d_primU8;
	} else {
		(*(_22213_data))._field_Kind=_1a90670bc_primI32;
	};
	(*(_22213_data))._field_Model=jule::Any(jule::new_ptr<_1a8d38564_RuneExprModel>(_1a8d38564_RuneExprModel{._field_Code=_2219_r}), &__jule_any_type83);
	(*_22213_data.alloc)._field_Mutable=true;
	(*_22213_data.alloc)._field_IsRune=true;
	(*_22213_data.alloc)._field_untyped=true;
	return _22213_data;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e50a99_litFloat(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8778834_LitExpr>* _23924_l) {
	jule::F64 _2409_f = ({
		auto except = _20a29e43a_ParseFloat((*((*(_23924_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_20a2b7552_Const> _24113_constant = static__20a2b85a8_NewF64(_2409_f);;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a90685c9_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24113_constant, &__jule_any_type19), ._field_Constant=_24113_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e50dda_litInt(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8778834_LitExpr>* _25126_l) {
	;
	jule::Str _25413_lit = (*((*(_25126_l))))._field_Value;;
	jule::I32 _25513_base = 0LL;;
	{
		
		if (_224695680_HasPrefix(_25413_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1ac879e92:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=16LLU;
			}
		}
		else if (_224695680_HasPrefix(_25413_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1ac87a080:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=2LLU;
			}
		}
		else if (_224695680_HasPrefix(_25413_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1ac879b62:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=8LLU;
			}
		}
		else if (((_25413_lit[0LL] == '0') && (_25413_lit.len() > 1LL))) {
			_case_begin_1ac879bc8:;
			{
				(_25413_lit).mut_slice(1LL);;
				_25513_base=8LLU;
			}
		}
		else {
			_case_begin_1ac879aeb:;
			{
				_25513_base=10LLU;
			}
		}
		_match_end_1ac879a63:;
	};
	jule::Ptr<_1a8e4bcb5_Data> _27513_d = jule::new_ptr<_1a8e4bcb5_Data>();;
	jule::Bool _27713_ok = true;;
	jule::I64 _2789_sig = ({
		auto except = _20a297b1a_ParseInt(_25413_lit, _25513_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27713_ok=false;

			0LL;
		});
	});;
	if (_27713_ok) {
		(*_27513_d.alloc)._field_Constant=static__20a2b7992_NewI64(_2789_sig);
		(*_27513_d.alloc)._field_Kind=_1a906682a_primInt;
	} else {
		jule::U64 _28613_unsig = ({
			auto except = _20a297664_ParseUint(_25413_lit, _25513_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1a8e4e03c_pushErr(_self_, (*((*(_25126_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_27513_d.alloc)._field_Constant=static__20a2b7c5b_NewU64(_28613_unsig);
		(*_27513_d.alloc)._field_Kind=_1a9066462_primUint;
	};
	(*_27513_d.alloc)._field_Model=jule::Any((*_27513_d.alloc)._field_Constant, &__jule_any_type19);
	(*_27513_d.alloc)._field_untyped=true;
	if ((!(_1a8e500c6_applyNumericPrefix(_self_, &(_27513_d))))) {
		_1a8e7aab3_fitBitsize(&(_27513_d));
	};
	return _27513_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e5122b_litNum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8778834_LitExpr>* _30626_l) {
	{
		
		if (_1a8760024_IsFloat((*((*(_30626_l))))._field_Value)) {
			_case_begin_1ac881e22:;
			{
				return _1a8e50a99_litFloat(_self_, _30626_l);;
			}
		}
		else {
			_case_begin_1ac881dab:;
			{
				return _1a8e50dda_litInt(_self_, _30626_l);;
			}
		}
		_match_end_1ac881cac:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e5156c_evalLit(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8778834_LitExpr> _31526_lit) {
	{
		
		if (_1a875e0de_IsStr((*(_31526_lit))._field_Value)) {
			_case_begin_1ac883088:;
			{
				return _1a8e50417_litStr(_self_, &(_31526_lit));;
			}
		}
		else if (_1a875e63e_IsRune((*(_31526_lit))._field_Value)) {
			_case_begin_1ac883132:;
			{
				return _1a8e50758_litRune(_self_, &(_31526_lit));;
			}
		}
		else if (_1a87602dd_IsNum((*(_31526_lit))._field_Value)) {
			_case_begin_1ac8831a9:;
			{
				return _1a8e5122b_litNum(_self_, &(_31526_lit));;
			}
		}
		else {
			_case_begin_1ac882a49:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac88295b:;
	};
}



inline jule::Any _1a8e518ad_findBuiltins(_1a8e4d9dc_Eval* _self_, jule::Str* _32832_ident) {
	if (_1a8dbd40c_IsPub((*(_32832_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data1)) {
				_case_begin_1ac8853cb:;
				{
					jule::Any _33221_def = _1a8e7a882_findBuiltinsImport(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1a8da0ea0_ImportInfo>((jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data1));;
					if ((_33221_def != nullptr)) {
						return _33221_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3)) {
				_case_begin_1ac885156:;
				{
					jule::Any _33721_def = _1a8e7b5db_findBuiltinsSema(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1a8dc1344_Sema>((jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3));;
					if ((_33721_def != nullptr)) {
						return _33721_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)) {
				_case_begin_1ac885442:;
				{
					jule::Any _34221_def = _1a8e7b5db_findBuiltinsSema(_32832_ident, (*((*(_self_))._field_lookup.cast_ptr<_1a8d863c5_scopeChecker>((jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)))._field_s);;
					if ((_34221_def != nullptr)) {
						return _34221_def;;
					};
				}
			}
			_match_end_1ac885332:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1a9068e15_findBuiltinDef(_32832_ident);;
}



inline jule::Any _1a8e51ca9_getDef(_1a8e4d9dc_Eval* _self_, jule::Str* _35526_ident, jule::Bool _35538_binded) {
	jule::Ptr<_1a8de41ad_Var> _36013_v = ((_1a8ea2b0c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8ea12e2_FindVar((*(_self_))._field_lookup.data, (*(_35526_ident)), _35538_binded);;
	if ((_36013_v != nullptr)) {
		return jule::Any(_36013_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a8e82229_TypeAlias> _36513_ta = ((_1a8ea2b0c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8ea16dd_FindTypeAlias((*(_self_))._field_lookup.data, (*(_35526_ident)), _35538_binded);;
	if ((_36513_ta != nullptr)) {
		return jule::Any(_36513_ta, &__jule_any_type65);;
	};
	if ((!(_35538_binded))) {
		jule::Ptr<_1a8d52a56_Enum> _37117_enm = ((_1a8ea2b0c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8ea2667_FindEnum((*(_self_))._field_lookup.data, (*(_35526_ident)));;
		if ((_37117_enm != nullptr)) {
			return jule::Any(_37117_enm, &__jule_any_type66);;
		};
		jule::Ptr<_1a8d54261_TypeEnum> _37617_tenm = ((_1a8ea2b0c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8ea29a8_FindTypeEnum((*(_self_))._field_lookup.data, (*(_35526_ident)));;
		if ((_37617_tenm != nullptr)) {
			return jule::Any(_37617_tenm, &__jule_any_type67);;
		};
	};
	jule::Ptr<_1a8d3be91_Fn> _38213_f = ((_1a8ea2b0c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8ea1ed5_FindFn((*(_self_))._field_lookup.data, (*(_35526_ident)), _35538_binded);;
	if ((_38213_f != nullptr)) {
		return jule::Any(_38213_f, &__jule_any_type63);;
	};
	jule::Ptr<_1a8d26e26_Struct> _38713_s = ((_1a8ea2b0c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8ea1ad9_FindStruct((*(_self_))._field_lookup.data, (*(_35526_ident)), _35538_binded);;
	if ((_38713_s != nullptr)) {
		return jule::Any(_38713_s, &__jule_any_type64);;
	};
	return _1a8e518ad_findBuiltins(_self_, _35526_ident);;
}



inline jule::Ptr<_1a8d43151_ReferenceStack> _1a8e52040_getOwnerRefers(_1a8e4d9dc_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)) {
			_case_begin_1ac88db54:;
			{
				jule::Ptr<_1a8d863c5_scopeChecker> _39817_sc = _1a8d89a05_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a8d863c5_scopeChecker>((jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0));;
				return (*((*(_39817_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1ac88d192:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
			}
		}
		_match_end_1ac88d13c:;
	};
	return nullptr;;
}



inline void _1ac8a1282_pushReference(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _41040_ref) {
	jule::Ptr<_1a8d43151_ReferenceStack> _41113_refers = _1a8e52040_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1ac8a35c5_Exist(_41113_refers, (*(_41040_ref))))))) {
		_1a8d43e32_Push(_41113_refers, jule::Any((*(_41040_ref)), &__jule_any_type7));
	};
}

inline void _1ac8b71dd_pushReference(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8de41ad_Var>* _41040_ref) {
	jule::Ptr<_1a8d43151_ReferenceStack> _41113_refers = _1a8e52040_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1ac8b94cb_Exist(_41113_refers, (*(_41040_ref))))))) {
		_1a8d43e32_Push(_41113_refers, jule::Any((*(_41040_ref)), &__jule_any_type8));
	};
}

inline void _1ac771bbe_pushReference(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d29ba4_StructIns>* _41040_ref) {
	jule::Ptr<_1a8d43151_ReferenceStack> _41113_refers = _1a8e52040_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1ac774067_Exist(_41113_refers, (*(_41040_ref))))))) {
		_1a8d43e32_Push(_41113_refers, jule::Any((*(_41040_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e52639__evalEnum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d52a56_Enum> _41728_enm) {
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_41728_enm, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e52a35_evalEnum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d52a56_Enum> _42631_enm, jule::Ptr<_1a875ce89_Token> _42643_errorToken) {
	if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42631_enm))._field_Public, (*_42631_enm.alloc)._field_Token)))) {
		_1a8e4e03c_pushErr(_self_, _42643_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_42631_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a8e52639__evalEnum(_self_, _42631_enm);;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e52d76__evalTypeEnum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d54261_TypeEnum> _43532_enm) {
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_43532_enm, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e53272_evalTypeEnum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d54261_TypeEnum> _44435_enm, jule::Ptr<_1a875ce89_Token> _44451_errorToken) {
	if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44435_enm))._field_Public, (*_44435_enm.alloc)._field_Token)))) {
		_1a8e4e03c_pushErr(_self_, _44451_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_44435_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a8e52d76__evalTypeEnum(_self_, _44435_enm);;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e535b3__evalStruct(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d29ba4_StructIns> _45330_s) {
	jule::Ptr<_1a8e4bcb5_Data> _45413_d = jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_45330_s, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0)}), ._field_Model=jule::Any(_45330_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45330_s))._field_Decl != nullptr) && (*(*_45330_s.alloc)._field_Decl.alloc)._field_Binded)) {
		(*((*(_45413_d))._field_Kind))._field_BindIdent=(*(*_45330_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _45413_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e539ae_evalStruct(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d29ba4_StructIns> _46733_s, jule::Ptr<_1a875ce89_Token> _46748_errorToken) {
	if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46733_s))._field_Decl))._field_Public, (*(*_46733_s.alloc)._field_Decl.alloc)._field_Token)))) {
		_1a8e4e03c_pushErr(_self_, _46748_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_46733_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
		_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a8e54163_checkDeprecated(_self_, &((*(*_46733_s.alloc)._field_Decl.alloc)._field_Directives), _46748_errorToken);
	return _1a8e535b3__evalStruct(_self_, _46733_s);;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e53d00_evalFnIns(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d3ee72_FnIns> _47728_f) {
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_47728_f, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data1)}), ._field_Model=jule::Any(_47728_f, &__jule_any_type7), });;
}



inline void _1a8e54163_checkDeprecated(_1a8e4d9dc_Eval* _self_, jule::Slice<jule::Ptr<_1a8772982_Directive>>* _48639_directives, jule::Ptr<_1a875ce89_Token> _48670_tok) {
	if (_1a8e4ea32_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1a8772982_Directive> _4919_d = _1a8e7a4b9_findDirective(_48639_directives, jule::Str::lit("deprecated", 10));;
	if ((_4919_d != nullptr)) {
		if (((*_4919_d.alloc)._field_Args.len() == 0LL)) {
			_1a8e4e03c_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1a8e4e03c_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*_4919_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e5455e_evalFn(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d3be91_Fn> _50229_f, jule::Ptr<_1a875ce89_Token> _50237_errorToken) {
	if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50229_f))._field_Public, (*_50229_f.alloc)._field_Token)))) {
		_1a8e4e03c_pushErr(_self_, _50237_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_50229_f.alloc)._field_Ident, &__jule_any_type4)}));
		_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a8e54163_checkDeprecated(_self_, &((*_50229_f.alloc)._field_Directives), _50237_errorToken);
	jule::Ptr<_1a8d3ee72_FnIns> _51113_ins = _1a8d3d701_instance(_50229_f);;
	_1ac8a1282_pushReference(_self_, &(_51113_ins));
	return _1a8e53d00_evalFnIns(_self_, _51113_ins);;
}



inline void _1a8e5497c_pushIllegalCycleError(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8de41ad_Var>* _51641_v1, jule::Ptr<_1a8de41ad_Var>* _51652_v2, _2234c269a_StrBuilder* _51667_message) {
	;
	jule::Str _5189_refers_to = _224744377_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51641_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51652_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5199_buf = _2234c43d3_Buf(_51667_message);;
	_2234c313a_WriteStr(_51667_message, _2246952b7_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2234c313a_WriteStr(_51667_message, _5189_refers_to);
	_2234c33e3_WriteByte(_51667_message, '\n');
	_2234c2d82_Write(_51667_message, _5199_buf);
}



inline jule::Bool _1a8e54d78_checkCrossCycle(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8de41ad_Var>* _52635_v, _2234c269a_StrBuilder* _52649_message) {
	{
		auto expr = &((*((*(_52635_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8a7a3b:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> *_52716_d = it;
			{
				if (((*(_52716_d)) == (*(_self_))._field_owner)) {
					_1a8e5497c_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
				if ((!(_1a8e54d78_checkCrossCycle(_self_, _52716_d, _52649_message)))) {
					_1a8e5497c_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
			}
			_iter_next_1ac8a7a3b:;
			++it;
			goto _iter_begin_1ac8a7a3b;
		}
		_iter_end_1ac8a7a3b:;
	};
	return true;;
}



inline jule::Bool _1a8e55274_checkIllegalCycles(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8de41ad_Var>* _54342_v, jule::Ptr<_1a875ce89_Token> _54351_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54342_v)))) {
		_1a8e4e03c_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_2234c269a_StrBuilder _55613_message = static__2234c2ac9_New(32LL);;
	if ((!(_1a8e54d78_checkCrossCycle(_self_, _54342_v, &(_55613_message))))) {
		jule::Str _55917_errMsg = _2234c3932_Str(&_55613_message);;
		_2234c3b30_Clear(&_55613_message);
		_1a8e5497c_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54342_v, &(_55613_message));
		_55917_errMsg+=_2234c3932_Str(&_55613_message);
		_1a8e4e03c_pushErr(_self_, _54351_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55917_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1a8de41ad_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54342_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e55670_evalVar(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8de41ad_Var> _57130_v, jule::Ptr<_1a875ce89_Token> _57139_errorToken) {
	if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57130_v))._field_Public, (*_57130_v.alloc)._field_Token)))) {
		_1a8e4e03c_pushErr(_self_, _57139_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_57130_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a8e54163_checkDeprecated(_self_, &((*_57130_v.alloc)._field_Directives), _57139_errorToken);
	if (((*_57130_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1ac8be49d;
	};
	(*_57130_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3)) {
			_case_begin_1ac8b155b:;
			{
				jule::Bool _59013_ok = _1a8e55274_checkIllegalCycles(_self_, &(_57130_v), _57139_errorToken);;
				if ((!(_59013_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)) {
			_case_begin_1ac8b0b76:;
			{
				jule::Ptr<_1a8d863c5_scopeChecker> _59517_s = (*(_self_))._field_lookup.cast_ptr<_1a8d863c5_scopeChecker>((jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0);;
				jule::Ptr<_1a8d863c5_scopeChecker> _59617_root = _1a8d8976e_getRoot(_59517_s);;
				if ((((*(_59617_root))._field_captured != nullptr) && _1a8e805bd_isVarCaptured(_59617_root, _59517_s, _57130_v))) {
					_1a8d894d8_pushCaptured(_59617_root, &(_57130_v));
				};
				if (((!((*_57130_v.alloc)._field_Reference)) || _1a8e4ea32_isUnsafe(_self_))) {
					goto _match_end_1ac8b14d4;
				};
				while ((((*_59517_s.alloc)._field_owner == nullptr) && ((*_59517_s.alloc)._field_parent != nullptr))) {
					{
						_59517_s=(*_59517_s.alloc)._field_parent;
					}
				_iter_next_1ac8b4916:;
				}
				_iter_end_1ac8b4916:;;
				if (((((*_59517_s.alloc)._field_owner != nullptr) && (*((*_59517_s.alloc)._field_owner))._field_Anon) && ((*_57130_v.alloc)._field_Scope != (*((*_59517_s.alloc)._field_owner))._field_Scope))) {
					_1a8e4e03c_pushErr(_self_, _57139_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*_57130_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1ac8b14d4:;
	};
	if (((*_57130_v.alloc)._field_Scope == nullptr)) {
		_1ac8b71dd_pushReference(_self_, &(_57130_v));
	};
	if (((!((*_57130_v.alloc)._field_Binded)) && (((*_57130_v.alloc)._field_Value == nullptr) || ((*((*_57130_v.alloc)._field_Value))._field_Data == nullptr)))) {
		if ((*_57130_v.alloc)._field_Constant) {
			_1a8ddb10b_checkVar((*(_self_))._field_s, &(_57130_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3));
			if ((((*_57130_v.alloc)._field_Value == nullptr) || ((*((*_57130_v.alloc)._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*_57130_v.alloc)._field_Kind == nullptr) || ((*((*_57130_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_57130_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1a8ddb10b_checkVar((*(_self_))._field_s, &(_57130_v), (*(_self_))._field_lookup);
		if ((((*_57130_v.alloc)._field_Kind == nullptr) || ((*((*_57130_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1ac8be49d:;
	jule::Ptr<_1a8e4bcb5_Data> _64613_d = jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=(*((*_57130_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_57130_v.alloc)._field_Mutable, ._field_Reference=(*_57130_v.alloc)._field_Reference, ._field_Lvalue=(!((*_57130_v.alloc)._field_Constant)), ._field_Model=jule::Any(_57130_v, &__jule_any_type8), });;
	if ((((!((*_57130_v.alloc)._field_Binded)) && _1a8de4587_IsInitialized(_57130_v)) && ((*((*_57130_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_64613_d))._field_IsRune=(*((*((*_57130_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_57130_v.alloc)._field_Constant && ((*((*((*_57130_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_64613_d.alloc)._field_Constant=jule::new_ptr<_20a2b7552_Const>((*(*((*((*_57130_v.alloc)._field_Value))._field_Data))._field_Constant.alloc));
		(*_64613_d.alloc)._field_Model=jule::Any((*_64613_d.alloc)._field_Constant, &__jule_any_type19);
		if (_1a8de4aa4_untypedConstant(_57130_v)) {
			_1a8e500c6_applyNumericPrefix(_self_, &(_64613_d));
			(*_64613_d.alloc)._field_untyped=true;
		};
	};
	return _64613_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e55a6b_evalTypeAlias(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e82229_TypeAlias> _67036_ta, jule::Ptr<_1a875ce89_Token> _67052_errorToken) {
	if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_67036_ta))._field_Public, (*_67036_ta.alloc)._field_Token)))) {
		_1a8e4e03c_pushErr(_self_, _67052_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_67036_ta.alloc)._field_Ident, &__jule_any_type4)}));
		_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_67036_ta.alloc)._field_Used=true;
	jule::Trait _67913_kind = (*((*((*_67036_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1a8e4bcb5_Data> _68017_d = nullptr;;
	{
		auto &_match_expr{ _67913_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0)) {
			_case_begin_1ac8c9b6d:;
			{
				_68017_d=_1a8e535b3__evalStruct(_self_, _67913_kind.cast_ptr<_1a8d29ba4_StructIns>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data3)) {
			_case_begin_1ac8c8661:;
			{
				_68017_d=_1a8e52639__evalEnum(_self_, _67913_kind.cast_ptr<_1a8d52a56_Enum>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data4)) {
			_case_begin_1ac8c86c7:;
			{
				_68017_d=_1a8e52d76__evalTypeEnum(_self_, _67913_kind.cast_ptr<_1a8d54261_TypeEnum>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1ac8c85ea:;
			{
				_68017_d=jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=(*(*(*_67036_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind}), ._field_Decl=true, });
				if ((*_67036_ta.alloc)._field_Binded) {
					(*((*(_68017_d))._field_Kind))._field_BindIdent=(*_67036_ta.alloc)._field_Ident;
				} else {
					(*((*(_68017_d))._field_Kind))._field_BindIdent=(*(*(*_67036_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
				};
				(*(_68017_d))._field_Model=jule::Any((*_68017_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		_match_end_1ac8c84c9:;
	};
	(*((*(_68017_d))._field_Kind))._field_Generic=(*_67036_ta.alloc)._field_Generic;
	return _68017_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e55e67_evalDef(_1a8e4d9dc_Eval* _self_, jule::Any* _70631_def, jule::Ptr<_1a875ce89_Token> _70641_ident) {
	{
		auto &_match_expr{ (*(_70631_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac8cdca4:;
			{
				return _1a8e55670_evalVar(_self_, (*(_70631_def)).cast_ptr<_1a8de41ad_Var>(&__jule_any_type8), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ac8cda84:;
			{
				return _1a8e52a35_evalEnum(_self_, (*(_70631_def)).cast_ptr<_1a8d52a56_Enum>(&__jule_any_type66), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ac8cdd1a:;
			{
				return _1a8e53272_evalTypeEnum(_self_, (*(_70631_def)).cast_ptr<_1a8d54261_TypeEnum>(&__jule_any_type67), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac8cdd81:;
			{
				return _1a8e539ae_evalStruct(_self_, _1a8d27388_instance((*(_70631_def)).cast_ptr<_1a8d26e26_Struct>(&__jule_any_type64)), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ac8cdde7:;
			{
				jule::Ptr<_1a8d3be91_Fn> _71717_f = (*(_70631_def)).cast_ptr<_1a8d3be91_Fn>(&__jule_any_type63);;
				if ((!(*(_71717_f))._field_Ident.equal("init", 4))) {
					return _1a8e5455e_evalFn(_self_, _71717_f, _70641_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac8cde6e:;
			{
				return _1a8e53d00_evalFnIns(_self_, (*(_70631_def)).cast_ptr<_1a8d3ee72_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac8cdee6:;
			{
				return _1a8e55a6b_evalTypeAlias(_self_, (*(_70631_def)).cast_ptr<_1a8e82229_TypeAlias>(&__jule_any_type65), _70641_ident);;
			}
		}
		_match_end_1ac8cdbb6:;
	};
	_1a8e4e03c_pushErr(_self_, _70641_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70641_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e562a8_evalIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a87791b4_IdentExpr> _73028_ident) {
	jule::Any _73113_def = _1a8e51ca9_getDef(_self_, &((*(_73028_ident))._field_Ident), (*_73028_ident.alloc)._field_Binded);;
	return _1a8e55e67_evalDef(_self_, &(_73113_def), (*_73028_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e565e9_evalUnary(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8779956_UnaryExpr> _73533_u) {
	_1a8e6c214_unaryEval _73613_unary = static__1a8e6c654_new(_self_);;
	return _1a8e6da84_eval(&_73613_unary, _73533_u);;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e5693a_evalVariadic(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8779d30_VariadicExpr> _74036_v) {
	if (((*(_74036_v))._field_Expr == nullptr)) {
		_1a8e4e03c_pushErr(_self_.ptr(), (*_74036_v.alloc)._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8e8301b_TypeKind> _74613_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_74613_prefix;
	});;
	jule::Ptr<_1a8e4bcb5_Data> _75013_d = _1a8e6bc4c_evalExpr(_self_, (*_74036_v.alloc)._field_Expr);;
	if ((_75013_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a8e853d6_Variadicable((*(_75013_d))._field_Kind.ptr())))) {
		_1a8e4e03c_pushErr(_self_, (*_74036_v.alloc)._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_75013_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	_1a8e8018e_makeVariadic(&(_75013_d), (*(_1a8e866c3_Slc((*(_75013_d))._field_Kind)))._field_Elem);
	return _75013_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e56c7b_evalUnsafe(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8778c0d_UnsafeExpr> _76234_u) {
	jule::Bool _7639_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1a8e4bcb5_Data> _76513_d = _1a8e6bc4c_evalExpr(_self_, (*(_76234_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7639_unsafety;
	return _76513_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e570bc_evalArr(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877de00_SliceExpr> _77031_s) {
	jule::Ptr<_1a8e92415_Arr> _77213_pt = _1a8e8643c_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1a8e92415_Arr> _77413_arr = jule::new_ptr<_1a8e92415_Arr>(_1a8e92415_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77213_pt))._field_Elem});;
	jule::Bool _78013_filled = false;;
	if (((*(_77031_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77031_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1ac8de336:;
				{
					if (((*((*((*(_77031_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1a8779d30_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1ac8de28c;
					};
					if ((*_77213_pt.alloc)._field_Auto) {
						_1a8e4e03c_pushErr(_self_, (*_77031_s.alloc)._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78013_filled=true;
					((*(_77031_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1ac8de28c:;
		};
	};
	(*(_77413_arr))._field_N=(*_77031_s.alloc)._field_Exprs.len();
	if ((!((*_77213_pt.alloc)._field_Auto))) {
		if (((*_77413_arr.alloc)._field_N > (*_77213_pt.alloc)._field_N)) {
			_1a8e4e03c_pushErr(_self_, (*_77031_s.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*_77413_arr.alloc)._field_N < (*_77213_pt.alloc)._field_N)) {
			(*_77413_arr.alloc)._field_N=(*_77213_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1a8d3451b_ArrayExprModel> _80913_model = jule::new_ptr<_1a8d3451b_ArrayExprModel>(_1a8d3451b_ArrayExprModel{._field_Kind=_77413_arr, });;
	if (_78013_filled) {
		(*(_80913_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_80913_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*_77031_s.alloc)._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1a8e8301b_TypeKind> _81813_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_77413_arr.alloc)._field_Elem;
	{
		auto expr = &((*_77031_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8e60a7:;
		if (it != expr_end) {
			jule::Ptr<_1a8777899_Expr> _82021_elem = *it;
			{
				jule::Ptr<_1a8e4bcb5_Data> _82117_d = _1a8e6bc4c_evalExpr(_self_, _82021_elem);;
				if ((_82117_d == nullptr)) {
					goto _iter_next_1ac8e60a7;
				};
				;
				if (_1a8dd0d26_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_77413_arr.alloc)._field_Elem), &(_82117_d), &((*(_82021_elem))._field_Token))) {
					_1a8dcb98c_checkAssignType((*_self_.alloc)._field_s, false, &((*_77413_arr.alloc)._field_Elem), &(_82117_d), (*_82021_elem.alloc)._field_Token);
				};
				(*(_80913_model))._field_Elems=jule::append((*_80913_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_82117_d))._field_Model}));
			}
			_iter_next_1ac8e60a7:;
			++it;
			goto _iter_begin_1ac8e60a7;
		}
		_iter_end_1ac8e60a7:;
	};
	(*_self_.alloc)._field_prefix=_81813_prefix;
	if (_78013_filled) {
		(*_80913_model.alloc)._field_Elems=jule::append((*_80913_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({nullptr}));
	};
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_77413_arr, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data25)}), ._field_Mutable=true, ._field_Model=jule::Any(_80913_model, &__jule_any_type85), });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e57573_evalExpSlc(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877de00_SliceExpr> _84734_s, jule::Ptr<_1a8e8301b_TypeKind> _84753_t, jule::Any _84771_first) {
	jule::Ptr<_1a8e900e4_Slc> _84813_slc = jule::new_ptr<_1a8e900e4_Slc>(_1a8e900e4_Slc{._field_Elem=_84753_t});;
	jule::I32 _85213_i = 0LL;;
	jule::Ptr<_1a8d31507_SliceExprModel> _85313_model = jule::new_ptr<_1a8d31507_SliceExprModel>(_1a8d31507_SliceExprModel{._field_ElemKind=_84753_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84734_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84771_first != nullptr)) {
		(*(_85313_model))._field_Elems=jule::append((*_85313_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({_84771_first}));
		_85213_i=1LL;
	};
	jule::Ptr<_1a8e8301b_TypeKind> _86213_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_84813_slc))._field_Elem;
	{
		auto expr = (*_84734_s.alloc)._field_Exprs.slice(_85213_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac8ee214:;
		if (it != expr_end) {
			jule::Ptr<_1a8777899_Expr> _86421_elem = *it;
			{
				jule::Ptr<_1a8e4bcb5_Data> _86517_d = _1a8e6bc4c_evalExpr(_self_, _86421_elem);;
				if ((_86517_d != nullptr)) {
					;
					if (_1a8dd0d26_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_84813_slc.alloc)._field_Elem), &(_86517_d), &((*(_86421_elem))._field_Token))) {
						_1a8dcb98c_checkAssignType((*_self_.alloc)._field_s, false, &((*_84813_slc.alloc)._field_Elem), &(_86517_d), (*_86421_elem.alloc)._field_Token);
					};
					(*_85313_model.alloc)._field_Elems=jule::append((*_85313_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*_86517_d.alloc)._field_Model}));
				};
			}
			_iter_next_1ac8ee214:;
			++it;
			goto _iter_begin_1ac8ee214;
		}
		_iter_end_1ac8ee214:;
	};
	(*_self_.alloc)._field_prefix=_86213_prefix;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_84813_slc, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85313_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e578b4_evalSliceExpr(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877de00_SliceExpr> _88537_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1a8e8643c_Arr((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1ac903b31:;
				{
					return _1a8e570bc_evalArr(_self_, _88537_s);;
				}
			}
			else if ((_1a8e866c3_Slc((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1ac903bca:;
				{
					jule::Ptr<_1a8e900e4_Slc> _89121_pt = _1a8e866c3_Slc((*_self_.alloc)._field_prefix);;
					return _1a8e57573_evalExpSlc(_self_, _88537_s, (*(_89121_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1ac903a54:;
		};
	};
	jule::Ptr<_1a8e8301b_TypeKind> _89613_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88537_s))._field_Exprs.len() == 0LL)) {
		_1a8e4e03c_pushErr(_self_, (*_88537_s.alloc)._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8e4bcb5_Data> _90413_firstElem = _1a8e6bc4c_evalExpr(_self_, (*_88537_s.alloc)._field_Exprs[0LL]);;
	if ((_90413_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1a8dd0d26_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_90413_firstElem))._field_Kind), &(_90413_firstElem), &((*((*_88537_s.alloc)._field_Exprs[0LL]))._field_Token));
	jule::Ptr<_1a8e4bcb5_Data> _91413_d = _1a8e57573_evalExpSlc(_self_, _88537_s, (*(_90413_firstElem))._field_Kind, (*(_90413_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_89613_prefix;
	return _91413_d;;
}



inline void _1a8e57c27_checkIntegerIndexingByData(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _92050_d, jule::Ptr<_1a875ce89_Token> _92064_token) {
	jule::Str _9219_errKey = _1a8e7cd4b_checkDataForIntegerIndexing(_92050_d, &(_92064_token));;
	{
		auto &_match_expr{ _9219_errKey };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ac90b870:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1ac90b540:;
			{
				_1a8e4e03c_pushErr(_self_, _92064_token, _9219_errKey, jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_92050_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1ac90b1aa:;
			{
				_1a8e4e03c_pushErr(_self_, _92064_token, _9219_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac90b452:;
	};
}



inline void _1a8e58145_indexingPtr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _93235_d, jule::Ptr<_1a8e4bcb5_Data>* _93250_index, jule::Ptr<_1a877e85c_IndexingExpr>* _93269_i) {
	_1a8e57c27_checkIntegerIndexingByData(_self_, _93250_index, (*((*(_93269_i))))._field_Token);
	(*((*(_93235_d))))._field_Lvalue=true;
	jule::Ptr<_1a8e92dd8_Ptr> _93613_ptr = _1a8e85b89_Ptr((*((*(_93235_d))))._field_Kind.ptr());;
	{
		
		if (_1a8e93922_IsUnsafe(_93613_ptr.ptr())) {
			_case_begin_1ac90e433:;
			{
				_1a8e4e03c_pushErr(_self_, (*((*(_93269_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a8e4ea32_isUnsafe(_self_)))) {
			_case_begin_1ac90e4bb:;
			{
				_1a8e4e03c_pushErr(_self_, (*((*(_93269_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac90e39a:;
	};
	(*((*(_93235_d))))._field_Kind=(*(_93613_ptr))._field_Elem;
}



inline void _1a8e58563_indexingArr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _94835_d, jule::Ptr<_1a8e4bcb5_Data>* _94850_index, jule::Ptr<_1a877e85c_IndexingExpr>* _94869_i) {
	jule::Ptr<_1a8e92415_Arr> _94913_arr = _1a8e8643c_Arr((*((*(_94835_d))))._field_Kind.ptr());;
	(*((*(_94835_d))))._field_Kind=(*(_94913_arr))._field_Elem;
	_1a8e57c27_checkIntegerIndexingByData(_self_, _94850_index, (*((*(_94869_i))))._field_Token);
	(*((*(_94835_d))))._field_Lvalue=true;
	if ((_1a8e4c6bc_IsConst((*(_94850_index)).ptr()) && (_20a2ba214_AsF64((*((*(_94850_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_94913_arr.alloc)._field_N)))) {
		_1a8e4e03c_pushErr(_self_, (*((*(_94869_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1a8e58981_indexingSlc(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _95835_d, jule::Ptr<_1a8e4bcb5_Data>* _95850_index, jule::Ptr<_1a877e85c_IndexingExpr>* _95869_i) {
	jule::Ptr<_1a8e900e4_Slc> _95913_slc = _1a8e866c3_Slc((*((*(_95835_d))))._field_Kind.ptr());;
	(*((*(_95835_d))))._field_Kind=(*(_95913_slc))._field_Elem;
	_1a8e57c27_checkIntegerIndexingByData(_self_, _95850_index, (*((*(_95869_i))))._field_Token);
	(*((*(_95835_d))))._field_Lvalue=true;
	if ((!(_1a8e4c6bc_IsConst((*(_95850_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95835_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ac70b7e6:;
			{
				jule::Ptr<_1a8d31507_SliceExprModel> _97017_m = (*((*(_95835_d))))._field_Model.unsafe_cast_ptr<_1a8d31507_SliceExprModel>();;
				jule::F64 _97113_indx = _20a2ba214_AsF64((*((*(_95850_index))))._field_Constant.ptr());;
				if ((_97113_indx >= static_cast<jule::F64>((*(_97017_m))._field_Elems.len()))) {
					_1a8e4e03c_pushErr(_self_, (*((*(_95869_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95835_d))))._field_Model=(*(_97017_m))._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_97113_indx))];
					(*((*(_95835_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1ac70b780:;
	};
}



inline void _1a8e58d9e_indexingMap(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _98135_d, jule::Ptr<_1a8e4bcb5_Data>* _98150_index, jule::Ptr<_1a877e85c_IndexingExpr>* _98169_i) {
	(*((*(_98135_d))))._field_Lvalue=true;
	if (((*(_98150_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1a8e91788_Map> _98613_m = _1a8e8720c_Map((*((*(_98135_d))))._field_Kind.ptr());;
	_1a8e3572c_assignTypeChecker _98713_atc = _1a8e3572c_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_98613_m))._field_Key, ._field_d=(*(_98150_index)), ._field_errorToken=(*((*(_98169_i))))._field_Token};;
	_1a8e366ea_check(&_98713_atc);
	(*((*(_98135_d))))._field_Kind=(*_98613_m.alloc)._field_Val;
}



inline void _1a8e592bc_indexingStr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _99735_d, jule::Ptr<_1a8e4bcb5_Data>* _99750_index, jule::Ptr<_1a877e85c_IndexingExpr>* _99769_i) {
	(*((*(_99735_d))))._field_Kind=_1a906762d_primU8;
	(*((*(_99735_d))))._field_Mutable=false;
	(*((*(_99735_d))))._field_Lvalue=true;
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	_1a8e57c27_checkIntegerIndexingByData(_self_, _99750_index, (*((*(_99769_i))))._field_Token);
	if ((!(_1a8e4c6bc_IsConst((*(_99750_index)).ptr())))) {
		(*((*(_99735_d))))._field_Constant=nullptr;
		(*((*(_99735_d))))._field_untyped=false;
		return;;
	};
	if (_1a8e4c6bc_IsConst((*(_99735_d)).ptr())) {
		jule::Ptr<_1a875ce89_Token> _101513_errorToken = (*((*(_99769_i))))._field_Token;;
		jule::I64 _101613_j = _20a2b9be7_AsI64((*((*(_99750_index))))._field_Constant.ptr());;
		jule::Str _101713_s = _20a2b96ca_ReadStr((*((*(_99735_d))))._field_Constant);;
		if ((static_cast<jule::I32>(_101613_j) >= _101713_s.len())) {
			_1a8e4e03c_pushErr(_self_, _101513_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_20a2ba775_SetU64((*((*(_99735_d))))._field_Constant, static_cast<jule::U64>(_101713_s[static_cast<jule::I32>(_101613_j)]));
		};
	};
}



inline void _1a8e596da_toIndexing(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _102634_d, jule::Ptr<_1a8e4bcb5_Data>* _102649_index, jule::Ptr<_1a877e85c_IndexingExpr>* _102668_i) {
	{
		
		if ((_1a8e85b89_Ptr((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac718072:;
			{
				_1a8e58145_indexingPtr(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1a8e8643c_Arr((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac71811b:;
			{
				_1a8e58563_indexingArr(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1a8e866c3_Slc((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac718182:;
			{
				_1a8e58981_indexingSlc(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1a8e8720c_Map((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac7181e8:;
			{
				_1a8e58d9e_indexingMap(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1a8e8566c_Prim((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac71825e:;
			{
				jule::Ptr<_1a8e8aae5_Prim> _104113_prim = _1a8e8566c_Prim((*((*(_102634_d))))._field_Kind);;
				{
					
					if (_1a8e8e07c_IsStr(_104113_prim.ptr())) {
						_case_begin_1ac71c483:;
						{
							_1a8e592bc_indexingStr(_self_, _102634_d, _102649_index, _102668_i);
							return;;
						}
					}
					_match_end_1ac71c3d9:;
				};
			}
		}
		_match_end_1ac717e2e:;
	};
	_1a8e4e03c_pushErr(_self_, (*((*(_102668_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_102634_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1a8e59b91_pushGenericsFromExprSubIdent(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877a9ac_SubIdentExpr>* _105153_sexpr, jule::Slice<jule::Ptr<_1a8773565_TypeDecl>>* _105214_generics, jule::Ptr<_1a8777899_Expr>* _105242_expr) {
	jule::Ptr<_1a8773e39_SubIdentTypeDecl> _105313_t = jule::new_ptr<_1a8773e39_SubIdentTypeDecl>();;
	if ((!(_1a8e7dc5e_pushSubIdentFromExpr(jule::Any((*(_105153_sexpr)), &__jule_any_type86), &(_105313_t))))) {
		_1a8e4e03c_pushErr(_self_.ptr(), (*((*(_105242_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> &__jule_push_dest = (*(_105214_generics)); __jule_push_dest.push(jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Kind=jule::Any(_105313_t, &__jule_any_type87)})); };
	return true;;
}



inline jule::Bool _1a8e5a08c_pushGenericsFromData(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Slice<jule::Ptr<_1a8773565_TypeDecl>>* _106245_generics, jule::Ptr<_1a8777899_Expr>* _106273_expr) {
	{
		auto &_match_expr{ (*((*(_106273_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ac721ab4:;
			{
				jule::Ptr<_1a8779956_UnaryExpr> _106517_u = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1a8779956_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_106517_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(62LLU)) {
						_case_begin_1ac723a0b:;
						{
							jule::Ptr<_1a877508e_PtrTypeDecl> _106821_kind = jule::new_ptr<_1a877508e_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> _106921__generics = jule::Slice<jule::Ptr<_1a8773565_TypeDecl>>::alloc(0LL, 1LL);;
							_1a8e5a08c_pushGenericsFromData(_self_, &(_106921__generics), &((*(_106517_u))._field_Expr));
							(*_106821_kind.alloc)._field_Elem=_106921__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=(*((*(_106273_expr))))._field_Token, ._field_Kind=jule::Any(_106821_kind, &__jule_any_type70)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(65LLU)) {
						_case_begin_1ac723a72:;
						{
							jule::Ptr<_1a8774610_SptrTypeDecl> _107721_kind = jule::new_ptr<_1a8774610_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> _107821__generics = jule::Slice<jule::Ptr<_1a8773565_TypeDecl>>::alloc(0LL, 1LL);;
							_1a8e5a08c_pushGenericsFromData(_self_, &(_107821__generics), &((*(_106517_u))._field_Expr));
							(*_107721_kind.alloc)._field_Elem=_107821__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=(*((*(_106273_expr))))._field_Token, ._field_Kind=jule::Any(_107721_kind, &__jule_any_type71)})); };
						}
					}
					else {
						_case_begin_1ac7228b7:;
						{
							_1a8e4e03c_pushErr(_self_.ptr(), (*(_106517_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1ac722d5c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ac721b2a:;
			{
				{ jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push((*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1a8773565_TypeDecl>()); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ac720e59:;
			{
				jule::Ptr<_1a877a9ac_SubIdentExpr> _109217_sexpr = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1a877a9ac_SubIdentExpr>();;
				return _1a8e59b91_pushGenericsFromExprSubIdent(_self_, &(_109217_sexpr), _106245_generics, _106273_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ac720ec0:;
			{
				jule::Ptr<_1a87791b4_IdentExpr> _109517_ident = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1a87791b4_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a8773b70_IdentTypeDecl>(_1a8773b70_IdentTypeDecl{._field_Token=(*_109517_ident.alloc)._field_Token, ._field_Ident=(*_109517_ident.alloc)._field_Ident, ._field_Binded=(*(_109517_ident))._field_Binded, }), &__jule_any_type74)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ac721036:;
			{
				{
					auto expr = &((*((*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1a877848d_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac72a0c8:;
					if (it != expr_end) {
						jule::Ptr<_1a8777899_Expr> _110425_texpr = *it;
						{
							if ((!(_1a8e5a08c_pushGenericsFromData(_self_, _106245_generics, &(_110425_texpr))))) {
								return false;;
							};
						}
						_iter_next_1ac72a0c8:;
						++it;
						goto _iter_begin_1ac72a0c8;
					}
					_iter_end_1ac72a0c8:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ac72109c:;
			{
				jule::Ptr<_1a877a5d3_NsSelectionExpr> _111017_ns = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1a877a5d3_NsSelectionExpr>();;
				jule::Ptr<_1a8773b70_IdentTypeDecl> _111117_decl = jule::new_ptr<_1a8773b70_IdentTypeDecl>(_1a8773b70_IdentTypeDecl{._field_Token=(*(_111017_ns))._field_Ident, ._field_Ident=(*((*_111017_ns.alloc)._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=(*(_111117_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a8774313_NamespaceTypeDecl>(_1a8774313_NamespaceTypeDecl{._field_Idents=(*_111017_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=(*_111117_decl.alloc)._field_Token, ._field_Kind=jule::Any(_111117_decl, &__jule_any_type74)})}), &__jule_any_type91)})); };
			}
		}
		else {
			_case_begin_1ac720de3:;
			{
				_1a8e4e03c_pushErr(_self_.ptr(), (*((*(_106273_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ac720d8d:;
	};
	return true;;
}



inline void _1a8e5a400_evalIdentDeclFromIndexing(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8e4bcb5_Data>* _113250_d, jule::Ptr<_1a877e85c_IndexingExpr>* _113265_i) {
	jule::Ptr<_1a8d29ba4_StructIns> _113313_s = _1a8e86be0_Struct((*((*(_113250_d))))._field_Kind.ptr());;
	if ((_113313_s == nullptr)) {
		_1a8e4e03c_pushErr(_self_.ptr(), (*((*((*(_113265_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_113250_d))))._field_Kind), &__jule_any_type4)}));
		(*(_113250_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a8773b70_IdentTypeDecl> _114017_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_113265_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ac731d6b:;
			{
				jule::Ptr<_1a87791b4_IdentExpr> _114317_expr = (*((*((*(_113265_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a87791b4_IdentExpr>();;
				_114017_decl=jule::new_ptr<_1a8773b70_IdentTypeDecl>(_1a8773b70_IdentTypeDecl{._field_Token=(*_114317_expr.alloc)._field_Token, ._field_Ident=(*_114317_expr.alloc)._field_Ident, ._field_Binded=(*(_114317_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ac733257:;
			{
				jule::Ptr<_1a877a5d3_NsSelectionExpr> _115017_expr = (*((*((*(_113265_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a877a5d3_NsSelectionExpr>();;
				_114017_decl=jule::new_ptr<_1a8773b70_IdentTypeDecl>(_1a8773b70_IdentTypeDecl{._field_Token=(*(_115017_expr))._field_Ident, ._field_Ident=(*((*_115017_expr.alloc)._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1ac7323dd:;
			{
				_1a8e4e03c_pushErr(_self_, (*((*(_113265_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_113250_d))=nullptr;
				return;;
			}
		}
		_match_end_1ac732388:;
	};
	if ((!(_1a8e5a08c_pushGenericsFromData(_self_, &((*(_114017_decl))._field_Generics), &((*((*(_113265_i))))._field_Index))))) {
		(*(_113250_d))=nullptr;
		return;;
	};
	_113313_s=({ auto _wrap_copy = _1a8e61deb_typeChecker(_self_); _1a8e98d23_fromStruct(&_wrap_copy, &(_114017_decl), &((*(_113313_s))._field_Decl)); });
	if ((_113313_s == nullptr)) {
		(*(_113250_d))=nullptr;
		return;;
	};
	(*(*((*(_113250_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_113313_s, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0);
}



inline jule::Bool _1a8e5a8a6_checkGenericFn(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _117539_f, jule::Ptr<_1a875ce89_Token>* _117555_et, jule::Any* _117572_model) {
	jule::Bool _11769_ok = _1a8dcee13_reloadFnInsTypes((*(_self_))._field_s, (*(_117539_f)));;
	(*((*(_117539_f))))._field_reloaded=true;
	if ((!(_11769_ok))) {
		return false;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _118113_existInstance = _1a8d3da0e_appendInstance((*((*(_117539_f))))._field_Decl.ptr(), _117539_f);;
	if ((!(_1a8dcde67_checkConstraintsFn((*_self_.alloc)._field_s, _117539_f, _117555_et, _118113_existInstance)))) {
		return false;;
	};
	if ((_118113_existInstance != nullptr)) {
		_1a8e7d9ea_updateModelToGenericIns(_117572_model, &(_118113_existInstance));
		_1ac73aeda_updateRefer(_1a8e52040_getOwnerRefers(_self_), _117539_f, &(_118113_existInstance));
		(*(_117539_f))=_118113_existInstance;
	} else {
		_1a8dde263_checkFnInsCaller((*_self_.alloc)._field_s, _117539_f, (*(_117555_et)));
	};
	return true;;
}



inline void _1a8e5ac19_evalFnGenericFromIndexing(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8e4bcb5_Data>* _120450_d, jule::Ptr<_1a877e85c_IndexingExpr>* _120465_i) {
	jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> _120513_generics = jule::Slice<jule::Ptr<_1a8773565_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1a8e5a08c_pushGenericsFromData(_self_, &(_120513_generics), &((*((*(_120465_i))))._field_Index))))) {
		(*(_120450_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _121113_f = _1a8e86959_Fn((*((*(_120450_d))))._field_Kind.ptr());;
	jule::I32 _121213_genericsLen = 0LL;;
	if (((*(_121113_f))._field_Decl != nullptr)) {
		_121213_genericsLen=(*(*_121113_f.alloc)._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1a8dc54ad_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _121213_genericsLen, _120513_generics.len(), (*((*((*(_120465_i))))._field_Expr))._field_Token)))) {
		(*(_120450_d))=nullptr;
		return;;
	};
	(*_121113_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1a8e81635_InsGeneric>>::alloc(0LL, (*(*_121113_f.alloc)._field_Decl.alloc)._field_Generics.len());
	{
		auto expr = &(_120513_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac742ab3:;
		if (it != expr_end) {
			jule::Ptr<_1a8773565_TypeDecl> _122321_g = *it;
			{
				jule::Ptr<_1a8e4bcb5_Data> _122417_k = _1a8e6223c_evalType(_self_, _122321_g);;
				if ((_122417_k == nullptr)) {
					(*(_120450_d))=nullptr;
					return;;
				};
				(*_121113_f.alloc)._field_Generics=jule::append((*_121113_f.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a8e81635_InsGeneric>>::make({jule::new_ptr<_1a8e81635_InsGeneric>(_1a8e81635_InsGeneric{._field_Kind=(*(_122417_k))._field_Kind, })}));
			}
			_iter_next_1ac742ab3:;
			++it;
			goto _iter_begin_1ac742ab3;
		}
		_iter_end_1ac742ab3:;
	};
	if (_1a8d41407_IsBuiltin(_121113_f)) {
		return;;
	};
	if (_1a8e5a8a6_checkGenericFn(_self_, &(_121113_f), &((*(*((*(_120465_i))))._field_Expr.alloc)._field_Token), &((*((*(_120450_d))))._field_Model))) {
		(*(*((*(_120450_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_121113_f, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data1);
	} else {
		(*(_120450_d))=nullptr;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e5b05a_evalIndexing(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877e85c_IndexingExpr> _124336_i) {
	jule::Ptr<_1a8e8301b_TypeKind> _124413_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_124413_prefix;
	});;
	jule::Ptr<_1a8e4bcb5_Data> _124813_d = _1a8e6ae38_evalExprKind(_self_, (*((*(_124336_i))._field_Expr))._field_Kind);;
	if ((_124813_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_124813_d))._field_Decl) {
		_1a8e5a400_evalIdentDeclFromIndexing(_self_, &(_124813_d), &(_124336_i));
		return _124813_d;;
	};
	if ((_1a8e86959_Fn((*(_124813_d))._field_Kind.ptr()) != nullptr)) {
		_1a8e5ac19_evalFnGenericFromIndexing(_self_, &(_124813_d), &(_124336_i));
		return _124813_d;;
	};
	_1a8e4bcb5_Data _126413_oldData = (*(_124813_d));;
	jule::Ptr<_1a8e4bcb5_Data> _126613_index = _1a8e6bc4c_evalExpr(_self_, (*_124336_i.alloc)._field_Index);;
	if ((_126613_index == nullptr)) {
		return nullptr;;
	};
	(*(_124813_d))._field_Decl=false;
	_1a8e596da_toIndexing(_self_, &(_124813_d), &(_126613_index), &(_124336_i));
	if (_1a8e4c6bc_IsConst(_124813_d.ptr())) {
		(*(_124813_d))._field_Decl=false;
		(*(_124813_d))._field_Model=jule::Any((*(_124813_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_124813_d))._field_Decl) {
		(*(_124813_d))._field_Decl=false;
	} else {
		(*(_124813_d))._field_Model=jule::Any(jule::new_ptr<_1a8d319ad_IndexingExprModel>(_1a8d319ad_IndexingExprModel{._field_Token=(*_124336_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1a8e4bcb5_Data>(_126413_oldData), ._field_Index=_126613_index}), &__jule_any_type44);
	};
	return _124813_d;;
}



inline __jule_tuple_x_1a8e4bcb5_Data__jule_tuple_x_1a8e4bcb5_Data _1a8e5b39b_evalSlicingExprs(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877eebc_SlicingExpr>* _129741_s) {
	__jule_tuple_x_1a8e4bcb5_Data__jule_tuple_x_1a8e4bcb5_Data __jule_func_result;
	jule::Ptr<_1a8e8301b_TypeKind> _129813_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_129813_prefix;
	});;
	jule::Ptr<_1a8e4bcb5_Data> _130217_l = nullptr;;
	jule::Ptr<_1a8e4bcb5_Data> _130317_r = nullptr;;
	if (((*((*(_129741_s))))._field_Start != nullptr)) {
		_130217_l=_1a8e6bc4c_evalExpr(_self_, (*((*(_129741_s))))._field_Start);
		if ((_130217_l != nullptr)) {
			_1a8e57c27_checkIntegerIndexingByData(_self_, &(_130217_l), (*((*(_129741_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_130217_l=jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a906682a_primInt, ._field_Constant=static__20a2b7992_NewI64(0LL)});
		(*((*(_130217_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*_130217_l.alloc)._field_Model=jule::Any((*_130217_l.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129741_s))))._field_To != nullptr)) {
		_130317_r=_1a8e6bc4c_evalExpr(_self_, (*((*(_129741_s))))._field_To);
		if ((_130317_r != nullptr)) {
			_1a8e57c27_checkIntegerIndexingByData(_self_, &(_130317_r), (*((*(_129741_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _130217_l;
	__jule_func_result.__jule_result_arg1 = _130317_r;
	return __jule_func_result;;
}



inline void _1a8e5b654_slicingArr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _133330_d) {
	jule::Ptr<_1a8e8301b_TypeKind> _133413_elemType = (*(_1a8e8643c_Arr((*((*(_133330_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_133330_d))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8e900e4_Slc>(_1a8e900e4_Slc{._field_Elem=_133413_elemType}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data22)});
	(*((*(_133330_d))))._field_Lvalue=false;
	(*((*(_133330_d))))._field_Mutable=((*((*(_133330_d))))._field_Mutable || (!(_1a8e8489c_Mutable(_133413_elemType.ptr()))));
}



inline void _1a8e5ba72_slicingStr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _134830_d, jule::Ptr<_1a8e4bcb5_Data>* _134841_l, jule::Ptr<_1a8e4bcb5_Data>* _134852_r) {
	(*((*(_134830_d))))._field_Lvalue=false;
	(*((*(_134830_d))))._field_Mutable=true;
	if ((!(_1a8e4c6bc_IsConst((*(_134830_d)).ptr())))) {
		return;;
	};
	if ((((*(_134841_l)) == nullptr) || ((*(_134852_r)) == nullptr))) {
		(*((*(_134830_d))))._field_Constant=nullptr;
		(*((*(_134830_d))))._field_untyped=false;
		return;;
	};
	if ((_1a8e4c6bc_IsConst((*(_134841_l)).ptr()) && _1a8e4c6bc_IsConst((*(_134852_r)).ptr()))) {
		jule::I64 _136213_left = _20a2b9be7_AsI64((*((*(_134841_l))))._field_Constant.ptr());;
		if ((_136213_left < 0LL)) {
			return;;
		};
		jule::Str _136713_s = _20a2b96ca_ReadStr((*((*(_134830_d))))._field_Constant);;
		jule::I64 _136817_right = static_cast<jule::I64>(0LL);;
		if (((*(_134852_r)) == nullptr)) {
			_136817_right=static_cast<jule::I64>(_136713_s.len());
		} else {
			_136817_right=_20a2b9be7_AsI64((*((*(_134852_r))))._field_Constant);
		};
		if ((_136213_left > _136817_right)) {
			return;;
		};
		_20a2bacd6_SetStr((*((*(_134830_d))))._field_Constant, _136713_s.slice(static_cast<jule::I32>(_136213_left), static_cast<jule::I32>(_136817_right)));
		(*((*(_134830_d))))._field_Decl=true;
	} else {
		(*((*(_134830_d))))._field_Constant=nullptr;
		(*((*(_134830_d))))._field_untyped=false;
	};
}



inline void _1a8e5c04a_checkSlicing(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _138636_d, jule::Ptr<_1a8e4bcb5_Data>* _138647_l, jule::Ptr<_1a8e4bcb5_Data>* _138658_r, jule::Ptr<_1a877eebc_SlicingExpr>* _138669_s) {
	{
		
		if ((_1a8e8643c_Arr((*((*(_138636_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac75d53a:;
			{
				_1a8e5b654_slicingArr(_self_, _138636_d);
				return;;
			}
		}
		else if ((_1a8e866c3_Slc((*((*(_138636_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac75d5d4:;
			{
				return;;
			}
		}
		else if ((_1a8e8566c_Prim((*((*(_138636_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac75d64a:;
			{
				jule::Ptr<_1a8e8aae5_Prim> _139413_prim = _1a8e8566c_Prim((*((*(_138636_d))))._field_Kind);;
				{
					
					if (_1a8e8e07c_IsStr(_139413_prim.ptr())) {
						_case_begin_1ac760dcd:;
						{
							_1a8e5ba72_slicingStr(_self_, _138636_d, _138647_l, _138658_r);
							return;;
						}
					}
					_match_end_1ac760d34:;
				};
			}
		}
		_match_end_1ac75d419:;
	};
	_1a8e4e03c_pushErr(_self_, (*((*(_138669_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_138636_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e5c38b_evalSlicing(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877eebc_SlicingExpr> _140535_s) {
	jule::Ptr<_1a8e4bcb5_Data> _140613_d = _1a8e6bc4c_evalExpr(_self_, (*(_140535_s))._field_Expr);;
	if ((_140613_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8e4bcb5_Data> _141113_l;
	jule::Ptr<_1a8e4bcb5_Data> _141120_r;
	({
		__jule_tuple_x_1a8e4bcb5_Data__jule_tuple_x_1a8e4bcb5_Data __jule_assign_result = _1a8e5b39b_evalSlicingExprs(_self_, &(_140535_s));
		_141113_l = __jule_assign_result.__jule_result_arg0;
		_141120_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_141113_l == nullptr)) {
		return _140613_d;;
	};
	(*(_140613_d))._field_Decl=false;
	_1a8e5c04a_checkSlicing(_self_, &(_140613_d), &(_141113_l), &(_141120_r), &(_140535_s));
	if (_1a8e4c6bc_IsConst(_140613_d.ptr())) {
		(*(_140613_d))._field_Decl=false;
		(*(_140613_d))._field_Model=jule::Any((*(_140613_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_140613_d))._field_Decl) {
		(*(_140613_d))._field_Decl=false;
	} else {
		jule::Ptr<_1a8d32d77_SlicingExprModel> _142917_model = jule::new_ptr<_1a8d32d77_SlicingExprModel>(_1a8d32d77_SlicingExprModel{._field_Token=(*_140535_s.alloc)._field_Token, ._field_Expr=(*(_140613_d))._field_Model, ._field_Left=(*(_141113_l))._field_Model, });;
		if ((_141120_r != nullptr)) {
			(*(_142917_model))._field_Right=(*_141120_r.alloc)._field_Model;
		};
		(*(_140613_d))._field_Model=jule::Any(_142917_model, &__jule_any_type92);
	};
	return _140613_d;;
}



inline void _1a8e5c7a9_castPtr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _144230_t, jule::Ptr<_1a8e4bcb5_Data> _144248_d, jule::Ptr<_1a875ce89_Token> _144258_errorToken) {
	(*(_144248_d))._field_Constant=nullptr;
	(*_144248_d.alloc)._field_untyped=false;
	jule::Ptr<_1a8e8e621_Sptr> _14459_sptr = _1a8e85903_Sptr((*_144248_d.alloc)._field_Kind.ptr());;
	if ((_14459_sptr != nullptr)) {
		if ((!(_1a8e83725_Equal((*(_1a8e85b89_Ptr(_144230_t.ptr())))._field_Elem, (*_14459_sptr.alloc)._field_Elem)))) {
			_1a8e4e03c_pushErr(_self_, _144258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_144248_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a8e833d4_Str(_144230_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1a8e4ea32_isUnsafe(_self_)))) {
		_1a8e4e03c_pushErr(_self_, _144258_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _14589_prim = _1a8e8566c_Prim((*_144248_d.alloc)._field_Kind);;
	if (((_1a8e85b89_Ptr((*_144248_d.alloc)._field_Kind) == nullptr) && ((_14589_prim == nullptr) || (!(_20a2b68d6_IsInt(_1a8e8ae36_Str(_14589_prim.ptr()))))))) {
		_1a8e4e03c_pushErr(_self_, _144258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_144248_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a8e833d4_Str(_144230_t), &__jule_any_type4)}));
	};
}



inline void _1a8e5cbc7_castStruct(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _146433_t, jule::Ptr<_1a8e4bcb5_Data> _146451_d, jule::Ptr<_1a875ce89_Token> _146461_errorToken) {
	(*(_146451_d))._field_Constant=nullptr;
	(*_146451_d.alloc)._field_untyped=false;
	jule::Ptr<_1a8d5034a_Trait> _146713_tr = _1a8e86e76_Trait((*_146451_d.alloc)._field_Kind.ptr());;
	if ((_146713_tr == nullptr)) {
		_1a8e4e03c_pushErr(_self_, _146461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_146451_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a8e833d4_Str(_146433_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _147313_s = _1a8e86be0_Struct(_146433_t);;
	_1ac771bbe_pushReference(_self_, &(_147313_s));
	if ((!(_1a8d28565_IsImplements((*(_147313_s))._field_Decl.ptr(), _146713_tr)))) {
		_1a8e4e03c_pushErr(_self_, _146461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_146451_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a8e833d4_Str(_146433_t), &__jule_any_type4)}));
	};
}



inline void _1a8e5d0e5_castRef(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _148130_t, jule::Ptr<_1a8e4bcb5_Data> _148148_d, jule::Ptr<_1a875ce89_Token> _148158_errorToken) {
	(*(_148148_d))._field_Constant=nullptr;
	(*_148148_d.alloc)._field_untyped=false;
	jule::Ptr<_1a8e8e621_Sptr> _148413_sptr = _1a8e85903_Sptr(_148130_t.ptr());;
	jule::Ptr<_1a8e92dd8_Ptr> _148613_ptr = _1a8e85b89_Ptr((*_148148_d.alloc)._field_Kind.ptr());;
	if (((_148613_ptr != nullptr) && _1a8e83725_Equal((*(_148413_sptr))._field_Elem, (*_148613_ptr.alloc)._field_Elem))) {
		if ((!(_1a8e4ea32_isUnsafe(_self_)))) {
			_1a8e4e03c_pushErr(_self_, _148158_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a8e86be0_Struct((*_148413_sptr.alloc)._field_Elem) != nullptr)) {
		_1a8e5cbc7_castStruct(_self_, (*_148413_sptr.alloc)._field_Elem, _148148_d, _148158_errorToken);
		return;;
	};
	_1a8e4e03c_pushErr(_self_, _148158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_148148_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a8e833d4_Str(_148130_t), &__jule_any_type4)}));
}



inline void _1a8e5d513_castSlc(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _150430_t, jule::Ptr<_1a8e4bcb5_Data> _150448_d, jule::Ptr<_1a875ce89_Token> _150458_errorToken) {
	jule::Ptr<_20a2b7552_Const> _15059_c = (*(_150448_d))._field_Constant;;
	(*_150448_d.alloc)._field_Constant=nullptr;
	(*_150448_d.alloc)._field_untyped=false;
	if ((_1a8e85e20_Enum((*_150448_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1a8e8566c_Prim((*((*(_1a8e85e20_Enum((*_150448_d.alloc)._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1a8e8e07c_IsStr(_1a8e8566c_Prim((*(*(_1a8e85e20_Enum((*_150448_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind).ptr()))))) {
			_1a8e4e03c_pushErr(_self_, _150458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_150448_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a8e833d4_Str(_150430_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1a8e8566c_Prim((*_150448_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1a8e8e07c_IsStr(_1a8e8566c_Prim((*_150448_d.alloc)._field_Kind).ptr()))))) {
		_1a8e4e03c_pushErr(_self_, _150458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_150448_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a8e833d4_Str(_150430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_150430_t=(*(_1a8e866c3_Slc(_150430_t.ptr())))._field_Elem;
	jule::Ptr<_1a8e8aae5_Prim> _15209_prim = _1a8e8566c_Prim(_150430_t);;
	if (((_15209_prim == nullptr) || ((!(_1a8e8c4dc_IsU8(_15209_prim.ptr()))) && (!(_1a8e8bec0_IsI32(_15209_prim.ptr())))))) {
		_1a8e4e03c_pushErr(_self_, _150458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_150448_d.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a8e833d4_Str(_150430_t), &__jule_any_type4)}));
		return;;
	};
	if ((_15059_c != nullptr)) {
		{
			
			if (_1a8e8c4dc_IsU8(_15209_prim.ptr())) {
				_case_begin_1ac7857c6:;
				{
					jule::Str _153017_s = _20a2b96ca_ReadStr(_15059_c);;
					jule::Ptr<_1a8d31507_SliceExprModel> _153121_model = jule::new_ptr<_1a8d31507_SliceExprModel>(_1a8d31507_SliceExprModel{._field_ElemKind=_150430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153017_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153017_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac7872ab:;
						if (it != expr_end) {
							jule::U8 *_153524_b = it;
							{
								jule::Ptr<_20a2b7552_Const> _153625_bc = static__20a2b7c5b_NewU64(static_cast<jule::U64>((*(_153524_b))));;
								(*(_153625_bc))._field_Kind=(*(_15209_prim))._field_Kind;
								(*(_153121_model))._field_Elems=jule::append((*_153121_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_153625_bc, &__jule_any_type19)}));
							}
							_iter_next_1ac7872ab:;
							++it;
							goto _iter_begin_1ac7872ab;
						}
						_iter_end_1ac7872ab:;
					};
					(*_150448_d.alloc)._field_Model=jule::Any(_153121_model, &__jule_any_type76);
					(*_150448_d.alloc)._field_Decl=true;
				}
			}
			else if (_1a8e8bec0_IsI32(_15209_prim.ptr())) {
				_case_begin_1ac785870:;
				{
					jule::Slice<jule::I32> _154317_runes = static_cast<jule::Slice<jule::I32>>(_20a2b96ca_ReadStr(_15059_c));;
					jule::Ptr<_1a8d31507_SliceExprModel> _154421_model = jule::new_ptr<_1a8d31507_SliceExprModel>(_1a8d31507_SliceExprModel{._field_ElemKind=_150430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _154317_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_154317_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac78a6bb:;
						if (it != expr_end) {
							jule::I32 *_154824_r = it;
							{
								jule::Ptr<_20a2b7552_Const> _154925_rc = static__20a2b7992_NewI64(static_cast<jule::I64>((*(_154824_r))));;
								(*(_154925_rc))._field_Kind=(*(_15209_prim))._field_Kind;
								(*(_154421_model))._field_Elems=jule::append((*_154421_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_154925_rc, &__jule_any_type19)}));
							}
							_iter_next_1ac78a6bb:;
							++it;
							goto _iter_begin_1ac78a6bb;
						}
						_iter_end_1ac78a6bb:;
					};
					(*_150448_d.alloc)._field_Model=jule::Any(_154421_model, &__jule_any_type76);
					(*_150448_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1ac7856e9:;
		};
	};
}



inline void _1a8e5d876_castStr(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data> _155930_d, jule::Ptr<_1a875ce89_Token> _155940_errorToken) {
	if ((_1a8e85e20_Enum((*(_155930_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a8d52a56_Enum> _156117_e = _1a8e85e20_Enum((*_155930_d.alloc)._field_Kind);;
		if (((_1a8e8566c_Prim((*((*(_156117_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1a8e8e07c_IsStr(_1a8e8566c_Prim((*(*_156117_e.alloc)._field_Kind.alloc)._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_20a2b7552_Const> _15679_c = (*_155930_d.alloc)._field_Constant;;
	(*_155930_d.alloc)._field_Constant=nullptr;
	(*_155930_d.alloc)._field_untyped=false;
	if ((_1a8e8566c_Prim((*_155930_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1a8e8aae5_Prim> _157113_prim = _1a8e8566c_Prim((*_155930_d.alloc)._field_Kind);;
		if (((!(_1a8e8c4dc_IsU8(_157113_prim.ptr()))) && (!(_1a8e8bec0_IsI32(_157113_prim))))) {
			_1a8e4e03c_pushErr(_self_, _155940_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*_155930_d.alloc)._field_Kind), &__jule_any_type4)}));
			return;;
		};
		if ((_15679_c != nullptr)) {
			{
				
				if (_1a8e8c4dc_IsU8(_157113_prim)) {
					_case_begin_1ac793042:;
					{
						(*_155930_d.alloc)._field_Constant=static__20a2b82de_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_20a2b9e7d_AsU64(_15679_c))));
						(*_155930_d.alloc)._field_Model=jule::Any((*_155930_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155930_d.alloc)._field_Decl=true;
					}
				}
				else if (_1a8e8bec0_IsI32(_157113_prim)) {
					_case_begin_1ac7930db:;
					{
						(*_155930_d.alloc)._field_Constant=static__20a2b82de_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_20a2b9be7_AsI64(_15679_c))));
						(*_155930_d.alloc)._field_Model=jule::Any((*_155930_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155930_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1ac792e32:;
			};
		};
		return;;
	};
	jule::Ptr<_1a8e900e4_Slc> _159213_s = _1a8e866c3_Slc((*_155930_d.alloc)._field_Kind);;
	if ((_159213_s == nullptr)) {
		_1a8e4e03c_pushErr(_self_, _155940_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*_155930_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a8e8301b_TypeKind> _159813_t = (*(_159213_s))._field_Elem;;
	jule::Ptr<_1a8e8aae5_Prim> _15999_prim = _1a8e8566c_Prim(_159813_t.ptr());;
	if (((_15999_prim == nullptr) || ((!(_1a8e8c4dc_IsU8(_15999_prim.ptr()))) && (!(_1a8e8bec0_IsI32(_15999_prim.ptr())))))) {
		_1a8e4e03c_pushErr(_self_, _155940_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*_155930_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
}



inline void _1a8e5dc94_castInt(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _160630_t, jule::Ptr<_1a8e4bcb5_Data> _160648_d, jule::Ptr<_1a875ce89_Token> _160658_errorToken) {
	if (_1a8e4c6bc_IsConst(_160648_d.ptr())) {
		jule::Ptr<_1a8e8aae5_Prim> _160813_prim = _1a8e8566c_Prim(_160630_t.ptr());;
		{
			
			if (_20a2b630e_IsSigInt((*(_160813_prim))._field_Kind)) {
				_case_begin_1ac79b48a:;
				{
					_20a2ba4bc_SetI64((*_160648_d.alloc)._field_Constant.ptr(), _20a2b9be7_AsI64((*_160648_d.alloc)._field_Constant));
				}
			}
			else if (_20a2b661c_IsUnsigInt((*(_160813_prim))._field_Kind)) {
				_case_begin_1ac79b534:;
				{
					_20a2ba775_SetU64((*_160648_d.alloc)._field_Constant.ptr(), _20a2b9e7d_AsU64((*_160648_d.alloc)._field_Constant));
				}
			}
			_match_end_1ac79b413:;
		};
	} else {
		(*(_160648_d))._field_Constant=nullptr;
		(*_160648_d.alloc)._field_untyped=false;
	};
	if ((_1a8e85e20_Enum((*(_160648_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a8d52a56_Enum> _162113_e = _1a8e85e20_Enum((*_160648_d.alloc)._field_Kind);;
		if (_20a2b6ead_IsNum(_1a8e833d4_Str((*((*(_162113_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1a8e85903_Sptr((*_160648_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1a8e8aae5_Prim> _162813_prim = _1a8e8566c_Prim(_160630_t.ptr());;
		if ((!(_1a8e8da60_IsUintptr(_162813_prim.ptr())))) {
			_1a8e4e03c_pushErr(_self_, _160658_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_160648_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a8e833d4_Str(_160630_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1a8e85b89_Ptr((*_160648_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1a8e8aae5_Prim> _163513_prim = _1a8e8566c_Prim(_160630_t);;
		if (_1a8e8da60_IsUintptr(_163513_prim.ptr())) {
		} else if ((!(_1a8e4ea32_isUnsafe(_self_)))) {
			_1a8e4e03c_pushErr(_self_, _160658_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _16449_prim = _1a8e8566c_Prim((*_160648_d.alloc)._field_Kind);;
	if (((_16449_prim != nullptr) && _20a2b6ead_IsNum(_1a8e8ae36_Str(_16449_prim)))) {
		return;;
	};
	_1a8e4e03c_pushErr(_self_, _160658_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_160648_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a8e833d4_Str(_160630_t), &__jule_any_type4)}));
}



inline void _1a8e5e1b2_castNum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _165230_t, jule::Ptr<_1a8e4bcb5_Data> _165248_d, jule::Ptr<_1a875ce89_Token> _165258_errorToken) {
	if (_1a8e4c6bc_IsConst(_165248_d.ptr())) {
		jule::Ptr<_1a8e8aae5_Prim> _165413_prim = _1a8e8566c_Prim(_165230_t.ptr());;
		{
			
			if (_20a2b6c27_IsFloat((*(_165413_prim))._field_Kind)) {
				_case_begin_1ac7a7672:;
				{
					_20a2bb08e_SetF64((*_165248_d.alloc)._field_Constant.ptr(), _20a2ba214_AsF64((*_165248_d.alloc)._field_Constant));
				}
			}
			else if (_20a2b630e_IsSigInt((*(_165413_prim))._field_Kind)) {
				_case_begin_1ac7a771b:;
				{
					_20a2ba4bc_SetI64((*_165248_d.alloc)._field_Constant.ptr(), _20a2b9be7_AsI64((*_165248_d.alloc)._field_Constant));
				}
			}
			else if (_20a2b661c_IsUnsigInt((*(_165413_prim))._field_Kind)) {
				_case_begin_1ac7a7782:;
				{
					_20a2ba775_SetU64((*_165248_d.alloc)._field_Constant.ptr(), _20a2b9e7d_AsU64((*_165248_d.alloc)._field_Constant));
				}
			}
			_match_end_1ac7a75a6:;
		};
	} else {
		(*(_165248_d))._field_Constant=nullptr;
		(*_165248_d.alloc)._field_untyped=false;
	};
	if ((_1a8e85e20_Enum((*(_165248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a8d52a56_Enum> _166913_e = _1a8e85e20_Enum((*_165248_d.alloc)._field_Kind);;
		if (_20a2b6ead_IsNum(_1a8e833d4_Str((*((*(_166913_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a8e8aae5_Prim> _16759_prim = _1a8e8566c_Prim((*_165248_d.alloc)._field_Kind);;
	if (((_16759_prim != nullptr) && _20a2b6ead_IsNum(_1a8e8ae36_Str(_16759_prim)))) {
		return;;
	};
	_1a8e4e03c_pushErr(_self_, _165258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_165248_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a8e833d4_Str(_165230_t.ptr()), &__jule_any_type4)}));
}



inline void _1a8e5e5d0_castPrim(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _168331_t, jule::Ptr<_1a8e4bcb5_Data> _168349_d, jule::Ptr<_1a875ce89_Token> _168359_errorToken) {
	jule::Ptr<_1a8e8aae5_Prim> _16849_prim = _1a8e8566c_Prim(_168331_t.ptr());;
	{
		
		if (_1a8e8e313_IsAny(_16849_prim.ptr())) {
			_case_begin_1ac7b09ee:;
			{
				(*(_168349_d))._field_Constant=nullptr;
				(*_168349_d.alloc)._field_untyped=false;
			}
		}
		else if (_1a8e8e07c_IsStr(_16849_prim.ptr())) {
			_case_begin_1ac7b06ad:;
			{
				_1a8e5d876_castStr(_self_, _168349_d, _168359_errorToken);
			}
		}
		else if (_20a2b68d6_IsInt(_1a8e8ae36_Str(_16849_prim.ptr()))) {
			_case_begin_1ac7b0724:;
			{
				_1a8e5dc94_castInt(_self_, _168331_t, _168349_d, _168359_errorToken);
			}
		}
		else if (_20a2b6ead_IsNum(_1a8e8ae36_Str(_16849_prim.ptr()))) {
			_case_begin_1ac7b078a:;
			{
				_1a8e5e1b2_castNum(_self_, _168331_t, _168349_d, _168359_errorToken);
			}
		}
		else {
			_case_begin_1ac7b0647:;
			{
				_1a8e4e03c_pushErr(_self_, _168359_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str(_168331_t), &__jule_any_type4)}));
			}
		}
		_match_end_1ac7b05d1:;
	};
}



inline void _1a8e5e943_castConstant(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _170136_t, jule::Ptr<_1a8e4bcb5_Data>* _170155_d) {
	if ((((*(_170155_d)) == nullptr) || (!(_1a8e4c6bc_IsConst((*(_170155_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _17059_prim = _1a8e8566c_Prim((*(_170136_t)).ptr());;
	_1a8e7d4cd_castConstByType(&((*(_17059_prim))._field_Kind), _170155_d);
	(*((*(_170155_d))))._field_Model=jule::Any((*((*(_170155_d))))._field_Constant, &__jule_any_type19);
}



inline void _1a8e5ed61_castTypeEnum(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _171036_t, jule::Ptr<_1a8e4bcb5_Data>* _171055_d, jule::Ptr<_1a875ce89_Token>* _171070_errorToken) {
	jule::I32 _17119_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a8dcc3e9_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_171055_d))))._field_Kind), _171036_t, _171070_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17119_n);;
		_1a8e4e03c_pushErr(_self_, (*(_171070_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_171055_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(_171036_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_171055_d))))._field_Constant=nullptr;
	(*((*(_171055_d))))._field_untyped=false;
}



inline void _1a8e6027e_castTypeEnumT(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _172037_t, jule::Ptr<_1a8e4bcb5_Data>* _172056_d, jule::Ptr<_1a875ce89_Token>* _172071_errorToken) {
	jule::I32 _17219_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a8dcc3e9_checkTypeCompatibility((*(_self_))._field_s, _172037_t, &((*((*(_172056_d))))._field_Kind), _172071_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17219_n);;
		_1a8e4e03c_pushErr(_self_, (*(_172071_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_172056_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(_172037_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_172056_d))))._field_Constant=nullptr;
	(*((*(_172056_d))))._field_untyped=false;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e60735_evalCastByTypeNData(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e8301b_TypeKind> _173042_t, jule::Ptr<_1a8e4bcb5_Data> _173060_d, jule::Ptr<_1a875ce89_Token> _173074_errorToken) {
	if (((_173060_d != nullptr) && (*_173060_d.alloc)._field_Decl)) {
		_1a8e4e03c_pushErr(_self_, _173074_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1a8e4c1a0_IsNil(_173060_d)) {
			_case_begin_1ac7bd48a:;
			{
				if ((!(_1a8e84db9_NilCompatible(_173042_t.ptr())))) {
					_1a8e4e03c_pushErr(_self_, _173074_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1a8e833d4_Str(_173042_t), &__jule_any_type4)}));
				};
				(*_173060_d.alloc)._field_Constant=nullptr;
				(*_173060_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1a8e8566c_Prim((*_173060_d.alloc)._field_Kind.ptr()) != nullptr) && _1a8e8e313_IsAny(_1a8e8566c_Prim((*_173060_d.alloc)._field_Kind).ptr()))) {
			_case_begin_1ac7bd226:;
			{
				if ((_1a8e85e20_Enum(_173042_t.ptr()) != nullptr)) {
					_1a8e4e03c_pushErr(_self_, _173074_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1a8e861a6_TypeEnum(_173042_t.ptr()) != nullptr)) {
					_1a8e4e03c_pushErr(_self_, _173074_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*_173060_d.alloc)._field_Constant=nullptr;
				(*_173060_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1a8e861a6_TypeEnum((*_173060_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac7bd28c:;
			{
				_1a8e5ed61_castTypeEnum(_self_, &(_173042_t), &(_173060_d), &(_173074_errorToken));
			}
		}
		else if ((_1a8e861a6_TypeEnum(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ac7bd303:;
			{
				_1a8e6027e_castTypeEnumT(_self_, &(_173042_t), &(_173060_d), &(_173074_errorToken));
			}
		}
		else if ((_1a8e85b89_Ptr(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ac7bd369:;
			{
				_1a8e5c7a9_castPtr(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1a8e85903_Sptr(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ac7be029:;
			{
				_1a8e5d0e5_castRef(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1a8e866c3_Slc(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ac7be090:;
			{
				_1a8e5d513_castSlc(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1a8e86be0_Struct(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ac7be106:;
			{
				_1a8e5cbc7_castStruct(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1a8e8566c_Prim(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ac7be16c:;
			{
				_1a8e5e5d0_castPrim(_self_, _173042_t, _173060_d, _173074_errorToken);
				_1a8e5e943_castConstant(_self_, &(_173042_t), &(_173060_d));
			}
		}
		else {
			_case_begin_1ac7bd105:;
			{
				_1a8e4e03c_pushErr(_self_, _173074_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str(_173042_t.ptr()), &__jule_any_type4)}));
				_173060_d=nullptr;
			}
		}
		_match_end_1ac7bd05b:;
	};
	if ((_173060_d == nullptr)) {
		return nullptr;;
	};
	(*_173060_d.alloc)._field_Mutable=((*_173060_d.alloc)._field_Mutable || (!(_1a8e8489c_Mutable((*_173060_d.alloc)._field_Kind.ptr()))));
	if (((!((*_173060_d.alloc)._field_Decl)) && ((_1a8e85e20_Enum((*_173060_d.alloc)._field_Kind) == nullptr) || (!(_1a8e83725_Equal((*((*(_1a8e85e20_Enum((*_173060_d.alloc)._field_Kind)))._field_Kind))._field_Kind, _173042_t)))))) {
		_1a8e7c7b8_applyCastKind(&(_173060_d), &(_173042_t), &(_173074_errorToken));
		(*((*_173060_d.alloc)._field_Model.cast_ptr<_1a8d3077b_CastingExprModel>(&__jule_any_type93)))._field_Token=_173074_errorToken;
	} else {
		(*_173060_d.alloc)._field_Kind=_173042_t;
	};
	(*_173060_d.alloc)._field_Decl=false;
	(*_173060_d.alloc)._field_Lvalue=false;
	(*_173060_d.alloc)._field_untyped=false;
	if (_1a8e4c6bc_IsConst(_173060_d)) {
		(*((*_173060_d.alloc)._field_Constant))._field_Kind=(*(_1a8e8566c_Prim(_173042_t.ptr())))._field_Kind;
	};
	return _173060_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e60bdb_evalCastT(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8e8301b_TypeKind>* _180334_t, jule::Ptr<_1a8777899_Expr>* _180353_e, jule::Ptr<_1a875ce89_Token>* _180368_et) {
	jule::Ptr<_1a8e8301b_TypeKind> _180413_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_180413_prefix;
	});;
	if ((_1a8e866c3_Slc((*(_180334_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_180353_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type94) {
				_case_begin_1ac7ce1b0:;
				{
					(*_self_.alloc)._field_prefix=(*(_180334_t));
				}
			}
			_match_end_1ac7ce149:;
		};
	};
	jule::Ptr<_1a8e4bcb5_Data> _181313_d = _1a8e6bc4c_evalExpr(_self_, (*(_180353_e)));;
	if (((_181313_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _181313_d;;
	};
	return _1a8e60735_evalCastByTypeNData(_self_, (*(_180334_t)), _181313_d, (*(_180368_et)));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6102c_evalCast(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877a209_CastExpr> _182032_c) {
	jule::Ptr<_1a8e8a1dd_TypeSymbol> _182113_t = _1a8d449c1_buildType((*(_182032_c))._field_Kind);;
	jule::Bool _18229_ok = _1a8dc9b00_checkType((*(_self_))._field_s, &(_182113_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18229_ok))) {
		return nullptr;;
	};
	return _1a8e60bdb_evalCastT(_self_, &((*(_182113_t))._field_Kind), &((*_182032_c.alloc)._field_Expr), &((*((*_182032_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6136d_evalNsSelection(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a877a5d3_NsSelectionExpr> _182934_s) {
	jule::Str _18309_path = _1a8e9ea60_buildLinkPathByTokens(&((*(_182934_s))._field_Ns));;
	jule::Ptr<_1a8da0ea0_ImportInfo> _183113_imp = ((_1a8ea2b0c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8ea0de6_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>>((void*)__jule_anon_1ac7d47d1, jule::Ptr<__jule_anon_1ac7d47d1_ctx>::make(__jule_anon_1ac7d47d1_ctx{._182934_s=_182934_s,._18309_path=_18309_path}).as<jule::Uintptr>(), __jule_anon_1ac7d47d1_ctx_handler));;
	if ((_183113_imp == nullptr)) {
		_1a8e4e03c_pushErr(_self_, (*_182934_s.alloc)._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18309_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait _184313_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_183113_imp, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data1);
	;
	_1a8e4e79b_disallowBuiltin(_self_);
	jule::Any _184813_def = _1a8e51ca9_getDef(_self_, &((*((*_182934_s.alloc)._field_Ident))._field_Kind), false);;
	_1a8e4e59d_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_184313_lookup;
	jule::Ptr<_1a8e4bcb5_Data> _185113_d = _1a8e55e67_evalDef(_self_, &(_184813_def), (*_182934_s.alloc)._field_Ident);;
	return _185113_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e61824_evalStructLitExplicit(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8d29ba4_StructIns> _185545_s, jule::Slice<jule::Ptr<_1a8777899_Expr>> _185613_exprs, jule::Ptr<_1a875ce89_Token> _185633_errorToken) {
	jule::Bool _18579_ok = _1a8dc54ad_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_185545_s))._field_Decl))._field_Generics.len(), (*_185545_s.alloc)._field_Generics.len(), _185633_errorToken);;
	if ((!(_18579_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*_self_.alloc)._field_field.alloc)._field_Decl))._field_Owner == (*_185545_s.alloc)._field_Decl))) {
		_1a8e4e03c_pushErr(_self_, _185633_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(*_185545_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
	};
	_1ac771bbe_pushReference(_self_, &(_185545_s));
	_1a8e54163_checkDeprecated(_self_, &((*(*_185545_s.alloc)._field_Decl.alloc)._field_Directives), _185633_errorToken);
	_1a8e3ed96_structLitChecker _187013_slc = _1a8e3ed96_structLitChecker{._field_e=_self_, ._field_errorToken=_185633_errorToken, ._field_s=_185545_s, };;
	_1a8e415d4_check(&_187013_slc, &(_185613_exprs));
	jule::Ptr<_1a8e4bcb5_Data> _187713_d = jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_185545_s, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1a8d2edeb_StructLitExprModel>(_1a8d2edeb_StructLitExprModel{._field_Strct=_185545_s, ._field_Args=_187013_slc._field_args}), &__jule_any_type95), });;
	if ((*(*_185545_s.alloc)._field_Decl.alloc)._field_Binded) {
		(*((*(_187713_d))._field_Kind))._field_BindIdent=(*(*_185545_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _187713_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e61b65_evalStructLit(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877c8e3_StructLit> _189337_lit) {
	jule::Ptr<_1a8e8a1dd_TypeSymbol> _189413_t = _1a8d449c1_buildType((*(_189337_lit))._field_Kind);;
	jule::Bool _18959_ok = _1a8dc9b00_checkType((*(_self_))._field_s, &(_189413_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18959_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _190013_s = _1a8e86be0_Struct((*(_189413_t))._field_Kind.ptr());;
	if ((_190013_s == nullptr)) {
		if ((_1a8e85903_Sptr((*_189413_t.alloc)._field_Kind) != nullptr)) {
			_190013_s=_1a8e86be0_Struct((*(_1a8e85903_Sptr((*_189413_t.alloc)._field_Kind)))._field_Elem.ptr());
			if ((_190013_s != nullptr)) {
				goto _julec_label_1ac7e54e5;
			};
		};
		_1a8e4e03c_pushErr(_self_, (*((*_189337_lit.alloc)._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ac7e54e5:;
	jule::Ptr<_1a8e4bcb5_Data> _191313_d = _1a8e61824_evalStructLitExplicit(_self_, _190013_s, (*_189337_lit.alloc)._field_Exprs, (*(*_189337_lit.alloc)._field_Kind.alloc)._field_Token);;
	if ((_1a8e85903_Sptr((*_189413_t.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1a8d2edeb_StructLitExprModel> _191517_model = (*(_191313_d))._field_Model.cast_ptr<_1a8d2edeb_StructLitExprModel>(&__jule_any_type95);;
		_1a8e7ade3_makeStructLitAlloc(&(_191313_d), &(_191517_model));
	};
	return _191313_d;;
}



inline _1a8e94dc9_typeChecker _1a8e61deb_typeChecker(_1a8e4d9dc_Eval* _self_) {
	return _1a8dc889b_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6223c_evalType(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8773565_TypeDecl> _192531_t) {
	jule::Ptr<_1a8e8a1dd_TypeSymbol> _192613_tk = _1a8d449c1_buildType(_192531_t);;
	jule::Bool _19279_ok = _1a8dc9b00_checkType((*(_self_))._field_s, &(_192613_tk), (*(_self_))._field_lookup);;
	if ((!(_19279_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=(*(_192613_tk))._field_Kind, ._field_Model=jule::Any((*_192613_tk.alloc)._field_Kind, &__jule_any_type84), ._field_Decl=true, });;
}



inline void _1a8e625a0_callTypeFn(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877b5c3_FnCallExpr>* _193835_fc, jule::Ptr<_1a8e4bcb5_Data>* _193857_d) {
	if (((*((*(_193835_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr(_self_.ptr(), (*((*(_193835_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_193835_fc))))._field_Args.len() > 1LL)) {
		_1a8e4e03c_pushErr(_self_.ptr(), (*((*((*(_193835_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_193857_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_193835_fc))))._field_IsCo) {
		_1a8e4e03c_pushErr(_self_.ptr(), (*((*(_193835_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_193857_d))=nullptr;
		return;;
	} else if (((*((*(_193835_fc))))._field_Exception != nullptr)) {
		_1a8e4e03c_pushErr(_self_.ptr(), (*((*(_193835_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_193857_d))=nullptr;
		return;;
	};
	if (((*((*(_193835_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1a8777899_Expr> _195417_arg = (*((*(_193835_fc))))._field_Args[0LL];;
		(*(_193857_d))=_1a8e60bdb_evalCastT(_self_, &((*((*(_193857_d))))._field_Kind), &(_195417_arg), &((*(_195417_arg))._field_Token));
		return;;
	};
	if (((*(_193857_d)) != nullptr)) {
		(*((*(_193857_d))))._field_Decl=false;
	};
}



inline void _1a8e62913_callBuiltinFn(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877b5c3_FnCallExpr>* _196438_fc, jule::Ptr<_1a8e4bcb5_Data>* _196460_d) {
	if ((!(_1a877b947_Unhandled((*(_196438_fc)).ptr())))) {
		_1a8e4e03c_pushErr(_self_.ptr(), (*((*(_196438_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_196460_d))=(*(_1a8e86959_Fn((*((*(_196460_d))))._field_Kind.ptr())))._field_caller(&(_self_), _196438_fc, _196460_d);
	if (((*(_196460_d)) == nullptr)) {
		return;;
	};
	(*((*(_196460_d))))._field_Mutable=true;
}



inline void _1a8e62c76_checkFnOfConcurrentCall(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _197643_f, jule::Ptr<_1a875ce89_Token> _197654_errorToken) {
	if (_1a8e4ea32_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_197643_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac80537e:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3dde9_ParamIns> *_198016_p = it;
			{
				if (_1a8d3aad8_IsSelf((*((*(_198016_p))))._field_Decl.ptr())) {
					if ((!(_1a8d3ad6e_IsRef((*(*(_198016_p)).alloc)._field_Decl)))) {
						_1a8e4e03c_pushErr(_self_, _197654_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(*(*(_198016_p)).alloc)._field_Decl.alloc)._field_Reference) {
					_1a8e4e03c_pushErr(_self_, _197654_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1ac80537e:;
			++it;
			goto _iter_begin_1ac80537e;
		}
		_iter_end_1ac80537e:;
	};
}



inline void _1a8e63194_processExceptionalHandler(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _199549_f, jule::Ptr<_1a877b5c3_FnCallExpr>* _199565_fc, jule::Ptr<_1a8e4bcb5_Data>* _199587_d) {
	jule::Bool _19969_resultNeeded = ((!(_1a8d3c414_IsVoid((*((*(_199549_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1a8d863c5_scopeChecker> _199717_csc = nullptr;;
	jule::Ptr<_1a8d7de17_Scope> _199817_ch = nullptr;;
	jule::Ptr<_1a8d3112d_FnCallExprModel> _200013_model = (*((*(_199587_d))))._field_Model.cast_ptr<_1a8d3112d_FnCallExprModel>(&__jule_any_type33);;
	jule::Ptr<_1a8d863c5_scopeChecker> _200413_sc = (*(_self_))._field_lookup.cast_ptr<_1a8d863c5_scopeChecker>((jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0);;
	_199717_csc=_1a8d9845e_newChildChecker(_200413_sc);
	if (_19969_resultNeeded) {
		(*(_199717_csc))._field_result=(*(_199549_f));
	};
	_199817_ch=_1a8d8b7b5_getChild(_200413_sc);
	(*((*((*(_199565_fc))))._field_Exception))._field_Parent=(*_200413_sc.alloc)._field_tree;
	(*((*_199717_csc.alloc)._field_table))._field_Vars=jule::append((*(*_199717_csc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a8de41ad_Var>>::make({_1a8e7b267_buildErrorVar(&(_199817_ch), _199565_fc)}));
	_1a8d8bbd3_checkChildSsc(_200413_sc, &((*((*(_199565_fc))))._field_Exception), &(_199817_ch), &(_199717_csc));
	(*(_200013_model))._field_Assigned=_19969_resultNeeded;
	(*_200013_model.alloc)._field_Except=_199817_ch;
	if ((_19969_resultNeeded && ((*_199717_csc.alloc)._field_result != nullptr))) {
		_1a8e4e03c_pushErr(_self_, (*((*(_199565_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1a8e63507_callFn(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877b5c3_FnCallExpr>* _202231_fc, jule::Ptr<_1a8e4bcb5_Data>* _202253_d) {
	jule::Ptr<_1a8d3ee72_FnIns> _202313_f = _1a8e86959_Fn((*((*(_202253_d))))._field_Kind.ptr());;
	if (_1a8d41407_IsBuiltin(_202313_f.ptr())) {
		_1a8e62913_callBuiltinFn(_self_, _202231_fc, _202253_d);
		return;;
	};
	if ((_1a8e4ecb8_isGlobal(_self_) && (*((*_202313_f.alloc)._field_Decl))._field_Exceptional)) {
		_1a8e4e03c_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_202253_d))=nullptr;
		return;;
	};
	if (((!(_1a8d3c69a_IsMethod((*_202313_f.alloc)._field_Decl))) && _1a8e9db3b_hasDirective(&((*(*_202313_f.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("test", 4)))) {
		_1a8e4e03c_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_202253_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_202253_d))))._field_Mutable)) && _1a8d3c69a_IsMethod((*_202313_f.alloc)._field_Decl)) && (!((*(*_202313_f.alloc)._field_Decl.alloc)._field_Statically))) && (*((*(*_202313_f.alloc)._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1a8e4e03c_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1a8d2edeb_StructLitExprModel> _204917_lit = _1a8e7e721_isLitBased(&((*((*(_202253_d))))._field_Model));;
			if ((_204917_lit == nullptr)) {
				_1a8e4e03c_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1a8e3e8ac_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_204917_lit));
			};
		};
	} else if (((!(_1a8e4ea32_isUnsafe(_self_))) && (*(*_202313_f.alloc)._field_Decl.alloc)._field_Unsafety)) {
		_1a8e4e03c_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _206113_dynamicAnnotation = ((((*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_202313_f.alloc)._field_Generics.len() == 0LL)) && ((*_202313_f.alloc)._field_Params.len() > 0LL));;
	if (_206113_dynamicAnnotation) {
		(*_202313_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1a8e81635_InsGeneric>>::alloc((*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len());
	} else if (((*_202313_f.alloc)._field_Generics.len() != (*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len())) {
		_1a8dc54ad_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*_202313_f.alloc)._field_Generics.len(), (*((*(_202231_fc))))._field_Token);
		(*(_202253_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a8dc1344_Sema> _207013_old = (*_self_.alloc)._field_s;;
	if (((*(*_202313_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*(*_202313_f.alloc)._field_Decl.alloc)._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_207013_old != (*_self_.alloc)._field_s)) {
			(*(_207013_old))._field_errors=jule::append((*_207013_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*_self_.alloc)._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_207013_old;
	});;
	_1a8e3be5e_fnCallArgChecker _208313_fcac = _1a8e3be5e_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_202231_fc))))._field_Args, ._field_errorToken=(*((*(_202231_fc))))._field_Token, ._field_dynamicAnnotation=_206113_dynamicAnnotation, };;
	if ((!(_206113_dynamicAnnotation))) {
		if ((!((*_202313_f.alloc)._field_reloaded))) {
			jule::Bool _209217_ok = _1a8dcee13_reloadFnInsTypes((*_self_.alloc)._field_s, _202313_f);;
			(*_202313_f.alloc)._field_reloaded=true;
			if ((!(_209217_ok))) {
				(*(_202253_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1a8d3ee72_FnIns> _209917_existInstance = _1a8d3da0e_appendInstance((*_202313_f.alloc)._field_Decl, &(_202313_f));;
		if ((_209917_existInstance != nullptr)) {
			_202313_f=_209917_existInstance;
		};
	} else if ((!(_1a8dcd670_buildFnNonGenericTypeKinds((*_self_.alloc)._field_s, &(_202313_f), &(_208313_fcac._field_ignored))))) {
		(*(_202253_d))=nullptr;
		return;;
	};
	_208313_fcac._field_f=_202313_f;
	jule::Bool _211013_ok = false;;
	if (((*(*_202313_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_207013_old, (*_self_.alloc)._field_s);
		_211013_ok=_1a8e3e516_check(&_208313_fcac);
		std::swap(_207013_old, (*_self_.alloc)._field_s);
	} else {
		_211013_ok=_1a8e3e516_check(&_208313_fcac);
	};
	if (_206113_dynamicAnnotation) {
		if ((!(_211013_ok))) {
			(*(_202253_d))=nullptr;
			return;;
		};
		if ((!(_1a8e5a8a6_checkGenericFn(_self_, &(_202313_f), &((*((*(_202231_fc))))._field_Token), &((*((*(_202253_d))))._field_Model))))) {
			(*(_202253_d))=nullptr;
			return;;
		};
	};
	jule::Any _213013_callModel = (*((*(_202253_d))))._field_Model;;
	if (_1a8d3c414_IsVoid((*_202313_f.alloc)._field_Decl)) {
		(*(_202253_d))=_1a8e7c9c7_buildVoidData();
	} else {
		(*((*(_202253_d))))._field_Kind=(*_202313_f.alloc)._field_Result;
		(*((*(_202253_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1a8d3112d_FnCallExprModel> _213913_model = jule::new_ptr<_1a8d3112d_FnCallExprModel>(_1a8d3112d_FnCallExprModel{._field_Token=(*((*(_202231_fc))))._field_Token, ._field_Func=_202313_f, ._field_IsCo=(*((*(_202231_fc))))._field_IsCo, ._field_Expr=_213013_callModel, ._field_Args=_208313_fcac._field_argModels, });;
	(*((*(_202253_d))))._field_Model=jule::Any(_213913_model, &__jule_any_type33);
	(*((*(_202253_d))))._field_Mutable=true;
	if ((*(*_202313_f.alloc)._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_202231_fc))))._field_IsCo) {
			_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*((*(_202231_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1a8dc42e2_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1a877b947_Unhandled((*(_202231_fc)).ptr())) {
				_case_begin_1ac82b042:;
				{
					_1a8e4e03c_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1a877bbcd_Ignored((*(_202231_fc)).ptr())) {
				_case_begin_1ac82ac34:;
				{
					goto _match_end_1ac8299d0;
				}
			}
			else {
				_case_begin_1ac829a68:;
				{
					_1a8e63194_processExceptionalHandler(_self_, &(_202313_f), _202231_fc, _202253_d);
				}
			}
			_match_end_1ac8299d0:;
		};
	} else if ((!(_1a877b947_Unhandled((*(_202231_fc)).ptr())))) {
		_1a8e4e03c_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_202231_fc))))._field_IsCo) {
		_1a8e62c76_checkFnOfConcurrentCall(_self_, &((*(_213913_model))._field_Func), (*((*(_202231_fc))))._field_Token);
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e63848_evalFnCall(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877b5c3_FnCallExpr> _217434_fc) {
	jule::Ptr<_1a8e8301b_TypeKind> _217513_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_217513_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_217434_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ac8305a7:;
			{
				if ((*((*((*(_217434_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1a906a2ac_builtinCallerError(&(_self_), &(_217434_fc));;
				};
			}
		}
		_match_end_1ac830541:;
	};
	jule::Ptr<_1a8e4bcb5_Data> _218813_d = _1a8e6ae38_evalExprKind(_self_, (*(*_217434_fc.alloc)._field_Expr.alloc)._field_Kind);;
	if ((_218813_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_218813_d))._field_Decl) {
		_1a8e625a0_callTypeFn(_self_, &(_217434_fc), &(_218813_d));
		return _218813_d;;
	};
	if ((_1a8e86959_Fn((*(_218813_d))._field_Kind.ptr()) == nullptr)) {
		_1a8e4e03c_pushErr(_self_, (*_217434_fc.alloc)._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a8e63507_callFn(_self_, &(_217434_fc), &(_218813_d));
	return _218813_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e63c44_evalEnumStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d52a56_Enum> _220737_enm, jule::Ptr<_1a875ce89_Token> _220753_ident) {
	jule::Ptr<_1a8d51ed9_EnumItem> _220813_item = _1a8d5364a_FindItem(_220737_enm.ptr(), (*(_220753_ident))._field_Kind);;
	if ((_220813_item == nullptr)) {
		_1a8e4e03c_pushErr(_self_, _220753_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_220737_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_220753_ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _1a8e7e457_evalEnumStatic(&(_220737_enm), &(_220813_item), &(_220753_ident));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e64140_evalTypeEnumStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d54261_TypeEnum> _221541_enm, jule::Ptr<_1a875ce89_Token> _221557_ident) {
	jule::Ptr<_1a8d53b89_TypeEnumItem> _221613_item = _1a8d54d22_FindItem(_221541_enm.ptr(), (*(_221557_ident))._field_Kind);;
	if ((_221613_item == nullptr)) {
		_1a8e4e03c_pushErr(_self_, _221557_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_221541_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_221557_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1a8e85e20_Enum((*((*(_221613_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac838b54:;
			{
				return _1a8e52639__evalEnum(_self_, _1a8e85e20_Enum((*(*(_221613_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1a8e861a6_TypeEnum((*((*(_221613_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac836dd8:;
			{
				return _1a8e52d76__evalTypeEnum(_self_, _1a8e861a6_TypeEnum((*(*(_221613_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1a8e86be0_Struct((*((*(_221613_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac836e4e:;
			{
				return _1a8e535b3__evalStruct(_self_, _1a8e86be0_Struct((*(*(_221613_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else {
			_case_begin_1ac836d72:;
			{
				jule::Ptr<_1a8e4bcb5_Data> _222917_d = jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=(*((*(_221613_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_222917_d))._field_Model=jule::Any((*_222917_d.alloc)._field_Kind, &__jule_any_type84);
				return _222917_d;;
			}
		}
		_match_end_1ac83703c:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6453b_evalStructStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d29ba4_StructIns> _223839_s, jule::Ptr<_1a875ce89_Token> _223854_ident) {
	jule::Ptr<_1a8e4bcb5_Data> _223913_d = jule::new_ptr<_1a8e4bcb5_Data>();;
	;
	jule::Ptr<_1a8d3be91_Fn> _224313_method = _1a8d2ac1b_FindMethod(_223839_s.ptr(), (*(_223854_ident))._field_Kind, true);;
	if ((_224313_method != nullptr)) {
		if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_224313_method.alloc)._field_Public, (*_224313_method.alloc)._field_Token)))) {
			_1a8e4e03c_pushErr(_self_, _223854_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_223854_ident.alloc)._field_Kind, &__jule_any_type4)}));
			_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a8d3ee72_FnIns> _225017_ins = _1a8d3d701_instance(_224313_method);;
		(*(_225017_ins))._field_Owner=_223839_s;
		_1ac8a1282_pushReference(_self_, &(_225017_ins));
		(*_223913_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a8d34142_StructStaticIdentExprModel>(_1a8d34142_StructStaticIdentExprModel{._field_Structure=_223839_s, ._field_Expr=(*_223913_d.alloc)._field_Model, ._field_Method=_225017_ins}), &__jule_any_type96);
		(*_223913_d.alloc)._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_225017_ins, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data1)});
		return _223913_d;;
	};
	jule::Ptr<_1a8de41ad_Var> _226413_sttc = _1a8d2b39d_FindStatic(_223839_s, (*_223854_ident.alloc)._field_Kind);;
	if ((_226413_sttc != nullptr)) {
		return _1a8e55670_evalVar(_self_, _226413_sttc, _223854_ident);;
	};
	_1a8e4e03c_pushErr(_self_, _223854_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_223839_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*_223854_ident.alloc)._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e649e2_evalTraitSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data> _227340_d, jule::Ptr<_1a8d5034a_Trait> _227354_trt, jule::Ptr<_1a875ce89_Token> _227371_ident) {
	jule::Ptr<_1a8d3be91_Fn> _227413_f = _1a8d50ee9_FindMethod(_227354_trt.ptr(), (*(_227371_ident))._field_Kind);;
	if ((_227413_f == nullptr)) {
		_1a8e4e03c_pushErr(_self_, _227371_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_227354_trt.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_227371_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8d3d701_instance(_227413_f), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data1)}), ._field_Model=jule::Any(jule::new_ptr<_1a8d3340a_TraitSubIdentExprModel>(_1a8d3340a_TraitSubIdentExprModel{._field_Token=_227371_ident, ._field_Expr=(*(_227340_d))._field_Model, ._field_Method=_227413_f, ._field_Trt=_227354_trt}), &__jule_any_type97), });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e65053_evalStructSubIdentField(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _229347_d, jule::Ptr<_1a8d29ba4_StructIns>* _229362_s, jule::Ptr<_1a875ce89_Token>* _229382_tok, jule::Ptr<_1a8d29104_FieldIns>* _2293100_f) {
	jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _229413_model = jule::new_ptr<_1a8d33c9b_StructSubIdentExprModel>(_1a8d33c9b_StructSubIdentExprModel{._field_Token=(*(_229382_tok)), ._field_Expr=jule::new_ptr<_1a8e4bcb5_Data>((*((*(_229347_d))))), ._field_Field=(*(_2293100_f)), ._field_Owner=(*(_229362_s))});;
	(*((*(_229347_d))))._field_Model=jule::Any(_229413_model, &__jule_any_type98);
	(*((*(_229347_d))))._field_Kind=(*((*(_2293100_f))))._field_Kind;
	(*((*(_229347_d))))._field_Lvalue=true;
	if (((*((*((*(_2293100_f))))._field_Decl))._field_Mutable && (!((*((*(_229347_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)) {
				_case_begin_1ac84a0e9:;
				{
					jule::Ptr<_1a8d863c5_scopeChecker> _230817_scope = _1a8d8976e_getRoot((*(_self_))._field_lookup.cast_ptr<_1a8d863c5_scopeChecker>((jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0));;
					(*((*(_229347_d))))._field_Mutable=(((*(_230817_scope))._field_owner != nullptr) && ((*(*_230817_scope.alloc)._field_owner.alloc)._field_Owner == (*(_229362_s))));
				}
			}
			_match_end_1ac84a094:;
		};
	};
	return (*(_229347_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e655b4_evalStructSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data> _231641_d, jule::Ptr<_1a8d29ba4_StructIns> _231655_s, jule::Ptr<_1a877a9ac_SubIdentExpr> _231674_si, jule::Bool _231693_ref) {
	jule::Ptr<_1a8d29104_FieldIns> _231713_f = _1a8d2b05c_FindField(_231655_s.ptr(), (*((*(_231674_si))._field_Ident))._field_Kind);;
	if ((_231713_f != nullptr)) {
		if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_231713_f.alloc)._field_Decl))._field_Public, (*(*_231713_f.alloc)._field_Decl.alloc)._field_Token)))) {
			_1a8e4e03c_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_231713_f.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
			_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1a8e65053_evalStructSubIdentField(_self_, &(_231641_d), &(_231655_s), &((*_231674_si.alloc)._field_Ident), &(_231713_f));;
	};
	;
	jule::Ptr<_1a8d3be91_Fn> _232713_m = _1a8d2ac1b_FindMethod(_231655_s, (*(*_231674_si.alloc)._field_Ident.alloc)._field_Kind, false);;
	if ((_232713_m == nullptr)) {
		_1a8e4e03c_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_231655_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(*_231674_si.alloc)._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s, (*(_232713_m))._field_Public, (*(_232713_m))._field_Token)))) {
		_1a8e4e03c_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_232713_m))._field_Ident, &__jule_any_type4)}));
		_1a8e4e3a0_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1a8d3ad6e_IsRef((*(_232713_m))._field_Params[0LL].ptr()) && (!(_231693_ref)))) {
		_1a8e4e03c_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1a8e54163_checkDeprecated(_self_, &((*(_232713_m))._field_Directives), (*_231674_si.alloc)._field_Ident);
	jule::Ptr<_1a8d3ee72_FnIns> _234313_ins = _1a8d3d701_instance(_232713_m);;
	(*(_234313_ins))._field_Owner=_231655_s;
	_1ac8a1282_pushReference(_self_, &(_234313_ins));
	jule::Ptr<_1a8e4bcb5_Data> _234613_model = jule::new_ptr<_1a8e4bcb5_Data>((*(_231641_d)));;
	(*_231641_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a8d33c9b_StructSubIdentExprModel>(_1a8d33c9b_StructSubIdentExprModel{._field_Token=(*_231674_si.alloc)._field_Ident, ._field_Expr=_234613_model, ._field_Method=_234313_ins, ._field_Owner=_231655_s}), &__jule_any_type98);
	(*_231641_d.alloc)._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_234313_ins, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data1)});
	return _231641_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e65905_evalIntTypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _235736_ident) {
	;
	{
		auto &_match_expr{ (*(_235736_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac9b9a0a:;
			{
				jule::Ptr<_20a2b7552_Const> _236117_c = static__20a2b7992_NewI64(_20a2b2948_MaxI(jule::Str::lit("int", 3)));;
				(*(_236117_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a906682a_primInt, ._field_Model=jule::Any(_236117_c, &__jule_any_type19), ._field_Constant=_236117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac9ba511:;
			{
				jule::Ptr<_20a2b7552_Const> _237017_c = static__20a2b7992_NewI64(static_cast<jule::I64>(_20a2b3053_Min(jule::Str::lit("int", 3))));;
				(*(_237017_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a906682a_primInt, ._field_Model=jule::Any(_237017_c, &__jule_any_type19), ._field_Constant=_237017_c});;
			}
		}
		else {
			_case_begin_1ac9b91ad:;
			{
				_1a8e4e03c_pushErr(_self_, _235736_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_235736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac9b9653:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e65c46_evalUintTypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _238437_ident) {
	;
	{
		auto &_match_expr{ (*(_238437_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac9bd7de:;
			{
				jule::Ptr<_20a2b7552_Const> _238817_c = static__20a2b7c5b_NewU64(_20a2b2c12_MaxU(jule::Str::lit("uint", 4)));;
				(*(_238817_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a9066462_primUint, ._field_Model=jule::Any(_238817_c, &__jule_any_type19), ._field_Constant=_238817_c});;
			}
		}
		else {
			_case_begin_1ac9bd1d4:;
			{
				_1a8e4e03c_pushErr(_self_, _238437_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_238437_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac9bd437:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e66087_evalI8TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _240235_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_240235_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac9c1a01:;
			{
				jule::Ptr<_20a2b7552_Const> _240817_c = static__20a2b7992_NewI64(127LL);;
				(*(_240817_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a9066a6c_primI8, ._field_Model=jule::Any(_240817_c, &__jule_any_type19), ._field_Constant=_240817_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac9c2507:;
			{
				jule::Ptr<_20a2b7552_Const> _241717_c = static__20a2b7992_NewI64(-128LL);;
				(*(_241717_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a9066a6c_primI8, ._field_Model=jule::Any(_241717_c, &__jule_any_type19), ._field_Constant=_241717_c});;
			}
		}
		else {
			_case_begin_1ac9c124d:;
			{
				_1a8e4e03c_pushErr(_self_, _240235_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_240235_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac9c166b:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e663c8_evalI16TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _243136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243136_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac9c5cbe:;
			{
				jule::Ptr<_20a2b7552_Const> _243717_c = static__20a2b7992_NewI64(32767LL);;
				(*(_243717_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a9066d14_primI16, ._field_Model=jule::Any(_243717_c, &__jule_any_type19), ._field_Constant=_243717_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac9c67c5:;
			{
				jule::Ptr<_20a2b7552_Const> _244617_c = static__20a2b7992_NewI64(-32768LL);;
				(*(_244617_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a9066d14_primI16, ._field_Model=jule::Any(_244617_c, &__jule_any_type19), ._field_Constant=_244617_c});;
			}
		}
		else {
			_case_begin_1ac9c551b:;
			{
				_1a8e4e03c_pushErr(_self_, _243136_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_243136_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac9c5939:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e66719_evalI32TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _246036_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_246036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abe12c12:;
			{
				jule::Ptr<_20a2b7552_Const> _246617_c = static__20a2b7992_NewI64(2147483647LL);;
				(*(_246617_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a90670bc_primI32, ._field_Model=jule::Any(_246617_c, &__jule_any_type19), ._field_Constant=_246617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac00152b:;
			{
				jule::Ptr<_20a2b7552_Const> _247517_c = static__20a2b7992_NewI64(-2147483648LL);;
				(*(_247517_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a90670bc_primI32, ._field_Model=jule::Any(_247517_c, &__jule_any_type19), ._field_Constant=_247517_c});;
			}
		}
		else {
			_case_begin_1ac9c97d9:;
			{
				_1a8e4e03c_pushErr(_self_, _246036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_246036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac9c9c07:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e66a5a_evalI64TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _248936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_248936_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac11e1e8:;
			{
				jule::Ptr<_20a2b7552_Const> _249517_c = static__20a2b7992_NewI64(jule::MAX_I64);;
				(*(_249517_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a9067375_primI64, ._field_Model=jule::Any(_249517_c, &__jule_any_type19), ._field_Constant=_249517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac11e25e:;
			{
				jule::Ptr<_20a2b7552_Const> _250417_c = static__20a2b7992_NewI64(jule::MIN_I64);;
				(*(_250417_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a9067375_primI64, ._field_Model=jule::Any(_250417_c, &__jule_any_type19), ._field_Constant=_250417_c});;
			}
		}
		else {
			_case_begin_1ac11cec7:;
			{
				_1a8e4e03c_pushErr(_self_, _248936_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_248936_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac11d3e5:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e66d9b_evalU8TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _251835_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251835_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac12266e:;
			{
				jule::Ptr<_20a2b7552_Const> _252317_c = static__20a2b7c5b_NewU64(255LLU);;
				(*(_252317_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a906762d_primU8, ._field_Model=jule::Any(_252317_c, &__jule_any_type19), ._field_Constant=_252317_c});;
			}
		}
		else {
			_case_begin_1ac121d77:;
			{
				_1a8e4e03c_pushErr(_self_, _251835_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_251835_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac122273:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e671dc_evalU16TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _253736_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253736_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abaccbc9:;
			{
				jule::Ptr<_20a2b7552_Const> _254217_c = static__20a2b7c5b_NewU64(65535LLU);;
				(*(_254217_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a90678d6_primU16, ._field_Model=jule::Any(_254217_c, &__jule_any_type19), ._field_Constant=_254217_c});;
			}
		}
		else {
			_case_begin_1abacc3d2:;
			{
				_1a8e4e03c_pushErr(_self_, _253736_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_253736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1abacc7cd:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6752d_evalU32TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _255636_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_255636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abad0957:;
			{
				jule::Ptr<_20a2b7552_Const> _256117_c = static__20a2b7c5b_NewU64(4294967295LLU);;
				(*(_256117_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a9067b8e_primU32, ._field_Model=jule::Any(_256117_c, &__jule_any_type19), ._field_Constant=_256117_c});;
			}
		}
		else {
			_case_begin_1abad0160:;
			{
				_1a8e4e03c_pushErr(_self_, _255636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_255636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1abad055b:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6786e_evalU64TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _257536_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257536_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abad36d5:;
			{
				jule::Ptr<_20a2b7552_Const> _258017_c = static__20a2b7c5b_NewU64(jule::MAX_U64);;
				(*(_258017_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a9068178_primU64, ._field_Model=jule::Any(_258017_c, &__jule_any_type19), ._field_Constant=_258017_c});;
			}
		}
		else {
			_case_begin_1abad2ddd:;
			{
				_1a8e4e03c_pushErr(_self_, _257536_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_257536_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1abad32d9:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e67bb0_evalF32TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _259436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_259436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abad6b7d:;
			{
				jule::Ptr<_20a2b7552_Const> _260117_c = static__20a2b85a8_NewF64(340282346638528860000000000000000000000.0);;
				(*(_260117_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a90683ba_primF32, ._field_Model=jule::Any(_260117_c, &__jule_any_type19), ._field_Constant=_260117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abad7684:;
			{
				jule::Ptr<_20a2b7552_Const> _261017_c = static__20a2b85a8_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_261017_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a90683ba_primF32, ._field_Model=jule::Any(_261017_c, &__jule_any_type19), ._field_Constant=_261017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1abad76ea:;
			{
				jule::Ptr<_20a2b7552_Const> _261917_c = static__20a2b85a8_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_261917_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a90683ba_primF32, ._field_Model=jule::Any(_261917_c, &__jule_any_type19), ._field_Constant=_261917_c});;
			}
		}
		else {
			_case_begin_1abad6452:;
			{
				_1a8e4e03c_pushErr(_self_, _259436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_259436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1abad67c6:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e68001_evalF64TypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a875ce89_Token> _263336_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_263336_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1acb1eb3d:;
			{
				jule::Ptr<_20a2b7552_Const> _264017_c = static__20a2b85a8_NewF64(jule::MAX_F64);;
				(*(_264017_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a90685c9_primF64, ._field_Model=jule::Any(_264017_c, &__jule_any_type19), ._field_Constant=_264017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1acb20644:;
			{
				jule::Ptr<_20a2b7552_Const> _264917_c = static__20a2b85a8_NewF64(jule::MIN_F64);;
				(*(_264917_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a90685c9_primF64, ._field_Model=jule::Any(_264917_c, &__jule_any_type19), ._field_Constant=_264917_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1acb206aa:;
			{
				jule::Ptr<_20a2b7552_Const> _265817_c = static__20a2b85a8_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_265817_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_untyped=true, ._field_Kind=_1a90685c9_primF64, ._field_Model=jule::Any(_265817_c, &__jule_any_type19), ._field_Constant=_265817_c});;
			}
		}
		else {
			_case_begin_1acb1e412:;
			{
				_1a8e4e03c_pushErr(_self_, _263336_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_263336_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acb1e786:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e683ec_evalPrimStatic(_1a8e4d9dc_Eval* _self_, jule::Str _267233_kind, jule::Ptr<_1a875ce89_Token> _267244_ident) {
	{
		auto &_match_expr{ _267233_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1acb24329:;
			{
				return _1a8e65905_evalIntTypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1acb24cca:;
			{
				return _1a8e65c46_evalUintTypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1acb24d41:;
			{
				return _1a8e66087_evalI8TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1acb2400a:;
			{
				return _1a8e663c8_evalI16TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1acb24071:;
			{
				return _1a8e66719_evalI32TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1acb240d7:;
			{
				return _1a8e66a5a_evalI64TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1acb2414d:;
			{
				return _1a8e66d9b_evalU8TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1acb24e2e:;
			{
				return _1a8e671dc_evalU16TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1acb24e95:;
			{
				return _1a8e6752d_evalU32TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1acb2500b:;
			{
				return _1a8e6786e_evalU64TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1acb25072:;
			{
				return _1a8e67bb0_evalF32TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1acb250d8:;
			{
				return _1a8e68001_evalF64TypeStatic(_self_, _267244_ident);;
			}
		}
		else {
			_case_begin_1acb20886:;
			{
				_1a8e4e03c_pushErr(_self_, _267244_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_267233_kind, &__jule_any_type4),jule::Any((*(_267244_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acb2090d:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e687e8_evalTypeStatic(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data> _270437_d, jule::Ptr<_1a877a9ac_SubIdentExpr> _270451_si) {
	{
		
		if ((_1a8e8566c_Prim((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb29609:;
			{
				return _1a8e683ec_evalPrimStatic(_self_, _1a8e8ae36_Str(_1a8e8566c_Prim((*_270437_d.alloc)._field_Kind).ptr()), (*(_270451_si))._field_Ident);;
			}
		}
		else if ((_1a8e85e20_Enum((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb2a40c:;
			{
				return _1a8e63c44_evalEnumStatic(_self_, _1a8e85e20_Enum((*_270437_d.alloc)._field_Kind), (*(_270451_si))._field_Ident);;
			}
		}
		else if ((_1a8e861a6_TypeEnum((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb2a473:;
			{
				return _1a8e64140_evalTypeEnumStatic(_self_, _1a8e861a6_TypeEnum((*_270437_d.alloc)._field_Kind), (*(_270451_si))._field_Ident);;
			}
		}
		else if ((_1a8e86be0_Struct((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb292a7:;
			{
				return _1a8e6453b_evalStructStatic(_self_, _1a8e86be0_Struct((*_270437_d.alloc)._field_Kind), (*(_270451_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1acb29241:;
			{
				_1a8e4e03c_pushErr(_self_, (*(_270451_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_270437_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acb29186:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1acb32348_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d66be1_comptimeTypeInfo>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1a8e4bcb5_Data> _272113_cd = _1a8d6cde5_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1a8e4e03c_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1a8e4bcb5_Data> _1acb369bd_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d57d8b_comptimeStructField>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1a8e4bcb5_Data> _272113_cd = _1a8d5973e_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1a8e4e03c_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1a8e4bcb5_Data> _1acb3b0cc_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d5e403_comptimeEnumField>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1a8e4bcb5_Data> _272113_cd = _1a8d6048c_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1a8e4e03c_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1a8e4bcb5_Data> _1acb40730_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d61d95_comptimeParam>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1a8e4bcb5_Data> _272113_cd = _1a8d63ced_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1a8e4e03c_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1a8e4bcb5_Data> _1acb450b4_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d5b147_comptimeStatic>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1a8e4bcb5_Data> _272113_cd = _1a8d5ca72_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1a8e4e03c_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1a8e4bcb5_Data> _1acb496c3_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d6d203_comptimeValue>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1a8e4bcb5_Data> _272113_cd = _1a8d70744_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1a8e4e03c_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1a8e4bcb5_Data> _1acb4dcd2_comptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8d7214c_comptimeFile>* _272057_ct, jule::Ptr<_1a8e4bcb5_Data>* _272077_d, jule::Ptr<_1a877a9ac_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1a8e4bcb5_Data> _272113_cd = _1a8d73a88_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1a8e4e03c_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}



inline __jule_tuple_x_1a8e4bcb5_Data__jule_tuple_bool _1a8e6919a_tryComptimeObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _272846_d, jule::Ptr<_1a877a9ac_SubIdentExpr> _272860_si) {
	__jule_tuple_x_1a8e4bcb5_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1a8e89033_comptimeTypeInfo((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb30764:;
			{
				jule::Ptr<_1a8d66be1_comptimeTypeInfo> _273117_ct = _1a8e89033_comptimeTypeInfo((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1acb32348_comptimeObjSubIdent(_self_, &(_273117_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a8e87c46_comptimeStructField((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb30357:;
			{
				jule::Ptr<_1a8d57d8b_comptimeStructField> _273417_ct = _1a8e87c46_comptimeStructField((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1acb369bd_comptimeObjSubIdent(_self_, &(_273417_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a8e88263_comptimeEnumField((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb303ce:;
			{
				jule::Ptr<_1a8d5e403_comptimeEnumField> _273717_ct = _1a8e88263_comptimeEnumField((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1acb3b0cc_comptimeObjSubIdent(_self_, &(_273717_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a8e88780_comptimeParam((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb30456:;
			{
				jule::Ptr<_1a8d61d95_comptimeParam> _274017_ct = _1a8e88780_comptimeParam((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1acb40730_comptimeObjSubIdent(_self_, &(_274017_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a8e89550_comptimeStatic((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb304cd:;
			{
				jule::Ptr<_1a8d5b147_comptimeStatic> _274317_ct = _1a8e89550_comptimeStatic((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1acb450b4_comptimeObjSubIdent(_self_, &(_274317_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a8e897d6_comptimeValue((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb30555:;
			{
				jule::Ptr<_1a8d6d203_comptimeValue> _274617_ct = _1a8e897d6_comptimeValue((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1acb496c3_comptimeObjSubIdent(_self_, &(_274617_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a8e89a6c_comptimeFile((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb305cc:;
			{
				jule::Ptr<_1a8d7214c_comptimeFile> _274917_ct = _1a8e89a6c_comptimeFile((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1acb4dcd2_comptimeObjSubIdent(_self_, &(_274917_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1acb302e1:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1acb30247:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e69596_evalObjSubIdent(_1a8e4d9dc_Eval* _self_, jule::Ptr<_1a8e4bcb5_Data> _275638_d, jule::Ptr<_1a877a9ac_SubIdentExpr> _275652_si) {
	if (_1a8760871_IsIgnoreIdent((*((*(_275652_si))._field_Ident))._field_Kind)) {
		_1a8e4e03c_pushErr(_self_, (*_275652_si.alloc)._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1a8e4bcb5_Data> _276317_compData;
		jule::Bool _276327_ok;
		({
			__jule_tuple_x_1a8e4bcb5_Data__jule_tuple_bool __jule_assign_result = _1a8e6919a_tryComptimeObjSubIdent(_self_, &(_275638_d), _275652_si);
			_276317_compData = __jule_assign_result.__jule_result_arg0;
			_276327_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_276327_ok) {
			return _276317_compData;;
		};
	};
	jule::Ptr<_1a8e8301b_TypeKind> _276913_kind = (*(_275638_d))._field_Kind;;
	{
		
		if ((_1a8e85b89_Ptr((*_275638_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb53e3b:;
			{
				jule::Ptr<_1a8e92dd8_Ptr> _277213_ptr = _1a8e85b89_Ptr((*_275638_d.alloc)._field_Kind);;
				if (_1a8e93922_IsUnsafe(_277213_ptr.ptr())) {
					goto _match_end_1acb53d92;
				};
				if ((!(_1a8e4ea32_isUnsafe(_self_)))) {
					_1a8e4e03c_pushErr(_self_, (*_275652_si.alloc)._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_276913_kind=(*(_1a8e85b89_Ptr((*_275638_d.alloc)._field_Kind)))._field_Elem;
				_1a8e7ea0c_makeImplicitDeref(&(_275638_d), (*_275652_si.alloc)._field_Ident);
			}
		}
		else if ((_1a8e85903_Sptr((*_275638_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb53ed5:;
			{
				_276913_kind=(*(_1a8e85903_Sptr((*_275638_d.alloc)._field_Kind)))._field_Elem;
				_1a8e7ea0c_makeImplicitDeref(&(_275638_d), (*_275652_si.alloc)._field_Ident);
			}
		}
		_match_end_1acb53d92:;
	};
	{
		
		if ((_1a8e86e76_Trait((*_275638_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb54447:;
			{
				return _1a8e649e2_evalTraitSubIdent(_self_, _275638_d, _1a8e86e76_Trait((*_275638_d.alloc)._field_Kind), (*_275652_si.alloc)._field_Ident);;
			}
		}
		else if ((_1a8e86be0_Struct(_276913_kind.ptr()) != nullptr)) {
			_case_begin_1acb575d2:;
			{
				jule::Ptr<_1a8d29ba4_StructIns> _279013_s = _1a8e86be0_Struct(_276913_kind);;
				if (_1a8e7bc7e_isInstancedStruct(_279013_s)) {
					jule::Bool _279221_usedReferenceElem = (_1a8e85903_Sptr((*_275638_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1a8e655b4_evalStructSubIdent(_self_, _275638_d, _1a8e86be0_Struct(_276913_kind), _275652_si, _279221_usedReferenceElem);;
				};
			}
		}
		_match_end_1acb579ab:;
	};
	_1a8e4e03c_pushErr(_self_, (*_275652_si.alloc)._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_275638_d.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e698d7_evalSubIdent(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877a9ac_SubIdentExpr> _280036_si) {
	jule::Ptr<_1a8e8301b_TypeKind> _280113_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_280113_prefix;
	});;
	jule::Ptr<_1a8e4bcb5_Data> _280413_d = _1a8e6ae38_evalExprKind(_self_, (*((*(_280036_si))._field_Expr))._field_Kind);;
	if ((_280413_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_280413_d))._field_Decl) {
		return _1a8e687e8_evalTypeStatic(_self_, _280413_d, _280036_si);;
	};
	return _1a8e69596_evalObjSubIdent(_self_, _280413_d, _280036_si);;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e69c28_evalTuple(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877848d_TupleExpr> _281433_tup) {
	jule::Ptr<_1a8e90bd8_Tuple> _281513_tupT = jule::new_ptr<_1a8e90bd8_Tuple>();;
	(*_281513_tupT.alloc)._field_Types=jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>>::alloc(0LL, (*(_281433_tup))._field_Expr.len());
	jule::Ptr<_1a8d34818_TupleExprModel> _281813_model = jule::new_ptr<_1a8d34818_TupleExprModel>(_1a8d34818_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1a8e4bcb5_Data>>::alloc(0LL, (*_281433_tup.alloc)._field_Expr.len())});;
	jule::Bool _282213_ok = true;;
	{
		auto expr = &((*_281433_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb62477:;
		if (it != expr_end) {
			jule::Ptr<_1a8777899_Expr> _282321_expr = *it;
			{
				jule::Ptr<_1a8e4bcb5_Data> _282417_d = _1a8e6bc4c_evalExpr(_self_, _282321_expr);;
				if ((_282417_d == nullptr)) {
					_282213_ok=false;
					goto _iter_next_1acb62477;
				};
				(*_281513_tupT.alloc)._field_Types=jule::append((*_281513_tupT.alloc)._field_Types,jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>>::make({(*(_282417_d))._field_Kind}));
				(*(_281813_model))._field_Datas=jule::append((*_281813_model.alloc)._field_Datas,jule::Slice<jule::Ptr<_1a8e4bcb5_Data>>::make({_282417_d}));
			}
			_iter_next_1acb62477:;
			++it;
			goto _iter_begin_1acb62477;
		}
		_iter_end_1acb62477:;
	};
	if ((!(_282213_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_281513_tupT, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data23)}), ._field_Model=jule::Any(_281813_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6a124_evalMap(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8e91788_Map> _284331_m, jule::Ptr<_1a877cd99_BraceLit> _284344_lit) {
	jule::Ptr<_1a8d327e4_MapExprModel> _284413_model = jule::new_ptr<_1a8d327e4_MapExprModel>(_1a8d327e4_MapExprModel{._field_KeyKind=(*(_284331_m))._field_Key, ._field_ValKind=(*_284331_m.alloc)._field_Val, });;
	{
		auto expr = &((*(_284344_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb66239:;
		if (it != expr_end) {
			jule::Ptr<_1a8777899_Expr> _284921_expr = *it;
			{
				{
					auto &_match_expr{ (*(_284921_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1acb677ce:;
						{
							goto _match_end_1acb66b30;
						}
					}
					else {
						_case_begin_1acb66b85:;
						{
							_1a8e4e03c_pushErr(_self_.ptr(), (*(_284344_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1acb66b30:;
				};
				jule::Ptr<_1a877d6c4_KeyValPair> _285917_pair = (*(_284921_expr))._field_Kind.cast_ptr<_1a877d6c4_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1a8e4bcb5_Data> _286117_key = _1a8e6bc4c_evalExpr(_self_, (*(_285917_pair))._field_Key);;
				if ((_286117_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1a8e4bcb5_Data> _286617_val = _1a8e6bc4c_evalExpr(_self_, (*_285917_pair.alloc)._field_Val);;
				if ((_286617_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1a8dd0d26_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284331_m.alloc)._field_Key), &(_286117_key), &((*((*_285917_pair.alloc)._field_Key))._field_Token))) {
					_1a8dcb98c_checkAssignType((*_self_.alloc)._field_s, false, &((*_284331_m.alloc)._field_Key), &(_286117_key), (*(*_285917_pair.alloc)._field_Key.alloc)._field_Token);
				};
				if (_1a8dd0d26_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284331_m.alloc)._field_Val), &(_286617_val), &((*((*_285917_pair.alloc)._field_Val))._field_Token))) {
					_1a8dcb98c_checkAssignType((*_self_.alloc)._field_s, false, &((*_284331_m.alloc)._field_Val), &(_286617_val), (*(*_285917_pair.alloc)._field_Val.alloc)._field_Token);
				};
				(*(_284413_model))._field_Entries=jule::append((*_284413_model.alloc)._field_Entries,jule::Slice<jule::Ptr<_1a8d3233d_KeyValPairExprModel>>::make({jule::new_ptr<_1a8d3233d_KeyValPairExprModel>(_1a8d3233d_KeyValPairExprModel{._field_Key=(*(_286117_key))._field_Model, ._field_Val=(*(_286617_val))._field_Model})}));
			}
			_iter_next_1acb66239:;
			++it;
			goto _iter_begin_1acb66239;
		}
		_iter_end_1acb66239:;
	};
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_284331_m, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Model=jule::Any(_284413_model, &__jule_any_type99), });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6a465_evalBraceLit(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877cd99_BraceLit> _289236_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1acb71024:;
			{
				_1a8e4e03c_pushErr(_self_, (*(_289236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a8e8720c_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1acb7108a:;
			{
				return _1a8e6a124_evalMap(_self_, _1a8e8720c_Map((*_self_.alloc)._field_prefix), _289236_lit);;
			}
		}
		else if ((_1a8e86be0_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1acb71101:;
			{
				return _1a8e61824_evalStructLitExplicit(_self_, _1a8e86be0_Struct((*_self_.alloc)._field_prefix), (*(_289236_lit))._field_Exprs, (*_289236_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1acb70364:;
			{
				_1a8e4e03c_pushErr(_self_.ptr(), (*(_289236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1acb70265:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6a7a6_evalAnonFunc(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8785225_FnDecl> _290736_decl) {
	_1a8e94dc9_typeChecker _290813_tc = _1a8e94dc9_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, };;
	jule::Ptr<_1a8d3ee72_FnIns> _291313_ins = _1a8e9baa1_buildFunc(&_290813_tc, _290736_decl);;
	if ((_291313_ins == nullptr)) {
		return nullptr;;
	};
	(*(_291313_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _291813_captured = jule::Slice<jule::Ptr<_1a8de41ad_Var>>::alloc(0LL, 0LL);;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)) {
			_case_begin_1acb75864:;
			{
				jule::Ptr<_1a8d863c5_scopeChecker> _292117_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1a8d863c5_scopeChecker>((jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0);;
				jule::Ptr<_1a8d863c5_scopeChecker> _292217_scc = _1a8d9845e_newChildChecker(_292117_sc);;
				(*(_292217_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a8d84d52_scopeLabel>>>(nullptr);
				(*_292217_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a8d853d5_scopeGoto>>>(nullptr);
				(*_292217_scc.alloc)._field_owner=_291313_ins;
				(*_292217_scc.alloc)._field_childIndex=0LL;
				(*_292217_scc.alloc)._field_it=0LLU;
				(*_292217_scc.alloc)._field_cse=0LLU;
				(*_292217_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1a8de41ad_Var>>>)((&(_291813_captured))));
				_1a8ddde00_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_291313_ins), &(_292217_scc));
			}
		}
		else {
			_case_begin_1acb76843:;
			{
				_1a8dde51b_checkFnIns((*_self_.alloc)._field_s, &(_291313_ins));
			}
		}
		_match_end_1acb767dd:;
	};
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_291313_ins, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data1)}), ._field_Model=jule::Any(jule::new_ptr<_1a8d31e64_AnonFnExprModel>(_1a8d31e64_AnonFnExprModel{._field_Captured=_291813_captured, ._field_Func=_291313_ins, ._field_Global=_1a8e4ecb8_isGlobal(_self_)}), &__jule_any_type100), });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6aae7_evalBinary(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a877ae63_BinaryExpr> _294534_op) {
	_1a8e6e1a0_binaryEval _294613_bs = static__1a8e6e755_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1a8e8aae5_Prim> _294913_prim = _1a8e8566c_Prim((*_self_.alloc)._field_prefix);;
		if (((_294913_prim == nullptr) || (!(_20a2b6ead_IsNum(_1a8e8ae36_Str(_294913_prim.ptr())))))) {
			jule::Ptr<_1a8e8301b_TypeKind> _295121_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_295121_prefix;
			});;
			return _1a8e7a08a_eval(&_294613_bs, &(_294534_op));;
		};
	};
	return _1a8e7a08a_eval(&_294613_bs, &(_294534_op));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6ae38_evalExprKind(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Any _296036_kind) {
	{
		auto &_match_expr{ _296036_kind };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1acb801ed:;
			{
				jule::Ptr<_1a8777b63_RangeExpr> _296317_e = _296036_kind.unsafe_cast_ptr<_1a8777b63_RangeExpr>();;
				return _1a8e6ae38_evalExprKind(_self_, (*((*(_296317_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1acb8042e:;
			{
				return _1a8e5156c_evalLit(_self_.ptr(), _296036_kind.unsafe_cast_ptr<_1a8778834_LitExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1acb80495:;
			{
				return _1a8e562a8_evalIdent(_self_.ptr(), _296036_kind.unsafe_cast_ptr<_1a87791b4_IdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1acb8050b:;
			{
				return _1a8e565e9_evalUnary(_self_, _296036_kind.unsafe_cast_ptr<_1a8779956_UnaryExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1acb80572:;
			{
				return _1a8e5693a_evalVariadic(_self_, _296036_kind.unsafe_cast_ptr<_1a8779d30_VariadicExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1acb805d8:;
			{
				return _1a8e56c7b_evalUnsafe(_self_, _296036_kind.unsafe_cast_ptr<_1a8778c0d_UnsafeExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1acb8064e:;
			{
				return _1a8e578b4_evalSliceExpr(_self_, _296036_kind.unsafe_cast_ptr<_1a877de00_SliceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1acb80a06:;
			{
				return _1a8e5b05a_evalIndexing(_self_, _296036_kind.unsafe_cast_ptr<_1a877e85c_IndexingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1acb80a6c:;
			{
				return _1a8e5c38b_evalSlicing(_self_, _296036_kind.unsafe_cast_ptr<_1a877eebc_SlicingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1acb80ad3:;
			{
				return _1a8e6102c_evalCast(_self_, _296036_kind.unsafe_cast_ptr<_1a877a209_CastExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1acb80b49:;
			{
				return _1a8e6136d_evalNsSelection(_self_.ptr(), _296036_kind.unsafe_cast_ptr<_1a877a5d3_NsSelectionExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1acb80bc1:;
			{
				return _1a8e61b65_evalStructLit(_self_, _296036_kind.unsafe_cast_ptr<_1a877c8e3_StructLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1acb80c48:;
			{
				return _1a8e6223c_evalType(_self_.ptr(), _296036_kind.unsafe_cast_ptr<_1a8773565_TypeDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1acb80cc0:;
			{
				return _1a8e63848_evalFnCall(_self_, _296036_kind.unsafe_cast_ptr<_1a877b5c3_FnCallExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1acb80d47:;
			{
				return _1a8e698d7_evalSubIdent(_self_, _296036_kind.unsafe_cast_ptr<_1a877a9ac_SubIdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1acb80dbe:;
			{
				return _1a8e69c28_evalTuple(_self_, _296036_kind.unsafe_cast_ptr<_1a877848d_TupleExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1acb80e46:;
			{
				return _1a8e6a465_evalBraceLit(_self_, _296036_kind.unsafe_cast_ptr<_1a877cd99_BraceLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1acb80ebd:;
			{
				return _1a8e6a7a6_evalAnonFunc(_self_, _296036_kind.unsafe_cast_ptr<_1a8785225_FnDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1acb81045:;
			{
				return _1a8e6aae7_evalBinary(_self_, _296036_kind.unsafe_cast_ptr<_1a877ae63_BinaryExpr>());;
			}
		}
		else {
			_case_begin_1acb803b8:;
			{
				return nullptr;;
			}
		}
		_match_end_1acb80363:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6b279_eval1(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8777899_Expr> _300829_expr) {
	jule::Ptr<_1a8e4bcb5_Data> _300913_d = _1a8e6ae38_evalExprKind(_self_, (*(_300829_expr))._field_Kind);;
	if (((_300913_d == nullptr) || ((*(_300913_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1a8e86959_Fn((*(_300913_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb8c859:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _301617_f = _1a8e86959_Fn((*(_300913_d))._field_Kind.ptr());;
				if (_1a8d41407_IsBuiltin(_301617_f.ptr())) {
					_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), (*_300829_expr.alloc)._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1acb8be52;
				};
				if (((*_301617_f.alloc)._field_Generics.len() != (*((*_301617_f.alloc)._field_Decl))._field_Generics.len())) {
					_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_300829_expr.alloc)._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				} else if (((!((*((*_301617_f.alloc)._field_Decl))._field_Statically)) && _1a8d3c69a_IsMethod((*_301617_f.alloc)._field_Decl))) {
					_1a8dc3e7e_pushErr((*_self_.alloc)._field_s, (*_300829_expr.alloc)._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				} else {
					(*_301617_f.alloc)._field_AsAnon=true;
				};
			}
		}
		_match_end_1acb8be52:;
	};
	return _300913_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6b5ba_eval(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8777899_Expr> _303628_expr) {
	jule::Ptr<_1a8e4bcb5_Data> _303713_d = _1a8e6b279_eval1(_self_, _303628_expr);;
	if ((_303713_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1a8e87729_comptime((*(_303713_d))._field_Kind.ptr()))) {
		_1a8dc3e7e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_303628_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _303713_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6b90b_evalExpr1(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8777899_Expr> _305133_expr) {
	jule::Ptr<_1a8e4bcb5_Data> _305213_d = _1a8e6b279_eval1(_self_, _305133_expr);;
	{
		
		if ((_305213_d == nullptr)) {
			_case_begin_1acb95a71:;
			{
				return nullptr;;
			}
		}
		else if ((*(_305213_d))._field_Decl) {
			_case_begin_1acb95b1a:;
			{
				_1a8e4e03c_pushErr(_self_, (*(_305133_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1acb959e9:;
			{
				return _305213_d;;
			}
		}
		_match_end_1acb95983:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6bc4c_evalExpr(jule::Ptr<_1a8e4d9dc_Eval> _self_, jule::Ptr<_1a8777899_Expr> _306732_expr) {
	jule::Ptr<_1a8e4bcb5_Data> _306813_d = _1a8e6b5ba_eval(_self_, _306732_expr);;
	{
		
		if ((_306813_d == nullptr)) {
			_case_begin_1acb97963:;
			{
				return nullptr;;
			}
		}
		else if ((*(_306813_d))._field_Decl) {
			_case_begin_1acb97a0c:;
			{
				_1a8e4e03c_pushErr(_self_, (*(_306732_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1acb978db:;
			{
				return _306813_d;;
			}
		}
		_match_end_1acb97875:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e4d9dc_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1a8e6c214_unaryEval static__1a8e6c654_new(jule::Ptr<_1a8e4d9dc_Eval> _308823_e) {
	return _1a8e6c214_unaryEval{._field_e=_308823_e, };;
}



inline void _1a8e6c852_minus(_1a8e6c214_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1acb9968a:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a8e8566c_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb99a75:;
			{
				if ((!(_20a2b6ead_IsNum(_1a8e833d4_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a8e86be0_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb99349:;
			{
				if (((*(_1a8e86be0_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1acb992d3:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1acb99228:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a8e4c6bc_IsConst((*(_self_))._field_d)) {
		{
			
			if (_20a2bc05c_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acb9dd87:;
				{
					_20a2bb08e_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_20a2b9961_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_20a2bb523_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acb9de75:;
				{
					_20a2ba4bc_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_20a2b8e27_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_20a2bb7a9_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acb9da46:;
				{
					_20a2ba4bc_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_20a2b9be7_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1acb9d9be:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3126:17"));;
				}
			}
			_match_end_1acb9d925:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a8d2e527_UnaryExprModel>(_1a8d2e527_UnaryExprModel{._field_Expr=jule::new_ptr<_1a8e4bcb5_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a8e6ca50_plus(_1a8e6c214_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1acba44ec:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a8e8566c_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acba48d7:;
			{
				if ((!(_20a2b6ead_IsNum(_1a8e833d4_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a8e86be0_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acba41ab:;
			{
				if (((*(_1a8e86be0_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1acba4145:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1acba4046:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a8e4c6bc_IsConst((*(_self_))._field_d)) {
		{
			
			if (_20a2bc05c_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acba8be9:;
				{
					_20a2bb08e_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_20a2b9961_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_20a2bb523_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acba8cd7:;
				{
					_20a2ba4bc_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_20a2b8e27_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_20a2bb7a9_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acba88a8:;
				{
					_20a2ba4bc_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_20a2b9be7_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1acba8831:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3171:17"));;
				}
			}
			_match_end_1acba8787:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a8d2e527_UnaryExprModel>(_1a8d2e527_UnaryExprModel{._field_Expr=jule::new_ptr<_1a8e4bcb5_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a8e6cc4d_caret(_1a8e6c214_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1acbae33c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a8e8566c_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acbae727:;
			{
				if ((!(_20a2b68d6_IsInt(_1a8e833d4_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a8e86be0_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acbadeeb:;
			{
				if (((*(_1a8e86be0_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1acbade85:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1acbadd86:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a8e4c6bc_IsConst((*(_self_))._field_d)) {
		{
			
			if (_20a2bb523_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acbb3a28:;
				{
					_20a2ba4bc_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_20a2b8e27_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_20a2bb7a9_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acbb3b16:;
				{
					_20a2ba775_SetU64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_20a2b91ad_ReadU64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1acbb3671:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3214:17"));;
				}
			}
			_match_end_1acbb35c7:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a8d2e527_UnaryExprModel>(_1a8d2e527_UnaryExprModel{._field_Expr=jule::new_ptr<_1a8e4bcb5_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a8e6ce4b_excl(_1a8e6c214_unaryEval* _self_) {
	jule::Ptr<_1a8e8aae5_Prim> _32289_t = _1a8e8566c_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32289_t == nullptr) || (!(_1a8e8dce6_IsBool(_32289_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a8e4c6bc_IsConst((*(_self_))._field_d)) {
		{
			
			if (_20a2bba40_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1acbb9c93:;
				{
					_20a2baa2d_SetBool((*(*(_self_))._field_d.alloc)._field_Constant, (!(_20a2b9444_ReadBool((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1acbb98db:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3242:17"));;
				}
			}
			_match_end_1acbb9831:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a8d2e527_UnaryExprModel>(_1a8d2e527_UnaryExprModel{._field_Expr=jule::new_ptr<_1a8e4bcb5_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a8e6d149_star(_1a8e6c214_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1a8d2e527_UnaryExprModel>(_1a8d2e527_UnaryExprModel{._field_Expr=jule::new_ptr<_1a8e4bcb5_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1a8e85b89_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acbbd5e3:;
			{
				if ((!(_1a8e4ea32_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1a8e4e03c_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a8e92dd8_Ptr> _326717_t = _1a8e85b89_Ptr((*(*(_self_))._field_d.alloc)._field_Kind);;
				if (_1a8e93922_IsUnsafe(_326717_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_326717_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1a8e85903_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acbbd9cd:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1a8e85903_Sptr((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1acbbd23b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1acbbc25c:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1a8e6d347_amper(_1a8e6c214_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1acbc6bb2:;
			{
				jule::Ptr<_1a8d2edeb_StructLitExprModel> _328917_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1a8d2edeb_StructLitExprModel>();;
				_1a8e7ade3_makeStructLitAlloc(&((*(_self_))._field_d), &(_328917_lit));
			}
		}
		else {
			_case_begin_1acbc4143:;
			{
				{
					
					if (_1a8e9de05_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1acbc4a06:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8e92dd8_Ptr>(_1a8e92dd8_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data26)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a8d2e527_UnaryExprModel>(_1a8d2e527_UnaryExprModel{._field_Expr=jule::new_ptr<_1a8e4bcb5_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1acbc3c47:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1acbc45c7:;
				};
			}
		}
		_match_end_1acbc40dd:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1a8e6d545_typeDecl(_1a8e6c214_unaryEval* _self_) {
	_1a8e94dc9_typeChecker _331413_tc = _1a8e94dc9_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1acbca6dd:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9a2b9_buildPtrFromType(&_331413_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data26)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1acbcc206:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e99b37_buildSptrFromType(&_331413_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data21)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else {
			_case_begin_1acbc9d08:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1acbca347:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1a8e6d743_evalData(_1a8e6c214_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1acbd0d75:;
			{
				jule::Ptr<_1a8e8301b_TypeKind> _333917_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1a8e6b5ba_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_333917_prefix;
			}
		}
		else {
			_case_begin_1acbca3ad:;
			{
				(*(_self_))._field_d=_1a8e6b5ba_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1acbd0979:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e6da84_eval(_1a8e6c214_unaryEval* _self_, jule::Ptr<_1a8779956_UnaryExpr> _334827_u) {
	(*(_self_))._field_u=_334827_u;
	_1a8e6d743_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1a8e6d545_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1a8e8301b_TypeKind> _33599_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1acbd54ea:;
			{
				_1a8e6c852_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1acbd5561:;
			{
				_1a8e6ca50_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1acbd55c7:;
			{
				_1a8e6cc4d_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1acbd563d:;
			{
				_1a8e6ce4b_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1acbd56a4:;
			{
				_1a8e6d149_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1acbd571a:;
			{
				_1a8e6d347_amper(_self_);
			}
		}
		else {
			_case_begin_1acbd4eab:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1acbd5484:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1acbd5c15:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str(_33599_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1a8e4c6bc_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1acbd3bad:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1acbd772d:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e6c214_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1a8e6e1a0_binaryEval static__1a8e6e755_newPlain(jule::Ptr<_1a8e4d9dc_Eval> _339628_e) {
	return _1a8e6e1a0_binaryEval{._field_e=_339628_e, };;
}



inline _1a8e6e1a0_binaryEval static__1a8e6eac9_new(jule::Ptr<_1a8e4d9dc_Eval> _340223_e, jule::Ptr<_1a875ce89_Token> _340237_op) {
	return _1a8e6e1a0_binaryEval{._field_e=_340223_e, ._field_op=_340237_op};;
}



inline jule::Bool _1a8e6ed60_checkTypeCompatibility(_1a8e6e1a0_binaryEval* _self_) {
	return _1a8dcccbd_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1a8e700e6_checkStructCommonOperatorCompatibility(_1a8e6e1a0_binaryEval* _self_) {
	jule::Ptr<_1a8d3ee72_FnIns> _341617_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1acbdce92:;
			{
				_341617_overload=(*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1acbdcb51:;
			{
				_341617_overload=(*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1acbdcbb7:;
			{
				_341617_overload=(*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1acbdcc2d:;
			{
				_341617_overload=(*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1acbdcc94:;
			{
				_341617_overload=(*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1acbdcd0a:;
			{
				_341617_overload=(*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1acbdcd71:;
			{
				_341617_overload=(*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1acbde47c:;
			{
				_341617_overload=(*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1acbde4e3:;
			{
				_341617_overload=(*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1acbde559:;
			{
				_341617_overload=(*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1acbdc5e0:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1acbdcada:;
	};
	if ((_341617_overload == nullptr)) {
		_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1a8d3dde9_ParamIns> _344813_p = (*(_341617_overload))._field_Params[1LL];;
	return _1a8dcb98c_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_344813_p))._field_Decl))._field_Reference, &((*_344813_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e7037c_evalComptimeTypeInfo(_1a8e6e1a0_binaryEval* _self_) {
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _345313_r = _1a8e89033_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_345313_r == nullptr)) {
		_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d66be1_comptimeTypeInfo> _345813_l = _1a8e89033_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1acbed117:;
			{
				jule::Ptr<_20a2b7552_Const> _346117_constant = static__20a2b8025_NewBool(_1a8e83725_Equal((*(_345813_l))._field_base, (*(_345313_r))._field_base));;
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_346117_constant, &__jule_any_type19), ._field_Constant=_346117_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1acbee49d:;
			{
				jule::Ptr<_20a2b7552_Const> _346817_constant = static__20a2b8025_NewBool((!(_1a8e83725_Equal((*(_345813_l))._field_base, (*(_345313_r))._field_base))));;
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, ._field_Model=jule::Any(_346817_constant, &__jule_any_type19), ._field_Constant=_346817_constant});;
			}
		}
		else {
			_case_begin_1acbec974:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acbecc60:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e70613_evalNil(_1a8e6e1a0_binaryEval* _self_) {
	if ((!(_1a8e84db9_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1acc03c55:;
			{
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else {
			_case_begin_1acc01abb:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc0389d:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e70899_evalEnum(_1a8e6e1a0_binaryEval* _self_) {
	jule::Ptr<_1a8d52a56_Enum> _349913_enm = _1a8e85e20_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1acc06032:;
			{
				jule::Ptr<_1a8e8301b_TypeKind> _350317_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1a8e85e20_Enum((*(*(_self_))._field_r.alloc)._field_Kind) != nullptr)) {
					_350317_rkind=(*((*(_1a8e85e20_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1a8dcc3e9_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_349913_enm))._field_Kind.alloc)._field_Kind), &(_350317_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		_match_end_1acc05ebb:;
	};
	if (((_1a8e85e20_Enum((*(*(_self_))._field_r.alloc)._field_Kind) == nullptr) || (_349913_enm != _1a8e85e20_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))) {
		_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1acc0b9d8:;
			{
				if ((!(_20a2b6ead_IsNum(_1a8e833d4_Str((*(*_349913_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1acc0ca1c:;
			{
				jule::Ptr<_1a8d51ed9_EnumItem> _353313_first = (*_349913_enm.alloc)._field_Items[0LL];;
				{
					
					if (_20a2bb523_IsI64((*((*((*(_353313_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1acc11108:;
						{
							if ((_20a2b8e27_ReadI64((*(*(*_353313_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LL)) {
								goto _julec_label_1acc1611e;
							};
							goto _julec_label_1acc12318;
						}
					}
					else if (_20a2bb7a9_IsU64((*((*((*(_353313_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1acc111e6:;
						{
							if ((_20a2b91ad_ReadU64((*(*(*_353313_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LLU)) {
								goto _julec_label_1acc1611e;
							};
							goto _julec_label_1acc12318;
						}
					}
					else {
						_case_begin_1acc10c51:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3546:17"));;
						}
					}
					_match_end_1acc10bda:;
				};
				_julec_label_1acc12318:;
				_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1a8e4e3a0_pushSuggestion((*(_self_))._field_e, jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1acc1611e:;
				goto _case_begin_1acc0ca83;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1acc0ca83:;
			{
				if (((_1a8e8566c_Prim((*(*_349913_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_20a2b68d6_IsInt(_1a8e8ae36_Str(_1a8e8566c_Prim((*(*_349913_enm.alloc)._field_Kind.alloc)._field_Kind).ptr())))))) {
					_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1acc08562:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc0b631:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e70b30_evalTypeEnum(_1a8e6e1a0_binaryEval* _self_) {
	jule::Ptr<_1a8d54261_TypeEnum> _356613_enm = _1a8e861a6_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1a8e6ed60_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1acc1ad7c:;
			{
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else {
			_case_begin_1acc1a211:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8d545a2_Str(_356613_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc1a981:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e70db6_evalSptr(_1a8e6e1a0_binaryEval* _self_) {
	if ((!(_1a8e6ed60_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1acc1d269:;
			{
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else {
			_case_begin_1acc1c1d0:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc1cdb2:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e7114c_evalPtr(_1a8e6e1a0_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1acc2049c:;
			{
				if ((!(_1a8e6ed60_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1acc21833:;
			{
				if ((_1a8e85b89_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1a8e93922_IsUnsafe(_1a8e85b89_Ptr((*(*(_self_))._field_l.alloc)._field_Kind).ptr())) {
					_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				};
				if ((!(_1a8e7c07b_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1acc1ebb6:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc1ea1d:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e713d3_evalArr(_1a8e6e1a0_binaryEval* _self_) {
	if ((!(_1a8e6ed60_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1acc28043:;
			{
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else {
			_case_begin_1acc2323b:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc27b8b:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e71669_evalSlc(_1a8e6e1a0_binaryEval* _self_) {
	if ((!(_1a8e6ed60_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1acc2a6c7:;
			{
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else {
			_case_begin_1acc2963d:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc2a320:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e71900_evalStruct(_1a8e6e1a0_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1acc2c047:;
			{
				if (((*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1acc2c663:;
			{
				if (((*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1acc2c6c9:;
			{
				if (((*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1acc2c740:;
			{
				if (((*(_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1acc2c7a6:;
			{
				if ((!(_1a8e6ed60_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		_match_end_1acc2be7b:;
	};
	if ((!(_1a8e700e6_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e71b86_evalTrait(_1a8e6e1a0_binaryEval* _self_) {
	if ((!(_1a8e6ed60_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1acc38608:;
			{
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else {
			_case_begin_1acc379c0:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc38251:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e71e1c_evalAny(_1a8e6e1a0_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1acc3a83b:;
			{
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else {
			_case_begin_1acc3a055:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc39dac:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e721a3_evalBool(_1a8e6e1a0_binaryEval* _self_) {
	if ((!(_1a8e6ed60_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(54LLU) || _match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1acc3ca3b:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1acc3b9a2:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc3c684:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e72439_evalStr(_1a8e6e1a0_binaryEval* _self_) {
	jule::Str _376513_rk = _1a8e833d4_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_376513_rk.equal("str", 3))) {
		_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_376513_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1acc4180e:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1acc4269a:;
			{
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		else {
			_case_begin_1acc40610:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc41413:;
	};
}



inline void _1a8e72637_setTypeToGreater(_1a8e6e1a0_binaryEval* _self_) {
	jule::Ptr<_1a8e8aae5_Prim> _37909_lp = _1a8e8566c_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1a8e8aae5_Prim> _37919_rp = _1a8e8566c_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (_1a8e4c6bc_IsConst((*(_self_))._field_l)) {
		if ((!(_1a8e4c6bc_IsConst((*(_self_))._field_r)))) {
			(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_37919_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1acc4712d;
	};
	if (_1a8e4c6bc_IsConst((*(_self_))._field_r)) {
		(*(*(*(_self_))._field_r.alloc)._field_Constant.alloc)._field_Kind=(*(_37909_lp))._field_Kind;
		return;;
	};
	_julec_label_1acc4712d:;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*(*(_self_))._field_r.alloc)._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1a8e4c6bc_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37919_rp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
		return;;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return;;
	};
	if (_20a2b5198_IsGreater((*_37919_rp.alloc)._field_Kind, (*_37909_lp.alloc)._field_Kind)) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1a8e4c6bc_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37919_rp.alloc)._field_Kind;
		};
	};
}



inline void _1a8e728e0_checkModData(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _382336_d) {
	if ((!(_1a8e4c6bc_IsConst((*(_382336_d)).ptr())))) {
		if (((_1a8e8566c_Prim((*((*(_382336_d))))._field_Kind.ptr()) == nullptr) || (!(_20a2b68d6_IsInt((*(_1a8e8566c_Prim((*((*(_382336_d))))._field_Kind)))._field_Kind))))) {
			_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a8e32c57_sigAssignable(jule::Str::lit("i64", 3), _382336_d)) {
			_case_begin_1acc4ee49:;
			{
				_20a2ba4bc_SetI64((*((*(_382336_d))))._field_Constant.ptr(), _20a2b9be7_AsI64((*((*(_382336_d))))._field_Constant));
			}
		}
		else if (_1a8e33120_unsigAssignable(jule::Str::lit("u64", 3), _382336_d)) {
			_case_begin_1acc4eb2a:;
			{
				_20a2ba775_SetU64((*((*(_382336_d))))._field_Constant.ptr(), _20a2b9e7d_AsU64((*((*(_382336_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1acc4eab4:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1acc4ea4d:;
	};
}



inline void _1a8e72add_mod(_1a8e6e1a0_binaryEval* _self_) {
	_1a8e728e0_checkModData(_self_, &((*(_self_))._field_l));
	_1a8e728e0_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1a8e72ed9_numbersAreCompatibile(_1a8e6e1a0_binaryEval* _self_, jule::Str* _384537_lk, jule::Str* _384547_rk) {
	if ((!(_20a2b6ead_IsNum((*(_384547_rk)))))) {
		return false;;
	};
	if ((_1a8e4c6bc_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((*(_384537_lk)).equal("f32", 3)) {
		if ((_1a8e4c6bc_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a8e328d3_floatAssignable(_384537_lk, &((*(_self_))._field_r));;
		};
		return (*(_384547_rk)).equal("f32", 3);;
	};
	if ((*(_384537_lk)).equal("f64", 3)) {
		if ((_1a8e4c6bc_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a8e328d3_floatAssignable(_384537_lk, &((*(_self_))._field_r));;
		};
		return (*(_384547_rk)).equal("f64", 3);;
	};
	if ((_1a8e4c6bc_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1a8e33494_intAssignable((*(_384537_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_384537_lk)) == (*(_384547_rk)));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e73270_evalFloat(_1a8e6e1a0_binaryEval* _self_) {
	jule::Str _38719_lk = (*(_1a8e8566c_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38729_rk = (*(_1a8e8566c_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1a8e72ed9_numbersAreCompatibile(_self_, &(_38719_lk), &(_38729_rk))))) {
		_1a8dcc817_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1acc59d55:;
			{
				if (((!(_1a8e4c6bc_IsConst((*(_self_))._field_l))) || (!(_1a8e33494_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38719_lk, &__jule_any_type4),jule::Any(_38729_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1a8e4c6bc_IsConst((*(_self_))._field_r))) || (!(_1a8e33494_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38719_lk, &__jule_any_type4),jule::Any(_38729_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_20a2ba4bc_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _20a2b9be7_AsI64((*(*(_self_))._field_l.alloc)._field_Constant));
				_20a2ba775_SetU64((*(*(_self_))._field_r.alloc)._field_Constant, _20a2b9e7d_AsU64((*(*(_self_))._field_r.alloc)._field_Constant));
				if ((!(_1a8e7b8a5_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1acc59cde:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1acc59dcc:;
			{
				_1a8e72637_setTypeToGreater(_self_);
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		_match_end_1acc5be78:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1acc62225:;
			{
				_1a8e72637_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1acc62e29:;
			{
				if ((!(_20a2b68d6_IsInt(_38729_rk)))) {
					_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38719_lk, &__jule_any_type4),jule::Any(_38729_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1a8e72add_mod(_self_);
				_1a8e72637_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1acc5a5a3:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc61675:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e73506_evalInt(_1a8e6e1a0_binaryEval* _self_) {
	jule::Str _39359_lk = (*(_1a8e8566c_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39369_rk = (*(_1a8e8566c_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1acc66955:;
			{
				if (((!(_20a2b68d6_IsInt(_39359_lk))) || (!(_20a2b68d6_IsInt(_39369_rk))))) {
					_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_39359_lk, &__jule_any_type4),jule::Any(_39369_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1a8e7b8a5_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1acc66c41:;
	};
	if ((!(_1a8e72ed9_numbersAreCompatibile(_self_, &(_39359_lk), &(_39369_rk))))) {
		_1a8dcc817_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1acc6a56e:;
			{
				return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065e01_primBool, });;
			}
		}
		_match_end_1acc6a508:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(65LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1acc6bd34:;
			{
				_1a8e72637_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1acc6ca38:;
			{
				_1a8e72add_mod(_self_);
				_1a8e72637_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1acc6a65c:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc6b938:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e7378c_evalPrim(_1a8e6e1a0_binaryEval* _self_) {
	jule::Ptr<_1a8e8aae5_Prim> _39929_prim = _1a8e8566c_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1a8e8dce6_IsBool(_39929_prim.ptr())) {
			_case_begin_1acc70211:;
			{
				return _1a8e721a3_evalBool(_self_);;
			}
		}
		else if (_1a8e8e07c_IsStr(_39929_prim.ptr())) {
			_case_begin_1acc702aa:;
			{
				return _1a8e72439_evalStr(_self_);;
			}
		}
		_match_end_1acc70189:;
	};
	if ((_1a8e8566c_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a8e8ae36_Str(_39929_prim.ptr()), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_20a2b6c27_IsFloat((*_39929_prim.alloc)._field_Kind)) {
			_case_begin_1acc72c2a:;
			{
				return _1a8e73270_evalFloat(_self_);;
			}
		}
		else if (_20a2b68d6_IsInt((*_39929_prim.alloc)._field_Kind)) {
			_case_begin_1acc72cb3:;
			{
				return _1a8e73506_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1acc72bb4:;
			{
				return nullptr;;
			}
		}
		_match_end_1acc713dd:;
	};
}



inline void _1a8e7398a_checkSpecialCases(_1a8e6e1a0_binaryEval* _self_) {
	if (((!(_1a8e84616_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1a8e840e9_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
	} else if (((!(_1a8e84616_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1a8e840e9_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e73c21_evalOp(_1a8e6e1a0_binaryEval* _self_) {
	_1a8e7398a_checkSpecialCases(_self_);
	{
		
		if (_1a8e84380_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1acc7d461:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1a8e89033_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7e7e7:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1acc7e85d;
			}
		}
		else if ((_1a8e89033_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7e85d:;
			{
				return _1a8e7037c_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1a8e8566c_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1a8e8e313_IsAny(_1a8e8566c_Prim((*(*(_self_))._field_r.alloc)._field_Kind).ptr()))) {
			_case_begin_1acc7d2b8:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1acc7d32e;
			}
		}
		else if (_1a8e840e9_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1acc7d32e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1acc7e94b;
			}
		}
		else if (_1a8e840e9_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1acc7e94b:;
			{
				return _1a8e70613_evalNil(_self_);;
			}
		}
		else if (((_1a8e8566c_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1a8e8e313_IsAny(_1a8e8566c_Prim((*(*(_self_))._field_l.alloc)._field_Kind).ptr()))) {
			_case_begin_1acc7e9b2:;
			{
				return _1a8e71e1c_evalAny(_self_);;
			}
		}
		else if ((_1a8e861a6_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7ea28:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1acc7ea8e;
			}
		}
		else if ((_1a8e861a6_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7ea8e:;
			{
				return _1a8e70b30_evalTypeEnum(_self_);;
			}
		}
		else if ((_1a8e85e20_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7eb05:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1acc7eb6b;
			}
		}
		else if ((_1a8e85e20_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7eb6b:;
			{
				return _1a8e70899_evalEnum(_self_);;
			}
		}
		else if ((_1a8e85903_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7ebd2:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1acc7ec48;
			}
		}
		else if ((_1a8e85903_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7ec48:;
			{
				return _1a8e70db6_evalSptr(_self_);;
			}
		}
		else if ((_1a8e85b89_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7ecae:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1acc7ed25;
			}
		}
		else if ((_1a8e85b89_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7ed25:;
			{
				return _1a8e7114c_evalPtr(_self_);;
			}
		}
		else if ((_1a8e8643c_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7ed8b:;
			{
				return _1a8e713d3_evalArr(_self_);;
			}
		}
		else if ((_1a8e866c3_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7ee02:;
			{
				return _1a8e71669_evalSlc(_self_);;
			}
		}
		else if ((_1a8e86e76_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7ee68:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1acc7eece;
			}
		}
		else if ((_1a8e86e76_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc7eece:;
			{
				return _1a8e71b86_evalTrait(_self_);;
			}
		}
		else if ((_1a8e86be0_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc80045:;
			{
				return _1a8e71900_evalStruct(_self_);;
			}
		}
		else if ((_1a8e8566c_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc800ab:;
			{
				return _1a8e7378c_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1acc7cbbe:;
			{
				_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a8e833d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1acc7d098:;
	};
}



inline void _1a8e73ec9_evalConst(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _408333_d) {
	{
		
		if (((*(_408333_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1acc92e26:;
			{
				return;;
			}
		}
		else if ((!(_1a8e4c6bc_IsConst((*(_self_))._field_l.ptr()))) || (!(_1a8e4c6bc_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1acc934ba:;
			{
				(*((*(_408333_d))))._field_Constant=nullptr;
				(*((*(_408333_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1acc92d27:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1acc93597:;
			{
				(*((*(_408333_d))))._field_Constant=static__20a2b8025_NewBool(_20a2bd107_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1acc959c8:;
			{
				(*((*(_408333_d))))._field_Constant=static__20a2b8025_NewBool((!(_20a2bd107_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1acc95a3e:;
			{
				(*((*(_408333_d))))._field_Constant=static__20a2b8025_NewBool(_20a2bccb6_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1acc95aa5:;
			{
				(*((*(_408333_d))))._field_Constant=static__20a2b8025_NewBool(_20a2bc975_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1acc95b1b:;
			{
				(*((*(_408333_d))))._field_Constant=static__20a2b8025_NewBool(_20a2bdaca_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1acc95b82:;
			{
				(*((*(_408333_d))))._field_Constant=static__20a2b8025_NewBool(_20a2bd448_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1acc95c09:;
			{
				(*((*(_408333_d))))._field_Constant=static__20a2b8025_NewBool(_20a2bde1b_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1acc95c81:;
			{
				(*((*(_408333_d))))._field_Constant=static__20a2b8025_NewBool(_20a2bd789_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1acc95d08:;
			{
				_20a2be25c_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1acc95d80:;
			{
				_20a2be59d_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1acc95e07:;
			{
				_20a2be8de_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1acc95e7e:;
			{
				jule::Bool _412313_ok = _20a2bec30_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_412313_ok)) && (_20a2ba214_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1a8e8aae5_Prim> _412817_prim = _1a8e8566c_Prim((*((*(_408333_d))))._field_Kind.ptr());;
				{
					
					if (_20a2b630e_IsSigInt((*(_412817_prim))._field_Kind)) {
						_case_begin_1acca7006:;
						{
							_20a2ba4bc_SetI64((*((*(_408333_d))))._field_Constant, _20a2b9be7_AsI64((*((*(_408333_d))))._field_Constant));
						}
					}
					else if (_20a2b661c_IsUnsigInt((*(_412817_prim))._field_Kind)) {
						_case_begin_1acca70a0:;
						{
							_20a2ba775_SetU64((*((*(_408333_d))))._field_Constant, _20a2b9e7d_AsU64((*((*(_408333_d))))._field_Constant));
						}
					}
					_match_end_1acca6e90:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1acc96006:;
			{
				jule::Bool _413613_ok = _20a2c0071_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_413613_ok)) && (_20a2ba214_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1acc9607d:;
			{
				_20a2c0703_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1acc96105:;
			{
				_20a2c03b2_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1acc9617c:;
			{
				_20a2c0a44_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1acc96204:;
			{
				_20a2c0d85_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1acc9627b:;
			{
				_20a2c11c6_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1acc94cc4:;
	};
	(*((*(_408333_d))))._field_Model=jule::Any((*((*(_408333_d))))._field_Constant, &__jule_any_type19);
	_1a8e7d1e2_applyCastModelByEnum(_408333_d, _1a8e85e20_Enum((*((*(_408333_d))))._field_Kind.ptr()), &((*(_self_))._field_op));
}



inline void _1a8e74282_checkData(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _416133_d) {
	jule::Ptr<_1a8d3ee72_FnIns> _41629_f = _1a8e86959_Fn((*((*(_416133_d))))._field_Kind.ptr());;
	if ((((_41629_f != nullptr) && ((*_41629_f.alloc)._field_Decl != nullptr)) && _1a8d3c69a_IsMethod((*_41629_f.alloc)._field_Decl))) {
		_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1a8e74480_checkDatas(_1a8e6e1a0_binaryEval* _self_) {
	_1a8e74282_checkData(_self_, &((*(_self_))._field_l));
	_1a8e74282_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1a8e74738_setModel(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _417332_d) {
	if (_1a8e4c6bc_IsConst((*(_417332_d)).ptr())) {
		if (((_1a8e4c6bc_IsConst((*(_self_))._field_l.ptr()) && _1a8e4c6bc_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1a8e4bcb5_Data> _418213_l;
	jule::Ptr<_1a8e4bcb5_Data> _418220_r;
	({
		jule::Ptr<_1a8e4bcb5_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1a8e4bcb5_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_418213_l = ___jule_assign_arg;
		_418220_r = _1___jule_assign_arg;
	});
	if ((!(_1a8e4ca0d_GoodOperand(_418213_l, &(_418220_r))))) {
		std::swap(_418213_l, _418220_r);
	};
	(*((*(_417332_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d2e14d_BinaryExprModel>(_1a8d2e14d_BinaryExprModel{._field_Left=jule::new_ptr<_1a8d2db53_OperandExprModel>(_1a8d2db53_OperandExprModel{._field_Kind=(*_418213_l.alloc)._field_Kind, ._field_Model=(*_418213_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1a8d2db53_OperandExprModel>(_1a8d2db53_OperandExprModel{._field_Kind=(*_418220_r.alloc)._field_Kind, ._field_Model=(*_418220_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1a8e7984d_postEval(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _420032_d) {
	(*((*(_420032_d))))._field_Lvalue=false;
	_1a8e74738_setModel(_self_, _420032_d);
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e79c49_solveExplicit(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a8e4bcb5_Data>* _420537_l, jule::Ptr<_1a8e4bcb5_Data>* _420552_r) {
	({
		jule::Ptr<_1a8e4bcb5_Data> ___jule_assign_arg = (*(_420537_l));
		jule::Ptr<_1a8e4bcb5_Data> _1___jule_assign_arg = (*(_420552_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a8e74480_checkDatas(_self_);
	jule::Ptr<_1a8e4bcb5_Data> _421013_d = _1a8e73c21_evalOp(_self_);;
	({
		jule::Ptr<_1a8e4bcb5_Data> ___jule_assign_arg = (*(_420537_l));
		jule::Ptr<_1a8e4bcb5_Data> _1___jule_assign_arg = (*(_420552_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a8e73ec9_evalConst(_self_, &(_421013_d));
	if ((_421013_d != nullptr)) {
		(*_421013_d.alloc)._field_Mutable=true;
		_1a8e7984d_postEval(_self_, &(_421013_d));
	};
	return _421013_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e7a08a_eval(_1a8e6e1a0_binaryEval* _self_, jule::Ptr<_1a877ae63_BinaryExpr>* _422528_op) {
	if (((*((*((*(_422528_op))))._field_Op))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1a8e4e03c_pushErr((*(_self_))._field_e.ptr(), (*((*(_422528_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1a8e4e3a0_pushSuggestion((*(_self_))._field_e, jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8e4bcb5_Data> _423213_l = _1a8e6b90b_evalExpr1((*(_self_))._field_e, (*((*(_422528_op))))._field_Left);;
	if (((_423213_l == nullptr) || ((*(_423213_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1a8e8301b_TypeKind> _423713_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_423213_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_423713_prefix;
	});;
	jule::Ptr<_1a8e4bcb5_Data> _424013_r = _1a8e6b90b_evalExpr1((*(_self_))._field_e, (*((*(_422528_op))))._field_Right);;
	if (((_424013_r == nullptr) || ((*(_424013_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_422528_op))))._field_Op;
	jule::Ptr<_1a8e4bcb5_Data> _424713_d = _1a8e79c49_solveExplicit(_self_, &(_423213_l), &(_424013_r));;
	if ((((_424713_d != nullptr) && (*(_423213_l))._field_IsRune) && (*(_424013_r))._field_IsRune)) {
		(*_424713_d.alloc)._field_IsRune=true;
	};
	return _424713_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e6e1a0_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e81635_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e82229_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8e833d4_Str(_1a8e8301b_TypeKind* _self_) {
	if (_1a8e840e9_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_2234c269a_StrBuilder _7413_kind = static__2234c2ac9_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_2234c313a_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1a8e83d63_Binded(_self_)) {
		_2234c313a_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_2234c313a_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_2234c313a_WriteStr(&_7413_kind, ((_1a8e82a65_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1a8e825c0_Str((*(_self_))._field_Kind.data));
	};
	return _2234c3932_Str(&_7413_kind);;
}



inline jule::Bool _1a8e83725_Equal(jule::Ptr<_1a8e8301b_TypeKind> _self_, jule::Ptr<_1a8e8301b_TypeKind> _9021_other) {
	if (_1a8e840e9_IsNil(_self_.ptr())) {
		return _1a8e840e9_IsNil(_9021_other.ptr());;
	};
	if (_1a8e83d63_Binded(_self_)) {
		return (_1a8e83d63_Binded(_9021_other) && ((*_self_.alloc)._field_BindIdent == (*_9021_other.alloc)._field_BindIdent));;
	};
	return ((_1a8e82a65_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1a8e82911_Equal((*_self_.alloc)._field_Kind.data, _9021_other);;
}



inline jule::Bool _1a8e83d63_Binded(_1a8e8301b_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1a8e840e9_IsNil(_1a8e8301b_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1a8e84380_Void(_1a8e8301b_TypeKind* _self_) {
	jule::Ptr<_1a8e8aae5_Prim> _1109_prim = _1a8e8566c_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*_1109_prim.alloc)._field_Kind.equal("void", 4));;
}



inline jule::Bool _1a8e84616_Comparable(_1a8e8301b_TypeKind* _self_) {
	{
		_1a8e8301b_TypeKind* _11717__self = _self_;;
		if ((_1a8e86be0_Struct(_11717__self) != nullptr)) {
			return (*(_1a8e86be0_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1a8e8720c_Map(_11717__self) == nullptr) && (_1a8e866c3_Slc(_11717__self) == nullptr)) && (_1a8e86959_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1a8e8489c_Mutable(_1a8e8301b_TypeKind* _self_) {
	{
		_1a8e8301b_TypeKind* _12817__self = _self_;;
		if ((_1a8e86be0_Struct(_12817__self) != nullptr)) {
			return (*(_1a8e86be0_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1a8e86e76_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1a8e8566c_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1a8e8aae5_Prim> _13617_p = _1a8e8566c_Prim(_12817__self);;
			return _1a8e8e313_IsAny(_13617_p.ptr());;
		};
		if ((_1a8e8643c_Arr(_12817__self) != nullptr)) {
			return _1a8e8489c_Mutable((*(_1a8e8643c_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1a8e866c3_Slc(_12817__self) != nullptr) || (_1a8e85b89_Ptr(_12817__self) != nullptr)) || (_1a8e85903_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1a8e84b33_Ordered(_1a8e8301b_TypeKind* _self_) {
	{
		_1a8e8301b_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1a8e8aae5_Prim> _15213_prim = _1a8e8566c_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_20a2b6ead_IsNum((*_15213_prim.alloc)._field_Kind) || _1a8e8e07c_IsStr(_15213_prim));;
		};
		if ((_1a8e85b89_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1a8d29ba4_StructIns> _15913_s = _1a8e86be0_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*_15913_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_15913_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_15913_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_15913_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1a8d52a56_Enum> _16613_enm = _1a8e85e20_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _20a2b6ead_IsNum(_1a8e833d4_Str((*((*_16613_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1a8e84db9_NilCompatible(_1a8e8301b_TypeKind* _self_) {
	{
		_1a8e8301b_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1a8e8aae5_Prim> _17913_prim = _1a8e8566c_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1a8e8e313_IsAny(_17913_prim))) {
			return true;;
		};
		return (((((((_1a8e840e9_IsNil(_17717__self) || (_1a8e86959_Fn(_17717__self) != nullptr)) || (_1a8e85903_Sptr(_17717__self) != nullptr)) || (_1a8e85b89_Ptr(_17717__self) != nullptr)) || (_1a8e86e76_Trait(_17717__self) != nullptr)) || (_1a8e866c3_Slc(_17717__self) != nullptr)) || (_1a8e8720c_Map(_17717__self) != nullptr)) || (_1a8e861a6_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1a8e85150_PerformsRC(_1a8e8301b_TypeKind* _self_) {
	{
		_1a8e8301b_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1a8e8aae5_Prim> _19913_prim = _1a8e8566c_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1a8e8e313_IsAny(_19913_prim) || _1a8e8e07c_IsStr(_19913_prim));;
		};
		return (((_1a8e85903_Sptr(_19817__self) != nullptr) || (_1a8e866c3_Slc(_19817__self) != nullptr)) || (_1a8e86e76_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1a8e853d6_Variadicable(_1a8e8301b_TypeKind* _self_) {
	{
		_1a8e8301b_TypeKind* _21017__self = _self_;;
		return (_1a8e866c3_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1a8e8aae5_Prim> _1a8e8566c_Prim(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)) {
			_case_begin_1acce1491:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8e8aae5_Prim>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1acd04619:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd045b4:;
	};
}



inline jule::Ptr<_1a8e8e621_Sptr> _1a8e85903_Sptr(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data21)) {
			_case_begin_1acd05252:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8e8e621_Sptr>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1acd05483:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd0542d:;
	};
}



inline jule::Ptr<_1a8e92dd8_Ptr> _1a8e85b89_Ptr(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data26)) {
			_case_begin_1acd05e78:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8e92dd8_Ptr>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1acd061cb:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd06176:;
	};
}



inline jule::Ptr<_1a8d52a56_Enum> _1a8e85e20_Enum(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data3)) {
			_case_begin_1acd06bc1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d52a56_Enum>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1acd06e02:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd06d9c:;
	};
}



inline jule::Ptr<_1a8d54261_TypeEnum> _1a8e861a6_TypeEnum(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data4)) {
			_case_begin_1acd078e7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d54261_TypeEnum>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1acd07b4a:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd07ae5:;
	};
}



inline jule::Ptr<_1a8e92415_Arr> _1a8e8643c_Arr(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data25)) {
			_case_begin_1acd08640:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8e92415_Arr>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1acd08893:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd0883d:;
	};
}



inline jule::Ptr<_1a8e900e4_Slc> _1a8e866c3_Slc(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data22)) {
			_case_begin_1acd09388:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8e900e4_Slc>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1acd095db:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd09586:;
	};
}



inline jule::Ptr<_1a8d3ee72_FnIns> _1a8e86959_Fn(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data1)) {
			_case_begin_1acd0a0d1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d3ee72_FnIns>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1acd0a334:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd0a2ce:;
	};
}



inline jule::Ptr<_1a8d29ba4_StructIns> _1a8e86be0_Struct(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0)) {
			_case_begin_1acd0ad29:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d29ba4_StructIns>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1acd0b05a:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd0b005:;
	};
}



inline jule::Ptr<_1a8d5034a_Trait> _1a8e86e76_Trait(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data2)) {
			_case_begin_1acd0ba50:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d5034a_Trait>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1acd0bca3:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd0bc4d:;
	};
}



inline jule::Ptr<_1a8e91788_Map> _1a8e8720c_Map(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data24)) {
			_case_begin_1acd0c798:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8e91788_Map>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1acd0c9eb:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd0c996:;
	};
}



inline jule::Ptr<_1a8e90bd8_Tuple> _1a8e87493_Tup(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data23)) {
			_case_begin_1acd0d4e1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8e90bd8_Tuple>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1acd0d744:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd0d6de:;
	};
}



inline jule::Bool _1a8e87729_comptime(_1a8e8301b_TypeKind* _self_) {
	return (((((((((((((_1a8e88c9c_comptimeTypeInfos(_self_) != nullptr) || (_1a8e89033_comptimeTypeInfo(_self_) != nullptr)) || (_1a8e879b0_comptimeStructFields(_self_) != nullptr)) || (_1a8e87c46_comptimeStructField(_self_) != nullptr)) || (_1a8e87ecc_comptimeEnumFields(_self_) != nullptr)) || (_1a8e88263_comptimeEnumField(_self_) != nullptr)) || (_1a8e892b9_comptimeStatics(_self_) != nullptr)) || (_1a8e89550_comptimeStatic(_self_) != nullptr)) || (_1a8e884e9_comptimeParams(_self_) != nullptr)) || (_1a8e88780_comptimeParam(_self_) != nullptr)) || (_1a8e897d6_comptimeValue(_self_) != nullptr)) || (_1a8e89d03_comptimeFiles(_self_) != nullptr)) || (_1a8e89a6c_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1a8d59a4c_comptimeStructFields> _1a8e879b0_comptimeStructFields(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data7)) {
			_case_begin_1acd0e404:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d59a4c_comptimeStructFields>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1acd12e0d:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd12da8:;
	};
}



inline jule::Ptr<_1a8d57d8b_comptimeStructField> _1a8e87c46_comptimeStructField(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data6)) {
			_case_begin_1acd1354b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d57d8b_comptimeStructField>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1acd1379e:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd13749:;
	};
}



inline jule::Ptr<_1a8d6079a_comptimeEnumFields> _1a8e87ecc_comptimeEnumFields(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data11)) {
			_case_begin_1acd14294:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d6079a_comptimeEnumFields>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1acd144e7:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd14492:;
	};
}



inline jule::Ptr<_1a8d5e403_comptimeEnumField> _1a8e88263_comptimeEnumField(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data10)) {
			_case_begin_1acd14edc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d5e403_comptimeEnumField>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1acd15240:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd151da:;
	};
}



inline jule::Ptr<_1a8d6402e_comptimeParams> _1a8e884e9_comptimeParams(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data13)) {
			_case_begin_1acd15c35:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d6402e_comptimeParams>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1acd15e88:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd15e33:;
	};
}



inline jule::Ptr<_1a8d61d95_comptimeParam> _1a8e88780_comptimeParam(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data12)) {
			_case_begin_1acd169d3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d61d95_comptimeParam>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1acd16bd1:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd16b7b:;
	};
}



inline jule::Ptr<_1a8d573b8_comptimeRange> _1a8e88a16_comptimeRange(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data5)) {
			_case_begin_1acd1772b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d573b8_comptimeRange>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1acd17929:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd178c4:;
	};
}



inline jule::Ptr<_1a8d655e6_comptimeTypeInfos> _1a8e88c9c_comptimeTypeInfos(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data14)) {
			_case_begin_1acd18474:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d655e6_comptimeTypeInfos>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1acd18672:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd1861c:;
	};
}



inline jule::Ptr<_1a8d66be1_comptimeTypeInfo> _1a8e89033_comptimeTypeInfo(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data15)) {
			_case_begin_1acd19167:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d66be1_comptimeTypeInfo>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1acd193ba:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd19365:;
	};
}



inline jule::Ptr<_1a8d5cd08_comptimeStatics> _1a8e892b9_comptimeStatics(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data9)) {
			_case_begin_1acd19db0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d5cd08_comptimeStatics>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1acd1a113:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd1a0ad:;
	};
}



inline jule::Ptr<_1a8d5b147_comptimeStatic> _1a8e89550_comptimeStatic(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data8)) {
			_case_begin_1acd1ab5d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d5b147_comptimeStatic>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1acd1ad5b:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd1ad06:;
	};
}



inline jule::Ptr<_1a8d6d203_comptimeValue> _1a8e897d6_comptimeValue(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data16)) {
			_case_begin_1acd1b8a6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d6d203_comptimeValue>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1acd1baa4:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd1ba4e:;
	};
}



inline jule::Ptr<_1a8d7214c_comptimeFile> _1a8e89a6c_comptimeFile(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data18)) {
			_case_begin_1acd1c5ee:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d7214c_comptimeFile>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1acd1c7ec:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd1c797:;
	};
}



inline jule::Ptr<_1a8d70a52_comptimeFiles> _1a8e89d03_comptimeFiles(_1a8e8301b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data17)) {
			_case_begin_1acd1d347:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8d70a52_comptimeFiles>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1acd1d545:;
			{
				return nullptr;;
			}
		}
		_match_end_1acd1d4e0:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e8301b_TypeKind _Src) {
	_Stream << _1a8e833d4_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a8e8a562_checked(_1a8e8a1dd_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e8a1dd_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8e8ae36_Str(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1a8e8b277_Equal(jule::Ptr<_1a8e8aae5_Prim> _self_, jule::Ptr<_1a8e8301b_TypeKind> _50821_other) {
	jule::Ptr<_1a8e8aae5_Prim> _5099_prim = _1a8e8566c_Prim(_50821_other.ptr());;
	if ((_5099_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5099_prim))._field_Kind);;
}



inline jule::Bool _1a8e8b71c_IsConstraint(_1a8e8aae5_Prim* _self_) {
	return ((((!(_1a8e8e07c_IsStr(_self_))) && (!(_1a8e8e313_IsAny(_self_)))) && (!(_1a8e8dce6_IsBool(_self_)))) && (!(_20a2b6ead_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1a8e8b9a3_IsI8(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1a8e8bc39_IsI16(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1a8e8bec0_IsI32(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1a8e8c256_IsI64(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1a8e8c4dc_IsU8(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1a8e8c773_IsU16(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1a8e8ca09_IsU32(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1a8e8cc90_IsU64(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1a8e8d026_IsF32(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1a8e8d2ac_IsF64(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1a8e8d543_IsInt(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1a8e8d7c9_IsUint(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1a8e8da60_IsUintptr(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1a8e8dce6_IsBool(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1a8e8e07c_IsStr(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1a8e8e313_IsAny(_1a8e8aae5_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e8aae5_Prim _Src) {
	_Stream << _1a8e8ae36_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8e8e995_Str(_1a8e8e621_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1a8e833d4_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a8e8ecd6_Equal(jule::Ptr<_1a8e8e621_Sptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _58521_other) {
	jule::Ptr<_1a8e8e621_Sptr> _5869_sptr = _1a8e85903_Sptr(_58521_other.ptr());;
	if ((_5869_sptr == nullptr)) {
		return false;;
	};
	return _1a8e83725_Equal((*(_self_))._field_Elem, (*(_5869_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e8e621_Sptr _Src) {
	_Stream << _1a8e8e995_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8e90578_Str(_1a8e900e4_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1a8e833d4_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a8e908b9_Equal(jule::Ptr<_1a8e900e4_Slc> _self_, jule::Ptr<_1a8e8301b_TypeKind> _60421_other) {
	jule::Ptr<_1a8e900e4_Slc> _6059_slc = _1a8e866c3_Slc(_60421_other.ptr());;
	if ((_6059_slc == nullptr)) {
		return false;;
	};
	return _1a8e83725_Equal((*(_self_))._field_Elem, (*(_6059_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e900e4_Slc _Src) {
	_Stream << _1a8e90578_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8e9105c_Str(_1a8e90bd8_Tuple* _self_) {
	_2234c269a_StrBuilder _62113_s = static__2234c2ac9_New(16LL);;
	_2234c33e3_WriteByte(&_62113_s, '(');
	_2234c313a_WriteStr(&_62113_s, _1a8e833d4_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1acd2da61:;
		if (it != expr_end) {
			jule::Ptr<_1a8e8301b_TypeKind> *_62416_t = it;
			{
				_2234c33e3_WriteByte(&_62113_s, ',');
				_2234c313a_WriteStr(&_62113_s, _1a8e833d4_Str((*(_62416_t)).ptr()));
			}
			_iter_next_1acd2da61:;
			++it;
			goto _iter_begin_1acd2da61;
		}
		_iter_end_1acd2da61:;
	};
	_2234c33e3_WriteByte(&_62113_s, ')');
	return _2234c3932_Str(&_62113_s);;
}



inline jule::Bool _1a8e9139d_Equal(jule::Ptr<_1a8e90bd8_Tuple> _self_, jule::Ptr<_1a8e8301b_TypeKind> _63321_other) {
	jule::Ptr<_1a8e90bd8_Tuple> _6349_tup = _1a8e87493_Tup(_63321_other.ptr());;
	if ((_6349_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6349_tup))._field_Types.len())) {
		return false;;
	};
	jule::I32 _64113_i = 0LL;;
	for (; (_64113_i < (*_self_.alloc)._field_Types.len()); (_64113_i)++) {
		{
			if ((!(_1a8e83725_Equal((*_self_.alloc)._field_Types[_64113_i], (*(_6349_tup))._field_Types[_64113_i])))) {
				return false;;
			};
		}
	_iter_next_1acd30da4:;
	}
	_iter_end_1acd30da4:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e90bd8_Tuple _Src) {
	_Stream << _1a8e9105c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8e91b0c_Str(_1a8e91788_Map* _self_) {
	_2234c269a_StrBuilder _66113_s = static__2234c2ac9_New(16LL);;
	_2234c313a_WriteStr(&_66113_s, jule::Str::lit("map[", 4));
	_2234c313a_WriteStr(&_66113_s, _1a8e833d4_Str((*(_self_))._field_Key.ptr()));
	_2234c33e3_WriteByte(&_66113_s, ']');
	_2234c313a_WriteStr(&_66113_s, _1a8e833d4_Str((*(_self_))._field_Val.ptr()));
	return _2234c3932_Str(&_66113_s);;
}



inline jule::Bool _1a8e91e4d_Equal(jule::Ptr<_1a8e91788_Map> _self_, jule::Ptr<_1a8e8301b_TypeKind> _67021_other) {
	jule::Ptr<_1a8e91788_Map> _6719_m = _1a8e8720c_Map(_67021_other.ptr());;
	if ((_6719_m == nullptr)) {
		return false;;
	};
	return (_1a8e83725_Equal((*(_self_))._field_Key, (*(_6719_m))._field_Key) && _1a8e83725_Equal((*_self_.alloc)._field_Val, (*(_6719_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e91788_Map _Src) {
	_Stream << _1a8e91b0c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8e92789_Str(_1a8e92415_Arr* _self_) {
	_2234c269a_StrBuilder _68913_s = static__2234c2ac9_New(16LL);;
	_2234c33e3_WriteByte(&_68913_s, '[');
	_2234c313a_WriteStr(&_68913_s, _20a2a9489_Itoa((*(_self_))._field_N));
	_2234c33e3_WriteByte(&_68913_s, ']');
	_2234c313a_WriteStr(&_68913_s, _1a8e833d4_Str((*(_self_))._field_Elem.ptr()));
	return _2234c3932_Str(&_68913_s);;
}



inline jule::Bool _1a8e92aca_Equal(jule::Ptr<_1a8e92415_Arr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _69821_other) {
	jule::Ptr<_1a8e92415_Arr> _6999_arr = _1a8e8643c_Arr(_69821_other.ptr());;
	if ((_6999_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6999_arr))._field_N) && _1a8e83725_Equal((*_self_.alloc)._field_Elem, (*(_6999_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e92415_Arr _Src) {
	_Stream << _1a8e92789_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8e9325c_Str(_1a8e92dd8_Ptr* _self_) {
	if (_1a8e93922_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1a8e833d4_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a8e9359d_Equal(jule::Ptr<_1a8e92dd8_Ptr> _self_, jule::Ptr<_1a8e8301b_TypeKind> _72221_other) {
	jule::Ptr<_1a8e92dd8_Ptr> _7239_ptr = _1a8e85b89_Ptr(_72221_other.ptr());;
	{
		
		if ((_7239_ptr == nullptr)) {
			_case_begin_1acd3ca4d:;
			{
				return false;;
			}
		}
		else if (_1a8e93922_IsUnsafe(_7239_ptr.ptr())) {
			_case_begin_1acd3c3ee:;
			{
				return _1a8e93922_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1acd3be8c:;
			{
				return _1a8e83725_Equal((*(_self_))._field_Elem, (*(_7239_ptr))._field_Elem);;
			}
		}
		_match_end_1acd3be26:;
	};
}



inline jule::Bool _1a8e93922_IsUnsafe(_1a8e92dd8_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e92dd8_Ptr _Src) {
	_Stream << _1a8e9325c_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e93dd9_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a8e95616_pushErr(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a875ce89_Token> _81226_token, jule::Str _81241_fmt, jule::Slice<jule::Any> _81254_args) {
	_1a8dc3e7e_pushErr((*(_self_))._field_s.ptr(), _81226_token, _81241_fmt, _81254_args);
}



inline void _1a8e95814_allowBuiltin(_1a8e94dc9_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a8e95a12_disallowBuiltin(_1a8e94dc9_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1acd41b95_pushReference(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8d29ba4_StructIns>* _82440_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ac774067_Exist((*(_self_))._field_refers.ptr(), (*(_82440_t)))) {
		return;;
	};
	_1a8d43e32_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82440_t)), &__jule_any_type9));
}

inline void _1acd4458d_pushReference(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8d5034a_Trait>* _82440_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1acd462c6_Exist((*(_self_))._field_refers.ptr(), (*(_82440_t)))) {
		return;;
	};
	_1a8d43e32_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82440_t)), &__jule_any_type10));
}



inline void _1a8e96073_pushReferenceByKind(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _83443_k) {
	{
		
		if ((_1a8e86be0_Struct((*(_83443_k)).ptr()) != nullptr)) {
			_case_begin_1acd407cb:;
			{
				jule::Ptr<_1a8d29ba4_StructIns> _83717_t = _1a8e86be0_Struct((*(_83443_k)).ptr());;
				_1acd41b95_pushReference(_self_, &(_83717_t));
			}
		}
		else if ((_1a8e86e76_Trait((*(_83443_k)).ptr()) != nullptr)) {
			_case_begin_1acd40875:;
			{
				jule::Ptr<_1a8d5034a_Trait> _84017_t = _1a8e86e76_Trait((*(_83443_k)).ptr());;
				_1acd4458d_pushReference(_self_, &(_84017_t));
			}
		}
		_match_end_1acd406bb:;
	};
}



inline void _1a8e96491_pushCycleError(_1a8e94dc9_typeChecker* _self_, jule::Any _84529_def1, jule::Any _84540_def2, _2234c269a_StrBuilder* _84556_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8479_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1acd485c5, nullptr, nullptr);;
	jule::Str _8579_m = _2234c3932_Str(_84556_message);;
	jule::Str _8589_def1Ident = _8479_getIdent(&(_84529_def1));;
	jule::Str _8599_def2Ident = _8479_getIdent(&(_84540_def2));;
	jule::Str _8609_refersTo = _224744377_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8589_def1Ident, &__jule_any_type4),jule::Any(_8599_def2Ident, &__jule_any_type4)}));;
	_2234c313a_WriteStr(_84556_message, _2246952b7_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2234c313a_WriteStr(_84556_message, _8609_refersTo);
	_2234c33e3_WriteByte(_84556_message, '\n');
	_2234c313a_WriteStr(_84556_message, _8579_m);
}



inline jule::Bool _1a8e9688c_checkCrossCycle(_1a8e94dc9_typeChecker* _self_, jule::Any _86730_decl, _2234c269a_StrBuilder* _86746_message) {
	{
		auto &_match_expr{ _86730_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac12560b:;
			{
				jule::Ptr<_1a8e82229_TypeAlias> _87013_ta = _86730_decl.unsafe_cast_ptr<_1a8e82229_TypeAlias>();;
				{
					auto expr = &((*(_87013_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac1265c9:;
					if (it != expr_end) {
						jule::Any *_87120_d = it;
						{
							{
								
								if (((*(_87120_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1ac126dc1:;
									{
										_1a8e96491_pushCycleError(_self_, jule::Any(_87013_ta, &__jule_any_type65), (*(_87120_d)), _86746_message);
										return false;;
									}
								}
								else if ((!(_1a8e9688c_checkCrossCycle(_self_, (*(_87120_d)), _86746_message)))) {
									_case_begin_1ac126e59:;
									{
										_1a8e96491_pushCycleError(_self_, jule::Any(_87013_ta, &__jule_any_type65), (*(_87120_d)), _86746_message);
										return false;;
									}
								}
								_match_end_1ac126cc2:;
							};
						}
						_iter_next_1ac1265c9:;
						++it;
						goto _iter_begin_1ac1265c9;
					}
					_iter_end_1ac1265c9:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac125474:;
			{
				jule::Ptr<_1a8d26e26_Struct> _88213_s = _86730_decl.unsafe_cast_ptr<_1a8d26e26_Struct>();;
				{
					auto expr = &((*(_88213_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab86718e:;
					if (it != expr_end) {
						jule::Ptr<_1a8d26e26_Struct> *_88320_d = it;
						{
							{
								
								if ((__jule_any_type64_compare((*((*(_self_))._field_referencer))._field_owner, (*(_88320_d))))) {
									_case_begin_1ab867986:;
									{
										_1a8e96491_pushCycleError(_self_, jule::Any(_88213_s, &__jule_any_type64), jule::Any((*(_88320_d)), &__jule_any_type64), _86746_message);
										return false;;
									}
								}
								else if ((!(_1a8e9688c_checkCrossCycle(_self_, jule::Any((*(_88320_d)), &__jule_any_type64), _86746_message)))) {
									_case_begin_1ab867a1e:;
									{
										_1a8e96491_pushCycleError(_self_, jule::Any(_88213_s, &__jule_any_type64), jule::Any((*(_88320_d)), &__jule_any_type64), _86746_message);
										return false;;
									}
								}
								_match_end_1ab867887:;
							};
						}
						_iter_next_1ab86718e:;
						++it;
						goto _iter_begin_1ab86718e;
					}
					_iter_end_1ab86718e:;
				};
			}
		}
		_match_end_1ac1255a6:;
	};
	return true;;
}



inline jule::Bool _1a8e96c88_checkIllegalCycles(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _90138_ident, jule::Any _90165_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90165_decl };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab869e61:;
			{
				if ((*(_90165_decl.unsafe_cast_ptr<_1a8d26e26_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab8696d0:;
			{
				if ((*(_90165_decl.unsafe_cast_ptr<_1a8e82229_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ab869757:;
	};
	if ((_90165_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1a8e95616_pushErr(_self_, (*((*(_90138_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_2234c269a_StrBuilder _92413_message = static__2234c2ac9_New(32LL);;
	if ((!(_1a8e9688c_checkCrossCycle(_self_, _90165_decl, &(_92413_message))))) {
		jule::Str _92717_errMsg = _2234c3932_Str(&_92413_message);;
		_2234c3b30_Clear(&_92413_message);
		_1a8e96491_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90165_decl, &(_92413_message));
		_92717_errMsg+=_2234c3932_Str(&_92413_message);
		_1a8e95616_pushErr(_self_, (*((*(_90138_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92717_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab86e8b1:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90165_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab86de10:;
			{
				{
					auto &_match_expr{ _90165_decl };
					
					if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1ab870263:;
						{
							jule::Ptr<_1a8d26e26_Struct> _94321_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a8d26e26_Struct>();;
							(*(_94321_s))._field_Depends=jule::append((*_94321_s.alloc)._field_Depends,jule::Slice<jule::Ptr<_1a8d26e26_Struct>>::make({_90165_decl.unsafe_cast_ptr<_1a8d26e26_Struct>()}));
						}
					}
					_match_end_1ab8701ec:;
				};
			}
		}
		_match_end_1ab86e85b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1a8e97184_fromTypeAlias(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _95133_decl, jule::Ptr<_1a8e82229_TypeAlias>* _95160_ta) {
	if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95160_ta))))._field_Public, (*((*(_95160_ta))))._field_Token)))) {
		_1a8e95616_pushErr(_self_, (*((*(_95133_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_95133_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_95160_ta))))._field_Used=true;
	if (((*((*(_95133_decl))))._field_Generics.len() > 0LL)) {
		_1a8e95616_pushErr(_self_, (*((*(_95133_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_95133_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab8754aa:;
			if (it != expr_end) {
				jule::Ptr<_1a8e82229_TypeAlias> _96820_bg = *it;
				{
					if (((_96820_bg == (*(_95160_ta))) || (((*((*((*(_95160_ta))))._field_Kind))._field_Kind != nullptr) && _1a8e83725_Equal((*(*((*(_95160_ta))))._field_Kind.alloc)._field_Kind, (*(*(_96820_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1ab8754aa;
					};
				}
				_iter_next_1ab8754aa:;
				++it;
				goto _iter_begin_1ab8754aa;
			}
			_iter_end_1ab8754aa:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab877787:;
			if (it != expr_end) {
				jule::Ptr<_1a8e82229_TypeAlias> _97920_bg = *it;
				{
					if ((_97920_bg == (*(_95160_ta)))) {
						_1a8e95616_pushErr(_self_, (*((*(_95133_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95133_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95160_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab87816c:;
						if (it != expr_end) {
							jule::Ptr<_1a8e82229_TypeAlias> _98424_dg = *it;
							{
								if ((_97920_bg == _98424_dg)) {
									_1a8e95616_pushErr(_self_, (*((*(_95133_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95133_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1ab87816c:;
							++it;
							goto _iter_begin_1ab87816c;
						}
						_iter_end_1ab87816c:;
					};
				}
				_iter_next_1ab877787:;
				++it;
				goto _iter_begin_1ab877787;
			}
			_iter_end_1ab877787:;
		};
	};
	jule::Bool _99313_ok = _1a8e96c88_checkIllegalCycles(_self_, _95133_decl, jule::Any((*(_95160_ta)), &__jule_any_type65));;
	if ((!(_99313_ok))) {
		return nullptr;;
	};
	if (((*(*((*(_95160_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		_99313_ok=_1a8dd1222_checkTypeAliasDeclKind((*(_self_))._field_s, _95160_ta, (*(_self_))._field_lookup);
		if ((!(_99313_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_95160_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>::make({(*(_95160_ta))}));
	};
	jule::Ptr<_1a8e8301b_TypeKind> _101213_tk = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Generic=(*((*(_95160_ta))))._field_Generic, ._field_Kind=(*(*(*((*(_95160_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_Kind});;
	_1a8e96073_pushReferenceByKind(_self_, &(_101213_tk));
	if ((*((*(_95160_ta))))._field_Binded) {
		(*(_101213_tk))._field_BindIdent=(*((*(_95160_ta))))._field_Ident;
	} else {
		(*(_101213_tk))._field_BindIdent=(*(*(*((*(_95160_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_101213_tk, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data19);;
}



inline jule::Ptr<_1a8d52a56_Enum> _1a8e97580_fromEnum(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _102528_decl, jule::Ptr<_1a8d52a56_Enum>* _102555_e) {
	if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102555_e))))._field_Public, (*((*(_102555_e))))._field_Token)))) {
		_1a8e95616_pushErr(_self_, (*((*(_102528_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102528_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102528_decl))))._field_Generics.len() > 0LL)) {
		_1a8e95616_pushErr(_self_, (*((*(_102528_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102528_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102555_e));;
}



inline jule::Ptr<_1a8d54261_TypeEnum> _1a8e9797b_fromTypeEnum(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _103732_decl, jule::Ptr<_1a8d54261_TypeEnum>* _103759_e) {
	if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103759_e))))._field_Public, (*((*(_103759_e))))._field_Token)))) {
		_1a8e95616_pushErr(_self_, (*((*(_103732_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103732_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103732_decl))))._field_Generics.len() > 0LL)) {
		_1a8e95616_pushErr(_self_, (*((*(_103732_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103732_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103759_e));;
}



inline jule::Ptr<_1a8d5034a_Trait> _1a8e97d77_fromTrait(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _104929_decl, jule::Ptr<_1a8d5034a_Trait>* _104956_t) {
	if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104956_t))))._field_Public, (*((*(_104956_t))))._field_Token)))) {
		_1a8e95616_pushErr(_self_, (*((*(_104929_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104929_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104929_decl))))._field_Generics.len() > 0LL)) {
		_1a8e95616_pushErr(_self_, (*((*(_104929_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104929_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1acd4458d_pushReference(_self_, _104956_t);
	return (*(_104956_t));;
}



inline jule::Bool _1a8e98273_checkStructIns(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8d29ba4_StructIns>* _106238_ins, jule::Ptr<_1a875ce89_Token>* _106260_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_106238_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_106238_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type64_compare((*(*(_self_))._field_referencer.alloc)._field_owner, (*((*(_106238_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a8ddc816_precheckStructIns((*(_self_))._field_s, _106238_ins, (*(_106260_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_106238_ins))))._field_Generics.len() > 0LL)) {
		_1a8ddd32d_checkStructInsOperators((*(_self_))._field_s, (*(_106238_ins)));
		_1a8ddcabe_checkStructIns((*(_self_))._field_s, _106238_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a8e9852b_appendUsedStructReference(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8d26e26_Struct>* _108349_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab88bd62:;
			{
				jule::Ptr<_1a8d26e26_Struct> _108917_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a8d26e26_Struct>();;
				if ((!(_1a8d288a6_IsUses(_108917_refS.ptr(), (*(_108349_s)))))) {
					(*_108917_refS.alloc)._field_Uses=jule::append((*_108917_refS.alloc)._field_Uses,jule::Slice<jule::Ptr<_1a8d26e26_Struct>>::make({(*(_108349_s))}));
				};
			}
		}
		_match_end_1ab88bd0c:;
	};
}



inline jule::Ptr<_1a8d29ba4_StructIns> _1a8e98927_buildStructInstance(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _109643_decl, jule::Ptr<_1a8d26e26_Struct>* _109670_s) {
	jule::Ptr<_1a8e93dd9_referencer> _109813_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> _110013_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)) {
				_case_begin_1ab88ed21:;
				{
					jule::Ptr<_1a8d863c5_scopeChecker> _110721_sc = (*(_self_))._field_lookup.cast_ptr<_1a8d863c5_scopeChecker>((jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0);;
					jule::Ptr<_1a8d863c5_scopeChecker> _110821_hard = _1a8d89a05_getHardRoot(_110721_sc);;
					if ((((*((*(_110821_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*_110821_hard.alloc)._field_owner.alloc)._field_Owner))._field_Decl != (*(_109670_s))))) {
						goto _match_end_1ab88ecbb;
					};
					jule::I32 _111217_n = ((*(*_110821_hard.alloc)._field_owner.alloc)._field_Generics.len() + (*((*(*_110821_hard.alloc)._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_110821_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _111217_n);
				}
			}
			_match_end_1ab88ecbb:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _112213_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1a8d29ba4_StructIns> _112613_ins = _1a8d27388_instance((*(_109670_s)));;
	(*(_112613_ins))._field_Generics=jule::Slice<jule::Ptr<_1a8e81635_InsGeneric>>::alloc(0LL, (*((*(_109643_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109643_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab895145:;
		if (it != expr_end) {
			jule::Ptr<_1a8773565_TypeDecl> _112821_g = *it;
			{
				jule::Ptr<_1a8e8301b_TypeKind> _112917_kind = _1a8e9c233_build(_self_, &((*(_112821_g))._field_Kind));;
				if ((_112917_kind == nullptr)) {
					return nullptr;;
				};
				(*_112613_ins.alloc)._field_Generics=jule::append((*_112613_ins.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a8e81635_InsGeneric>>::make({jule::new_ptr<_1a8e81635_InsGeneric>(_1a8e81635_InsGeneric{._field_Kind=_112917_kind, })}));
			}
			_iter_next_1ab895145:;
			++it;
			goto _iter_begin_1ab895145;
		}
		_iter_end_1ab895145:;
	};
	(*(_self_))._field_lookup=_112213_lookup;
	(*(_self_))._field_bannedGenerics=_110013_bannedGenerics;
	(*(_self_))._field_referencer=_109813_referencer;
	return _112613_ins;;
}



inline jule::Ptr<_1a8d29ba4_StructIns> _1a8e98d23_fromStruct(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _114434_decl, jule::Ptr<_1a8d26e26_Struct>* _114461_s) {
	if ((!(_1a8dc46dd_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114461_s))))._field_Public, (*((*(_114461_s))))._field_Token)))) {
		_1a8e95616_pushErr(_self_, (*((*(_114434_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114434_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114434_decl))))._field_Generics.len() > 0LL)) {
			_1a8e95616_pushErr(_self_, (*((*(_114434_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1a8d29ba4_StructIns>(_1a8d29ba4_StructIns{._field_Decl=(*(_114461_s)), });;
	};
	jule::Bool _116213_ok = _1a8e96c88_checkIllegalCycles(_self_, _114434_decl, jule::Any((*(_114461_s)), &__jule_any_type64));;
	if ((!(_116213_ok))) {
		return nullptr;;
	};
	_1a8e9852b_appendUsedStructReference(_self_, _114461_s);
	jule::Ptr<_1a8d29ba4_StructIns> _116813_ins = _1a8e98927_buildStructInstance(_self_, _114434_decl, _114461_s);;
	if ((_116813_ins == nullptr)) {
		return nullptr;;
	};
	_116213_ok=_1a8dc54ad_checkGenericQuantity((*(_self_))._field_s, (*((*(_116813_ins))._field_Decl))._field_Generics.len(), (*(_116813_ins))._field_Generics.len(), (*((*(_114434_decl))))._field_Token);
	if ((!(_116213_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _117813_existInstance = _1a8d27696_appendInstance((*(_114461_s)).ptr(), &(_116813_ins));;
	if ((_117813_existInstance != nullptr)) {
		if ((!(_1a8dce41d_checkConstraintsStruct((*(_self_))._field_s, &(_116813_ins), &((*((*(_114434_decl))))._field_Token), _117813_existInstance)))) {
			return nullptr;;
		};
		_1acd41b95_pushReference(_self_, &(_117813_existInstance));
		return _117813_existInstance;;
	};
	if ((!(_1a8e98273_checkStructIns(_self_, &(_116813_ins), &((*((*(_114434_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1acd41b95_pushReference(_self_, &(_116813_ins));
	return _116813_ins;;
}



inline jule::Trait _1a8e99164_getDef(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl>* _120230_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab89ea34:;
		if (it != expr_end) {
			jule::Ptr<_1a8780770_GenericDecl> _120316_g = *it;
			{
				if (((*(_120316_g))._field_Ident == (*((*(_120230_decl))))._field_Ident)) {
					return jule::Trait(_1a8e9ee39_buildPrimType((*_120316_g.alloc)._field_Ident), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20);;
				};
			}
			_iter_next_1ab89ea34:;
			++it;
			goto _iter_begin_1ab89ea34;
		}
		_iter_end_1ab89ea34:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab89ed75:;
		if (it != expr_end) {
			jule::Ptr<_1a8e82229_TypeAlias> _120921_g = *it;
			{
				if (((*(_120921_g))._field_Ident == (*((*(_120230_decl))))._field_Ident)) {
					if (((*((*(_120230_decl))))._field_Generics.len() > 0LL)) {
						_1a8e95616_pushErr(_self_, (*((*(_120230_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_120230_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1a8d29ba4_StructIns> _121521_st = _1a8e86be0_Struct((*((*_120921_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_121521_st != nullptr)) {
						jule::Bool _121721_ok = _1a8e96c88_checkIllegalCycles(_self_, _120230_decl, jule::Any((*_121521_st.alloc)._field_Decl, &__jule_any_type64));;
						if ((!(_121721_ok))) {
							return nullptr;;
						};
					};
					return (*(*(*_120921_g.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1ab89ed75:;
			++it;
			goto _iter_begin_1ab89ed75;
		}
		_iter_end_1ab89ed75:;
	};
	if ((!((*((*(_120230_decl))))._field_Binded))) {
		jule::Ptr<_1a8d52a56_Enum> _122717_e = ((_1a8ea2b0c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8ea2667_FindEnum((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident);;
		if ((_122717_e != nullptr)) {
			return jule::Trait(_1a8e97580_fromEnum(_self_, _120230_decl, &(_122717_e)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data3);;
		};
		jule::Ptr<_1a8d54261_TypeEnum> _123217_te = ((_1a8ea2b0c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8ea29a8_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident);;
		if ((_123217_te != nullptr)) {
			return jule::Trait(_1a8e9797b_fromTypeEnum(_self_, _120230_decl, &(_123217_te)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data4);;
		};
		jule::Ptr<_1a8d5034a_Trait> _123717_t = ((_1a8ea2b0c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8ea2326_FindTrait((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident);;
		if ((_123717_t != nullptr)) {
			return jule::Trait(_1a8e97d77_fromTrait(_self_, _120230_decl, &(_123717_t)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1a8e95616_pushErr(_self_, (*((*(_120230_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8d26e26_Struct> _124613_s = ((_1a8ea2b0c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8ea1ad9_FindStruct((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident, (*((*(_120230_decl))))._field_Binded);;
	if ((_124613_s != nullptr)) {
		return jule::Trait(_1a8e98d23_fromStruct(_self_, _120230_decl, &(_124613_s)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0);;
	};
	jule::Ptr<_1a8e82229_TypeAlias> _125113_ta = ((_1a8ea2b0c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8ea16dd_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident, (*((*(_120230_decl))))._field_Binded);;
	if (((_125113_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_125113_ta=_1a9068b7e_findBuiltinTypeAlias((*((*(_120230_decl))))._field_Ident);
	};
	if ((_125113_ta != nullptr)) {
		return _1a8e97184_fromTypeAlias(_self_, _120230_decl, &(_125113_ta));;
	};
	_1a8e95616_pushErr(_self_, (*((*(_120230_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_120230_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait _1a8e994a5_buildIdent(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773b70_IdentTypeDecl> _126333_decl) {
	return _1a8e99164_getDef(_self_, &(_126333_decl));;
}



inline jule::Trait _1a8e997e6_buildSubIdent(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773e39_SubIdentTypeDecl> _126736_decl) {
	jule::Trait _126813_ident = _1a8e994a5_buildIdent(_self_, (*(_126736_decl))._field_Idents[0LL]);;
	if ((_126813_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126813_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data4)) {
			_case_begin_1ab8ac987:;
			{
				goto _match_end_1ab8aca42;
			}
		}
		else {
			_case_begin_1ab8aca97:;
			{
				_1a8e95616_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab8aca42:;
	};
	jule::Ptr<_1a8d54261_TypeEnum> _127913_t = _126813_ident.cast_ptr<_1a8d54261_TypeEnum>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1a8773b70_IdentTypeDecl>> _128013_idents = (*_126736_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_128013_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8ae5d2:;
		if (it != expr_end) {
			jule::I32 _128113_i = it - expr->begin();
			jule::Ptr<_1a8773b70_IdentTypeDecl> _128116_id = *it;
			{
				jule::Ptr<_1a8d53b89_TypeEnumItem> _128217_item = _1a8d54d22_FindItem(_127913_t.ptr(), (*(_128116_id))._field_Ident);;
				if ((_128217_item == nullptr)) {
					_1a8e95616_pushErr(_self_, (*_128116_id.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_127913_t.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_128116_id.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_128013_idents.len() - _128113_i) == 1LL)) {
					_1a8e96073_pushReferenceByKind(_self_, &((*((*(_128217_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_128217_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data19);;
				};
				_127913_t=_1a8e861a6_TypeEnum((*(*(_128217_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_127913_t == nullptr)) {
					_1a8e95616_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1ab8ae5d2:;
			++it;
			_128113_i++;
			goto _iter_begin_1ab8ae5d2;
		}
		_iter_end_1ab8ae5d2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8e8e621_Sptr> _1a8e99b37_buildSptrFromType(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _130141_elem) {
	{
		
		if (((*(_130141_elem)) == nullptr)) {
			_case_begin_1ab8b3ce0:;
			{
				return nullptr;;
			}
		}
		else if ((_1a8e86be0_Struct((*(_130141_elem)).ptr()) != nullptr)) {
			_case_begin_1ab8b3d89:;
			{
				jule::Ptr<_1a8d29ba4_StructIns> _130713_s = _1a8e86be0_Struct((*(_130141_elem)).ptr());;
				if ((((*(_130713_s))._field_Decl != nullptr) && (*(*_130713_s.alloc)._field_Decl.alloc)._field_Binded)) {
					_1a8e95616_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1a8e8643c_Arr((*(_130141_elem)).ptr()) != nullptr) && (*(_1a8e8643c_Arr((*(_130141_elem)).ptr())))._field_Auto)) {
			_case_begin_1ab8b3e00:;
			{
				_1a8e95616_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab8b34c6:;
	};
	return jule::new_ptr<_1a8e8e621_Sptr>(_1a8e8e621_Sptr{._field_Elem=(*(_130141_elem))});;
}



inline jule::Ptr<_1a8e8e621_Sptr> _1a8e99e78_buildSptr(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8774610_SptrTypeDecl> _132132_decl) {
	jule::Bool _13229_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13229_cycleRisk;
	});;
	jule::Ptr<_1a8e8301b_TypeKind> _132613_elem = _1a8e9c574_checkDecl(_self_, &((*(_132132_decl))._field_Elem));;
	return _1a8e99b37_buildSptrFromType(_self_, &(_132613_elem));;
}



inline jule::Ptr<_1a8e92dd8_Ptr> _1a8e9a2b9_buildPtrFromType(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _133040_elem) {
	{
		
		if (((*(_133040_elem)) == nullptr)) {
			_case_begin_1ab8b8de4:;
			{
				return nullptr;;
			}
		}
		else if (((_1a8e8643c_Arr((*(_133040_elem)).ptr()) != nullptr) && (*(_1a8e8643c_Arr((*(_133040_elem)).ptr())))._field_Auto)) {
			_case_begin_1ab8b8e8d:;
			{
				_1a8e95616_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1a8e92dd8_Ptr>();;
			}
		}
		_match_end_1ab8b8cd4:;
	};
	return jule::new_ptr<_1a8e92dd8_Ptr>(_1a8e92dd8_Ptr{._field_Elem=(*(_133040_elem))});;
}



inline jule::Ptr<_1a8e92dd8_Ptr> _1a8e9a60a_buildPtr(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a877508e_PtrTypeDecl> _134531_decl) {
	jule::Bool _13469_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13469_cycleRisk;
	});;
	jule::Ptr<_1a8e8301b_TypeKind> _135017_elem = nullptr;;
	if ((!(_1a8775402_IsUnsafe(_134531_decl.ptr())))) {
		_135017_elem=_1a8e9c574_checkDecl(_self_, &((*_134531_decl.alloc)._field_Elem));
		return _1a8e9a2b9_buildPtrFromType(_self_, &(_135017_elem));;
	};
	return jule::new_ptr<_1a8e92dd8_Ptr>(_1a8e92dd8_Ptr{._field_Elem=_135017_elem});;
}



inline jule::Ptr<_1a8e900e4_Slc> _1a8e9a94b_buildSlc(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8774995_SlcTypeDecl> _136231_decl) {
	jule::Bool _13639_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13639_cycleRisk;
	});;
	jule::Ptr<_1a8e8301b_TypeKind> _136713_elem = _1a8e9c574_checkDecl(_self_, &((*(_136231_decl))._field_Elem));;
	{
		
		if ((_136713_elem == nullptr)) {
			_case_begin_1ab8bdee8:;
			{
				return nullptr;;
			}
		}
		else if (((_1a8e8643c_Arr(_136713_elem.ptr()) != nullptr) && (*(_1a8e8643c_Arr(_136713_elem)))._field_Auto)) {
			_case_begin_1ab8be092:;
			{
				_1a8e95616_pushErr(_self_, (*((*_136231_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab8bde93:;
	};
	return jule::new_ptr<_1a8e900e4_Slc>(_1a8e900e4_Slc{._field_Elem=_136713_elem});;
}



inline jule::Ptr<_1a8e92415_Arr> _1a8e9ac8c_buildArr(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8775831_ArrTypeDecl> _138331_decl) {
	jule::I32 _138413_n = 0LL;;
	if ((!(_1a8775b94_AutoSized(_138331_decl.ptr())))) {
		jule::Ptr<_1a8e4bcb5_Data> _138717_size = _1a8e6bc4c_evalExpr(_1a8dcb42b_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_138331_decl.alloc)._field_Size);;
		if ((_138717_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1a8e4c6bc_IsConst(_138717_size.ptr())))) {
			_1a8e95616_pushErr(_self_, (*((*_138331_decl.alloc)._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1a8e8566c_Prim((*(_138717_size))._field_Kind.ptr()) == nullptr) || (!(_20a2b68d6_IsInt((*(_1a8e8566c_Prim((*(_138717_size))._field_Kind)))._field_Kind))))) {
			_1a8e95616_pushErr(_self_, (*((*_138331_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138413_n=static_cast<jule::I32>(_20a2b9be7_AsI64((*(_138717_size))._field_Constant.ptr()));
		if ((_138413_n < 0LL)) {
			_1a8e95616_pushErr(_self_, (*((*_138331_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140517_max = _20a2b2948_MaxI(jule::Str::lit("int", 3));;
			if (((_20a2aa820_BitSize != 64LL) && (static_cast<jule::I64>(_138413_n) > _140517_max))) {
				_1a8e95616_pushErr(_self_, (*((*_138331_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1a8e7e028_constoa(&((*(_138717_size))._field_Constant)), &__jule_any_type4),jule::Any(_20a2a91c0_FmtInt(_140517_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1a8e8301b_TypeKind> _141413_elem = _1a8e9c574_checkDecl(_self_, &((*_138331_decl.alloc)._field_Elem));;
	{
		
		if ((_141413_elem == nullptr)) {
			_case_begin_1ab8c8b5c:;
			{
				return nullptr;;
			}
		}
		else if (((_1a8e8643c_Arr(_141413_elem.ptr()) != nullptr) && (*(_1a8e8643c_Arr(_141413_elem)))._field_Auto)) {
			_case_begin_1ab8c8bd4:;
			{
				_1a8e95616_pushErr(_self_, (*((*_138331_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab8c7078:;
	};
	return jule::new_ptr<_1a8e92415_Arr>(_1a8e92415_Arr{._field_Auto=_1a8775b94_AutoSized(_138331_decl), ._field_N=_138413_n, ._field_Elem=_141413_elem});;
}



inline jule::Ptr<_1a8e91788_Map> _1a8e9b0cd_buildMap(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a877607e_MapTypeDecl> _143231_decl) {
	jule::Bool _14339_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14339_cycleRisk;
	});;
	jule::Ptr<_1a8e8301b_TypeKind> _143713_key = _1a8e9c574_checkDecl(_self_, &((*(_143231_decl))._field_Key));;
	if ((_143713_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8e8301b_TypeKind> _144213_val = _1a8e9c574_checkDecl(_self_, &((*_143231_decl.alloc)._field_Val));;
	if ((_144213_val == nullptr)) {
		return nullptr;;
	};
	if ((_1a8e85e20_Enum(_144213_val.ptr()) != nullptr)) {
		_1a8e95616_pushErr(_self_, (*((*_143231_decl.alloc)._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1a8e91788_Map>(_1a8e91788_Map{._field_Key=_143713_key, ._field_Val=_144213_val});;
}



inline jule::Ptr<_1a8e90bd8_Tuple> _1a8e9b41e_buildTuple(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8774c92_TupleTypeDecl> _145633_decl) {
	jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>> _145713_types = jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>>::alloc(0LL, (*(_145633_decl))._field_Types.len());;
	{
		auto expr = &((*_145633_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8d016e:;
		if (it != expr_end) {
			jule::Ptr<_1a8773565_TypeDecl> _145821_t = *it;
			{
				jule::Ptr<_1a8e8301b_TypeKind> _145917_kind = _1a8e9c574_checkDecl(_self_, &(_145821_t));;
				if ((_145917_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>> &__jule_push_dest = _145713_types; __jule_push_dest.push(_145917_kind); };
			}
			_iter_next_1ab8d016e:;
			++it;
			goto _iter_begin_1ab8d016e;
		}
		_iter_end_1ab8d016e:;
	};
	return jule::new_ptr<_1a8e90bd8_Tuple>(_1a8e90bd8_Tuple{._field_Types=_145713_types});;
}



inline jule::Bool _1a8e9b760_checkFuncTypes(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8d3ee72_FnIns>* _146938_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146938_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8d1ba9:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3dde9_ParamIns> _147021_p = *it;
			{
				(*(_147021_p))._field_Kind=_1a8e9c233_build(_self_, &((*((*((*((*_147021_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_147021_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1a8dceac2_checkFnParamKind((*(_self_))._field_s, &(_147021_p));
			}
			_iter_next_1ab8d1ba9:;
			++it;
			goto _iter_begin_1ab8d1ba9;
		}
		_iter_end_1ab8d1ba9:;
	};
	if ((!(_1a8d3c414_IsVoid((*((*(_146938_f))))._field_Decl.ptr())))) {
		(*((*(_146938_f))))._field_Result=_1a8e9c233_build(_self_, &((*(*((*((*(*((*(_146938_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_146938_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a8d3ee72_FnIns> _1a8e9baa1_buildFunc(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8785225_FnDecl> _148732_decl) {
	jule::Bool _14889_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14889_cycleRisk;
	});;
	if (((*(_148732_decl))._field_Generics.len() > 0LL)) {
		_1a8e95616_pushErr(_self_, (*_148732_decl.alloc)._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8d3be91_Fn> _149713_f = _1a8d465d8_buildFunc(_148732_decl);;
	jule::I32 _14999_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1a8dd8db7_checkAnonFuncDecl((*(_self_))._field_s, &(_149713_f));
	if ((_14999_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _150513_ins = _1a8d3d46a_instanceForce(_149713_f);;
	(*(_150513_ins))._field_Anon=true;
	(*_150513_ins.alloc)._field_AsAnon=true;
	jule::Bool _15099_ok = _1a8e9b760_checkFuncTypes(_self_, &(_150513_ins));;
	if ((!(_15099_ok))) {
		return nullptr;;
	};
	return _150513_ins;;
}



inline jule::Trait _1a8e9bde2_buildByNamespace(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8774313_NamespaceTypeDecl> _151739_decl) {
	jule::Str _15189_path = _1a8e9ea60_buildLinkPathByTokens(&((*(_151739_decl))._field_Idents));;
	jule::Ptr<_1a8da0ea0_ImportInfo> _151913_imp = ((_1a8ea2b0c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8ea0de6_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>>((void*)__jule_anon_1ab8db356, jule::Ptr<__jule_anon_1ab8db356_ctx>::make(__jule_anon_1ab8db356_ctx{._151739_decl=_151739_decl,._15189_path=_15189_path}).as<jule::Uintptr>(), __jule_anon_1ab8db356_ctx_handler));;
	jule::Str _15269_selfIdent = jule::Str::lit("self", 4);;
	if (((_151913_imp == nullptr) || (!(_1a8da34e1_isLookupable(_151913_imp.ptr(), &(_15269_selfIdent)))))) {
		_1a8e95616_pushErr(_self_, (*_151739_decl.alloc)._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15189_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1a8e95a12_disallowBuiltin(_self_);
	jule::Trait _153313_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_151913_imp, (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data1);
	jule::Ptr<_1a8e8301b_TypeKind> _153513_kind = _1a8e9c574_checkDecl(_self_, &((*_151739_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_153313_lookup;
	_1a8e95814_allowBuiltin(_self_);
	return jule::Trait(_153513_kind, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data19);;
}



inline jule::Ptr<_1a8e8301b_TypeKind> _1a8e9c233_build(_1a8e94dc9_typeChecker* _self_, jule::Any* _154129_declKind) {
	jule::Trait _154217_kind = nullptr;;
	{
		auto &_match_expr{ (*(_154129_declKind)) };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ab8e1d40:;
			{
				jule::Trait _154517_t = _1a8e994a5_buildIdent(_self_, (*(_154129_declKind)).cast_ptr<_1a8773b70_IdentTypeDecl>(&__jule_any_type74));;
				if ((_154517_t != nullptr)) {
					_154217_kind=_154517_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ab8e125c:;
			{
				jule::Trait _155017_t = _1a8e997e6_buildSubIdent(_self_, (*(_154129_declKind)).cast_ptr<_1a8773e39_SubIdentTypeDecl>(&__jule_any_type87));;
				if ((_155017_t != nullptr)) {
					_154217_kind=_155017_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ab8e1405:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a8e8e621_Sptr> _155617_t = _1a8e99e78_buildSptr(_self_, (*(_154129_declKind)).cast_ptr<_1a8774610_SptrTypeDecl>(&__jule_any_type71));;
				if ((_155617_t != nullptr)) {
					_154217_kind=jule::Trait(_155617_t, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ab8e146b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a8e92dd8_Ptr> _156217_t = _1a8e9a60a_buildPtr(_self_, (*(_154129_declKind)).cast_ptr<_1a877508e_PtrTypeDecl>(&__jule_any_type70));;
				if ((_156217_t != nullptr)) {
					_154217_kind=jule::Trait(_156217_t, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ab8e14d2:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a8e900e4_Slc> _156817_t = _1a8e9a94b_buildSlc(_self_, (*(_154129_declKind)).cast_ptr<_1a8774995_SlcTypeDecl>(&__jule_any_type69));;
				if ((_156817_t != nullptr)) {
					_154217_kind=jule::Trait(_156817_t, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ab8e1548:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a8e92415_Arr> _157417_t = _1a8e9ac8c_buildArr(_self_, (*(_154129_declKind)).cast_ptr<_1a8775831_ArrTypeDecl>(&__jule_any_type68));;
				if ((_157417_t != nullptr)) {
					_154217_kind=jule::Trait(_157417_t, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ab8e15ae:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a8e91788_Map> _158017_t = _1a8e9b0cd_buildMap(_self_, (*(_154129_declKind)).cast_ptr<_1a877607e_MapTypeDecl>(&__jule_any_type72));;
				if ((_158017_t != nullptr)) {
					_154217_kind=jule::Trait(_158017_t, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ab8e1625:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a8e90bd8_Tuple> _158617_t = _1a8e9b41e_buildTuple(_self_, (*(_154129_declKind)).cast_ptr<_1a8774c92_TupleTypeDecl>(&__jule_any_type73));;
				if ((_158617_t != nullptr)) {
					_154217_kind=jule::Trait(_158617_t, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ab8e1e0b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a8d3ee72_FnIns> _159217_t = _1a8e9baa1_buildFunc(_self_, (*(_154129_declKind)).cast_ptr<_1a8785225_FnDecl>(&__jule_any_type14));;
				if ((_159217_t != nullptr)) {
					_154217_kind=jule::Trait(_159217_t, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ab8e1e72:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _159817_t = _1a8e9bde2_buildByNamespace(_self_, (*(_154129_declKind)).cast_ptr<_1a8774313_NamespaceTypeDecl>(&__jule_any_type91));;
				if ((_159817_t != nullptr)) {
					_154217_kind=_159817_t;
				};
			}
		}
		else {
			_case_begin_1ab8e138e:;
			{
				_1a8e95616_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab8e1339:;
	};
	if ((_154217_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _154217_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data19)) {
			_case_begin_1ab90039d:;
			{
				return _154217_kind.cast_ptr<_1a8e8301b_TypeKind>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1ab8e236d:;
			{
				jule::Ptr<_1a8e8301b_TypeKind> _161317_tk = jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=_154217_kind});;
				{
					auto &_match_expr{ _154217_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)) {
						_case_begin_1ab8ed7a8:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_161317_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0)) {
						_case_begin_1ab8ed643:;
						{
							jule::Ptr<_1a8d29ba4_StructIns> _162017_s = _154217_kind.cast_ptr<_1a8d29ba4_StructIns>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0);;
							if ((((*(_162017_s))._field_Decl != nullptr) && (*(*_162017_s.alloc)._field_Decl.alloc)._field_Binded)) {
								(*(_161317_tk))._field_BindIdent=(*(*_162017_s.alloc)._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1ab8ed753:;
				};
				return _161317_tk;;
			}
		}
		_match_end_1ab8e22d5:;
	};
}



inline jule::Ptr<_1a8e8301b_TypeKind> _1a8e9c574_checkDecl(_1a8e94dc9_typeChecker* _self_, jule::Ptr<_1a8773565_TypeDecl>* _162933_decl) {
	jule::Ptr<_1a875ce89_Token> _163113_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162933_decl))))._field_Token;
	jule::Ptr<_1a8e8301b_TypeKind> _163413_kind = _1a8e9c233_build(_self_, &((*((*(_162933_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_163113_errorToken;
	return _163413_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e94dc9_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a8e9cec0_prim(jule::Str* _165621_ident, jule::Ptr<_1a8e8aae5_Prim> _165633_t) {
	return ((*(_165633_t))._field_Kind == (*(_165621_ident)));;
}



inline jule::Bool static__1a8e9d344_exist(jule::Str* _166022_ident, jule::Ptr<_1a8e8301b_TypeKind>* _166039_k) {
	{
		
		if ((_1a8e8566c_Prim((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1ab9051c7:;
			{
				return static__1a8e9cec0_prim(_166022_ident, _1a8e8566c_Prim((*(_166039_k)).ptr()));;
			}
		}
		else if ((_1a8e85903_Sptr((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1ab90524e:;
			{
				jule::Ptr<_1a8e8e621_Sptr> _166517_sptr = _1a8e85903_Sptr((*(_166039_k)).ptr());;
				return static__1a8e9d344_exist(_166022_ident, &((*(_166517_sptr))._field_Elem));;
			}
		}
		else if ((_1a8e85b89_Ptr((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1ab9052c6:;
			{
				jule::Ptr<_1a8e92dd8_Ptr> _166817_ptr = _1a8e85b89_Ptr((*(_166039_k)).ptr());;
				return static__1a8e9d344_exist(_166022_ident, &((*(_166817_ptr))._field_Elem));;
			}
		}
		else if ((_1a8e866c3_Slc((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1ab90534d:;
			{
				jule::Ptr<_1a8e900e4_Slc> _167117_slc = _1a8e866c3_Slc((*(_166039_k)).ptr());;
				return static__1a8e9d344_exist(_166022_ident, &((*(_167117_slc))._field_Elem));;
			}
		}
		else if ((_1a8e8643c_Arr((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1ab905518:;
			{
				jule::Ptr<_1a8e92415_Arr> _167417_arr = _1a8e8643c_Arr((*(_166039_k)).ptr());;
				return static__1a8e9d344_exist(_166022_ident, &((*(_167417_arr))._field_Elem));;
			}
		}
		else if ((_1a8e8720c_Map((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1ab90557e:;
			{
				jule::Ptr<_1a8e91788_Map> _167717_m = _1a8e8720c_Map((*(_166039_k)).ptr());;
				return (static__1a8e9d344_exist(_166022_ident, &((*(_167717_m))._field_Key)) || static__1a8e9d344_exist(_166022_ident, &((*_167717_m.alloc)._field_Val)));;
			}
		}
		else if ((_1a8e86be0_Struct((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1ab9055e5:;
			{
				jule::Ptr<_1a8d29ba4_StructIns> _168117_s = _1a8e86be0_Struct((*(_166039_k)).ptr());;
				{
					auto expr = &((*(_168117_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab90c6b8:;
					if (it != expr_end) {
						jule::Ptr<_1a8e81635_InsGeneric> _168225_g = *it;
						{
							if (static__1a8e9d344_exist(_166022_ident, &((*(_168225_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ab90c6b8:;
						++it;
						goto _iter_begin_1ab90c6b8;
					}
					_iter_end_1ab90c6b8:;
				};
				return false;;
			}
		}
		else if ((_1a8e86959_Fn((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1ab90565b:;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _168917_f = _1a8e86959_Fn((*(_166039_k)).ptr());;
				{
					auto expr = &((*(_168917_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab90e2e1:;
					if (it != expr_end) {
						jule::Ptr<_1a8d3dde9_ParamIns> _169025_p = *it;
						{
							if (_1a8d3aad8_IsSelf((*(_169025_p))._field_Decl.ptr())) {
								goto _iter_next_1ab90e2e1;
							};
							if (static__1a8e9d344_exist(_166022_ident, &((*_169025_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ab90e2e1:;
						++it;
						goto _iter_begin_1ab90e2e1;
					}
					_iter_end_1ab90e2e1:;
				};
				if (((*_168917_f.alloc)._field_Result != nullptr)) {
					return static__1a8e9d344_exist(_166022_ident, &((*_168917_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1a8e87493_Tup((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1ab9056d3:;
			{
				jule::Ptr<_1a8e90bd8_Tuple> _170317_tup = _1a8e87493_Tup((*(_166039_k)).ptr());;
				{
					auto expr = &((*(_170317_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab911b0c:;
					if (it != expr_end) {
						jule::Ptr<_1a8e8301b_TypeKind> _170425_t = *it;
						{
							if (static__1a8e9d344_exist(_166022_ident, &(_170425_t))) {
								return true;;
							};
						}
						_iter_next_1ab911b0c:;
						++it;
						goto _iter_begin_1ab911b0c;
					}
					_iter_end_1ab911b0c:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ab9050a6:;
			{
				return false;;
			}
		}
		_match_end_1ab904ea7:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8e9ca80_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a98a065d_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a98e63b8_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1a98e73ca_stop(_1a98e6c59_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1a98e7661_stopped(_1a98e6c59_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1a98e78e7_finished(_1a98e6c59_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1a98e7b7d_isLastSt(_1a98e6c59_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1a98e7ee1_pushErr(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a875ce89_Token> _18826_token, jule::Str _18841_fmt) {
	_20a0a5362_pushErr((*(_self_))._field_p.ptr(), _18826_token, _18841_fmt, jule::Slice<jule::Any>());
}



inline void _1a98e8354_pushSuggestion(_1a98e6c59_scopeParser* _self_, jule::Str _19333_fmt, jule::Slice<jule::Any> _19346_args) {
	_20a0a56c5_pushSuggestion((*(_self_))._field_p.ptr(), _19333_fmt, _19346_args);
}



inline void _1a98e860c_insertAsNext(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _19736_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1a98e63b8_stmt>(_1a98e63b8_stmt{._field_tokens=(*(_19736_tokens)), });
}



inline jule::Ptr<_1a98e63b8_stmt> _1a98e8893_next(_1a98e6c59_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1a8783586_ScopeTree> _1a98e8c8e_buildScope(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _20734_tokens, jule::Ptr<_1a875ce89_Token> _20756_end) {
	jule::Ptr<_1a8783586_ScopeTree> _20813_s = _1a98e5142_newScope();;
	(*(_20813_s))._field_Parent=(*(_self_))._field_s;
	(*_20813_s.alloc)._field_End=_20756_end;
	_1a98e6c59_scopeParser _21113_ssp = _1a98e6c59_scopeParser{._field_p=(*(_self_))._field_p, };;
	_20a09320c_build(&_21113_ssp, _20734_tokens, &(_20813_s));
	return _20813_s;;
}



inline jule::Ptr<_1a87863d0_VarDecl> _1a98e90d0_buildVarSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _21834_tokens) {
	jule::Ptr<_1a87863d0_VarDecl> _21913_v = _20a0a8134_buildVar((*(_self_))._field_p, (*(_21834_tokens)));;
	(*(_21913_v))._field_Scope=(*(_self_))._field_s;
	return _21913_v;;
}



inline jule::Ptr<_1a87867a9_RetSt> _1a98e9421_buildRetSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _22433_tokens) {
	jule::Ptr<_1a87867a9_RetSt> _22513_st = jule::new_ptr<_1a87867a9_RetSt>(_1a87867a9_RetSt{._field_Token=_22433_tokens[0LL], });;
	if ((_22433_tokens.len() > 1LL)) {
		(_22433_tokens).mut_slice(1LL);;
		(*(_22513_st))._field_Expr=_20a0a5a16_buildExpr((*(_self_))._field_p, &(_22433_tokens));
	};
	return _22513_st;;
}



inline jule::Ptr<_1a8787029_Iter> _1a98e9762_buildWhileNextIter(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a98e63b8_stmt>* _23542_s) {
	jule::Ptr<_1a8787029_Iter> _23613_it = jule::new_ptr<_1a8787029_Iter>(_1a8787029_Iter{._field_Token=(*((*(_23542_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _23913_tokens = (*((*(_23542_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1a8787854_WhileKind> _24013_kind = jule::new_ptr<_1a8787854_WhileKind>();;
	if ((_23913_tokens.len() > 0LL)) {
		(*_24013_kind.alloc)._field_Expr=_20a0a5a16_buildExpr((*(_self_))._field_p, &(_23913_tokens));
	};
	if (_1a98e7b7d_isLastSt(_self_)) {
		_1a98e7ee1_pushErr(_self_, (*(_23613_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_23913_tokens=(*(_1a98e8893_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _25213_stTokens = _20a09ea32_getBlockExpr(&(_23913_tokens));;
	if ((_25213_stTokens.len() > 0LL)) {
		jule::Ptr<_1a98e63b8_stmt> _25417_stmt = jule::new_ptr<_1a98e63b8_stmt>(_1a98e63b8_stmt{._field_tokens=_25213_stTokens, ._field_terminated=(*((*(_23542_s))))._field_terminated});;
		(*_24013_kind.alloc)._field_NextToken=_25213_stTokens[0LL];
		(*_24013_kind.alloc)._field_Next=_20a092d99_buildSt(_self_, &(_25417_stmt));
	};
	jule::I32 _26213_i = _25213_stTokens.len();;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _26313_blockTokens = _20a0a3063_range(&(_26213_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_23913_tokens));;
	if ((_26313_blockTokens == nullptr)) {
		_1a98e73ca_stop(_self_);
		_1a98e7ee1_pushErr(_self_, (*_23613_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a98e8354_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26213_i < _23913_tokens.len())) {
		_1a98e7ee1_pushErr(_self_, _23913_tokens[_26213_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_23613_it.alloc)._field_Scope=_1a98e8c8e_buildScope(_self_, &(_26313_blockTokens), _23913_tokens[(_26213_i - 1LL)]);
	(*_23613_it.alloc)._field_Kind=jule::Any(_24013_kind, &__jule_any_type36);
	return _23613_it;;
}



inline jule::Ptr<_1a8787854_WhileKind> _1a98e9aa3_buildWhileIterKind(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _28042_tokens) {
	return jule::new_ptr<_1a8787854_WhileKind>(_1a8787854_WhileKind{._field_Expr=_20a0a5a16_buildExpr((*(_self_))._field_p, _28042_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _1a98e9de4_getRangeKindKeysTokens(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _28646_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _28713_vars;
	jule::Slice<_224743e15_Log> _28719_errs;
	({
		__jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log __jule_assign_result = _20a0a37d3_parts(_28646_toks, static_cast<jule::U32>(5LLU), true);
		_28713_vars = __jule_assign_result.__jule_result_arg0;
		_28719_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28719_errs);
	return _28713_vars;;
}



inline jule::Ptr<_1a87863d0_VarDecl> _1a98ea235_buildRangeKindKey(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _29241_tokens) {
	if (((*(_29241_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a87863d0_VarDecl> _29613_key = jule::new_ptr<_1a87863d0_VarDecl>(_1a87863d0_VarDecl{._field_Token=(*(_29241_tokens))[0LL], ._field_Setter=(*(_29241_tokens))[0LL], });;
	if (((*((*(_29613_key))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_29613_key.alloc)._field_Mutable=true;
		if (((*(_29241_tokens)).len() == 1LL)) {
			_1a98e7ee1_pushErr(_self_, (*_29613_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*_29613_key.alloc)._field_Token=(*(_29241_tokens))[1LL];
	} else if (((*(_29241_tokens)).len() > 1LL)) {
		_1a98e7ee1_pushErr(_self_, (*(_29241_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29613_key))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a98e7ee1_pushErr(_self_, (*_29613_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		_1a98e8354_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_29613_key.alloc)._field_Ident=(*(*_29613_key.alloc)._field_Token.alloc)._field_Kind;
	return _29613_key;;
}



inline jule::Slice<jule::Ptr<_1a87863d0_VarDecl>> _1a98ea576_buildRangeKindKeys(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_1a87863d0_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad036b48:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1a87863d0_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_1a98ea235_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_1ad036b48:;
			++it;
			goto _iter_begin_1ad036b48;
		}
		_iter_end_1ad036b48:;
	};
	return _31917_keys;;
}



inline void _1a98ea8d9_setupRangeKindKeysPlain(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a878825b_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _32713_keyTokens = _1a98e9de4_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32713_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32713_keyTokens.len() > 2LL)) {
		_1a98e7ee1_pushErr(_self_, (*((*(_32647_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1a87863d0_VarDecl>> _33413_keys = _1a98ea576_buildRangeKindKeys(_self_, &(_32713_keyTokens));;
	(*((*(_32647_rng))))._field_KeyA=_33413_keys[0LL];
	if ((_33413_keys.len() > 1LL)) {
		(*((*(_32647_rng))))._field_KeyB=_33413_keys[1LL];
	};
}



inline void _1a98eac4c_setupRangeKindKeysExplicit(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a878825b_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _34172_tokens) {
	jule::I32 _34213_i = 0LL;;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _34313_rang = _20a0a3063_range(&(_34213_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _34172_tokens);;
	if ((_34213_i < (*(_34172_tokens)).len())) {
		_1a98e7ee1_pushErr(_self_, (*((*(_34150_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1a98ea8d9_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34313_rang));
}



inline void _1a98eb0b0_setupRangeKindKeys(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a878825b_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _35064_tokens) {
	if (((*((*(_35064_tokens))[0LL]))._field_Id == static_cast<jule::U32>(74LLU))) {
		_1a98eac4c_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_1a98ea8d9_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_1a878825b_RangeKind> _1a98eb566_buildRangeIterKind(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _35914_exprTokens, jule::Ptr<_1a875ce89_Token>* _35941_inToken) {
	jule::Ptr<_1a878825b_RangeKind> _36013_rng = jule::new_ptr<_1a878825b_RangeKind>(_1a878825b_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_1a98e7ee1_pushErr(_self_, (*(_36013_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36013_rng;;
	};
	(*_36013_rng.alloc)._field_Expr=_20a0a5a16_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_1a98eb0b0_setupRangeKindKeys(_self_, &(_36013_rng), _35842_var_tokens);
	};
	return _36013_rng;;
}



inline jule::Any _1a98eb962_buildCommonIterKind(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _37443_tokens, jule::Ptr<_1a875ce89_Token>* _37462_err_tok) {
	jule::I32 _37513_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad046372:;
		if (it != expr_end) {
			jule::I32 _37614_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ad046d23:;
						{
							(_37513_braceN)++;
							goto _iter_next_1ad046372;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ad0471ec:;
						{
							(_37513_braceN)--;
						}
					}
					_match_end_1ad04710e:;
				};
				if ((_37513_braceN != 0LL)) {
					goto _iter_next_1ad046372;
				};
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(12LLU)) {
						_case_begin_1ad0483eb:;
						{
							jule::Slice<jule::Ptr<_1a875ce89_Token>> _39321_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_1a875ce89_Token>> _39421_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_1a98eb566_buildRangeIterKind(_self_, &(_39321_declTokens), &(_39421_exprTokens), &(_37621_tok)), &__jule_any_type38);;
						}
					}
					_match_end_1ad0488d5:;
				};
			}
			_iter_next_1ad046372:;
			++it;
			_37614_i++;
			goto _iter_begin_1ad046372;
		}
		_iter_end_1ad046372:;
	};
	return jule::Any(_1a98e9aa3_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type36);;
}



inline jule::Ptr<_1a8787029_Iter> _1a98ebca3_buildCommonIter(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _40138_tokens) {
	jule::Ptr<_1a8787029_Iter> _40213_it = jule::new_ptr<_1a8787029_Iter>(_1a8787029_Iter{._field_Token=_40138_tokens[0LL], });;
	(_40138_tokens).mut_slice(1LL);;
	if ((_40138_tokens.len() == 0LL)) {
		_1a98e73ca_stop(_self_);
		_1a98e7ee1_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1a98e8354_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _41213_exprTokens = _20a09ea32_getBlockExpr(&(_40138_tokens));;
	if ((_41213_exprTokens.len() > 0LL)) {
		(*_40213_it.alloc)._field_Kind=_1a98eb962_buildCommonIterKind(_self_, &(_41213_exprTokens), &((*_40213_it.alloc)._field_Token));
	};
	jule::I32 _41613_i = _41213_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _41713_scopeTokens = _20a0a3063_range(&(_41613_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_40138_tokens));;
	if ((_41713_scopeTokens == nullptr)) {
		_1a98e73ca_stop(_self_);
		_1a98e7ee1_pushErr(_self_, (*_40213_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a98e8354_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41613_i < _40138_tokens.len())) {
		_1a98e7ee1_pushErr(_self_, _40138_tokens[_41613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_40213_it.alloc)._field_Scope=_1a98e8c8e_buildScope(_self_, &(_41713_scopeTokens), _40138_tokens[(_41613_i - 1LL)]);
	return _40213_it;;
}



inline jule::Ptr<_1a8787029_Iter> _20a08b6de_buildIterSt(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a98e63b8_stmt>* _43135_st) {
	if ((*((*(_43135_st))))._field_terminated) {
		return _1a98e9762_buildWhileNextIter(_self_, _43135_st);;
	};
	return _1a98ebca3_buildCommonIter(_self_, (*((*(_43135_st))))._field_tokens);;
}



inline jule::Ptr<_1a8788635_BreakSt> _20a08ba30_buildBreakSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _43836_tokens) {
	jule::Ptr<_1a8788635_BreakSt> _43913_brk = jule::new_ptr<_1a8788635_BreakSt>(_1a8788635_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*((*(_43836_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1a98e7ee1_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1a98e8354_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_43913_brk))._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_1a98e7ee1_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _43913_brk;;
}



inline jule::Ptr<_1a8788a0e_ContSt> _20a08bd71_buildContSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _45635_tokens) {
	jule::Ptr<_1a8788a0e_ContSt> _45713_cont = jule::new_ptr<_1a8788a0e_ContSt>(_1a8788a0e_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*((*(_45635_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1a98e7ee1_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1a98e8354_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45713_cont))._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_1a98e7ee1_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45713_cont;;
}



inline jule::Ptr<_1a8788eb5_If> _20a08c1b2_buildIf(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _47431_tokens) {
	jule::Ptr<_1a8788eb5_If> _47513_model = jule::new_ptr<_1a8788eb5_If>(_1a8788eb5_If{._field_Token=(*(_47431_tokens))[0LL], });;
	((*(_47431_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _47913_exprTokens = _20a09ea32_getBlockExpr(_47431_tokens);;
	jule::I32 _48013_i = 0LL;;
	if ((_47913_exprTokens.len() == 0LL)) {
		_1a98e7ee1_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48013_i=_47913_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _48613_scopeTokens = _20a0a3063_range(&(_48013_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _47431_tokens);;
	if ((_48613_scopeTokens == nullptr)) {
		_1a98e73ca_stop(_self_);
		_1a98e7ee1_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1a98e8354_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a875ce89_Token> _49313_end = (*(_47431_tokens))[(_48013_i - 1LL)];;
	if ((_48013_i < (*(_47431_tokens)).len())) {
		if (((*((*(_47431_tokens))[_48013_i]))._field_Id == static_cast<jule::U32>(14LLU))) {
			((*(_47431_tokens))).mut_slice(_48013_i);;
		} else {
			_1a98e7ee1_pushErr(_self_, (*(_47431_tokens))[_48013_i], jule::Str::lit("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	(*_47513_model.alloc)._field_Expr=_20a0a5a16_buildExpr((*(_self_))._field_p, &(_47913_exprTokens));
	(*_47513_model.alloc)._field_Scope=_1a98e8c8e_buildScope(_self_, &(_48613_scopeTokens), _49313_end);
	return _47513_model;;
}



inline jule::Ptr<_1a878938e_Else> _20a08c503_buildElse(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _50733_tokens) {
	jule::Ptr<_1a878938e_Else> _50813_els = jule::new_ptr<_1a878938e_Else>(_1a878938e_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	((*(_50733_tokens))).mut_slice(1LL);;
	jule::I32 _51213_i = 0LL;;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _51313_scopeTokens = _20a0a3063_range(&(_51213_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _50733_tokens);;
	if ((_51313_scopeTokens == nullptr)) {
		if ((_51213_i < (*(_50733_tokens)).len())) {
			_1a98e7ee1_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1a98e73ca_stop(_self_);
			_1a98e7ee1_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1a98e8354_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51213_i < (*(_50733_tokens)).len())) {
		_1a98e7ee1_pushErr(_self_, (*(_50733_tokens))[_51213_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50813_els))._field_Scope=_1a98e8c8e_buildScope(_self_, &(_51313_scopeTokens), (*(_50733_tokens))[(_51213_i - 1LL)]);
	return _50813_els;;
}



inline jule::Ptr<_1a8789845_Conditional> _20a08c844_buildIfElseChain(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _53139_tokens) {
	jule::Ptr<_1a8789845_Conditional> _53213_chain = jule::new_ptr<_1a8789845_Conditional>(_1a8789845_Conditional{._field_Head=_20a08c1b2_buildIf(_self_, &(_53139_tokens)), });;
	if (((*(_53213_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if (((*(_53139_tokens[0LL]))._field_Id != static_cast<jule::U32>(14LLU))) {
				goto _iter_end_1ad0637ce;
			};
			if (((_53139_tokens.len() > 1LL) && ((*(_53139_tokens[1LL]))._field_Id == static_cast<jule::U32>(13LLU)))) {
				(_53139_tokens).mut_slice(1LL);;
				jule::Ptr<_1a8788eb5_If> _54421_elif = _20a08c1b2_buildIf(_self_, &(_53139_tokens));;
				(*_53213_chain.alloc)._field_Tail=jule::append((*_53213_chain.alloc)._field_Tail,jule::Slice<jule::Ptr<_1a8788eb5_If>>::make({_54421_elif}));
				goto _iter_next_1ad0637ce;
			};
			(*_53213_chain.alloc)._field_Default=_20a08c503_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_1ad0637ce;
		}
	_iter_next_1ad0637ce:;
	}
	_iter_end_1ad0637ce:;;
	return _53213_chain;;
}



inline jule::Ptr<_1a8777899_Expr> _20a08cb85_buildCoCallSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _55436_tokens) {
	jule::Ptr<_1a875ce89_Token> _5559_token = _55436_tokens[0LL];;
	(_55436_tokens).mut_slice(1LL);;
	jule::Ptr<_1a8777899_Expr> _55713_e = _20a0a5a16_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55713_e == nullptr)) {
		return _55713_e;;
	};
	{
		auto &_match_expr{ (*(_55713_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1ad067926:;
			{
				(*((*(_55713_e))._field_Kind.unsafe_cast_ptr<_1a877b5c3_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1ad067e54:;
			{
				_1a98e7ee1_pushErr(_self_, _5559_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1ad067dee:;
	};
	return _55713_e;;
}



inline jule::Ptr<_1a8781023_GotoSt> _20a08cec6_buildGotoSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _57035_tokens) {
	jule::Ptr<_1a8781023_GotoSt> _57113_gt = jule::new_ptr<_1a8781023_GotoSt>(_1a8781023_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_1a98e7ee1_pushErr(_self_, (*(_57113_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_1a98e7ee1_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1a875ce89_Token> _58013_identToken = (*(_57035_tokens))[1LL];;
	if (((*(_58013_identToken))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a98e7ee1_pushErr(_self_, _58013_identToken, jule::Str::lit("invalid syntax", 14));
		_1a98e8354_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57113_gt;;
	};
	(*(_57113_gt))._field_Label=_58013_identToken;
	return _57113_gt;;
}



inline jule::Ptr<_1a8781320_FallSt> _20a08d317_buildFallSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _59035_tokens) {
	jule::Ptr<_1a8781320_FallSt> _59113_fll = jule::new_ptr<_1a8781320_FallSt>(_1a8781320_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_1a98e7ee1_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59113_fll;;
}



inline jule::Ptr<_1a878a082_TypeAliasDecl> _20a08d658_buildTypeAliasSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _60040_tokens) {
	jule::Ptr<_1a878a082_TypeAliasDecl> _60113_tad = _20a0a72a9_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	(*(_60113_tad))._field_Scope=(*(_self_))._field_s;
	return _60113_tad;;
}



inline void _20a08db31_pushCaseExpr(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _60635_tokens, jule::Ptr<_1a875ce89_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1a8777899_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I32 _61217_i = 0LL;;
		jule::Ptr<_1a8773565_TypeDecl> _61317_t;
		jule::Bool _61320_ok;
		({
			__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61217_i)), true);
			_61317_t = __jule_assign_result.__jule_result_arg0;
			_61320_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61320_ok) {
			{ jule::Slice<jule::Ptr<_1a8777899_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_1a8777899_Expr>(_1a8777899_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61317_t, &__jule_any_type89)})); };
			if ((_61217_i < _60635_tokens.len())) {
				_1a98e7ee1_pushErr(_self_, _60635_tokens[_61217_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a8777899_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_20a0a5a16_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline __jule_tuple_sx_1a8777899_Expr__jule_tuple_bool _20a08e0d7_buildCaseExprs(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _62938_tokens, jule::Ptr<_1a875ce89_Token>* _62961_colon, jule::Bool _62976_typeMatch) {
	__jule_tuple_sx_1a8777899_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1a8777899_Expr>> _63013_exprs = jule::Slice<jule::Ptr<_1a8777899_Expr>>::alloc(0LL, 1LL);;
	jule::I32 _63113_braceN = 0LL;;
	jule::I32 _63213_j = 0LL;;
	{
		auto expr = _62938_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad07436c:;
		if (it != expr_end) {
			jule::I32 _63314_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> _63321_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63321_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1ad0756c0:;
						{
							(_63113_braceN)++;
							goto _iter_next_1ad07436c;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1ad075a99:;
						{
							(_63113_braceN)--;
							goto _iter_next_1ad07436c;
						}
					}
					_match_end_1ad0759ab:;
				};
				if ((_63113_braceN != 0LL)) {
					goto _iter_next_1ad07436c;
				};
				{
					
					if (((*(_63321_tok))._field_Id == static_cast<jule::U32>(66LLU))) {
						_case_begin_1ad07721b:;
						{
							jule::Slice<jule::Ptr<_1a875ce89_Token>> _65217_exprTokens = (*(_62938_tokens)).slice(_63213_j, _63314_i);;
							if ((_65217_exprTokens.len() == 0LL)) {
								_1a98e7ee1_pushErr(_self_, _63321_tok, jule::Str::lit("expression missing", 18));
							} else {
								_20a08db31_pushCaseExpr(_self_, (*(_62938_tokens)).slice(_63213_j, _63314_i), _63321_tok, _62976_typeMatch, &(_63013_exprs));
							};
							_63213_j=(_63314_i + 1LL);
						}
					}
					else if (((*(_63321_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
						_case_begin_1ad077282:;
						{
							(*(_62961_colon))=_63321_tok;
							_20a08db31_pushCaseExpr(_self_, (*(_62938_tokens)).slice(_63213_j, _63314_i), _63321_tok, _62976_typeMatch, &(_63013_exprs));
							((*(_62938_tokens))).mut_slice((_63314_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _63013_exprs;
							__jule_func_result.__jule_result_arg1 = (((_63314_i - _63213_j) == 0LL) || (_63013_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1ad07710b:;
				};
			}
			_iter_next_1ad07436c:;
			++it;
			_63314_i++;
			goto _iter_begin_1ad07436c;
		}
		_iter_end_1ad07436c:;
	};
	_1a98e7ee1_pushErr(_self_, (*(_62938_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_62938_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1a8783586_ScopeTree> _20a08e428_buildCaseScope(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _67138_tokens) {
	jule::I32 _67213_n = 0LL;;
	for (;;) {
		{
			jule::I32 _67417_i = 0LL;;
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _67517_next;
			({
				__jule_tuple_sx_1a875ce89_Token__jule_tuple_bool __jule_assign_result = _1a98e6088_skipSt(&(_67417_i), (*(_67138_tokens)).slice(_67213_n));
				_67517_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67517_next.len() == 0LL)) {
				goto _iter_end_1ac5dd343;
			};
			jule::Ptr<_1a875ce89_Token> _67913_tok = _67517_next[0LL];;
			if (((*(_67913_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_67213_n+=_67417_i;
				goto _iter_next_1ac5dd343;
			};
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _68417_scopeTokens = (*(_67138_tokens)).slice(0LL, _67213_n);;
			jule::Ptr<_1a8783586_ScopeTree> _68517_scope = _1a98e8c8e_buildScope(_self_, &(_68417_scopeTokens), (*(_67138_tokens))[_67213_n]);;
			((*(_67138_tokens))).mut_slice(_67213_n);;
			return _68517_scope;;
		}
	_iter_next_1ac5dd343:;
	}
	_iter_end_1ac5dd343:;;
	jule::Ptr<_1a875ce89_Token> _68917_end;;
	if (((*(_67138_tokens)).len() > 0LL)) {
		_68917_end=(*(_67138_tokens))[((*(_67138_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1a8783586_ScopeTree> _69313_scope = _1a98e8c8e_buildScope(_self_, _67138_tokens, _68917_end);;
	(*(_67138_tokens))=nullptr;
	return _69313_scope;;
}



inline __jule_tuple_x_1a878a538_Case__jule_tuple_bool _20a08e824_buildCase(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _69833_tokens, jule::Bool _69851_typeMatch) {
	__jule_tuple_x_1a878a538_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a878a538_Case> _69913_c = jule::new_ptr<_1a878a538_Case>(_1a878a538_Case{._field_Token=(*(_69833_tokens))[0LL], });;
	((*(_69833_tokens))).mut_slice(1LL);;
	jule::Ptr<_1a875ce89_Token> _70317_colon = nullptr;;
	jule::Bool _70418_ok;
	({
		__jule_tuple_sx_1a8777899_Expr__jule_tuple_bool __jule_assign_result = _20a08e0d7_buildCaseExprs(_self_, _69833_tokens, &(_70317_colon), _69851_typeMatch);
		(*(_69913_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70418_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_69913_c.alloc)._field_Scope=_20a08e428_buildCaseScope(_self_, _69833_tokens);
	if (((*((*_69913_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*_69913_c.alloc)._field_Scope.alloc)._field_End=_70317_colon;
	};
	jule::Bool _7099_isDefault = (_70418_ok && ((*_69913_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _69913_c;
	__jule_func_result.__jule_result_arg1 = _7099_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a878a538_Case__jule_tuple_x_1a878938e_Else _20a08ec20_buildCases(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _71333_tokens, jule::Bool _71351_typeMatch) {
	__jule_tuple_sx_1a878a538_Case__jule_tuple_x_1a878938e_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1a878a538_Case>> _71417_cases = nullptr;;
	jule::Ptr<_1a878938e_Else> _71517_def = nullptr;;
	jule::Bool _71613_defNotLast = false;;
	while ((_71333_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1a875ce89_Token> _71817_tok = _71333_tokens[0LL];;
			if (((*(_71817_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_1a98e7ee1_pushErr(_self_, _71817_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1ac9d2506;
			};
			jule::Ptr<_1a878a538_Case> _72317_c;
			jule::Bool _72320_isDefault;
			({
				__jule_tuple_x_1a878a538_Case__jule_tuple_bool __jule_assign_result = _20a08e824_buildCase(_self_, &(_71333_tokens), _71351_typeMatch);
				_72317_c = __jule_assign_result.__jule_result_arg0;
				_72320_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72320_isDefault) {
				(*(_72317_c))._field_Token=_71817_tok;
				if ((_71517_def == nullptr)) {
					_71517_def=jule::new_ptr<_1a878938e_Else>(_1a878938e_Else{._field_Token=(*_72317_c.alloc)._field_Token, ._field_Scope=(*_72317_c.alloc)._field_Scope});
				} else {
					_1a98e7ee1_pushErr(_self_, _71817_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71613_defNotLast=(_71613_defNotLast || (_71517_def != nullptr));
				{ jule::Slice<jule::Ptr<_1a878a538_Case>> &__jule_push_dest = _71417_cases; __jule_push_dest.push(_72317_c); };
			};
		}
	_iter_next_1ac9d2506:;
	}
	_iter_end_1ac9d2506:;;
	if (_71613_defNotLast) {
		_1a98e7ee1_pushErr(_self_, (*(_71517_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71417_cases;
	__jule_func_result.__jule_result_arg1 = _71517_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1a878ad52_MatchCase> _20a090061_buildMatchCase(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _74737_tokens) {
	jule::Ptr<_1a878ad52_MatchCase> _74813_m = jule::new_ptr<_1a878ad52_MatchCase>(_1a878ad52_MatchCase{._field_Token=_74737_tokens[0LL], });;
	(_74737_tokens).mut_slice(1LL);;
	if (((_74737_tokens.len() > 0LL) && ((*(_74737_tokens[0LL]))._field_Id == static_cast<jule::U32>(7LLU)))) {
		(*(_74813_m))._field_TypeMatch=true;
		(_74737_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _75813_exprTokens = _20a09ea32_getBlockExpr(&(_74737_tokens));;
	if ((_75813_exprTokens.len() > 0LL)) {
		(*_74813_m.alloc)._field_Expr=_20a0a5a16_buildExpr((*(_self_))._field_p, &(_75813_exprTokens));
	} else if ((*_74813_m.alloc)._field_TypeMatch) {
		_1a98e7ee1_pushErr(_self_, (*_74813_m.alloc)._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I32 _76513_i = _75813_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _76613_blockToks = _20a0a3063_range(&(_76513_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_74737_tokens));;
	if ((_76613_blockToks == nullptr)) {
		_1a98e73ca_stop(_self_);
		_1a98e7ee1_pushErr(_self_, (*_74813_m.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a98e8354_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76513_i < _74737_tokens.len())) {
		_1a98e7ee1_pushErr(_self_, _74737_tokens[_76513_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_74813_m.alloc)._field_End=_74737_tokens[(_76513_i - 1LL)];
	({
		__jule_tuple_sx_1a878a538_Case__jule_tuple_x_1a878938e_Else __jule_assign_result = _20a08ec20_buildCases(_self_, _76613_blockToks, (*_74813_m.alloc)._field_TypeMatch);
		(*_74813_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_74813_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _74813_m;;
}



inline jule::Ptr<_1a8783586_ScopeTree> _20a0903a2_buildScopeSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _78035_tokens) {
	jule::Bool _78113_isUnsafe = false;;
	jule::Bool _78213_isDeferred = false;;
	jule::Ptr<_1a875ce89_Token> _78313_token = _78035_tokens[0LL];;
	if (((*(_78313_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		_78113_isUnsafe=true;
		(_78035_tokens).mut_slice(1LL);;
		if ((_78035_tokens.len() == 0LL)) {
			_1a98e7ee1_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78313_token=_78035_tokens[0LL];
		if (((*_78313_token.alloc)._field_Id == static_cast<jule::U32>(33LLU))) {
			_78213_isDeferred=true;
			(_78035_tokens).mut_slice(1LL);;
			if ((_78035_tokens.len() == 0LL)) {
				_1a98e7ee1_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78313_token))._field_Id == static_cast<jule::U32>(33LLU))) {
		_78213_isDeferred=true;
		(_78035_tokens).mut_slice(1LL);;
		if ((_78035_tokens.len() == 0LL)) {
			_1a98e7ee1_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I32 _80913_i = 0LL;;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _81013_scopeTokens = _20a0a3063_range(&(_80913_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_78035_tokens));;
	if ((_81013_scopeTokens == nullptr)) {
		_1a98e7ee1_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_80913_i < _78035_tokens.len())) {
		_1a98e7ee1_pushErr(_self_, _78035_tokens[_80913_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1a8783586_ScopeTree> _81713_scope = _1a98e8c8e_buildScope(_self_, &(_81013_scopeTokens), _78035_tokens[(_80913_i - 1LL)]);;
	(*(_81713_scope))._field_Unsafety=_78113_isUnsafe;
	(*_81713_scope.alloc)._field_Deferred=_78213_isDeferred;
	return _81713_scope;;
}



inline jule::Ptr<_1a8780b49_LabelSt> _20a0906e3_buildLabelSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _82336_tokens) {
	jule::Ptr<_1a8780b49_LabelSt> _82413_lbl = jule::new_ptr<_1a8780b49_LabelSt>(_1a8780b49_LabelSt{._field_Token=(*(_82336_tokens))[0LL], ._field_Ident=(*((*(_82336_tokens))[0LL]))._field_Kind});;
	if (((*(_82336_tokens)).len() > 2LL)) {
		((*(_82336_tokens))).mut_slice(2LL);;
		_1a98e860c_insertAsNext(_self_, _82336_tokens);
	};
	return _82413_lbl;;
}



inline __jule_tuple__1a8782bc3_StmtData__jule_tuple_bool _20a090a34_buildIdSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _83833_tokens) {
	__jule_tuple__1a8782bc3_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_83833_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a875ce89_Token> _84313_token = (*(_83833_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84313_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1ac9e7d8a:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_20a0906e3_buildLabelSt(_self_, _83833_tokens), &__jule_any_type55);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac9e89e5:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_20a0a14b2_assignInfo> _20a090d75_buildAssignInfo(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _85239_tokens) {
	jule::Ptr<_20a0a14b2_assignInfo> _85313_info = jule::new_ptr<_20a0a14b2_assignInfo>(_20a0a14b2_assignInfo{._field_ok=true});;
	jule::I32 _85613_braceN = 0LL;;
	{
		auto expr = _85239_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9ea233:;
		if (it != expr_end) {
			jule::I32 _85714_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> _85721_token = *it;
			{
				{
					auto &_match_expr{ (*(_85721_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ac9eabb2:;
						{
							(_85613_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ac9eb069:;
						{
							(_85613_braceN)--;
						}
					}
					_match_end_1ac9eae7b:;
				};
				{
					
					if ((_85613_braceN > 0LL)) {
						_case_begin_1ac9ec202:;
						{
							goto _iter_next_1ac9ea233;
						}
					}
					else if (((!(_1a8762cd5_IsAssignOp((*(_85721_token))._field_Id))) && ((*_85721_token.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
						_case_begin_1ac9ec268:;
						{
							goto _iter_next_1ac9ea233;
						}
					}
					_match_end_1ac9ec19c:;
				};
				(*(_85313_info))._field_l=(*(_85239_tokens)).slice(0LL, _85714_i);
				if (((*_85313_info.alloc)._field_l.len() == 0LL)) {
					(*_85313_info.alloc)._field_ok=false;
				};
				(*_85313_info.alloc)._field_setter=_85721_token;
				if (((_85714_i + 1LL) >= (*(_85239_tokens)).len())) {
					(*_85313_info.alloc)._field_r=nullptr;
					(*_85313_info.alloc)._field_ok=_1a8762a1b_IsPostfixOp((*((*_85313_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1ac9ea233;
				};
				(*_85313_info.alloc)._field_r=(*(_85239_tokens)).slice((_85714_i + 1LL));
				if (_1a8762a1b_IsPostfixOp((*(*_85313_info.alloc)._field_setter.alloc)._field_Id)) {
					if (((*_85313_info.alloc)._field_r.len() > 0LL)) {
						_1a98e7ee1_pushErr(_self_, (*_85313_info.alloc)._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*_85313_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1ac9ea233;
			}
			_iter_next_1ac9ea233:;
			++it;
			_85714_i++;
			goto _iter_begin_1ac9ea233;
		}
		_iter_end_1ac9ea233:;
	};
	return _85313_info;;
}



inline jule::Ptr<_1a8781980_AssignLeft> _20a0911b6_buildAssignL(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _89736_tokens) {
	jule::Ptr<_1a8781980_AssignLeft> _89813_l = jule::new_ptr<_1a8781980_AssignLeft>(_1a8781980_AssignLeft{._field_Token=(*(_89736_tokens))[0LL], });;
	if (((*((*(_89736_tokens))[0LL]))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*(_89813_l))._field_Ident=(*((*_89813_l.alloc)._field_Token))._field_Kind;
	};
	(*_89813_l.alloc)._field_Expr=_20a0a5a16_buildExpr((*(_self_))._field_p, _89736_tokens);
	return _89813_l;;
}



inline jule::Slice<jule::Ptr<_1a8781980_AssignLeft>> _20a091507_buildAssignLs(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>>* _90837_parts) {
	jule::Slice<jule::Ptr<_1a8781980_AssignLeft>> _90917_lefts = nullptr;;
	{
		auto expr = _90837_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca04c54:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _91021_part = *it;
			{
				jule::Ptr<_1a8781980_AssignLeft> _91117_l = _20a0911b6_buildAssignL(_self_, &(_91021_part));;
				{ jule::Slice<jule::Ptr<_1a8781980_AssignLeft>> &__jule_push_dest = _90917_lefts; __jule_push_dest.push(_91117_l); };
			}
			_iter_next_1aca04c54:;
			++it;
			goto _iter_begin_1aca04c54;
		}
		_iter_end_1aca04c54:;
	};
	return _90917_lefts;;
}



inline __jule_tuple__1a8782bc3_StmtData__jule_tuple_bool _20a091848_buildPlainAssign(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _91740_tokens) {
	__jule_tuple__1a8782bc3_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_20a0a14b2_assignInfo> _91813_info = _20a090d75_buildAssignInfo(_self_, _91740_tokens);;
	if ((!((*(_91813_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8782013_AssignSt> _92313_assign = jule::new_ptr<_1a8782013_AssignSt>(_1a8782013_AssignSt{._field_Setter=(*_91813_info.alloc)._field_setter, });;
	if (((*((*_91813_info.alloc)._field_setter))._field_Id == static_cast<jule::U32>(38LLU))) {
		(*(_92313_assign))._field_Declarative=true;
		(*_92313_assign.alloc)._field_Right=_20a0a5a16_buildExpr((*(_self_))._field_p, &((*_91813_info.alloc)._field_r));
		jule::Bool _93113_ok = _20a091c44_buildDeclAssign1(_self_, &((*_91813_info.alloc)._field_l), &(_92313_assign));;
		if ((!(_93113_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_92313_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_92313_assign, &__jule_any_type57);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1a8781980_AssignLeft> _94017_left = (*_92313_assign.alloc)._field_Left[0LL];;
		jule::Ptr<_1a87863d0_VarDecl> _94117_decl = jule::new_ptr<_1a87863d0_VarDecl>(_1a87863d0_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_94017_left))._field_Token, ._field_Setter=(*_92313_assign.alloc)._field_Setter, ._field_Ident=(*_94017_left.alloc)._field_Ident, ._field_Mutable=(*_94017_left.alloc)._field_Mutable, ._field_Reference=(*_94017_left.alloc)._field_Reference, ._field_Expr=(*_92313_assign.alloc)._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_94117_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _95313_parts;
	jule::Slice<_224743e15_Log> _95320_errs;
	({
		__jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log __jule_assign_result = _20a0a37d3_parts(&((*_91813_info.alloc)._field_l), static_cast<jule::U32>(5LLU), true);
		_95313_parts = __jule_assign_result.__jule_result_arg0;
		_95320_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95320_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_95320_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_92313_assign.alloc)._field_Left=_20a091507_buildAssignLs(_self_, &(_95313_parts));
	if (((*_91813_info.alloc)._field_r != nullptr)) {
		(*_92313_assign.alloc)._field_Right=_20a0a5a16_buildExpr((*(_self_))._field_p, &((*_91813_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_92313_assign, &__jule_any_type57);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _20a091c44_buildDeclAssign1(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _96740_lefts, jule::Ptr<_1a8782013_AssignSt>* _96762_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _96913_parts;
	jule::Slice<_224743e15_Log> _96920_errs;
	({
		__jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log __jule_assign_result = _20a0a37d3_parts(_96740_lefts, static_cast<jule::U32>(5LLU), true);
		_96913_parts = __jule_assign_result.__jule_result_arg0;
		_96920_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96920_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_96920_errs);
		return false;;
	};
	{
		auto expr = &(_96913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca1149c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _97521_part = *it;
			{
				jule::Bool _97617_isMut = false;;
				jule::Bool _97717_isRef = false;;
				jule::Ptr<_1a875ce89_Token> _97913_token = _97521_part[0LL];;
				if (((*(_97913_token))._field_Id == static_cast<jule::U32>(32LLU))) {
					_97617_isMut=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1a98e7ee1_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if (((*(_97521_part[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
					_97717_isRef=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1a98e7ee1_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if ((((*(_97521_part[0LL]))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(_97521_part[0LL]))._field_Id != static_cast<jule::U32>(74LLU)))) {
					_1a98e7ee1_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
					return false;;
				};
				jule::Ptr<_1a8781980_AssignLeft> _100317_l = _20a0911b6_buildAssignL(_self_, &(_97521_part));;
				(*(_100317_l))._field_Mutable=_97617_isMut;
				(*_100317_l.alloc)._field_Reference=_97717_isRef;
				{ jule::Slice<jule::Ptr<_1a8781980_AssignLeft>> &__jule_push_dest = (*((*(_96762_assign))))._field_Left; __jule_push_dest.push(_100317_l); };
			}
			_iter_next_1aca1149c:;
			++it;
			goto _iter_begin_1aca1149c;
		}
		_iter_end_1aca1149c:;
	};
	return true;;
}



inline __jule_tuple_x_1a8782013_AssignSt__jule_tuple_bool _20a092085_buildDeclAssign(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _101238_tokens) {
	__jule_tuple_x_1a8782013_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101238_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101238_tokens).mut_slice(1LL);;
	jule::Ptr<_1a875ce89_Token> _101813_token = _101238_tokens[0LL];;
	if (((*(_101813_token))._field_Id != static_cast<jule::U32>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8782013_AssignSt> _102313_assign = jule::new_ptr<_1a8782013_AssignSt>(_1a8782013_AssignSt{._field_Declarative=true, });;
	jule::I32 _102713_i = 0LL;;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _102813_rang = _20a0a3063_range(&(_102713_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_101238_tokens));;
	if ((_102813_rang == nullptr)) {
		_1a98e7ee1_pushErr(_self_, _101813_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_102713_i + 1LL) < _101238_tokens.len())) {
		(*(_102313_assign))._field_Setter=_101238_tokens[_102713_i];
		if (((*((*_102313_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1a98e7ee1_pushErr(_self_, (*_102313_assign.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_102713_i)++;
		jule::Slice<jule::Ptr<_1a875ce89_Token>> _103817_exprTokens = _101238_tokens.slice(_102713_i);;
		(*_102313_assign.alloc)._field_Right=_20a0a5a16_buildExpr((*(_self_))._field_p, &(_103817_exprTokens));
	};
	jule::Bool _10429_ok = _20a091c44_buildDeclAssign1(_self_, &(_102813_rang), &(_102313_assign));;
	__jule_func_result.__jule_result_arg0 = _102313_assign;
	__jule_func_result.__jule_result_arg1 = _10429_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1a8782bc3_StmtData__jule_tuple_bool _20a0923c6_buildAssignSt(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _104637_tokens) {
	__jule_tuple__1a8782bc3_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_20a0a1869_checkAssignTokens(_104637_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104637_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1aca20ac7:;
			{
				({
					__jule_tuple_x_1a8782013_AssignSt__jule_tuple_bool __jule_assign_result = _20a092085_buildDeclAssign(_self_, (*(_104637_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type57);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aca1ec4c:;
			{
				({
					__jule_tuple__1a8782bc3_StmtData__jule_tuple_bool __jule_assign_result = _20a091848_buildPlainAssign(_self_, _104637_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aca201e2:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a877826d_UseExpr> _20a092717_buildUseExpr(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _105936_tokens) {
	if (((*(_105936_tokens)).len() == 1LL)) {
		_1a98e7ee1_pushErr(_self_, (*(_105936_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1a877826d_UseExpr> _106413_ue = jule::new_ptr<_1a877826d_UseExpr>(_1a877826d_UseExpr{._field_Token=(*(_105936_tokens))[0LL], });;
	((*(_105936_tokens))).mut_slice(1LL);;
	(*(_106413_ue))._field_Expr=_20a0a5a16_buildExpr((*(_self_))._field_p, _105936_tokens);
	return _106413_ue;;
}



inline jule::Any _20a092a58_buildConstSt(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a98e63b8_stmt>* _107236_st) {
	if (((*((*(_107236_st))))._field_tokens.len() == 1LL)) {
		_1a98e7ee1_pushErr(_self_, (*((*(_107236_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107236_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1aca24e61:;
			{
				((*((*(_107236_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a8787029_Iter> _108017_iter = _20a08b6de_buildIterSt(_self_, _107236_st);;
				if ((_108017_iter != nullptr)) {
					(*_108017_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_108017_iter, &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1aca24c85:;
			{
				((*((*(_107236_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a878ad52_MatchCase> _108717_mt = _20a090061_buildMatchCase(_self_, (*((*(_107236_st))))._field_tokens);;
				if ((_108717_mt != nullptr)) {
					(*_108717_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_108717_mt, &__jule_any_type58);;
			}
		}
		else {
			_case_begin_1aca237bc:;
			{
				return jule::Any(_1a98e90d0_buildVarSt(_self_, &((*((*(_107236_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1aca247bd:;
	};
}



inline jule::Any _20a092d99_buildSt(_1a98e6c59_scopeParser* _self_, jule::Ptr<_1a98e63b8_stmt>* _109731_st) {
	jule::Ptr<_1a875ce89_Token> _109813_token = (*((*(_109731_st))))._field_tokens[0LL];;
	if (((*(_109813_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _110017_s;
		jule::Bool _110020_ok;
		({
			__jule_tuple__1a8782bc3_StmtData__jule_tuple_bool __jule_assign_result = _20a090a34_buildIdSt(_self_, &((*((*(_109731_st))))._field_tokens));
			_110017_s = __jule_assign_result.__jule_result_arg0;
			_110020_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110020_ok) {
			return _110017_s;;
		};
	};
	jule::Any _110613_s;
	jule::Bool _110616_ok;
	({
		__jule_tuple__1a8782bc3_StmtData__jule_tuple_bool __jule_assign_result = _20a0923c6_buildAssignSt(_self_, &((*((*(_109731_st))))._field_tokens));
		_110613_s = __jule_assign_result.__jule_result_arg0;
		_110616_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110616_ok) {
		return _110613_s;;
	};
	{
		auto &_match_expr{ (*(_109813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1aca2aa38:;
			{
				return jule::Any(_20a092717_buildUseExpr(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1aca2aecd:;
			{
				return _20a092a58_buildConstSt(_self_, _109731_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1aca2b044:;
			{
				return jule::Any(_1a98e90d0_buildVarSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1aca2b0aa:;
			{
				return jule::Any(_1a98e9421_buildRetSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1aca2b121:;
			{
				return jule::Any(_20a08b6de_buildIterSt(_self_, _109731_st), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1aca2b198:;
			{
				return jule::Any(_20a08ba30_buildBreakSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1aca2b220:;
			{
				return jule::Any(_20a08bd71_buildContSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1aca2b297:;
			{
				return jule::Any(_20a08c844_buildIfElseChain(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1aca2b31e:;
			{
				return jule::Any(_20a08cb85_buildCoCallSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_1aca2b396:;
			{
				return jule::Any(_20a08cec6_buildGotoSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1aca2b41d:;
			{
				return jule::Any(_20a08d317_buildFallSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1aca2b495:;
			{
				return jule::Any(_20a08d658_buildTypeAliasSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1aca2b51c:;
			{
				return jule::Any(_20a090061_buildMatchCase(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1aca2b594:;
			{
				if (((*((*(_109731_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1aca2ad24;
				};
				if ((((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(33LLU)) || ((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(72LLU)))) {
					return jule::Any(_20a0903a2_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type50);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1aca2b61b:;
			{
				return jule::Any(_20a0903a2_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1aca2b693:;
			{
				return jule::Any(_20a0903a2_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type50);;
			}
		}
		_match_end_1aca2ad24:;
	};
	jule::Ptr<_1a8777899_Expr> _115313_expr = _20a0a5a16_buildExpr((*(_self_))._field_p, &((*((*(_109731_st))))._field_tokens));;
	if ((_115313_expr != nullptr)) {
		return jule::Any(_115313_expr, &__jule_any_type51);;
	};
	_1a98e7ee1_pushErr(_self_, _109813_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _20a09320c_build(_1a98e6c59_scopeParser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _116129_tokens, jule::Ptr<_1a8783586_ScopeTree>* _116152_s) {
	if (((*(_116152_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1a98e6770_splitStmts(_116129_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116152_s));
	while (((!(_1a98e7b7d_isLastSt(_self_))) && (!(_1a98e78e7_finished(_self_))))) {
		{
			jule::Ptr<_1a98e63b8_stmt> _116917_st = _1a98e8893_next(_self_);;
			jule::Any _117017_data = _20a092d99_buildSt(_self_, &(_116917_st));;
			if ((_117017_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,jule::Slice<_1a8782e26_Stmt>::make({_1a8782e26_Stmt{._field_Token=(*(_116917_st))._field_tokens[0LL], ._field_Data=_117017_data}}));
			};
			if (_1a98e7661_stopped(_self_)) {
				goto _iter_end_1aca38a35;
			};
		}
	_iter_next_1aca38a35:;
	}
	_iter_end_1aca38a35:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a98e6c59_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _20a0944e9_pushErr(_20a093c24_exprBuilder* _self_, jule::Ptr<_1a875ce89_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_20a0a5362_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _20a09485c_pushSuggestion(_20a093c24_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_20a0a56c5_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1a877848d_TupleExpr> _20a094b9d_buildTuple(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>>* _5434_parts) {
	jule::Ptr<_1a877848d_TupleExpr> _5513_tuple = jule::new_ptr<_1a877848d_TupleExpr>(_1a877848d_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1a8777899_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca5d7b3:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _5821_part = *it;
			{
				(*(_5513_tuple))._field_Expr=jule::append((*_5513_tuple.alloc)._field_Expr,jule::Slice<jule::Ptr<_1a8777899_Expr>>::make({_20a09e092_buildFromTokens(_self_, _5821_part)}));
			}
			_iter_next_1aca5d7b3:;
			++it;
			goto _iter_begin_1aca5d7b3;
		}
		_iter_end_1aca5d7b3:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1a8778834_LitExpr> _20a094ede_buildLit(_20a093c24_exprBuilder* _self_, jule::Ptr<_1a875ce89_Token> _6427_token) {
	return jule::new_ptr<_1a8778834_LitExpr>(_1a8778834_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _20a095671_buildSingle(_20a093c24_exprBuilder* _self_, jule::Ptr<_1a875ce89_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1aca6074e:;
			{
				return jule::Any(_20a094ede_buildLit(_self_, _7534_token), &__jule_any_type102);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1aca607c6:;
			{
				return jule::Any(jule::new_ptr<_1a8779d30_VariadicExpr>(_1a8779d30_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(24LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1aca6083c:;
			{
				return jule::Any(_20a0a047d_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1aca60694:;
	};
	_20a0944e9_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a87791b4_IdentExpr> _20a0959b2_buildBindIdent(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U32>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U32>(17LLU))) {
		_20a0944e9_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a09485c_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a875ce89_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20a0944e9_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a09485c_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a87791b4_IdentExpr> _10613_expr = _20a0a047d_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1a8779956_UnaryExpr> _20a095d03_buildUnary(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _11133_tokens) {
	jule::Ptr<_1a875ce89_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_20a0944e9_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1a875d6c6_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_20a0944e9_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*_11213_op.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1a8779956_UnaryExpr>(_1a8779956_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_20a09e092_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1a877a9ac_SubIdentExpr> _20a096144_buildObjSubIdent(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _13239_tokens) {
	jule::I32 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1a875ce89_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_20a0944e9_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a877a9ac_SubIdentExpr>(_1a877a9ac_SubIdentExpr{._field_Expr=_20a09e092_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1a877a5d3_NsSelectionExpr> _20a096485_buildNsSubIdent(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _14739_tokens) {
	jule::Ptr<_1a877a5d3_NsSelectionExpr> _14813_ns = jule::new_ptr<_1a877a5d3_NsSelectionExpr>();;
	if ((((*(_14739_tokens)).len() == 3LL) && ((*((*(_14739_tokens))[0LL]))._field_Id == static_cast<jule::U32>(31LLU)))) {
		(*_14813_ns.alloc)._field_Ns=(*(_14739_tokens)).slice(0LL, 1LL);
		(*_14813_ns.alloc)._field_Ident=(*(_14739_tokens))[2LL];
	} else {
		{
			auto expr = _14739_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aca6bd76:;
			if (it != expr_end) {
				jule::I32 _15418_i = it - expr->begin();
				jule::Ptr<_1a875ce89_Token> _15425_token = *it;
				{
					if (((_15418_i & 1LL) == 0LL)) {
						if (((*(_15425_token))._field_Id != static_cast<jule::U32>(1LLU))) {
							_20a0944e9_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_20a09485c_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						(*_14813_ns.alloc)._field_Ns=jule::append((*_14813_ns.alloc)._field_Ns,jule::Slice<jule::Ptr<_1a875ce89_Token>>::make({_15425_token}));
					} else if (((*(_15425_token))._field_Id != static_cast<jule::U32>(19LLU))) {
						_20a0944e9_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_20a09485c_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1aca6bd76:;
				++it;
				_15418_i++;
				goto _iter_begin_1aca6bd76;
			}
			_iter_end_1aca6bd76:;
		};
		(*_14813_ns.alloc)._field_Ident=(*_14813_ns.alloc)._field_Ns[((*_14813_ns.alloc)._field_Ns.len() - 1LL)];
		((*(_14813_ns))._field_Ns).mut_slice(0LL, ((*(_14813_ns))._field_Ns.len() - 1LL));;
	};
	return _14813_ns;;
}



inline jule::Ptr<_1a8773565_TypeDecl> _20a0967c6_buildType(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _17233_tokens) {
	jule::I32 _17313_i = 0LL;;
	jule::Ptr<_1a8773565_TypeDecl> _17413_t;
	jule::Bool _17416_ok;
	({
		__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType((*(_self_))._field_p, _17233_tokens, (&(_17313_i)), false);
		_17413_t = __jule_assign_result.__jule_result_arg0;
		_17416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17416_ok))) {
		_20a0944e9_pushErr(_self_, (*(_17233_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17313_i < (*(_17233_tokens)).len())) {
		_20a0944e9_pushErr(_self_, (*(_17233_tokens))[_17313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17413_t;;
}



inline jule::Any _20a096b17_buildSubIdent(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _18637_tokens) {
	jule::I32 _1879_i = ((*(_18637_tokens)).len() - 2LL);;
	jule::Ptr<_1a875ce89_Token> _1889_token = (*(_18637_tokens))[_1879_i];;
	{
		auto &_match_expr{ (*(_1889_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(17LLU)) {
			_case_begin_1aca74da1:;
			{
				return jule::Any(_20a096144_buildObjSubIdent(_self_, (*(_18637_tokens))), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1aca754ab:;
			{
				return jule::Any(_20a096485_buildNsSubIdent(_self_, _18637_tokens), &__jule_any_type90);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1aca75522:;
			{
				return jule::Any(_20a0967c6_buildType(_self_, _18637_tokens), &__jule_any_type89);;
			}
		}
		_match_end_1aca75137:;
	};
	if (_20a0a0b21_isAnonFnHead(_18637_tokens)) {
		return jule::Any(_20a0967c6_buildType(_self_, _18637_tokens), &__jule_any_type89);;
	};
	_20a0944e9_pushErr(_self_, _1889_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a8779d30_VariadicExpr> _20a096e58_buildVariadic(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _20836_tokens) {
	jule::Ptr<_1a875ce89_Token> _20913_token = _20836_tokens[(_20836_tokens.len() - 1LL)];;
	(_20836_tokens).mut_slice(0LL, (_20836_tokens.len() - 1LL));;
	return jule::new_ptr<_1a8779d30_VariadicExpr>(_1a8779d30_VariadicExpr{._field_Token=_20913_token, ._field_Expr=_20a09e092_buildFromTokens(_self_, _20836_tokens)});;
}



inline jule::Ptr<_1a8777b63_RangeExpr> _20a097299_buildBetweenParentheses(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _21746_tokens) {
	if ((_21746_tokens.len() == 2LL)) {
		_20a0944e9_pushErr(_self_, _21746_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_20a09485c_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21746_tokens).mut_slice(1LL, (_21746_tokens.len() - 1LL));;
	return jule::new_ptr<_1a8777b63_RangeExpr>(_1a8777b63_RangeExpr{._field_Expr=_20a09e092_buildFromTokens(_self_, _21746_tokens)});;
}



inline jule::Ptr<_1a877a209_CastExpr> _20a0975da_tryBuildCast(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _22936_tokens) {
	jule::I32 _23013_rangeN = 0LL;;
	{
		auto expr = _22936_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca7abba:;
		if (it != expr_end) {
			jule::I32 _23113_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> _23116_token = *it;
			{
				{
					auto &_match_expr{ (*(_23116_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1aca7b6b0:;
						{
							(_23013_rangeN)++;
							goto _iter_next_1aca7abba;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1aca7ba89:;
						{
							(_23013_rangeN)--;
						}
					}
					_match_end_1aca7b99b:;
				};
				if ((_23013_rangeN > 0LL)) {
					goto _iter_next_1aca7abba;
				} else if (((_23113_i + 1LL) == (*(_22936_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1a875ce89_Token>> _25017_typeTokens = (*(_22936_tokens)).slice(0LL, (_23113_i + 1LL));;
				jule::Slice<jule::Ptr<_1a875ce89_Token>> _25117_exprTokens = (*(_22936_tokens)).slice((_23113_i + 1LL));;
				if ((_25117_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1a875ce89_Token> _25813_tok = _25117_exprTokens[0LL];;
				if (((*(_25813_tok))._field_Id != static_cast<jule::U32>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1a877a209_CastExpr> _26317_cast = jule::new_ptr<_1a877a209_CastExpr>(_1a877a209_CastExpr{});;
				if ((_25117_exprTokens.len() == 2LL)) {
					_20a0944e9_pushErr(_self_, _25117_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_20a09485c_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_25017_typeTokens.len() == 2LL)) {
					_20a0944e9_pushErr(_self_, _25017_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_20a09485c_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_25017_typeTokens).mut_slice(1LL, (_25017_typeTokens.len() - 1LL));;
					jule::I32 _27721_typeIndex = 0LL;;
					jule::Ptr<_1a8773565_TypeDecl> _27821_t;
					jule::Bool _27824_ok;
					({
						__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType((*(_self_))._field_p, &(_25017_typeTokens), (&(_27721_typeIndex)), true);
						_27821_t = __jule_assign_result.__jule_result_arg0;
						_27824_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27824_ok && (_27721_typeIndex < _25017_typeTokens.len()))) {
						_20a0944e9_pushErr(_self_, _25017_typeTokens[_27721_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27824_ok))) {
						return _26317_cast;;
					};
					(*(_26317_cast))._field_Kind=_27821_t;
					if ((_25117_exprTokens.len() > 2LL)) {
						jule::I32 _28825_j = 0LL;;
						_20a0a3063_range(&(_28825_j), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_25117_exprTokens));
						if ((_28825_j < _25117_exprTokens.len())) {
							return nullptr;;
						};
						(_25117_exprTokens).mut_slice(0LL, _28825_j);;
						(*_26317_cast.alloc)._field_Expr=_20a09e092_buildFromTokens(_self_, _25117_exprTokens);
					};
				};
				return _26317_cast;;
			}
			_iter_next_1aca7abba:;
			++it;
			_23113_i++;
			goto _iter_begin_1aca7abba;
		}
		_iter_end_1aca7abba:;
	};
	return nullptr;;
}



inline void _20a097a08_pushArg(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a8777899_Expr>>* _30331_args, jule::Slice<jule::Ptr<_1a875ce89_Token>> _30350_tokens, jule::Ptr<_1a875ce89_Token> _30368_err_token) {
	if ((_30350_tokens.len() == 0LL)) {
		_20a0944e9_pushErr(_self_, _30368_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a09485c_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a8777899_Expr>> &__jule_push_dest = (*(_30331_args)); __jule_push_dest.push(_20a09e092_buildFromTokens(_self_, _30350_tokens)); };
}



inline jule::Slice<jule::Ptr<_1a8777899_Expr>> _20a097d49_buildArgs(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _31232_tokens) {
	if ((_31232_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a8777899_Expr>> _31817_args = nullptr;;
	jule::I32 _31913_last = 0LL;;
	jule::I32 _32013_rangeN = 0LL;;
	(_31232_tokens).mut_slice(1LL, (_31232_tokens.len() - 1LL));;
	{
		auto expr = &(_31232_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca8939e:;
		if (it != expr_end) {
			jule::I32 _32213_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> _32216_token = *it;
			{
				{
					auto &_match_expr{ (*(_32216_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1aca89ba7:;
						{
							(_32013_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1aca8a081:;
						{
							(_32013_rangeN)--;
						}
					}
					_match_end_1aca89e93:;
				};
				if (((_32013_rangeN > 0LL) || ((*(_32216_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1aca8939e;
				};
				_20a097a08_pushArg(_self_, &(_31817_args), _31232_tokens.slice(_31913_last, _32213_i), _32216_token);
				_31913_last=(_32213_i + 1LL);
			}
			_iter_next_1aca8939e:;
			++it;
			_32213_i++;
			goto _iter_begin_1aca8939e;
		}
		_iter_end_1aca8939e:;
	};
	if ((_31913_last < _31232_tokens.len())) {
		if ((_31913_last == 0LL)) {
			if ((_31232_tokens.len() > 0LL)) {
				_20a097a08_pushArg(_self_, &(_31817_args), _31232_tokens.slice(_31913_last), _31232_tokens[_31913_last]);
			};
		} else {
			_20a097a08_pushArg(_self_, &(_31817_args), _31232_tokens.slice(_31913_last), _31232_tokens[(_31913_last - 1LL)]);
		};
	};
	return _31817_args;;
}



inline jule::Ptr<_1a877b5c3_FnCallExpr> _20a098641_buildFnCall(_20a093c24_exprBuilder* _self_, jule::Ptr<_1a875ce89_Token>* _37835_token, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _37855_expr, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _37876_args) {
	return jule::new_ptr<_1a877b5c3_FnCallExpr>(_1a877b5c3_FnCallExpr{._field_Token=(*(_37835_token)), ._field_Expr=_20a09e092_buildFromTokens(_self_, (*(_37855_expr))), ._field_Args=_20a097d49_buildArgs(_self_, (*(_37876_args))), });;
}



inline jule::Any _20a098982_buildParenthesesRange(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _38645_tokens) {
	jule::Ptr<_1a875ce89_Token> _38713_token = (*(_38645_tokens))[0LL];;
	if (((*(_38713_token))._field_Id == static_cast<jule::U32>(74LLU))) {
		jule::Ptr<_1a877a209_CastExpr> _38917_expr = _20a0975da_tryBuildCast(_self_, _38645_tokens);;
		if ((_38917_expr != nullptr)) {
			return jule::Any(_38917_expr, &__jule_any_type106);;
		};
	};
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _39413_exprTokens;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _39429_argsTokens;
	({
		__jule_tuple_sx_1a875ce89_Token__jule_tuple_sx_1a875ce89_Token __jule_assign_result = _20a0a332c_rangeLast(_38645_tokens);
		_39413_exprTokens = __jule_assign_result.__jule_result_arg0;
		_39429_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_39413_exprTokens.len() == 0LL)) {
		return jule::Any(_20a097299_buildBetweenParentheses(_self_, _39429_argsTokens), &__jule_any_type101);;
	};
	if (_20a0a0b21_isAnonFnHead(&(_39413_exprTokens))) {
		return jule::Any(_20a0967c6_buildType(_self_, _38645_tokens), &__jule_any_type89);;
	};
	return jule::Any(_20a098641_buildFnCall(_self_, &(_38713_token), &(_39413_exprTokens), &(_39429_argsTokens)), &__jule_any_type82);;
}



inline jule::Ptr<_1a8778c0d_UnsafeExpr> _20a098cc3_buildUnsafeExpr(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _40838_tokens) {
	jule::Ptr<_1a875ce89_Token> _40913_token = _40838_tokens[0LL];;
	(_40838_tokens).mut_slice(1LL);;
	jule::I32 _41113_i = 0LL;;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _41213_rangeTokens = _20a0a3063_range(&(_41113_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_40838_tokens));;
	if ((_41213_rangeTokens.len() == 0LL)) {
		_20a0944e9_pushErr(_self_, _40838_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a8778c0d_UnsafeExpr>(_1a8778c0d_UnsafeExpr{._field_Token=_40913_token, ._field_Expr=_20a09e092_buildFromTokens(_self_, _41213_rangeTokens)});;
}



inline jule::Ptr<_1a8785225_FnDecl> _20a099114_buildAnonFn(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _42335_tokens) {
	jule::Ptr<_1a8785225_FnDecl> _42413_f = _1e1827438_buildFn((*(_self_))._field_p, _42335_tokens, false, false);;
	if ((!(_1a8785588_IsAnon(_42413_f.ptr())))) {
		_20a0944e9_pushErr(_self_, (*_42413_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a09485c_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _42413_f;;
}



inline jule::Any _20a099455_buildUnsafe(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _43235_tokens) {
	{
		auto &_match_expr{ (*((*(_43235_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1aca9c516:;
			{
				return jule::Any(_20a099114_buildAnonFn(_self_, _43235_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1aca9b8cd:;
			{
				return jule::Any(_20a098cc3_buildUnsafeExpr(_self_, (*(_43235_tokens))), &__jule_any_type103);;
			}
		}
		_match_end_1aca9bd1d:;
	};
}



inline void _20a099873_pushRangeLitPart(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _44239_part, jule::Ptr<_1a875ce89_Token> _4439_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>>* _44334_parts) {
	if ((_44239_part.len() == 0LL)) {
		_20a0944e9_pushErr(_self_, _4439_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a09485c_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> &__jule_push_dest = (*(_44334_parts)); __jule_push_dest.push(_44239_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _20a099bb4_getBraceRangeLitExprParts(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _45348_tokens) {
	if ((_45348_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _45917_parts = nullptr;;
	jule::I32 _46113_last = 0LL;;
	jule::I32 _46213_rangeN = 0LL;;
	(_45348_tokens).mut_slice(1LL, (_45348_tokens.len() - 1LL));;
	{
		auto expr = &(_45348_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acaa0e32:;
		if (it != expr_end) {
			jule::I32 _46413_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> _46416_token = *it;
			{
				{
					auto &_match_expr{ (*(_46416_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1acaa173a:;
						{
							(_46213_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1acaa1b14:;
						{
							(_46213_rangeN)--;
						}
					}
					_match_end_1acaa1a26:;
				};
				if (((_46213_rangeN > 0LL) || ((*(_46416_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1acaa0e32;
				};
				_20a099873_pushRangeLitPart(_self_, _45348_tokens.slice(_46113_last, _46413_i), _46416_token, &(_45917_parts));
				_46113_last=(_46413_i + 1LL);
			}
			_iter_next_1acaa0e32:;
			++it;
			_46413_i++;
			goto _iter_begin_1acaa0e32;
		}
		_iter_end_1acaa0e32:;
	};
	if ((_46113_last < _45348_tokens.len())) {
		if ((_46113_last == 0LL)) {
			if ((_45348_tokens.len() > 0LL)) {
				_20a099873_pushRangeLitPart(_self_, _45348_tokens.slice(_46113_last), _45348_tokens[_46113_last], &(_45917_parts));
			};
		} else {
			_20a099873_pushRangeLitPart(_self_, _45348_tokens.slice(_46113_last), _45348_tokens[(_46113_last - 1LL)], &(_45917_parts));
		};
	};
	return _45917_parts;;
}



inline jule::Ptr<_1a877c0b8_FieldExprPair> _20a09a005_buildFieldExprPair(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _49541_tokens) {
	if (((_49541_tokens.len() - 2LL) == 0LL)) {
		_20a0944e9_pushErr(_self_, _49541_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a877c0b8_FieldExprPair> _50013_pair = jule::new_ptr<_1a877c0b8_FieldExprPair>(_1a877c0b8_FieldExprPair{._field_Field=_49541_tokens[0LL], });;
	(_49541_tokens).mut_slice(2LL);;
	(*(_50013_pair))._field_Expr=_20a09e092_buildFromTokens(_self_, _49541_tokens);
	return _50013_pair;;
}



inline jule::Ptr<_1a8777899_Expr> _20a09a346_buildStructLitExpr(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _50842_tokens) {
	jule::Ptr<_1a875ce89_Token> _50913_token = (*(_50842_tokens))[0LL];;
	if ((((*(_50913_token))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_50842_tokens)).len() > 1LL))) {
		_50913_token=(*(_50842_tokens))[1LL];
		if (((*_50913_token.alloc)._field_Id == static_cast<jule::U32>(8LLU))) {
			return jule::new_ptr<_1a8777899_Expr>(_1a8777899_Expr{._field_Token=_50913_token, ._field_End=(*(_50842_tokens))[((*(_50842_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_20a09a005_buildFieldExprPair(_self_, (*(_50842_tokens))), &__jule_any_type77)});;
		};
	};
	return _20a09e092_buildFromTokens(_self_, (*(_50842_tokens)));;
}



inline jule::Slice<jule::Ptr<_1a8777899_Expr>> _20a09a687_buildStructLitExprs(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _52343_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _52413_parts = _20a099bb4_getBraceRangeLitExprParts(_self_, (*(_52343_tokens)));;
	if ((_52413_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a8777899_Expr>> _52913_pairs = jule::Slice<jule::Ptr<_1a8777899_Expr>>::alloc(0LL, _52413_parts.len());;
	{
		auto expr = &(_52413_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acaaa436:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _53021_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8777899_Expr>> &__jule_push_dest = _52913_pairs; __jule_push_dest.push(_20a09a346_buildStructLitExpr(_self_, &(_53021_part))); };
			}
			_iter_next_1acaaa436:;
			++it;
			goto _iter_begin_1acaaa436;
		}
		_iter_end_1acaaa436:;
	};
	return _52913_pairs;;
}



inline jule::Ptr<_1a877c8e3_StructLit> _20a09a9c8_buildTypedStructLiteral(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _53646_tokens) {
	jule::I32 _53713_i = 0LL;;
	jule::Ptr<_1a8773565_TypeDecl> _53813_t;
	jule::Bool _53816_ok;
	({
		__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType((*(_self_))._field_p, &(_53646_tokens), (&(_53713_i)), true);
		_53813_t = __jule_assign_result.__jule_result_arg0;
		_53816_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_53816_ok))) {
		return nullptr;;
	} else if ((_53713_i >= _53646_tokens.len())) {
		_20a0944e9_pushErr(_self_, _53646_tokens[_53713_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_53646_tokens).mut_slice(_53713_i);;
	jule::Ptr<_1a875ce89_Token> _5479_token = _53646_tokens[0LL];;
	if (((*(_5479_token))._field_Id != static_cast<jule::U32>(72LLU))) {
		_20a0944e9_pushErr(_self_, _5479_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a877c8e3_StructLit>(_1a877c8e3_StructLit{._field_End=_53646_tokens[(_53646_tokens.len() - 1LL)], ._field_Kind=_53813_t, ._field_Exprs=_20a09a687_buildStructLitExprs(_self_, &(_53646_tokens))});;
}



inline jule::Ptr<_1a8777899_Expr> _20a09ad19_buildBraceLitPart(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _56041_tokens) {
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _56113_l;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _56120_r;
	({
		__jule_tuple_sx_1a875ce89_Token__jule_tuple_sx_1a875ce89_Token __jule_assign_result = _20a09edea_splitDelim(_56041_tokens, static_cast<jule::U32>(8LLU));
		_56113_l = __jule_assign_result.__jule_result_arg0;
		_56120_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_56113_l != nullptr)) {
		return jule::new_ptr<_1a8777899_Expr>(_1a8777899_Expr{._field_Token=(*(_56041_tokens))[0LL], ._field_End=(*(_56041_tokens))[((*(_56041_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1a877d6c4_KeyValPair>(_1a877d6c4_KeyValPair{._field_Key=_20a09e092_buildFromTokens(_self_, _56113_l), ._field_Val=_20a09e092_buildFromTokens(_self_, _56120_r), ._field_Colon=(*(_56041_tokens))[_56113_l.len()]}), &__jule_any_type78)});;
	};
	return _20a09e092_buildFromTokens(_self_, (*(_56041_tokens)));;
}



inline jule::Ptr<_1a877cd99_BraceLit> _20a09b15a_buildBraceLit(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _57737_tokens) {
	jule::Ptr<_1a877cd99_BraceLit> _57813_lit = jule::new_ptr<_1a877cd99_BraceLit>(_1a877cd99_BraceLit{._field_Token=(*(_57737_tokens))[0LL], ._field_End=(*(_57737_tokens))[((*(_57737_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _58313_parts = _20a099bb4_getBraceRangeLitExprParts(_self_, (*(_57737_tokens)));;
	if ((_58313_parts == nullptr)) {
		return _57813_lit;;
	};
	(*(_57813_lit))._field_Exprs=jule::Slice<jule::Ptr<_1a8777899_Expr>>::alloc(0LL, _58313_parts.len());
	{
		auto expr = &(_58313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acab4cc0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _58921_part = *it;
			{
				(*_57813_lit.alloc)._field_Exprs=jule::append((*_57813_lit.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a8777899_Expr>>::make({_20a09ad19_buildBraceLitPart(_self_, &(_58921_part))}));
			}
			_iter_next_1acab4cc0:;
			++it;
			goto _iter_begin_1acab4cc0;
		}
		_iter_end_1acab4cc0:;
	};
	return _57813_lit;;
}



inline jule::Any _20a09b49b_buildBraceRange(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _59639_tokens) {
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _59713_exprTokens;
	jule::I32 _59725_rangeN;
	({
		__jule_tuple_sx_1a875ce89_Token__jule_tuple_int __jule_assign_result = _20a0a0747_getRangeExprTokens(_59639_tokens);
		_59713_exprTokens = __jule_assign_result.__jule_result_arg0;
		_59725_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_59713_exprTokens.len() == 0LL)) {
			_case_begin_1acab68e8:;
			{
				return jule::Any(_20a09b15a_buildBraceLit(_self_, _59639_tokens), &__jule_any_type108);;
			}
		}
		else if ((_59725_rangeN > 0LL)) {
			_case_begin_1acab6992:;
			{
				_20a0944e9_pushErr(_self_, (*(_59639_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1acab6860:;
	};
	jule::Ptr<_1a875ce89_Token> _6089_elseToken = _59713_exprTokens[(_59713_exprTokens.len() - 1LL)];;
	if (((*(_59713_exprTokens[(_59713_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U32>(14LLU))) {
		(_59713_exprTokens).mut_slice(0LL, (_59713_exprTokens.len() - 1LL));;
		jule::Any _61117_d = _20a09d910_build(_self_, &(_59713_exprTokens));;
		if ((_61117_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _61117_d };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1acaba1c1:;
				{
					((*(_59639_tokens))).mut_slice((_59713_exprTokens.len() + 1LL));;
					jule::I32 _61821_i = 0LL;;
					jule::Slice<jule::Ptr<_1a875ce89_Token>> _61921_rangeTokens = _20a0a3063_range(&(_61821_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _59639_tokens);;
					jule::Ptr<_1a877b5c3_FnCallExpr> _62021_model = _61117_d.unsafe_cast_ptr<_1a877b5c3_FnCallExpr>();;
					if (_1a877bbcd_Ignored(_62021_model.ptr())) {
						_20a0944e9_pushErr(_self_, _6089_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_20a09485c_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*_62021_model.alloc)._field_Exception=_20a0a650b_buildScope((*(_self_))._field_p, &(_61921_rangeTokens), (*(_59639_tokens))[(_61821_i - 1LL)]);
					return _61117_d;;
				}
			}
			else {
				_case_begin_1acab96ed:;
				{
					_20a0944e9_pushErr(_self_, _59713_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1acab9698:;
		};
	};
	{
		auto &_match_expr{ (*(_59713_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1acabe329:;
			{
				return _20a099455_buildUnsafe(_self_, _59639_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1acabe390:;
			{
				return jule::Any(_20a099114_buildAnonFn(_self_, _59639_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1acabe406:;
			{
				return jule::Any(_20a09a9c8_buildTypedStructLiteral(_self_, (*(_59639_tokens))), &__jule_any_type107);;
			}
		}
		else {
			_case_begin_1acab9764:;
			{
				_20a0944e9_pushErr(_self_, _59713_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1acabd79b:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _20a09b7dc_getEnumerableParts(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _64841_tokens) {
	(_64841_tokens).mut_slice(1LL, (_64841_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _65013_parts;
	jule::Slice<_224743e15_Log> _65020_errors;
	({
		__jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log __jule_assign_result = _20a0a37d3_parts(&(_64841_tokens), static_cast<jule::U32>(5LLU), true);
		_65013_parts = __jule_assign_result.__jule_result_arg0;
		_65020_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_65020_errors);
	return _65013_parts;;
}



inline jule::Ptr<_1a877de00_SliceExpr> _20a09bb2d_buildSlice(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _65533_tokens) {
	jule::Ptr<_1a877de00_SliceExpr> _65613_slc = jule::new_ptr<_1a877de00_SliceExpr>(_1a877de00_SliceExpr{._field_Token=_65533_tokens[0LL], ._field_End=_65533_tokens[(_65533_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _66113_parts = _20a09b7dc_getEnumerableParts(_self_, _65533_tokens);;
	if ((_66113_parts.len() == 0LL)) {
		return _65613_slc;;
	};
	(*(_65613_slc))._field_Exprs=jule::Slice<jule::Ptr<_1a8777899_Expr>>::alloc(0LL, _66113_parts.len());
	{
		auto expr = &(_66113_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac430c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _66721_p = *it;
			{
				if ((_66721_p.len() == 0LL)) {
					goto _iter_next_1acac430c;
				};
				(*_65613_slc.alloc)._field_Exprs=jule::append((*_65613_slc.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a8777899_Expr>>::make({_20a09e092_buildFromTokens(_self_, _66721_p)}));
			}
			_iter_next_1acac430c:;
			++it;
			goto _iter_begin_1acac430c;
		}
		_iter_end_1acac430c:;
	};
	return _65613_slc;;
}



inline jule::Ptr<_1a877e85c_IndexingExpr> _20a09c0d4_buildIndexing(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _67736_exprTokens, jule::Slice<jule::Ptr<_1a875ce89_Token>> _67813_tokens, jule::Ptr<_1a875ce89_Token> _67835_errorToken) {
	jule::Ptr<_1a875ce89_Token> _67913_end = _67813_tokens[(_67813_tokens.len() - 1LL)];;
	(_67813_tokens).mut_slice(1LL, (_67813_tokens.len() - 1LL));;
	if ((_67813_tokens.len() == 0LL)) {
		_20a0944e9_pushErr(_self_, _67835_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8777899_Expr> _68513_expr = _20a09e092_buildFromTokens(_self_, _67736_exprTokens);;
	if ((_68513_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8777899_Expr> _68913_index = _20a09e092_buildFromTokens(_self_, _67813_tokens);;
	if ((_68913_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a877e85c_IndexingExpr>(_1a877e85c_IndexingExpr{._field_Token=_67835_errorToken, ._field_End=_67913_end, ._field_Expr=_68513_expr, ._field_Index=_68913_index});;
}



inline jule::Ptr<_1a877eebc_SlicingExpr> _20a09c700_buildSlicing(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _70136_exprTokens, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _70163_start, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _70214_to, jule::Ptr<_1a875ce89_Token>* _70233_errorToken, jule::Ptr<_1a875ce89_Token> _70257_end) {
	jule::Ptr<_1a877eebc_SlicingExpr> _70313_slc = jule::new_ptr<_1a877eebc_SlicingExpr>(_1a877eebc_SlicingExpr{._field_Token=(*(_70233_errorToken)), ._field_End=_70257_end, ._field_Expr=_20a09e092_buildFromTokens(_self_, (*(_70136_exprTokens))), });;
	if (((*(_70163_start)).len() > 0LL)) {
		(*(_70313_slc))._field_Start=_20a09e092_buildFromTokens(_self_, (*(_70163_start)));
	};
	if (((*(_70214_to)).len() > 0LL)) {
		(*_70313_slc.alloc)._field_To=_20a09e092_buildFromTokens(_self_, (*(_70214_to)));
	};
	return _70313_slc;;
}



inline jule::Any _20a09ca41_buildBracketRange(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _71740_tokens) {
	jule::Ptr<_1a875ce89_Token> _71813_errorToken = _71740_tokens[0LL];;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _71913_exprTokens;
	jule::I32 _71925_rangeN;
	({
		__jule_tuple_sx_1a875ce89_Token__jule_tuple_int __jule_assign_result = _20a0a0747_getRangeExprTokens(&(_71740_tokens));
		_71913_exprTokens = __jule_assign_result.__jule_result_arg0;
		_71925_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_71913_exprTokens.len() == 0LL)) {
		return jule::Any(_20a09bb2d_buildSlice(_self_, _71740_tokens), &__jule_any_type94);;
	} else if ((_71925_rangeN > 0LL)) {
		_20a0944e9_pushErr(_self_, _71813_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_71740_tokens).mut_slice(_71913_exprTokens.len());;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _73413_splitTokens = _71740_tokens.slice(1LL, (_71740_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _73513_start;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _73524_to;
	({
		__jule_tuple_sx_1a875ce89_Token__jule_tuple_sx_1a875ce89_Token __jule_assign_result = _20a09edea_splitDelim(&(_73413_splitTokens), static_cast<jule::U32>(8LLU));
		_73513_start = __jule_assign_result.__jule_result_arg0;
		_73524_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_73513_start != nullptr) || (_73524_to != nullptr))) {
		return jule::Any(_20a09c700_buildSlicing(_self_, &(_71913_exprTokens), &(_73513_start), &(_73524_to), &(_71813_errorToken), _71740_tokens[(_71740_tokens.len() - 1LL)]), &__jule_any_type105);;
	};
	return jule::Any(_20a09c0d4_buildIndexing(_self_, _71913_exprTokens, _71740_tokens, _71813_errorToken), &__jule_any_type104);;
}



inline jule::Any _20a09cd82_buildExclRight(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _74238_tokens) {
	jule::Ptr<_1a875ce89_Token> _7439_token = (*(_74238_tokens))[((*(_74238_tokens)).len() - 1LL)];;
	((*(_74238_tokens))).mut_slice(0LL, ((*(_74238_tokens)).len() - 1LL));;
	jule::Any _74513_d = _20a09d910_build(_self_, _74238_tokens);;
	if ((_74513_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _74513_d };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1acad23d6:;
			{
				(*(_74513_d.unsafe_cast_ptr<_1a877b5c3_FnCallExpr>()))._field_Exception=jule::new_ptr<_1a8783586_ScopeTree>(_1a8783586_ScopeTree{._field_Deferred=true, });
				return _74513_d;;
			}
		}
		_match_end_1acad2381:;
	};
	_20a0944e9_pushErr(_self_, _7439_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _20a09d1c3_buildData(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _76033_tokens) {
	{
		auto _match_expr{ (*(_76033_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1acad3a36:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1acad3aad:;
			{
				return _20a095671_buildSingle(_self_, (*(_76033_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1acad3b24:;
			{
				if (((*((*(_76033_tokens))[0LL]))._field_Id == static_cast<jule::U32>(27LLU))) {
					return jule::Any(_20a0959b2_buildBindIdent(_self_, _76033_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1acad388d:;
	};
	jule::Ptr<_1a875ce89_Token> _77213_token = (*(_76033_tokens))[((*(_76033_tokens)).len() - 1LL)];;
	if (((*(_77213_token))._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_20a096e58_buildVariadic(_self_, (*(_76033_tokens))), &__jule_any_type75);;
	};
	_77213_token=(*(_76033_tokens))[0LL];
	if (_1a875d6c6_IsUnaryOp((*_77213_token.alloc)._field_Id)) {
		if (((*(_76033_tokens)).len() > 1LL)) {
			_77213_token=(*(_76033_tokens))[1LL];
			if (((*_77213_token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
				return jule::Any(_20a0967c6_buildType(_self_, _76033_tokens), &__jule_any_type89);;
			};
		};
		return jule::Any(_20a095d03_buildUnary(_self_, (*(_76033_tokens))), &__jule_any_type88);;
	};
	if (((*(_76033_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_77213_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
				_case_begin_1acad85da:;
				{
					if (((*(_76033_tokens)).len() > 3LL)) {
						jule::Ptr<_1a875ce89_Token> _79821_t = (*(_76033_tokens))[((*(_76033_tokens)).len() - 1LL)];;
						if (((*(_79821_t))._field_Id == static_cast<jule::U32>(75LLU))) {
							goto _match_end_1acad8541;
						};
					};
					jule::Ptr<_1a875ce89_Token> _80417_next = (*(_76033_tokens))[1LL];;
					if (((*(_80417_next))._field_Id != static_cast<jule::U32>(77LLU))) {
						goto _match_end_1acad8541;
					};
					return jule::Any(_20a0967c6_buildType(_self_, _76033_tokens), &__jule_any_type89);;
				}
			}
			_match_end_1acad8541:;
		};
	};
	_77213_token=(*(_76033_tokens))[((*(_76033_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_77213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1acadb797:;
			{
				return _20a096b17_buildSubIdent(_self_, _76033_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1acadb81e:;
			{
				return _20a09cd82_buildExclRight(_self_, _76033_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1acadb885:;
			{
				return _20a098982_buildParenthesesRange(_self_, _76033_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1acadb8eb:;
			{
				return _20a09b49b_buildBraceRange(_self_, _76033_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1acadb962:;
			{
				return _20a09ca41_buildBracketRange(_self_, (*(_76033_tokens)));;
			}
		}
		_match_end_1acadb742:;
	};
	_20a0944e9_pushErr(_self_, _77213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _20a09d5be_buildBinary(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _82935_tokens, jule::I32 _82953_i) {
	jule::Ptr<_1a875ce89_Token> _83013_op = (*(_82935_tokens))[_82953_i];;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _83113_leftTokens = (*(_82935_tokens)).slice(0LL, _82953_i);;
	if ((_20a09e45a_isTypeOp(&((*(_83013_op))._field_Id)) && _20a09e768_isTypeRange(&(_83113_leftTokens)))) {
		return jule::Any(_20a0967c6_buildType(_self_, _82935_tokens), &__jule_any_type89);;
	};
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _83613_rightTokens = (*(_82935_tokens)).slice((_82953_i + 1LL));;
	if ((_83113_leftTokens.len() == 0LL)) {
		_20a0944e9_pushErr(_self_, (*(_82935_tokens))[_82953_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a09485c_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83613_rightTokens.len() == 0LL)) {
		_20a0944e9_pushErr(_self_, (*(_82935_tokens))[_82953_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a09485c_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1a877ae63_BinaryExpr>(_1a877ae63_BinaryExpr{._field_Left=_20a09e092_buildFromTokens(_self_, _83113_leftTokens), ._field_Right=_20a09e092_buildFromTokens(_self_, _83613_rightTokens), ._field_Op=_83013_op}), &__jule_any_type109);;
}



inline jule::Any _20a09d910_build(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _85429_tokens) {
	if (((*((*(_85429_tokens))[0LL]))._field_Id == static_cast<jule::U32>(37LLU))) {
		return jule::Any(_20a0967c6_buildType(_self_, _85429_tokens), &__jule_any_type89);;
	};
	jule::I32 _8589_i = _20a0a01b4_findLowestPrecOp(_85429_tokens);;
	if ((_8589_i == -1LL)) {
		return _20a09d1c3_buildData(_self_, _85429_tokens);;
	};
	return _20a09d5be_buildBinary(_self_, _85429_tokens, _8589_i);;
}



inline jule::Any _20a09dc51_buildKind(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _86533_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _86613_parts;
	jule::Slice<_224743e15_Log> _86620_errors;
	({
		__jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log __jule_assign_result = _20a0a37d3_parts(_86533_tokens, static_cast<jule::U32>(5LLU), true);
		_86613_parts = __jule_assign_result.__jule_result_arg0;
		_86620_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86620_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_86620_errors);
		return nullptr;;
	} else if ((_86613_parts.len() > 1LL)) {
		return jule::Any(_20a094b9d_buildTuple(_self_, &(_86613_parts)), &__jule_any_type80);;
	};
	return _20a09d910_build(_self_, _86533_tokens);;
}



inline jule::Ptr<_1a8777899_Expr> _20a09e092_buildFromTokens(_20a093c24_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _87638_tokens) {
	if ((_87638_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _88013_kind = _20a09dc51_buildKind(_self_, &(_87638_tokens));;
	if ((_88013_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a8777899_Expr>(_1a8777899_Expr{._field_Token=_87638_tokens[0LL], ._field_End=_87638_tokens[(_87638_tokens.len() - 1LL)], ._field_Kind=_88013_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _20a093c24_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _20a0a14b2_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _20a0a4bad_stop(_20a0a48b1_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _20a0a4e44_stopped(_20a0a48b1_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _20a0a5362_pushErr(_20a0a48b1_parser* _self_, jule::Ptr<_1a875ce89_Token> _20826_token, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	{ jule::Slice<_224743e15_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_20a0a3e98_compilerErr(&(_20826_token), &(_20841_fmt), _20854_args)); };
}



inline void _20a0a56c5_pushSuggestion(_20a0a48b1_parser* _self_, jule::Str _21333_fmt, jule::Slice<jule::Any> _21346_args) {
	{
		_20a0a433e_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21333_fmt, _21346_args);
	};
}



inline jule::Ptr<_1a8777899_Expr> _20a0a5a16_buildExpr(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _21734_tokens) {
	return _20a09e092_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21734_tokens)));;
}



inline jule::Ptr<_1a8772982_Directive> _20a0a5d57_buildDirective(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _22137_tokens) {
	if ((_22137_tokens.len() == 1LL)) {
		_20a0a5362_pushErr(_self_, _22137_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22137_tokens[1LL]))._field_Column != ((*(_22137_tokens[0LL]))._field_Column + 1LL))) {
		_20a0a5362_pushErr(_self_, _22137_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a8772982_Directive>(_1a8772982_Directive{._field_Tag=_22137_tokens[1LL], ._field_Args=_22137_tokens.slice(2LL)});;
}



inline void _20a0a6110_pushDirective(_20a0a48b1_parser* _self_, jule::Ptr<_1a8772982_Directive> _23636_d) {
	if ((_23636_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad19b186:;
		if (it != expr_end) {
			jule::Ptr<_1a8772982_Directive> _24116_pd = *it;
			{
				if (((*((*(_23636_d))._field_Tag))._field_Kind == (*(*(_24116_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1ad19b186:;
			++it;
			goto _iter_begin_1ad19b186;
		}
		_iter_end_1ad19b186:;
	};
	{ jule::Slice<jule::Ptr<_1a8772982_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23636_d); };
}



inline jule::Ptr<_1a8783586_ScopeTree> _20a0a650b_buildScope(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _24935_tokens, jule::Ptr<_1a875ce89_Token> _24957_end) {
	jule::Ptr<_1a8783586_ScopeTree> _25013_s = _1a98e5142_newScope();;
	(*(_25013_s))._field_End=_24957_end;
	_1a98e6c59_scopeParser _25213_sp = _1a98e6c59_scopeParser{._field_p=_self_, };;
	_20a09320c_build(&_25213_sp, _24935_tokens, &(_25013_s));
	return _25013_s;;
}



inline __jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool _20a0a69b2__buildType(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _25942_tokens, jule::I32* _26013_i, jule::Bool _26022_err) {
	__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a98ec8b9_typeBuilder _26113_tb = _1a98ec8b9_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25942_tokens)), ._field_i=_26013_i, ._field_err=_26022_err};;
	__jule_func_result = std::move(_1a990089a_build(&_26113_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool _20a0a6e68_buildType(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _27141_tokens, jule::I32* _27213_i, jule::Bool _27222_err) {
	__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a875ce89_Token> _2739_token = (*(_27141_tokens))[(*(_27213_i))];;
	jule::Ptr<_1a8773565_TypeDecl> _27413_t;
	jule::Bool _27416_ok;
	({
		__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a69b2__buildType(_self_, _27141_tokens, _27213_i, _27222_err);
		_27413_t = __jule_assign_result.__jule_result_arg0;
		_27416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27222_err && (!(_27416_ok)))) {
		_20a0a5362_pushErr(_self_, _2739_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _27413_t;
	__jule_func_result.__jule_result_arg1 = _27416_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1a878a082_TypeAliasDecl> _20a0a72a9_buildTypeAliasDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _28143_tokens) {
	jule::I32 _28213_i = 1LL;;
	if ((_28213_i >= (*(_28143_tokens)).len())) {
		_20a0a5362_pushErr(_self_.ptr(), (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a878a082_TypeAliasDecl> _28713_tad = jule::new_ptr<_1a878a082_TypeAliasDecl>(_1a878a082_TypeAliasDecl{._field_Token=(*(_28143_tokens))[1LL], ._field_Ident=(*((*(_28143_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1a875ce89_Token> _29113_token = (*(_28143_tokens))[_28213_i];;
	if (((*(_29113_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20a0a5362_pushErr(_self_, _29113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_28213_i)++;
	if ((_28213_i >= (*(_28143_tokens)).len())) {
		_20a0a5362_pushErr(_self_, (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _28713_tad;;
	};
	_29113_token=(*(_28143_tokens))[_28213_i];
	if (((*_29113_token.alloc)._field_Id != static_cast<jule::U32>(8LLU))) {
		_20a0a5362_pushErr(_self_, (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _28713_tad;;
	};
	(_28213_i)++;
	if ((_28213_i >= (*(_28143_tokens)).len())) {
		_20a0a5362_pushErr(_self_, (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _28713_tad;;
	};
	jule::Ptr<_1a8773565_TypeDecl> _31213_t;
	jule::Bool _31216_ok;
	({
		__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType(_self_, _28143_tokens, (&(_28213_i)), true);
		_31213_t = __jule_assign_result.__jule_result_arg0;
		_31216_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_28713_tad))._field_Kind=_31213_t;
	if ((_31216_ok && (_28213_i < (*(_28143_tokens)).len()))) {
		_20a0a5362_pushErr(_self_, (*(_28143_tokens))[_28213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_28713_tad.alloc)._field_Public=_1a8dbd40c_IsPub((*_28713_tad.alloc)._field_Ident);
	return _28713_tad;;
}



inline void _20a0a761c_buildVarTypeAndExpr(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a87863d0_VarDecl>* _32144_v, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _32162_tokens) {
	jule::I32 _32213_i = 0LL;;
	jule::Ptr<_1a875ce89_Token> _32313_tok = (*(_32162_tokens))[_32213_i];;
	if (((*(_32313_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_32213_i)++;
		if (((_32213_i >= (*(_32162_tokens)).len()) || ((*((*(_32162_tokens))[_32213_i]))._field_Id == static_cast<jule::U32>(71LLU)))) {
			_20a0a5362_pushErr(_self_.ptr(), _32313_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1a8773565_TypeDecl> _33017_t;
		jule::Bool _33020_ok;
		({
			__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType(_self_, _32162_tokens, (&(_32213_i)), true);
			_33017_t = __jule_assign_result.__jule_result_arg0;
			_33020_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33020_ok) {
			(*((*(_32144_v))))._field_Kind=_33017_t;
			if ((_32213_i >= (*(_32162_tokens)).len())) {
				return;;
			};
			_32313_tok=(*(_32162_tokens))[_32213_i];
		};
	};
	if (((*_32313_tok.alloc)._field_Id != static_cast<jule::U32>(71LLU))) {
		_20a0a5362_pushErr(_self_, _32313_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32144_v))))._field_Setter=_32313_tok;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _34613_exprTokens = (*(_32162_tokens)).slice((_32213_i + 1LL));;
	if ((_34613_exprTokens.len() == 0LL)) {
		_20a0a5362_pushErr(_self_, _32313_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32144_v))))._field_Expr=_20a0a5a16_buildExpr(_self_, &(_34613_exprTokens));
}



inline void _20a0a7980_buildVarCommon(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a87863d0_VarDecl>* _35439_v, jule::Slice<jule::Ptr<_1a875ce89_Token>> _35456_tokens) {
	(*((*(_35439_v))))._field_Token=_35456_tokens[0LL];
	if (((*((*((*(_35439_v))))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20a0a5362_pushErr(_self_.ptr(), (*((*(_35439_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35439_v))))._field_Ident=(*(*((*(_35439_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35439_v))))._field_Public=_1a8dbd40c_IsPub((*((*(_35439_v))))._field_Ident);
	(*((*(_35439_v))))._field_Kind=nullptr;
	if ((_35456_tokens.len() > 1LL)) {
		(_35456_tokens).mut_slice(1LL);;
		_20a0a761c_buildVarTypeAndExpr(_self_, _35439_v, &(_35456_tokens));
	};
}



inline void _20a0a7ce3_buildVarBegin(_20a0a48b1_parser* _self_, jule::Ptr<_1a87863d0_VarDecl>* _37037_v, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _37055_tokens) {
	jule::Ptr<_1a875ce89_Token> _3719_tok = (*(_37055_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3719_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1ad1b6d50:;
			{
				(*((*(_37037_v))))._field_Statically=true;
				goto _case_begin_1ad1b69cb;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1ad1b69cb:;
			{
				if (((*(_37055_tokens)).len() == 1LL)) {
					(*(_37055_tokens))=nullptr;
					_20a0a5362_pushErr(_self_, _3719_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				((*(_37055_tokens))).mut_slice(1LL);;
				if (((*((*(_37055_tokens))[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
					(*((*(_37037_v))))._field_Mutable=true;
					((*(_37055_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1ad1b66bd:;
			{
				(*((*(_37037_v))))._field_Constant=true;
				((*(_37055_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1ad1b638d:;
			{
				(*(_37055_tokens))=nullptr;
				_20a0a5362_pushErr(_self_, _3719_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad1b6668:;
	};
}



inline jule::Ptr<_1a87863d0_VarDecl> _20a0a8134_buildVar(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _39832_tokens) {
	jule::Ptr<_1a87863d0_VarDecl> _39913_v = jule::new_ptr<_1a87863d0_VarDecl>(_1a87863d0_VarDecl{._field_Token=_39832_tokens[0LL], });;
	_20a0a7ce3_buildVarBegin(_self_.ptr(), &(_39913_v), &(_39832_tokens));
	if ((_39832_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_39832_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		(*(_39913_v))._field_Reference=true;
		if ((_39832_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_39832_tokens).mut_slice(1LL);;
	};
	_20a0a7980_buildVarCommon(_self_, &(_39913_v), _39832_tokens);
	return _39913_v;;
}



inline jule::Ptr<_1a8780770_GenericDecl> _20a0a8475_buildGeneric(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _41737_tokens) {
	jule::Ptr<_1a8780770_GenericDecl> _41813_g = jule::new_ptr<_1a8780770_GenericDecl>(_1a8780770_GenericDecl{._field_Token=(*(_41737_tokens))[0LL], });;
	if (((*((*(_41813_g))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20a0a5362_pushErr(_self_.ptr(), (*_41813_g.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_41813_g.alloc)._field_Ident=(*(*_41813_g.alloc)._field_Token.alloc)._field_Kind;
	if (((*(_41737_tokens)).len() > 1LL)) {
		if (((*((*(_41737_tokens))[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
			_20a0a5362_pushErr(_self_, (*(_41737_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_41737_tokens)).len() == 2LL)) {
			_20a0a5362_pushErr(_self_, (*(_41737_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1a875ce89_Token>> _43517_constraintTokens = (*(_41737_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _43617_parts;
		jule::Slice<_224743e15_Log> _43624_errors;
		({
			__jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log __jule_assign_result = _20a0a37d3_parts(&(_43517_constraintTokens), static_cast<jule::U32>(66LLU), true);
			_43617_parts = __jule_assign_result.__jule_result_arg0;
			_43624_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_43624_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_43624_errors);
			return nullptr;;
		};
		(*_41813_g.alloc)._field_Constraint=jule::new_ptr<_1a87802b9_Constraint>(_1a87802b9_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1a8773565_TypeDecl>>::alloc(0LL, _43617_parts.len())});
		{
			auto expr = &(_43617_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad1c428b:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1a875ce89_Token>> _44225_part = *it;
				{
					jule::I32 _44321_i = 0LL;;
					jule::Ptr<_1a8773565_TypeDecl> _44421_kind;
					({
						__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType(_self_, &(_44225_part), (&(_44321_i)), true);
						_44421_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_41813_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*_41813_g.alloc)._field_Constraint.alloc)._field_Mask,jule::Slice<jule::Ptr<_1a8773565_TypeDecl>>::make({_44421_kind}));
					if ((_44321_i < _44225_part.len())) {
						_20a0a5362_pushErr(_self_, _44225_part[_44321_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1ad1c428b:;
				++it;
				goto _iter_begin_1ad1c428b;
			}
			_iter_end_1ad1c428b:;
		};
	};
	return _41813_g;;
}



inline jule::Slice<jule::Ptr<_1a8780770_GenericDecl>> _20a0a8871_buildGenerics(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _45438_tokens, jule::Ptr<_1a875ce89_Token>* _45457_errorToken) {
	if (((*(_45438_tokens)).len() == 0LL)) {
		_20a0a5362_pushErr(_self_.ptr(), (*(_45457_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _46013_parts;
	jule::Slice<_224743e15_Log> _46020_errors;
	({
		__jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log __jule_assign_result = _20a0a37d3_parts(_45438_tokens, static_cast<jule::U32>(5LLU), true);
		_46013_parts = __jule_assign_result.__jule_result_arg0;
		_46020_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46020_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46020_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a8780770_GenericDecl>> _46613_generics = jule::Slice<jule::Ptr<_1a8780770_GenericDecl>>::alloc(0LL, _46013_parts.len());;
	{
		auto expr = &(_46013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1c936d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _46721_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8780770_GenericDecl>> &__jule_push_dest = _46613_generics; __jule_push_dest.push(_20a0a8475_buildGeneric(_self_, &(_46721_part))); };
			}
			_iter_next_1ad1c936d:;
			++it;
			goto _iter_begin_1ad1c936d;
		}
		_iter_end_1ad1c936d:;
	};
	return _46613_generics;;
}



inline jule::Ptr<_1a8783cc3_ParamDecl> _20a0a8bb2_buildSelfParam(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _47437_tokens) {
	if ((_47437_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a8783cc3_ParamDecl> _47913_param = jule::new_ptr<_1a8783cc3_ParamDecl>();;
	if (((*(_47437_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_47913_param.alloc)._field_Mutable=true;
		if ((_47437_tokens.len() == 1LL)) {
			_20a0a5362_pushErr(_self_, _47437_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47437_tokens).mut_slice(1LL);;
	};
	_2234c269a_StrBuilder _49113_ident = static__2234c2ac9_New(5LL);;
	if (((*(_47437_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		_2234c313a_WriteStr(&_49113_ident, jule::Str::lit("&", 1));
		if ((_47437_tokens.len() == 1LL)) {
			_20a0a5362_pushErr(_self_, _47437_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47437_tokens).mut_slice(1LL);;
	};
	if (((*(_47437_tokens[0LL]))._field_Id == static_cast<jule::U32>(24LLU))) {
		_2234c313a_WriteStr(&_49113_ident, jule::Str::lit("self", 4));
		(*_47913_param.alloc)._field_Token=_47437_tokens[0LL];
		if ((_47437_tokens.len() != 1LL)) {
			_20a0a5362_pushErr(_self_, _47437_tokens[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*_47913_param.alloc)._field_Ident=_2234c3932_Str(&_49113_ident);
	return _47913_param;;
}



inline void _20a0a90d0_paramTypeBegin(_20a0a48b1_parser* _self_, jule::Ptr<_1a8783cc3_ParamDecl>* _51438_param, jule::I32* _51462_i, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _51471_tokens) {
	for (; ((*(_51462_i)) < (*(_51471_tokens)).len()); ((*(_51462_i)))++) {
		{
			jule::Ptr<_1a875ce89_Token> _51613_token = (*(_51471_tokens))[(*(_51462_i))];;
			if (((*(_51613_token))._field_Id != static_cast<jule::U32>(39LLU))) {
				return;;
			};
			if ((*((*(_51438_param))))._field_Variadic) {
				_20a0a5362_pushErr(_self_, _51613_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1ad1d17a4;
			};
			(*((*(_51438_param))))._field_Variadic=true;
		}
	_iter_next_1ad1d17a4:;
	}
	_iter_end_1ad1d17a4:;;
}



inline void _20a0a9443_buildParamType(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a8783cc3_ParamDecl>* _52939_param, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _52963_tokens) {
	jule::I32 _53013_i = 0LL;;
	_20a0a90d0_paramTypeBegin(_self_.ptr(), _52939_param, &(_53013_i), _52963_tokens);
	if ((_53013_i >= (*(_52963_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType(_self_, _52963_tokens, (&(_53013_i)), true);
		(*((*(_52939_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_53013_i < (*(_52963_tokens)).len())) {
		_20a0a5362_pushErr(_self_, (*(_52963_tokens))[_53013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _20a0a97a6_buildParamBody(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a8783cc3_ParamDecl>* _54239_param, jule::Slice<jule::Ptr<_1a875ce89_Token>> _54262_tokens) {
	jule::Ptr<_1a875ce89_Token> _54313_tok = _54262_tokens[0LL];;
	if ((_54262_tokens.len() == 1LL)) {
		(*((*(_54239_param))))._field_Ident=(*(_54313_tok))._field_Kind;
		return;;
	} else if ((_54262_tokens.len() < 3LL)) {
		_20a0a5362_pushErr(_self_.ptr(), _54313_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_54262_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
		(*((*(_54239_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_20a0a9443_buildParamType(_self_, _54239_param, &(_54262_tokens));
		return;;
	};
	(*((*(_54239_param))))._field_Ident=(*(_54313_tok))._field_Kind;
	(_54262_tokens).mut_slice(2LL);;
	_20a0a9443_buildParamType(_self_, _54239_param, &(_54262_tokens));
}



inline jule::Ptr<_1a8783cc3_ParamDecl> _20a0a9ae7_buildParam(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _56234_tokens) {
	jule::Ptr<_1a8783cc3_ParamDecl> _56313_param = jule::new_ptr<_1a8783cc3_ParamDecl>(_1a8783cc3_ParamDecl{._field_Token=_56234_tokens[0LL], });;
	if (((*((*(_56313_param))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_56313_param.alloc)._field_Mutable=true;
		if ((_56234_tokens.len() == 1LL)) {
			_20a0a5362_pushErr(_self_.ptr(), _56234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_56234_tokens).mut_slice(1LL);;
		(*_56313_param.alloc)._field_Token=_56234_tokens[0LL];
	};
	if ((_56234_tokens.len() >= 3LL)) {
		if (((*(*_56313_param.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U32>(65LLU))) {
			if ((_56234_tokens.len() == 1LL)) {
				_20a0a5362_pushErr(_self_, _56234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_56234_tokens[1LL]))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_56234_tokens[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
				(*_56313_param.alloc)._field_Reference=true;
				(_56234_tokens).mut_slice(1LL);;
				(*_56313_param.alloc)._field_Token=_56234_tokens[0LL];
			};
		};
	};
	if (((*(*_56313_param.alloc)._field_Token.alloc)._field_Id != static_cast<jule::U32>(1LLU))) {
		(*_56313_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
		_20a0a9443_buildParamType(_self_, &(_56313_param), &(_56234_tokens));
	} else {
		_20a0a97a6_buildParamBody(_self_, &(_56313_param), _56234_tokens);
	};
	return _56313_param;;
}



inline void _20a0a9da0_checkParams(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a8783cc3_ParamDecl>>* _60535_params) {
	{
		auto expr = _60535_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1e17b4:;
		if (it != expr_end) {
			jule::Ptr<_1a8783cc3_ParamDecl> _60621_param = *it;
			{
				if ((_1a8784147_IsSelf(_60621_param.ptr()) || ((*_60621_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1ad1e17b4;
				};
				if (((*_60621_param.alloc)._field_Token == nullptr)) {
					_20a0a5362_pushErr(_self_, (*_60621_param.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*_60621_param.alloc)._field_Kind=jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=(*_60621_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a8773b70_IdentTypeDecl>(_1a8773b70_IdentTypeDecl{._field_Token=(*_60621_param.alloc)._field_Token, ._field_Ident=(*((*_60621_param.alloc)._field_Token))._field_Kind, }), &__jule_any_type74)});
					(*_60621_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1ad1e17b4:;
			++it;
			goto _iter_begin_1ad1e17b4;
		}
		_iter_end_1ad1e17b4:;
	};
}



inline jule::Slice<jule::Ptr<_1a8783cc3_ParamDecl>> _20a0aa29b_buildParams(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _62536_tokens, jule::Bool _62554_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _62613_parts;
	jule::Slice<_224743e15_Log> _62620_errs;
	({
		__jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log __jule_assign_result = _20a0a37d3_parts(_62536_tokens, static_cast<jule::U32>(5LLU), true);
		_62613_parts = __jule_assign_result.__jule_result_arg0;
		_62620_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62620_errs);
	if ((_62613_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a8783cc3_ParamDecl>> _63217_params = nullptr;;
	if ((_62554_method && (_62613_parts.len() > 0LL))) {
		jule::Ptr<_1a8783cc3_ParamDecl> _63417_param = _20a0a8bb2_buildSelfParam(_self_, _62613_parts[0LL]);;
		if (((_63417_param != nullptr) && _1a8784147_IsSelf(_63417_param))) {
			{ jule::Slice<jule::Ptr<_1a8783cc3_ParamDecl>> &__jule_push_dest = _63217_params; __jule_push_dest.push(_63417_param); };
			(_62613_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_62613_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1e80d4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _64121_part = *it;
			{
				if ((_64121_part.len() == 0LL)) {
					goto _iter_next_1ad1e80d4;
				};
				jule::Ptr<_1a8783cc3_ParamDecl> _64517_param = _20a0a9ae7_buildParam(_self_, _64121_part);;
				if ((_64517_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1a8783cc3_ParamDecl>> &__jule_push_dest = _63217_params; __jule_push_dest.push(_64517_param); };
				};
			}
			_iter_next_1ad1e80d4:;
			++it;
			goto _iter_begin_1ad1e80d4;
		}
		_iter_end_1ad1e80d4:;
	};
	_20a0a9da0_checkParams(_self_, &(_63217_params));
	return _63217_params;;
}



inline __jule_tuple_x_1a8776458_RetTypeDecl__jule_tuple_bool _20a0aa697_buildMultiRetType(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _65542_tokens, jule::I32* _65565_i) {
	__jule_tuple_x_1a8776458_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a8776458_RetTypeDecl>();
	((*(_65565_i)))++;
	if (((*(_65565_i)) >= (*(_65542_tokens)).len())) {
		((*(_65565_i)))--;
		({
			__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType(_self_, _65542_tokens, _65565_i, false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_65565_i)))--;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _66513_rangeTokens = _20a0a3063_range(_65565_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _65542_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _66713_parts;
	jule::Slice<_224743e15_Log> _66720_errs;
	({
		__jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log __jule_assign_result = _20a0a37d3_parts(&(_66513_rangeTokens), static_cast<jule::U32>(5LLU), true);
		_66713_parts = __jule_assign_result.__jule_result_arg0;
		_66720_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_66720_errs);
	if ((_66713_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> _67313_types = jule::Slice<jule::Ptr<_1a8773565_TypeDecl>>::alloc(0LL, _66713_parts.len());;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::Slice<jule::Ptr<_1a875ce89_Token>>::alloc(0LL, _66713_parts.len());
	{
		auto expr = &(_66713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1edeb9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _67521_part = *it;
			{
				if ((_67521_part.len() == 0LL)) {
					goto _iter_next_1ad1edeb9;
				};
				jule::Ptr<_1a875ce89_Token> _67917_token = _67521_part[0LL];;
				jule::I32 _68017_offset = 0LL;;
				if ((_67521_part.len() > 1LL)) {
					_67917_token=_67521_part[1LL];
					if (((*(_67917_token))._field_Id == static_cast<jule::U32>(8LLU))) {
						_68017_offset=2LL;
						if ((_67521_part.len() < 3LL)) {
							_20a0a5362_pushErr(_self_, _67917_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1ad1edeb9;
						};
					};
				};
				_67917_token=_67521_part[0LL];
				if ((_68017_offset != 2LL)) {
					jule::Ptr<_1a875ce89_Token> _69621_newToken = jule::new_ptr<_1a875ce89_Token>((*_67917_token.alloc));;
					(*_69621_newToken.alloc)._field_Kind=jule::Str::lit("<anonymous>", 11);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a875ce89_Token>>::make({_69621_newToken}));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a875ce89_Token>>::make({_67917_token}));
				};
				jule::Ptr<_1a8773565_TypeDecl> _70317_tk;
				({
					__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType(_self_, &(_67521_part), (&(_68017_offset)), true);
					_70317_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_68017_offset < _67521_part.len())) {
					_20a0a5362_pushErr(_self_, _67521_part[_68017_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> &__jule_push_dest = _67313_types; __jule_push_dest.push(_70317_tk); };
			}
			_iter_next_1ad1edeb9:;
			++it;
			goto _iter_begin_1ad1edeb9;
		}
		_iter_end_1ad1edeb9:;
	};
	if ((_67313_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=(*(_65542_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1a8774c92_TupleTypeDecl>(_1a8774c92_TupleTypeDecl{._field_Types=_67313_types}), &__jule_any_type73)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_67313_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a8776458_RetTypeDecl__jule_tuple_bool _1e1826a31_buildRetType(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _72637_tokens, jule::I32* _72660_i) {
	__jule_tuple_x_1a8776458_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a8776458_RetTypeDecl>();
	if (((*(_72660_i)) >= (*(_72637_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a875ce89_Token> _73213_token = (*(_72637_tokens))[(*(_72660_i))];;
	{
		auto &_match_expr{ (*(_73213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1ad207d80:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1ad207e07:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1ad207e6d:;
			{
				if ((((*(_72660_i)) + 1LL) >= (*(_72637_tokens)).len())) {
					_20a0a5362_pushErr(_self_.ptr(), _73213_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_72660_i)))++;
				_73213_token=(*(_72637_tokens))[(*(_72660_i))];
				{
					auto &_match_expr{ (*(_73213_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ad20918e:;
						{
							({
								__jule_tuple_x_1a8776458_RetTypeDecl__jule_tuple_bool __jule_assign_result = _20a0aa697_buildMultiRetType(_self_, _72637_tokens, _72660_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1ad209d71:;
						{
							_20a0a5362_pushErr(_self_, _73213_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1ad209cd8:;
				};
				({
					__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType(_self_, _72637_tokens, _72660_i, true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1ad207d2a:;
	};
	((*(_72660_i)))++;
	_20a0a5362_pushErr(_self_.ptr(), _73213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1a8785225_FnDecl> _1e1826e82_buildFnPrototype(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _76541_tokens, jule::I32* _76564_i, jule::Bool _76572_method) {
	jule::Ptr<_1a8785225_FnDecl> _76613_f = jule::new_ptr<_1a8785225_FnDecl>(_1a8785225_FnDecl{._field_Token=(*(_76541_tokens))[(*(_76564_i))], });;
	if (((*((*(_76613_f))._field_Token))._field_Id == static_cast<jule::U32>(34LLU))) {
		(*_76613_f.alloc)._field_Statically=true;
		((*(_76564_i)))++;
		if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
			_20a0a5362_pushErr(_self_.ptr(), (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_76613_f.alloc)._field_Token=(*(_76541_tokens))[(*(_76564_i))];
	};
	if (((*(*_76613_f.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
		(*_76613_f.alloc)._field_Unsafety=true;
		((*(_76564_i)))++;
		if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
			_20a0a5362_pushErr(_self_, (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_76613_f.alloc)._field_Token=(*(_76541_tokens))[(*(_76564_i))];
	};
	((*(_76564_i)))++;
	if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
		_20a0a5362_pushErr(_self_, (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a875ce89_Token> _7999_tok = (*(_76541_tokens))[(*(_76564_i))];;
	if (((*(_7999_tok))._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_76564_i)))++;
		if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
			_20a0a5362_pushErr(_self_, (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_76613_f.alloc)._field_Ident=(*_7999_tok.alloc)._field_Kind;
	} else {
		(*_76613_f.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1a875ce89_Token> _8119_errorToken = (*(_76541_tokens))[(*(_76564_i))];;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _81213_genericsTokens = _20a0a3063_range(_76564_i, static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _76541_tokens);;
	if ((_81213_genericsTokens != nullptr)) {
		(*_76613_f.alloc)._field_Generics=_20a0a8871_buildGenerics(_self_, &(_81213_genericsTokens), &(_8119_errorToken));
	};
	if (((*((*(_76541_tokens))[(*(_76564_i))]))._field_Id != static_cast<jule::U32>(74LLU))) {
		_20a0a5362_pushErr(_self_, (*(_76541_tokens))[(*(_76564_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _82213_paramsToks = _20a0a3063_range(_76564_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _76541_tokens);;
	if ((_82213_paramsToks.len() > 0LL)) {
		(*_76613_f.alloc)._field_Params=_20a0aa29b_buildParams(_self_, &(_82213_paramsToks), _76572_method);
	};
	if (((*(_76564_i)) < (*(_76541_tokens)).len())) {
		jule::Ptr<_1a875ce89_Token> _82813_token = (*(_76541_tokens))[(*(_76564_i))];;
		if (((*(_82813_token))._field_Id == static_cast<jule::U32>(68LLU))) {
			(*_76613_f.alloc)._field_Exceptional=true;
			((*(_76564_i)))++;
		};
	};
	(*_76613_f.alloc)._field_Public=_1a8dbd40c_IsPub((*_76613_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1a8776458_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1e1826a31_buildRetType(_self_, _76541_tokens, _76564_i);
		(*_76613_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _76613_f;;
}



inline jule::Ptr<_1a8785225_FnDecl> _1e1827438_buildFn(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _84232_tokens, jule::Bool _84250_method, jule::Bool _84264_prototype) {
	jule::I32 _84313_i = 0LL;;
	jule::Ptr<_1a8785225_FnDecl> _84413_f = _1e1826e82_buildFnPrototype(_self_, _84232_tokens, &(_84313_i), _84250_method);;
	if (_84264_prototype) {
		if ((_84313_i < (*(_84232_tokens)).len())) {
			_20a0a5362_pushErr(_self_, (*(_84232_tokens))[(_84313_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _84413_f;;
	} else if ((_84413_f == nullptr)) {
		return _84413_f;;
	};
	if ((_84313_i >= (*(_84232_tokens)).len())) {
		_20a0a4bad_stop(_self_);
		_20a0a5362_pushErr(_self_, (*(_84413_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _86013_blockTokens = _20a0a3063_range(&(_84313_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _84232_tokens);;
	if ((_86013_blockTokens != nullptr)) {
		(*_84413_f.alloc)._field_Scope=_20a0a650b_buildScope(_self_, &(_86013_blockTokens), (*(_84232_tokens))[(_84313_i - 1LL)]);
		(*((*_84413_f.alloc)._field_Scope))._field_Unsafety=(*_84413_f.alloc)._field_Unsafety;
		if ((_84313_i < (*(_84232_tokens)).len())) {
			_20a0a5362_pushErr(_self_, (*(_84232_tokens))[_84313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_20a0a4bad_stop(_self_);
		_20a0a5362_pushErr(_self_, (*_84413_f.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _84413_f;;
}



inline jule::Slice<jule::Ptr<_1a875ce89_Token>> _1e1827779_getUseDeclSelectors(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _87642_tokens) {
	jule::I32 _87713_i = 0LL;;
	_87642_tokens=_20a0a3063_range(&(_87713_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_87642_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _87913_parts;
	jule::Slice<_224743e15_Log> _87920_errs;
	({
		__jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log __jule_assign_result = _20a0a37d3_parts(&(_87642_tokens), static_cast<jule::U32>(5LLU), true);
		_87913_parts = __jule_assign_result.__jule_result_arg0;
		_87920_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_87920_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_87920_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _88513_selectors = jule::Slice<jule::Ptr<_1a875ce89_Token>>::alloc(0LL, _87913_parts.len());;
	{
		auto expr = &(_87913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2233d9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _88621_part = *it;
			{
				if ((_88621_part.len() > 1LL)) {
					_20a0a5362_pushErr(_self_, _88621_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a875ce89_Token> _89017_tok = _88621_part[0LL];;
				if ((((*(_89017_tok))._field_Id != static_cast<jule::U32>(1LLU)) && ((*_89017_tok.alloc)._field_Id != static_cast<jule::U32>(24LLU)))) {
					_20a0a5362_pushErr(_self_, _89017_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1ad2233d9;
				};
				{ jule::Slice<jule::Ptr<_1a875ce89_Token>> &__jule_push_dest = _88513_selectors; __jule_push_dest.push(_89017_tok); };
			}
			_iter_next_1ad2233d9:;
			++it;
			goto _iter_begin_1ad2233d9;
		}
		_iter_end_1ad2233d9:;
	};
	return _88513_selectors;;
}



inline void _1e1827adc_buildBindUseDecl(_20a0a48b1_parser* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _90140_decl, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _90157_tokens) {
	if (((*(_90157_tokens)).len() > 1LL)) {
		_20a0a5362_pushErr(_self_, (*(_90157_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a875ce89_Token> _9059_token = (*(_90157_tokens))[0LL];;
	if ((((*(_9059_token))._field_Id != static_cast<jule::U32>(4LLU)) || (((*_9059_token.alloc)._field_Kind[0LL] != '`') && ((*_9059_token.alloc)._field_Kind[0LL] != '\"')))) {
		_20a0a5362_pushErr(_self_, _9059_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90140_decl))))._field_Binded=true;
	(*((*(_90140_decl))))._field_LinkPath=(*_9059_token.alloc)._field_Kind.slice(1LL, ((*_9059_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1e1827e2d_useDeclTokstoa(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _91434_tokens) {
	jule::I32 _91513_n = 0LL;;
	{
		auto expr = _91434_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9149cc:;
		if (it != expr_end) {
			jule::Ptr<_1a875ce89_Token> *_91616_token = it;
			{
				if ((((*((*(_91616_token))))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_91616_token)).alloc)._field_Id != static_cast<jule::U32>(19LLU)))) {
					_20a0a5362_pushErr(_self_, (*(_91616_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_91513_n+=(*(*(_91616_token)).alloc)._field_Kind.len();
			}
			_iter_next_1ac9149cc:;
			++it;
			goto _iter_begin_1ac9149cc;
		}
		_iter_end_1ac9149cc:;
	};
	_2234c269a_StrBuilder _92213_s = static__2234c2ac9_New(_91513_n);;
	{
		auto expr = _91434_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac914ee9:;
		if (it != expr_end) {
			jule::Ptr<_1a875ce89_Token> *_92316_token = it;
			{
				_2234c313a_WriteStr(&_92213_s, (*((*(_92316_token))))._field_Kind);
			}
			_iter_next_1ac914ee9:;
			++it;
			goto _iter_begin_1ac914ee9;
		}
		_iter_end_1ac914ee9:;
	};
	return _2234c3932_Str(&_92213_s);;
}



inline void _1e1828291_buildStdUseDecl(_20a0a48b1_parser* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _92939_decl, jule::Slice<jule::Ptr<_1a875ce89_Token>> _92959_tokens) {
	(*((*(_92939_decl))))._field_Std=true;
	jule::Ptr<_1a875ce89_Token> _93213_token = _92959_tokens[0LL];;
	if ((_92959_tokens.len() < 3LL)) {
		_20a0a5362_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_92959_tokens).mut_slice(2LL);;
	_93213_token=_92959_tokens[(_92959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_93213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1ac919b03:;
			{
				_20a0a5362_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1ac919b7a:;
			{
				jule::Slice<jule::Ptr<_1a875ce89_Token>> _94521_selectors = nullptr;;
				({
					__jule_tuple_sx_1a875ce89_Token__jule_tuple_sx_1a875ce89_Token __jule_assign_result = _20a0a332c_rangeLast(&(_92959_tokens));
					_92959_tokens = __jule_assign_result.__jule_result_arg0;
					_94521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_92939_decl))))._field_Selected=_1e1827779_getUseDeclSelectors(_self_, _94521_selectors);
				if ((_92959_tokens.len() == 0LL)) {
					_20a0a5362_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_93213_token=_92959_tokens[(_92959_tokens.len() - 1LL)];
				if (((*(_93213_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_20a0a5362_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92959_tokens).mut_slice(0LL, (_92959_tokens.len() - 1LL));;
				if ((_92959_tokens.len() == 0LL)) {
					_20a0a5362_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ac919be1:;
			{
				(_92959_tokens).mut_slice(0LL, (_92959_tokens.len() - 1LL));;
				if ((_92959_tokens.len() == 0LL)) {
					_20a0a5362_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_93213_token=_92959_tokens[(_92959_tokens.len() - 1LL)];
				if (((*(_93213_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_20a0a5362_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92959_tokens).mut_slice(0LL, (_92959_tokens.len() - 1LL));;
				if ((_92959_tokens.len() == 0LL)) {
					_20a0a5362_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_92939_decl))))._field_Full=true;
			}
		}
		_match_end_1ac919a9d:;
	};
	if (((_92959_tokens.len() == 1LL) && ((*(_92959_tokens[0LL]))._field_Id == static_cast<jule::U32>(31LLU)))) {
		(*((*(_92939_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_92939_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1e1827e2d_useDeclTokstoa(_self_, &(_92959_tokens)));
	};
}



inline void _1e1828604_buildIdentUseDecl(_20a0a48b1_parser* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _98741_decl, jule::Slice<jule::Ptr<_1a875ce89_Token>> _98761_tokens) {
	(*((*(_98741_decl))))._field_Std=false;
	jule::Ptr<_1a875ce89_Token> _99013_token = _98761_tokens[(_98761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_99013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1ac9236de:;
			{
				_20a0a5362_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1ac924646:;
			{
				jule::Slice<jule::Ptr<_1a875ce89_Token>> _99621_selectors = nullptr;;
				({
					__jule_tuple_sx_1a875ce89_Token__jule_tuple_sx_1a875ce89_Token __jule_assign_result = _20a0a332c_rangeLast(&(_98761_tokens));
					_98761_tokens = __jule_assign_result.__jule_result_arg0;
					_99621_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_98741_decl))))._field_Selected=_1e1827779_getUseDeclSelectors(_self_, _99621_selectors);
				if ((_98761_tokens.len() == 0LL)) {
					_20a0a5362_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99013_token=_98761_tokens[(_98761_tokens.len() - 1LL)];
				if (((*(_99013_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_20a0a5362_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98761_tokens).mut_slice(0LL, (_98761_tokens.len() - 1LL));;
				if ((_98761_tokens.len() == 0LL)) {
					_20a0a5362_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ac9246ac:;
			{
				(_98761_tokens).mut_slice(0LL, (_98761_tokens.len() - 1LL));;
				if ((_98761_tokens.len() == 0LL)) {
					_20a0a5362_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99013_token=_98761_tokens[(_98761_tokens.len() - 1LL)];
				if (((*(_99013_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_20a0a5362_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98761_tokens).mut_slice(0LL, (_98761_tokens.len() - 1LL));;
				if ((_98761_tokens.len() == 0LL)) {
					_20a0a5362_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_98741_decl))))._field_Full=true;
			}
		}
		_match_end_1ac924525:;
	};
	(*((*(_98741_decl))))._field_LinkPath=_1e1827e2d_useDeclTokstoa(_self_, &(_98761_tokens));
}



inline void _1e1828967_parseUseDecl(_20a0a48b1_parser* _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _103536_decl, jule::Slice<jule::Ptr<_1a875ce89_Token>> _103556_tokens) {
	if ((*((*(_103536_decl))))._field_Binded) {
		_1e1827adc_buildBindUseDecl(_self_, _103536_decl, &(_103556_tokens));
		return;;
	};
	jule::Ptr<_1a875ce89_Token> _104113_token = _103556_tokens[0LL];;
	if (((*(_104113_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20a0a5362_pushErr(_self_, _104113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_103556_tokens.len() > 2LL) && ((*(_103556_tokens[1LL]))._field_Id == static_cast<jule::U32>(9LLU)))) {
		(*((*(_103536_decl))))._field_Alias=(*_104113_token.alloc)._field_Kind;
		if (((*(_103556_tokens[2LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_20a0a5362_pushErr(_self_, _104113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_103556_tokens).mut_slice(2LL);;
		_104113_token=_103556_tokens[0LL];
	};
	;
	{
		
		if ((*_104113_token.alloc)._field_Kind.equal("std", 3)) {
			_case_begin_1ac93181d:;
			{
				_1e1828291_buildStdUseDecl(_self_, _103536_decl, _103556_tokens);
			}
		}
		else {
			_case_begin_1ac931466:;
			{
				_1e1828604_buildIdentUseDecl(_self_, _103536_decl, _103556_tokens);
			}
		}
		_match_end_1ac931400:;
	};
}



inline jule::Ptr<_1a8d1e12c_UseDecl> _1e1828d63_buildUseDecl(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _106935_tokens, jule::Bool _106953_binded) {
	jule::Ptr<_1a8d1e12c_UseDecl> _107013_decl = jule::new_ptr<_1a8d1e12c_UseDecl>(_1a8d1e12c_UseDecl{._field_Token=_106935_tokens[0LL], ._field_Binded=_106953_binded, });;
	if ((_106935_tokens.len() < 2LL)) {
		_20a0a5362_pushErr(_self_, (*(_107013_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_106935_tokens).mut_slice(1LL);;
	_1e1828967_parseUseDecl(_self_, &(_107013_decl), _106935_tokens);
	return _107013_decl;;
}



inline jule::Ptr<_1a8773565_TypeDecl> _1e182925e_buildTypeEnumItemKind(jule::Ptr<_20a0a48b1_parser> _self_, jule::I32* _108346_i, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _108359_tokens) {
	jule::I32 _108413_braceN = 0LL;;
	jule::I32 _10859_exprStart = (*(_108346_i));;
	for (; ((*(_108346_i)) < (*(_108359_tokens)).len()); ((*(_108346_i)))++) {
		{
			jule::Ptr<_1a875ce89_Token> _108713_t = (*(_108359_tokens))[(*(_108346_i))];;
			{
				auto &_match_expr{ (*(_108713_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1ac935866:;
					{
						(_108413_braceN)++;
						goto _iter_next_1ac934ce9;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1ac935b74:;
					{
						(_108413_braceN)--;
					}
				}
				_match_end_1ac935b1e:;
			};
			if ((_108413_braceN > 0LL)) {
				goto _iter_next_1ac934ce9;
			};
			if ((((*(_108713_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_108346_i)) + 1LL) >= (*(_108359_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a875ce89_Token>> _110325_kindTokens = nullptr;;
				if (((*_108713_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_110325_kindTokens=(*(_108359_tokens)).slice(_10859_exprStart, (*(_108346_i)));
				} else {
					_110325_kindTokens=(*(_108359_tokens)).slice(_10859_exprStart);
				};
				jule::I32 _110921_j = 0LL;;
				jule::Ptr<_1a8773565_TypeDecl> _111021_kind;
				({
					__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType(_self_, &(_110325_kindTokens), (&(_110921_j)), true);
					_111021_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_110921_j < _110325_kindTokens.len())) {
					_20a0a5362_pushErr(_self_, _110325_kindTokens[_110921_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _111021_kind;;
			};
		}
	_iter_next_1ac934ce9:;
	}
	_iter_end_1ac934ce9:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a8d209be_TypeEnumItemDecl>> _1e18295a0_buildTypeEnumItems(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _112043_tokens) {
	jule::Slice<jule::Ptr<_1a8d209be_TypeEnumItemDecl>> _112113_items = jule::Slice<jule::Ptr<_1a8d209be_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _112213_i = 0LL;;
	for (; (_112213_i < (*(_112043_tokens)).len()); (_112213_i)++) {
		{
			jule::Ptr<_1a875ce89_Token> _112417_t = (*(_112043_tokens))[_112213_i];;
			jule::Ptr<_1a8d209be_TypeEnumItemDecl> _112517_item = jule::new_ptr<_1a8d209be_TypeEnumItemDecl>();;
			(*_112517_item.alloc)._field_Token=_112417_t;
			if ((((*((*_112517_item.alloc)._field_Token))._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_112043_tokens)).len() - _112213_i) > 2LL))) {
				_112417_t=(*(_112043_tokens))[(_112213_i + 1LL)];
				if (((*(_112417_t))._field_Id == static_cast<jule::U32>(8LLU))) {
					(*_112517_item.alloc)._field_Ident=(*(*_112517_item.alloc)._field_Token.alloc)._field_Kind;
					_112213_i+=2LL;
					if (((_112213_i >= (*(_112043_tokens)).len()) || ((*((*(_112043_tokens))[_112213_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
						_20a0a5362_pushErr(_self_.ptr(), _112417_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1ac93a9e2;
					};
				};
			};
			(*_112517_item.alloc)._field_Kind=_1e182925e_buildTypeEnumItemKind(_self_, &(_112213_i), _112043_tokens);
			{ jule::Slice<jule::Ptr<_1a8d209be_TypeEnumItemDecl>> &__jule_push_dest = _112113_items; __jule_push_dest.push(_112517_item); };
		}
	_iter_next_1ac93a9e2:;
	}
	_iter_end_1ac93a9e2:;;
	return _112113_items;;
}



inline jule::Ptr<_1a8d2112e_TypeEnumDecl> _1e18298e1_buildTypeEnumDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _114442_tokens) {
	jule::I32 _114513_i = 1LL;;
	jule::Ptr<_1a8d2112e_TypeEnumDecl> _114613_e = jule::new_ptr<_1a8d2112e_TypeEnumDecl>(_1a8d2112e_TypeEnumDecl{._field_Token=(*(_114442_tokens))[_114513_i], });;
	if (((*((*(_114613_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20a0a5362_pushErr(_self_.ptr(), (*_114613_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_114613_e.alloc)._field_Ident=(*(*_114613_e.alloc)._field_Token.alloc)._field_Kind;
	_114513_i+=3LL;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _115613_itemTokens = _20a0a3063_range(&(_114513_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _114442_tokens);;
	if ((_115613_itemTokens == nullptr)) {
		_20a0a4bad_stop(_self_);
		_20a0a5362_pushErr(_self_, (*_114613_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _114613_e;;
	} else if ((_114513_i < (*(_114442_tokens)).len())) {
		_20a0a5362_pushErr(_self_, (*(_114442_tokens))[_114513_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_114613_e.alloc)._field_Public=_1a8dbd40c_IsPub((*_114613_e.alloc)._field_Ident);
	(*_114613_e.alloc)._field_End=(*(_114442_tokens))[(_114513_i - 1LL)];
	(*_114613_e.alloc)._field_Items=_1e18295a0_buildTypeEnumItems(_self_, &(_115613_itemTokens));
	return _114613_e;;
}



inline jule::Ptr<_1a8777899_Expr> _1e1829cdc_buildEnumItemExpr(jule::Ptr<_20a0a48b1_parser> _self_, jule::I32* _117142_i, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _117155_tokens) {
	jule::I32 _117213_braceN = 0LL;;
	jule::I32 _11739_exprStart = (*(_117142_i));;
	for (; ((*(_117142_i)) < (*(_117155_tokens)).len()); ((*(_117142_i)))++) {
		{
			jule::Ptr<_1a875ce89_Token> _117513_t = (*(_117155_tokens))[(*(_117142_i))];;
			{
				auto &_match_expr{ (*(_117513_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1ac948714:;
					{
						(_117213_braceN)++;
						goto _iter_next_1ac947b97;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1ac948a22:;
					{
						(_117213_braceN)--;
					}
				}
				_match_end_1ac9489bc:;
			};
			if ((_117213_braceN > 0LL)) {
				goto _iter_next_1ac947b97;
			};
			if ((((*(_117513_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_117142_i)) + 1LL) >= (*(_117155_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a875ce89_Token>> _119125_exprTokens = nullptr;;
				if (((*_117513_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_119125_exprTokens=(*(_117155_tokens)).slice(_11739_exprStart, (*(_117142_i)));
				} else {
					_119125_exprTokens=(*(_117155_tokens)).slice(_11739_exprStart);
				};
				return _20a0a5a16_buildExpr(_self_, &(_119125_exprTokens));;
			};
		}
	_iter_next_1ac947b97:;
	}
	_iter_end_1ac947b97:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a8d1e5d3_EnumItemDecl>> _1e182a12d_buildEnumItems(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _120339_tokens) {
	jule::Slice<jule::Ptr<_1a8d1e5d3_EnumItemDecl>> _120413_items = jule::Slice<jule::Ptr<_1a8d1e5d3_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _120513_i = 0LL;;
	for (; (_120513_i < (*(_120339_tokens)).len()); (_120513_i)++) {
		{
			jule::Ptr<_1a875ce89_Token> _120717_t = (*(_120339_tokens))[_120513_i];;
			jule::Ptr<_1a8d1e5d3_EnumItemDecl> _120817_item = jule::new_ptr<_1a8d1e5d3_EnumItemDecl>();;
			(*_120817_item.alloc)._field_Token=_120717_t;
			if (((*((*_120817_item.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
				_20a0a5362_pushErr(_self_.ptr(), (*_120817_item.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*_120817_item.alloc)._field_Ident=(*(*_120817_item.alloc)._field_Token.alloc)._field_Kind;
			if ((((_120513_i + 1LL) >= (*(_120339_tokens)).len()) || ((*((*(_120339_tokens))[(_120513_i + 1LL)]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				if (((_120513_i + 1LL) < (*(_120339_tokens)).len())) {
					(_120513_i)++;
				};
				{ jule::Slice<jule::Ptr<_1a8d1e5d3_EnumItemDecl>> &__jule_push_dest = _120413_items; __jule_push_dest.push(_120817_item); };
				goto _iter_next_1ac94c5b4;
			};
			(_120513_i)++;
			_120717_t=(*(_120339_tokens))[_120513_i];
			(_120513_i)++;
			if (((*(_120717_t))._field_Id != static_cast<jule::U32>(8LLU))) {
				_20a0a5362_pushErr(_self_, _120717_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1ac94c5b4;
			};
			if (((_120513_i >= (*(_120339_tokens)).len()) || ((*((*(_120339_tokens))[_120513_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				_20a0a5362_pushErr(_self_, _120717_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1ac94c5b4;
			};
			(*_120817_item.alloc)._field_Expr=_1e1829cdc_buildEnumItemExpr(_self_, &(_120513_i), _120339_tokens);
			{ jule::Slice<jule::Ptr<_1a8d1e5d3_EnumItemDecl>> &__jule_push_dest = _120413_items; __jule_push_dest.push(_120817_item); };
		}
	_iter_next_1ac94c5b4:;
	}
	_iter_end_1ac94c5b4:;;
	return _120413_items;;
}



inline jule::Ptr<_1a8d20194_EnumDecl> _1e182a46e_buildEnumDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _124038_tokens) {
	if (((*(_124038_tokens)).len() < 3LL)) {
		_20a0a5362_pushErr(_self_.ptr(), (*(_124038_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8d20194_EnumDecl> _124513_e = jule::new_ptr<_1a8d20194_EnumDecl>(_1a8d20194_EnumDecl{._field_Token=(*(_124038_tokens))[1LL], });;
	if (((*((*(_124513_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20a0a5362_pushErr(_self_, (*_124513_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_124513_e.alloc)._field_Ident=(*(*_124513_e.alloc)._field_Token.alloc)._field_Kind;
	jule::I32 _125313_i = 2LL;;
	if (((*((*(_124038_tokens))[_125313_i]))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_125313_i)++;
		if ((_125313_i >= (*(_124038_tokens)).len())) {
			_20a0a5362_pushErr(_self_, (*(_124038_tokens))[(_125313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _124513_e;;
		};
		({
			__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType(_self_, _124038_tokens, (&(_125313_i)), true);
			(*_124513_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_125313_i >= (*(_124038_tokens)).len())) {
			_20a0a4bad_stop(_self_);
			_20a0a5362_pushErr(_self_, (*_124513_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _124513_e;;
		};
	} else {
		(*_124513_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _127013_itemTokens = _20a0a3063_range(&(_125313_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _124038_tokens);;
	if ((_127013_itemTokens == nullptr)) {
		_20a0a4bad_stop(_self_);
		_20a0a5362_pushErr(_self_, (*_124513_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _124513_e;;
	} else if ((_125313_i < (*(_124038_tokens)).len())) {
		_20a0a5362_pushErr(_self_, (*(_124038_tokens))[_125313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_124513_e.alloc)._field_Public=_1a8dbd40c_IsPub((*_124513_e.alloc)._field_Ident);
	(*_124513_e.alloc)._field_End=(*(_124038_tokens))[(_125313_i - 1LL)];
	(*_124513_e.alloc)._field_Items=_1e182a12d_buildEnumItems(_self_, &(_127013_itemTokens));
	return _124513_e;;
}



inline jule::Any _1e182a7b0_buildNodeEnumDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _128542_tokens) {
	if ((((*(_128542_tokens)).len() > 3LL) && ((*((*(_128542_tokens))[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
		if (((*((*(_128542_tokens))[3LL]))._field_Id == static_cast<jule::U32>(7LLU))) {
			return jule::Any(_1e18298e1_buildTypeEnumDecl(_self_, _128542_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1e182a46e_buildEnumDecl(_self_, _128542_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1a8d213e8_FieldDecl> _1e182ab01_buildField(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _129434_tokens) {
	jule::Ptr<_1a8d213e8_FieldDecl> _129513_f = jule::new_ptr<_1a8d213e8_FieldDecl>();;
	(*_129513_f.alloc)._field_Mutable=((*(_129434_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU));
	if ((*_129513_f.alloc)._field_Mutable) {
		if ((_129434_tokens.len() == 1LL)) {
			_20a0a5362_pushErr(_self_.ptr(), _129434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129434_tokens).mut_slice(1LL);;
	};
	(*_129513_f.alloc)._field_Token=_129434_tokens[0LL];
	if (((*((*_129513_f.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20a0a5362_pushErr(_self_, (*_129513_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_129513_f.alloc)._field_Ident=(*(*_129513_f.alloc)._field_Token.alloc)._field_Kind;
	if ((_129434_tokens.len() == 1LL)) {
		_20a0a5362_pushErr(_self_, _129434_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_129434_tokens.len() < 3LL) || ((*(_129434_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU)))) {
		_20a0a5362_pushErr(_self_, _129434_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_129434_tokens).mut_slice(2LL);;
	jule::I32 _132313_i = 0LL;;
	({
		__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType(_self_, &(_129434_tokens), (&(_132313_i)), true);
		(*_129513_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_132313_i < _129434_tokens.len())) {
		jule::Ptr<_1a875ce89_Token> _132613_token = _129434_tokens[_132313_i];;
		if (((*(_132613_token))._field_Id != static_cast<jule::U32>(71LLU))) {
			_20a0a5362_pushErr(_self_, _129434_tokens[_132313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_132313_i)++;
		if ((_132313_i >= _129434_tokens.len())) {
			_20a0a5362_pushErr(_self_, _132613_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129434_tokens).mut_slice(_132313_i);;
		(*_129513_f.alloc)._field_Default=_20a0a5a16_buildExpr(_self_, &(_129434_tokens));
	};
	(*_129513_f.alloc)._field_Public=_1a8dbd40c_IsPub((*_129513_f.alloc)._field_Ident);
	return _129513_f;;
}



inline jule::Slice<jule::Ptr<_1a8d213e8_FieldDecl>> _1e182ae42_buildStructDeclFields(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _134345_tokens) {
	jule::Slice<jule::Ptr<_1a8d213e8_FieldDecl>> _134417_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a98e63b8_stmt>> _134513_stmts = _1a98e6770_splitStmts(&(_134345_tokens));;
	{
		auto expr = &(_134513_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac96c99c:;
		if (it != expr_end) {
			jule::Ptr<_1a98e63b8_stmt> _134621_stmt = *it;
			{
				_134345_tokens=(*(_134621_stmt))._field_tokens;
				jule::Ptr<_1a8d213e8_FieldDecl> _134817_f = _1e182ab01_buildField(_self_, _134345_tokens);;
				{ jule::Slice<jule::Ptr<_1a8d213e8_FieldDecl>> &__jule_push_dest = _134417_fields; __jule_push_dest.push(_134817_f); };
			}
			_iter_next_1ac96c99c:;
			++it;
			goto _iter_begin_1ac96c99c;
		}
		_iter_end_1ac96c99c:;
	};
	return _134417_fields;;
}



inline jule::Ptr<_1a8d21cde_StructDecl> _1e182b283_buildStructDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _135440_tokens) {
	if (((*(_135440_tokens)).len() < 3LL)) {
		_20a0a5362_pushErr(_self_.ptr(), (*(_135440_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _136013_i = 1LL;;
	jule::Ptr<_1a8d21cde_StructDecl> _136113_s = jule::new_ptr<_1a8d21cde_StructDecl>(_1a8d21cde_StructDecl{._field_Token=(*(_135440_tokens))[_136013_i], });;
	if (((*((*(_136113_s))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20a0a5362_pushErr(_self_, (*_136113_s.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_136013_i)++;
	if ((_136013_i >= (*(_135440_tokens)).len())) {
		_20a0a5362_pushErr(_self_, (*(_135440_tokens))[_136013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _136113_s;;
	};
	(*_136113_s.alloc)._field_Ident=(*(*_136113_s.alloc)._field_Token.alloc)._field_Kind;
	jule::Ptr<_1a875ce89_Token> _13759_errorToken = (*(_135440_tokens))[_136013_i];;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _137613_genericsTokens = _20a0a3063_range(&(_136013_i), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _135440_tokens);;
	if ((_137613_genericsTokens != nullptr)) {
		(*_136113_s.alloc)._field_Generics=_20a0a8871_buildGenerics(_self_, &(_137613_genericsTokens), &(_13759_errorToken));
	};
	if ((_136013_i >= (*(_135440_tokens)).len())) {
		_20a0a5362_pushErr(_self_, (*(_135440_tokens))[(_136013_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136113_s;;
	};
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _138613_bodyTokens = _20a0a3063_range(&(_136013_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _135440_tokens);;
	if ((_138613_bodyTokens == nullptr)) {
		_20a0a4bad_stop(_self_);
		_20a0a5362_pushErr(_self_, (*_136113_s.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136113_s;;
	};
	if ((_136013_i < (*(_135440_tokens)).len())) {
		_20a0a5362_pushErr(_self_, (*(_135440_tokens))[_136013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_136113_s.alloc)._field_Public=_1a8dbd40c_IsPub((*_136113_s.alloc)._field_Ident);
	(*_136113_s.alloc)._field_Fields=_1e182ae42_buildStructDeclFields(_self_, _138613_bodyTokens);
	(*_136113_s.alloc)._field_End=(*(_135440_tokens))[(_136013_i - 1LL)];
	return _136113_s;;
}



inline void _1e182b53b_checkMethodReceiver(_20a0a48b1_parser* _self_, jule::Ptr<_1a8785225_FnDecl>* _140239_f) {
	if ((*((*(_140239_f))))._field_Statically) {
		if ((((*((*(_140239_f))))._field_Params.len() > 0LL) && _1a8784147_IsSelf((*((*(_140239_f))))._field_Params[0LL].ptr()))) {
			_20a0a5362_pushErr(_self_, (*((*(_140239_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_140239_f))))._field_Params.len() == 0LL)) {
		_20a0a5362_pushErr(_self_, (*((*(_140239_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8783cc3_ParamDecl> _14149_param = (*((*(_140239_f))))._field_Params[0LL];;
	if ((!(_1a8784147_IsSelf(_14149_param.ptr())))) {
		_20a0a5362_pushErr(_self_, (*((*(_140239_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1e182b89e_buildTraitBody(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a8d2252b_TraitDecl>* _142139_t, jule::Slice<jule::Ptr<_1a875ce89_Token>> _142158_tokens) {
	jule::Slice<jule::Ptr<_1a98e63b8_stmt>> _142213_stmts = _1a98e6770_splitStmts(&(_142158_tokens));;
	{
		auto expr = &(_142213_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac97d44c:;
		if (it != expr_end) {
			jule::Ptr<_1a98e63b8_stmt> _142321_stmt = *it;
			{
				_142158_tokens=(*(_142321_stmt))._field_tokens;
				if ((_142158_tokens.len() == 0LL)) {
					goto _iter_next_1ac97d44c;
				};
				{
					auto &_match_expr{ (*(_142158_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(29LLU)) {
						_case_begin_1ac981e01:;
						{
							jule::Ptr<_1a8785225_FnDecl> _143021_f = _1e1827438_buildFn(_self_, &(_142158_tokens), true, true);;
							if ((_143021_f == nullptr)) {
								goto _match_end_1ac97e6c3;
							};
							_1e182b53b_checkMethodReceiver(_self_, &(_143021_f));
							if (((*(_143021_f))._field_Generics.len() > 0LL)) {
								_20a0a5362_pushErr(_self_, (*(_143021_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a8785225_FnDecl>> &__jule_push_dest = (*((*(_142139_t))))._field_Methods; __jule_push_dest.push(_143021_f); };
						}
					}
					else {
						_case_begin_1ac97deca:;
						{
							jule::I32 _144021_i = 0LL;;
							jule::Ptr<_1a8773565_TypeDecl> _144121_ti;
							jule::Bool _144125_ok;
							({
								__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType(_self_, &(_142158_tokens), (&(_144021_i)), true);
								_144121_ti = __jule_assign_result.__jule_result_arg0;
								_144125_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144125_ok))) {
								goto _match_end_1ac97e6c3;
							};
							if ((_144021_i < _142158_tokens.len())) {
								_20a0a5362_pushErr(_self_, _142158_tokens[_144021_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> &__jule_push_dest = (*((*(_142139_t))))._field_Inherits; __jule_push_dest.push(_144121_ti); };
						}
					}
					_match_end_1ac97e6c3:;
				};
			}
			_iter_next_1ac97d44c:;
			++it;
			goto _iter_begin_1ac97d44c;
		}
		_iter_end_1ac97d44c:;
	};
}



inline jule::Ptr<_1a8d2252b_TraitDecl> _1e182bbe0_buildTraitDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _145339_tokens) {
	if (((*(_145339_tokens)).len() < 3LL)) {
		_20a0a5362_pushErr(_self_.ptr(), (*(_145339_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8d2252b_TraitDecl> _145813_t = jule::new_ptr<_1a8d2252b_TraitDecl>(_1a8d2252b_TraitDecl{._field_Token=(*(_145339_tokens))[1LL], });;
	if (((*((*(_145813_t))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_20a0a5362_pushErr(_self_, (*_145813_t.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_145813_t.alloc)._field_Ident=(*(*_145813_t.alloc)._field_Token.alloc)._field_Kind;
	jule::I32 _146613_i = 2LL;;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _146713_bodyTokens = _20a0a3063_range(&(_146613_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _145339_tokens);;
	if ((_146713_bodyTokens == nullptr)) {
		_20a0a4bad_stop(_self_);
		_20a0a5362_pushErr(_self_, (*_145813_t.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_146613_i < (*(_145339_tokens)).len())) {
		_20a0a5362_pushErr(_self_, (*(_145339_tokens))[_146613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_145813_t.alloc)._field_Public=_1a8dbd40c_IsPub((*_145813_t.alloc)._field_Ident);
	_1e182b89e_buildTraitBody(_self_, &(_145813_t), _146713_bodyTokens);
	(*_145813_t.alloc)._field_End=(*(_145339_tokens))[(_146613_i - 1LL)];
	return _145813_t;;
}



inline jule::Ptr<_1a8785225_FnDecl> _1e182c031_buildBindFn(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _148335_tokens) {
	(_148335_tokens).mut_slice(1LL);;
	jule::Ptr<_1a8785225_FnDecl> _148513_f = _1e1827438_buildFn(_self_, &(_148335_tokens), false, true);;
	if ((_148513_f != nullptr)) {
		(*_148513_f.alloc)._field_Public=false;
		(*_148513_f.alloc)._field_Binded=true;
	};
	return _148513_f;;
}



inline jule::Ptr<_1a87863d0_VarDecl> _1e182c372_buildBindVar(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _149336_tokens) {
	(_149336_tokens).mut_slice(1LL);;
	jule::Ptr<_1a87863d0_VarDecl> _149513_v = _20a0a8134_buildVar(_self_, _149336_tokens);;
	if ((_149513_v != nullptr)) {
		(*_149513_v.alloc)._field_Public=false;
		(*_149513_v.alloc)._field_Binded=true;
		if (((*_149513_v.alloc)._field_Expr != nullptr)) {
			_20a0a5362_pushErr(_self_, (*_149513_v.alloc)._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _149513_v;;
}



inline jule::Ptr<_1a8d21cde_StructDecl> _1e182c6b3_buildBindStruct(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _150639_tokens) {
	(_150639_tokens).mut_slice(1LL);;
	jule::Ptr<_1a8d21cde_StructDecl> _150813_s = _1e182b283_buildStructDecl(_self_, &(_150639_tokens));;
	if ((_150813_s != nullptr)) {
		(*_150813_s.alloc)._field_Public=false;
		{
			auto expr = &((*_150813_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac990e98:;
			if (it != expr_end) {
				jule::Ptr<_1a8d213e8_FieldDecl> _151125_f = *it;
				{
					(*(_151125_f))._field_Public=true;
				}
				_iter_next_1ac990e98:;
				++it;
				goto _iter_begin_1ac990e98;
			}
			_iter_end_1ac990e98:;
		};
		(*_150813_s.alloc)._field_Binded=true;
	};
	return _150813_s;;
}



inline jule::Ptr<_1a878a082_TypeAliasDecl> _1e182ca04_buildBindTypeAlias(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _152042_tokens) {
	(_152042_tokens).mut_slice(1LL);;
	jule::Ptr<_1a878a082_TypeAliasDecl> _152213_t = _20a0a72a9_buildTypeAliasDecl(_self_, &(_152042_tokens));;
	if ((_152213_t != nullptr)) {
		(*_152213_t.alloc)._field_Public=false;
		(*_152213_t.alloc)._field_Binded=true;
	};
	return _152213_t;;
}



inline jule::Ptr<_1a8d1e12c_UseDecl> _1e182cd45_buildBindUse(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _153036_tokens) {
	if ((_153036_tokens.len() == 1LL)) {
		_20a0a5362_pushErr(_self_.ptr(), _153036_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153036_tokens).mut_slice(1LL);;
	;
	return _1e1828d63_buildUseDecl(_self_, _153036_tokens, true);;
}



inline jule::Any _1e182d186_buildBind(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _154134_tokens) {
	jule::Ptr<_1a875ce89_Token> _154213_token = (*(_154134_tokens))[0LL];;
	if (((*(_154134_tokens)).len() == 1LL)) {
		_20a0a5362_pushErr(_self_.ptr(), _154213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_154213_token=(*(_154134_tokens))[1LL];
	{
		auto &_match_expr{ (*(_154213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1ac996c6d:;
			{
				return jule::Any(_1e182c031_buildBindFn(_self_, (*(_154134_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1ac996cd4:;
			{
				return jule::Any(_1e182c372_buildBindVar(_self_, (*(_154134_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1ac9968e9:;
			{
				return jule::Any(_1e182c6b3_buildBindStruct(_self_, (*(_154134_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ac996971:;
			{
				return jule::Any(_1e182ca04_buildBindTypeAlias(_self_, (*(_154134_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1ac996388:;
			{
				_20a0a5362_pushErr(_self_, _154213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac996883:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8785225_FnDecl> _1e182d4c7_getMethod(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _156534_tokens) {
	jule::I32 _156613_i = 0LL;;
	jule::Ptr<_1a875ce89_Token> _156713_token = (*(_156534_tokens))[_156613_i];;
	if (((*(_156713_token))._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_156613_i + 1LL) >= (*(_156534_tokens)).len())) {
			_20a0a5362_pushErr(_self_.ptr(), _156713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_156613_i)++;
		_156713_token=(*(_156534_tokens))[_156613_i];
	};
	if (((*_156713_token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
		if (((_156613_i + 1LL) >= (*(_156534_tokens)).len())) {
			_20a0a5362_pushErr(_self_, _156713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_156613_i)++;
		_156713_token=(*(_156534_tokens))[_156613_i];
	};
	if (((*_156713_token.alloc)._field_Id != static_cast<jule::U32>(29LLU))) {
		_20a0a5362_pushErr(_self_, _156713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1e1827438_buildFn(_self_, _156534_tokens, true, false);;
}



inline void _1e182d83a_parseImplBody(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a8d22b8b_Impl>* _159438_ipl, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _159455_tokens) {
	jule::Slice<jule::Ptr<_1a98e63b8_stmt>> _159513_stmts = _1a98e6770_splitStmts(_159455_tokens);;
	{
		auto expr = &(_159513_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac99e759:;
		if (it != expr_end) {
			jule::Ptr<_1a98e63b8_stmt> _159621_stmt = *it;
			{
				(*(_159455_tokens))=(*(_159621_stmt))._field_tokens;
				jule::Ptr<_1a875ce89_Token> _159817_token = (*(_159455_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_159817_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1ac99ed31:;
						{
							_20a0a6110_pushDirective(_self_.ptr(), _20a0a5d57_buildDirective(_self_, (*(_159455_tokens))));
							goto _iter_next_1ac99e759;
						}
					}
					_match_end_1ac9a0969:;
				};
				{
					auto &_match_expr{ (*(_159817_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(6LLU)) {
						_case_begin_1ac9a1b8a:;
						{
							jule::Ptr<_1a87863d0_VarDecl> _160721_v = _20a0a8134_buildVar(_self_, (*(_159455_tokens)));;
							if ((_160721_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1a87863d0_VarDecl>> &__jule_push_dest = (*((*(_159438_ipl))))._field_Statics; __jule_push_dest.push(_160721_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1ac9a1c01:;
						{
							jule::Ptr<_1a8785225_FnDecl> _161421_f = _1e182d4c7_getMethod(_self_, _159455_tokens);;
							if ((_161421_f != nullptr)) {
								_1e182b53b_checkMethodReceiver(_self_, &(_161421_f));
								_1e182e275_applyFnMeta(_self_, &(_161421_f));
								{ jule::Slice<jule::Ptr<_1a8785225_FnDecl>> &__jule_push_dest = (*((*(_159438_ipl))))._field_Methods; __jule_push_dest.push(_161421_f); };
							};
						}
					}
					else {
						_case_begin_1ac9a0aac:;
						{
							_20a0a5362_pushErr(_self_, _159817_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1ac99e759;
						}
					}
					_match_end_1ac9a1074:;
				};
			}
			_iter_next_1ac99e759:;
			++it;
			goto _iter_begin_1ac99e759;
		}
		_iter_end_1ac99e759:;
	};
}



inline jule::Ptr<_1a8d22b8b_Impl> _1e182db7b_buildImpl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _162733_tokens) {
	jule::Ptr<_1a875ce89_Token> _162813_token = _162733_tokens[0LL];;
	if ((_162733_tokens.len() < 2LL)) {
		_20a0a5362_pushErr(_self_.ptr(), _162813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _163413_i = 1LL;;
	jule::Ptr<_1a8773565_TypeDecl> _163613_base;
	jule::Bool _163623_ok;
	({
		__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType(_self_, &(_162733_tokens), (&(_163413_i)), true);
		_163613_base = __jule_assign_result.__jule_result_arg0;
		_163623_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163623_ok))) {
		return nullptr;;
	};
	if ((_163413_i >= _162733_tokens.len())) {
		_20a0a5362_pushErr(_self_, _162813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8d22b8b_Impl> _164513_ipl = jule::new_ptr<_1a8d22b8b_Impl>(_1a8d22b8b_Impl{._field_Base=_163613_base, });;
	_162813_token=_162733_tokens[_163413_i];
	if (((*(_162813_token))._field_Id != static_cast<jule::U32>(9LLU))) {
		if (((*_162813_token.alloc)._field_Id == static_cast<jule::U32>(72LLU))) {
			std::swap((*(_164513_ipl))._field_Base, (*_164513_ipl.alloc)._field_Dest);
			goto _julec_label_1ad3078a8;
		};
		_20a0a4bad_stop(_self_);
		_20a0a5362_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_163413_i)++;
	if ((_163413_i >= _162733_tokens.len())) {
		_20a0a4bad_stop(_self_);
		_20a0a5362_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType(_self_, &(_162733_tokens), (&(_163413_i)), true);
		(*_164513_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_163623_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163623_ok))) {
		return nullptr;;
	};
	if ((_163413_i >= _162733_tokens.len())) {
		_20a0a4bad_stop(_self_);
		_20a0a5362_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ad3078a8:;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _168313_bodyTokens = _20a0a3063_range(&(_163413_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_162733_tokens));;
	if ((_168313_bodyTokens == nullptr)) {
		_20a0a4bad_stop(_self_);
		_20a0a5362_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_163413_i < _162733_tokens.len())) {
		_20a0a5362_pushErr(_self_, _162733_tokens[_163413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_164513_ipl.alloc)._field_End=_162733_tokens[(_163413_i - 1LL)];
	_1e182d83a_parseImplBody(_self_, &(_164513_ipl), &(_168313_bodyTokens));
	return _164513_ipl;;
}



inline jule::Any _1e182debc_buildNodeData(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _169838_tokens) {
	jule::Ptr<_1a875ce89_Token> _169913_token = (*(_169838_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_169913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1ad30c759:;
			{
				jule::Ptr<_1a8785225_FnDecl> _170317_f = _1e1827438_buildFn(_self_, _169838_tokens, false, false);;
				if ((_170317_f != nullptr)) {
					(*_170317_f.alloc)._field_Global=true;
				};
				return jule::Any(_170317_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1ad30cd53:;
			{
				return jule::Any(_20a0a8134_buildVar(_self_, (*(_169838_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ad30cdb9:;
			{
				return jule::Any(_20a0a72a9_buildTypeAliasDecl(_self_, _169838_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1ad30c36e:;
			{
				return _1e182a7b0_buildNodeEnumDecl(_self_, _169838_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1ad30c3d5:;
			{
				return jule::Any(_1e182b283_buildStructDecl(_self_, _169838_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1ad30c44b:;
			{
				return jule::Any(_1e182bbe0_buildTraitDecl(_self_, _169838_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1ad30c4b2:;
			{
				return jule::Any(_1e182db7b_buildImpl(_self_, (*(_169838_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1ad30c528:;
			{
				return _1e182d186_buildBind(_self_, _169838_tokens);;
			}
		}
		else {
			_case_begin_1ad30c083:;
			{
				_20a0a5362_pushErr(_self_.ptr(), _169913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad30c319:;
	};
}



inline void _1e182e275_applyFnMeta(_20a0a48b1_parser* _self_, jule::Ptr<_1a8785225_FnDecl>* _173135_f) {
	(*((*(_173135_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1e182e52d_applyMeta(_20a0a48b1_parser* _self_, _1a8772564_Node* _173633_node) {
	{
		auto &_match_expr{ (*(_173633_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ad313ce3:;
			{
				jule::Ptr<_1a87863d0_VarDecl> _173917_v = (*(_173633_node))._field_Data.unsafe_cast_ptr<_1a87863d0_VarDecl>();;
				if ((_173917_v == nullptr)) {
					return;;
				};
				(*(_173917_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ad313a5c:;
			{
				jule::Ptr<_1a8785225_FnDecl> _174617_f = (*(_173633_node))._field_Data.unsafe_cast_ptr<_1a8785225_FnDecl>();;
				if ((_174617_f == nullptr)) {
					return;;
				};
				_1e182e275_applyFnMeta(_self_, &(_174617_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ad313d8c:;
			{
				jule::Ptr<_1a8d21cde_StructDecl> _175217_sd = (*(_173633_node))._field_Data.unsafe_cast_ptr<_1a8d21cde_StructDecl>();;
				if ((_175217_sd == nullptr)) {
					return;;
				};
				(*(_175217_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1ad313c6b:;
	};
}



inline void _1e182e7d6_pushUseDecl(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a8d1e12c_UseDecl>* _176136_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_UseDecls,jule::Slice<jule::Ptr<_1a8d1e12c_UseDecl>>::make({(*(_176136_decl))}));
	if (((*(*_self_.alloc)._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_20a0a5362_pushErr(_self_, (*((*(_176136_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_20a0a56c5_pushSuggestion(_self_, jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e182eb27_pushMetaNodes(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _176938_tokens) {
	{
		auto &_match_expr{ (*((*(_176938_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1ad31a17e:;
			{
				;
				jule::Ptr<_1a8d1e12c_UseDecl> _177317_decl = _1e1828d63_buildUseDecl(_self_.ptr(), (*(_176938_tokens)), false);;
				_1e182e7d6_pushUseDecl(_self_, &(_177317_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1ad31a206:;
			{
				if ((((*(_176938_tokens)).len() > 1LL) && ((*((*(_176938_tokens))[1LL]))._field_Id == static_cast<jule::U32>(16LLU)))) {
					jule::Ptr<_1a8d1e12c_UseDecl> _177821_decl = _1e182cd45_buildBindUse(_self_, (*(_176938_tokens)));;
					_1e182e7d6_pushUseDecl(_self_, &(_177821_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1ad31a26c:;
			{
				_20a0a6110_pushDirective(_self_.ptr(), _20a0a5d57_buildDirective(_self_, (*(_176938_tokens))));
				return true;;
			}
		}
		_match_end_1ad31a080:;
	};
	return false;;
}



inline _1a8772564_Node _1e182ee68_parseNode(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _178934_st) {
	_1a8772564_Node _179013_node = _1a8772564_Node{._field_Token=(*(_178934_st))[0LL], };;
	if (_1e182eb27_pushMetaNodes(_self_, _178934_st)) {
		return _179013_node;;
	};
	jule::Any _179813_data = _1e182debc_buildNodeData(_self_, _178934_st);;
	if ((_179813_data == nullptr)) {
		return _179013_node;;
	};
	_179013_node._field_Data=_179813_data;
	_1e182e52d_applyMeta(_self_, &(_179013_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_20a0a5362_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _179013_node;;
}



inline void _1e1830221_appendNode(jule::Ptr<_20a0a48b1_parser> _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _181335_st) {
	if (((*(_181335_st)).len() == 0LL)) {
		return;;
	};
	_1a8772564_Node _181713_node = _1e182ee68_parseNode(_self_, _181335_st);;
	if (((_181713_node._field_Data != nullptr) && (!(_20a0a4e44_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_Nodes,jule::Slice<_1a8772564_Node>::make({_181713_node}));
	};
}



inline void _1e18306e9_removeRange(_20a0a48b1_parser* _self_, jule::I32 _182330_i, jule::U32 _182338_id, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _182352_tokens, jule::Slice<jule::I32>* _182375_ranges) {
	jule::U32 _18249_close = _20a0a3a69_getCloseOfBrace(_182338_id);;
	for (; (_182330_i >= 0LL); (_182330_i)--) {
		{
			jule::Ptr<_1a875ce89_Token> _182613_tok = (*(_182352_tokens))[(*(_182375_ranges))[_182330_i]];;
			if (((*(_182613_tok))._field_Id != _18249_close)) {
				goto _iter_next_1ad3253ed;
			};
			(*(_182375_ranges))=jule::append((*(_182375_ranges)).slice(0LL, _182330_i),(*(_182375_ranges)).slice((_182330_i + 1LL)));
			goto _iter_end_1ad3253ed;
		}
	_iter_next_1ad3253ed:;
	}
	_iter_end_1ad3253ed:;;
}



inline void _1e1830b17_pushWrongOrderCloseErr(_20a0a48b1_parser* _self_, jule::Ptr<_1a875ce89_Token>* _183542_t, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _183554_tokens, jule::Slice<jule::I32>* _183573_ranges) {
	{
		auto &_match_expr{ (*((*(_183554_tokens))[(*(_183573_ranges))[((*(_183573_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(74LLU)) {
			_case_begin_1ad32770d:;
			{
				_20a0a5362_pushErr(_self_, (*(_183542_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1ad327785:;
			{
				_20a0a5362_pushErr(_self_, (*(_183542_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1ad3277eb:;
			{
				_20a0a5362_pushErr(_self_, (*(_183542_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad32760e:;
	};
}



inline void _1e18310e0_pushRangeClose(_20a0a48b1_parser* _self_, jule::Ptr<_1a875ce89_Token> _184633_t, jule::U32 _184644_left, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _184660_tokens, jule::Slice<jule::I32>* _184683_ranges) {
	jule::I32 _18479_n = (*(_184683_ranges)).len();;
	if ((_18479_n == 0LL)) {
		{
			auto &_match_expr{ (*(_184633_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(77LLU)) {
				_case_begin_1ad32a3d1:;
				{
					_20a0a5362_pushErr(_self_, _184633_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(73LLU)) {
				_case_begin_1ad32a458:;
				{
					_20a0a5362_pushErr(_self_, _184633_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(75LLU)) {
				_case_begin_1ad32a4be:;
				{
					_20a0a5362_pushErr(_self_, _184633_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1ad32a326:;
		};
		return;;
	} else if (((*((*(_184660_tokens))[(*(_184683_ranges))[(_18479_n - 1LL)]]))._field_Id != _184644_left)) {
		_1e1830b17_pushWrongOrderCloseErr(_self_, &(_184633_t), _184660_tokens, _184683_ranges);
	};
	_1e18306e9_removeRange(_self_, (_18479_n - 1LL), (*(_184633_t))._field_Id, _184660_tokens, _184683_ranges);
}



inline void _1e1831398_checkRanges(_20a0a48b1_parser* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _186431_tokens) {
	jule::Slice<jule::I32> _186517_ranges = nullptr;;
	{
		auto expr = _186431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad32c614:;
		if (it != expr_end) {
			jule::I32 _186713_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> *_186716_token = it;
			{
				{
					auto &_match_expr{ (*((*(_186716_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1ad32e34c:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _186517_ranges; __jule_push_dest.push(_186713_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ad32e3d5:;
						{
							_1e18310e0_pushRangeClose(_self_, (*(_186716_token)), static_cast<jule::U32>(74LLU), _186431_tokens, &(_186517_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU)) {
						_case_begin_1ad32e44b:;
						{
							_1e18310e0_pushRangeClose(_self_, (*(_186716_token)), static_cast<jule::U32>(72LLU), _186431_tokens, &(_186517_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1ad32e4b2:;
						{
							_1e18310e0_pushRangeClose(_self_, (*(_186716_token)), static_cast<jule::U32>(76LLU), _186431_tokens, &(_186517_ranges));
						}
					}
					_match_end_1ad32e292:;
				};
			}
			_iter_next_1ad32c614:;
			++it;
			_186713_i++;
			goto _iter_begin_1ad32c614;
		}
		_iter_end_1ad32c614:;
	};
	{
		auto expr = &(_186517_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad32d58d:;
		if (it != expr_end) {
			jule::I32 _188216_i = *it;
			{
				jule::Ptr<_1a875ce89_Token> _188313_token = (*(_186431_tokens))[_188216_i];;
				{
					auto &_match_expr{ (*(_188313_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ad33232d:;
						{
							_20a0a5362_pushErr(_self_, _188313_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1ad332394:;
						{
							_20a0a5362_pushErr(_self_, _188313_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1ad33240a:;
						{
							_20a0a5362_pushErr(_self_, _188313_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1ad3322c8:;
				};
			}
			_iter_next_1ad32d58d:;
			++it;
			goto _iter_begin_1ad32d58d;
		}
		_iter_end_1ad32d58d:;
	};
}



inline void _1e1831651_parse(jule::Ptr<_20a0a48b1_parser> _self_, jule::Ptr<_1a8763720_File>* _189530_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1a87715a7_Ast>(_1a87715a7_Ast{._field_File=(*(_189530_f)), });
	(*_self_.alloc)._field_ep=jule::new_ptr<_20a093c24_exprBuilder>(_20a093c24_exprBuilder{._field_p=_self_});
	_1e1831398_checkRanges(_self_, &((*((*(_189530_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a98e63b8_stmt>> _190813_stmts = _1a98e6770_splitStmts(&((*((*(_189530_f))))._field_Tokens));;
	jule::I32 _191113_i = 0LL;;
	for (; (_191113_i < _190813_stmts.len()); (_191113_i)++) {
		{
			jule::Ptr<_1a98e63b8_stmt> _191317_stmt = _190813_stmts[_191113_i];;
			if (((*(_191317_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_191317_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U32>(35LLU))) {
				goto _iter_end_1ad335ba0;
			};
			if ((!(_224745b70_IsTopDirective((*((*_191317_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1ad335ba0;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_TopDirectives,jule::Slice<jule::Ptr<_1a8772982_Directive>>::make({_20a0a5d57_buildDirective(_self_, (*_191317_stmt.alloc)._field_tokens)}));
		}
	_iter_next_1ad335ba0:;
	}
	_iter_end_1ad335ba0:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_191113_i < _190813_stmts.len()) && (!(_20a0a4e44_stopped(_self_)))); (_191113_i)++) {
		{
			_1e1830221_appendNode(_self_, &((*(_190813_stmts[_191113_i]))._field_tokens));
		}
	_iter_next_1ad339016:;
	}
	_iter_end_1ad339016:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_20a0a5362_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _20a0a48b1_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1a98ece5d_pushErr(_1a98ec8b9_typeBuilder* _self_, jule::Ptr<_1a875ce89_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_20a0a5362_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a98ed2c1_pushSuggestion(_1a98ec8b9_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_20a0a56c5_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1a8773565_TypeDecl> _1a98ed557_buildNamespace(_1a98ec8b9_typeBuilder* _self_) {
	jule::Ptr<_1a8773565_TypeDecl> _5513_t = jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1a8774313_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1a8774313_NamespaceTypeDecl>();;
	jule::I32 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a875ce89_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U32>(1LLU))) {
					_1a98ece5d_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1a98ed2c1_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				(*_5913_nst.alloc)._field_Idents=jule::append((*_5913_nst.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a875ce89_Token>>::make({_6217_token}));
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U32>(19LLU))) {
				goto _iter_end_1ad33e7be;
			};
			(_6013_n)++;
		}
	_iter_next_1ad33e7be:;
	}
	_iter_end_1ad33e7be:;;
	((*(_5913_nst))._field_Idents).mut_slice(0LL, ((*(_5913_nst))._field_Idents.len() - 1LL));;
	((*((*(_self_))._field_i)))--;
	(*_5913_nst.alloc)._field_Kind=_1a98edd0a_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type91);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> _1a98ed7dd_buildGenerics(_1a98ec8b9_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a875ce89_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U32>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _9313_parts = _1a98eda74_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1a98ece5d_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1a8773565_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad346919:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _10021_part = *it;
			{
				jule::I32 _10117_j = 0LL;;
				jule::Ptr<_1a8773565_TypeDecl> _10217_t;
				({
					__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1a98ece5d_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1a8773565_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1ad346919:;
			++it;
			goto _iter_begin_1ad346919;
		}
		_iter_end_1ad346919:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _1a98eda74_identGenerics(_1a98ec8b9_typeBuilder* _self_) {
	jule::I32 _1129_first = (*((*(_self_))._field_i));;
	jule::I32 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a875ce89_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(76LLU)) {
					_case_begin_1ad34a764:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1ad34aa72:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1ad34aa1c:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1ad34990b;
			};
		}
	_iter_next_1ad34990b:;
	}
	_iter_end_1ad34990b:;;
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _12813_parts;
	jule::Slice<_224743e15_Log> _12820_errors;
	({
		__jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log __jule_assign_result = _20a0a37d3_parts(&(_12713_tokens), static_cast<jule::U32>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12820_errors);
	};
	return _12813_parts;;
}



inline jule::Ptr<_1a8773565_TypeDecl> _1a98edd0a_buildIdent(_1a98ec8b9_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return _1a98ed557_buildNamespace(_self_);;
	};
	jule::Ptr<_1a875ce89_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a8773b70_IdentTypeDecl> _14113_it = jule::new_ptr<_1a8773b70_IdentTypeDecl>(_1a8773b70_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a8773565_TypeDecl> _14713_itd = jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type74)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1a98ed7dd_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a98ece5d_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1a98ece5d_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1a8773e39_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1a8773e39_SubIdentTypeDecl>();;
	(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a8773b70_IdentTypeDecl>>::make({_14113_it}));
	jule::Ptr<_1a8773565_TypeDecl> _16613_ident = _1a98edd0a_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1acd52d82:;
			{
				(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a8773b70_IdentTypeDecl>>::make({(*(_16613_ident))._field_Kind.unsafe_cast_ptr<_1a8773b70_IdentTypeDecl>()}));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1acd4c453:;
			{
				(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,(*((*(_16613_ident))._field_Kind.unsafe_cast_ptr<_1a8773e39_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1acd50aa5:;
	};
	return jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type87)});;
}



inline jule::Ptr<_1a8773565_TypeDecl> _1a98ee091_buildCppLink(_1a98ec8b9_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		_1a98ece5d_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1a8773565_TypeDecl> _18513_t = _1a98edd0a_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1a8773b70_IdentTypeDecl>(&__jule_any_type74)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1a8773565_TypeDecl> _1a98ee327_buildFn(_1a98ec8b9_typeBuilder* _self_) {
	jule::Ptr<_1a875ce89_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a8785225_FnDecl> _19213_f = _1e1826e82_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a8785588_IsAnon(_19213_f.ptr())))) {
		_1a98ece5d_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1a8773565_TypeDecl> _1a98ee5ad_buildPtr(_1a98ec8b9_typeBuilder* _self_) {
	jule::Ptr<_1a875ce89_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a98ece5d_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U32>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1a877508e_PtrTypeDecl>(_1a877508e_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type70)});;
	};
	jule::Ptr<_1a8773565_TypeDecl> _22313_elem = _1a9900614_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1a877508e_PtrTypeDecl>(_1a877508e_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1a8773565_TypeDecl> _1a98ee844_buildSptr(_1a98ec8b9_typeBuilder* _self_) {
	jule::Ptr<_1a875ce89_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a98ece5d_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a8773565_TypeDecl> _24413_elem = _1a9900614_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1a8774610_SptrTypeDecl>(_1a8774610_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1a8773565_TypeDecl> _1a98eeaca_buildSlc(_1a98ec8b9_typeBuilder* _self_) {
	jule::Ptr<_1a875ce89_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a8773565_TypeDecl> _26013_elem = _1a9900614_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1a8774995_SlcTypeDecl>(_1a8774995_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type69)});;
}



inline jule::Ptr<_1a8773565_TypeDecl> _1a98eed61_buildArr(_1a98ec8b9_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _27313_exprTokens = _20a0a3063_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a98ece5d_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a8773565_TypeDecl> _27913_elem = _1a9900614_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8775831_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1a8775831_ArrTypeDecl>(_1a8775831_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_1a875ce89_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U32>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_20a0a5a16_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type68)});;
}



inline jule::Ptr<_1a8773565_TypeDecl> _1a99000e7_buildMap(_1a98ec8b9_typeBuilder* _self_) {
	jule::Ptr<_1a875ce89_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a98ece5d_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _31013_keyTokens = _20a0a3063_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a98ece5d_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1a98ece5d_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a877607e_MapTypeDecl> _31913_mapt = jule::new_ptr<_1a877607e_MapTypeDecl>();;
	jule::I32 _32013_j = 0LL;;
	jule::Ptr<_1a8773565_TypeDecl> _32113_keyt;
	jule::Bool _32123_ok;
	({
		__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1a98ece5d_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*_31913_mapt.alloc)._field_Key=_32113_keyt;
	jule::Ptr<_1a8773565_TypeDecl> _32913_valt;
	({
		__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_assign_result = _20a0a6e68_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*_31913_mapt.alloc)._field_Val=_32913_valt;
	return jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type72)});;
}



inline jule::Ptr<_1a8773565_TypeDecl> _1a990037d_buildEnumerable(_1a98ec8b9_typeBuilder* _self_) {
	jule::Ptr<_1a875ce89_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1a98ece5d_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U32>(77LLU))) {
		return _1a98eeaca_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a98eed61_buildArr(_self_);;
}



inline jule::Ptr<_1a8773565_TypeDecl> _1a9900614_step(_1a98ec8b9_typeBuilder* _self_) {
	jule::Ptr<_1a875ce89_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1acd72d4c:;
			{
				return _1a98edd0a_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1acd7329d:;
			{
				return _1a98ee091_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1acd733be:;
			{
				return _1a98ee327_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1acd72a3e:;
			{
				return _1a98ee5ad_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1acd72aa5:;
			{
				return _1a98ee844_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1acd72b1b:;
			{
				return jule::new_ptr<_1a8773565_TypeDecl>(_1a8773565_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a8774610_SptrTypeDecl>(_1a8774610_SptrTypeDecl{._field_Elem=_1a98ee844_buildSptr(_self_)}), &__jule_any_type71)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1acd72b82:;
			{
				return _1a990037d_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1acd72c09:;
			{
				return _1a99000e7_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1acd72720:;
			{
				((*((*(_self_))._field_i)))++;
				_1a98ece5d_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1acd729d9:;
	};
}



inline __jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool _1a990089a_build(_1a98ec8b9_typeBuilder* _self_) {
	__jule_tuple_x_1a8773565_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a8773565_TypeDecl> _38813_root = _1a9900614_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a98ec105_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a98ec8b9_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9192901_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1a919442a_pushErr(_1a9193dca_directiveEval* _self_, jule::Ptr<_1a875ce89_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_224743e15_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_224743e15_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*_2126_t.alloc)._field_Column, ._field_Path=(*((*_2126_t.alloc)._field_File))._field_Path, ._field_Text=_224744377_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _1a9194826_splitOperans(_1a9193dca_directiveEval* _self_, jule::U32 _3331_op, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>>::alloc(0LL, 10LL);;
	jule::I32 _3513_i = 0LL;;
	jule::I32 _3613_rangeN = 0LL;;
	jule::I32 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_1a875ce89_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1acd97d94:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1acd97415;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1acd981a2:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1acd9814c:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1acd97415;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=(_3513_i + 1LL);
		}
	_iter_next_1acd97415:;
	}
	_iter_end_1acd97415:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1a919442a_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1a9194b67_evalDirectiveIdent(_1a9193dca_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd9b051:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1acd9b051:;
			++it;
			goto _iter_begin_1acd9b051;
		}
		_iter_end_1acd9b051:;
	};
	return false;;
}



inline jule::Bool _1a9194ea8_evalDirectivePart(_1a9193dca_directiveEval* _self_, jule::Slice<jule::Ptr<_1a875ce89_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U32>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1a919442a_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1a9194b67_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1a919523e_eval(_1a9193dca_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1a919442a_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _10413_logicalOrParts = _1a9194826_splitOperans(_self_, static_cast<jule::U32>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acda1485:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> _11117_logicalAndParts = _1a9194826_splitOperans(_self_, static_cast<jule::U32>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acda2b5c:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1a875ce89_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1a875ce89_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U32>(74LLU))) {
								jule::Ptr<_1a875ce89_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U32>(75LLU))) {
									_1a919442a_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1a9194ea8_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1acda2b5c:;
						++it;
						goto _iter_begin_1acda2b5c;
					}
					_iter_end_1acda2b5c:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1acda1485:;
			++it;
			goto _iter_begin_1acda1485;
		}
		_iter_end_1acda1485:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9193dca_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9901a99_JuleImporter> static__1a9901e95_New(_1a9192901_CompileInfo _5819_info) {
	jule::Ptr<_1a9901a99_JuleImporter> _5913_imp = jule::new_ptr<_1a9901a99_JuleImporter>(_1a9901a99_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_22480d573_PathStdlib}), });;
	_1a9193281_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1a8da0ea0_ImportInfo>> _1a990222b_AllPackages(_1a9901a99_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a990266b_SetModPath(_1a9901a99_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1a9902902_GetModPath(_1a9901a99_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a9902c43_ModById(_1a9901a99_JuleImporter* _self_, jule::I32 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a9903084_GetImport(_1a9901a99_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acda92b2:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1acda92b2:;
			++it;
			goto _iter_begin_1acda92b2;
		}
		_iter_end_1acda92b2:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a87715a7_Ast__jule_tuple_s_224743e15_Log _1a9903480_ImportPackage(_1a9901a99_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1a87715a7_Ast__jule_tuple_s_224743e15_Log __jule_func_result;
	jule::Slice<jule::Ptr<_2232d7a65_DirEntry>> _9713_dirents = ({
		auto except = static__2246a168b_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_224743e15_Log>::make({_1a99015b0_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_2232d7a65_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1a8dbc7e6_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_224743e15_Log> _10521_errs = _1a8dbcab0_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1a87715a7_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1a87715a7_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdaa912:;
		if (it != expr_end) {
			jule::Ptr<_2232d7a65_DirEntry> _11316_dirent = *it;
			{
				if ((_2232db508_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_224695a04_HasSuffix((*_11316_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1acdaa912;
				};
				jule::Str _11913__path = _2246a01c3_Join(jule::Slice<jule::Str>::make({_9632_path,(*_11316_dirent.alloc)._field_Name}));;
				jule::Ptr<_1a8763720_File> _12017_file = _1a8764aea_NewFileSet(_11913__path);;
				_1a8763b3d_Fill(_12017_file.ptr(), _1a99012a2_readBuff((*_12017_file.alloc)._field_Path));
				jule::Slice<_224743e15_Log> _12217_errors = _1a87710ce_Lex(_12017_file, static_cast<jule::I32>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1a98a065d_FileInfo> _12717_finfo = _1a98e410d_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_12717_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1a9177353_isPassFileAnnotation((*_11316_dirent.alloc)._field_Name)))) {
					goto _iter_next_1acdaa912;
				};
				jule::Bool _13713_r;
				jule::Slice<_224743e15_Log> _13720_logs;
				({
					__jule_tuple_bool__jule_tuple_s_224743e15_Log __jule_assign_result = _1a9903b67_isPassBuildDirectives(_self_, &((*_12717_finfo.alloc)._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1acdaa912;
				};
				{ jule::Slice<jule::Ptr<_1a87715a7_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*_12717_finfo.alloc)._field_Ast); };
			}
			_iter_next_1acdaa912:;
			++it;
			goto _iter_begin_1acdaa912;
		}
		_iter_end_1acdaa912:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a9903738_Imported(_1a9901a99_JuleImporter* _self_, jule::Ptr<_1a8da0ea0_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdad591:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*_15516_p.alloc)._field_LinkPath == (*_15331_imp.alloc)._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1acdad591:;
			++it;
			goto _iter_begin_1acdad591;
		}
		_iter_end_1acdad591:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acdb5ae8:;
			if (it != expr_end) {
				jule::I32 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*_15331_imp.alloc)._field_ModId=_16217_i;
						goto _julec_label_1acdb6269;
					};
				}
				_iter_next_1acdb5ae8:;
				++it;
				_16217_i++;
				goto _iter_begin_1acdb5ae8;
			}
			_iter_end_1acdb5ae8:;
		};
		(*_15331_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1acdb6269:;
	};
	{ jule::Slice<jule::Ptr<_1a8da0ea0_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_224743e15_Log _1a9903b67_isPassBuildDirectives(_1a9901a99_JuleImporter* _self_, jule::Ptr<_1a87715a7_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_224743e15_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdb8ba6:;
		if (it != expr_end) {
			jule::Ptr<_1a8772982_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1acdb8ba6;
				};
				_1a9193dca_directiveEval _18417_de = _1a9193dca_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1a919523e_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1acdb8ba6:;
			++it;
			goto _iter_begin_1acdb8ba6;
		}
		_iter_end_1acdb8ba6:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9901a99_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9906cad_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad46d18e_isCommonOrdered(jule::Slice<jule::Ptr<_1a8d26e26_Struct>> _1834_s, jule::Ptr<_1a8d26e26_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad46e3d2:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad46eb52:;
					if (it != expr_end) {
						jule::Ptr<_1a8d26e26_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1ad46eb52:;
						++it;
						goto _iter_begin_1ad46eb52;
					}
					_iter_end_1ad46eb52:;
				};
			}
			_iter_next_1ad46e3d2:;
			++it;
			goto _iter_begin_1ad46e3d2;
		}
		_iter_end_1ad46e3d2:;
	};
	return true;;
}

inline jule::Bool _1ad473095_isCommonOrdered(jule::Slice<jule::Ptr<_1a8de41ad_Var>> _1834_s, jule::Ptr<_1a8de41ad_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad474294:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad474a14:;
					if (it != expr_end) {
						jule::Ptr<_1a8de41ad_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1ad474a14:;
						++it;
						goto _iter_begin_1ad474a14;
					}
					_iter_end_1ad474a14:;
				};
			}
			_iter_next_1ad474294:;
			++it;
			goto _iter_begin_1ad474294;
		}
		_iter_end_1ad474294:;
	};
	return true;;
}



inline void _1ad469795_orderCommon(jule::Slice<jule::Ptr<_1a8d26e26_Struct>>* _3135_s) {
	jule::I32 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad46ac19:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I32 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1ad46d18e_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1ad46b7b9:;
				}
				_iter_end_1ad46b7b9:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1ad46ac19;
				};
				(_3213_n)--;
			}
			_iter_next_1ad46ac19:;
			++it;
			goto _iter_begin_1ad46ac19;
		}
		_iter_end_1ad46ac19:;
	};
}

inline void _1ad46a565_orderCommon(jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _3135_s) {
	jule::I32 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad470b20:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I32 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1ad473095_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1ad4716c0:;
				}
				_iter_end_1ad4716c0:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1ad470b20;
				};
				(_3213_n)--;
			}
			_iter_next_1ad470b20:;
			++it;
			goto _iter_begin_1ad470b20;
		}
		_iter_end_1ad470b20:;
	};
}



inline void static__1a9907918_orderStructures(jule::Slice<jule::Ptr<_1a8d26e26_Struct>>* _5136_structs) {
	_1ad469795_orderCommon(_5136_structs);
}



inline void static__1a9907b49_orderVars(jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _5730_vars) {
	_1ad46a565_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _1a9907044_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9a6a3d8_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1a9a705ca_optimizeChild(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d7de17_Scope>* _3938_s) {
	jule::Ptr<_1a9a700e1_scopeDeadCode> _4013_sdc = jule::new_ptr<_1a9a700e1_scopeDeadCode>(_1a9a700e1_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1a9a72ee5_optimizeStmts(_4013_sdc);
	};
}



inline void _1a9a70883_optimizeBodyChildExceptional(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d7de17_Scope>* _5053_s) {
	jule::Ptr<_1a9a700e1_scopeDeadCode> _5113_sdc = jule::new_ptr<_1a9a700e1_scopeDeadCode>(_1a9a700e1_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1a9a72ee5_optimizeStmts(_5113_sdc);
	};
}



inline void _1a9a70b3b_optimizeBodyChild(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d7de17_Scope>* _6142_s) {
	jule::Ptr<_1a9a700e1_scopeDeadCode> _6213_sdc = jule::new_ptr<_1a9a700e1_scopeDeadCode>(_1a9a700e1_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1a9a72ee5_optimizeStmts(_6213_sdc);
	};
}



inline void _1a9a70de4_optimizeExprModel(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1a9a7437b_exprDeadCode _729_edc = static__1a9a749b9_new(&(_self_));;
	_1a9a7a8e3_optimize(&_729_edc, _7142_model);
}



inline void _1a9a710e2_eliminateFollowed(_1a9a700e1_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_stmts))).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1a9a700e1_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				((*((*(_8313_parent))._field_stmts))).mut_slice(0LL, ((*(_8313_parent))._field_i + 1LL));;
			};
			_8313_parent=(*_8313_parent.alloc)._field_parent;
		}
	_iter_next_1ad5104a6:;
	}
	_iter_end_1ad5104a6:;;
}



inline void _1a9a7139a_pushGoto(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d81b84_GotoSt> _9232_gt) {
	jule::I32 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*(*_self_.alloc)._field_labels.alloc)[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1ad513355:;
	}
	_iter_end_1ad513355:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1a8d81b84_GotoSt>>::make({_9232_gt}));
}



inline void _1a9a71653_pushLabel(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d817aa_Label> _10233_l) {
	jule::I32 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*(*_self_.alloc)._field_gotos.alloc)[_10313_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_10313_i), (*((*(_self_))._field_gotos)).slice((_10313_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1ad515533;
			};
			(_10313_i)++;
		}
	_iter_next_1ad515533:;
	}
	_iter_end_1ad515533:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1a8d817aa_Label>>::make({_10233_l}));
}



inline void _1a9a7190b_optimizeRangeIter(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d80c4e_RangeIter> _11541_it) {
	_1a9a70de4_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1a9a70b3b_optimizeBodyChild(_self_, &((*_11541_it.alloc)._field_Scope));
}



inline void _1a9a71bb4_optimizeWhileIter(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d80303_WhileIter> _12041_it) {
	_1a9a70de4_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*_12041_it.alloc)._field_Next != nullptr)) {
		_1a9a72ce7_optimizeStmt(_self_, (*_12041_it.alloc)._field_Next);
	};
	_1a9a70b3b_optimizeBodyChild(_self_, &((*_12041_it.alloc)._field_Scope));
}



inline void _1a9a71e6c_optimizeInfIter(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d7ed4c_InfIter> _12839_it) {
	_1a9a70b3b_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1a9a72225_optimizeConditional(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d7ea50_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad22d2e5:;
		if (it != expr_end) {
			jule::Ptr<_1a8d7e335_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1a9a70de4_optimizeExprModel(_self_, &((*_13321_case.alloc)._field_Expr));
					_1a9a70b3b_optimizeBodyChild(_self_, &((*_13321_case.alloc)._field_Scope));
				};
			}
			_iter_next_1ad22d2e5:;
			++it;
			goto _iter_begin_1ad22d2e5;
		}
		_iter_end_1ad22d2e5:;
	};
	if (((*_13243_c.alloc)._field_Default != nullptr)) {
		if (((*_13243_c.alloc)._field_Elifs.len() == 0LL)) {
			_1a9a705ca_optimizeChild(_self_, &((*(*_13243_c.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1a9a70b3b_optimizeBodyChild(_self_, &((*(*_13243_c.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a9a724cd_optimizeMatch(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d8312a_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace9e6a4:;
		if (it != expr_end) {
			jule::Ptr<_1a8d83b53_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad07a6e7:;
					if (it != expr_end) {
						jule::Ptr<_1a8e4bcb5_Data> _15225_expr = *it;
						{
							_1a9a70de4_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1ad07a6e7:;
						++it;
						goto _iter_begin_1ad07a6e7;
					}
					_iter_end_1ad07a6e7:;
				};
				_1a9a70b3b_optimizeBodyChild(_self_, &((*_15121_case.alloc)._field_Scope));
			}
			_iter_next_1ace9e6a4:;
			++it;
			goto _iter_begin_1ace9e6a4;
		}
		_iter_end_1ace9e6a4:;
	};
	if (((*_15037_m.alloc)._field_Default != nullptr)) {
		if (((*_15037_m.alloc)._field_Cases.len() == 0LL)) {
			_1a9a705ca_optimizeChild(_self_, &((*(*_15037_m.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1a9a70b3b_optimizeBodyChild(_self_, &((*(*_15037_m.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a9a72786_optimizeAssign(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d82514_Assign> _16838_assign) {
	_1a9a70de4_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_Left))._field_Model));
	_1a9a70de4_optimizeExprModel(_self_, &((*((*_16838_assign.alloc)._field_Right))._field_Model));
}



inline void _1a9a72a3e_optimizeMultiAssign(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Ptr<_1a8d829ba_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad07e29a:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4bcb5_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1a9a70de4_optimizeExprModel(_self_, &((*_17421_l.alloc)._field_Model));
				};
			}
			_iter_next_1ad07e29a:;
			++it;
			goto _iter_begin_1ad07e29a;
		}
		_iter_end_1ad07e29a:;
	};
	_1a9a70de4_optimizeExprModel(_self_, &((*_17343_assign.alloc)._field_Right));
}



inline void _1a9a72ce7_optimizeStmt(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ad080e17:;
			{
				jule::Ptr<_1a8d7de17_Scope> _18517_scope = _18236_st.unsafe_cast_ptr<_1a8d7de17_Scope>();;
				if ((*(_18517_scope))._field_Deferred) {
					_1a9a73325_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1a9a705ca_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ad080b92:;
			{
				_1a9a7190b_optimizeRangeIter(_self_, _18236_st.unsafe_cast_ptr<_1a8d80c4e_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ad080e8e:;
			{
				_1a9a71bb4_optimizeWhileIter(_self_, _18236_st.unsafe_cast_ptr<_1a8d80303_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ad081016:;
			{
				_1a9a71e6c_optimizeInfIter(_self_, _18236_st.unsafe_cast_ptr<_1a8d7ed4c_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad08108d:;
			{
				_1a9a72225_optimizeConditional(_self_, _18236_st.unsafe_cast_ptr<_1a8d7ea50_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ad081115:;
			{
				_1a9a724cd_optimizeMatch(_self_, _18236_st.unsafe_cast_ptr<_1a8d8312a_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ad08118c:;
			{
				_1a9a72786_optimizeAssign(_self_, _18236_st.unsafe_cast_ptr<_1a8d82514_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ad081214:;
			{
				_1a9a72a3e_optimizeMultiAssign(_self_, _18236_st.unsafe_cast_ptr<_1a8d829ba_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad08128b:;
			{
				jule::Ptr<_1a8e4bcb5_Data> _20617_d = _18236_st.unsafe_cast_ptr<_1a8e4bcb5_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1ad080cc4;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type28) {
						_case_begin_1ad0872a3:;
						{
							_1a9a710e2_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1ad087539:;
						{
							_1a9a70de4_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1ad0874d4:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ad081313:;
			{
				_1a9a710e2_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ad08138a:;
			{
				_1a9a7139a_pushGoto(_self_, _18236_st.unsafe_cast_ptr<_1a8d81b84_GotoSt>());
				_1a9a710e2_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ad081412:;
			{
				_1a9a71653_pushLabel(_self_, _18236_st.unsafe_cast_ptr<_1a8d817aa_Label>());
			}
		}
		_match_end_1ad080cc4:;
	};
}



inline void _1a9a72ee5_optimizeStmts(jule::Ptr<_1a9a700e1_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_stmts)).len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a9a72ce7_optimizeStmt(_self_, (*((*_self_.alloc)._field_stmts))[(*_self_.alloc)._field_i]);
		}
	_iter_next_1ad089eed:;
	}
	_iter_end_1ad089eed:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9a700e1_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1a9a7437b_exprDeadCode static__1a9a749b9_new(jule::Ptr<_1a9a700e1_scopeDeadCode>* _4824_s) {
	return _1a9a7437b_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1a9a74c72_binary(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel> _5425_m) {
	_1a9a7a8e3_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1a9a7a8e3_optimize(_self_, &((*((*_5425_m.alloc)._field_Right))._field_Model));
}



inline void _1a9a7502a_unary(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d2e527_UnaryExprModel> _5924_m) {
	_1a9a7a8e3_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1a9a752d3_structureLit(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d2edeb_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad08d881:;
		if (it != expr_end) {
			jule::Ptr<_1a8d2ea55_StructArgExprModel> _6421_arg = *it;
			{
				_1a9a7a8e3_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1ad08d881:;
			++it;
			goto _iter_begin_1ad08d881;
		}
		_iter_end_1ad08d881:;
	};
}



inline void _1a9a7558b_allocStructure(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d301e8_AllocStructLitExprModel> _6933_m) {
	_1a9a752d3_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1a9a75844_casting(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d3077b_CastingExprModel> _7326_m) {
	_1a9a7a8e3_optimize(_self_, &((*((*(_7326_m))._field_Expr))._field_Model));
}



inline void _1a9a75aec_args(_1a9a7437b_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad090e7c:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1a9a7a8e3_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1ad090e7c:;
			++it;
			goto _iter_begin_1ad090e7c;
		}
		_iter_end_1ad090e7c:;
	};
}



inline void _1a9a75da5_funcCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d3112d_FnCallExprModel> _8327_m) {
	_1a9a7a8e3_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1a9a75aec_args(_self_, &((*_8327_m.alloc)._field_Args));
	if (((*_8327_m.alloc)._field_Except != nullptr)) {
		_1a9a70883_optimizeBodyChildExceptional((*(_self_))._field_s, &((*_8327_m.alloc)._field_Except));
	};
}



inline void _1a9a7615d_slice(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d31507_SliceExprModel> _9124_m) {
	_1a9a75aec_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1a9a76416_array(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d3451b_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*_9524_m.alloc)._field_Elems[1LL] == nullptr))) {
		_1a9a7a8e3_optimize(_self_, &((*_9524_m.alloc)._field_Elems[0LL]));
	};
	_1a9a75aec_args(_self_, &((*_9524_m.alloc)._field_Elems));
}



inline void _1a9a766be_indexing(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d319ad_IndexingExprModel> _10227_m) {
	_1a9a7a8e3_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1a9a7a8e3_optimize(_self_, &((*((*_10227_m.alloc)._field_Index))._field_Model));
}



inline void _1a9a76977_anonFunc(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel> _10727_m) {
	_1a9a73325_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1a9a76c30_mapExpr(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d327e4_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad096c74:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3233d_KeyValPairExprModel> _11221_pair = *it;
			{
				_1a9a7a8e3_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1a9a7a8e3_optimize(_self_, &((*_11221_pair.alloc)._field_Val));
			}
			_iter_next_1ad096c74:;
			++it;
			goto _iter_begin_1ad096c74;
		}
		_iter_end_1ad096c74:;
	};
}



inline void _1a9a76ed8_slicing(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d32d77_SlicingExprModel> _11826_m) {
	_1a9a7a8e3_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1a9a7a8e3_optimize(_self_, &((*_11826_m.alloc)._field_Left));
	if (((*_11826_m.alloc)._field_Right != nullptr)) {
		_1a9a7a8e3_optimize(_self_, &((*_11826_m.alloc)._field_Right));
	};
}



inline void _1a9a77291_traitSub(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d3340a_TraitSubIdentExprModel> _12627_m) {
	_1a9a7a8e3_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1a9a77549_structureSub(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _13031_m) {
	_1a9a7a8e3_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1a9a77802_tuple(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d34818_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad09b5a3:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4bcb5_Data> _13521_d = *it;
			{
				_1a9a7a8e3_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1ad09b5a3:;
			++it;
			goto _iter_begin_1ad09b5a3;
		}
		_iter_end_1ad09b5a3:;
	};
}



inline void _1a9a77aaa_newCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d35495_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1a9a7a8e3_optimize(_self_, &((*_14026_m.alloc)._field_Init));
	};
}



inline void _1a9a77d63_outCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d34be2_BuiltinOutCallExprModel> _14626_m) {
	_1a9a7a8e3_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1a9a7811b_outlnCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d350bb_BuiltinOutlnCallExprModel> _15028_m) {
	_1a9a7a8e3_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1a9a783c4_panicCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d3586e_BuiltinPanicCallExprModel> _15428_m) {
	_1a9a7a8e3_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1a9a7867c_assertCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d35d25_BuiltinAssertCallExprModel> _15829_m) {
	_1a9a7a8e3_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1a9a78935_errorCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d3792b_BuiltinErrorCallExprModel> _16228_m) {
	_1a9a7a8e3_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1a9a78bdd_makeCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d362cb_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1a9a7a8e3_optimize(_self_, &((*_16627_m.alloc)._field_Len));
	};
	if (((*_16627_m.alloc)._field_Cap != nullptr)) {
		_1a9a7a8e3_optimize(_self_, &((*_16627_m.alloc)._field_Cap));
	};
}



inline void _1a9a78e96_appendCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d366a5_BuiltinAppendCallExprModel> _17529_m) {
	_1a9a7a8e3_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1a9a7a8e3_optimize(_self_, &((*_17529_m.alloc)._field_Elements));
}



inline void _1a9a7924e_lenCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d369a2_BuiltinLenCallExprModel> _18026_m) {
	_1a9a7a8e3_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1a9a79507_capCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d36c9e_BuiltinCapCallExprModel> _18426_m) {
	_1a9a7a8e3_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1a9a797b0_deleteCall(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d37178_BuiltinDeleteCallExprModel> _18829_m) {
	_1a9a7a8e3_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*_18829_m.alloc)._field_Key != nullptr)) {
		_1a9a7a8e3_optimize(_self_, &((*(*_18829_m.alloc)._field_Key.alloc)._field_Model));
	};
}



inline void _1a9a79a68_sizeof(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d380d0_SizeofExprModel> _19525_m) {
	_1a9a7a8e3_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1a9a79d21_alignof(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d382bc_AlignofExprModel> _19926_m) {
	_1a9a7a8e3_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1a9a7a0c9_integratedToStr(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d38861_IntegratedToStrExprModel> _20334_m) {
	_1a9a7a8e3_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1a9a7a382_free(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d39037_FreeExprModel> _20723_m) {
	_1a9a7a8e3_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1a9a7a63a_backendEmit(_1a9a7437b_exprDeadCode* _self_, jule::Ptr<_1a8d38c3a_BackendEmitExprModel> _21130_m) {
	_1a9a75aec_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1a9a7a8e3_optimize(_1a9a7437b_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ad0a988b:;
			{
				_1a9a74c72_binary(_self_, (*(_21528_model)).cast_ptr<_1a8d2e14d_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad0a94b2:;
			{
				_1a9a7502a_unary(_self_, (*(_21528_model)).cast_ptr<_1a8d2e527_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ad0a9913:;
			{
				_1a9a752d3_structureLit(_self_, (*(_21528_model)).cast_ptr<_1a8d2edeb_StructLitExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ad0a998a:;
			{
				_1a9a7558b_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1a8d301e8_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad0a9a12:;
			{
				_1a9a75844_casting(_self_, (*(_21528_model)).cast_ptr<_1a8d3077b_CastingExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad0a9a89:;
			{
				_1a9a75da5_funcCall(_self_, (*(_21528_model)).cast_ptr<_1a8d3112d_FnCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ad0a9b11:;
			{
				_1a9a7615d_slice(_self_, (*(_21528_model)).cast_ptr<_1a8d31507_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ad0a9b88:;
			{
				_1a9a76416_array(_self_, (*(_21528_model)).cast_ptr<_1a8d3451b_ArrayExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad0a9c10:;
			{
				_1a9a766be_indexing(_self_, (*(_21528_model)).cast_ptr<_1a8d319ad_IndexingExprModel>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ad0a9c87:;
			{
				_1a9a76977_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1a8d31e64_AnonFnExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ad0a9d0e:;
			{
				_1a9a76c30_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1a8d327e4_MapExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ad0a9d86:;
			{
				_1a9a76ed8_slicing(_self_, (*(_21528_model)).cast_ptr<_1a8d32d77_SlicingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ad0a9e0d:;
			{
				_1a9a77291_traitSub(_self_, (*(_21528_model)).cast_ptr<_1a8d3340a_TraitSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad0a9e85:;
			{
				_1a9a77549_structureSub(_self_, (*(_21528_model)).cast_ptr<_1a8d33c9b_StructSubIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad0aa00c:;
			{
				_1a9a77802_tuple(_self_, (*(_21528_model)).cast_ptr<_1a8d34818_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ad0aa084:;
			{
				_1a9a77d63_outCall(_self_, (*(_21528_model)).cast_ptr<_1a8d34be2_BuiltinOutCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ad0aa10b:;
			{
				_1a9a7811b_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1a8d350bb_BuiltinOutlnCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad0aa183:;
			{
				_1a9a77aaa_newCall(_self_, (*(_21528_model)).cast_ptr<_1a8d35495_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ad0aa20a:;
			{
				_1a9a783c4_panicCall(_self_, (*(_21528_model)).cast_ptr<_1a8d3586e_BuiltinPanicCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ad0aa282:;
			{
				_1a9a7867c_assertCall(_self_, (*(_21528_model)).cast_ptr<_1a8d35d25_BuiltinAssertCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ad0aa309:;
			{
				_1a9a78935_errorCall(_self_, (*(_21528_model)).cast_ptr<_1a8d3792b_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ad0aa381:;
			{
				_1a9a78bdd_makeCall(_self_, (*(_21528_model)).cast_ptr<_1a8d362cb_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ad0aa408:;
			{
				_1a9a78e96_appendCall(_self_, (*(_21528_model)).cast_ptr<_1a8d366a5_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ad0aa480:;
			{
				_1a9a7924e_lenCall(_self_, (*(_21528_model)).cast_ptr<_1a8d369a2_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ad0aa507:;
			{
				_1a9a79507_capCall(_self_, (*(_21528_model)).cast_ptr<_1a8d36c9e_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ad0aa57e:;
			{
				_1a9a797b0_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1a8d37178_BuiltinDeleteCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ad0aa606:;
			{
				_1a9a79a68_sizeof(_self_, (*(_21528_model)).cast_ptr<_1a8d380d0_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ad0aa67d:;
			{
				_1a9a79d21_alignof(_self_, (*(_21528_model)).cast_ptr<_1a8d382bc_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ad0aa705:;
			{
				_1a9a7a0c9_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1a8d38861_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ad0aa77c:;
			{
				_1a9a7a382_free(_self_, (*(_21528_model)).cast_ptr<_1a8d39037_FreeExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ad0aa804:;
			{
				_1a9a7a63a_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1a8d38c3a_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_1ad0a95e4:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a9a7437b_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a90767e6_ExceptionalForwardingExprModel _Src) {
	_Stream << "ExceptionalForwardingExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9076b6a_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9077044_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a90773b8_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a907783b_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9077dbe_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a90781bb_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9078551_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a907892a_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9078d04_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a90791cd_StrRuneIter _Src) {
	_Stream << "StrRuneIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a90794ca_UnsafeDerefExprModel _Src) {
	_Stream << "UnsafeDerefExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a90797c7_UnsafeCastingExprModel _Src) {
	_Stream << "UnsafeCastingExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a907a4a9_nilVar _Src) {
	_Stream << "nilVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "safe:" << _Src._field_safe;
	_Stream << "}";
	return _Stream;
}



inline void _1a907ac5c_pushVar(_1a907a7ea_nils* _self_, jule::Uintptr _2926_var, jule::Bool _2940_safe) {
	if (((!(_1a909821e_Access)) || (_2926_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1225d5:;
		if (it != expr_end) {
			_1a907a4a9_nilVar _3421_v = *it;
			{
				if ((_3421_v._field_var == _2926_var)) {
					_3421_v._field_safe=_2940_safe;
					return;;
				};
			}
			_iter_next_1ad1225d5:;
			++it;
			goto _iter_begin_1ad1225d5;
		}
		_iter_end_1ad1225d5:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad122393:;
		if (it != expr_end) {
			_1a907a4a9_nilVar _4121_v = *it;
			{
				if ((_4121_v._field_var == 0LLU)) {
					_4121_v._field_var=_2926_var;
					_4121_v._field_safe=_2940_safe;
					return;;
				};
			}
			_iter_next_1ad122393:;
			++it;
			goto _iter_begin_1ad122393;
		}
		_iter_end_1ad122393:;
	};
	{ jule::Slice<_1a907a4a9_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a907a4a9_nilVar{._field_var=_2926_var, ._field_safe=_2940_safe}); };
}



inline jule::Bool _1a907b09d_removeVar(_1a907a7ea_nils* _self_, jule::Uintptr _5228_var) {
	if ((_5228_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad124cbe:;
			if (it != expr_end) {
				_1a907a4a9_nilVar _5425_v = *it;
				{
					if ((_5425_v._field_var == _5228_var)) {
						_5425_v._field_var=0LLU;
						_5425_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1ad124cbe:;
				++it;
				goto _iter_begin_1ad124cbe;
			}
			_iter_end_1ad124cbe:;
		};
	};
	return false;;
}



inline jule::Bool _1a907b3de_isSafe(_1a907a7ea_nils* _self_, jule::Uintptr _6625_var) {
	if ((_6625_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad126430:;
			if (it != expr_end) {
				_1a907a4a9_nilVar _6820_v = *it;
				{
					if ((_6820_v._field_var == _6625_var)) {
						return _6820_v._field_safe;;
					};
				}
				_iter_next_1ad126430:;
				++it;
				goto _iter_begin_1ad126430;
			}
			_iter_end_1ad126430:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a907a7ea_nils _Src) {
	_Stream << "nils{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a907d578_scopeOptimizer> static__1a907daea_new(jule::Ptr<_1a8d7de17_Scope> _5023_scope) {
	jule::Ptr<_1a907d578_scopeOptimizer> _5113_sc = jule::new_ptr<_1a907d578_scopeOptimizer>(_1a907d578_scopeOptimizer{._field_scope=_5023_scope, ._field_data=jule::new_ptr<_1a909302c_data>(_1a909302c_data{._field_boundary=jule::new_ptr<_1a9094924_boundary>(), ._field_nils=jule::new_ptr<_1a907a7ea_nils>(), ._field_dynamic=jule::new_ptr<_1a90900d4_dynamic>()})});;
	return _5113_sc;;
}



inline void _1a907dda3_setCurrentStmt(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Any _6238_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6238_stmt))))));
}



inline void _1a907e0a1_removeCurrent(jule::Ptr<_1a907d578_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1a907e337_isLastStmt(jule::Ptr<_1a907d578_scopeOptimizer> _self_) {
	jule::Ptr<_1a907d578_scopeOptimizer> _7213_r = _self_;;
	for (; (_7213_r != nullptr); _7213_r=(*_7213_r.alloc)._field_parent) {
		{
			if ((((*((*_7213_r.alloc)._field_scope))._field_Stmts.len() - (*_7213_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1ad135c25:;
	}
	_iter_end_1ad135c25:;;
	return true;;
}



inline jule::Bool _1a907e5bd_isIter(jule::Ptr<_1a907d578_scopeOptimizer> _self_) {
	jule::Ptr<_1a907d578_scopeOptimizer> _8213_r = (*(_self_))._field_parent;;
	for (; (_8213_r != nullptr); _8213_r=(*_8213_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_8213_r))._field_scope))._field_Stmts[(*(_8213_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type35) {
					_case_begin_1ad138486:;
					{
						return true;;
					}
				}
				_match_end_1ad1383ed:;
			};
		}
	_iter_next_1ad13781a:;
	}
	_iter_end_1ad13781a:;;
	return false;;
}



inline void _1a907e876_optimizeData(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8e4bcb5_Data> _9436_d) {
	{
		auto &_match_expr{ (*(_9436_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad139630:;
			{
				jule::Ptr<_1a8d3112d_FnCallExprModel> _9717_m = (*(_9436_d))._field_Model.unsafe_cast_ptr<_1a8d3112d_FnCallExprModel>();;
				if (_22eb8c9d5_Production) {
					if (((!(_1a8d41407_IsBuiltin((*(_9717_m))._field_Func.ptr()))) && _1a90831d7_isStdPackage(&((*((*((*((*(*_9717_m.alloc)._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1a907dda3_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1a9085d11_optimizeData(&((*(_9436_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1a9099693_Exceptional && (*(*(*_9717_m.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) && ((*_9717_m.alloc)._field_Except != nullptr)) && ((*(*_9717_m.alloc)._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1a9084419_isForwarded(&((*_9717_m.alloc)._field_Except))) && _1a907e337_isLastStmt(_self_)) && (!(_1a907e5bd_isIter(_self_))))) {
					_1a907dda3_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a90767e6_ExceptionalForwardingExprModel>(_1a90767e6_ExceptionalForwardingExprModel{._field_Expr=_9717_m}), &__jule_any_type120));
				};
				return;;
			}
		}
		_match_end_1ad1395b9:;
	};
	static__1a9085d11_optimizeData(&((*_9436_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a907eb2e_optimizeVar(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8de41ad_Var> _12035_v) {
	if (((*(_12035_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a907be5b_isNilValidType((*((*_12035_v.alloc)._field_Kind))._field_Kind)) && _1a907bb92_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*(*_12035_v.alloc)._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1a907ac5c_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1a907c29c_getNilVar(jule::Any(_12035_v, &__jule_any_type8)), true);
		};
		if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1a8e8301b_TypeKind> _12921_kind = _1a90918aa_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_12035_v.alloc)._field_Kind.alloc)._field_Kind, (*(*(*_12035_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);;
			if ((_12921_kind != nullptr)) {
				if (_1a909147b_isDynamicValidType((*(*_12035_v.alloc)._field_Kind.alloc)._field_Kind)) {
					_1a9090546_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1a9091beb_getDynamicVar(jule::Any(_12035_v, &__jule_any_type8)), _12921_kind);
				};
			};
		};
		static__1a9085d11_optimizeData(&((*(*(*_12035_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1a907edd7_optimizeConditional(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d7ea50_Conditional> _14143_c) {
	_1a9092a32_dataCheckpoint _14213_checkpoint = _1a90933a1_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14143_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad147b27:;
		if (it != expr_end) {
			jule::Ptr<_1a8d7e335_If> _14321_elif = *it;
			{
				static__1a9085d11_optimizeData(&((*(_14321_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1a9082a66_optimizeChild(_self_, (*_14321_elif.alloc)._field_Scope);
				if ((((*(_14143_c))._field_Elifs.len() > 1LL) || ((*_14143_c.alloc)._field_Default != nullptr))) {
					_1a9093659_loadCheckpoint((*_self_.alloc)._field_data, &(_14213_checkpoint));
				};
			}
			_iter_next_1ad147b27:;
			++it;
			goto _iter_begin_1ad147b27;
		}
		_iter_end_1ad147b27:;
	};
	if (((*_14143_c.alloc)._field_Default != nullptr)) {
		_1a9082a66_optimizeChild(_self_, (*(*_14143_c.alloc)._field_Default.alloc)._field_Scope);
		_1a9093659_loadCheckpoint((*_self_.alloc)._field_data, &(_14213_checkpoint));
	};
	if ((!(_1a9098b48_Cond))) {
		return;;
	};
	jule::Bool _15913_constCase = false;;
	{
		auto expr = &((*_14143_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad14b763:;
		if (it != expr_end) {
			jule::I32 _16214_i = it - expr->begin();
			jule::Ptr<_1a8d7e335_If> _16221_elif = *it;
			{
				if ((!(_1a90834e5_isConstantValidConditionalCase(&(_16221_elif))))) {
					goto _iter_next_1ad14b763;
				};
				_15913_constCase=true;
				((*(_14143_c))._field_Elifs).mut_slice(0LL, _16214_i);;
				(*_14143_c.alloc)._field_Default=jule::new_ptr<_1a8d7e632_Else>(_1a8d7e632_Else{._field_Scope=(*(_16221_elif))._field_Scope});
				goto _iter_end_1ad14b763;
			}
			_iter_next_1ad14b763:;
			++it;
			_16214_i++;
			goto _iter_begin_1ad14b763;
		}
		_iter_end_1ad14b763:;
	};
	if (((*_14143_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a8d7e335_If>* _17913_i = (&((*_14143_c.alloc)._field_Elifs[0LL]));;
	jule::Ptr<_1a8d7e335_If>* _1809_end = (&((*_14143_c.alloc)._field_Elifs[((*_14143_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_17913_i <= _1809_end); (_17913_i)++) {
		{
			{
				if (_1a9083d86_isUnreachableConditionalCase(&((*(_17913_i))))) {
					(*(_17913_i))=nullptr;
				};
			};
		}
	_iter_next_1ad14e403:;
	}
	_iter_end_1ad14e403:;;
	if (((*_14143_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_15913_constCase))) {
		return;;
	};
	jule::I32 _19813_only = -1LL;;
	{
		auto expr = &((*_14143_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad151724:;
		if (it != expr_end) {
			jule::I32 _19913_j = it - expr->begin();
			jule::Ptr<_1a8d7e335_If> _19916_elif = *it;
			{
				if ((_19916_elif != nullptr)) {
					if ((_19813_only != -1LL)) {
						return;;
					};
					_19813_only=_19913_j;
				};
			}
			_iter_next_1ad151724:;
			++it;
			_19913_j++;
			goto _iter_begin_1ad151724;
		}
		_iter_end_1ad151724:;
	};
	if ((_19813_only != -1LL)) {
		_1a907dda3_setCurrentStmt(_self_, jule::Any((*((*_14143_c.alloc)._field_Elifs[_19813_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1a9080305_buildDefaultConstantTrueCase(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d83b53_Case> _21552_case, jule::I32* _21570_i, jule::Ptr<_1a8d8312a_Match>* _21583_m) {
	(*(_21552_case))._field_Exprs=nullptr;
	jule::I32 _2179_start = (*(_21570_i));;
	_julec_label_1ad153c10:;
	for (;;) {
		{
			if (((*((*_21552_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1ad153c98;
			};
			jule::Any *_22318_stmt = &((*(*_21552_case.alloc)._field_Scope.alloc)._field_Stmts[((*(*_21552_case.alloc)._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_22318_stmt)) };
				
				if (_match_expr.type == &__jule_any_type47) {
					_case_begin_1ad1563c7:;
					{
						((*(_21570_i)))++;
						if (((*(_21570_i)) >= (*((*(_21583_m))))._field_Cases.len())) {
							(*(_22318_stmt))=jule::Any((*((*((*(_21583_m))))._field_Default))._field_Scope, &__jule_any_type21);
							goto _iter_end_1ad153c98;
						};
						_21552_case=(*((*(_21583_m))))._field_Cases[(*(_21570_i))];
						(*(_22318_stmt))=jule::Any((*_21552_case.alloc)._field_Scope, &__jule_any_type21);
					}
				}
				else {
					_case_begin_1ad1564d7:;
					{
						goto _iter_end_1ad153c98;
					}
				}
				_match_end_1ad156372:;
			};
		}
	_iter_next_1ad153c98:;
	}
	_iter_end_1ad153c98:;;
	(*((*(_21583_m))))._field_Default=(*((*(_21583_m))))._field_Cases[_2179_start];
	((*((*(_21583_m))))._field_Cases).mut_slice(0LL, _2179_start);;
}



inline void _1a90805ad_optimizeMatch(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d8312a_Match> _24137_m) {
	jule::Uintptr _24213_var = 0LLU;;
	if ((_1a9099c04_Dynamic && (*(_24137_m))._field_TypeMatch)) {
		_24213_var=_1a9091beb_getDynamicVar((*((*_24137_m.alloc)._field_Expr))._field_Model);
	};
	_1a9092a32_dataCheckpoint _24613_checkpoint = _1a90933a1_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24137_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad15aa6e:;
		if (it != expr_end) {
			jule::Ptr<_1a8d83b53_Case> _24721_case = *it;
			{
				{
					auto expr = &((*(_24721_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad15b454:;
					if (it != expr_end) {
						jule::Ptr<_1a8e4bcb5_Data> _24825_expr = *it;
						{
							static__1a9085d11_optimizeData(&((*(_24825_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1ad15b454:;
						++it;
						goto _iter_begin_1ad15b454;
					}
					_iter_end_1ad15b454:;
				};
				if ((((*_24721_case.alloc)._field_Exprs.len() == 1LL) && ((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1a8e8301b_TypeKind> _25321_kind = _1a90918aa_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_24721_case.alloc)._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_25321_kind != nullptr)) {
						_1a9090546_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _24213_var, _25321_kind);
					} else {
						_1a9090887_removeVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _24213_var);
					};
				};
				_1a9082a66_optimizeChild(_self_, (*_24721_case.alloc)._field_Scope);
				if ((((*_24137_m.alloc)._field_Cases.len() > 1LL) || ((*_24137_m.alloc)._field_Default != nullptr))) {
					_1a9093659_loadCheckpoint((*_self_.alloc)._field_data, &(_24613_checkpoint));
				};
			}
			_iter_next_1ad15aa6e:;
			++it;
			goto _iter_begin_1ad15aa6e;
		}
		_iter_end_1ad15aa6e:;
	};
	if (((*_24137_m.alloc)._field_Default != nullptr)) {
		_1a9082a66_optimizeChild(_self_, (*(*_24137_m.alloc)._field_Default.alloc)._field_Scope);
		_1a9093659_loadCheckpoint((*_self_.alloc)._field_data, &(_24613_checkpoint));
	};
	if ((!(_1a9098b48_Cond))) {
		return;;
	};
	jule::Bool _27413_constCase = false;;
	{
		auto expr = &((*_24137_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad162d95:;
		if (it != expr_end) {
			jule::I32 _27718_i = it - expr->begin();
			jule::Ptr<_1a8d83b53_Case> _27725_case = *it;
			{
				if ((!(_1a9083b00_isConstantValidMatchCase(&(_27725_case))))) {
					goto _iter_next_1ad162d95;
				};
				_27413_constCase=true;
				_1a9080305_buildDefaultConstantTrueCase(_self_, _27725_case, &(_27718_i), &(_24137_m));
				goto _iter_end_1ad162d95;
			}
			_iter_next_1ad162d95:;
			++it;
			_27718_i++;
			goto _iter_begin_1ad162d95;
		}
		_iter_end_1ad162d95:;
	};
	if (((*_24137_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a8d83b53_Case>* _29113_i = (&((*_24137_m.alloc)._field_Cases[0LL]));;
	jule::Ptr<_1a8d83b53_Case>* _2929_end = (&((*_24137_m.alloc)._field_Cases[((*_24137_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_29113_i <= _2929_end); (_29113_i)++) {
		{
			{
				if (_1a9084150_isUnreachableMatchCase(&((*(_29113_i))))) {
					(*(_29113_i))=nullptr;
				};
			};
		}
	_iter_next_1ad16598b:;
	}
	_iter_end_1ad16598b:;;
	if ((!(_27413_constCase))) {
		return;;
	};
	jule::I32 _30613_only = -1LL;;
	{
		auto expr = &((*_24137_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad166c23:;
		if (it != expr_end) {
			jule::I32 _30713_j = it - expr->begin();
			jule::Ptr<_1a8d83b53_Case> _30716_case = *it;
			{
				if ((_30716_case != nullptr)) {
					if ((_30613_only != -1LL)) {
						return;;
					};
					_30613_only=_30713_j;
				};
			}
			_iter_next_1ad166c23:;
			++it;
			_30713_j++;
			goto _iter_begin_1ad166c23;
		}
		_iter_end_1ad166c23:;
	};
	if ((_30613_only != -1LL)) {
		_1a907dda3_setCurrentStmt(_self_, jule::Any((*((*_24137_m.alloc)._field_Cases[_30613_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1a9080866_optimizeRangeIter(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d80c4e_RangeIter> _32341_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32341_it))._field_KeyA != nullptr))) {
		_1a9094d86_pushVar((*(*_self_.alloc)._field_data.alloc)._field_boundary, _1a9096d55_getBoundaryVar((*((*_32341_it.alloc)._field_Expr))._field_Model), jule::Any((*_32341_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1a9082a66_optimizeChild(_self_, (*_32341_it.alloc)._field_Scope);
	if (_1a909994b_Iter) {
		{
			auto &_match_expr{ (*((*(_32341_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1ad16b882:;
				{
					jule::Ptr<_1a8d3077b_CastingExprModel> _33521_cem = (*((*(_32341_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a8d3077b_CastingExprModel>();;
					jule::Ptr<_1a8e8aae5_Prim> _33617_eprim = _1a8e8566c_Prim((*(_33521_cem))._field_ExprKind.ptr());;
					if (((_33617_eprim == nullptr) || (!(_1a8e8e07c_IsStr(_33617_eprim.ptr()))))) {
						goto _match_end_1ad16b81b;
					};
					jule::Ptr<_1a8e900e4_Slc> _34021_s = _1a8e866c3_Slc((*_33521_cem.alloc)._field_Kind.ptr());;
					if ((_34021_s == nullptr)) {
						goto _match_end_1ad16b81b;
					};
					jule::Ptr<_1a8e8aae5_Prim> _34417_prim = _1a8e8566c_Prim((*(_34021_s))._field_Elem.ptr());;
					if ((_34417_prim == nullptr)) {
						goto _match_end_1ad16b81b;
					};
					{
						
						if (_1a8e8c4dc_IsU8(_34417_prim.ptr())) {
							_case_begin_1ad170237:;
							{
								(*_32341_it.alloc)._field_Expr=(*_33521_cem.alloc)._field_Expr;
							}
						}
						else if (_1a8e8bec0_IsI32(_34417_prim.ptr())) {
							_case_begin_1ad1703be:;
							{
								static__1a9085d11_optimizeData(&((*((*_33521_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1a907dda3_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a90791cd_StrRuneIter>(_1a90791cd_StrRuneIter{._field_Expr=(*_33521_cem.alloc)._field_Expr, ._field_Base=_32341_it}), &__jule_any_type121));
								return;;
							}
						}
						_match_end_1ad17005b:;
					};
				}
			}
			_match_end_1ad16b81b:;
		};
	};
	static__1a9085d11_optimizeData(&((*(*_32341_it.alloc)._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a9080b1e_optimizeWhileIter(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d80303_WhileIter> _36841_it) {
	static__1a9085d11_optimizeData(&((*(_36841_it))._field_Expr), &((*(_self_))._field_data));
	_1a90827ad_optimizeStmt(_self_, (*_36841_it.alloc)._field_Next);
	_1a9082a66_optimizeChild(_self_, (*_36841_it.alloc)._field_Scope);
}



inline jule::Bool _1a9080e60_substr(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d82514_Assign> _37430_a) {
	if (((*((*(_37430_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37430_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ad17523c:;
			{
				jule::Ptr<_1a8d32d77_SlicingExprModel> _38017_sem = (*((*(_37430_a))._field_Right))._field_Model.unsafe_cast_ptr<_1a8d32d77_SlicingExprModel>();;
				if (_1a9075bad_equalModels((*((*_37430_a.alloc)._field_Left))._field_Model, (*(_38017_sem))._field_Expr)) {
					_1a907dda3_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a9077dbe_MutSlicingExprModel>(_1a9077dbe_MutSlicingExprModel{._field_Token=(*_38017_sem.alloc)._field_Token, ._field_Expr=(*_38017_sem.alloc)._field_Expr, ._field_Left=(*_38017_sem.alloc)._field_Left, ._field_Right=(*_38017_sem.alloc)._field_Right}), &__jule_any_type122));
					return true;;
				};
			}
		}
		_match_end_1ad1751c6:;
	};
	return false;;
}



inline jule::Bool _1a90812a1_strAssign(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d82514_Assign> _39433_a) {
	if ((!(_1a9098d8a_Str))) {
		return false;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _3989_lp = _1a8e8566c_Prim((*((*(_39433_a))._field_Left))._field_Kind.ptr());;
	if (((_3989_lp == nullptr) || (!(_1a8e8e07c_IsStr(_3989_lp.ptr()))))) {
		return false;;
	};
	return _1a9080e60_substr(_self_, _39433_a);;
}



inline jule::Bool _1a90815e2_sliceAssign(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d82514_Assign> _40535_a) {
	if (((!(_1a9099132_Slice)) || (_1a8e866c3_Slc((*((*(_40535_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1a9080e60_substr(_self_, _40535_a);;
}



inline void _1a908189a_optimizePostfix(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d8205d_Postfix> _41339_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1a9096508_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(_41339_postfix))._field_Expr);
	};
	static__1a9085d11_optimizeData(&((*_41339_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1a9081b53_optimizeAssign(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d82514_Assign> _42038_assign) {
	if ((((*((*(_42038_assign))._field_Op))._field_Id == static_cast<jule::U32>(71LLU)) && _1a9075bad_equalModels((*((*_42038_assign.alloc)._field_Left))._field_Model, (*((*_42038_assign.alloc)._field_Right))._field_Model))) {
		_1a907e0a1_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1a90967c2_isBoundaryRiskyType((*(*_42038_assign.alloc)._field_Left.alloc)._field_Kind)) {
			_1a9096508_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(*_42038_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
		if (_1a907bb92_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42038_assign.alloc)._field_Right.alloc)._field_Model)) {
			if (_1a907be5b_isNilValidType((*(*_42038_assign.alloc)._field_Left.alloc)._field_Kind)) {
				;
				_1a907ac5c_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1a907c29c_getNilVar((*(*_42038_assign.alloc)._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1a907b7c9_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42038_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1a8e8301b_TypeKind> _44417_kind = _1a90918aa_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42038_assign.alloc)._field_Right.alloc)._field_Kind, (*(*_42038_assign.alloc)._field_Right.alloc)._field_Model);;
		if ((_44417_kind != nullptr)) {
			if (_1a909147b_isDynamicValidType((*(*_42038_assign.alloc)._field_Left.alloc)._field_Kind)) {
				_1a9090546_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1a9091beb_getDynamicVar((*(*_42038_assign.alloc)._field_Left.alloc)._field_Model), _44417_kind);
			};
		} else {
			_1a909116d_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42038_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1a90812a1_strAssign(_self_, _42038_assign) || _1a90815e2_sliceAssign(_self_, _42038_assign)) {
			_case_begin_1ad1880c9:;
			{
				return;;
			}
		}
		_match_end_1ad1863a2:;
	};
	static__1a9085d11_optimizeData(&((*(*_42038_assign.alloc)._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1a9085d11_optimizeData(&((*(*_42038_assign.alloc)._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42038_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1ad18a010:;
			{
				if (((!(_1a9097e66_Math)) || (_1a8e86be0_Struct((*(*_42038_assign.alloc)._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1ad189e99;
				};
				jule::U32 _47013_oldId;
				jule::Str _47020_oldKind;
				({
					jule::U32 ___jule_assign_arg = (*(*_42038_assign.alloc)._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind;
					_47013_oldId = ___jule_assign_arg;
					_47020_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42038_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(43LLU)) {
						_case_begin_1ad18ccb0:;
						{
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U32>(63LLU);
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U32>(44LLU)) {
						_case_begin_1ad18cd26:;
						{
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U32>(64LLU);
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1ad18c562:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:479:17"));;
						}
					}
					_match_end_1ad18c881:;
				};
				jule::Any _48117_model = jule::Any(jule::new_ptr<_1a8d2e14d_BinaryExprModel>(_1a8d2e14d_BinaryExprModel{._field_Left=(*_42038_assign.alloc)._field_Left, ._field_Right=(*_42038_assign.alloc)._field_Right, ._field_Op=(*_42038_assign.alloc)._field_Op}), &__jule_any_type111);;
				static__1a9085d11_optimizeData(&(_48117_model), &((*_self_.alloc)._field_data));
				{
					auto &_match_expr{ _48117_model };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1ad191236:;
						{
							(*_42038_assign.alloc)._field_Right=jule::new_ptr<_1a8d2db53_OperandExprModel>((*(*_42038_assign.alloc)._field_Right.alloc));
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U32>(71LLU);
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("=", 1);
							(*(*_42038_assign.alloc)._field_Right.alloc)._field_Model=_48117_model;
							return;;
						}
					}
					_match_end_1ad190e28:;
				};
				(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=_47013_oldId;
				(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=_47020_oldKind;
				return;;
			}
		}
		_match_end_1ad189e99:;
	};
	if (_1a9097b69_Append) {
		{
			auto &_match_expr{ (*((*(_42038_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type25) {
				_case_begin_1ad193d93:;
				{
					jule::Ptr<_1a8d366a5_BuiltinAppendCallExprModel> _50321_m = (*(*_42038_assign.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1a8d366a5_BuiltinAppendCallExprModel>(&__jule_any_type25);;
					if ((!(_1a908e15a_areSameLvalueExprModel(&((*(*_42038_assign.alloc)._field_Left.alloc)._field_Model), &((*(_50321_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_50321_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1ad19535b:;
							{
								_1a907dda3_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a907892a_PushToSliceExprModel>(_1a907892a_PushToSliceExprModel{._field_Dest=(*_50321_m.alloc)._field_Dest, ._field_Elems=(*(_50321_m))._field_Elements.unsafe_cast_ptr<_1a8d31507_SliceExprModel>()}), &__jule_any_type123));
							}
						}
						else {
							_case_begin_1ad5bc871:;
							{
								_1a907dda3_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a9078d04_AppendToSliceExprModel>(_1a9078d04_AppendToSliceExprModel{._field_Dest=(*(*_42038_assign.alloc)._field_Left.alloc)._field_Model, ._field_Slice=(*_50321_m.alloc)._field_Elements}), &__jule_any_type124));
							}
						}
						_match_end_1ad195889:;
					};
				}
			}
			_match_end_1ad193d2c:;
		};
	};
}



inline jule::Bool _1a9081e94_tryOptimizeSwap(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d829ba_MultiAssign>* _52540_assign) {
	if (((((!(_1a90993da_Assign)) || ((*((*(_52540_assign))))._field_Left.len() != 2LL)) || ((*((*(_52540_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_52540_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a8d34818_TupleExprModel> _53017_tup;;
	{
		auto &_match_expr{ (*((*(_52540_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad5c1457:;
			{
				_53017_tup=(*((*(_52540_assign))))._field_Right.unsafe_cast_ptr<_1a8d34818_TupleExprModel>();
			}
		}
		_match_end_1ad5c13e1:;
	};
	if (((_53017_tup == nullptr) || ((*(_53017_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1a9075bad_equalModels((*((*((*(_52540_assign))))._field_Left[0LL]))._field_Model, (*((*(_53017_tup))._field_Datas[0LL]))._field_Model) && _1a9075bad_equalModels((*((*((*(_52540_assign))))._field_Left[1LL]))._field_Model, (*((*(_53017_tup))._field_Datas[1LL]))._field_Model))) {
		_1a907e0a1_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1a9075bad_equalModels((*((*((*(_52540_assign))))._field_Left[0LL]))._field_Model, (*((*(_53017_tup))._field_Datas[1LL]))._field_Model))) || (!(_1a9075bad_equalModels((*((*((*(_52540_assign))))._field_Left[1LL]))._field_Model, (*((*(_53017_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1a9076b6a_SwapExprModel> _55213_model = jule::new_ptr<_1a9076b6a_SwapExprModel>(_1a9076b6a_SwapExprModel{._field_Left=(*((*(_52540_assign))))._field_Left[0LL], ._field_Right=(*((*(_52540_assign))))._field_Left[1LL]});;
	static__1a9085d11_optimizeData(&((*((*(_55213_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1a9085d11_optimizeData(&((*((*_55213_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1a907dda3_setCurrentStmt(_self_, jule::Any(_55213_model, &__jule_any_type125));
	return true;;
}



inline void _1a908224c_optimizeMultiAssign(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d829ba_MultiAssign> _56243_assign) {
	if (_1a9081e94_tryOptimizeSwap(_self_, &(_56243_assign))) {
		return;;
	};
	jule::Ptr<_1a8d34818_TupleExprModel> _56913_tup = static_cast<jule::Ptr<_1a8d34818_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_56243_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad5c9e55:;
			{
				_56913_tup=(*(_56243_assign))._field_Right.unsafe_cast_ptr<_1a8d34818_TupleExprModel>();
			}
		}
		_match_end_1ad5c9dde:;
	};
	{
		auto expr = &((*(_56243_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5c9086:;
		if (it != expr_end) {
			jule::I32 _57414_i = it - expr->begin();
			jule::Ptr<_1a8e4bcb5_Data> _57421_l = *it;
			{
				if ((_57421_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1a90967c2_isBoundaryRiskyType((*_57421_l.alloc)._field_Kind)) {
							_1a9096508_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*_57421_l.alloc)._field_Model);
						};
					};
					if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
						if (((_56913_tup != nullptr) && _1a907bb92_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*_56913_tup.alloc)._field_Datas[_57414_i]))._field_Model))) {
							if (_1a907be5b_isNilValidType((*_57421_l.alloc)._field_Kind)) {
								;
								_1a907ac5c_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1a907c29c_getNilVar((*_57421_l.alloc)._field_Model), true);
							};
						} else {
							_1a907b7c9_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*_57421_l.alloc)._field_Model);
						};
					};
					if ((((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr) && (_56913_tup != nullptr))) {
						jule::Ptr<_1a8e8301b_TypeKind> _59225_kind = _1a90918aa_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_56913_tup.alloc)._field_Datas[_57414_i]))._field_Kind, (*((*_56913_tup.alloc)._field_Datas[_57414_i]))._field_Model);;
						if ((_59225_kind != nullptr)) {
							if (_1a909147b_isDynamicValidType((*_57421_l.alloc)._field_Kind)) {
								_1a9090546_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1a9091beb_getDynamicVar((*_57421_l.alloc)._field_Model), _59225_kind);
							};
						} else {
							_1a909116d_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*_57421_l.alloc)._field_Model);
						};
					};
					static__1a9085d11_optimizeData(&((*_57421_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1ad5c9086:;
			++it;
			_57414_i++;
			goto _iter_begin_1ad5c9086;
		}
		_iter_end_1ad5c9086:;
	};
	static__1a9085d11_optimizeData(&((*_56243_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1a9082505_optimizeRet(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d846e2_RetSt> _60835_r) {
	static__1a9085d11_optimizeData(&((*(_60835_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1a9099693_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_60835_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad5d5b53:;
			{
				goto _match_end_1ad5d5eb6;
			}
		}
		else {
			_case_begin_1ad5d601b:;
			{
				return;;
			}
		}
		_match_end_1ad5d5eb6:;
	};
	jule::Ptr<_1a8d3112d_FnCallExprModel> _62213_fc = (*_60835_r.alloc)._field_Expr.cast_ptr<_1a8d3112d_FnCallExprModel>(&__jule_any_type33);;
	if (((((!((*((*((*(_62213_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_62213_fc.alloc)._field_Except == nullptr)) || ((*((*_62213_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1a9084419_isForwarded(&((*_62213_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1a907dda3_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a90767e6_ExceptionalForwardingExprModel>(_1a90767e6_ExceptionalForwardingExprModel{._field_Expr=_62213_fc}), &__jule_any_type120));
}



inline void _1a90827ad_optimizeStmt(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Any _63236_stmt) {
	{
		auto &_match_expr{ _63236_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ad5d941a:;
			{
				_1a9082a66_optimizeChild(_self_, _63236_stmt.unsafe_cast_ptr<_1a8d7de17_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad5d9162:;
			{
				_1a907e876_optimizeData(_self_, _63236_stmt.unsafe_cast_ptr<_1a8e4bcb5_Data>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad5d9481:;
			{
				_1a907eb2e_optimizeVar(_self_, _63236_stmt.unsafe_cast_ptr<_1a8de41ad_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad5d94e7:;
			{
				_1a907edd7_optimizeConditional(_self_, _63236_stmt.unsafe_cast_ptr<_1a8d7ea50_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ad5d955d:;
			{
				_1a9080866_optimizeRangeIter(_self_, _63236_stmt.unsafe_cast_ptr<_1a8d80c4e_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ad5d95d5:;
			{
				_1a9080b1e_optimizeWhileIter(_self_, _63236_stmt.unsafe_cast_ptr<_1a8d80303_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ad5d965c:;
			{
				_1a9082a66_optimizeChild(_self_, (*(_63236_stmt.unsafe_cast_ptr<_1a8d7ed4c_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ad5d96d4:;
			{
				_1a9081b53_optimizeAssign(_self_, _63236_stmt.unsafe_cast_ptr<_1a8d82514_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ad5d975b:;
			{
				_1a908224c_optimizeMultiAssign(_self_, _63236_stmt.unsafe_cast_ptr<_1a8d829ba_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ad5d97d3:;
			{
				_1a90805ad_optimizeMatch(_self_, _63236_stmt.unsafe_cast_ptr<_1a8d8312a_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ad5d985a:;
			{
				_1a9082505_optimizeRet(_self_, _63236_stmt.unsafe_cast_ptr<_1a8d846e2_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ad5d98d2:;
			{
				_1a908189a_optimizePostfix(_self_, _63236_stmt.unsafe_cast_ptr<_1a8d8205d_Postfix>());
			}
		}
		_match_end_1ad5d92c7:;
	};
}



inline void _1a9082a66_optimizeChild(jule::Ptr<_1a907d578_scopeOptimizer> _self_, jule::Ptr<_1a8d7de17_Scope> _66137_child) {
	jule::Ptr<_1a907d578_scopeOptimizer> _66213_so = static__1a907daea_new(_66137_child);;
	(*(_66213_so))._field_parent=_self_;
	(*_66213_so.alloc)._field_data=(*(_self_))._field_data;
	_1a9082c64_optimize(_66213_so);
}



inline void _1a9082c64_optimize(jule::Ptr<_1a907d578_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a90827ad_optimizeStmt(_self_, (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1ad5e2874:;
	}
	_iter_end_1ad5e2874:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a907d578_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void static__1a9085a25_optimize(jule::Any* _5829_model) {
	static__1a9085d11_optimizeData(_5829_model, &(_1a9092636_emptyData));
}



inline void static__1a9085d11_optimizeData(jule::Any* _6233_model, jule::Ptr<_1a909302c_data>* _6256_d) {
	if (_1a9a7ae54_exprEnabled) {
		jule::Ptr<_1a90853c6_exprOptimizer> _6517_exop = jule::new_ptr<_1a90853c6_exprOptimizer>(_1a90853c6_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_6233_model)), ._field_data=(*(_6256_d))});;
		_1a908d81e_do(_6517_exop.ptr());
	};
}



inline jule::Bool _1a9086152_selfCmpCond(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel>* _7331_m) {
	if ((!(_1a9075bad_equalModels((*((*((*(_7331_m))))._field_Left))._field_Model, (*((*((*(_7331_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7331_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1ad60206a:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__20a2b8025_NewBool(true), &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1ad602466:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__20a2b8025_NewBool(false), &__jule_any_type19);
				return true;;
			}
		}
		else {
			_case_begin_1ad600e37:;
			{
				return false;;
			}
		}
		_match_end_1ad602004:;
	};
}



inline jule::Bool _1a9086493_boolCond(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel>* _9728_m) {
	jule::Ptr<_1a8e8aae5_Prim> _989_lp = _1a8e8566c_Prim((*((*((*(_9728_m))))._field_Left))._field_Kind.ptr());;
	if (((_989_lp == nullptr) || (!(_1a8e8dce6_IsBool(_989_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_9728_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad606822:;
			{
				std::swap((*((*(_9728_m))))._field_Left, (*((*(_9728_m))))._field_Right);
			}
		}
		else {
			_case_begin_1ad605a30:;
			{
				{
					auto &_match_expr{ (*((*((*(_9728_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1ad604d1a:;
						{
							goto _match_end_1ad606349;
						}
					}
					else {
						_case_begin_1ad60639e:;
						{
							return false;;
						}
					}
					_match_end_1ad606349:;
				};
			}
		}
		_match_end_1ad6059ca:;
	};
	jule::Ptr<_20a2b7552_Const> _11513_c = (*((*((*(_9728_m))))._field_Right))._field_Model.cast_ptr<_20a2b7552_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*((*(_9728_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1ad608439:;
			{
				if (_20a2b9444_ReadBool(_11513_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_9728_m))))._field_Left.alloc)._field_Model;
				} else {
					_20a2baa2d_SetBool(_11513_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_11513_c, &__jule_any_type19);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1ad6084d3:;
			{
				if (_20a2b9444_ReadBool(_11513_c.ptr())) {
					_20a2baa2d_SetBool(_11513_c, true);
					(*((*(_self_))._field_model))=jule::Any(_11513_c, &__jule_any_type19);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_9728_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1ad60659c:;
		}
		_match_end_1ad6083b2:;
	};
	return false;;
}



inline jule::Bool _1a90867d4_strCond(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel> _15026_m) {
	jule::Ptr<_1a8e8aae5_Prim> _1519_lp = _1a8e8566c_Prim((*((*(_15026_m))._field_Left))._field_Kind.ptr());;
	if (((_1519_lp == nullptr) || (!(_1a8e8e07c_IsStr(_1519_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_15026_m.alloc)._field_Op))._field_Id != static_cast<jule::U32>(50LLU)) && ((*(*_15026_m.alloc)._field_Op.alloc)._field_Id != static_cast<jule::U32>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_15026_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad236d37:;
			{
				std::swap((*_15026_m.alloc)._field_Left, (*_15026_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1ad236034:;
			{
				{
					auto &_match_expr{ (*((*(_15026_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1ad234a9e:;
						{
							goto _match_end_1ad23684d;
						}
					}
					else {
						_case_begin_1ad2368a3:;
						{
							return false;;
						}
					}
					_match_end_1ad23684d:;
				};
			}
		}
		_match_end_1ad235ece:;
	};
	jule::Ptr<_20a2b7552_Const> _17113_c = (*((*_15026_m.alloc)._field_Right))._field_Model.cast_ptr<_20a2b7552_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_15026_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1ad236b06:;
			{
				if ((_20a2b96ca_ReadStr(_17113_c.ptr())).empty()) {
					jule::Any _17521_model = jule::Any(jule::new_ptr<_1a9077044_EmptyCompareExprModel>(_1a9077044_EmptyCompareExprModel{._field_Expr=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17521_model))))));
					goto _match_end_1ad238872;
				};
				jule::Any _18217_model = jule::Any(jule::new_ptr<_1a907783b_StrCompExprModel>(_1a907783b_StrCompExprModel{._field_Left=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_17113_c, ._field_NotEq=false}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_18217_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ad23891b:;
			{
				if ((_20a2b96ca_ReadStr(_17113_c.ptr())).empty()) {
					jule::Any _19021_model = jule::Any(jule::new_ptr<_1a9077044_EmptyCompareExprModel>(_1a9077044_EmptyCompareExprModel{._field_Expr=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19021_model))))));
					goto _match_end_1ad238872;
				};
				jule::Any _19717_model = jule::Any(jule::new_ptr<_1a907783b_StrCompExprModel>(_1a907783b_StrCompExprModel{._field_Left=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_17113_c, ._field_NotEq=true}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_19717_model))))));
			}
		}
		_match_end_1ad238872:;
	};
	return true;;
}



inline jule::Bool _1a9086c8a_tryNeutralElement1(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel>* _20738_m, jule::Ptr<_20a2b7552_Const> _20763_c, jule::Ptr<_1a8d2db53_OperandExprModel>* _20775_nc) {
	if (_20a2bbcc6_IsStr(_20763_c.ptr())) {
		if ((!(_1a9098d8a_Str))) {
			return false;;
		};
		if (((_20a2b96ca_ReadStr(_20763_c)).empty() && ((*((*((*(_20738_m))))._field_Op))._field_Id == static_cast<jule::U32>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_20775_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1a9097e66_Math)) || (_20a2ba214_AsF64(_20763_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_20738_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1ad242518:;
			{
				if (((*(_20775_nc)) == (*((*(_20738_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_20775_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_20763_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ad2431c8:;
			{
				_20a2ba4bc_SetI64(_20763_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_20763_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1ad24323e:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_20775_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1ad243096:;
	};
	return false;;
}



inline jule::Bool _1a90870cb_tryNeutralElement(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel>* _25137_m) {
	{
		auto &_match_expr{ (*((*((*(_25137_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad2466b5:;
			{
				jule::Ptr<_20a2b7552_Const> _25517_c = (*((*((*(_25137_m))))._field_Left))._field_Model.unsafe_cast_ptr<_20a2b7552_Const>();;
				return _1a9086c8a_tryNeutralElement1(_self_, _25137_m, _25517_c, &((*((*(_25137_m))))._field_Right));;
			}
		}
		_match_end_1ad24664e:;
	};
	{
		auto &_match_expr{ (*((*((*(_25137_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad246b38:;
			{
				jule::Ptr<_20a2b7552_Const> _26017_c = (*((*((*(_25137_m))))._field_Right))._field_Model.unsafe_cast_ptr<_20a2b7552_Const>();;
				return _1a9086c8a_tryNeutralElement1(_self_, _25137_m, _26017_c, &((*((*(_25137_m))))._field_Left));;
			}
		}
		_match_end_1ad246ac2:;
	};
	return false;;
}



inline void _1a9087384_checkBinaryForBoundary(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel>* _26642_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_26642_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ad24a0d1:;
			{
				jule::Ptr<_1a8d369a2_BuiltinLenCallExprModel> _27217_blc = (*((*((*(_26642_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a8d369a2_BuiltinLenCallExprModel>();;
				if ((!(_1a9096a8b_isBoundaryValidType((*((*(_27217_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_26642_m))))._field_Op))._field_Id != static_cast<jule::U32>(70LLU)) && ((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_26642_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_26642_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1ad24d348:;
							{
								jule::Ptr<_20a2b7552_Const> _28425_c = jule::new_ptr<_20a2b7552_Const>((*((*((*((*(_26642_m))))._field_Right))._field_Model.cast_ptr<_20a2b7552_Const>(&__jule_any_type19))));;
								_20a2be59d_Sub(_28425_c, (*(static__20a2b7992_NewI64(1LL))));
								_1a9094d86_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a9096d55_getBoundaryVar((*(*_27217_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_28425_c, &__jule_any_type19));
							}
						}
						_match_end_1ad24d2d2:;
					};
					return;;
				};
				_1a9094d86_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a9096d55_getBoundaryVar((*(*_27217_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_26642_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1ad24a06a:;
	};
	{
		auto &_match_expr{ (*((*((*(_26642_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ad24a653:;
			{
				jule::Ptr<_1a8d369a2_BuiltinLenCallExprModel> _29517_blc = (*((*((*(_26642_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a8d369a2_BuiltinLenCallExprModel>();;
				if ((!(_1a9096a8b_isBoundaryValidType((*(*(_29517_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(69LLU)) && ((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_26642_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_26642_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1ad254cbc:;
							{
								jule::Ptr<_20a2b7552_Const> _30725_c = jule::new_ptr<_20a2b7552_Const>((*((*((*((*(_26642_m))))._field_Left))._field_Model.cast_ptr<_20a2b7552_Const>(&__jule_any_type19))));;
								_20a2be59d_Sub(_30725_c, (*(static__20a2b7992_NewI64(1LL))));
								_1a9094d86_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a9096d55_getBoundaryVar((*(*_29517_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_30725_c, &__jule_any_type19));
							}
						}
						_match_end_1ad254c56:;
					};
					return;;
				};
				_1a9094d86_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a9096d55_getBoundaryVar((*(*_29517_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_26642_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1ad24a5dc:;
	};
}



inline void _1a908763c_checkBinaryForNil(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel>* _31837_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _32213_var = _1a907c29c_getNilVar((*((*((*(_31837_m))))._field_Left))._field_Model);;
	if ((_32213_var != 0LLU)) {
		if ((!(_1a907be5b_isNilValidType((*(*((*(_31837_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_31837_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1ad25a61e:;
				{
					_1a907ac5c_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _32213_var, ((*((*((*(_31837_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1ad25a5a8:;
		};
		return;;
	};
	_32213_var=_1a907c29c_getNilVar((*((*((*(_31837_m))))._field_Right))._field_Model);
	if ((_32213_var != 0LLU)) {
		if ((!(_1a907be5b_isNilValidType((*(*((*(_31837_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_31837_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1ad25ccb4:;
				{
					_1a907ac5c_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _32213_var, ((*(*((*(_31837_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1ad25cc4d:;
		};
		return;;
	};
}



inline void _1a90878e5_binary(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel> _35025_m) {
	_1a9087384_checkBinaryForBoundary(_self_, &(_35025_m));
	_1a908763c_checkBinaryForNil(_self_, &(_35025_m));
	static__1a9085d11_optimizeData(&((*((*(_35025_m))._field_Left))._field_Model), &((*(_self_))._field_data));
	static__1a9085d11_optimizeData(&((*((*_35025_m.alloc)._field_Right))._field_Model), &((*(_self_))._field_data));
	if (_1a9098b48_Cond) {
		{
			
			if (_1a90867d4_strCond(_self_, _35025_m) || _1a9086493_boolCond(_self_, &(_35025_m)) || _1a9086152_selfCmpCond(_self_, &(_35025_m))) {
				_case_begin_1ad2609cb:;
				{
					return;;
				}
			}
			_match_end_1ad2608ee:;
		};
	};
	if (_1a90870cb_tryNeutralElement(_self_, &(_35025_m))) {
		return;;
	};
	if ((!(_1a9097e66_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35025_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad25ede8:;
			{
				goto _match_end_1ad261ca7;
			}
		}
		else {
			_case_begin_1ad261d0c:;
			{
				return;;
			}
		}
		_match_end_1ad261ca7:;
	};
	jule::Ptr<_1a8e8aae5_Prim> _3869_lp = _1a8e8566c_Prim((*(*_35025_m.alloc)._field_Left.alloc)._field_Kind.ptr());;
	if ((_3869_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _3909_rp = _1a8e8566c_Prim((*(*_35025_m.alloc)._field_Right.alloc)._field_Kind);;
	if ((_3909_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35025_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ad2649d0:;
			{
				jule::Bool _39713_ok;
				jule::U64 _39717_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a908dc92_checkForBitShiftOpt(&((*_35025_m.alloc)._field_Left), &((*_35025_m.alloc)._field_Right));
					_39713_ok = __jule_assign_result.__jule_result_arg0;
					_39717_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_39713_ok) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U32>(56LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_20a2b7552_Const> _40121_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_20a2b7552_Const>(&__jule_any_type19);;
					_20a2ba775_SetU64(_40121_c.ptr(), _39717_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1ad2645d4:;
			{
				jule::Bool _40813_ok;
				jule::U64 _40817_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a908dc92_checkForBitShiftOpt(&((*_35025_m.alloc)._field_Left), &((*_35025_m.alloc)._field_Right));
					_40813_ok = __jule_assign_result.__jule_result_arg0;
					_40817_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_40813_ok) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U32>(57LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_20a2b7552_Const> _41221_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_20a2b7552_Const>(&__jule_any_type19);;
					_20a2ba775_SetU64(_41221_c.ptr(), _40817_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1ad26465b:;
			{
				jule::Ptr<_20a2b7552_Const> _41917_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_20a2b7552_Const>(&__jule_any_type19);;
				if ((_20a2ba214_AsF64(_41917_c.ptr()) == 2LL)) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U32>(65LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("&", 1);
					_20a2ba4bc_SetI64(_41917_c, 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1ad26421b:;
			{
				return;;
			}
		}
		_match_end_1ad26456d:;
	};
	jule::Any _43413_model = jule::Any(jule::new_ptr<_1a90781bb_UnsafeBinaryExprModel>(_1a90781bb_UnsafeBinaryExprModel{._field_Node=_35025_m}), &__jule_any_type128);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_43413_model))))));
}



inline void _1a9087b9d_unary(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2e527_UnaryExprModel> _43824_m) {
	static__1a9085d11_optimizeData(&((*((*(_43824_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
	if ((!(_1a9098780_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_43824_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ad26e248:;
			{
				{
					auto &_match_expr{ (*((*(_43824_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1ad2702e3:;
						{
							jule::Ptr<_1a8d2e527_UnaryExprModel> _44721_um = (*((*(_43824_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a8d2e527_UnaryExprModel>();;
							if (((*((*(_44721_um))._field_Op))._field_Id == static_cast<jule::U32>(65LLU))) {
								(*((*(_self_))._field_model))=(*(*_44721_um.alloc)._field_Expr.alloc)._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1ad27027c:;
				};
				if ((!(_1a909821e_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a907be5b_isNilValidType((*(*_43824_m.alloc)._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _46117_var = _1a907c29c_getNilVar((*(*_43824_m.alloc)._field_Expr.alloc)._field_Model);;
					if (_1a907b3de_isSafe((*(*(_self_))._field_data.alloc)._field_nils, _46117_var)) {
						jule::Any _46325_model = jule::Any(jule::new_ptr<_1a90794ca_UnsafeDerefExprModel>(_1a90794ca_UnsafeDerefExprModel{._field_Base=_43824_m}), &__jule_any_type129);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_46325_model))))));
						return;;
					};
					_1a907ac5c_pushVar((*(*(_self_))._field_data.alloc)._field_nils, _46117_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ad26e666:;
			{
				{
					auto &_match_expr{ (*((*(_43824_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ad275d10:;
						{
							jule::Ptr<_1a8de41ad_Var> _47321_v = (*((*(_43824_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a8de41ad_Var>();;
							if ((*(_47321_v))._field_Reference) {
								jule::Any _47525_model = jule::Any(jule::new_ptr<_1a90773b8_RefExprModel>(_1a90773b8_RefExprModel{._field_Var=_47321_v}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_47525_model))))));
							};
						}
					}
					_match_end_1ad275c99:;
				};
			}
		}
		_match_end_1ad26e512:;
	};
}



inline void _1a9087e56_structureLit(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d2edeb_StructLitExprModel> _48231_m) {
	{
		auto expr = &((*(_48231_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2761c8:;
		if (it != expr_end) {
			jule::Ptr<_1a8d2ea55_StructArgExprModel> _48321_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1a90967c2_isBoundaryRiskyType((*((*(_48321_arg))._field_Expr))._field_Kind)) {
						_1a9096508_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_48321_arg, &__jule_any_type131));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1a907b7c9_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1a909116d_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model);
				};
				static__1a9085d11_optimizeData(&((*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model), &((*(_self_))._field_data));
			}
			_iter_next_1ad2761c8:;
			++it;
			goto _iter_begin_1ad2761c8;
		}
		_iter_end_1ad2761c8:;
	};
}



inline void _1a908820e_allocStructure(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d301e8_AllocStructLitExprModel> _49933_m) {
	_1a9087e56_structureLit(_self_, (*(_49933_m))._field_Lit);
}



inline void _1a90884b7_casting(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d3077b_CastingExprModel> _50326_m) {
	jule::Bool _5049_valid = _1a909147b_isDynamicValidType((*(_50326_m))._field_ExprKind);;
	jule::Uintptr _5059_var = _1a9091beb_getDynamicVar((*((*_50326_m.alloc)._field_Expr))._field_Model);;
	if (((_5049_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1a9090c83_isFits((*(*(_self_))._field_data.alloc)._field_dynamic, _5059_var, (*_50326_m.alloc)._field_Kind))) {
		jule::Any _50717_model = jule::Any(jule::new_ptr<_1a90797c7_UnsafeCastingExprModel>(_1a90797c7_UnsafeCastingExprModel{._field_Base=_50326_m}), &__jule_any_type132);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_50717_model))))));
		return;;
	};
	static__1a9085d11_optimizeData(&((*(*_50326_m.alloc)._field_Expr.alloc)._field_Model), &((*(_self_))._field_data));
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _5049_valid)) {
		_1a9090546_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _5059_var, (*_50326_m.alloc)._field_Kind);
	};
}



inline void _1a908882a_args(_1a90853c6_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a8d3dde9_ParamIns>> _51723_params, jule::Slice<jule::Any>* _51749_args) {
	{
		auto expr = _51749_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2826bd:;
		if (it != expr_end) {
			jule::I32 _51814_i = it - expr->begin();
			jule::Any _51821_arg = *it;
			{
				if ((_51814_i < _51723_params.len())) {
					jule::Ptr<_1a8d3dde9_ParamIns> _52021_p = _51723_params[_51814_i];;
					if (((*((*(_52021_p))._field_Decl))._field_Mutable && (*(*_52021_p.alloc)._field_Decl.alloc)._field_Reference)) {
						if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
							if (_1a90967c2_isBoundaryRiskyType((*_52021_p.alloc)._field_Kind)) {
								_1a9096508_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _51821_arg);
							};
						};
						if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
							_1a907b7c9_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _51821_arg);
						};
						if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
							_1a909116d_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _51821_arg);
						};
					};
				};
				static__1a9085d11_optimizeData(&(_51821_arg), &((*(_self_))._field_data));
				(*(_51749_args))[_51814_i]=_51821_arg;
			}
			_iter_next_1ad2826bd:;
			++it;
			_51814_i++;
			goto _iter_begin_1ad2826bd;
		}
		_iter_end_1ad2826bd:;
	};
}



inline void _1a9088ad3_scope(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d7de17_Scope>* _54025_s) {
	jule::Ptr<_1a907d578_scopeOptimizer> _54113_scopt = static__1a907daea_new((*(_54025_s)));;
	(*(_54113_scopt))._field_data=(*(_self_))._field_data;
	_1a9082c64_optimize(_54113_scopt);
}



inline void _1a9088d8b_funcCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d3112d_FnCallExprModel> _54627_m) {
	static__1a9085d11_optimizeData(&((*(_54627_m))._field_Expr), &((*(_self_))._field_data));
	_1a908882a_args(_self_, (*((*_54627_m.alloc)._field_Func))._field_Params, &((*_54627_m.alloc)._field_Args));
	if (((*_54627_m.alloc)._field_Except != nullptr)) {
		_1a9088ad3_scope(_self_, &((*_54627_m.alloc)._field_Except));
	};
}



inline void _1a9089144_slice(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d31507_SliceExprModel> _55424_m) {
	_1a908882a_args(_self_, nullptr, &((*(_55424_m))._field_Elems));
}



inline void _1a90893ec_array(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d3451b_ArrayExprModel> _55824_m) {
	if ((((*(_55824_m))._field_Elems.len() == 2LL) && ((*_55824_m.alloc)._field_Elems[1LL] == nullptr))) {
		jule::Any _56017_elem = (*_55824_m.alloc)._field_Elems[0LL];;
		static__1a9085d11_optimizeData(&(_56017_elem), &((*(_self_))._field_data));
		(*_55824_m.alloc)._field_Elems[0LL]=_56017_elem;
	};
	_1a908882a_args(_self_, nullptr, &((*_55824_m.alloc)._field_Elems));
}



inline void _1a90896a5_indexing(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d319ad_IndexingExprModel> _56727_m) {
	static__1a9085d11_optimizeData(&((*((*(_56727_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
	static__1a9085d11_optimizeData(&((*((*_56727_m.alloc)._field_Index))._field_Model), &((*(_self_))._field_data));
	if ((!(_1a909821e_Access))) {
		return;;
	};
	jule::Bool _5749_array = (_1a8e8643c_Arr((*(*_56727_m.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr);;
	if ((_5749_array && _1a8e4c6bc_IsConst((*_56727_m.alloc)._field_Index))) {
		jule::Any _57717_model = jule::Any(jule::new_ptr<_1a9078551_UnsafeIndexingExprModel>(_1a9078551_UnsafeIndexingExprModel{._field_Node=_56727_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_57717_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1a9096a8b_isBoundaryValidType((*(*_56727_m.alloc)._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _58313_var = _1a9096d55_getBoundaryVar((*(*_56727_m.alloc)._field_Expr.alloc)._field_Model);;
		if (_1a90955c3_fitsMaxSize((*(*(_self_))._field_data.alloc)._field_boundary, _58313_var, (*(*_56727_m.alloc)._field_Index.alloc)._field_Model)) {
			jule::Any _58521_model = jule::Any(jule::new_ptr<_1a9078551_UnsafeIndexingExprModel>(_1a9078551_UnsafeIndexingExprModel{._field_Node=_56727_m}), &__jule_any_type133);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_58521_model))))));
			return;;
		};
		_1a9094d86_pushVar((*(*(_self_))._field_data.alloc)._field_boundary, _58313_var, (*(*_56727_m.alloc)._field_Index.alloc)._field_Model);
	};
}



inline void _1a908995d_anonFunc(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel> _59327_m) {
	_1a9088ad3_scope(_self_, &((*((*(_59327_m))._field_Func))._field_Scope));
}



inline void _1a9089c16_mapExpr(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d327e4_MapExprModel> _59726_m) {
	{
		auto expr = &((*(_59726_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad295a66:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3233d_KeyValPairExprModel> _59821_pair = *it;
			{
				static__1a9085d11_optimizeData(&((*(_59821_pair))._field_Key), &((*(_self_))._field_data));
				static__1a9085d11_optimizeData(&((*_59821_pair.alloc)._field_Val), &((*(_self_))._field_data));
			}
			_iter_next_1ad295a66:;
			++it;
			goto _iter_begin_1ad295a66;
		}
		_iter_end_1ad295a66:;
	};
}



inline void _1a9089ebe_slicing(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d32d77_SlicingExprModel> _60426_m) {
	static__1a9085d11_optimizeData(&((*(_60426_m))._field_Expr), &((*(_self_))._field_data));
	static__1a9085d11_optimizeData(&((*_60426_m.alloc)._field_Left), &((*(_self_))._field_data));
	if (((*_60426_m.alloc)._field_Right != nullptr)) {
		static__1a9085d11_optimizeData(&((*_60426_m.alloc)._field_Right), &((*(_self_))._field_data));
	};
}



inline void _1a908a277_traitSub(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d3340a_TraitSubIdentExprModel> _61227_m) {
	static__1a9085d11_optimizeData(&((*(_61227_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a908a530_structureSub(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _61631_m) {
	static__1a9085d11_optimizeData(&((*((*(_61631_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1a908a7d8_tuple(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d34818_TupleExprModel> _62024_m) {
	{
		auto expr = &((*(_62024_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad299d56:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4bcb5_Data> _62121_d = *it;
			{
				static__1a9085d11_optimizeData(&((*(_62121_d))._field_Model), &((*(_self_))._field_data));
			}
			_iter_next_1ad299d56:;
			++it;
			goto _iter_begin_1ad299d56;
		}
		_iter_end_1ad299d56:;
	};
}



inline void _1a908aa91_newCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d35495_BuiltinNewCallExprModel> _62626_m) {
	if (((*(_62626_m))._field_Init != nullptr)) {
		static__1a9085d11_optimizeData(&((*_62626_m.alloc)._field_Init), &((*(_self_))._field_data));
	};
}



inline void _1a908ad49_outCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d34be2_BuiltinOutCallExprModel> _63226_m) {
	static__1a9085d11_optimizeData(&((*(_63226_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a908b102_outlnCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d350bb_BuiltinOutlnCallExprModel> _63628_m) {
	static__1a9085d11_optimizeData(&((*(_63628_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a908b3aa_panicCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d3586e_BuiltinPanicCallExprModel> _64028_m) {
	static__1a9085d11_optimizeData(&((*(_64028_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a908b663_assertCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d35d25_BuiltinAssertCallExprModel> _64429_m) {
	static__1a9085d11_optimizeData(&((*(_64429_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a908b91b_errorCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d3792b_BuiltinErrorCallExprModel> _64828_m) {
	static__1a9085d11_optimizeData(&((*((*(_64828_m))._field_Err))._field_Model), &((*(_self_))._field_data));
}



inline void _1a908bbc4_makeCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d362cb_BuiltinMakeCallExprModel> _65227_m) {
	if (((*(_65227_m))._field_Len != nullptr)) {
		static__1a9085d11_optimizeData(&((*_65227_m.alloc)._field_Len), &((*(_self_))._field_data));
	};
	if (((*_65227_m.alloc)._field_Cap != nullptr)) {
		static__1a9085d11_optimizeData(&((*_65227_m.alloc)._field_Cap), &((*(_self_))._field_data));
	};
}



inline void _1a908be7c_appendCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d366a5_BuiltinAppendCallExprModel> _66129_m) {
	static__1a9085d11_optimizeData(&((*(_66129_m))._field_Dest), &((*(_self_))._field_data));
	static__1a9085d11_optimizeData(&((*_66129_m.alloc)._field_Elements), &((*(_self_))._field_data));
}



inline void _1a908c235_lenCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d369a2_BuiltinLenCallExprModel> _66626_m) {
	static__1a9085d11_optimizeData(&((*((*(_66626_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1a908c4dd_capCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d36c9e_BuiltinCapCallExprModel> _67026_m) {
	static__1a9085d11_optimizeData(&((*((*(_67026_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1a908c796_deleteCall(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d37178_BuiltinDeleteCallExprModel> _67429_m) {
	static__1a9085d11_optimizeData(&((*((*(_67429_m))._field_Dest))._field_Model), &((*(_self_))._field_data));
	if (((*_67429_m.alloc)._field_Key != nullptr)) {
		static__1a9085d11_optimizeData(&((*(*_67429_m.alloc)._field_Key.alloc)._field_Model), &((*(_self_))._field_data));
	};
}



inline void _1a908ca4e_sizeof(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d380d0_SizeofExprModel> _68125_m) {
	static__1a9085d11_optimizeData(&((*(_68125_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a908cd07_alignof(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d382bc_AlignofExprModel> _68526_m) {
	static__1a9085d11_optimizeData(&((*(_68526_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a908d0b0_integratedToStr(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d38861_IntegratedToStrExprModel> _68934_m) {
	static__1a9085d11_optimizeData(&((*(_68934_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a908d368_free(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d39037_FreeExprModel> _69323_m) {
	static__1a9085d11_optimizeData(&((*(_69323_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a908d621_backendEmit(_1a90853c6_exprOptimizer* _self_, jule::Ptr<_1a8d38c3a_BackendEmitExprModel> _69730_m) {
	_1a908882a_args(_self_, nullptr, &((*(_69730_m))._field_Exprs));
}



inline void _1a908d81e_do(_1a90853c6_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ad2a856d:;
			{
				_1a90878e5_binary(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d2e14d_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad2a8040:;
			{
				_1a9087b9d_unary(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d2e527_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ad2a85e5:;
			{
				_1a9087e56_structureLit(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d2edeb_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ad2a866c:;
			{
				_1a908820e_allocStructure(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d301e8_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad2a86e4:;
			{
				_1a90884b7_casting(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d3077b_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad2a876b:;
			{
				_1a9088d8b_funcCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d3112d_FnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ad2a87e3:;
			{
				_1a9089144_slice(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d31507_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ad2a886a:;
			{
				_1a90893ec_array(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d3451b_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad2a88e2:;
			{
				_1a90896a5_indexing(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d319ad_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ad2a8969:;
			{
				_1a908995d_anonFunc(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d31e64_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ad2a89e1:;
			{
				_1a9089c16_mapExpr(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d327e4_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ad2a8a68:;
			{
				_1a9089ebe_slicing(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d32d77_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ad2a8ae0:;
			{
				_1a908a277_traitSub(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d3340a_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad2a8b67:;
			{
				_1a908a530_structureSub(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d33c9b_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad2a8bde:;
			{
				_1a908a7d8_tuple(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d34818_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ad2a8c66:;
			{
				_1a908ad49_outCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d34be2_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ad2a8cdd:;
			{
				_1a908b102_outlnCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d350bb_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad2a8d65:;
			{
				_1a908aa91_newCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d35495_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ad2a8ddc:;
			{
				_1a908b3aa_panicCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d3586e_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ad2a8e64:;
			{
				_1a908b663_assertCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d35d25_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ad2a8edb:;
			{
				_1a908b91b_errorCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d3792b_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ad2a9063:;
			{
				_1a908bbc4_makeCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d362cb_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ad2a90da:;
			{
				_1a908be7c_appendCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d366a5_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ad2a9162:;
			{
				_1a908c235_lenCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d369a2_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ad2a91d9:;
			{
				_1a908c4dd_capCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d36c9e_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ad2a9261:;
			{
				_1a908c796_deleteCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d37178_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ad2a92d8:;
			{
				_1a908ca4e_sizeof(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d380d0_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ad2a9360:;
			{
				_1a908cd07_alignof(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d382bc_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ad2a93d7:;
			{
				_1a908d0b0_integratedToStr(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d38861_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ad2a945e:;
			{
				_1a908d368_free(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d39037_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ad2a94d6:;
			{
				_1a908d621_backendEmit(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a8d38c3a_BackendEmitExprModel>());
			}
		}
		_match_end_1ad2a82c6:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a90853c6_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a908ec93_dynamicVar _Src) {
	_Stream << "dynamicVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline void _1a9090546_pushVar(jule::Ptr<_1a90900d4_dynamic> _self_, jule::Uintptr _3127_var, jule::Ptr<_1a8e8301b_TypeKind> _3145_kind) {
	if (((!(_1a9099c04_Dynamic)) || (_3127_var == 0LLU))) {
		return;;
	};
	_3145_kind=_1a90918aa_isTypeGuaranteedDynamicData(&(_self_), _3145_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2c7229:;
		if (it != expr_end) {
			_1a908ec93_dynamicVar _3721_v = *it;
			{
				if ((_3721_v._field_var == _3127_var)) {
					_3721_v._field_kind=_3145_kind;
					return;;
				};
			}
			_iter_next_1ad2c7229:;
			++it;
			goto _iter_begin_1ad2c7229;
		}
		_iter_end_1ad2c7229:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2c7bdb:;
		if (it != expr_end) {
			_1a908ec93_dynamicVar _4421_v = *it;
			{
				if ((_4421_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3127_var;
						jule::Ptr<_1a8e8301b_TypeKind> _1___jule_assign_arg = _3145_kind;
						_4421_v._field_var = ___jule_assign_arg;
						_4421_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1ad2c7bdb:;
			++it;
			goto _iter_begin_1ad2c7bdb;
		}
		_iter_end_1ad2c7bdb:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,jule::Slice<_1a908ec93_dynamicVar>::make({_1a908ec93_dynamicVar{._field_var=_3127_var, ._field_kind=_3145_kind}}));
}



inline jule::Bool _1a9090887_removeVar(_1a90900d4_dynamic* _self_, jule::Uintptr _5428_var) {
	if ((_5428_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad2c9d97:;
			if (it != expr_end) {
				_1a908ec93_dynamicVar _5625_v = *it;
				{
					if ((_5625_v._field_var == _5428_var)) {
						_5625_v._field_var=0LLU;
						_5625_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1ad2c9d97:;
				++it;
				goto _iter_begin_1ad2c9d97;
			}
			_iter_end_1ad2c9d97:;
		};
	};
	return false;;
}



inline jule::Bool _1a9090c83_isFits(_1a90900d4_dynamic* _self_, jule::Uintptr _6825_var, jule::Ptr<_1a8e8301b_TypeKind> _6839_kind) {
	if ((_6825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad2cb728:;
			if (it != expr_end) {
				_1a908ec93_dynamicVar _7020_v = *it;
				{
					if ((_7020_v._field_var == _6825_var)) {
						return ((_7020_v._field_kind != nullptr) && _1a8e83725_Equal(_7020_v._field_kind, _6839_kind));;
					};
				}
				_iter_next_1ad2cb728:;
				++it;
				goto _iter_begin_1ad2cb728;
			}
			_iter_end_1ad2cb728:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a90900d4_dynamic _Src) {
	_Stream << "dynamic{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline _1a9092a32_dataCheckpoint _1a90933a1_getCheckpoint(_1a909302c_data* _self_) {
	_1a9092a32_dataCheckpoint _2513_c = _1a9092a32_dataCheckpoint{};;
	_2513_c._field_boundary._field_vars=jule::append(jule::Slice<_1a90945d3_boundaryVar>::alloc(0LL, 0LL),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_2513_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2cd5e8:;
		if (it != expr_end) {
			jule::I32 _2713_i = it - expr->begin();
			{
				_2513_c._field_boundary._field_vars[_2713_i]._field_maxSize=jule::append(jule::Slice<jule::Any>::alloc(0LL, 0LL, jule::Any(nullptr)),_2513_c._field_boundary._field_vars[_2713_i]._field_maxSize);
			}
			_iter_next_1ad2cd5e8:;
			++it;
			_2713_i++;
			goto _iter_begin_1ad2cd5e8;
		}
		_iter_end_1ad2cd5e8:;
	};
	_2513_c._field_nils._field_vars=jule::append(jule::Slice<_1a907a4a9_nilVar>::alloc(0LL, 0LL),(*((*(_self_))._field_nils))._field_vars);
	_2513_c._field_dynamic._field_vars=jule::append(jule::Slice<_1a908ec93_dynamicVar>::alloc(0LL, 0LL),(*((*(_self_))._field_dynamic))._field_vars);
	return _2513_c;;
}



inline void _1a9093659_loadCheckpoint(_1a909302c_data* _self_, _1a9092a32_dataCheckpoint* _3538_c) {
	(*((*(_self_))._field_boundary))=(*(_3538_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3538_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3538_c))._field_dynamic;
}





std::ostream &operator<<(std::ostream &_Stream, _1a909302c_data _Src) {
	_Stream << "data{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a90945d3_boundaryVar _Src) {
	_Stream << "boundaryVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "maxSize:" << _Src._field_maxSize;
	_Stream << "}";
	return _Stream;
}



inline void _1a9094d86_pushVar(_1a9094924_boundary* _self_, jule::Uintptr _2426_var, jule::Any _2444_maxSize) {
	if (((!(_1a909821e_Access)) || (_2426_var == 0LLU))) {
		return;;
	};
	if ((!(_1a909598b_isValidBoundaryInfo(_2444_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2e271c:;
		if (it != expr_end) {
			_1a90945d3_boundaryVar _3221_v = *it;
			{
				if ((_3221_v._field_var == _2426_var)) {
					{
						auto expr = &(_3221_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad2e3487:;
						if (it != expr_end) {
							jule::I32 _3421_i = it - expr->begin();
							jule::Any _3424_max = *it;
							{
								if (_1a90961c8_fitsSize(_2444_maxSize, _3424_max)) {
									_3221_v._field_maxSize[_3421_i]=_2444_maxSize;
									return;;
								};
							}
							_iter_next_1ad2e3487:;
							++it;
							_3421_i++;
							goto _iter_begin_1ad2e3487;
						}
						_iter_end_1ad2e3487:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3221_v._field_maxSize; __jule_push_dest.push(_2444_maxSize); };
					return;;
				};
			}
			_iter_next_1ad2e271c:;
			++it;
			goto _iter_begin_1ad2e271c;
		}
		_iter_end_1ad2e271c:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2e3058:;
		if (it != expr_end) {
			_1a90945d3_boundaryVar _4621_v = *it;
			{
				if ((_4621_v._field_var == 0LLU)) {
					_4621_v._field_var=_2426_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4621_v._field_maxSize; __jule_push_dest.push(_2444_maxSize); };
					return;;
				};
			}
			_iter_next_1ad2e3058:;
			++it;
			goto _iter_begin_1ad2e3058;
		}
		_iter_end_1ad2e3058:;
	};
	{ jule::Slice<_1a90945d3_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a90945d3_boundaryVar{._field_var=_2426_var, ._field_maxSize=jule::Slice<jule::Any>::make({_2444_maxSize})}); };
}



inline jule::Bool _1a90955c3_fitsMaxSize(_1a9094924_boundary* _self_, jule::Uintptr _7130_var, jule::Any _7144_expr) {
	if ((_7130_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad2e7d1b:;
			if (it != expr_end) {
				_1a90945d3_boundaryVar _7320_v = *it;
				{
					if ((_7320_v._field_var == _7130_var)) {
						return (_1a9095d54_fitsMaxSize(_7320_v._field_maxSize, _7144_expr) != -1LL);;
					};
				}
				_iter_next_1ad2e7d1b:;
				++it;
				goto _iter_begin_1ad2e7d1b;
			}
			_iter_end_1ad2e7d1b:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9094924_boundary _Src) {
	_Stream << "boundary{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9a7b41b_Optimizer> static__1a9a7b88e_New(jule::Ptr<_1a990452a_IR>* _2624_ir) {
	return jule::new_ptr<_1a9a7b41b_Optimizer>(_1a9a7b41b_Optimizer{._field_ir=(*(_2624_ir))});;
}



inline void _1a9a7bb47_optimizeGlobal(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8de41ad_Var>* _3238_v) {
	if ((!((*((*(_3238_v))))._field_Binded))) {
		static__1a9085a25_optimize(&((*((*((*((*(_3238_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1a9a7be00_optimizeFunction(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8d3be91_Fn>* _3840_func) {
	if ((*((*(_3840_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3840_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2ed10c:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3ee72_FnIns> _4221_ins = *it;
			{
				jule::Ptr<_1a907d578_scopeOptimizer> _4317_so = static__1a907daea_new((*(_4221_ins))._field_Scope);;
				_1a9082c64_optimize(_4317_so);
			}
			_iter_next_1ad2ed10c:;
			++it;
			goto _iter_begin_1ad2ed10c;
		}
		_iter_end_1ad2ed10c:;
	};
}



inline void _1a9a7c1a8_optimizeStruct(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8d26e26_Struct>* _4838_s) {
	if ((*((*(_4838_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2ee7b2:;
		if (it != expr_end) {
			jule::Ptr<_1a8d29ba4_StructIns> _5221_ins = *it;
			{
				{
					auto expr = &((*(_5221_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad3001a8:;
					if (it != expr_end) {
						jule::Ptr<_1a8d29104_FieldIns> _5325_f = *it;
						{
							if (((*(_5325_f))._field_Default != nullptr)) {
								static__1a9085a25_optimize(&((*(*_5325_f.alloc)._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1ad3001a8:;
						++it;
						goto _iter_begin_1ad3001a8;
					}
					_iter_end_1ad3001a8:;
				};
				{
					auto expr = &((*_5221_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad3005d7:;
					if (it != expr_end) {
						jule::Ptr<_1a8d3be91_Fn> _5825_m = *it;
						{
							_1a9a7be00_optimizeFunction(_self_, &(_5825_m));
						}
						_iter_next_1ad3005d7:;
						++it;
						goto _iter_begin_1ad3005d7;
					}
					_iter_end_1ad3005d7:;
				};
			}
			_iter_next_1ad2ee7b2:;
			++it;
			goto _iter_begin_1ad2ee7b2;
		}
		_iter_end_1ad2ee7b2:;
	};
}



inline void _1a9a7c461_optimizeGlobals(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8da3dc6_Package>* _6439_p) {
	{
		auto expr = &((*((*(_6439_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad728878:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _6521_f = *it;
			{
				{
					auto expr = &((*(_6521_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad72967b:;
					if (it != expr_end) {
						jule::Ptr<_1a8de41ad_Var> _6625_v = *it;
						{
							_1a9a7bb47_optimizeGlobal(_self_, &(_6625_v));
						}
						_iter_next_1ad72967b:;
						++it;
						goto _iter_begin_1ad72967b;
					}
					_iter_end_1ad72967b:;
				};
			}
			_iter_next_1ad728878:;
			++it;
			goto _iter_begin_1ad728878;
		}
		_iter_end_1ad728878:;
	};
}



inline void _1a9a7c719_optimizeFunctions(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8da3dc6_Package>* _7241_p) {
	{
		auto expr = &((*((*(_7241_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad729c0e:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _7321_f = *it;
			{
				{
					auto expr = &((*(_7321_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad72aa78:;
					if (it != expr_end) {
						jule::Ptr<_1a8d3be91_Fn> _7425_func = *it;
						{
							_1a9a7be00_optimizeFunction(_self_, &(_7425_func));
						}
						_iter_next_1ad72aa78:;
						++it;
						goto _iter_begin_1ad72aa78;
					}
					_iter_end_1ad72aa78:;
				};
			}
			_iter_next_1ad729c0e:;
			++it;
			goto _iter_begin_1ad729c0e;
		}
		_iter_end_1ad729c0e:;
	};
}



inline void _1a9a7c9c2_optimizeStructs(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8da3dc6_Package>* _8039_p) {
	{
		auto expr = &((*((*(_8039_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad72b10b:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _8121_f = *it;
			{
				{
					auto expr = &((*(_8121_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad72be75:;
					if (it != expr_end) {
						jule::Ptr<_1a8d26e26_Struct> _8225_s = *it;
						{
							_1a9a7c1a8_optimizeStruct(_self_, &(_8225_s));
						}
						_iter_next_1ad72be75:;
						++it;
						goto _iter_begin_1ad72be75;
					}
					_iter_end_1ad72be75:;
				};
			}
			_iter_next_1ad72b10b:;
			++it;
			goto _iter_begin_1ad72b10b;
		}
		_iter_end_1ad72b10b:;
	};
}



inline void _1a9a7cc7a_optimizePackage(_1a9a7b41b_Optimizer* _self_, jule::Ptr<_1a8da3dc6_Package>* _8839_p) {
	_1a9a7c461_optimizeGlobals(_self_, _8839_p);
	_1a9a7c719_optimizeFunctions(_self_, _8839_p);
	_1a9a7c9c2_optimizeStructs(_self_, _8839_p);
}



inline void _1a9a7ce78_Optimize(_1a9a7b41b_Optimizer* _self_) {
	_1a9a7d220_detectEnabled();
	if (_1a90978b1_Deadcode) {
		_1a9a6d71b_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1a9a7b21d_scopeEnabled || _1a9a7ae54_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad72de66:;
			if (it != expr_end) {
				jule::Ptr<_1a8da0ea0_ImportInfo> _10425_u = *it;
				{
					if ((!((*(_10425_u))._field_Binded))) {
						_1a9a7cc7a_optimizePackage(_self_, &((*_10425_u.alloc)._field_Package));
					};
				}
				_iter_next_1ad72de66:;
				++it;
				goto _iter_begin_1ad72de66;
			}
			_iter_end_1ad72de66:;
		};
		_1a9a7cc7a_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1a90978b1_Deadcode) {
		_1a9a73c82_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a9a7b41b_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1a9a7d770_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1a9aa7eb4_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1a9a7d770_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1a9aa913b_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a9aaa989_LogFlat(_224743e15_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1a9aaabba_LogError(_224743e15_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1a9a7d770_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_20a2a9489_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_20a2a9489_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _22469bca2_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I32 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I32 _3817_oldLen = _3617_line.len();;
		_3617_line=_22469bca2_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _20a2a9489_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_2246952b7_Repeat(jule::Str::lit(" ", 1), _4413_row.len()));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_2246952b7_Repeat(jule::Str::lit(" ", 1), ((*(_1925_l))._field_Column - _3717_offset)));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_2246952b7_Repeat(jule::Str::lit(" ", 1), _4413_row.len()));
			jule::out(jule::Str::lit(" | ", 3));
			static__1a9aa7eb4_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1a9aaadeb_Log(_224743e15_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1ad60901c:;
			{
				static__1a9aaa989_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1ad608a77:;
			{
				static__1a9aaabba_LogError(_6520_l);
			}
		}
		_match_end_1ad0debce:;
	};
}



inline void static__1a9aab12c_PrintLogs(jule::Slice<_224743e15_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad60a67d:;
		if (it != expr_end) {
			_224743e15_Log *_7616_l = it;
			{
				static__1a9aaadeb_Log(_7616_l);
			}
			_iter_next_1ad60a67d:;
			++it;
			goto _iter_begin_1ad60a67d;
		}
		_iter_end_1ad60a67d:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_20a2a9489_Itoa((*(_7526_logs)).len()));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1a9aaa6ae_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2d42d3_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1aa2d49a9_Time static__1aa2d4d61_Unix(jule::U64 _9120_sec) {
	return _1aa2d49a9_Time{._field_sec=_9120_sec};;
}



inline _1aa2d49a9_Time static__1aa2d5070_Now(void) {
	return static__1aa2d4d61_Unix(_1aa2d6a99_unix());;
}



inline _1aa2d42d3_AbsTime _1aa2d6758_Abs(_1aa2d49a9_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1aa2d3744_mdays[static_cast<jule::I32>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1aa2d3744_mdays[static_cast<jule::I32>(_16913_months)];
		}
	_iter_next_1ad63804b:;
	}
	_iter_end_1ad63804b:;;
	_1aa2d42d3_AbsTime _17413_t = _1aa2d42d3_AbsTime{};;
	_17413_t._field_Year=((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU);
	_17413_t._field_Month=(_16913_months + 2LLU);
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=(_13613_remDays + 1LLU);
	_17413_t._field_WeekDay=((3LLU + _12813_days) % 7LL);
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=(_12913_remSecs / 3600LLU);
	_17413_t._field_Minute=((_12913_remSecs / 60LLU) % 60LL);
	_17413_t._field_Second=(_12913_remSecs % 60LL);
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2d49a9_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa20da15_scopeCoder> static__1aa20e175_new(jule::Ptr<_1aa2e0586_ObjectCoder>* _7224_oc) {
	return jule::new_ptr<_1aa20da15_scopeCoder>(_1aa20da15_scopeCoder{._field_oc=(*(_7224_oc))});;
}



inline void _1ad6d457b_iterHead(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d80c4e_RangeIter>* _7932_it, jule::Bool* _7944_ref, jule::Str _7955_begin) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a90975b4_Copy && _1aa215d3b_isCopyOptimizable(&((*((*(_7932_it))))._field_Expr)))) {
		(*(_7944_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7932_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ad6d78e2:;
				{
					jule::Ptr<_1a8de41ad_Var> _8817_v = (*((*((*(_7932_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1a8de41ad_Var>();;
					if ((*(_8817_v))._field_Reference) {
						_1aa226be8_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_7932_it))))._field_Expr))._field_Model);
						goto _match_end_1ad6d8052;
					};
					goto _case_begin_1ad6d80a7;
				}
			}
			else {
				_case_begin_1ad6d80a7:;
				{
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1aa226be8_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_7932_it))))._field_Expr))._field_Model);
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1ad6d8052:;
		};
	} else {
		_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_7932_it))))._field_Expr))._field_Model);
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_7944_ref))) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("begin();\n", 9));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_7944_ref))) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("end();\n", 7));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _7955_begin);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
}



inline void _1aa20e84b_rangeIndexIter(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d80c4e_RangeIter>* _12839_it) {
	_2234c269a_StrBuilder _12913_sb = static__2234c2ac9_New(64LL);;
	static__1aa230b58_iterBegin(&(_12913_sb), static_cast<jule::Uintptr>((*(_12839_it))));
	jule::Str _1319_begin = _2234c3932_Str(&_12913_sb);;
	_2234c3b30_Clear(&_12913_sb);
	static__1aa231230_iterNext(&(_12913_sb), static_cast<jule::Uintptr>((*(_12839_it))));
	jule::Str _1349_next = _2234c3932_Str(&_12913_sb);;
	jule::Bool _13613_ref = false;;
	_1ad6d457b_iterHead(_self_, _12839_it, &(_13613_ref), _1319_begin);
	if (((*((*(_12839_it))))._field_KeyA != nullptr)) {
		_1aa2e8b77_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12839_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ad6e502b, jule::Ptr<__jule_anon_1ad6e502b_ctx>::make(__jule_anon_1ad6e502b_ctx{._self_=_self_,._13613_ref=_13613_ref}).as<jule::Uintptr>(), __jule_anon_1ad6e502b_ctx_handler));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1aa2e1620_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_12839_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12839_it))))._field_KeyB.alloc)._field_Reference=(_1a90975b4_Copy && _1aa216204_isIterCopyOptimizable(&((*((*(_12839_it))))._field_Expr), &((*((*(_12839_it))))._field_KeyB)));
		_1aa2e8b77_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12839_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1ad6e89e1, jule::Ptr<__jule_anon_1ad6e89e1_ctx>::make(__jule_anon_1ad6e89e1_ctx{._self_=_self_,._12839_it=_12839_it}).as<jule::Uintptr>(), __jule_anon_1ad6e89e1_ctx_handler));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1aa2e1620_indent((*_self_.alloc)._field_oc);
	};
	_1aa21509e_scope(_self_, (*((*(_12839_it))))._field_Scope);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _1349_next);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	if (((*((*(_12839_it))))._field_KeyA != nullptr)) {
		static__1aa23086c_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_12839_it))))._field_KeyA);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1aa2e1620_indent((*_self_.alloc)._field_oc);
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _1319_begin);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	static__1aa230e44_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12839_it))));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1aa20eb04_rangeHashmapIter(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d80c4e_RangeIter>* _19541_it) {
	_2234c269a_StrBuilder _19613_sb = static__2234c2ac9_New(64LL);;
	static__1aa230b58_iterBegin(&(_19613_sb), static_cast<jule::Uintptr>((*(_19541_it))));
	jule::Str _1989_begin = _2234c3932_Str(&_19613_sb);;
	_2234c3b30_Clear(&_19613_sb);
	static__1aa231230_iterNext(&(_19613_sb), static_cast<jule::Uintptr>((*(_19541_it))));
	jule::Str _2019_next = _2234c3932_Str(&_19613_sb);;
	jule::Bool _20313_ref = false;;
	_1ad6d457b_iterHead(_self_, _19541_it, &(_20313_ref), _1989_begin);
	if (((*((*(_19541_it))))._field_KeyA != nullptr)) {
		_1aa2e8b77_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19541_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ad707eb7, jule::Ptr<__jule_anon_1ad707eb7_ctx>::make(__jule_anon_1ad707eb7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad707eb7_ctx_handler));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1aa2e1620_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_19541_it))))._field_KeyB != nullptr)) {
		_1aa2e8b77_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19541_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1ad70a43c, jule::Ptr<__jule_anon_1ad70a43c_ctx>::make(__jule_anon_1ad70a43c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad70a43c_ctx_handler));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1aa2e1620_indent((*_self_.alloc)._field_oc);
	};
	_1aa21509e_scope(_self_, (*((*(_19541_it))))._field_Scope);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _2019_next);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _1989_begin);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	static__1aa230e44_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19541_it))));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1aa20edac_strRuneIter(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a90791cd_StrRuneIter> _24235_it) {
	_2234c269a_StrBuilder _24313_sb = static__2234c2ac9_New(64LL);;
	static__1aa230b58_iterBegin(&(_24313_sb), static_cast<jule::Uintptr>((*(_24235_it))._field_Base));
	jule::Str _2459_begin = _2234c3932_Str(&_24313_sb);;
	_2234c3b30_Clear(&_24313_sb);
	static__1aa231230_iterNext(&(_24313_sb), static_cast<jule::Uintptr>((*_24235_it.alloc)._field_Base));
	jule::Str _2489_next = _2234c3932_Str(&_24313_sb);;
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	jule::Bool _25413_ref = false;;
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a90975b4_Copy && _1aa215d3b_isCopyOptimizable(&((*_24235_it.alloc)._field_Expr)))) {
		_25413_ref=true;
		{
			auto &_match_expr{ (*((*(_24235_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ad71834b:;
				{
					jule::Ptr<_1a8de41ad_Var> _26017_v = (*((*(_24235_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a8de41ad_Var>();;
					if ((*(_26017_v))._field_Reference) {
						_1aa226be8_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24235_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1ad7189ab;
					};
					goto _case_begin_1ad718a11;
				}
			}
			else {
				_case_begin_1ad718a11:;
				{
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1aa226be8_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24235_it.alloc)._field_Expr))._field_Model);
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1ad7189ab:;
		};
	} else {
		_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24235_it.alloc)._field_Expr))._field_Model);
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("char *it = expr", 15));
	if (_25413_ref) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("operator char*();\n", 18));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("const char *end = it + expr", 27));
	if (_25413_ref) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("len();\n", 7));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	if (((*((*_24235_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1aa2e8b77_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24235_it.alloc)._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ad884a28, jule::Ptr<__jule_anon_1ad884a28_ctx>::make(__jule_anon_1ad884a28_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad884a28_ctx_handler));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1aa2e1620_indent((*_self_.alloc)._field_oc);
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("std::size_t len;\n", 17));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	if (((*(*_24235_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		_1aa2e8b77_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24235_it.alloc)._field_Base.alloc)._field_KeyB), nullptr);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1aa2e1620_indent((*_self_.alloc)._field_oc);
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _2459_begin);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("std::tie(", 9));
	if (((*(*_24235_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		static__1aa23086c_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24235_it.alloc)._field_Base.alloc)._field_KeyB);
	} else {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("std::ignore", 11));
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", len) = jule::utf8_decode_rune_str(it, end - it", 48));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa21509e_scope(_self_, (*(*_24235_it.alloc)._field_Base.alloc)._field_Scope);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _2489_next);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("it += len;\n", 11));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	if (((*(*_24235_it.alloc)._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1aa23086c_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24235_it.alloc)._field_Base.alloc)._field_KeyA);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1aa2e1620_indent((*_self_.alloc)._field_oc);
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _2459_begin);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1aa210165_ifCase(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d7e335_If> _35030_i) {
	if (((*(_35030_i))._field_Expr != nullptr)) {
		_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_35030_i.alloc)._field_Expr);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	};
	_1aa21509e_scope(_self_, (*_35030_i.alloc)._field_Scope);
}



inline void _1aa21041d_conditional(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d7ea50_Conditional> _35935_c) {
	jule::Bool _36013_writed = false;;
	{
		auto expr = &((*(_35935_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad899983:;
		if (it != expr_end) {
			jule::Ptr<_1a8d7e335_If> _36121_elif = *it;
			{
				if ((_36121_elif == nullptr)) {
					goto _iter_next_1ad899983;
				};
				if (_36013_writed) {
					_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_36013_writed=true;
				_1aa210165_ifCase(_self_, _36121_elif);
			}
			_iter_next_1ad899983:;
			++it;
			goto _iter_begin_1ad899983;
		}
		_iter_end_1ad899983:;
	};
	if (((*_35935_c.alloc)._field_Default != nullptr)) {
		if (_36013_writed) {
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" else ", 6));
		};
		_1aa21509e_scope(_self_, (*(*_35935_c.alloc)._field_Default.alloc)._field_Scope);
	};
}



inline void _1aa2106c6_infIter(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d7ed4c_InfIter> _37931_it) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa21509e_scope(_self_, (*(_37931_it))._field_Scope);
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	static__1aa231230_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_37931_it));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	static__1aa230e44_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_37931_it));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1aa21097e_whileIter(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d80303_WhileIter> _39633_it) {
	if ((((*(_39633_it))._field_Expr != nullptr) && ((*_39633_it.alloc)._field_Next == nullptr))) {
		_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39633_it.alloc)._field_Expr);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39633_it))._field_Expr != nullptr)) {
			_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39633_it.alloc)._field_Expr);
		};
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
		if (((*_39633_it.alloc)._field_Next != nullptr)) {
			_1aa214a3d_st(_self_, (*_39633_it.alloc)._field_Next);
		};
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39633_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa21509e_scope(_self_, (*_39633_it.alloc)._field_Scope);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	static__1aa231230_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39633_it));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	static__1aa230e44_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39633_it));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1aa210c37_rangeIter(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d80c4e_RangeIter> _43533_it) {
	{
		
		if ((_1a8e866c3_Slc((*((*(_43533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8b02a1:;
			{
				_1aa20e84b_rangeIndexIter(_self_, &(_43533_it));
			}
		}
		else if ((_1a8e8643c_Arr((*((*(_43533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8aee60:;
			{
				_1aa20e84b_rangeIndexIter(_self_, &(_43533_it));
			}
		}
		else if ((_1a8e8720c_Map((*((*(_43533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8aeec6:;
			{
				_1aa20eb04_rangeHashmapIter(_self_, &(_43533_it));
			}
		}
		else {
			_case_begin_1ad8aede9:;
			{
				_1aa20e84b_rangeIndexIter(_self_, &(_43533_it));
			}
		}
		_match_end_1ad8aecea:;
	};
}



inline void _1aa210ee0_cont(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d810d4_ContSt> _44824_c) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1aa231230_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_44824_c))._field_It);
}



inline void _1aa211298_label(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d817aa_Label> _45325_l) {
	static__1aa23151b_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45325_l));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":", 1));
}



inline void _1aa211551_gotoSt(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d81b84_GotoSt> _45826_gt) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1aa23151b_label(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_45826_gt))._field_Label));
}



inline void _1aa211809_postfix(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d8205d_Postfix> _46331_p) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_46331_p))._field_Expr);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, (*_46331_p.alloc)._field_Op);
}



inline void _1aa211ab2_assign(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d82514_Assign> _47030_a) {
	_1aa21c32b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_47030_a))._field_Left))._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, (*((*_47030_a.alloc)._field_Op))._field_Kind);
	_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_47030_a.alloc)._field_Right))._field_Model);
}



inline void _1aa211d6a_mapLookupAssign(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d829ba_MultiAssign>* _47640_a) {
	jule::Ptr<_1a8d319ad_IndexingExprModel> _47713_iem = (*((*(_47640_a))))._field_Right.cast_ptr<_1a8d319ad_IndexingExprModel>(&__jule_any_type44);;
	_1aa21c32b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_47713_iem))._field_Expr))._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".lookup(", 8));
	_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_47713_iem.alloc)._field_Index))._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_47640_a))))._field_Left[0LL] != nullptr)) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47640_a))))._field_Left[0LL]))._field_Model);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_47640_a))))._field_Left[1LL] != nullptr)) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47640_a))))._field_Left[1LL]))._field_Model);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa212123_multiAssignTup(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d829ba_MultiAssign>* _49939_a) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	jule::Ptr<_1a8d34818_TupleExprModel> _50313_tup = (*((*(_49939_a))))._field_Right.cast_ptr<_1a8d34818_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_50313_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8c5838:;
		if (it != expr_end) {
			jule::I32 _50514_i = it - expr->begin();
			jule::Ptr<_1a8e4bcb5_Data> _50521_r = *it;
			{
				_1aa2e1620_indent((*_self_.alloc)._field_oc);
				jule::Ptr<_1a8e4bcb5_Data> _50717_l = (*((*(_49939_a))))._field_Left[_50514_i];;
				if ((_50717_l != nullptr)) {
					{
						auto &_match_expr{ (*(_50717_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1ad8c861b:;
							{
								jule::Ptr<_1a8de41ad_Var> _51125_v = (*(_50717_l))._field_Model.unsafe_cast_ptr<_1a8de41ad_Var>();;
								if (((*(_51125_v))._field_Reference && (!(_1a8de4587_IsInitialized(_51125_v))))) {
									static__1aa23086c_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _51125_v);
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" = &(", 5));
									_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_50521_r))._field_Model);
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_49939_a))))._field_Left[_50514_i]=nullptr;
									goto _iter_next_1ad8c5838;
								};
							}
						}
						_match_end_1ad8c85b6:;
					};
					_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_50717_l.alloc)._field_Kind);
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
					static__1aa22dabd_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1aa20d2a6_assignArgName, static_cast<jule::Uintptr>(_50514_i));
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				};
				_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_50521_r.alloc)._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad8c5838:;
			++it;
			_50514_i++;
			goto _iter_begin_1ad8c5838;
		}
		_iter_end_1ad8c5838:;
	};
	{
		auto expr = &((*((*(_49939_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8ce3d0:;
		if (it != expr_end) {
			jule::I32 _53214_i = it - expr->begin();
			jule::Ptr<_1a8e4bcb5_Data> _53221_l = *it;
			{
				if ((_53221_l == nullptr)) {
					goto _iter_next_1ad8ce3d0;
				};
				_1aa2e1620_indent((*_self_.alloc)._field_oc);
				_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_53221_l))._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				static__1aa22dabd_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1aa20d2a6_assignArgName, static_cast<jule::Uintptr>(_53214_i));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad8ce3d0:;
			++it;
			_53214_i++;
			goto _iter_begin_1ad8ce3d0;
		}
		_iter_end_1ad8ce3d0:;
	};
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1aa2123cb_multiAssignFn(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d829ba_MultiAssign>* _54838_a) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	jule::Ptr<_1a8d3112d_FnCallExprModel> _55313_f = (*((*(_54838_a))))._field_Right.cast_ptr<_1a8d3112d_FnCallExprModel>(&__jule_any_type33);;
	_1aa30bbac_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_55313_f))._field_Func))._field_Result));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_54838_a))))._field_Right);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1a8e90bd8_Tuple> _55913_tup = _1a8e87493_Tup((*(*_55313_f.alloc)._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_54838_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8d8cad:;
		if (it != expr_end) {
			jule::I32 _56014_i = it - expr->begin();
			jule::Ptr<_1a8e4bcb5_Data> _56021_l = *it;
			{
				if ((_56021_l != nullptr)) {
					;
					_1aa2e1620_indent((*_self_.alloc)._field_oc);
					_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_56021_l.alloc)._field_Model);
					{
						
						if (_1a8e83725_Equal((*(_55913_tup))._field_Types[_56014_i], (*_56021_l.alloc)._field_Kind)) {
							_case_begin_1ad8e578c:;
							{
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_56014_i));
							}
						}
						else if (_1aa2290e6_isAny(&((*_56021_l.alloc)._field_Kind))) {
							_case_begin_1ad8dce49:;
							{
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_56014_i));
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_1aa2e2434_pushAnyType((*_self_.alloc)._field_oc, (*(_55913_tup))._field_Types[_56014_i])));
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1ad8da320:;
							{
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
								if ((_1a8e86e76_Trait((*(_55913_tup))._field_Types[_56014_i].ptr()) != nullptr)) {
									jule::Ptr<_1a8d5034a_Trait> _57929_t1 = _1a8e86e76_Trait((*_56021_l.alloc)._field_Kind.ptr());;
									jule::Ptr<_1a8d5034a_Trait> _58029_t2 = _1a8e86e76_Trait((*_55913_tup.alloc)._field_Types[_56014_i].ptr());;
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_56014_i));
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".mask<", 6));
									static__1aa22e8d2_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _57929_t1);
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
									_1aa2e3600_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _57929_t1, _58029_t2);
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
									goto _match_end_1ad8db343;
								};
								_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_56021_l.alloc)._field_Kind);
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_56014_i));
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_1aa2e328c_findTypeOffset((*_self_.alloc)._field_oc, _1a8e86e76_Trait((*_56021_l.alloc)._field_Kind), (*_55913_tup.alloc)._field_Types[_56014_i])));
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						_match_end_1ad8db343:;
					};
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1ad8d8cad:;
			++it;
			_56014_i++;
			goto _iter_begin_1ad8d8cad;
		}
		_iter_end_1ad8d8cad:;
	};
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1aa212684_multiAssign(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d829ba_MultiAssign> _60735_a) {
	{
		auto expr = &((*(_60735_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8eb320:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> _61021_d = *it;
			{
				_1aa2e8b77_varInitExpr((*(_self_))._field_oc, &(_61021_d), nullptr);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
				_1aa2e1620_indent((*_self_.alloc)._field_oc);
			}
			_iter_next_1ad8eb320:;
			++it;
			goto _iter_begin_1ad8eb320;
		}
		_iter_end_1ad8eb320:;
	};
	{
		auto &_match_expr{ (*(_60735_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad8eba3a:;
			{
				_1aa211d6a_mapLookupAssign(_self_, &(_60735_a));
				return;;
			}
		}
		_match_end_1ad8eb9d5:;
	};
	{
		auto &_match_expr{ (*(_60735_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad8edcc3:;
			{
				_1aa212123_multiAssignTup(_self_, &(_60735_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad8ed520:;
			{
				_1aa2123cb_multiAssignFn(_self_, &(_60735_a));
			}
		}
		else {
			_case_begin_1ad8ed4a9:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:629:13"));;
			}
		}
		_match_end_1ad8ed454:;
	};
}



inline jule::Fn<void> _1aa2129c5_matchExpr(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d8312a_Match> _63333_m) {
	if ((!(_1a8e4c6bc_IsConst((*(_63333_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1ad9008b8, jule::Ptr<__jule_anon_1ad9008b8_ctx>::make(__jule_anon_1ad9008b8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad9008b8_ctx_handler);;
	};
	if (((!(_20a2bba40_IsBool((*(*_63333_m.alloc)._field_Expr.alloc)._field_Constant.ptr()))) || (!(_20a2b9444_ReadBool((*(*_63333_m.alloc)._field_Expr.alloc)._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1ad901bc7, jule::Ptr<__jule_anon_1ad901bc7_ctx>::make(__jule_anon_1ad901bc7_ctx{._self_=_self_,._63333_m=_63333_m}).as<jule::Uintptr>(), __jule_anon_1ad901bc7_ctx_handler);;
	};
	return nullptr;;
}



inline void _1aa212d38_case(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d8312a_Match> _64328_m, jule::Ptr<_1a8d83b53_Case> _64343_c) {
	if ((((*(_64343_c))._field_Exprs.len() != 0LL) && (!((*(_64328_m))._field_Comptime)))) {
		if ((((*_64328_m.alloc)._field_Cases.len() > 0LL) && ((*_64328_m.alloc)._field_Cases[0LL] == _64343_c))) {
			_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_64343_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad905cec:;
			if (it != expr_end) {
				jule::I32 _65018_i = it - expr->begin();
				jule::Ptr<_1a8e4bcb5_Data> _65025_expr = *it;
				{
					{
						
						if ((!((*_64328_m.alloc)._field_TypeMatch))) {
							_case_begin_1ad90e9b5:;
							{
								jule::Fn<void> _65321_caseExpr = _1aa2129c5_matchExpr(_self_, _64328_m);;
								if (_1a8e4ca0d_GoodOperand((*_64328_m.alloc)._field_Expr.ptr(), &(_65025_expr))) {
									if ((_65321_caseExpr != nullptr)) {
										_65321_caseExpr();
										_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_65025_expr))._field_Model);
								} else {
									_1aa21c32b_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_65025_expr))._field_Model);
									if ((_65321_caseExpr != nullptr)) {
										_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
										_65321_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1ad9069ce:;
							{
								_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1a8e8301b_TypeKind> _66925_tk = (*(_65025_expr))._field_Model.cast_ptr<_1a8e8301b_TypeKind>(&__jule_any_type84);;
								if ((_1a8e86e76_Trait((*((*_64328_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".type_is(", 9));
									_1aa219911_boolean((*(*_self_.alloc)._field_oc.alloc)._field_ec, (_1a8e85903_Sptr((*_65025_expr.alloc)._field_Kind) != nullptr));
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1aa22e8d2_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1a8e86e76_Trait((*(*_64328_m.alloc)._field_Expr.alloc)._field_Kind));
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_1aa2e328c_findTypeOffset((*_self_.alloc)._field_oc, _1a8e86e76_Trait((*(*_64328_m.alloc)._field_Expr.alloc)._field_Kind), (*_65025_expr.alloc)._field_Kind)));
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I32 _67925_j = _1aa2e2434_pushAnyType((*_self_.alloc)._field_oc, _66925_tk);;
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_67925_j));
								};
							}
						}
						_match_end_1ad9068d0:;
					};
					if ((((*_64343_c.alloc)._field_Exprs.len() - _65018_i) > 1LL)) {
						_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1ad905cec:;
				++it;
				_65018_i++;
				goto _iter_begin_1ad905cec;
			}
			_iter_end_1ad905cec:;
		};
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_64328_m))._field_Default == _64343_c) && ((*_64328_m.alloc)._field_Cases.len() != 0LL))) {
		_1aa2e1620_indent((*(_self_))._field_oc);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("else ", 5));
	};
	_1aa2e1224_addIndent((*(_self_))._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	static__1aa231ae3_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_64343_c));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_64343_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1aa2e1620_indent((*_self_.alloc)._field_oc);
		_1aa21509e_scope(_self_, (*_64343_c.alloc)._field_Scope);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	};
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1aa2130e1_matchSt(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d8312a_Match> _71331_m) {
	if ((((*(_71331_m))._field_Cases.len() == 0LL) && ((*_71331_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_71331_m.alloc)._field_Comptime && (((*_71331_m.alloc)._field_Default == nullptr) || ((*((*((*_71331_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	if (((!((*_71331_m.alloc)._field_Comptime)) && (!(_1a8e4c6bc_IsConst((*_71331_m.alloc)._field_Expr.ptr()))))) {
		if ((_1a90975b4_Copy && _1aa215d3b_isCopyOptimizable(&((*_71331_m.alloc)._field_Expr)))) {
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(*_71331_m.alloc)._field_Expr.alloc)._field_Model);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" };\n", 4));
		_1aa2e1620_indent((*_self_.alloc)._field_oc);
	};
	if (((*_71331_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_71331_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad922522:;
			if (it != expr_end) {
				jule::Ptr<_1a8d83b53_Case> _74125_c = *it;
				{
					if ((_74125_c == nullptr)) {
						goto _iter_next_1ad922522;
					};
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1aa2e1620_indent((*_self_.alloc)._field_oc);
					_1aa212d38_case(_self_, _71331_m, _74125_c);
				}
				_iter_next_1ad922522:;
				++it;
				goto _iter_begin_1ad922522;
			}
			_iter_end_1ad922522:;
		};
	};
	if (((*_71331_m.alloc)._field_Default != nullptr)) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1aa212d38_case(_self_, _71331_m, (*_71331_m.alloc)._field_Default);
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	static__1aa231807_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_71331_m));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1aa213399_fallSt(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d8434b_FallSt> _76826_f) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1aa231ae3_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_76826_f))._field_DestCase);
}



inline void _1aa213652_breakSt(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d814ad_BreakSt> _77327_b) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_77327_b))._field_It != 0LLU)) {
		static__1aa230e44_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_77327_b.alloc)._field_It);
	} else {
		static__1aa231807_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_77327_b))._field_Mtch);
	};
}



inline void _1aa21390a_setResult(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d846e2_RetSt> _78233_r) {
	if (((*((*((*((*(_78233_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_78233_r.alloc)._field_Expr);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		_1aa2e1620_indent((*_self_.alloc)._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_78233_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad92c340:;
			{
				jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> _79217_datas = (*((*(_78233_r))._field_Expr.unsafe_cast_ptr<_1a8d34818_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_79217_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad931014:;
					if (it != expr_end) {
						jule::I32 _79317_i = it - expr->begin();
						jule::Ptr<_1a8e4bcb5_Data> _79320_data = *it;
						{
							_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_79317_i));
							_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
							_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_79320_data))._field_Model);
							_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
							_1aa2e1620_indent((*_self_.alloc)._field_oc);
						}
						_iter_next_1ad931014:;
						++it;
						_79317_i++;
						goto _iter_begin_1ad931014;
					}
					_iter_end_1ad931014:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad92eed0:;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1aa226be8_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_78233_r.alloc)._field_Expr);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1ad92eb06:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:806:13"));;
			}
		}
		_match_end_1ad92eaa1:;
	};
}



inline void _1aa213bb3_retSt(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d846e2_RetSt> _81029_r) {
	if (_1a8d3c414_IsVoid((*((*(_81029_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*(*_81029_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_81029_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*(*_81029_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_81029_r.alloc)._field_Func.alloc)._field_Result);
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=", 10));
			_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_81029_r.alloc)._field_Expr);
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
		} else {
			_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_81029_r.alloc)._field_Expr);
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_81029_r))._field_Expr != nullptr)) {
		_1aa21390a_setResult(_self_, _81029_r);
	};
	if ((*((*((*_81029_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1aa30bbac_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*(*_81029_r.alloc)._field_Func.alloc)._field_Result));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1aa213e6b_var(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8de41ad_Var> _84627_v) {
	if ((!((*(_84627_v))._field_Constant))) {
		_1aa2e8e30_var((*(_self_))._field_oc, _84627_v);
	};
}



inline void _1aa214224_mutSlicing(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a9077dbe_MutSlicingExprModel> _85234_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_85234_m))._field_Expr);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_22eb8c9d5_Production))) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, &((*_85234_m.alloc)._field_Token));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_85234_m.alloc)._field_Left);
	if (((*_85234_m.alloc)._field_Right != nullptr)) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_85234_m.alloc)._field_Right);
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1aa2144cc_swap(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a9076b6a_SwapExprModel> _86928_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_86928_m))._field_Left))._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1aa21c32b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_86928_m.alloc)._field_Right))._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa214785_exceptionalForwarding(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a90767e6_ExceptionalForwardingExprModel> _87745_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1aa21e00e_pureFuncCall((*(*_self_.alloc)._field_oc.alloc)._field_ec, &((*(_87745_m))._field_Expr));
}



inline void _1aa214a3d_st(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Any _88326_st) {
	if ((_88326_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _88326_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ad94ce87:;
			{
				_1aa21509e_scope(_self_, _88326_st.unsafe_cast_ptr<_1a8d7de17_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad94d21d:;
			{
				_1aa213e6b_var(_self_, _88326_st.unsafe_cast_ptr<_1a8de41ad_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad94d284:;
			{
				_1aa226be8_model((*((*(_self_))._field_oc))._field_ec, (*(_88326_st.unsafe_cast_ptr<_1a8e4bcb5_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad94d9e3:;
			{
				_1aa21041d_conditional(_self_, _88326_st.unsafe_cast_ptr<_1a8d7ea50_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ad94da59:;
			{
				_1aa2106c6_infIter(_self_, _88326_st.unsafe_cast_ptr<_1a8d7ed4c_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ad94dac0:;
			{
				_1aa21097e_whileIter(_self_, _88326_st.unsafe_cast_ptr<_1a8d80303_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ad94db36:;
			{
				_1aa210c37_rangeIter(_self_, _88326_st.unsafe_cast_ptr<_1a8d80c4e_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ad94db9c:;
			{
				_1aa210ee0_cont(_self_, _88326_st.unsafe_cast_ptr<_1a8d810d4_ContSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ad94dc13:;
			{
				_1aa211298_label(_self_, _88326_st.unsafe_cast_ptr<_1a8d817aa_Label>());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ad94dc79:;
			{
				_1aa211551_gotoSt(_self_, _88326_st.unsafe_cast_ptr<_1a8d81b84_GotoSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ad94dce0:;
			{
				_1aa211809_postfix(_self_, _88326_st.unsafe_cast_ptr<_1a8d8205d_Postfix>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ad94dd56:;
			{
				_1aa211ab2_assign(_self_, _88326_st.unsafe_cast_ptr<_1a8d82514_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ad94ddbc:;
			{
				_1aa212684_multiAssign(_self_, _88326_st.unsafe_cast_ptr<_1a8d829ba_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ad94de33:;
			{
				_1aa2130e1_matchSt(_self_, _88326_st.unsafe_cast_ptr<_1a8d8312a_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ad94deaa:;
			{
				_1aa213399_fallSt(_self_, _88326_st.unsafe_cast_ptr<_1a8d8434b_FallSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ad94e032:;
			{
				_1aa213652_breakSt(_self_, _88326_st.unsafe_cast_ptr<_1a8d814ad_BreakSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ad94e0a9:;
			{
				_1aa213bb3_retSt(_self_, _88326_st.unsafe_cast_ptr<_1a8d846e2_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1ad94e131:;
			{
				_1aa224421_pushToSlice((*((*(_self_))._field_oc))._field_ec, _88326_st.unsafe_cast_ptr<_1a907892a_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1ad94e1a8:;
			{
				_1aa2246c9_appendToSlice((*((*(_self_))._field_oc))._field_ec, _88326_st.unsafe_cast_ptr<_1a9078d04_AppendToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1ad94e230:;
			{
				_1aa214224_mutSlicing(_self_, _88326_st.unsafe_cast_ptr<_1a9077dbe_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1ad94e2a7:;
			{
				_1aa2144cc_swap(_self_, _88326_st.unsafe_cast_ptr<_1a9076b6a_SwapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ad94e32e:;
			{
				_1aa214785_exceptionalForwarding(_self_, _88326_st.unsafe_cast_ptr<_1a90767e6_ExceptionalForwardingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1ad94e3a6:;
			{
				_1aa20edac_strRuneIter(_self_, _88326_st.unsafe_cast_ptr<_1a90791cd_StrRuneIter>());
			}
		}
		else {
			_case_begin_1ad94cc9a:;
			{
				_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1ad94cb13:;
	};
}



inline void _1aa214ce6_scopeStmts(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d7de17_Scope>* _93935_s) {
	{
		auto expr = &((*((*(_93935_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad95bd42:;
		if (it != expr_end) {
			jule::Any _94021_st = *it;
			{
				_1aa2e1620_indent((*(_self_))._field_oc);
				_1aa214a3d_st(_self_, _94021_st);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad95bd42:;
			++it;
			goto _iter_begin_1ad95bd42;
		}
		_iter_end_1ad95bd42:;
	};
}



inline void _1aa21509e_scope(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d7de17_Scope> _94829_s) {
	_1aa2e1224_addIndent((*(_self_))._field_oc);
	if ((*(_94829_s))._field_Deferred) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1aa214ce6_scopeStmts(_self_, &(_94829_s));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
	if ((*_94829_s.alloc)._field_Deferred) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1aa215357_commonFuncScope(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _96340_f) {
	if ((!(_1a8d3c414_IsVoid((*((*(_96340_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1a8e90bd8_Tuple> _96517_tup = _1a8e87493_Tup((*((*(_96340_f))))._field_Result.ptr());;
		if ((_96517_tup != nullptr)) {
			_1aa2e1620_indent((*(_self_))._field_oc);
			_1aa30b4d6_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _96517_tup);
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_96517_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ad96509d:;
				if (it != expr_end) {
					jule::I32 _97022_i = it - expr->begin();
					jule::Ptr<_1a8e8301b_TypeKind> _97029_t = *it;
					{
						if (_1aa30e033_shouldInitialized(&(_97029_t))) {
							_1aa2e1620_indent((*_self_.alloc)._field_oc);
							_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_97022_i));
							_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
							_1aa226ea1_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, _97029_t);
							_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1ad96509d:;
					++it;
					_97022_i++;
					goto _iter_begin_1ad96509d;
				}
				_iter_end_1ad96509d:;
			};
		} else if (((*((*(*((*(_96340_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1aa2e1620_indent((*(_self_))._field_oc);
			_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_96340_f))))._field_Result);
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1aa30e033_shouldInitialized(&((*((*(_96340_f))))._field_Result))) {
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1aa226ea1_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_96340_f))))._field_Result);
			};
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1aa214ce6_scopeStmts(_self_, &((*((*(_96340_f))))._field_Scope));
	if (((*(*((*(_96340_f))))._field_Decl.alloc)._field_Exceptional && _1a8d3c414_IsVoid((*((*(_96340_f))))._field_Decl))) {
		_1aa2e1620_indent((*_self_.alloc)._field_oc);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1aa2156ba_anonFuncScope(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel> _100337_m, jule::Str _100358_ident) {
	if (((*((*(_100337_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _10079_closure = _1aa2293b0_isClosure(&(_100337_m));;
	if (_10079_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*(*_self_.alloc)._field_oc.alloc)._field_ec.alloc)._field_varPrefixes,jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a8de41ad_Var>>>::make({jule::__new_closure<jule::Bool,jule::Ptr<_1a8de41ad_Var>>((void*)__jule_anon_1ad972242, jule::Ptr<__jule_anon_1ad972242_ctx>::make(__jule_anon_1ad972242_ctx{._self_=_self_,._100337_m=_100337_m}).as<jule::Uintptr>(), __jule_anon_1ad972242_ctx_handler)}));
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	if (_10079_closure) {
		_1aa2e1620_indent((*_self_.alloc)._field_oc);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, _100358_ident);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, _100358_ident);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1aa215357_commonFuncScope(_self_, &((*_100337_m.alloc)._field_Func));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
	if (_10079_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1aa215973_funcScope(jule::Ptr<_1aa20da15_scopeCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns> _103533_f) {
	if (((*(_103533_f))._field_Scope == nullptr)) {
		return;;
	};
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_1aa215357_commonFuncScope(_self_, &(_103533_f));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1aa20da15_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa218ed7_exprCoder> static__1aa2193a0_new(jule::Ptr<_1aa2e0586_ObjectCoder>* _11324_oc) {
	return jule::new_ptr<_1aa218ed7_exprCoder>(_1aa218ed7_exprCoder{._field_oc=(*(_11324_oc)), });;
}



inline void _1aa219658_string(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_20a2b7552_Const>* _11927_c) {
	jule::Str _1209_content = _20a2b96ca_ReadStr((*(_11927_c)).ptr());;
	if ((_1209_content.len() == 0LL)) {
		_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1259_len = _20a2a91c0_FmtInt(static_cast<jule::I64>(_1209_content.len()), 10LL);;
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str", 9));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("::lit(", 6));
	_1aa227c93_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1209_content);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _1259_len);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa219911_boolean(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Bool _13427_b) {
	if (_13427_b) {
		_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1aa219b0e_nilLit(jule::Ptr<_1aa218ed7_exprCoder> _self_) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1aa219e50_ftoaSpecialCases(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::F64* _14637_x) {
	{
		
		if (_20a25d8d3_IsNaN((*(_14637_x)))) {
			_case_begin_1ad519713:;
			{
				_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_20a25e065_IsInf((*(_14637_x)), 1LL)) {
			_case_begin_1ad5197ac:;
			{
				_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_20a25e065_IsInf((*(_14637_x)), -1LL)) {
			_case_begin_1ad519834:;
			{
				_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1ad51967a:;
			{
				return false;;
			}
		}
		_match_end_1ad51957b:;
	};
	return true;;
}



inline void _1aa21a208_float32(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_20a2b7552_Const>* _16028_c) {
	jule::F64 _1619_x = _20a2ba214_AsF64((*(_16028_c)).ptr());;
	if (_1aa219e50_ftoaSpecialCases(_self_, &(_1619_x))) {
		return;;
	};
	{
		
		if ((_1619_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1ad51d948:;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1619_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1ad51ca13:;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1ad51c99c:;
			{
				_1aa228139_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1619_x, 32LL);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1ad51c86a:;
	};
}



inline void _1aa21a4b1_float64(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_20a2b7552_Const>* _17928_c) {
	jule::F64 _1809_x = _20a2ba214_AsF64((*(_17928_c)).ptr());;
	if (_1aa219e50_ftoaSpecialCases(_self_, &(_1809_x))) {
		return;;
	};
	{
		
		if ((_1809_x == jule::MAX_F64)) {
			_case_begin_1ad5213c9:;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1809_x == jule::MIN_F64)) {
			_case_begin_1ad521000:;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1ad520e89:;
			{
				_1aa228139_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1809_x, 64LL);
			}
		}
		_match_end_1ad520d57:;
	};
}



inline void _1aa21a769_constant(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_20a2b7552_Const> _19732_c) {
	{
		
		if (_20a2bbcc6_IsStr(_19732_c.ptr())) {
			_case_begin_1ad523233:;
			{
				_1aa219658_string(_self_, &(_19732_c));
			}
		}
		else if (_20a2bba40_IsBool(_19732_c.ptr())) {
			_case_begin_1ad523299:;
			{
				_1aa219911_boolean(_self_, _20a2b9444_ReadBool(_19732_c));
			}
		}
		else if (_20a2bc05c_IsF64(_19732_c.ptr())) {
			_case_begin_1ad523310:;
			{
				{
					
					if ((*_19732_c.alloc)._field_Kind.equal("f32", 3)) {
						_case_begin_1ad525bd6:;
						{
							_1aa21a208_float32(_self_, &(_19732_c));
						}
					}
					else {
						_case_begin_1ad525851:;
						{
							_1aa21a4b1_float64(_self_, &(_19732_c));
						}
					}
					_match_end_1ad525752:;
				};
			}
		}
		else if (_20a2bb523_IsI64(_19732_c.ptr())) {
			_case_begin_1ad523376:;
			{
				_1aa228425_itoa(&((*((*(_self_))._field_oc))._field_Buf), _20a2b8e27_ReadI64(_19732_c));
			}
		}
		else if (_20a2bb7a9_IsU64(_19732_c.ptr())) {
			_case_begin_1ad5233dc:;
			{
				_1aa228711_utoa(&((*((*(_self_))._field_oc))._field_Buf), _20a2b91ad_ReadU64(_19732_c));
			}
		}
		else if (_20a2bc2e3_IsNil(_19732_c.ptr())) {
			_case_begin_1ad523453:;
			{
				_1aa219b0e_nilLit(_self_);
			}
		}
		else {
			_case_begin_1ad5231bc:;
			{
				_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1ad5230bd:;
	};
}



inline void _1aa21ab87_divByZeroBinary(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a875ce89_Token>* _22136_op, jule::Ptr<_1a8d2db53_OperandExprModel>* _22153_l, jule::Ptr<_1a8d2db53_OperandExprModel>* _22180_r) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_22136_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1ad528ec5:;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1ad529965:;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1ad5298cc:;
	};
	if ((!(_22eb8c9d5_Production))) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, _22136_op);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\",", 2));
	};
	_1aa21c32b_possibleRefExpr(_self_, (*((*(_22153_l))))._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1aa21c32b_possibleRefExpr(_self_, (*((*(_22180_r))))._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa21ae40_unsafeBinary(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel> _24336_m) {
	if ((((*((*(_24336_m))._field_Op))._field_Id == static_cast<jule::U32>(50LLU)) || ((*(*_24336_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U32>(51LLU)))) {
		if (_1aa2290e6_isAny(&((*((*_24336_m.alloc)._field_Left))._field_Kind))) {
			if (((!(_1a8e840e9_IsNil((*((*_24336_m.alloc)._field_Right))._field_Kind.ptr()))) && (!(_1aa2290e6_isAny(&((*(*_24336_m.alloc)._field_Right.alloc)._field_Kind)))))) {
				_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*(*_24336_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U32>(51LLU))) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("!", 1));
				};
				jule::I32 _25321_i = _1aa2e2434_pushAnyType((*_self_.alloc)._field_oc, (*(*_24336_m.alloc)._field_Right.alloc)._field_Kind);;
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_25321_i));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("_compare(", 9));
				_1aa21c32b_possibleRefExpr(_self_, (*(*_24336_m.alloc)._field_Left.alloc)._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1aa21c32b_possibleRefExpr(_self_, (*(*_24336_m.alloc)._field_Right.alloc)._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1aa21c32b_possibleRefExpr(_self_, (*(*_24336_m.alloc)._field_Left.alloc)._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, (*(*_24336_m.alloc)._field_Op.alloc)._field_Kind);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1aa21c32b_possibleRefExpr(_self_, (*(*_24336_m.alloc)._field_Right.alloc)._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa21b1e8_binary(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d2e14d_BinaryExprModel> _27430_m) {
	{
		auto &_match_expr{ (*((*(_27430_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1ad53ab0d:;
			{
				if ((_1a8e86be0_Struct((*((*(_27430_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1aa21ab87_divByZeroBinary(_self_, &((*_27430_m.alloc)._field_Op), &((*_27430_m.alloc)._field_Left), &((*_27430_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1ad53aa53:;
	};
	_1aa21ae40_unsafeBinary(_self_, _27430_m);
}



inline void _1aa21b4a1_var(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8de41ad_Var> _28627_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad53cd85:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1a8de41ad_Var>> _28716_prefix = *it;
			{
				if (_28716_prefix(_28627_m)) {
					return;;
				};
			}
			_iter_next_1ad53cd85:;
			++it;
			goto _iter_begin_1ad53cd85;
		}
		_iter_end_1ad53cd85:;
	};
	if ((*(_28627_m))._field_Binded) {
		jule::Ptr<_1a8772982_Directive> _29313_d = _1aa30d8a1_findDirective(&((*_28627_m.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_29313_d != nullptr)) {
			_1aa2e1026_writeBytes((*_self_.alloc)._field_oc, _1aa2eda28_concatAllParts((*_29313_d.alloc)._field_Args));
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1aa23086c_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _28627_m);
}



inline void _1aa21b759_structureIns(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns> _30236_m) {
	_1aa304eb3_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _30236_m);
}



inline void _1aa21ba12_unary(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d2e527_UnaryExprModel> _30629_m) {
	{
		auto &_match_expr{ (*((*(_30629_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ad542164:;
			{
				_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1aa21c32b_possibleRefExpr(_self_, (*((*(_30629_m))._field_Expr))._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ad54274c:;
			{
				if ((_22eb8c9d5_Production || (_1a8e85903_Sptr((*((*(_30629_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1ad54265e;
				};
				_1aa21c32b_possibleRefExpr(_self_, (*(*_30629_m.alloc)._field_Expr.alloc)._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, &((*_30629_m.alloc)._field_Op));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1ad54265e:;
	};
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, (*((*(_30629_m))._field_Op))._field_Kind);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1aa21c32b_possibleRefExpr(_self_, (*((*_30629_m.alloc)._field_Expr))._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
}



inline void _1aa21bcba_structureLit(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d2edeb_StructLitExprModel> _33036_m) {
	if ((*((*((*(_33036_m))._field_Strct))._field_Decl))._field_Binded) {
		_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1aa304eb3_structureIns((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_33036_m.alloc)._field_Strct);
	if ((*(*(*_33036_m.alloc)._field_Strct.alloc)._field_Decl.alloc)._field_Binded) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	if (((*_33036_m.alloc)._field_Args.len() > 0LL)) {
		_julec_label_1ad54c911:;
		{
			auto expr = &((*(*_33036_m.alloc)._field_Strct.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad54caa9:;
			if (it != expr_end) {
				jule::I32 _34317_i = it - expr->begin();
				jule::Ptr<_1a8d29104_FieldIns> _34320_f = *it;
				{
					{
						auto expr = &((*_33036_m.alloc)._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad54d912:;
						if (it != expr_end) {
							jule::Ptr<_1a8d2ea55_StructArgExprModel> _34429_arg = *it;
							{
								if (((*(_34429_arg))._field_Field == _34320_f)) {
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
									static__1aa230581_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_34429_arg.alloc)._field_Field))._field_Decl));
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
									_1aa21c32b_possibleRefExpr(_self_, (*((*_34429_arg.alloc)._field_Expr))._field_Model);
									if ((((*(*_33036_m.alloc)._field_Strct.alloc)._field_Fields.len() - _34317_i) > 1LL)) {
										_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1ad54caa9;
								};
							}
							_iter_next_1ad54d912:;
							++it;
							goto _iter_begin_1ad54d912;
						}
						_iter_end_1ad54d912:;
					};
				}
				_iter_next_1ad54caa9:;
				++it;
				_34317_i++;
				goto _iter_begin_1ad54caa9;
			}
			_iter_end_1ad54caa9:;
		};
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1aa21c073_allocStructure(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d301e8_AllocStructLitExprModel> _36138_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1aa230295_structureIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_36138_m))._field_Lit))._field_Strct));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1aa21bcba_structureLit(_self_, (*_36138_m.alloc)._field_Lit);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa21c32b_possibleRefExpr(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Any _36935_expr) {
	{
		auto &_match_expr{ _36935_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad555c6b:;
			{
				jule::Ptr<_1a8de41ad_Var> _37213_v = _36935_expr.unsafe_cast_ptr<_1a8de41ad_Var>();;
				if ((*(_37213_v))._field_Reference) {
					_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1aa226be8_model(_self_, _36935_expr);
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1ad555c16:;
	};
	_1aa226be8_model(_self_, _36935_expr);
}



inline void _1aa21c749_castTraitFromTrait(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3077b_CastingExprModel>* _38343_m, jule::Ptr<_1a8d5034a_Trait> _38369_t1, jule::Ptr<_1a8d5034a_Trait> _38385_t2) {
	_1aa21c32b_possibleRefExpr(_self_, (*((*((*(_38343_m))))._field_Expr))._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1aa2e3600_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _38369_t1, _38385_t2);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa21ca02_casting(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3077b_CastingExprModel> _39631_m) {
	{
		
		if (_1aa2290e6_isAny(&((*(_39631_m))._field_Kind))) {
			_case_begin_1ad55a853:;
			{
				if (_1a8e840e9_IsNil((*_39631_m.alloc)._field_ExprKind.ptr())) {
					_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1a8e861a6_TypeEnum((*_39631_m.alloc)._field_ExprKind) != nullptr)) {
					_1aa21c32b_possibleRefExpr(_self_, (*((*_39631_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I32 _40713_i = _1aa2e2434_pushAnyType((*_self_.alloc)._field_oc, (*_39631_m.alloc)._field_ExprKind);;
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_39631_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1ad55d856:;
						{
							jule::Ptr<_1a8e8aae5_Prim> _41117_prim = _1a8e8566c_Prim((*_39631_m.alloc)._field_ExprKind);;
							if (((_41117_prim != nullptr) && _20a2b68d6_IsInt((*_41117_prim.alloc)._field_Kind))) {
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
								_1aa302730_prim((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _41117_prim);
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
								_1aa21c32b_possibleRefExpr(_self_, (*(*_39631_m.alloc)._field_Expr.alloc)._field_Model);
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1ad55e736;
							};
							goto _case_begin_1ad55e78b;
						}
					}
					else {
						_case_begin_1ad55e78b:;
						{
							_1aa21c32b_possibleRefExpr(_self_, (*(*_39631_m.alloc)._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1ad55e736:;
				};
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_40713_i));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1aa2290e6_isAny(&((*(_39631_m))._field_ExprKind))) {
			_case_begin_1ad55a8ec:;
			{
				_1aa21c32b_possibleRefExpr(_self_, (*((*_39631_m.alloc)._field_Expr))._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a8e85903_Sptr((*_39631_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1a8e85903_Sptr((*_39631_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39631_m.alloc)._field_Kind);
				};
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_22eb8c9d5_Production))) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, &((*_39631_m.alloc)._field_Token));
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_1aa2e2434_pushAnyType((*_self_.alloc)._field_oc, (*_39631_m.alloc)._field_Kind)));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a8e85b89_Ptr((*(_39631_m))._field_ExprKind.ptr()) != nullptr) || (_1a8e85b89_Ptr((*_39631_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad55a963:;
			{
				_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39631_m.alloc)._field_Kind);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")(", 2));
				_1aa21c32b_possibleRefExpr(_self_, (*((*_39631_m.alloc)._field_Expr))._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1a8e86e76_Trait((*(_39631_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1ad55a9c9:;
			{
				if ((_1a8e86e76_Trait((*_39631_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1aa21c749_castTraitFromTrait(_self_, &(_39631_m), _1a8e86e76_Trait((*_39631_m.alloc)._field_Kind), _1a8e86e76_Trait((*_39631_m.alloc)._field_ExprKind));
					return;;
				};
				_1aa21c32b_possibleRefExpr(_self_, (*((*_39631_m.alloc)._field_Expr))._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a8e85903_Sptr((*_39631_m.alloc)._field_Kind) != nullptr)) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1a8e85903_Sptr((*_39631_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39631_m.alloc)._field_Kind);
				};
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_22eb8c9d5_Production))) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, &((*_39631_m.alloc)._field_Token));
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1aa22e8d2_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1a8e86e76_Trait((*_39631_m.alloc)._field_ExprKind));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_1aa2e328c_findTypeOffset((*_self_.alloc)._field_oc, _1a8e86e76_Trait((*_39631_m.alloc)._field_ExprKind), (*_39631_m.alloc)._field_Kind)));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a8e86e76_Trait((*(_39631_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad55aa40:;
			{
				_1aa306c0c_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39631_m.alloc)._field_Kind);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
				_1aa21c32b_possibleRefExpr(_self_, (*((*_39631_m.alloc)._field_Expr))._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1aa22e8d2_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1a8e86e76_Trait((*_39631_m.alloc)._field_Kind));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_1aa2e328c_findTypeOffset((*_self_.alloc)._field_oc, _1a8e86e76_Trait((*_39631_m.alloc)._field_Kind), (*_39631_m.alloc)._field_ExprKind)));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1ad55a6cc:;
	};
	jule::Ptr<_1a8e8aae5_Prim> _4939_prim = _1a8e8566c_Prim((*(_39631_m))._field_Kind.ptr());;
	jule::Ptr<_1a8e8aae5_Prim> _4949_eprim = _1a8e8566c_Prim((*_39631_m.alloc)._field_ExprKind.ptr());;
	if ((((_4949_eprim != nullptr) && (_4939_prim != nullptr)) && _1a8e8e07c_IsStr(_4939_prim))) {
		if (_1a8e8c4dc_IsU8(_4949_eprim)) {
			_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1aa21c32b_possibleRefExpr(_self_, (*((*_39631_m.alloc)._field_Expr))._field_Model);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
	_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39631_m.alloc)._field_Kind);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1aa21c32b_possibleRefExpr(_self_, (*(*_39631_m.alloc)._field_Expr.alloc)._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa21ccaa_models(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Slice<jule::Any> _51230_args) {
	if ((_51230_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_51230_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad589453:;
		if (it != expr_end) {
			jule::I32 _51614_i = it - expr->begin();
			jule::Any _51621_a = *it;
			{
				_1aa21c32b_possibleRefExpr(_self_, _51621_a);
				if (((_51230_args.len() - _51614_i) > 1LL)) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1ad589453:;
			++it;
			_51614_i++;
			goto _iter_begin_1ad589453;
		}
		_iter_end_1ad589453:;
	};
}



inline void _1aa21d063_args(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3112d_FnCallExprModel>* _52429_m) {
	jule::I32 _52513_j = 0LL;;
	if (((((*((*((*(_52429_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_52429_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_52429_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1a8d3aad8_IsSelf((*((*(*((*(_52429_m))))._field_Func.alloc)._field_Params[0LL]))._field_Decl.ptr())))) {
		(_52513_j)++;
	};
	{
		auto expr = &((*((*(_52429_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad58c621:;
		if (it != expr_end) {
			jule::I32 _53013_i = it - expr->begin();
			jule::Any _53016_arg = *it;
			{
				jule::Ptr<_1a8d3dde9_ParamIns> _53113_p = (*(*((*(_52429_m))))._field_Func.alloc)._field_Params[_52513_j];;
				if ((((*(_53113_p))._field_Decl != nullptr) && (*(*_53113_p.alloc)._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _53016_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1ad590415:;
							{
								jule::Ptr<_1a8de41ad_Var> _53521_v = _53016_arg.unsafe_cast_ptr<_1a8de41ad_Var>();;
								if ((*(_53521_v))._field_Reference) {
									_1aa226be8_model(_self_, _53016_arg);
									goto _julec_label_1ad58ed60;
								};
							}
						}
						_match_end_1ad5903b0:;
					};
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1aa226be8_model(_self_, _53016_arg);
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1ad58ed60;
				};
				_1aa21c32b_possibleRefExpr(_self_, _53016_arg);
				_julec_label_1ad58ed60:;
				if ((((*((*(_52429_m))))._field_Args.len() - _53013_i) > 1LL)) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
				(_52513_j)++;
			}
			_iter_next_1ad58c621:;
			++it;
			_53013_i++;
			goto _iter_begin_1ad58c621;
		}
		_iter_end_1ad58c621:;
	};
}



inline void _1aa21d31b_modelForCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Any _55536_expr) {
	{
		auto &_match_expr{ _55536_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad595250:;
			{
				_1aa221891_funcIns(_self_, _55536_expr.unsafe_cast_ptr<_1a8d3ee72_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad5950a7:;
			{
				jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _56117_ssie = _55536_expr.unsafe_cast_ptr<_1a8d33c9b_StructSubIdentExprModel>();;
				if (((*(_56117_ssie))._field_Method != nullptr)) {
					_1aa221891_funcIns(_self_, (*_56117_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1ad5951d9:;
	};
	_1aa21c32b_possibleRefExpr(_self_, _55536_expr);
}



inline void _1aa21d5c4_pushCallInf(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3112d_FnCallExprModel>* _57032_m) {
	if ((_22eb8c9d5_Production || (!((*((*((*(_57032_m))))._field_Func))._field_Anon)))) {
		_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_57032_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_57032_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1ac12da43:;
				{
					if ((*((*((*((*((*((*(_57032_m))))._field_Expr.unsafe_cast_ptr<_1a8d33c9b_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1ac12d9dd:;
		};
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".call", 5));
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(\"", 2));
	_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, &((*((*(_57032_m))))._field_Token));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_57032_m))))._field_Args.len() != 0LL)) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1aa21d915_isWrapped(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3112d_FnCallExprModel>* _59334_m) {
	if ((((!(_1a8d41407_IsBuiltin((*((*(_59334_m))))._field_Func.ptr()))) && ((*((*(*((*(_59334_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1a8d3aad8_IsSelf((*(*(*((*(_59334_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_59334_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1ad597197:;
				{
					jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _59721_ssie = (*((*(_59334_m))))._field_Expr.unsafe_cast_ptr<_1a8d33c9b_StructSubIdentExprModel>();;
					{
						
						if (_1a8d3ad6e_IsRef((*(*(*((*(_59334_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()) || (_1a8e85903_Sptr((*((*(_59721_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1ac13285a:;
							{
								goto _match_end_1ad7335ca;
							}
						}
						else {
							_case_begin_1ad733630:;
							{
								if ((_1a8e86be0_Struct((*((*(_59721_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*_59721_ssie.alloc)._field_Expr.alloc)._field_Lvalue))) {
										_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1aa226be8_model(_self_, (*(*_59721_ssie.alloc)._field_Expr.alloc)._field_Model);
										_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1ad7335ca:;
					};
				}
			}
			_match_end_1ad597142:;
		};
	};
	return false;;
}



inline jule::Bool _1aa21dc56_writeReceiver(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Any _61737_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _61737_m };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac136496:;
			{
				_1aa21c32b_possibleRefExpr(_self_, (*((*(_61737_m.unsafe_cast_ptr<_1a8d2e527_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1ac136694:;
			{
				_1aa21c32b_possibleRefExpr(_self_, (*((*((*(_61737_m.unsafe_cast_ptr<_1a90794ca_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac13662d:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:626:13"));;
			}
		}
		_match_end_1ac1365c8:;
	};
}



inline void _1aa21e00e_pureFuncCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3112d_FnCallExprModel>* _63037_m) {
	jule::Bool _6319_wrapped = _1aa21d915_isWrapped(_self_, _63037_m);;
	_1aa21d31b_modelForCall(_self_, (*((*(_63037_m))))._field_Expr);
	if ((!(_1a8d41407_IsBuiltin((*((*(_63037_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_63037_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_63037_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1aa30dc69_hasDirective(&((*(*(*((*(_63037_m))))._field_Func.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_63037_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac13a7db:;
					if (it != expr_end) {
						jule::I32 _63726_i = it - expr->begin();
						jule::Ptr<_1a8e81635_InsGeneric> _63733_g = *it;
						{
							_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_63733_g))._field_Kind);
							if ((((*(*((*(_63037_m))))._field_Func.alloc)._field_Generics.len() - _63726_i) > 1LL)) {
								_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1ac13a7db:;
						++it;
						_63726_i++;
						goto _iter_begin_1ac13a7db;
					}
					_iter_end_1ac13a7db:;
				};
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1aa21d5c4_pushCallInf(_self_, _63037_m);
	if (((*(*((*(_63037_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_63037_m))))._field_Func.alloc)._field_Anon)))) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_63037_m))))._field_Args.len() > 0LL)) {
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1a8d41407_IsBuiltin((*((*(_63037_m))))._field_Func))) && ((*(*(*((*(_63037_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params.len() > 0LL)) && _1a8d3aad8_IsSelf((*(*(*((*(_63037_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_63037_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1ac1424e6:;
				{
					jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _66121_ssie = (*((*(_63037_m))))._field_Expr.unsafe_cast_ptr<_1a8d33c9b_StructSubIdentExprModel>();;
					{
						
						if (_1a8d3ad6e_IsRef((*(*(*((*(_63037_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr())) {
							_case_begin_1ac147045:;
							{
								_1aa21dc56_writeReceiver(_self_, (*((*(_66121_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1a8e85903_Sptr((*((*(_66121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1ac1435d5:;
							{
								jule::Bool _66821_safe = _1aa21dc56_writeReceiver(_self_, (*(*_66121_ssie.alloc)._field_Expr.alloc)._field_Model);;
								if (_66821_safe) {
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_22eb8c9d5_Production))) {
										_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
										_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, &((*((*(_63037_m))))._field_Token));
										_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
									};
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1ac14354c:;
							{
								if ((_1a8e86be0_Struct((*((*(_66121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_66121_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1ac143d44:;
											{
												jule::Ptr<_1a8de41ad_Var> _68229_v = (*((*(_66121_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1a8de41ad_Var>();;
												if ((*(_68229_v))._field_Reference) {
													goto _match_end_1ac14431c;
												};
												goto _case_begin_1ac144372;
											}
										}
										else {
											_case_begin_1ac144372:;
											{
												_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1ac14431c:;
									};
								};
								if (_6319_wrapped) {
									_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1a8e85b89_Ptr((*(*_66121_ssie.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
									_1aa226be8_model(_self_, (*(*_66121_ssie.alloc)._field_Expr.alloc)._field_Model);
								} else {
									_1aa21c32b_possibleRefExpr(_self_, (*((*((*(*_66121_ssie.alloc)._field_Expr.alloc)._field_Model.cast_ptr<_1a8d2e527_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1ac1434d6:;
					};
					if (((*((*(_63037_m))))._field_Args.len() > 0LL)) {
						_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1ac1421a5:;
				{
					_1aa21c32b_possibleRefExpr(_self_, (*((*((*(_63037_m))))._field_Expr.unsafe_cast_ptr<_1a8d3340a_TraitSubIdentExprModel>()))._field_Expr);
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_63037_m))))._field_Args.len() > 0LL)) {
						_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1ac142480:;
		};
	};
	_1aa21d063_args(_self_, _63037_m);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if (_6319_wrapped) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1aa21e2b7_coFuncCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3112d_FnCallExprModel>* _72035_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_2234c269a_StrBuilder _72313_head = static__2234c2ac9_New(32LL);;
	_2234c313a_WriteStr(&_72313_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_72035_m))))._field_Func))._field_Owner != nullptr)) {
		_2234c313a_WriteStr(&_72313_head, jule::Str::lit("_self_", 6));
		if (((*((*(_72035_m))))._field_Args.len() > 0LL)) {
			_2234c313a_WriteStr(&_72313_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_72035_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac156494:;
		if (it != expr_end) {
			jule::I32 _73113_i = it - expr->begin();
			jule::Any _73116_arg = *it;
			{
				if ((_73113_i > 0LL)) {
					_2234c313a_WriteStr(&_72313_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _73116_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ac1579d4:;
						{
							jule::Ptr<_1a8de41ad_Var> _73721_v = _73116_arg.unsafe_cast_ptr<_1a8de41ad_Var>();;
							static__1aa23086c_var(&(_72313_head), _73721_v);
							goto _iter_next_1ac156494;
						}
					}
					_match_end_1ac157253:;
				};
				jule::Str _74113_name = (jule::Str::lit("_co_arg_", 8) + _20a2a9489_Itoa(_73113_i));;
				_2234c313a_WriteStr(&_72313_head, _74113_name);
				_1aa2e1620_indent((*_self_.alloc)._field_oc);
				_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(*((*(_72035_m))))._field_Func.alloc)._field_Params[_73113_i]))._field_Kind);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*(*((*(_72035_m))))._field_Func.alloc)._field_Params[_73113_i]))._field_Decl))._field_Reference) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
				};
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, _74113_name);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1aa21c32b_possibleRefExpr(_self_, _73116_arg);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _75313_argS = jule::Any(_74113_name, &__jule_any_type4);;
				(*((*(_72035_m))))._field_Args[_73113_i]=(*(((jule::Any*)((&(_75313_argS))))));
			}
			_iter_next_1ac156494:;
			++it;
			_73113_i++;
			goto _iter_begin_1ac156494;
		}
		_iter_end_1ac156494:;
	};
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_2234c2d82_Write(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _2234c43d3_Buf(&_72313_head));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa21e00e_pureFuncCall(_self_, _72035_m);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1aa21e62a_writeUseExpr(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _77137_f, jule::Ptr<_1a8e4bcb5_Data> _77152_d) {
	if ((_1a8e87493_Tup((*(_77152_d))._field_Kind.ptr()) == nullptr)) {
		_1aa21c32b_possibleRefExpr(_self_, (*_77152_d.alloc)._field_Model);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1a8d34818_TupleExprModel> _77713_tup = (*_77152_d.alloc)._field_Model.cast_ptr<_1a8d34818_TupleExprModel>(&__jule_any_type81);;
	_1aa30b4d6_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1a8e87493_Tup((*((*(_77137_f))))._field_Result.ptr()));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_77713_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac16610d:;
		if (it != expr_end) {
			jule::I32 _78013_i = it - expr->begin();
			jule::Ptr<_1a8e4bcb5_Data> _78016_data = *it;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_78013_i));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
				_1aa21c32b_possibleRefExpr(_self_, (*(_78016_data))._field_Model);
				if ((((*(_77713_tup))._field_Datas.len() - _78013_i) > 1LL)) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ac16610d:;
			++it;
			_78013_i++;
			goto _iter_begin_1ac16610d;
		}
		_iter_end_1ac16610d:;
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
}



inline void _1aa21e8d3_funcCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3112d_FnCallExprModel> _79232_m) {
	if ((*(_79232_m))._field_IsCo) {
		_1aa21e2b7_coFuncCall(_self_, &(_79232_m));
		return;;
	};
	if (((_1a8d41407_IsBuiltin((*_79232_m.alloc)._field_Func.ptr()) || (!((*((*(*_79232_m.alloc)._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_79232_m.alloc)._field_Except != nullptr) && ((*(*_79232_m.alloc)._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1aa21e00e_pureFuncCall(_self_, &(_79232_m));
		return;;
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("auto except = ", 14));
	_1aa21e00e_pureFuncCall(_self_, &(_79232_m));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	if (((*_79232_m.alloc)._field_Except != nullptr)) {
		if ((((*(*_79232_m.alloc)._field_Func.alloc)._field_Result == nullptr) || (!((*_79232_m.alloc)._field_Assigned)))) {
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1aa21509e_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_79232_m.alloc)._field_Except);
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _82017_forwarded = _1aa228ada_isForwarded(&((*_79232_m.alloc)._field_Except));;
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_82017_forwarded) {
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _82521_stmt = (*(*_79232_m.alloc)._field_Except.alloc)._field_Stmts[((*(*_79232_m.alloc)._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _82521_stmt };
				
				if (_match_expr.type == &__jule_any_type23) {
					_case_begin_1ad9eb61d:;
					{
						((*((*(_79232_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_79232_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
						_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
						_1aa214ce6_scopeStmts((*(*_self_.alloc)._field_oc.alloc)._field_sc, &((*_79232_m.alloc)._field_Except));
						_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1aa2e1620_indent((*_self_.alloc)._field_oc);
						_1aa21e62a_writeUseExpr(_self_, &((*_79232_m.alloc)._field_Func), _82521_stmt.unsafe_cast_ptr<_1a8e4bcb5_Data>());
						_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
						_1aa2e1620_indent((*_self_.alloc)._field_oc);
						_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1ad9ecb2a:;
					{
						_1aa21509e_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_79232_m.alloc)._field_Except);
					}
				}
				_match_end_1ad9ecac5:;
			};
			if (_82017_forwarded) {
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				_1aa226ea1_initExpr(_self_, (*(*_79232_m.alloc)._field_Func.alloc)._field_Result);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";}", 2));
			};
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
		};
		_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	} else {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, &((*_79232_m.alloc)._field_Token));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1a8d3c414_IsVoid((*(*_79232_m.alloc)._field_Func.alloc)._field_Decl)))) {
			_1aa2e1620_indent((*_self_.alloc)._field_oc);
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	};
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1aa21eb8b_slice(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d31507_SliceExprModel> _86529_m) {
	if (((*(_86529_m))._field_Elems.len() == 0LL)) {
		_1aa304116_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_86529_m.alloc)._field_ElemKind);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1aa304116_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_86529_m.alloc)._field_ElemKind);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("::make({", 8));
	_1aa21ccaa_models(_self_, (*_86529_m.alloc)._field_Elems);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1aa21ee44_indexing(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d319ad_IndexingExprModel> _87732_m) {
	{
		auto &_match_expr{ (*((*(_87732_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ada0e400:;
			{
				_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_22eb8c9d5_Production))) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, &((*(_87732_m))._field_Token));
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _88813_s = _20a2b96ca_ReadStr((*((*(_87732_m))._field_Expr))._field_Model.unsafe_cast_ptr<_20a2b7552_Const>().ptr());;
				_1aa227c93_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _88813_s);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_88813_s.len()));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1aa21c32b_possibleRefExpr(_self_, (*((*_87732_m.alloc)._field_Index))._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1ada0e39a:;
	};
	_1aa21c32b_possibleRefExpr(_self_, (*((*_87732_m.alloc)._field_Expr))._field_Model);
	{
		
		if (_22eb8c9d5_Production || (_1a8e85b89_Ptr((*(*_87732_m.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1a8e8720c_Map((*(*_87732_m.alloc)._field_Expr.alloc)._field_Kind) != nullptr) || _1aa228d2c_isExprComesFromBind(&((*_87732_m.alloc)._field_Expr))) {
			_case_begin_1ada182d8:;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1aa21c32b_possibleRefExpr(_self_, (*(*_87732_m.alloc)._field_Index.alloc)._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1ada0e499:;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".at(\"", 5));
				_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, &((*_87732_m.alloc)._field_Token));
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				_1aa21c32b_possibleRefExpr(_self_, (*(*_87732_m.alloc)._field_Index.alloc)._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1ada15bcb:;
	};
}



inline void _1aa2201ec_unsafeIndexing(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a9078551_UnsafeIndexingExprModel> _91738_m) {
	_1aa21c32b_possibleRefExpr(_self_, (*((*((*(_91738_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_22eb8c9d5_Production || (_1a8e85b89_Ptr((*(*(*_91738_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1a8e8720c_Map((*(*(*_91738_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind) != nullptr)) {
			_case_begin_1ada1c122:;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1aa21c32b_possibleRefExpr(_self_, (*((*(*_91738_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1ada1b1ba:;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1aa21c32b_possibleRefExpr(_self_, (*((*(*_91738_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1ada1bc6a:;
	};
}



inline void _1aa2204a5_anonFunc(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel> _93432_m) {
	jule::Bool _9359_closure = _1aa2293b0_isClosure(&(_93432_m));;
	jule::Str _9369_ident = _1aa2e20e3_pushAnonFn((*(_self_))._field_oc, &(_93432_m));;
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1aa306536_anonFunc((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_93432_m))._field_Func);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">((void*)", 9));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _9369_ident);
	if (_9359_closure) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, _9369_ident);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx", 4));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">::make(", 8));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, _9369_ident);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_93432_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ada26923:;
			if (it != expr_end) {
				jule::I32 _94818_i = it - expr->begin();
				jule::Ptr<_1a8de41ad_Var> _94825_v = *it;
				{
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
					static__1aa23086c_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _94825_v);
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
					_1aa21b4a1_var(_self_, _94825_v);
					if ((((*_93432_m.alloc)._field_Captured.len() - _94818_i) > 1LL)) {
						_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1ada26923:;
				++it;
				_94818_i++;
				goto _iter_begin_1ada26923;
			}
			_iter_end_1ada26923:;
		};
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, _9369_ident);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1aa22075d_mapExpr(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d327e4_MapExprModel> _96531_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_96531_m))._field_KeyKind);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_96531_m.alloc)._field_ValKind);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">({", 3));
	if (((*_96531_m.alloc)._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*_96531_m.alloc)._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ada2ece4:;
			if (it != expr_end) {
				jule::I32 _97218_i = it - expr->begin();
				jule::Ptr<_1a8d3233d_KeyValPairExprModel> _97225_pair = *it;
				{
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
					_1aa21c32b_possibleRefExpr(_self_, (*(_97225_pair))._field_Key);
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					_1aa21c32b_possibleRefExpr(_self_, (*_97225_pair.alloc)._field_Val);
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					if ((((*_96531_m.alloc)._field_Entries.len() - _97218_i) > 1LL)) {
						_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1ada2ece4:;
				++it;
				_97218_i++;
				goto _iter_begin_1ada2ece4;
			}
			_iter_end_1ada2ece4:;
		};
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1aa220a16_slicing(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d32d77_SlicingExprModel> _98631_m) {
	_1aa21c32b_possibleRefExpr(_self_, (*(_98631_m))._field_Expr);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_22eb8c9d5_Production))) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, &((*_98631_m.alloc)._field_Token));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1aa21c32b_possibleRefExpr(_self_, (*_98631_m.alloc)._field_Left);
	if (((*_98631_m.alloc)._field_Right != nullptr)) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1aa21c32b_possibleRefExpr(_self_, (*_98631_m.alloc)._field_Right);
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa220cbe_traitSub(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3340a_TraitSubIdentExprModel> _100232_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1aa22e8d2_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_100232_m))._field_Trt);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("MptrData", 8));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("*)", 2));
	_1aa21c32b_possibleRefExpr(_self_, (*_100232_m.alloc)._field_Expr);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_22eb8c9d5_Production))) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, &((*_100232_m.alloc)._field_Token));
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("))->", 4));
	static__1aa22e30a_func(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*_100232_m.alloc)._field_Method));
}



inline void _1aa221077_structureSub(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _101836_m) {
	_1aa21c32b_possibleRefExpr(_self_, (*((*(_101836_m))._field_Expr))._field_Model);
	if (((*_101836_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1aa230581_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_101836_m.alloc)._field_Field))._field_Decl));
}



inline void _1aa221330_array(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3451b_ArrayExprModel> _102729_m) {
	_1aa305326_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_102729_m))._field_Kind);
	if (((*_102729_m.alloc)._field_Elems.len() == 0LL)) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_102729_m.alloc)._field_Elems.len() == 2LL) && ((*_102729_m.alloc)._field_Elems[1LL] == nullptr))) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1aa21c32b_possibleRefExpr(_self_, (*_102729_m.alloc)._field_Elems[0LL]);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("({", 2));
	_1aa21ccaa_models(_self_, (*_102729_m.alloc)._field_Elems);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1aa2215d8_funcInsCommon(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns> _105037_m) {
	_1aa306899_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _105037_m);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1aa221891_funcIns(_self_, _105037_m);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa221891_funcIns(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns> _105731_m) {
	if ((((*(_105731_m))._field_Decl != nullptr) && (*(*_105731_m.alloc)._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1a8772982_Directive> _105913_d = _1aa30d8a1_findDirective(&((*(*_105731_m.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_105913_d != nullptr)) {
			_1aa2e1026_writeBytes((*(_self_))._field_oc, _1aa2eda28_concatAllParts((*_105913_d.alloc)._field_Args));
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1aa22e5e6_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_105731_m));
}



inline void _1aa221b49_tuple(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d34818_TupleExprModel> _106829_m) {
	{
		auto expr = &((*_106829_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada4b261:;
		if (it != expr_end) {
			jule::I32 _106914_i = it - expr->begin();
			jule::Ptr<_1a8e4bcb5_Data> _106921_d = *it;
			{
				_1aa21c32b_possibleRefExpr(_self_, (*(_106921_d))._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_106829_m))._field_Datas.len() - _106914_i) > 1LL)) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1aa2e1620_indent((*_self_.alloc)._field_oc);
				};
			}
			_iter_next_1ada4b261:;
			++it;
			_106914_i++;
			goto _iter_begin_1ada4b261;
		}
		_iter_end_1ada4b261:;
	};
}



inline void _1aa221e02_newCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d35495_BuiltinNewCallExprModel> _107931_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_107931_m))._field_Kind);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	if (((*_107931_m.alloc)._field_Init != nullptr)) {
		_1aa21c32b_possibleRefExpr(_self_, (*_107931_m.alloc)._field_Init);
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa2221aa_outCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d34be2_BuiltinOutCallExprModel> _108931_m) {
	if (((*(_108931_m))._field_Debug && _22eb8c9d5_Production)) {
		return;;
	};
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1aa21c32b_possibleRefExpr(_self_, (*_108931_m.alloc)._field_Expr);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa222463_outlnCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d350bb_BuiltinOutlnCallExprModel> _109833_m) {
	if (((*(_109833_m))._field_Debug && _22eb8c9d5_Production)) {
		return;;
	};
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1aa21c32b_possibleRefExpr(_self_, (*_109833_m.alloc)._field_Expr);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa22271b_panicCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3586e_BuiltinPanicCallExprModel> _110733_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1aa21c32b_possibleRefExpr(_self_, (*(_110733_m))._field_Expr);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, &((*_110733_m.alloc)._field_Token));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1aa2229c4_assertCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d35d25_BuiltinAssertCallExprModel> _111534_m) {
	if (_22eb8c9d5_Production) {
		return;;
	};
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1aa21c32b_possibleRefExpr(_self_, (*(_111534_m))._field_Expr);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1aa227c93_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_111534_m.alloc)._field_Log);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1aa2e38a8_locInfo((*_self_.alloc)._field_oc, &((*_111534_m.alloc)._field_Token));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1aa222c7c_errorCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d3792b_BuiltinErrorCallExprModel> _112833_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1a8d3c414_IsVoid((*((*(_112833_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_112833_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ada5c6c3:;
				{
					jule::Ptr<_1a8de41ad_Var> _113317_v = (*((*(_112833_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a8de41ad_Var>();;
					if ((*(_113317_v))._field_Ident.equal("error", 5)) {
						_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1ada5c66d:;
		};
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1aa30bbac_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_112833_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_112833_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ada61b39:;
				{
					jule::Ptr<_1a8de41ad_Var> _114517_v = (*((*(_112833_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a8de41ad_Var>();;
					if ((*(_114517_v))._field_Ident.equal("error", 5)) {
						_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1ada61ad4:;
		};
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1aa21c32b_possibleRefExpr(_self_, (*((*(_112833_m))._field_Err))._field_Model);
	jule::I32 _11549_i = _1aa2e2434_pushAnyType((*_self_.alloc)._field_oc, (*(*_112833_m.alloc)._field_Err.alloc)._field_Kind);;
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_11549_i));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")}", 2));
}



inline void _1aa223035_copyCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d37552_BuiltinCopyCallExprModel> _116032_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1aa21c32b_possibleRefExpr(_self_, (*((*(_116032_m))._field_Dest))._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1aa21c32b_possibleRefExpr(_self_, (*((*_116032_m.alloc)._field_Src))._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa2232dd_lenCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d369a2_BuiltinLenCallExprModel> _116831_m) {
	_1aa21c32b_possibleRefExpr(_self_, (*((*(_116831_m))._field_Expr))._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1aa223596_capCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d36c9e_BuiltinCapCallExprModel> _117331_m) {
	_1aa21c32b_possibleRefExpr(_self_, (*((*(_117331_m))._field_Expr))._field_Model);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1aa22384e_deleteCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d37178_BuiltinDeleteCallExprModel> _117834_m) {
	_1aa21c32b_possibleRefExpr(_self_, (*((*(_117834_m))._field_Dest))._field_Model);
	if (((*_117834_m.alloc)._field_Key != nullptr)) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".del(", 5));
		_1aa21c32b_possibleRefExpr(_self_, (*(*_117834_m.alloc)._field_Key.alloc)._field_Model);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1aa223b07_makeCallSlice(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d362cb_BuiltinMakeCallExprModel>* _118938_m) {
	jule::Ptr<_1a8e900e4_Slc> _119013_slice = _1a8e866c3_Slc((*((*(_118938_m))))._field_Kind.ptr());;
	_1aa306c0c_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_118938_m))))._field_Kind);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1aa21c32b_possibleRefExpr(_self_, (*((*(_118938_m))))._field_Len);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_118938_m))))._field_Cap != nullptr)) {
		_1aa21c32b_possibleRefExpr(_self_, (*((*(_118938_m))))._field_Cap);
	} else {
		_1aa21c32b_possibleRefExpr(_self_, (*((*(_118938_m))))._field_Len);
	};
	if (_1aa30e033_shouldInitialized(&((*(_119013_slice))._field_Elem))) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1aa226ea1_initExpr(_self_, (*_119013_slice.alloc)._field_Elem);
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa223db0_makeCallStr(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d362cb_BuiltinMakeCallExprModel>* _120736_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1aa21c32b_possibleRefExpr(_self_, (*((*(_120736_m))))._field_Len);
	if (((*((*(_120736_m))))._field_Cap != nullptr)) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1aa21c32b_possibleRefExpr(_self_, (*((*(_120736_m))))._field_Cap);
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa224168_makeCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d362cb_BuiltinMakeCallExprModel> _121832_m) {
	if ((_1a8e866c3_Slc((*(_121832_m))._field_Kind.ptr()) != nullptr)) {
		_1aa223b07_makeCallSlice(_self_, &(_121832_m));
		return;;
	};
	_1aa223db0_makeCallStr(_self_, &(_121832_m));
}



inline void _1aa224421_pushToSlice(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a907892a_PushToSliceExprModel> _122635_m) {
	;
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1aa304116_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_122635_m))._field_Elems))._field_ElemKind);
	jule::Bool _123413_ptr = false;;
	{
		auto &_match_expr{ (*(_122635_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ada791d4:;
			{
				jule::Ptr<_1a8d2e527_UnaryExprModel> _123817_u = (*(_122635_m))._field_Dest.unsafe_cast_ptr<_1a8d2e527_UnaryExprModel>();;
				if ((_1a8e85b89_Ptr((*((*(_123817_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1aa21c32b_possibleRefExpr(_self_, (*(*_123817_u.alloc)._field_Expr.alloc)._field_Model);
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
					_123413_ptr=true;
					goto _match_end_1ada7ae2d;
				};
				goto _case_begin_1ada7ae83;
			}
		}
		else {
			_case_begin_1ada7ae83:;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1aa21c32b_possibleRefExpr(_self_, (*_122635_m.alloc)._field_Dest);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1ada7ae2d:;
	};
	if (((*(*_122635_m.alloc)._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_123413_ptr) {
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1aa21c32b_possibleRefExpr(_self_, (*(*_122635_m.alloc)._field_Elems.alloc)._field_Elems[0LL]);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_123413_ptr) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa((*(*_122635_m.alloc)._field_Elems.alloc)._field_Elems.len()));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*_122635_m.alloc)._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada828e6:;
		if (it != expr_end) {
			jule::Any _127221_e = *it;
			{
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_123413_ptr) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1aa21c32b_possibleRefExpr(_self_, _127221_e);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1ada828e6:;
			++it;
			goto _iter_begin_1ada828e6;
		}
		_iter_end_1ada828e6:;
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1aa2246c9_appendToSlice(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a9078d04_AppendToSliceExprModel> _128637_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1aa21c32b_possibleRefExpr(_self_, (*(_128637_m))._field_Dest);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(").append(", 9));
	_1aa21c32b_possibleRefExpr(_self_, (*_128637_m.alloc)._field_Slice);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1aa224982_appendCall(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d366a5_BuiltinAppendCallExprModel> _129434_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1aa21c32b_possibleRefExpr(_self_, (*(_129434_m))._field_Dest);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1aa21c32b_possibleRefExpr(_self_, (*_129434_m.alloc)._field_Elements);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa224c3a_sizeof(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d380d0_SizeofExprModel> _130230_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1aa21c32b_possibleRefExpr(_self_, (*(_130230_m))._field_Expr);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa224ee3_alignof(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d382bc_AlignofExprModel> _130831_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1aa21c32b_possibleRefExpr(_self_, (*(_130831_m))._field_Expr);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa22529b_runeLit(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d38564_RuneExprModel> _131427_m) {
	if (((*(_131427_m))._field_Code <= 127LL)) {
		_2234c33e3_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _131717_b = _1aa227677_sbtoa(static_cast<jule::U8>((*_131427_m.alloc)._field_Code));;
		if (_131717_b.equal("'", 1)) {
			_2234c33e3_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\\');
		};
		_2234c313a_WriteStr(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _131717_b);
		_2234c33e3_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1aa228425_itoa(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_131427_m.alloc)._field_Code));
}



inline void _1aa225554_structureStatic(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d34142_StructStaticIdentExprModel> _132839_m) {
	static__1aa22e5e6_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_132839_m))._field_Method));
}



inline void _1aa22580c_integratedToStr(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d38861_IntegratedToStrExprModel> _133239_m) {
	_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1aa21c32b_possibleRefExpr(_self_, (*(_133239_m))._field_Expr);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1aa225ab5_backendEmit(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d38c3a_BackendEmitExprModel> _133835_m) {
	if (((*(_133835_m))._field_Exprs.len() == 0LL)) {
		_1aa2e0c6d_write((*(_self_))._field_oc, (*_133835_m.alloc)._field_Code);
		return;;
	};
	jule::I32 _13439_n = _2234c3db6_Len(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _134413_args = jule::Slice<jule::Any>::alloc((*_133835_m.alloc)._field_Exprs.len(), (*_133835_m.alloc)._field_Exprs.len());;
	{
		auto expr = &((*_133835_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada9629a:;
		if (it != expr_end) {
			jule::I32 _134514_i = it - expr->begin();
			jule::Any _134521_expr = *it;
			{
				_1aa21c32b_possibleRefExpr(_self_, _134521_expr);
				jule::Slice<jule::U8> _134717_buf = _2234c43d3_Buf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
				_134413_args[_134514_i]=jule::Any(static_cast<jule::Str>(_134717_buf.slice(_13439_n)), &__jule_any_type4);
				{
					_2234c468b_SetBuf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _134717_buf.slice(0LL, _13439_n));
				};
			}
			_iter_next_1ada9629a:;
			++it;
			_134514_i++;
			goto _iter_begin_1ada9629a;
		}
		_iter_end_1ada9629a:;
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _1a90641da_Format((*_133835_m.alloc)._field_Code, _134413_args));
}



inline void _1aa225d6d_free(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8d39037_FreeExprModel> _135428_m) {
	_1aa21c32b_possibleRefExpr(_self_, (*(_135428_m))._field_Expr);
	if (_22eb8c3ca_RC) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1aa226126_strComp(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a907783b_StrCompExprModel> _136331_m) {
	if ((*(_136331_m))._field_NotEq) {
		_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _13679_s = _20a2b96ca_ReadStr((*_136331_m.alloc)._field_Right.ptr());;
	_1aa21c32b_possibleRefExpr(_self_, (*_136331_m.alloc)._field_Left);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".equal(", 7));
	_1aa227c93_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _13679_s);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_13679_s.len()));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if ((*_136331_m.alloc)._field_NotEq) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1aa2263ce_emptyCompare(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a9077044_EmptyCompareExprModel> _137936_m) {
	if ((*(_137936_m))._field_Neg) {
		_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1aa21c32b_possibleRefExpr(_self_, (*_137936_m.alloc)._field_Expr);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1aa226687_unsafeDeref(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a90794ca_UnsafeDerefExprModel> _138835_m) {
	{
		
		if ((_1a8e85903_Sptr((*((*((*(_138835_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1adaa4c59:;
			{
				_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1aa21c32b_possibleRefExpr(_self_, (*(*(*_138835_m.alloc)._field_Base.alloc)._field_Expr.alloc)._field_Model);
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1adaa48a2:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1395:13"));;
			}
		}
		_match_end_1adaa47a3:;
	};
}



inline void _1aa226940_unsafeCasting(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a90797c7_UnsafeCastingExprModel> _139937_m) {
	{
		
		if (_1aa2290e6_isAny(&((*((*(_139937_m))._field_Base))._field_ExprKind))) {
			_case_begin_1adaa790a:;
			{
				_1aa21c32b_possibleRefExpr(_self_, (*((*(*_139937_m.alloc)._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1a8e85903_Sptr((*(*_139937_m.alloc)._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1a8e85903_Sptr((*(*_139937_m.alloc)._field_Base.alloc)._field_Kind)))._field_Elem);
				} else {
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_139937_m.alloc)._field_Base.alloc)._field_Kind);
				};
				_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1adaa7553:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1412:13"));;
			}
		}
		_match_end_1adaa7465:;
	};
}



inline void _1aa226be8_model(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Any _141629_m) {
	{
		auto &_match_expr{ _141629_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1adaad0c5:;
			{
				_1aa2e0c6d_write((*(_self_))._field_oc, _141629_m.unsafe_cast<jule::Str>());
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1adaad26d:;
			{
				_1aa306c0c_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _141629_m.unsafe_cast_ptr<_1a8e8301b_TypeKind>());
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1adaad2d4:;
			{
				_1aa21a769_constant(_self_, _141629_m.unsafe_cast_ptr<_20a2b7552_Const>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1adaad34a:;
			{
				_1aa21b4a1_var(_self_, _141629_m.unsafe_cast_ptr<_1a8de41ad_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1adaad3b1:;
			{
				_1aa21b759_structureIns(_self_, _141629_m.unsafe_cast_ptr<_1a8d29ba4_StructIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1adaad427:;
			{
				_1aa2215d8_funcInsCommon(_self_, _141629_m.unsafe_cast_ptr<_1a8d3ee72_FnIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1adaad48d:;
			{
				_1aa21ae40_unsafeBinary(_self_, (*(_141629_m.unsafe_cast_ptr<_1a90781bb_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1adaae0d7:;
			{
				_1aa21b1e8_binary(_self_, _141629_m.unsafe_cast_ptr<_1a8d2e14d_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1adaae14d:;
			{
				_1aa21ba12_unary(_self_, _141629_m.unsafe_cast_ptr<_1a8d2e527_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1adaae1b4:;
			{
				_1aa21bcba_structureLit(_self_, _141629_m.unsafe_cast_ptr<_1a8d2edeb_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1adaae22a:;
			{
				_1aa21c073_allocStructure(_self_, _141629_m.unsafe_cast_ptr<_1a8d301e8_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1adaae291:;
			{
				_1aa21ca02_casting(_self_, _141629_m.unsafe_cast_ptr<_1a8d3077b_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1adaae307:;
			{
				_1aa21e8d3_funcCall(_self_, _141629_m.unsafe_cast_ptr<_1a8d3112d_FnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1adaae36d:;
			{
				_1aa21eb8b_slice(_self_, _141629_m.unsafe_cast_ptr<_1a8d31507_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1adaae3e5:;
			{
				_1aa221330_array(_self_, _141629_m.unsafe_cast_ptr<_1a8d3451b_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1adaae46c:;
			{
				_1aa2201ec_unsafeIndexing(_self_, _141629_m.unsafe_cast_ptr<_1a9078551_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1adaae4e4:;
			{
				_1aa21ee44_indexing(_self_, _141629_m.unsafe_cast_ptr<_1a8d319ad_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1adaae56b:;
			{
				_1aa2204a5_anonFunc(_self_, _141629_m.unsafe_cast_ptr<_1a8d31e64_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1adaae5e3:;
			{
				_1aa22075d_mapExpr(_self_, _141629_m.unsafe_cast_ptr<_1a8d327e4_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1adaae66a:;
			{
				_1aa220a16_slicing(_self_, _141629_m.unsafe_cast_ptr<_1a8d32d77_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1adaae6e2:;
			{
				_1aa220cbe_traitSub(_self_, _141629_m.unsafe_cast_ptr<_1a8d3340a_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1adaae769:;
			{
				_1aa221077_structureSub(_self_, _141629_m.unsafe_cast_ptr<_1a8d33c9b_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1adaae7e1:;
			{
				_1aa221b49_tuple(_self_, _141629_m.unsafe_cast_ptr<_1a8d34818_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1adaae868:;
			{
				_1aa2221aa_outCall(_self_, _141629_m.unsafe_cast_ptr<_1a8d34be2_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1adaae8e0:;
			{
				_1aa222463_outlnCall(_self_, _141629_m.unsafe_cast_ptr<_1a8d350bb_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1adaae967:;
			{
				_1aa221e02_newCall(_self_, _141629_m.unsafe_cast_ptr<_1a8d35495_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1adaae9de:;
			{
				_1aa22271b_panicCall(_self_, _141629_m.unsafe_cast_ptr<_1a8d3586e_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1adaaea66:;
			{
				_1aa2229c4_assertCall(_self_, _141629_m.unsafe_cast_ptr<_1a8d35d25_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1adaaeadd:;
			{
				_1aa222c7c_errorCall(_self_, _141629_m.unsafe_cast_ptr<_1a8d3792b_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1adaaeb65:;
			{
				_1aa224168_makeCall(_self_, _141629_m.unsafe_cast_ptr<_1a8d362cb_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1adaaebdc:;
			{
				_1aa224982_appendCall(_self_, _141629_m.unsafe_cast_ptr<_1a8d366a5_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1adaaec64:;
			{
				_1aa223035_copyCall(_self_, _141629_m.unsafe_cast_ptr<_1a8d37552_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1adaaecdb:;
			{
				_1aa2232dd_lenCall(_self_, _141629_m.unsafe_cast_ptr<_1a8d369a2_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1adaaed63:;
			{
				_1aa223596_capCall(_self_, _141629_m.unsafe_cast_ptr<_1a8d36c9e_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1adaaedda:;
			{
				_1aa22384e_deleteCall(_self_, _141629_m.unsafe_cast_ptr<_1a8d37178_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1adaaee62:;
			{
				_1aa224c3a_sizeof(_self_, _141629_m.unsafe_cast_ptr<_1a8d380d0_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1adaaeed9:;
			{
				_1aa224ee3_alignof(_self_, _141629_m.unsafe_cast_ptr<_1a8d382bc_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1adab0061:;
			{
				_1aa22529b_runeLit(_self_, _141629_m.unsafe_cast_ptr<_1a8d38564_RuneExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1adab00d8:;
			{
				_1aa225554_structureStatic(_self_, _141629_m.unsafe_cast_ptr<_1a8d34142_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1adab0160:;
			{
				_1aa22580c_integratedToStr(_self_, _141629_m.unsafe_cast_ptr<_1a8d38861_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1adab01d7:;
			{
				_1aa225ab5_backendEmit(_self_, _141629_m.unsafe_cast_ptr<_1a8d38c3a_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1adab025e:;
			{
				_1aa225d6d_free(_self_, _141629_m.unsafe_cast_ptr<_1a8d39037_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1adab02d6:;
			{
				_1aa226126_strComp(_self_, _141629_m.unsafe_cast_ptr<_1a907783b_StrCompExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1adab035d:;
			{
				_1aa21b4a1_var(_self_, (*(_141629_m.unsafe_cast_ptr<_1a90773b8_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1adab03d5:;
			{
				_1aa2263ce_emptyCompare(_self_, _141629_m.unsafe_cast_ptr<_1a9077044_EmptyCompareExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1adab045c:;
			{
				_1aa226687_unsafeDeref(_self_, _141629_m.unsafe_cast_ptr<_1a90794ca_UnsafeDerefExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1adab04d4:;
			{
				_1aa226940_unsafeCasting(_self_, _141629_m.unsafe_cast_ptr<_1a90797c7_UnsafeCastingExprModel>());
			}
		}
		else {
			_case_begin_1adaad207:;
			{
				_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1adaad1a2:;
	};
}



inline void _1aa226ea1_initExpr(jule::Ptr<_1aa218ed7_exprCoder> _self_, jule::Ptr<_1a8e8301b_TypeKind> _151732_t) {
	if (_1a8e84db9_NilCompatible(_151732_t.ptr())) {
		if ((_1a8e85b89_Ptr(_151732_t) != nullptr)) {
			_1aa2e0c6d_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1aa306c0c_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151732_t);
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1a8e90bd8_Tuple> _152713_tup = _1a8e87493_Tup(_151732_t);;
	if ((_152713_tup != nullptr)) {
		_1aa30b4d6_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _152713_tup);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_152713_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adace316:;
			if (it != expr_end) {
				jule::I32 _153118_i = it - expr->begin();
				jule::Ptr<_1a8e8301b_TypeKind> _153125_tt = *it;
				{
					if ((!(_1aa30e033_shouldInitialized(&(_153125_tt))))) {
						goto _iter_next_1adace316;
					};
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, _20a2a9489_Itoa(_153118_i));
					_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
					_1aa226ea1_initExpr(_self_, _153125_tt);
					if ((((*_152713_tup.alloc)._field_Types.len() - _153118_i) > 1LL)) {
						_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1adace316:;
				++it;
				_153118_i++;
				goto _iter_begin_1adace316;
			}
			_iter_end_1adace316:;
		};
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1a8d52a56_Enum> _154613_enm = _1a8e85e20_Enum(_151732_t);;
	if ((_154613_enm != nullptr)) {
		_1aa226be8_model(_self_, (*((*((*((*_154613_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _15519_prim = _1a8e8566c_Prim(_151732_t);;
	if ((_15519_prim != nullptr)) {
		if (_20a2b6ead_IsNum((*_15519_prim.alloc)._field_Kind)) {
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("0", 1));
		} else if (_1a8e8dce6_IsBool(_15519_prim)) {
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("false", 5));
		} else if (_1a8e8e07c_IsStr(_15519_prim)) {
			_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1a8e8643c_Arr(_151732_t) != nullptr)) {
		jule::Ptr<_1a8e92415_Arr> _156317_arr = _1a8e8643c_Arr(_151732_t);;
		_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151732_t);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1aa226ea1_initExpr(_self_, (*(_156317_arr))._field_Elem);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _157013_s = _1a8e86be0_Struct(_151732_t);;
	if ((((_157013_s != nullptr) && (*((*_157013_s.alloc)._field_Decl))._field_Binded) && (_1aa30d8a1_findDirective(&((*(*_157013_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151732_t);
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1aa306c0c_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151732_t);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1aa218ed7_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "varPrefixes:" << _Src._field_varPrefixes;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa22a405_TestCoder> static__1aa22a878_New(jule::Ptr<_1aa2e0586_ObjectCoder>* _2924_oc) {
	return jule::new_ptr<_1aa22a405_TestCoder>(_1aa22a405_TestCoder{._field_oc=(*(_2924_oc))});;
}



inline jule::Ptr<_1a8da0ea0_ImportInfo> _1aa22ab0e_findTestingPackage(jule::Ptr<_1aa22a405_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adade1a0:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _3621_imp = *it;
			{
				if ((*(_3621_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3621_imp;;
				};
			}
			_iter_next_1adade1a0:;
			++it;
			goto _iter_begin_1adade1a0;
		}
		_iter_end_1adade1a0:;
	};
	return nullptr;;
}



inline void _1aa22adb7_appendTest(jule::Ptr<_1aa22a405_TestCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns> _4434_f) {
	_1aa2e1620_indent((*(_self_))._field_oc);
	_1aa22b604_callTmReset(_self_);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1aa227c93_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_4434_f))._field_Decl))._field_Ident);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	static__1aa22e5e6_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_4434_f));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t);\n", 6));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1aa22b170_appendPackageTests(jule::Ptr<_1aa22a405_TestCoder> _self_, jule::Ptr<_1a8da3dc6_Package>* _5943_p) {
	{
		auto expr = &((*((*(_5943_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adae598c:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _6021_file = *it;
			{
				{
					auto expr = &((*(_6021_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adae640a:;
					if (it != expr_end) {
						jule::Ptr<_1a8d3be91_Fn> _6125_f = *it;
						{
							if (_1aa30dc69_hasDirective(&((*(_6125_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1aa22adb7_appendTest(_self_, (*_6125_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1adae640a:;
						++it;
						goto _iter_begin_1adae640a;
					}
					_iter_end_1adae640a:;
				};
			}
			_iter_next_1adae598c:;
			++it;
			goto _iter_begin_1adae598c;
		}
		_iter_end_1adae598c:;
	};
}



inline jule::Bool _1aa22b406_readyTestingPackage(jule::Ptr<_1aa22a405_TestCoder> _self_) {
	jule::Ptr<_1a8da0ea0_ImportInfo> _7013_p = _1aa22ab0e_findTestingPackage(_self_);;
	if ((_7013_p == nullptr)) {
		return false;;
	};
	(*_self_.alloc)._field_t=(*(_1a8da217c_FindStruct(_7013_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*_self_.alloc)._field_tmReset=_1a8d2ac1b_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1a8d2ac1b_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1a8d2ac1b_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1aa22b604_callTmReset(jule::Ptr<_1aa22a405_TestCoder> _self_) {
	static__1aa22e30a_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1aa22b802_callTmFailed(jule::Ptr<_1aa22a405_TestCoder> _self_) {
	static__1aa22e30a_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1aa22ba00_callTmSkipped(jule::Ptr<_1aa22a405_TestCoder> _self_) {
	static__1aa22e30a_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1aa22bbed_Serialize(jule::Ptr<_1aa22a405_TestCoder> _self_) {
	_1aa2ed132_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1aa2ecac1_end((*_self_.alloc)._field_oc);
	});;
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	if ((!(_1aa22b406_readyTestingPackage(_self_)))) {
		_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
		return;;
	};
	_2234c269a_StrBuilder _11813_tb = static__2234c2ac9_New(40LL);;
	_1aa304eb3_structureIns((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &(_11813_tb), (*_self_.alloc)._field_t);
	_1aa302e06_asSptr((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _2234c43d3_Buf(&_11813_tb));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1aa2e1026_writeBytes((*_self_.alloc)._field_oc, _2234c43d3_Buf(&_11813_tb));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1aa2e1224_addIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("++total;\n", 9));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("if (", 4));
	_1aa22b802_callTmFailed(_self_);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("else if (", 9));
	_1aa22ba00_callTmSkipped(_self_);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("};\n", 3));
	_1aa22b170_appendPackageTests(_self_, &((*((*(*_self_.alloc)._field_oc.alloc)._field_ir))._field_Main));
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("\n\n", 2));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1aa2e1422_doneIndent((*_self_.alloc)._field_oc);
	_1aa2e1620_indent((*_self_.alloc)._field_oc);
	_1aa2e0c6d_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1aa22a405_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1aa22d727_writeIdentTo(_2234c269a_StrBuilder* _3433_buf, jule::Str* _3451_ident) {
	{
		auto expr = _3451_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb10dd6:;
		if (it != expr_end) {
			jule::U8 *_3516_b = it;
			{
				if (((*(_3516_b)) >= 128LLU)) {
					goto _julec_label_1adb12080;
				};
			}
			_iter_next_1adb10dd6:;
			++it;
			goto _iter_begin_1adb10dd6;
		}
		_iter_end_1adb10dd6:;
	};
	_2234c313a_WriteStr(_3433_buf, (*(_3451_ident)));
	return;;
	_julec_label_1adb12080:;
	{
		auto expr = _3451_ident;
		char *it = expr->operator char*();
		const char *end = it + expr->len();
		std::size_t len;
		jule::I32 _4516_r;
		_iter_begin_1adb1246a:;
		std::tie(_4516_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				if ((_4516_r < 128LL)) {
					_2234c33e3_WriteByte(_3433_buf, static_cast<jule::U8>(_4516_r));
					goto _iter_next_1adb1246a;
				};
				_2234c313a_WriteStr(_3433_buf, _20a2a91c0_FmtInt(static_cast<jule::I64>(_4516_r), 15LL));
			}
			_iter_next_1adb1246a:;
			it += len;
			goto _iter_begin_1adb1246a;
		}
	};
}



inline void static__1aa22dabd_toOut(_2234c269a_StrBuilder* _6226_buf, jule::Str _6243_ident, jule::Uintptr _6255_addr) {
	_2234c33e3_WriteByte(_6226_buf, '_');
	if ((_6255_addr != 0LLU)) {
		_2234c313a_WriteStr(_6226_buf, _20a2a8d07_FmtUint(static_cast<jule::U64>(_6255_addr), 15LL));
		_2234c33e3_WriteByte(_6226_buf, '_');
	};
	static__1aa22d727_writeIdentTo(_6226_buf, &(_6243_ident));
}



inline void static__1aa22e01e_toLocal(_2234c269a_StrBuilder* _7728_buf, jule::I32 _7745_row, jule::I32 _7755_col, jule::Str* _7766_ident) {
	_2234c33e3_WriteByte(_7728_buf, '_');
	_2234c313a_WriteStr(_7728_buf, _20a2a9489_Itoa(_7745_row));
	_2234c313a_WriteStr(_7728_buf, _20a2a9489_Itoa(_7755_col));
	_2234c33e3_WriteByte(_7728_buf, '_');
	static__1aa22d727_writeIdentTo(_7728_buf, _7766_ident);
}



inline void static__1aa22e30a_func(_2234c269a_StrBuilder* _8525_buf, jule::Ptr<_1a8d3be91_Fn>* _8543_f) {
	{
		
		if ((*((*(_8543_f))))._field_Binded) {
			_case_begin_1adb16c33:;
			{
				_2234c313a_WriteStr(_8525_buf, (*((*(_8543_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8543_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1adb16ccc:;
			{
				_2234c313a_WriteStr(_8525_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1a8d3c69a_IsMethod((*(_8543_f)).ptr())) {
			_case_begin_1adb16d43:;
			{
				if ((*((*(_8543_f))))._field_Statically) {
					_2234c313a_WriteStr(_8525_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1adb16ace:;
	};
	static__1aa22dabd_toOut(_8525_buf, (*((*(_8543_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8543_f))));
}



inline void static__1aa22e5e6_funcIns(_2234c269a_StrBuilder* _10128_buf, jule::Ptr<_1a8d3ee72_FnIns>* _10146_f) {
	if (_1a8d41407_IsBuiltin((*(_10146_f)).ptr())) {
		_2234c313a_WriteStr(_10128_buf, jule::Str::lit("jule::", 6));
		_2234c313a_WriteStr(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10146_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10146_f))))._field_Generics.len() == 0LL))) {
		static__1aa22e30a_func(_10128_buf, &((*((*(_10146_f))))._field_Decl));
		return;;
	};
	static__1aa22dabd_toOut(_10128_buf, (*(*((*(_10146_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10146_f))));
}



inline void static__1aa22e8d2_traitDecl(_2234c269a_StrBuilder* _11630_buf, jule::Ptr<_1a8d5034a_Trait> _11647_t) {
	static__1aa22dabd_toOut(_11630_buf, (*(_11647_t))._field_Ident, static_cast<jule::Uintptr>(_11647_t));
}



inline void static__1aa22ebbd_param(_2234c269a_StrBuilder* _12026_buf, jule::Ptr<_1a8d3a4bc_Param>* _12044_p) {
	if ((_1a8760b3a_IsAnonIdent((*((*(_12044_p))))._field_Ident) || _1a8760871_IsIgnoreIdent((*((*(_12044_p))))._field_Ident))) {
		return;;
	};
	if (_1a8d3aad8_IsSelf((*(_12044_p)).ptr())) {
		_2234c313a_WriteStr(_12026_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12044_p))))._field_Token == nullptr)) {
		static__1aa22e01e_toLocal(_12026_buf, 0LL, 0LL, &((*((*(_12044_p))))._field_Ident));
		return;;
	};
	static__1aa22e01e_toLocal(_12026_buf, (*((*((*(_12044_p))))._field_Token))._field_Row, (*((*((*(_12044_p))))._field_Token))._field_Column, &((*((*(_12044_p))))._field_Ident));
}



inline void static__1aa22eea9_structure(_2234c269a_StrBuilder* _13530_buf, jule::Ptr<_1a8d26e26_Struct>* _13548_s) {
	if ((*((*(_13548_s))))._field_Binded) {
		if ((!(_1aa30dc69_hasDirective(&((*((*(_13548_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_2234c313a_WriteStr(_13530_buf, jule::Str::lit("struct ", 7));
		};
		_2234c313a_WriteStr(_13530_buf, (*((*(_13548_s))))._field_Ident);
		return;;
	};
	static__1aa22dabd_toOut(_13530_buf, (*((*(_13548_s))))._field_Ident, static_cast<jule::Uintptr>((*(_13548_s))));
}



inline void static__1aa230295_structureIns(_2234c269a_StrBuilder* _14633_buf, jule::Ptr<_1a8d29ba4_StructIns>* _14651_s) {
	if (((*((*((*(_14651_s))))._field_Decl))._field_Binded || ((*((*(_14651_s))))._field_Generics.len() == 0LL))) {
		static__1aa22eea9_structure(_14633_buf, &((*((*(_14651_s))))._field_Decl));
		return;;
	};
	static__1aa22dabd_toOut(_14633_buf, (*(*((*(_14651_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14651_s))));
}



inline void static__1aa230581_field(_2234c269a_StrBuilder* _15426_buf, jule::Ptr<_1a8d24000_Field>* _15444_f) {
	if ((*((*((*(_15444_f))))._field_Owner))._field_Binded) {
		_2234c313a_WriteStr(_15426_buf, (*((*(_15444_f))))._field_Ident);
		return;;
	};
	_2234c313a_WriteStr(_15426_buf, jule::Str::lit("_field_", 7));
	static__1aa22d727_writeIdentTo(_15426_buf, &((*((*(_15444_f))))._field_Ident));
}



inline void static__1aa23086c_var(_2234c269a_StrBuilder* _16424_buf, jule::Ptr<_1a8de41ad_Var> _16445_v) {
	{
		
		if ((*(_16445_v))._field_Binded) {
			_case_begin_1adb254a0:;
			{
				_2234c313a_WriteStr(_16424_buf, (*_16445_v.alloc)._field_Ident);
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("error", 5)) {
			_case_begin_1adb25516:;
			{
				_2234c313a_WriteStr(_16424_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("self", 4)) {
			_case_begin_1adb2557c:;
			{
				_2234c313a_WriteStr(_16424_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16445_v))._field_RetOrder == -1LL)) {
			_case_begin_1adb255e3:;
			{
				_2234c313a_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16445_v))._field_RetOrder >= 0LL)) {
			_case_begin_1adb25659:;
			{
				_2234c313a_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_2234c313a_WriteStr(_16424_buf, _20a2a9489_Itoa((*_16445_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_16445_v))._field_Scope != nullptr)) {
			_case_begin_1adb256c0:;
			{
				static__1aa22e01e_toLocal(_16424_buf, (*((*_16445_v.alloc)._field_Token))._field_Row, (*(*_16445_v.alloc)._field_Token.alloc)._field_Column, &((*_16445_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1adb25439:;
			{
				static__1aa22dabd_toOut(_16424_buf, (*(_16445_v))._field_Ident, static_cast<jule::Uintptr>(_16445_v));
			}
		}
		_match_end_1adb2533a:;
	};
}



inline void static__1aa230b58_iterBegin(_2234c269a_StrBuilder* _18630_buf, jule::Uintptr _18647_it) {
	_2234c313a_WriteStr(_18630_buf, jule::Str::lit("_iter_begin_", 12));
	_2234c313a_WriteStr(_18630_buf, _20a2a8d07_FmtUint(static_cast<jule::U64>(_18647_it), 15LL));
}



inline void static__1aa230e44_iterEnd(_2234c269a_StrBuilder* _19128_buf, jule::Uintptr _19145_it) {
	_2234c313a_WriteStr(_19128_buf, jule::Str::lit("_iter_end_", 10));
	_2234c313a_WriteStr(_19128_buf, _20a2a8d07_FmtUint(static_cast<jule::U64>(_19145_it), 15LL));
}



inline void static__1aa231230_iterNext(_2234c269a_StrBuilder* _19629_buf, jule::Uintptr _19646_it) {
	_2234c313a_WriteStr(_19629_buf, jule::Str::lit("_iter_next_", 11));
	_2234c313a_WriteStr(_19629_buf, _20a2a8d07_FmtUint(static_cast<jule::U64>(_19646_it), 15LL));
}



inline void static__1aa23151b_label(_2234c269a_StrBuilder* _20126_buf, jule::Uintptr _20143_u) {
	_2234c313a_WriteStr(_20126_buf, jule::Str::lit("_julec_label_", 13));
	_2234c313a_WriteStr(_20126_buf, _20a2a8d07_FmtUint(static_cast<jule::U64>(_20143_u), 15LL));
}



inline void static__1aa231807_matchEnd(_2234c269a_StrBuilder* _20629_buf, jule::Uintptr _20646_m) {
	_2234c313a_WriteStr(_20629_buf, jule::Str::lit("_match_end_", 11));
	_2234c313a_WriteStr(_20629_buf, _20a2a8d07_FmtUint(static_cast<jule::U64>(_20646_m), 15LL));
}



inline void static__1aa231ae3_caseBegin(_2234c269a_StrBuilder* _21130_buf, jule::Uintptr _21147_c) {
	_2234c313a_WriteStr(_21130_buf, jule::Str::lit("_case_begin_", 12));
	_2234c313a_WriteStr(_21130_buf, _20a2a8d07_FmtUint(static_cast<jule::U64>(_21147_c), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1aa22d21b_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2dd287_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2dd85e_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2ddc38_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2de156_anonHash _Src) {
	_Stream << "anonHash{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa3012bc_Str(_1aa300e26_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1aa30160d_Equal(jule::Ptr<_1aa300e26_customType> _self_, jule::Ptr<_1a8e8301b_TypeKind> _4321_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa300e26_customType _Src) {
	_Stream << _1aa3012bc_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1aa301a3c_typeCoder> static__1aa302059_new(jule::Ptr<_1aa2e0586_ObjectCoder>* _6824_oc) {
	jule::Ptr<_1aa301a3c_typeCoder> _6913_tc = jule::new_ptr<_1aa301a3c_typeCoder>(_1aa301a3c_typeCoder{._field_oc=(*(_6824_oc)), });;
	(*(_6913_tc))._field_rc=static__1aa309b00_new(&(_6913_tc));
	return _6913_tc;;
}



inline void _1aa3023bc_toType(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _7530_buf, jule::Str _7551_id) {
	if ((!_7551_id.equal("uintptr", 7))) {
		_7551_id=_20a2ab601_RealKindOf(_7551_id);
	};
	_2234c313a_WriteStr(_7530_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7551_id[0LL]) && (_7551_id[0LL] <= 122LLU))) {
		_2234c33e3_WriteByte(_7530_buf, (_7551_id[0LL] - 32LLU));
	} else {
		_2234c33e3_WriteByte(_7530_buf, _7551_id[0LL]);
	};
	_2234c313a_WriteStr(_7530_buf, _7551_id.slice(1LL));
}



inline void _1aa302730_prim(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _8928_buf, jule::Ptr<_1a8e8aae5_Prim> _8945_p) {
	_1aa3023bc_toType(_self_, _8928_buf, (*(_8945_p))._field_Kind);
}



inline void _1aa302a93_tuple(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _9429_buf, jule::Ptr<_1a8e90bd8_Tuple> _9450_t) {
	_2234c313a_WriteStr(_9429_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9450_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adcccadb:;
		if (it != expr_end) {
			jule::I32 _9614_i = it - expr->begin();
			jule::Ptr<_1a8e8301b_TypeKind> _9621_tk = *it;
			{
				_1aa306c0c_kind(_self_, _9429_buf, _9621_tk);
				if ((((*(_9450_t))._field_Types.len() - _9614_i) > 1LL)) {
					_2234c33e3_WriteByte(_9429_buf, ',');
				};
			}
			_iter_next_1adcccadb:;
			++it;
			_9614_i++;
			goto _iter_begin_1adcccadb;
		}
		_iter_end_1adcccadb:;
	};
	_2234c33e3_WriteByte(_9429_buf, '>');
}



inline void _1aa302e06_asSptr(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _10630_buf, jule::Slice<jule::U8> _10647_elem) {
	_2234c313a_WriteStr(_10630_buf, jule::Str::lit("jule::Ptr<", 10));
	_2234c2d82_Write(_10630_buf, _10647_elem);
	_2234c33e3_WriteByte(_10630_buf, '>');
}



inline void _1aa303269_sptr(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _11328_buf, jule::Ptr<_1a8e8e621_Sptr> _11349_sptr) {
	_2234c313a_WriteStr(_11328_buf, jule::Str::lit("jule::Ptr<", 10));
	_1aa306c0c_kind(_self_, _11328_buf, (*(_11349_sptr))._field_Elem);
	_2234c33e3_WriteByte(_11328_buf, '>');
}



inline void _1aa3035cc_ptr(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _12027_buf, jule::Ptr<_1a8e92dd8_Ptr> _12048_p) {
	;
	if (_1a8e93922_IsUnsafe(_12048_p.ptr())) {
		_2234c313a_WriteStr(_12027_buf, jule::Str::lit("void*", 5));
	} else {
		_1aa306c0c_kind(_self_, _12027_buf, (*(_12048_p))._field_Elem);
		_2234c313a_WriteStr(_12027_buf, jule::Str::lit("*", 1));
	};
}



inline void _1aa303940_enumDecl(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _13132_buf, jule::Ptr<_1a8d52a56_Enum> _13153_e) {
	_1aa306c0c_kind(_self_, _13132_buf, (*((*(_13153_e))._field_Kind))._field_Kind);
}



inline void _1aa303ca3_typeEnumDecl(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _13636_buf, jule::Ptr<_1a8d54261_TypeEnum> _13657_e) {
	_2234c313a_WriteStr(_13636_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1aa304116_asSlice(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _14031_buf, jule::Ptr<_1a8e8301b_TypeKind> _14052_elem) {
	_2234c313a_WriteStr(_14031_buf, jule::Str::lit("jule::Slice<", 12));
	_1aa306c0c_kind(_self_, _14031_buf, _14052_elem);
	_2234c33e3_WriteByte(_14031_buf, '>');
}



inline void _1aa304479_slice(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _14729_buf, jule::Ptr<_1a8e900e4_Slc> _14750_s) {
	_1aa304116_asSlice(_self_, _14729_buf, (*(_14750_s))._field_Elem);
}



inline void _1aa3047dc_mapType(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _15231_buf, jule::Ptr<_1a8e91788_Map> _15252_m) {
	_2234c313a_WriteStr(_15231_buf, jule::Str::lit("jule::Map<", 10));
	_1aa306c0c_kind(_self_, _15231_buf, (*(_15252_m))._field_Key);
	_2234c33e3_WriteByte(_15231_buf, ',');
	_1aa306c0c_kind(_self_, _15231_buf, (*_15252_m.alloc)._field_Val);
	_2234c33e3_WriteByte(_15231_buf, '>');
}



inline void _1aa304b50_structure(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _16133_buf, jule::Ptr<_1a8d26e26_Struct> _16150_s) {
	static__1aa22eea9_structure(_16133_buf, &(_16150_s));
}



inline void _1aa304eb3_structureIns(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _16636_buf, jule::Ptr<_1a8d29ba4_StructIns> _16657_s) {
	if ((!((*((*(_16657_s))._field_Decl))._field_Binded))) {
		static__1aa230295_structureIns(_16636_buf, &(_16657_s));
		return;;
	};
	jule::Ptr<_1a8772982_Directive> _1719_d = _1aa30d8a1_findDirective(&((*(*_16657_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1719_d != nullptr)) {
		_2234c2d82_Write(_16636_buf, _1aa2eda28_concatAllParts((*_1719_d.alloc)._field_Args));
		_2234c313a_WriteStr(_16636_buf, jule::Str::lit("::", 2));
	};
	static__1aa230295_structureIns(_16636_buf, &(_16657_s));
	if (((*_16657_s.alloc)._field_Generics.len() > 0LL)) {
		_2234c33e3_WriteByte(_16636_buf, '<');
		{
			auto expr = &((*_16657_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adcd9587:;
			if (it != expr_end) {
				jule::I32 _17918_i = it - expr->begin();
				jule::Ptr<_1a8e81635_InsGeneric> _17925_g = *it;
				{
					_1aa306c0c_kind(_self_, _16636_buf, (*(_17925_g))._field_Kind);
					if ((((*_16657_s.alloc)._field_Generics.len() - _17918_i) > 1LL)) {
						_2234c33e3_WriteByte(_16636_buf, ',');
					};
				}
				_iter_next_1adcd9587:;
				++it;
				_17918_i++;
				goto _iter_begin_1adcd9587;
			}
			_iter_end_1adcd9587:;
		};
		_2234c33e3_WriteByte(_16636_buf, '>');
	};
}



inline void _1aa305326_array(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _19029_buf, jule::Ptr<_1a8e92415_Arr> _19050_a) {
	_2234c313a_WriteStr(_19029_buf, jule::Str::lit("jule::Array<", 12));
	_1aa306c0c_kind(_self_, _19029_buf, (*(_19050_a))._field_Elem);
	_2234c33e3_WriteByte(_19029_buf, ',');
	_2234c313a_WriteStr(_19029_buf, _20a2a9489_Itoa((*_19050_a.alloc)._field_N));
	_2234c33e3_WriteByte(_19029_buf, '>');
}



inline void _1aa3059ec_paramIns(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _21332_buf, jule::Ptr<_1a8d3dde9_ParamIns>* _21354_p) {
	if ((*((*((*(_21354_p))))._field_Decl))._field_Variadic) {
		_2234c313a_WriteStr(_21332_buf, jule::Str::lit("jule::Slice<", 12));
		_1aa306c0c_kind(_self_, _21332_buf, (*((*(_21354_p))))._field_Kind);
		_2234c33e3_WriteByte(_21332_buf, '>');
	} else {
		_1aa306c0c_kind(_self_, _21332_buf, (*((*(_21354_p))))._field_Kind);
	};
	if ((*((*((*(_21354_p))))._field_Decl))._field_Reference) {
		_2234c33e3_WriteByte(_21332_buf, '*');
	};
}



inline void _1aa3061c3_funcInsResult(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _24537_s, jule::Ptr<_1a8d3ee72_FnIns>* _24557_f) {
	if (_1a8d3c414_IsVoid((*((*(_24557_f))))._field_Decl.ptr())) {
		if ((*(*((*(_24557_f))))._field_Decl.alloc)._field_Exceptional) {
			_2234c313a_WriteStr(_24537_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_2234c313a_WriteStr(_24537_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_24557_f))))._field_Decl.alloc)._field_Exceptional) {
		_2234c313a_WriteStr(_24537_s, jule::Str::lit("jule::Exceptional<", 18));
		_1aa30bbac_codeMut1((*(_self_))._field_rc.ptr(), _24537_s, &((*((*(_24557_f))))._field_Result));
		_2234c33e3_WriteByte(_24537_s, '>');
		return;;
	};
	_1aa30bbac_codeMut1((*(_self_))._field_rc, _24537_s, &((*((*(_24557_f))))._field_Result));
}



inline void _1aa306536_anonFunc(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _26332_buf, jule::Ptr<_1a8d3ee72_FnIns> _26353_f) {
	if ((((*(_26353_f))._field_Result != nullptr) && (_1a8e87493_Tup((*_26353_f.alloc)._field_Result) != nullptr))) {
		_1aa2e26dc_pushResultIns((*(_self_))._field_oc, &(_26353_f));
	};
	_1aa3061c3_funcInsResult(_self_, _26332_buf, &(_26353_f));
	if (((*_26353_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_2234c33e3_WriteByte(_26332_buf, ',');
	{
		auto expr = &((*_26353_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adcebd2a:;
		if (it != expr_end) {
			jule::I32 _27214_i = it - expr->begin();
			jule::Ptr<_1a8d3dde9_ParamIns> _27221_param = *it;
			{
				if (_1a8d3aad8_IsSelf((*(_27221_param))._field_Decl.ptr())) {
					goto _iter_next_1adcebd2a;
				};
				_1aa3059ec_paramIns(_self_, _26332_buf, &(_27221_param));
				if ((((*_26353_f.alloc)._field_Params.len() - _27214_i) > 1LL)) {
					_2234c33e3_WriteByte(_26332_buf, ',');
				};
			}
			_iter_next_1adcebd2a:;
			++it;
			_27214_i++;
			goto _iter_begin_1adcebd2a;
		}
		_iter_end_1adcebd2a:;
	};
}



inline void _1aa306899_func(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _28428_buf, jule::Ptr<_1a8d3ee72_FnIns> _28449_f) {
	_2234c313a_WriteStr(_28428_buf, jule::Str::lit("jule::Fn<", 9));
	_1aa306536_anonFunc(_self_, _28428_buf, _28449_f);
	_2234c33e3_WriteByte(_28428_buf, '>');
}



inline void _1aa306c0c_kind(_1aa301a3c_typeCoder* _self_, _2234c269a_StrBuilder* _29128_buf, jule::Ptr<_1a8e8301b_TypeKind> _29149_k) {
	{
		
		if ((_1a8e86be0_Struct(_29149_k.ptr()) != nullptr)) {
			_case_begin_1add00537:;
			{
				_1aa304eb3_structureIns(_self_, _29128_buf, _1a8e86be0_Struct(_29149_k));
				return;;
			}
		}
		else if (_1a8e83d63_Binded(_29149_k.ptr())) {
			_case_begin_1add005d1:;
			{
				_2234c313a_WriteStr(_29128_buf, (*_29149_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1a8e8566c_Prim(_29149_k.ptr()) != nullptr)) {
			_case_begin_1add00647:;
			{
				_1aa302730_prim(_self_, _29128_buf, _1a8e8566c_Prim(_29149_k));
				return;;
			}
		}
		else if ((_1a8e87493_Tup(_29149_k.ptr()) != nullptr)) {
			_case_begin_1add006ad:;
			{
				_1aa302a93_tuple(_self_, _29128_buf, _1a8e87493_Tup(_29149_k));
				return;;
			}
		}
		else if ((_1a8e85903_Sptr(_29149_k.ptr()) != nullptr)) {
			_case_begin_1add00724:;
			{
				_1aa303269_sptr(_self_, _29128_buf, _1a8e85903_Sptr(_29149_k));
				return;;
			}
		}
		else if ((_1a8e85b89_Ptr(_29149_k.ptr()) != nullptr)) {
			_case_begin_1add0079b:;
			{
				_1aa3035cc_ptr(_self_, _29128_buf, _1a8e85b89_Ptr(_29149_k));
				return;;
			}
		}
		else if ((_1a8e85e20_Enum(_29149_k.ptr()) != nullptr)) {
			_case_begin_1add00823:;
			{
				_1aa303940_enumDecl(_self_, _29128_buf, _1a8e85e20_Enum(_29149_k));
				return;;
			}
		}
		else if ((_1a8e861a6_TypeEnum(_29149_k.ptr()) != nullptr)) {
			_case_begin_1add0089a:;
			{
				_1aa303ca3_typeEnumDecl(_self_, _29128_buf, _1a8e861a6_TypeEnum(_29149_k));
				return;;
			}
		}
		else if ((_1a8e866c3_Slc(_29149_k.ptr()) != nullptr)) {
			_case_begin_1add00922:;
			{
				_1aa304479_slice(_self_, _29128_buf, _1a8e866c3_Slc(_29149_k));
				return;;
			}
		}
		else if ((_1a8e8720c_Map(_29149_k.ptr()) != nullptr)) {
			_case_begin_1add00999:;
			{
				_1aa3047dc_mapType(_self_, _29128_buf, _1a8e8720c_Map(_29149_k));
				return;;
			}
		}
		else if ((_1a8e86e76_Trait(_29149_k.ptr()) != nullptr)) {
			_case_begin_1add00a21:;
			{
				_2234c313a_WriteStr(_29128_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1a8e8643c_Arr(_29149_k.ptr()) != nullptr)) {
			_case_begin_1add00a98:;
			{
				_1aa305326_array(_self_, _29128_buf, _1a8e8643c_Arr(_29149_k));
				return;;
			}
		}
		else if ((_1a8e86959_Fn(_29149_k.ptr()) != nullptr)) {
			_case_begin_1add00b20:;
			{
				_1aa306899_func(_self_, _29128_buf, _1a8e86959_Fn(_29149_k));
				return;;
			}
		}
		_match_end_1add0035b:;
	};
	{
		auto &_match_expr{ (*(_29149_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data27)) {
			_case_begin_1add00ba8:;
			{
				_2234c313a_WriteStr(_29128_buf, (*((*(_29149_k))._field_Kind.cast_ptr<_1aa300e26_customType>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data27)))._field_kind);
			}
		}
		else {
			_case_begin_1add09178:;
			{
				_2234c313a_WriteStr(_29128_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1add09123:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa301a3c_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa309627_resultCoder> static__1aa309b00_new(jule::Ptr<_1aa301a3c_typeCoder>* _35824_tc) {
	return jule::new_ptr<_1aa309627_resultCoder>(_1aa309627_resultCoder{._field_tc=(*(_35824_tc))});;
}



inline void _1aa309e63_ptr(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _36227_s, jule::Ptr<_1a8e92dd8_Ptr> _36246_p) {
	_2234c313a_WriteStr(_36227_s, jule::Str::lit("p", 1));
	_1aa30b849_codeMut(_self_, _36227_s, &((*(_36246_p))._field_Elem));
}



inline void _1aa30a2c6_sptr(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _36728_s, jule::Ptr<_1a8e8e621_Sptr> _36747_p) {
	_2234c313a_WriteStr(_36728_s, jule::Str::lit("x", 1));
	_1aa30b849_codeMut(_self_, _36728_s, &((*(_36747_p))._field_Elem));
}



inline void _1aa30a639_mapType(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _37231_s, jule::Ptr<_1a8e91788_Map> _37250_p) {
	_2234c313a_WriteStr(_37231_s, jule::Str::lit("m", 1));
	_1aa30b849_codeMut(_self_, _37231_s, &((*(_37250_p))._field_Key));
	_1aa30b849_codeMut(_self_, _37231_s, &((*_37250_p.alloc)._field_Val));
}



inline void _1aa30a99c_slice(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _37829_s, jule::Ptr<_1a8e900e4_Slc> _37848_slc) {
	_2234c313a_WriteStr(_37829_s, jule::Str::lit("s", 1));
	_1aa30b849_codeMut(_self_, _37829_s, &((*(_37848_slc))._field_Elem));
}



inline void _1aa30ad10_arr(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _38327_s, jule::Ptr<_1a8e92415_Arr> _38346_arr) {
	_2234c313a_WriteStr(_38327_s, jule::Str::lit("a", 1));
	_2234c313a_WriteStr(_38327_s, _20a2a91c0_FmtInt(static_cast<jule::I64>((*(_38346_arr))._field_N), 16LL));
	_1aa30b849_codeMut(_self_, _38327_s, &((*_38346_arr.alloc)._field_Elem));
}



inline void _1aa30b173_func(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _38928_s, jule::Ptr<_1a8d3ee72_FnIns> _38947_f) {
	_2234c313a_WriteStr(_38928_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_38947_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1add11603:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3dde9_ParamIns> _39121_p = *it;
			{
				if ((*((*(_39121_p))._field_Decl))._field_Reference) {
					_2234c313a_WriteStr(_38928_s, jule::Str::lit("r", 1));
				};
				_1aa30b849_codeMut(_self_, _38928_s, &((*_39121_p.alloc)._field_Kind));
			}
			_iter_next_1add11603:;
			++it;
			goto _iter_begin_1add11603;
		}
		_iter_end_1add11603:;
	};
	if (((*_38947_f.alloc)._field_Result != nullptr)) {
		_1aa30b849_codeMut(_self_, _38928_s, &((*_38947_f.alloc)._field_Result));
	};
}



inline void _1aa30b4d6_tup(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _40227_s, jule::Ptr<_1a8e90bd8_Tuple> _40246_tup) {
	{
		auto expr = &((*(_40246_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1add13c54:;
		if (it != expr_end) {
			jule::Ptr<_1a8e8301b_TypeKind> _40321_t = *it;
			{
				_2234c313a_WriteStr(_40227_s, jule::Str::lit("__jule_tuple_", 13));
				_1aa30b849_codeMut(_self_, _40227_s, &(_40321_t));
			}
			_iter_next_1add13c54:;
			++it;
			goto _iter_begin_1add13c54;
		}
		_iter_end_1add13c54:;
	};
}



inline void _1aa30b849_codeMut(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _40931_s, jule::Ptr<_1a8e8301b_TypeKind>* _40951_t) {
	{
		auto &_match_expr{ (*((*(_40951_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data26)) {
			_case_begin_1add14e64:;
			{
				_1aa309e63_ptr(_self_, _40931_s, (*((*(_40951_t))))._field_Kind.cast_ptr<_1a8e92dd8_Ptr>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data21)) {
			_case_begin_1add1567e:;
			{
				_1aa30a2c6_sptr(_self_, _40931_s, (*((*(_40951_t))))._field_Kind.cast_ptr<_1a8e8e621_Sptr>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data21));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data24)) {
			_case_begin_1add1531b:;
			{
				_1aa30a639_mapType(_self_, _40931_s, (*((*(_40951_t))))._field_Kind.cast_ptr<_1a8e91788_Map>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data22)) {
			_case_begin_1add15382:;
			{
				_1aa30a99c_slice(_self_, _40931_s, (*((*(_40951_t))))._field_Kind.cast_ptr<_1a8e900e4_Slc>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data22));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data25)) {
			_case_begin_1add153e8:;
			{
				_1aa30ad10_arr(_self_, _40931_s, (*((*(_40951_t))))._field_Kind.cast_ptr<_1a8e92415_Arr>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data25));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data1)) {
			_case_begin_1add1545e:;
			{
				_1aa30b173_func(_self_, _40931_s, (*((*(_40951_t))))._field_Kind.cast_ptr<_1a8d3ee72_FnIns>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data3)) {
			_case_begin_1add158c1:;
			{
				jule::Ptr<_1a8d52a56_Enum> _42413_te = (*((*(_40951_t))))._field_Kind.cast_ptr<_1a8d52a56_Enum>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data3);;
				static__1aa22dabd_toOut(_40931_s, (*(_42413_te))._field_Ident, static_cast<jule::Uintptr>(_42413_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data4)) {
			_case_begin_1add15937:;
			{
				jule::Ptr<_1a8d54261_TypeEnum> _42713_te = (*((*(_40951_t))))._field_Kind.cast_ptr<_1a8d54261_TypeEnum>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data4);;
				static__1aa22dabd_toOut(_40931_s, (*(_42713_te))._field_Ident, static_cast<jule::Uintptr>(_42713_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0)) {
			_case_begin_1add1599d:;
			{
				jule::Ptr<_1a8d29ba4_StructIns> _43017_si = (*((*(_40951_t))))._field_Kind.cast_ptr<_1a8d29ba4_StructIns>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0);;
				static__1aa230295_structureIns(_40931_s, &(_43017_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data2)) {
			_case_begin_1add15a14:;
			{
				jule::Ptr<_1a8d5034a_Trait> _43317_trt = (*((*(_40951_t))))._field_Kind.cast_ptr<_1a8d5034a_Trait>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data2);;
				static__1aa22e8d2_traitDecl(_40931_s, _43317_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)) {
			_case_begin_1add15a8b:;
			{
				_2234c313a_WriteStr(_40931_s, (*((*((*(_40951_t))))._field_Kind.cast_ptr<_1a8e8aae5_Prim>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data23)) {
			_case_begin_1add15b13:;
			{
				_1aa30b4d6_tup(_self_, _40931_s, (*((*(_40951_t))))._field_Kind.cast_ptr<_1a8e90bd8_Tuple>((jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data23));
			}
		}
		else {
			_case_begin_1add152a5:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:440:13"));;
			}
		}
		_match_end_1add15250:;
	};
}



inline void _1aa30bbac_codeMut1(_1aa309627_resultCoder* _self_, _2234c269a_StrBuilder* _44432_s, jule::Ptr<_1a8e8301b_TypeKind>* _44452_t) {
	jule::Ptr<_1a8e90bd8_Tuple> _44513_tup = _1a8e87493_Tup((*(_44452_t)).ptr());;
	if ((_44513_tup != nullptr)) {
		_1aa30b4d6_tup(_self_, _44432_s, _44513_tup);
	} else {
		_1aa306c0c_kind((*(_self_))._field_tc.ptr(), _44432_s, (*(_44452_t)));
	};
}



inline jule::Slice<jule::U8> _1aa30beba_code(_1aa309627_resultCoder* _self_, jule::Ptr<_1a8e8301b_TypeKind>* _45328_t) {
	_2234c269a_StrBuilder _45413_s = static__2234c2ac9_New(20LL);;
	_1aa30b849_codeMut(_self_, &(_45413_s), _45328_t);
	return _2234c43d3_Buf(&_45413_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa309627_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1add21a20_Name(_1add21602_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1add21b74_What(_1add21602_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1add21cc8_Reset(_1add21602_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1add21e2c_Short(_1add21602_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1add21602_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1add24d31_Name(_1add251a5_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1add25491_What(_1add251a5_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1add255d4_Reset(_1add251a5_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1add25727_Short(_1add251a5_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1add251a5_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1add28494_Name(_1add28818_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1add28b04_What(_1add28818_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1add28c47_Reset(_1add28818_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1add28d8a_Short(_1add28818_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1add28818_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1add2bb4b_Name(_1add2bec0_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1add2c2ab_What(_1add2bec0_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1add2c3ee_Reset(_1add2bec0_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1add2c542_Short(_1add2bec0_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1add2bec0_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1add302ae_Name(_1add30633_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1add3091e_What(_1add30633_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1add30a62_Reset(_1add30633_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1add30ba5_Short(_1add30633_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1add30633_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa374b48_FlagSet> static__1aa374e34_New(void) {
	return jule::new_ptr<_1aa374b48_FlagSet>(_1aa374b48_FlagSet{._field_flags=jule::Slice<jule::Trait>::alloc(0LL, 20LL)});;
}



inline jule::Trait _1aa3753da_FindFlag(_1aa374b48_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1add3a5c7:;
		if (it != expr_end) {
			jule::Trait _7221_flag = *it;
			{
				if ((((_1aa373075_CommonFlagMptrData*)_7221_flag.safe_type())->_1aa342440_Name(_7221_flag.data) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1add3a5c7:;
			++it;
			goto _iter_begin_1add3a5c7;
		}
		_iter_end_1add3a5c7:;
	};
	return nullptr;;
}



inline jule::Trait _1aa37572b_FindFlagShort(_1aa374b48_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1add3b452:;
		if (it != expr_end) {
			jule::Trait _8221_flag = *it;
			{
				if ((((_1aa373075_CommonFlagMptrData*)_8221_flag.safe_type())->_1aa342583_Short(_8221_flag.data) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1add3b452:;
			++it;
			goto _iter_begin_1add3b452;
		}
		_iter_end_1add3b452:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1aa375d03_Parse(_1aa374b48_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1aa37760c_argParser _11613_ap = _1aa37760c_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1aa378b08_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_11613_ap._field_content};;
}



inline jule::Ptr<_1add30633_Flag> _1add9a747_addFlagCommon(_1aa374b48_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1aa3753da_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1aa37572b_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1add30633_Flag> _14013_flag = jule::new_ptr<_1add30633_Flag>(_1add30633_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_14013_flag, (jule::Trait::Type*)&_1aa373075_CommonFlag_mptr_data4)); };
	return _14013_flag;;
}

inline jule::Ptr<_1add2bec0_Flag> _1adda263e_addFlagCommon(_1aa374b48_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1aa3753da_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1aa37572b_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1add2bec0_Flag> _14013_flag = jule::new_ptr<_1add2bec0_Flag>(_1add2bec0_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_14013_flag, (jule::Trait::Type*)&_1aa373075_CommonFlag_mptr_data3)); };
	return _14013_flag;;
}



inline void _1add984ae_AddVar(_1aa374b48_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1add30633_Flag> _16813_flag = _1add9a747_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*_16813_flag.alloc)._field_data=_16762_var;
}

inline void _1adda03ea_AddVar(_1aa374b48_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1add2bec0_Flag> _16813_flag = _1adda263e_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*_16813_flag.alloc)._field_data=_16762_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa374b48_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1add43316_parseInteger(_1aa37760c_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18239_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1add45e0c:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_224695680_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1add462c5:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_224695680_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1add45956:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_224695680_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1add459bc:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1add45a33:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1add458e0:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1add457e1:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1add4ac8b_parseInteger(_1aa37760c_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18239_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1add4d83d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_224695680_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1add4dc06:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_224695680_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1add4d387:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_224695680_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1add4d3ed:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1add4d464:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1add4d321:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1add4d222:;
	};
	return __jule_func_result;;
}



inline jule::Str _1aa377e26_getData(_1aa37760c_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1aa37819b_processFlag(_1aa37760c_argParser* _self_, jule::Trait* _20935_flag) {
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aa373075_CommonFlag_mptr_data3)) {
			_case_begin_1add40522:;
			{
				jule::Ptr<_1add2bec0_Flag> _21217_bf = (*(_20935_flag)).cast_ptr<_1add2bec0_Flag>((jule::Trait::Type*)&_1aa373075_CommonFlag_mptr_data3);;
				(*((*(_21217_bf))._field_data))=(!((*_21217_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1add404bc:;
	};
	jule::Str _2179_data = _1aa377e26_getData(_self_);;
	if ((_2179_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1aa373075_CommonFlagMptrData*)(*(_20935_flag)).safe_type())->_1aa342440_Name((*(_20935_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aa373075_CommonFlag_mptr_data0)) {
			_case_begin_1add423c0:;
			{
				jule::Ptr<_1add21602_Flag> _22417_intf = (*(_20935_flag)).cast_ptr<_1add21602_Flag>((jule::Trait::Type*)&_1aa373075_CommonFlag_mptr_data0);;
				jule::Bool _22527_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1add43316_parseInteger(_self_, &(_2179_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1add43657, nullptr, nullptr));
					(*((*(_22417_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22527_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22527_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1aa373075_CommonFlagMptrData*)(*(_20935_flag)).safe_type())->_1aa342440_Name((*(_20935_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aa373075_CommonFlag_mptr_data1)) {
			_case_begin_1add41c93:;
			{
				jule::Ptr<_1add251a5_Flag> _23217_uintf = (*(_20935_flag)).cast_ptr<_1add251a5_Flag>((jule::Trait::Type*)&_1aa373075_CommonFlag_mptr_data1);;
				jule::Bool _23328_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1add4ac8b_parseInteger(_self_, &(_2179_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1add4b51c, nullptr, nullptr));
					(*((*(_23217_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23328_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23328_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1aa373075_CommonFlagMptrData*)(*(_20935_flag)).safe_type())->_1aa342440_Name((*(_20935_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aa373075_CommonFlag_mptr_data2)) {
			_case_begin_1add42436:;
			{
				jule::Ptr<_1add28818_Flag> _24017_ff = (*(_20935_flag)).cast_ptr<_1add28818_Flag>((jule::Trait::Type*)&_1aa373075_CommonFlag_mptr_data2);;
				(*((*(_24017_ff))._field_data))=({
					auto except = _20a29e43a_ParseFloat(_2179_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1aa373075_CommonFlagMptrData*)(*(_20935_flag)).safe_type())->_1aa342440_Name((*(_20935_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aa373075_CommonFlag_mptr_data4)) {
			_case_begin_1add424ad:;
			{
				(*((*((*(_20935_flag)).cast_ptr<_1add30633_Flag>((jule::Trait::Type*)&_1aa373075_CommonFlag_mptr_data4)))._field_data))=_2179_data;
			}
		}
		_match_end_1add41ba5:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1aa378454_singleDash(_1aa37760c_argParser* _self_, jule::Str* _24930_arg) {
	if (((*(_24930_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_24930_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_24930_arg)).slice(1LL);
		char *it = expr.operator char*();
		const char *end = it + expr.len();
		std::size_t len;
		jule::I32 _25416_r;
		_iter_begin_1add550c5:;
		std::tie(_25416_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				jule::Trait _25517_flag = _1aa37572b_FindFlagShort(&(*(_self_))._field_set, _25416_r);;
				if ((_25517_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_24930_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune(_25416_r)), &__jule_any_type4)};
				};
				({
					auto except = _1aa37819b_processFlag(_self_, &(_25517_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1add550c5:;
			it += len;
			goto _iter_begin_1add550c5;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1aa37870c_doubleDash(_1aa37760c_argParser* _self_, jule::Str* _26330_arg) {
	if (((*(_26330_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26330_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait _26713_flag = _1aa3753da_FindFlag(&(*(_self_))._field_set, (*(_26330_arg)).slice(2LL));;
	if ((_26713_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26330_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1aa37819b_processFlag(_self_, &(_26713_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1aa37890a_tryArg(_1aa37760c_argParser* _self_) {
	jule::Str _2759_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2759_arg[0LL] == '-')) {
		if (((_2759_arg.len() > 1LL) && (_2759_arg[1LL] == '-'))) {
			({
				auto except = _1aa37870c_doubleDash(_self_, &(_2759_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1aa378454_singleDash(_self_, &(_2759_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2759_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1aa378b08_parse(_1aa37760c_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1aa37890a_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1add5aa59:;
	}
	_iter_end_1add5aa59:;;
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa37760c_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa2e0586_ObjectCoder> static__1aa2e09b5_New(jule::Ptr<_1a990452a_IR>* _12124_ir, _1aa2dd287_SerializationInfo _12133_info) {
	jule::Ptr<_1aa2e0586_ObjectCoder> _12213_oc = jule::new_ptr<_1aa2e0586_ObjectCoder>(_1aa2e0586_ObjectCoder{._field_ir=(*(_12124_ir)), ._field_info=_12133_info, });;
	(*(_12213_oc))._field_ec=static__1aa2193a0_new(&(_12213_oc));
	(*_12213_oc.alloc)._field_sc=static__1aa20e175_new(&(_12213_oc));
	(*_12213_oc.alloc)._field_tc=static__1aa302059_new(&(_12213_oc));
	return _12213_oc;;
}



inline void _1aa2e0c6d_write(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Str _13225_s) {
	_2234c313a_WriteStr(&(*(_self_))._field_Buf, _13225_s);
}



inline void _1aa2e1026_writeBytes(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Slice<jule::U8> _13630_b) {
	_2234c2d82_Write(&(*(_self_))._field_Buf, _13630_b);
}



inline void _1aa2e1224_addIndent(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,jule::Slice<jule::U8>::make({9LLU}));
}



inline void _1aa2e1422_doneIndent(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1aa2e1620_indent(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	_2234c2d82_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I32 _1aa2e1961_findAnyType(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8e8301b_TypeKind>* _15536_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb50035:;
		if (it != expr_end) {
			jule::I32 _15614_i = it - expr->begin();
			jule::Ptr<_1a8e8301b_TypeKind> _15621_at = *it;
			{
				if (_1a8e83725_Equal(_15621_at, (*(_15536_t)))) {
					return _15614_i;;
				};
			}
			_iter_next_1adb50035:;
			++it;
			_15614_i++;
			goto _iter_begin_1adb50035;
		}
		_iter_end_1adb50035:;
	};
	return -1LL;;
}



inline jule::I32 _1aa2e1ca2_pushDealloc(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8e8301b_TypeKind> _16435_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb51487:;
		if (it != expr_end) {
			jule::I32 _16513_i = it - expr->begin();
			jule::Ptr<_1a8e8301b_TypeKind> _16516_dt = *it;
			{
				if (_1a8e83725_Equal(_16516_dt, _16435_t)) {
					return _16513_i;;
				};
			}
			_iter_next_1adb51487:;
			++it;
			_16513_i++;
			goto _iter_begin_1adb51487;
		}
		_iter_end_1adb51487:;
	};
	jule::I32 _1709_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>>::make({_16435_t}));
	_2234c313a_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_2234c313a_WriteStr(&(*_self_.alloc)._field_deallocObj, _20a2a9489_Itoa(_1709_i));
	_2234c313a_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1aa306c0c_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _16435_t);
	_2234c313a_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _1709_i;;
}



inline jule::Str _1aa2e20e3_pushAnonFn(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel>* _18035_m) {
	jule::Str __jule_func_result;
	jule::Bool _1819_closure = _1aa2293b0_isClosure(_18035_m);;
	if (_1819_closure) {
		_2234c313a_WriteStr(&(*(_self_))._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I32 _18513_l = _2234c3db6_Len(&(*_self_.alloc)._field_anonObj);;
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anonObj, _20a2a8d07_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_18035_m))))._field_Func)), 15LL));
		__jule_func_result=static_cast<jule::Str>(_2234c43d3_Buf(&(*_self_.alloc)._field_anonObj).slice(_18513_l));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_18035_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adb57d1d:;
			if (it != expr_end) {
				jule::Ptr<_1a8de41ad_Var> _19025_v = *it;
				{
					_2234c33e3_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1aa306c0c_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_19025_v))._field_Kind))._field_Kind);
					_2234c33e3_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_19025_v.alloc)._field_Reference) {
						_2234c33e3_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1aa23086c_var(&((*_self_.alloc)._field_anonObj), _19025_v);
					_2234c313a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1adb57d1d:;
				++it;
				goto _iter_begin_1adb57d1d;
			}
			_iter_end_1adb57d1d:;
		};
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_20a2a8d07_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_18035_m))))._field_Func)), 15LL);
	};
	(*(_self_))._field_anons=jule::append((*_self_.alloc)._field_anons,jule::Slice<jule::Ptr<_1aa2de156_anonHash>>::make({jule::new_ptr<_1aa2de156_anonHash>(_1aa2de156_anonHash{._field_expr=(*(_18035_m)), ._field_ident=__jule_func_result})}));
	_1aa2e9293_anonFuncInsDecl(_self_, _18035_m, __jule_func_result);
	_2234c33e3_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I32 _1aa2e2434_pushAnyType(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8e8301b_TypeKind> _22035_t) {
	if ((_1a8e85e20_Enum(_22035_t.ptr()) != nullptr)) {
		_22035_t=(*((*(_1a8e85e20_Enum(_22035_t)))._field_Kind))._field_Kind;
	};
	jule::I32 _22413_i = _1aa2e1961_findAnyType(_self_, &(_22035_t));;
	if ((_22413_i != -1LL)) {
		return _22413_i;;
	};
	_22413_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>>::make({_22035_t}));
	jule::Str _2309_si = _20a2a9489_Itoa(_22413_i);;
	if ((_1a8e85903_Sptr(_22035_t) != nullptr)) {
		_2234c269a_StrBuilder _23217_elemKind = static__2234c2ac9_New(40LL);;
		_1aa306c0c_kind((*_self_.alloc)._field_tc.ptr(), &(_23217_elemKind), (*(_1a8e85903_Sptr(_22035_t)))._field_Elem);
		jule::I32 _23613_di = _1aa2e1ca2_pushDealloc(_self_, (*(_1a8e85903_Sptr(_22035_t)))._field_Elem);;
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _2309_si);
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _20a2a9489_Itoa(_23613_di));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 50));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _2309_si);
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1aa302e06_asSptr((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_anyObj), _2234c43d3_Buf(&_23217_elemKind));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _2309_si);
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _25513_comparable = _1a8e84616_Comparable(_22035_t);;
		_2234c269a_StrBuilder _25617_kindB = static__2234c2ac9_New(40LL);;
		_1aa306c0c_kind((*_self_.alloc)._field_tc.ptr(), &(_25617_kindB), _22035_t);
		jule::Slice<jule::U8> _25813_kind = _2234c43d3_Buf(&_25617_kindB);;
		jule::I32 _26113_di = _1aa2e1ca2_pushDealloc(_self_, _22035_t);;
		if (_25513_comparable) {
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _2309_si);
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_2234c2d82_Write(&(*_self_.alloc)._field_anyObj, _25813_kind);
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_2234c2d82_Write(&(*_self_.alloc)._field_anyObj, _25813_kind);
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _2309_si);
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1a8e85b89_Ptr(_22035_t) == nullptr)) {
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_2234c2d82_Write(&(*_self_.alloc)._field_anyObj, _25813_kind);
		} else {
			_2234c2d82_Write(&(*_self_.alloc)._field_anyObj, _25813_kind);
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _2309_si);
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _20a2a9489_Itoa(_26113_di));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", ", 2));
		if (_25513_comparable) {
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _2309_si);
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _2309_si);
		_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_25513_comparable) {
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _2309_si);
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_2234c2d82_Write(&(*_self_.alloc)._field_anyObj, _25813_kind);
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _2309_si);
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _2309_si);
			_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _22413_i;;
}



inline void _1aa2e26dc_pushResultIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _31938_f) {
	jule::Str _3209_s = static_cast<jule::Str>(_1aa30beba_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_31938_f))))._field_Result)));;
	jule::Bool _32112_ok;
	(*_self_.alloc)._field_resultMap.lookup(_3209_s, nullptr, &(_32112_ok));
	if (_32112_ok) {
		return;;
	};
	(*_self_.alloc)._field_resultMap[_3209_s]=false;
	_2234c313a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_2234c313a_WriteStr(&(*_self_.alloc)._field_resultDecls, _3209_s);
	_2234c313a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1a8e87493_Tup((*((*(_31938_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb7c45d:;
		if (it != expr_end) {
			jule::I32 _32914_i = it - expr->begin();
			jule::Ptr<_1a8e8301b_TypeKind> _32921_t = *it;
			{
				_2234c33e3_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1aa306c0c_kind((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_resultDecls), _32921_t);
				_2234c33e3_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_2234c313a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_2234c313a_WriteStr(&(*_self_.alloc)._field_resultDecls, _20a2a9489_Itoa(_32914_i));
				_2234c313a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1adb7c45d:;
			++it;
			_32914_i++;
			goto _iter_begin_1adb7c45d;
		}
		_iter_end_1adb7c45d:;
	};
	_2234c313a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1aa2e2995_pushResult(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3be91_Fn>* _34035_f) {
	if ((_1a8d3c414_IsVoid((*(_34035_f)).ptr()) || ((*((*((*(_34035_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _34413_n = (*((*(_34035_f))))._field_Instances.len();;
	if (((*((*(_34035_f))))._field_Generics.len() == 0LL)) {
		_34413_n=1LL;
	};
	{
		auto expr = (*((*(_34035_f))))._field_Instances.slice(0LL, _34413_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1adb8250c:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3ee72_FnIns> _34821_ins = *it;
			{
				_1aa2e26dc_pushResultIns(_self_, &(_34821_ins));
			}
			_iter_next_1adb8250c:;
			++it;
			goto _iter_begin_1adb8250c;
		}
		_iter_end_1adb8250c:;
	};
}



inline jule::I32 _1aa2e2d91_findTypeOffsetS(_1aa2e0586_ObjectCoder* _self_, jule::Ptr<_1a8d5034a_Trait> _35330_t, jule::Ptr<_1a8d29ba4_StructIns> _35345_s) {
	if (((*(_35330_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb83640:;
		if (it != expr_end) {
			jule::Ptr<_1aa2dd85e_traitHash> *_35716_hash = it;
			{
				if ((((*((*(_35716_hash))))._field_t == _35330_t) && ((*(*(_35716_hash)).alloc)._field_s == _35345_s))) {
					return (*(*(_35716_hash)).alloc)._field_i;;
				};
			}
			_iter_next_1adb83640:;
			++it;
			goto _iter_begin_1adb83640;
		}
		_iter_end_1adb83640:;
	};
	return -1LL;;
}



inline jule::I32 _1aa2e328c_findTypeOffset(_1aa2e0586_ObjectCoder* _self_, jule::Ptr<_1a8d5034a_Trait> _36529_t, jule::Ptr<_1a8e8301b_TypeKind> _36544_k) {
	if (((*(_36529_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1a8d29ba4_StructIns> _36917_s = nullptr;;
	if ((_1a8e85903_Sptr(_36544_k.ptr()) != nullptr)) {
		_36544_k=(*(_1a8e85903_Sptr(_36544_k)))._field_Elem;
	};
	_36917_s=_1a8e86be0_Struct(_36544_k);
	if ((_36917_s == nullptr)) {
		return -1LL;;
	};
	return _1aa2e2d91_findTypeOffsetS(_self_, _36529_t, _36917_s);;
}



inline void _1aa2e3600_pushAndWriteMaskMapper(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d5034a_Trait> _38046_t1, jule::Ptr<_1a8d5034a_Trait> _38062_t2) {
	_2234c269a_StrBuilder _38113_ident = static__2234c2ac9_New(32LL);;
	_2234c313a_WriteStr(&_38113_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_2234c313a_WriteStr(&_38113_ident, _20a2a8d07_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_38062_t2)), 15LL));
	_2234c313a_WriteStr(&_38113_ident, jule::Str::lit("_to_", 4));
	_2234c313a_WriteStr(&_38113_ident, _20a2a8d07_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_38046_t1)), 15LL));
	_2234c2d82_Write(&(*(_self_))._field_Buf, _2234c43d3_Buf(&_38113_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb89aa8:;
		if (it != expr_end) {
			_1aa2ddc38_traitCast _38916_m = *it;
			{
				if (((_38916_m._field_t1 == _38046_t1) && (_38916_m._field_t2 == _38062_t2))) {
					return;;
				};
			}
			_iter_next_1adb89aa8:;
			++it;
			goto _iter_begin_1adb89aa8;
		}
		_iter_end_1adb89aa8:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,jule::Slice<_1aa2ddc38_traitCast>::make({_1aa2ddc38_traitCast{._field_t1=_38046_t1, ._field_t2=_38062_t2}}));
	;
	_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_2234c2d82_Write(&(*_self_.alloc)._field_anyObj, _2234c43d3_Buf(&_38113_ident));
	_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_2234c269a_StrBuilder _40313_t1Ident = static__2234c2ac9_New(16LL);;
	_2234c269a_StrBuilder _40413_t2Ident = static__2234c2ac9_New(16LL);;
	static__1aa22e8d2_traitDecl(&(_40313_t1Ident), _38046_t1);
	static__1aa22e8d2_traitDecl(&(_40413_t2Ident), _38062_t2);
	{
		auto expr = &((*(_38046_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb8a1c4:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> _40821_s1 = *it;
			{
				{
					auto expr = &((*(_38062_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adb8e1a6:;
					if (it != expr_end) {
						jule::Ptr<_1a8d26e26_Struct> _40920_s2 = *it;
						{
							if ((_40821_s1 == _40920_s2)) {
								{
									auto expr = &((*(_40821_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1adb90042:;
									if (it != expr_end) {
										jule::Ptr<_1a8d29ba4_StructIns> _41133_s1i = *it;
										{
											jule::I32 _41225_i1 = _1aa2e2d91_findTypeOffsetS(_self_, _38046_t1, _41133_s1i);;
											jule::I32 _41325_i2 = _1aa2e2d91_findTypeOffsetS(_self_, _38062_t2, _41133_s1i);;
											_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_2234c2d82_Write(&(*_self_.alloc)._field_anyObj, _2234c43d3_Buf(&_40413_t2Ident));
											_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _20a2a9489_Itoa(_41325_i2));
											_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_2234c2d82_Write(&(*_self_.alloc)._field_anyObj, _2234c43d3_Buf(&_40313_t1Ident));
											_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, _20a2a9489_Itoa(_41225_i1));
											_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1adb90042:;
										++it;
										goto _iter_begin_1adb90042;
									}
									_iter_end_1adb90042:;
								};
							};
						}
						_iter_next_1adb8e1a6:;
						++it;
						goto _iter_begin_1adb8e1a6;
					}
					_iter_end_1adb8e1a6:;
				};
			}
			_iter_next_1adb8a1c4:;
			++it;
			goto _iter_begin_1adb8a1c4;
		}
		_iter_end_1adb8a1c4:;
	};
	_2234c313a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" jule::panic(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 114));
}



inline void _1aa2e38a8_locInfo(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a875ce89_Token>* _43128_t) {
	jule::Str *_43210_loc = &((*((*((*(_43128_t))))._field_File))._field_Path);;
	if (_22eb8c9d5_Production) {
		{
			
			if (_224695680_HasPrefix((*(_43210_loc)), _22480d573_PathStdlib)) {
				_case_begin_1adb958c7:;
				{
					_1aa227963_cstrBytes(&((*(_self_))._field_Buf), (*(_43210_loc)).slice((_2246a0db6_Dir(_22480d573_PathStdlib).len() + 1LL)));
				}
			}
			else if (_224695680_HasPrefix((*(_43210_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1adb959b5:;
				{
					_1aa227963_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_43210_loc)).slice((_2246a0db6_Dir((*(*_self_.alloc)._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1adb9550e:;
				{
					_1aa227963_cstrBytes(&((*(_self_))._field_Buf), (*(_43210_loc)));
				}
			}
			_match_end_1adb95443:;
		};
	} else {
		_1aa227963_cstrBytes(&((*(_self_))._field_Buf), (*(_43210_loc)));
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit(":", 1));
	_1aa2e0c6d_write(_self_, _20a2a9489_Itoa((*((*(_43128_t))))._field_Row));
	_1aa2e0c6d_write(_self_, jule::Str::lit(":", 1));
	_1aa2e0c6d_write(_self_, _20a2a9489_Itoa((*((*(_43128_t))))._field_Column));
}



inline void _1aa2e3aa6_head(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	_1aa2d49a9_Time _4589_time = static__1aa2d5070_Now();;
	_1aa2d42d3_AbsTime _4599_abs = _1aa2d6758_Abs(&_4589_time);;
	_1aa2e0c6d_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1aa2e0c6d_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1aa2e0c6d_write(_self_, jule::Str::lit("jule0.0.16 @master", 18));
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n", 1));
	_1aa2e0c6d_write(_self_, jule::Str::lit("// Date: ", 9));
	_1aa2e0c6d_write(_self_, _20a2a8d07_FmtUint(_4599_abs._field_Day, 10LL));
	_1aa2e0c6d_write(_self_, jule::Str::lit("/", 1));
	_1aa2e0c6d_write(_self_, _20a2a8d07_FmtUint(_4599_abs._field_Month, 10LL));
	_1aa2e0c6d_write(_self_, jule::Str::lit("/", 1));
	_1aa2e0c6d_write(_self_, _20a2a8d07_FmtUint(_4599_abs._field_Year, 10LL));
	_1aa2e0c6d_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1aa2e0c6d_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1aa2e0c6d_write(_self_, jule::Str::lit(" ", 1));
	_1aa2e0c6d_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
	if (_22eb8c9d5_Production) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_22eb8c3ca_RC))) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_22eb8c793_Safety))) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1aa2e3ca4_links(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1aa2e0c6d_write(_self_, _22480dd26_PathApi);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1aa2e3ca4_links(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adba2021:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _49616_used = *it;
			{
				{
					
					if ((!((*(_49616_used))._field_Binded))) {
						_case_begin_1adba2d35:;
						{
							goto _iter_next_1adba2021;
						}
					}
					else if (_2247367ed_IsStdHeaderPath((*(_49616_used))._field_Path)) {
						_case_begin_1adba2dbd:;
						{
							_1aa2e0c6d_write(_self_, jule::Str::lit("#include ", 9));
							_1aa2e0c6d_write(_self_, (*_49616_used.alloc)._field_Path);
							_1aa2e0c6d_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_224736ac8_IsValidHeaderExt(_2246a0459_Ext((*(_49616_used))._field_Path))) {
						_case_begin_1adba2e34:;
						{
							_1aa2e0c6d_write(_self_, jule::Str::lit("#include \"", 10));
							_1aa2e0c6d_write(_self_, (*_49616_used.alloc)._field_Path);
							_1aa2e0c6d_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1adba2be2:;
				};
			}
			_iter_next_1adba2021:;
			++it;
			goto _iter_begin_1adba2021;
		}
		_iter_end_1adba2021:;
	};
}



inline void _1aa2e405c_prepareStructure(_1aa2e0586_ObjectCoder* _self_, jule::Ptr<_1a8d26e26_Struct>* _51240_s) {
	{
		auto expr = &((*((*(_51240_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adba4c16:;
		if (it != expr_end) {
			jule::Ptr<_1a8d29ba4_StructIns> _51321_ins = *it;
			{
				{
					auto expr = &((*(_51321_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adba6652:;
					if (it != expr_end) {
						jule::Ptr<_1a8d3be91_Fn> _51425_m = *it;
						{
							if ((*(_51425_m))._field_Statically) {
								goto _iter_next_1adba6652;
							};
							{
								auto expr = &((*_51425_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1adba7136:;
								if (it != expr_end) {
									jule::Ptr<_1a8d3ee72_FnIns> _51829_mins = *it;
									{
										jule::Ptr<_1a8d3dde9_ParamIns> _51925_p = (*(_51829_mins))._field_Params[0LL];;
										_2234c269a_StrBuilder _52025_kind = static__2234c2ac9_New(40LL);;
										_1aa306c0c_kind((*(_self_))._field_tc.ptr(), &(_52025_kind), (*(_51925_p))._field_Kind);
										if ((!(_1a8d3ad6e_IsRef((*_51925_p.alloc)._field_Decl.ptr())))) {
											_2234c313a_WriteStr(&_52025_kind, jule::Str::lit("*", 1));
										};
										(*_51925_p.alloc)._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1aa300e26_customType>(_1aa300e26_customType{._field_kind=_2234c3932_Str(&_52025_kind)}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data27)});
									}
									_iter_next_1adba7136:;
									++it;
									goto _iter_begin_1adba7136;
								}
								_iter_end_1adba7136:;
							};
						}
						_iter_next_1adba6652:;
						++it;
						goto _iter_begin_1adba6652;
					}
					_iter_end_1adba6652:;
				};
			}
			_iter_next_1adba4c16:;
			++it;
			goto _iter_begin_1adba4c16;
		}
		_iter_end_1adba4c16:;
	};
}



inline void _1aa2e425a_prepareStructures(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adba65b9:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> _53621_s = *it;
			{
				if (((*(_53621_s))._field_Token != nullptr)) {
					_1aa2e405c_prepareStructure(_self_.ptr(), &(_53621_s));
				};
			}
			_iter_next_1adba65b9:;
			++it;
			goto _iter_begin_1adba65b9;
		}
		_iter_end_1adba65b9:;
	};
}



inline void _1aa2e4513_iterPackages(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Fn<void,jule::Ptr<_1a8da3dc6_Package>*> _54332_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbab756:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _54421_used = *it;
			{
				if ((!((*(_54421_used))._field_Binded))) {
					_54332_f(&((*_54421_used.alloc)._field_Package));
				};
			}
			_iter_next_1adbab756:;
			++it;
			goto _iter_begin_1adbab756;
		}
		_iter_end_1adbab756:;
	};
	_54332_f(&((*(*_self_.alloc)._field_ir.alloc)._field_Main));
}



inline void _1aa2e4711_buildTraitMap(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	_1aa2e4513_iterPackages(_self_, jule::__new_closure<void,jule::Ptr<_1a8da3dc6_Package>*>((void*)__jule_anon_1adbad879, jule::Ptr<__jule_anon_1adbad879_ctx>::make(__jule_anon_1adbad879_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1adbad879_ctx_handler));
}



inline void _1aa2e49b9_structurePlainDecl(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d26e26_Struct>* _59443_s) {
	{
		auto expr = &((*((*(_59443_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbad13c:;
		if (it != expr_end) {
			jule::Ptr<_1a8d29ba4_StructIns> _59521_ins = *it;
			{
				_1aa2e0c6d_write(_self_, jule::Str::lit("struct ", 7));
				static__1aa230295_structureIns(&((*_self_.alloc)._field_Buf), &(_59521_ins));
				_1aa2e0c6d_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1adbad13c:;
			++it;
			goto _iter_begin_1adbad13c;
		}
		_iter_end_1adbad13c:;
	};
}



inline void _1aa2e4bb7_structurePlainDecls(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbb7971:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> _60321_s = *it;
			{
				if (((*(_60321_s))._field_Token != nullptr)) {
					_1aa2e49b9_structurePlainDecl(_self_, &(_60321_s));
				};
			}
			_iter_next_1adbb7971:;
			++it;
			goto _iter_begin_1adbb7971;
		}
		_iter_end_1adbb7971:;
	};
}



inline void _1aa2e4e70_fieldDecl(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29104_FieldIns>* _61034_f) {
	_1aa306c0c_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_61034_f))))._field_Kind);
	_1aa2e0c6d_write(_self_, jule::Str::lit(" ", 1));
	static__1aa230581_field(&((*_self_.alloc)._field_Buf), &((*((*(_61034_f))))._field_Decl));
	if (((*((*(_61034_f))))._field_Default == nullptr)) {
		if (_1aa30e033_shouldInitialized(&((*((*(_61034_f))))._field_Kind))) {
			_1aa2e0c6d_write(_self_, jule::Str::lit(" = ", 3));
			_1aa226ea1_initExpr((*_self_.alloc)._field_ec, (*((*(_61034_f))))._field_Kind);
		};
	} else {
		_1aa2e0c6d_write(_self_, jule::Str::lit(" = ", 3));
		_1aa21c32b_possibleRefExpr((*_self_.alloc)._field_ec, (*((*((*(_61034_f))))._field_Default))._field_Model);
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit(";", 1));
}



inline void _1aa2e5228_structureDestructor(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _62844_s) {
	;
	jule::Ptr<_1a8d3be91_Fn> _6319_disposeMethod = _1a8d2ac1b_FindMethod((*(_62844_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _63213_disposed = static__1a8de5654_Dispose(_6319_disposeMethod);;
	if ((!(_63213_disposed))) {
		return;;
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit("~", 1));
	static__1aa230295_structureIns(&((*_self_.alloc)._field_Buf), _62844_s);
	_1aa2e0c6d_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1aa22e30a_func(&((*_self_.alloc)._field_Buf), &(_6319_disposeMethod));
	_1aa2e0c6d_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1aa2e558b_structureOperatorEq(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Slice<jule::U8> _64439_ident, jule::Ptr<_1a8d29ba4_StructIns>* _64459_s) {
	if ((!((*((*(_64459_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_64459_s))))._field_Operators._field_Eq != nullptr)) {
		_1aa2e5d1c_structureOperator(_self_, _64439_ident, &((*((*(_64459_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1aa2e1620_indent(_self_);
	if (_1a90984c7_Inline) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1aa2e1026_writeBytes(_self_, _64439_ident);
	_1aa2e0c6d_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_64459_s))))._field_Fields.len() > 0LL)) {
		_1aa2e1224_addIndent(_self_);
		_1aa2e0c6d_write(_self_, jule::Str::lit("\n", 1));
		_1aa2e1620_indent(_self_);
		_1aa2e0c6d_write(_self_, jule::Str::lit("return ", 7));
		_1aa2e1224_addIndent(_self_);
		jule::Bool _66717_writed = false;;
		{
			auto expr = &((*((*(_64459_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adbc5a5b:;
			if (it != expr_end) {
				jule::Ptr<_1a8d29104_FieldIns> _66825_f = *it;
				{
					jule::Ptr<_1a8d29ba4_StructIns> _67017_strct = _1a8e86be0_Struct((*(_66825_f))._field_Kind.ptr());;
					if ((((_67017_strct != nullptr) && ((*_67017_strct.alloc)._field_Decl != nullptr)) && (*(*_67017_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						goto _iter_next_1adbc5a5b;
					};
					if (_66717_writed) {
						_1aa2e0c6d_write(_self_, jule::Str::lit(" &&", 3));
					};
					_66717_writed=true;
					_1aa2e0c6d_write(_self_, jule::Str::lit("\n", 1));
					_1aa2e1620_indent(_self_);
					_1aa2e0c6d_write(_self_, jule::Str::lit("this->", 6));
					_2234c269a_StrBuilder _68121_fIdent = static__2234c2ac9_New((*((*_66825_f.alloc)._field_Decl))._field_Ident.len());;
					static__1aa230581_field(&(_68121_fIdent), &((*_66825_f.alloc)._field_Decl));
					_1aa2e1026_writeBytes(_self_, _2234c43d3_Buf(&_68121_fIdent));
					_1aa2e0c6d_write(_self_, jule::Str::lit(" == _other.", 11));
					_1aa2e1026_writeBytes(_self_, _2234c43d3_Buf(&_68121_fIdent));
				}
				_iter_next_1adbc5a5b:;
				++it;
				goto _iter_begin_1adbc5a5b;
			}
			_iter_end_1adbc5a5b:;
		};
		_1aa2e1422_doneIndent(_self_);
		if ((!(_66717_writed))) {
			_1aa2e0c6d_write(_self_, jule::Str::lit("true", 4));
		};
		_1aa2e0c6d_write(_self_, jule::Str::lit(";\n", 2));
		_1aa2e1422_doneIndent(_self_);
		_1aa2e1620_indent(_self_);
		_1aa2e0c6d_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1aa2e0c6d_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1aa2e58ee_structureOperatorNotEq(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Slice<jule::U8> _70142_ident, jule::Ptr<_1a8d29ba4_StructIns>* _70162_s) {
	if ((!((*((*(_70162_s))))._field_Comparable))) {
		return;;
	};
	_1aa2e1620_indent(_self_);
	if (_1a90984c7_Inline) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1aa2e1026_writeBytes(_self_, _70142_ident);
	_1aa2e0c6d_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1aa2e5d1c_structureOperator(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Slice<jule::U8> _71537_ident, jule::Ptr<_1a8d3ee72_FnIns>* _71557_f, jule::Str _71568_op) {
	if (((*(_71557_f)) == nullptr)) {
		return;;
	};
	jule::Bool _7209_unary = ((*((*(_71557_f))))._field_Params.len() == 1LL);;
	jule::Bool _7219_assignment = _1a8d3c414_IsVoid((*((*(_71557_f))))._field_Decl.ptr());;
	_1aa2e1620_indent(_self_);
	if (_1a90984c7_Inline) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_7219_assignment) {
		_1aa2e1026_writeBytes(_self_, _71537_ident);
		_1aa2e0c6d_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1a8e8566c_Prim((*((*(_71557_f))))._field_Result.ptr()) == nullptr)) {
			_1aa2e1026_writeBytes(_self_, _71537_ident);
		} else {
			_1aa2e0c6d_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit(" operator", 9));
	_1aa2e0c6d_write(_self_, _71568_op);
	_1aa2e0c6d_write(_self_, jule::Str::lit("(", 1));
	if ((!(_7209_unary))) {
		jule::Ptr<_1a8d3dde9_ParamIns> _74317_p = (*((*(_71557_f))))._field_Params[1LL];;
		_1aa3059ec_paramIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), &(_74317_p));
		_1aa2e0c6d_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_7219_assignment))) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1aa22e5e6_funcIns(&((*_self_.alloc)._field_Buf), _71557_f);
	if ((!(_7209_unary))) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_7219_assignment) {
			_1aa2e0c6d_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1aa2e0c6d_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1aa2e0c6d_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1aa2e60c5_structureOperators(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _76443_s) {
	_2234c269a_StrBuilder _76513_sb = static__2234c2ac9_New(40LL);;
	static__1aa230295_structureIns(&(_76513_sb), _76443_s);
	jule::Slice<jule::U8> _7679_ident = _2234c43d3_Buf(&_76513_sb);;
	_1aa2e558b_structureOperatorEq(_self_, _7679_ident, _76443_s);
	_1aa2e58ee_structureOperatorNotEq(_self_, _7679_ident, _76443_s);
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1aa2e5d1c_structureOperator(_self_, _7679_ident, &((*((*(_76443_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1aa2e637d_structureInsDecl(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _80541_s) {
	{
		auto expr = &((*((*(_80541_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbe8760:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _80621_m = *it;
			{
				if (_1aa2eea4b_isHeadDecl(&(_80621_m))) {
					_1aa2e76d1_funcDecl(_self_, &(_80621_m), false);
				};
			}
			_iter_next_1adbe8760:;
			++it;
			goto _iter_begin_1adbe8760;
		}
		_iter_end_1adbe8760:;
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit("struct ", 7));
	static__1aa230295_structureIns(&((*_self_.alloc)._field_Buf), _80541_s);
	_1aa2e0c6d_write(_self_, jule::Str::lit(" {\n", 3));
	_1aa2e1224_addIndent(_self_);
	{
		auto expr = &((*((*(_80541_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbe9068:;
		if (it != expr_end) {
			jule::Ptr<_1a8d29104_FieldIns> _81721_f = *it;
			{
				_1aa2e1620_indent(_self_);
				_1aa2e4e70_fieldDecl(_self_, &(_81721_f));
				_1aa2e0c6d_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1adbe9068:;
			++it;
			goto _iter_begin_1adbe9068;
		}
		_iter_end_1adbe9068:;
	};
	_1aa2e1620_indent(_self_);
	_1aa2e5228_structureDestructor(_self_, _80541_s);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
	_1aa2e60c5_structureOperators(_self_, _80541_s);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n", 1));
	_1aa2e1422_doneIndent(_self_);
	_1aa2e1620_indent(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("};", 2));
}



inline void _1aa2e6636_structureDecl(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d26e26_Struct>* _83538_s) {
	{
		auto expr = &((*((*(_83538_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbedcc6:;
		if (it != expr_end) {
			jule::Ptr<_1a8d29ba4_StructIns> _83621_ins = *it;
			{
				_1aa2e637d_structureInsDecl(_self_, &(_83621_ins));
			}
			_iter_next_1adbedcc6:;
			++it;
			goto _iter_begin_1adbedcc6;
		}
		_iter_end_1adbedcc6:;
	};
}



inline void _1aa2e6834_structureDecls(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbee546:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> _84221_s = *it;
			{
				if (((*(_84221_s))._field_Token != nullptr)) {
					_1aa2e6636_structureDecl(_self_, &(_84221_s));
					_1aa2e0c6d_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1adbee546:;
			++it;
			goto _iter_begin_1adbee546;
		}
		_iter_end_1adbee546:;
	};
}



inline void _1aa2e6a32_structureMethodDecls(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc00558:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> _85121_s = *it;
			{
				if (((*(_85121_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_85121_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1adc02626:;
						if (it != expr_end) {
							jule::Ptr<_1a8d29ba4_StructIns> _85329_ins = *it;
							{
								{
									auto expr = &((*(_85329_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1adc03061:;
									if (it != expr_end) {
										jule::Ptr<_1a8d3be91_Fn> _85433_m = *it;
										{
											if ((!(_1aa2eea4b_isHeadDecl(&(_85433_m))))) {
												_1aa2e2995_pushResult(_self_, &(_85433_m));
												_1aa2e76d1_funcDecl(_self_, &(_85433_m), false);
											};
										}
										_iter_next_1adc03061:;
										++it;
										goto _iter_begin_1adc03061;
									}
									_iter_end_1adc03061:;
								};
							}
							_iter_next_1adc02626:;
							++it;
							goto _iter_begin_1adc02626;
						}
						_iter_end_1adc02626:;
					};
				};
			}
			_iter_next_1adc00558:;
			++it;
			goto _iter_begin_1adc00558;
		}
		_iter_end_1adc00558:;
	};
}



inline void _1aa2e700a_funcHead(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, _2234c269a_StrBuilder* _86933_buf, jule::Ptr<_1a8d3ee72_FnIns>* _86955_f, jule::Bool _86966_ptr, jule::Str _86977_ident) {
	if ((((!(_86966_ptr)) && _1a90984c7_Inline) && (!(_1a8d3c931_IsEntryPoint((*((*(_86955_f))))._field_Decl.ptr()))))) {
		_2234c313a_WriteStr(_86933_buf, jule::Str::lit("inline ", 7));
	};
	_1aa3061c3_funcInsResult((*(_self_))._field_tc.ptr(), _86933_buf, _86955_f);
	if (_86966_ptr) {
		_2234c313a_WriteStr(_86933_buf, jule::Str::lit("(*", 2));
		static__1aa22e5e6_funcIns(_86933_buf, _86955_f);
		_2234c33e3_WriteByte(_86933_buf, ')');
	} else {
		_2234c33e3_WriteByte(_86933_buf, ' ');
		if ((_86977_ident).empty()) {
			static__1aa22e5e6_funcIns(_86933_buf, _86955_f);
		} else {
			_2234c313a_WriteStr(_86933_buf, _86977_ident);
		};
	};
}



inline void _1aa2e736d_funcDeclIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _88836_f, jule::Bool _88847_ptr) {
	_1aa2e1620_indent(_self_);
	_1aa2e700a_funcHead(_self_, &((*_self_.alloc)._field_Buf), _88836_f, _88847_ptr, jule::Str());
	_1aa2e8814_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _88836_f);
	_1aa2e0c6d_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1aa2e76d1_funcDecl(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3be91_Fn>* _89533_f, jule::Bool _89541_ptr) {
	{
		auto expr = &((*((*(_89533_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc09254:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3ee72_FnIns> _89621_c = *it;
			{
				_1aa2e736d_funcDeclIns(_self_, &(_89621_c), _89541_ptr);
			}
			_iter_next_1adc09254:;
			++it;
			goto _iter_begin_1adc09254;
		}
		_iter_end_1adc09254:;
	};
}



inline void _1aa2e7989_funcDeclTrait(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3be91_Fn>* _90138_f) {
	{
		auto expr = &((*((*(_90138_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc0a167:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3ee72_FnIns> _90221_c = *it;
			{
				jule::Ptr<_1a8e8301b_TypeKind> _90317_k = (*((*(_90221_c))._field_Params[0LL]))._field_Kind;;
				(*((*_90221_c.alloc)._field_Params[0LL]))._field_Kind=_1aa2dd034_generalGCPtr;
				_1aa2e736d_funcDeclIns(_self_, &(_90221_c), true);
				(*((*_90221_c.alloc)._field_Params[0LL]))._field_Kind=_90317_k;
			}
			_iter_next_1adc0a167:;
			++it;
			goto _iter_begin_1adc0a167;
		}
		_iter_end_1adc0a167:;
	};
}



inline void _1aa2e7b87_funcDecls(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	_1aa2e4513_iterPackages(_self_, jule::__new_closure<void,jule::Ptr<_1a8da3dc6_Package>*>((void*)__jule_anon_1adc0cd29, jule::Ptr<__jule_anon_1adc0cd29_ctx>::make(__jule_anon_1adc0cd29_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1adc0cd29_ctx_handler));
}



inline void _1aa2e7e40_traitDataTypeMethods(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d5034a_Trait>* _92345_t) {
	{
		auto expr = &((*((*(_92345_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc0d203:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _92421_m = *it;
			{
				jule::Ptr<_1a8d3ee72_FnIns> _92517_ins = (*(_92421_m))._field_Instances[0LL];;
				{
					auto expr = (*(_92517_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1adc1204d:;
					if (it != expr_end) {
						jule::I32 _92618_i = it - expr.begin();
						jule::Ptr<_1a8d3dde9_ParamIns> _92625_ip = *it;
						{
							if (_1a8760b3a_IsAnonIdent((*((*(_92625_ip))._field_Decl))._field_Ident)) {
								(*(*_92625_ip.alloc)._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _20a2a9489_Itoa(_92618_i));
							};
						}
						_iter_next_1adc1204d:;
						++it;
						_92618_i++;
						goto _iter_begin_1adc1204d;
					}
					_iter_end_1adc1204d:;
				};
				_1aa2e2995_pushResult(_self_, &(_92421_m));
				_1aa2e7989_funcDeclTrait(_self_, &(_92421_m));
			}
			_iter_next_1adc0d203:;
			++it;
			goto _iter_begin_1adc0d203;
		}
		_iter_end_1adc0d203:;
	};
}



inline void _1aa2e813d_traitDataTypes(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	_1aa2e4513_iterPackages(_self_, jule::__new_closure<void,jule::Ptr<_1a8da3dc6_Package>*>((void*)__jule_anon_1adc1444b, jule::Ptr<__jule_anon_1adc1444b_ctx>::make(__jule_anon_1adc1444b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1adc1444b_ctx_handler));
}



inline void _1aa2e84a1_paramIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, _2234c269a_StrBuilder* _96233_buf, jule::Ptr<_1a8d3dde9_ParamIns>* _96255_p) {
	_1aa3059ec_paramIns((*(_self_))._field_tc.ptr(), _96233_buf, _96255_p);
	_2234c33e3_WriteByte(_96233_buf, ' ');
	static__1aa22ebbd_param(_96233_buf, &((*((*(_96255_p))))._field_Decl));
}



inline void _1aa2e8814_paramsIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, _2234c269a_StrBuilder* _96834_buf, jule::Ptr<_1a8d3ee72_FnIns>* _96856_f) {
	if (((!((*((*(_96856_f))))._field_AsAnon)) && ((*((*(_96856_f))))._field_Params.len() == 0LL))) {
		_2234c313a_WriteStr(_96834_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_2234c33e3_WriteByte(_96834_buf, '(');
	if ((*((*(_96856_f))))._field_AsAnon) {
		_2234c313a_WriteStr(_96834_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_96856_f))))._field_Params.len() > 0LL)) {
			_2234c313a_WriteStr(_96834_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_96856_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5966b3:;
		if (it != expr_end) {
			jule::I32 _98014_i = it - expr->begin();
			jule::Ptr<_1a8d3dde9_ParamIns> _98021_p = *it;
			{
				_1aa2e84a1_paramIns(_self_, _96834_buf, &(_98021_p));
				if ((((*((*(_96856_f))))._field_Params.len() - _98014_i) > 1LL)) {
					_2234c313a_WriteStr(_96834_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ad5966b3:;
			++it;
			_98014_i++;
			goto _iter_begin_1ad5966b3;
		}
		_iter_end_1ad5966b3:;
	};
	_2234c33e3_WriteByte(_96834_buf, ')');
}



inline void _1aa2e8b77_varInitExpr(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8de41ad_Var>* _98936_v, jule::Fn<void> _98945_init) {
	if ((*((*(_98936_v))))._field_Statically) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("static ", 7));
	};
	_1aa306c0c_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_98936_v))))._field_Kind))._field_Kind);
	_1aa2e0c6d_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_98936_v))))._field_Reference) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("*", 1));
	};
	static__1aa23086c_var(&((*_self_.alloc)._field_Buf), (*(_98936_v)));
	if ((_98945_init != nullptr)) {
		_1aa2e0c6d_write(_self_, jule::Str::lit(" = ", 3));
		_98945_init();
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit(";", 1));
}



inline void _1aa2e8e30_var(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8de41ad_Var> _100727_v) {
	if (_1a8760871_IsIgnoreIdent((*(_100727_v))._field_Ident)) {
		return;;
	};
	if ((((*_100727_v.alloc)._field_Value != nullptr) && ((*(*_100727_v.alloc)._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*_100727_v.alloc)._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_100727_v.alloc)._field_Reference) {
				_1aa2e8b77_varInitExpr(_self_, &(_100727_v), jule::__new_closure<void>((void*)__jule_anon_1ad664dd0, jule::Ptr<__jule_anon_1ad664dd0_ctx>::make(__jule_anon_1ad664dd0_ctx{._self_=_self_,._100727_v=_100727_v}).as<jule::Uintptr>(), __jule_anon_1ad664dd0_ctx_handler));
			} else {
				_1aa2e8b77_varInitExpr(_self_, &(_100727_v), jule::__new_closure<void>((void*)__jule_anon_1ad995d26, jule::Ptr<__jule_anon_1ad995d26_ctx>::make(__jule_anon_1ad995d26_ctx{._self_=_self_,._100727_v=_100727_v}).as<jule::Uintptr>(), __jule_anon_1ad995d26_ctx_handler));
			};
			return;;
		};
		_1aa2e8b77_varInitExpr(_self_, &(_100727_v), nullptr);
		return;;
	};
	if ((*_100727_v.alloc)._field_Reference) {
		_1aa2e8b77_varInitExpr(_self_, &(_100727_v), jule::__new_closure<void>((void*)__jule_anon_1ad998499, jule::Ptr<__jule_anon_1ad998499_ctx>::make(__jule_anon_1ad998499_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad998499_ctx_handler));
		return;;
	};
	if (_1aa30e033_shouldInitialized(&((*((*_100727_v.alloc)._field_Kind))._field_Kind))) {
		_1aa2e8b77_varInitExpr(_self_, &(_100727_v), jule::__new_closure<void>((void*)__jule_anon_1ad999621, jule::Ptr<__jule_anon_1ad999621_ctx>::make(__jule_anon_1ad999621_ctx{._self_=_self_,._100727_v=_100727_v}).as<jule::Uintptr>(), __jule_anon_1ad999621_ctx_handler));
		return;;
	};
	_1aa2e8b77_varInitExpr(_self_, &(_100727_v), nullptr);
}



inline void _1aa2e9293_anonFuncInsDecl(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel>* _103840_m, jule::Str _103861_ident) {
	_1aa2e700a_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_103840_m))))._field_Func), false, _103861_ident);
	_1aa2e8814_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_103840_m))))._field_Func));
	_2234c33e3_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1aa2e9606_anonFuncIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d31e64_AnonFnExprModel>* _104436_m, jule::Str _104457_ident) {
	_1aa2e700a_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_104436_m))))._field_Func), false, _104457_ident);
	_1aa2e8814_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_104436_m))))._field_Func));
	_1aa2e0c6d_write(_self_, jule::Str::lit(" ", 1));
	_1aa2156ba_anonFuncScope((*_self_.alloc)._field_sc, (*(_104436_m)), _104457_ident);
	if (((*((*((*(_104436_m))))._field_Func))._field_Scope != nullptr)) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1aa2e98ae_funcIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _105432_f) {
	_1aa2e700a_funcHead(_self_, &((*_self_.alloc)._field_Buf), _105432_f, false, jule::Str());
	_1aa2e8814_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _105432_f);
	_1aa2e0c6d_write(_self_, jule::Str::lit(" ", 1));
	_1aa215973_funcScope((*_self_.alloc)._field_sc, (*(_105432_f)));
	if (((*((*(_105432_f))))._field_Scope != nullptr)) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1aa2e9b67_func(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3be91_Fn>* _106429_f) {
	{
		auto expr = &((*((*(_106429_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9a3185:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3ee72_FnIns> _106521_ins = *it;
			{
				_1aa2e98ae_funcIns(_self_, &(_106521_ins));
			}
			_iter_next_1ad9a3185:;
			++it;
			goto _iter_begin_1ad9a3185;
		}
		_iter_end_1ad9a3185:;
	};
}



inline void _1aa2e9eca_funcTrait(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1aa2dd85e_traitHash>* _107034_hash, jule::Ptr<_1a8d3be91_Fn>* _107057_f) {
	jule::Str _10719_ident = (*((*(_107057_f))))._field_Ident;;
	{
		auto expr = &((*((*(_107057_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9a494a:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3ee72_FnIns> _107221_ins = *it;
			{
				(*(_107221_ins))._field_Scope=nullptr;
				_2234c269a_StrBuilder _107517_s = static__2234c2ac9_New((((((*((*(_107057_f))))._field_Ident.len() + _10719_ident.len()) + (*((*(_107034_hash))))._field_ti.len()) + 2LL) + 4LLU));;
				_2234c313a_WriteStr(&_107517_s, _10719_ident);
				_2234c33e3_WriteByte(&_107517_s, '_');
				_2234c313a_WriteStr(&_107517_s, (*((*(_107034_hash))))._field_ti);
				_2234c33e3_WriteByte(&_107517_s, '_');
				_2234c313a_WriteStr(&_107517_s, _20a2a9489_Itoa((*((*(_107034_hash))))._field_i));
				(*((*(_107057_f))))._field_Ident=_2234c3932_Str(&_107517_s);
				jule::Ptr<_1a8e8301b_TypeKind> _108417_k = (*((*_107221_ins.alloc)._field_Params[0LL]))._field_Kind;;
				(*((*_107221_ins.alloc)._field_Params[0LL]))._field_Kind=_1aa2dd034_generalGCPtr;
				_1aa2e98ae_funcIns(_self_, &(_107221_ins));
				(*((*_107221_ins.alloc)._field_Params[0LL]))._field_Kind=_108417_k;
			}
			_iter_next_1ad9a494a:;
			++it;
			goto _iter_begin_1ad9a494a;
		}
		_iter_end_1ad9a494a:;
	};
	(*((*(_107057_f))))._field_Ident=_10719_ident;
}



inline void _1aa2ea33d_traitWrapper(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d3be91_Fn>* _109237_m, jule::Ptr<_1aa2dd85e_traitHash>* _109250_hash) {
	if (((*((*((*(_109250_hash))))._field_t))._field_Implemented.len() == 0LL)) {
		return;;
	};
	_1aa2e9eca_funcTrait(_self_, _109250_hash, _109237_m);
	jule::Bool _10999_ptr = (!(_1a8d3ad6e_IsRef((*((*(_109237_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_1a8d3be91_Fn> _110113_sm = _1a8d2ac1b_FindMethod((*((*(_109250_hash))))._field_s.ptr(), (*((*(_109237_m))))._field_Ident, false);;
	if (((_110113_sm == nullptr) || ((*(_110113_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_1aa2e1224_addIndent(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("{\n", 2));
	_1aa2e1620_indent(_self_);
	if (((*(_110113_sm))._field_Exceptional || (!(_1a8d3c414_IsVoid(_110113_sm.ptr()))))) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1aa22e30a_func(&((*_self_.alloc)._field_Buf), &(_110113_sm));
	_1aa2e0c6d_write(_self_, jule::Str::lit("(", 1));
	_1aa2e0c6d_write(_self_, jule::Str::lit("_self_.as<", 10));
	if (_10999_ptr) {
		_1aa304eb3_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_109250_hash))))._field_s);
	} else {
		_1aa304b50_structure((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*(_110113_sm))._field_Owner);
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit(">()", 3));
	if (_10999_ptr) {
		_1aa2e0c6d_write(_self_, jule::Str::lit(".alloc", 6));
	};
	{
		auto expr = (*((*(_109237_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad9b2084:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3a4bc_Param> _112416_mp = *it;
			{
				_1aa2e0c6d_write(_self_, jule::Str::lit(", ", 2));
				static__1aa22ebbd_param(&((*_self_.alloc)._field_Buf), &(_112416_mp));
			}
			_iter_next_1ad9b2084:;
			++it;
			goto _iter_begin_1ad9b2084;
		}
		_iter_end_1ad9b2084:;
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit(");\n}\n", 5));
	_1aa2e1422_doneIndent(_self_);
}



inline void _1aa2ea53b_traitWrappers(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9b3bbd:;
		if (it != expr_end) {
			jule::Ptr<_1aa2dd85e_traitHash> _113321_hash = *it;
			{
				{
					auto expr = &((*((*(_113321_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad9b463b:;
					if (it != expr_end) {
						jule::Ptr<_1a8d3be91_Fn> _113425_m = *it;
						{
							_1aa2ea33d_traitWrapper(_self_, &(_113425_m), &(_113321_hash));
						}
						_iter_next_1ad9b463b:;
						++it;
						goto _iter_begin_1ad9b463b;
					}
					_iter_end_1ad9b463b:;
				};
			}
			_iter_next_1ad9b3bbd:;
			++it;
			goto _iter_begin_1ad9b3bbd;
		}
		_iter_end_1ad9b3bbd:;
	};
}



inline void _1aa2ea89e_traitDataMethods(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d5034a_Trait>* _114041_t, jule::Ptr<_1aa2dd85e_traitHash>* _114053_hash) {
	{
		auto expr = &((*((*(_114041_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9b56c5:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _114121_m = *it;
			{
				_2234c269a_StrBuilder _114217_mIdent = static__2234c2ac9_New((*(_114121_m))._field_Ident.len());;
				static__1aa22e30a_func(&(_114217_mIdent), &(_114121_m));
				_1aa2e1620_indent(_self_);
				_1aa2e0c6d_write(_self_, jule::Str::lit(".", 1));
				_1aa2e1026_writeBytes(_self_, _2234c43d3_Buf(&_114217_mIdent));
				_1aa2e0c6d_write(_self_, jule::Str::lit("=", 1));
				_1aa2e1026_writeBytes(_self_, _2234c43d3_Buf(&_114217_mIdent));
				_1aa2e0c6d_write(_self_, jule::Str::lit("_", 1));
				_1aa2e0c6d_write(_self_, (*((*(_114053_hash))))._field_ti);
				_1aa2e0c6d_write(_self_, jule::Str::lit("_", 1));
				_1aa2e0c6d_write(_self_, _20a2a9489_Itoa((*((*(_114053_hash))))._field_i));
				_1aa2e0c6d_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1ad9b56c5:;
			++it;
			goto _iter_begin_1ad9b56c5;
		}
		_iter_end_1ad9b56c5:;
	};
}



inline void _1aa2eab57_traitData(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1aa2dd85e_traitHash>* _115734_hash) {
	if ((((*((*((*(_115734_hash))))._field_t))._field_Methods.len() == 0LL) || ((*(*((*(_115734_hash))))._field_t.alloc)._field_Implemented.len() == 0LL))) {
		return;;
	};
	_2234c269a_StrBuilder _116113_ident = static__2234c2ac9_New((*(*((*(_115734_hash))))._field_t.alloc)._field_Ident.len());;
	static__1aa22e8d2_traitDecl(&(_116113_ident), (*((*(_115734_hash))))._field_t);
	_1aa2e0c6d_write(_self_, jule::Str::lit("static ", 7));
	_1aa2e1026_writeBytes(_self_, _2234c43d3_Buf(&_116113_ident));
	_1aa2e0c6d_write(_self_, jule::Str::lit("MptrData ", 9));
	_1aa2e1026_writeBytes(_self_, _2234c43d3_Buf(&_116113_ident));
	_1aa2e0c6d_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1aa2e0c6d_write(_self_, _20a2a9489_Itoa((*((*(_115734_hash))))._field_i));
	_1aa2e0c6d_write(_self_, jule::Str::lit(" {\n", 3));
	_1aa2e1224_addIndent(_self_);
	_1aa2e1620_indent(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	jule::I32 _11739_i = _1aa2e1ca2_pushDealloc(_self_, jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait((*((*(_115734_hash))))._field_s, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0)}));;
	_1aa2e0c6d_write(_self_, _20a2a9489_Itoa(_11739_i));
	_1aa2e0c6d_write(_self_, jule::Str::lit(",\n", 2));
	_1aa2ea89e_traitDataMethods(_self_, &((*((*(_115734_hash))))._field_t), _115734_hash);
	_1aa2e1422_doneIndent(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("};", 2));
}



inline void _1aa2ead55_traitDatas(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9c1eb7:;
		if (it != expr_end) {
			jule::Ptr<_1aa2dd85e_traitHash> _118221_hash = *it;
			{
				_1aa2eab57_traitData(_self_, &(_118221_hash));
			}
			_iter_next_1ad9c1eb7:;
			++it;
			goto _iter_begin_1ad9c1eb7;
		}
		_iter_end_1ad9c1eb7:;
	};
}



inline void _1aa2eb053_globals(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9c2737:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> _118821_v = *it;
			{
				_1aa306c0c_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_118821_v))._field_Kind))._field_Kind);
				_1aa2e0c6d_write(_self_, jule::Str::lit(" ", 1));
				static__1aa23086c_var(&((*_self_.alloc)._field_Buf), _118821_v);
				_1aa2e0c6d_write(_self_, jule::Str::lit(" = ", 3));
				_1aa226be8_model((*_self_.alloc)._field_ec, (*((*((*_118821_v.alloc)._field_Value))._field_Data))._field_Model);
				_1aa2e0c6d_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad9c2737:;
			++it;
			goto _iter_begin_1ad9c2737;
		}
		_iter_end_1ad9c2737:;
	};
}



inline void _1aa2eb251_decls(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	_1aa2e4bb7_structurePlainDecls(_self_);
	_1aa2e6834_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_2234c3db6_Len(&(*_self_.alloc)._field_Buf);
	_1aa2e6a32_structureMethodDecls(_self_);
	_1aa2e7b87_funcDecls(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
	_1aa2e813d_traitDataTypes(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_2234c3db6_Len(&(*_self_.alloc)._field_Buf);
	_1aa2ea53b_traitWrappers(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
	_1aa2ead55_traitDatas(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_2234c3db6_Len(&(*_self_.alloc)._field_Buf);
	_1aa2eb053_globals(_self_);
}



inline void _1aa2eb509_structureMethods(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _121641_s) {
	{
		auto expr = &((*((*(_121641_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9ca93d:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _121721_f = *it;
			{
				_1aa2e9b67_func(_self_, &(_121721_f));
				_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ad9ca93d:;
			++it;
			goto _iter_begin_1ad9ca93d;
		}
		_iter_end_1ad9ca93d:;
	};
}



inline void _1aa2eb7b2_structureOstream(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _122341_s) {
	_1aa2e1620_indent(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1aa230295_structureIns(&((*_self_.alloc)._field_Buf), _122341_s);
	_1aa2e0c6d_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1aa2e1224_addIndent(_self_);
	_1aa2e1620_indent(_self_);
	jule::Ptr<_1a8d3be91_Fn> _123113_fts = _1a8d2ac1b_FindMethod((*(_122341_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1a8de591d_Str(_123113_fts)) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1aa22e30a_func(&((*_self_.alloc)._field_Buf), &(_123113_fts));
		_1aa2e0c6d_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1aa2e0c6d_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1aa227963_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*((*(_122341_s))))._field_Decl))._field_Ident);
		_1aa2e0c6d_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_122341_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad9d057a:;
			if (it != expr_end) {
				jule::I32 _124118_i = it - expr->begin();
				jule::Ptr<_1a8d29104_FieldIns> _124125_f = *it;
				{
					_1aa2e1620_indent(_self_);
					_1aa2e0c6d_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1aa227963_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*(_124125_f))._field_Decl))._field_Ident);
					_1aa2e0c6d_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1a8d29ba4_StructIns> _124817_strct = _1a8e86be0_Struct((*_124125_f.alloc)._field_Kind.ptr());;
					if ((((_124817_strct != nullptr) && ((*_124817_strct.alloc)._field_Decl != nullptr)) && (*(*_124817_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						_1aa2e0c6d_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1aa230581_field(&((*_self_.alloc)._field_Buf), &((*_124125_f.alloc)._field_Decl));
						_1aa2e0c6d_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1aa2e0c6d_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1aa230581_field(&((*_self_.alloc)._field_Buf), &((*_124125_f.alloc)._field_Decl));
					};
					if (((_124118_i + 1LL) < (*((*(_122341_s))))._field_Fields.len())) {
						_1aa2e0c6d_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1aa2e0c6d_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1ad9d057a:;
				++it;
				_124118_i++;
				goto _iter_begin_1ad9d057a;
			}
			_iter_end_1ad9d057a:;
		};
		_1aa2e1620_indent(_self_);
		_1aa2e0c6d_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1aa2e1620_indent(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1aa2e1422_doneIndent(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("}", 1));
}



inline void _1aa2eba6a_structureIns(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _127437_s) {
	_1aa2eb509_structureMethods(_self_, _127437_s);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
	_1aa2eb7b2_structureOstream(_self_, _127437_s);
}



inline void _1aa2ebd23_structure(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8d26e26_Struct>* _128034_s) {
	{
		auto expr = &((*((*(_128034_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9d982b:;
		if (it != expr_end) {
			jule::Ptr<_1a8d29ba4_StructIns> _128121_ins = *it;
			{
				_1aa2eba6a_structureIns(_self_, &(_128121_ins));
				_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ad9d982b:;
			++it;
			goto _iter_begin_1ad9d982b;
		}
		_iter_end_1ad9d982b:;
	};
}



inline void _1aa2ec021_structures(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adca6488:;
		if (it != expr_end) {
			jule::Ptr<_1a8d26e26_Struct> _128821_s = *it;
			{
				if (((*(_128821_s))._field_Token != nullptr)) {
					_1aa2ebd23_structure(_self_, &(_128821_s));
					_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1adca6488:;
			++it;
			goto _iter_begin_1adca6488;
		}
		_iter_end_1adca6488:;
	};
}



inline void _1aa2ec21e_funcs(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	_1aa2e4513_iterPackages(_self_, jule::__new_closure<void,jule::Ptr<_1a8da3dc6_Package>*>((void*)__jule_anon_1adca9007, jule::Ptr<__jule_anon_1adca9007_ctx>::make(__jule_anon_1adca9007_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1adca9007_ctx_handler));
}



inline void _1aa2ec4c7_pushInit(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, jule::Ptr<_1a8da3dc6_Package>* _131233_pkg) {
	_1aa2ed71a_iterFiles(_131233_pkg, jule::__new_closure<void,jule::Ptr<_1a8e4694c_SymbolTable>*>((void*)__jule_anon_1adcacadd, jule::Ptr<__jule_anon_1adcacadd_ctx>::make(__jule_anon_1adcacadd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1adcacadd_ctx_handler));
}



inline void _1aa2ec6c5_anonHashes(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	_julec_label_1adca7e29:;
	jule::Slice<jule::Ptr<_1aa2de156_anonHash>> _132913_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_132913_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adcada89:;
		if (it != expr_end) {
			jule::Ptr<_1aa2de156_anonHash> _133121_h = *it;
			{
				_1aa2e9606_anonFuncIns(_self_, &((*(_133121_h))._field_expr), (*_133121_h.alloc)._field_ident);
			}
			_iter_next_1adcada89:;
			++it;
			goto _iter_begin_1adcada89;
		}
		_iter_end_1adcada89:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1adca7e29;
	};
}



inline void _1aa2ec8c3_initCaller(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	_1aa2e0c6d_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1aa2e1224_addIndent(_self_);
	_1aa2e4513_iterPackages(_self_, jule::__new_closure<void,jule::Ptr<_1a8da3dc6_Package>*>((void*)__jule_anon_1adcb32ec, jule::Ptr<__jule_anon_1adcb32ec_ctx>::make(__jule_anon_1adcb32ec_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1adcb32ec_ctx_handler));
	_1aa2e1422_doneIndent(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1aa2ecac1_end(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	_1aa2e0c6d_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_22eb8c122_Test) {
		_1aa2e0c6d_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1aa2e0c6d_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1aa2ece34_insertBuf(jule::Ptr<_1aa2e0586_ObjectCoder> _self_, _2234c269a_StrBuilder* _136934_buf, jule::I32 _136951_pos) {
	if ((_2234c3db6_Len(_136934_buf) > 0LL)) {
		jule::Slice<jule::U8> _137117_head = jule::Slice<jule::U8>::alloc(0LL, (_2234c3db6_Len(&(*(_self_))._field_Buf) + _2234c3db6_Len(_136934_buf)), 0);;
		(_137117_head).append(_2234c43d3_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _136951_pos));;
		(_137117_head).append(_2234c43d3_Buf(_136934_buf));;
		(_137117_head).append(_2234c43d3_Buf(&(*_self_.alloc)._field_Buf).slice(_136951_pos));;
		{
			_2234c468b_SetBuf(&(*_self_.alloc)._field_Buf, _137117_head);
		};
	};
}



inline void _1aa2ed132_serializeHead(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	_1aa2e425a_prepareStructures(_self_);
	_1aa2e4711_buildTraitMap(_self_);
	_1aa2e3aa6_head(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n", 1));
	_1aa2eb251_decls(_self_);
	_1aa2ece34_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_2234c3db6_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_2234c3db6_Len(&(*_self_.alloc)._field_resultDecls);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n", 1));
	_1aa2ec021_structures(_self_);
	_1aa2ec21e_funcs(_self_);
	_1aa2ec8c3_initCaller(_self_);
	_1aa2e0c6d_write(_self_, jule::Str::lit("\n\n", 2));
	_1aa2ec6c5_anonHashes(_self_);
	_1aa2ece34_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_2234c3db6_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_2234c3db6_Len(&(*_self_.alloc)._field_deallocObj);
	_1aa2ece34_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_2234c3db6_Len(&(*_self_.alloc)._field_anyObj);
	_1aa2ece34_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_2234c3db6_Len(&(*_self_.alloc)._field_anonObj);
}



inline void _1aa2ed330_Serialize(jule::Ptr<_1aa2e0586_ObjectCoder> _self_) {
	_1aa2ed132_serializeHead(_self_);
	_1aa2ecac1_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2e0586_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "anonObj:" << _Src._field_anonObj << ", ";
	_Stream << "deallocObj:" << _Src._field_deallocObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "anons:" << _Src._field_anons << ", ";
	_Stream << "deallocated:" << _Src._field_deallocated << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos << ", ";
	_Stream << "wrapPos:" << _Src._field_wrapPos;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9092a32_dataCheckpoint _Src) {
	_Stream << "dataCheckpoint{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9a6a806_ObjectDeadCode> static__1a9a6ac9b_new(jule::Ptr<_1a990452a_IR>* _3524_ir) {
	return jule::new_ptr<_1a9a6a806_ObjectDeadCode>(_1a9a6a806_ObjectDeadCode{._field_ir=(*(_3524_ir))});;
}



inline jule::Bool _1ad49cec1_isLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d5034a_Trait>* _4130_t) {
	jule::Slice<jule::Ptr<_1a8d5034a_Trait>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1ad49ebd7:;
			{
				_4217_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1ad49ea50:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4a0c82:;
		if (it != expr_end) {
			jule::I32 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1ad4a0c82:;
			++it;
			_5313_i++;
			goto _iter_begin_1ad4a0c82;
		}
		_iter_end_1ad4a0c82:;
	};
	return false;;
}

inline jule::Bool _1ad4a3922_isLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d3ee72_FnIns>* _4130_t) {
	jule::Slice<jule::Ptr<_1a8d3ee72_FnIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1ad4a5517:;
			{
				_4217_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1ad4a545c:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4a54b2:;
		if (it != expr_end) {
			jule::I32 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1ad4a54b2:;
			++it;
			_5313_i++;
			goto _iter_begin_1ad4a54b2;
		}
		_iter_end_1ad4a54b2:;
	};
	return false;;
}

inline jule::Bool _1ad4a976e_isLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d29ba4_StructIns>* _4130_t) {
	jule::Slice<jule::Ptr<_1a8d29ba4_StructIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1ad4ae136:;
			{
				_4217_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1ad4ae015:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4b009e:;
		if (it != expr_end) {
			jule::I32 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1ad4b009e:;
			++it;
			_5313_i++;
			goto _iter_begin_1ad4b009e;
		}
		_iter_end_1ad4b009e:;
	};
	return false;;
}

inline jule::Bool _1ad4b19b8_isLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8de41ad_Var>* _4130_t) {
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1ad4b337c:;
			{
				_4217_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1ad4b3503:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4b3dd8:;
		if (it != expr_end) {
			jule::I32 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1ad4b3dd8:;
			++it;
			_5313_i++;
			goto _iter_begin_1ad4b3dd8;
		}
		_iter_end_1ad4b3dd8:;
	};
	return false;;
}



inline void _1ad49d367_pushLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d5034a_Trait> _6135_t) {
	{
		
{
			_case_begin_1ad4a1ce9:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,jule::Slice<jule::Ptr<_1a8d5034a_Trait>>::make({_6135_t}));
			}
		}
		_match_end_1ad4a114a:;
	};
}

inline void _1ad4a3cb8_pushLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d3ee72_FnIns> _6135_t) {
	{
		
{
			_case_begin_1ad4a7a9c:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a8d3ee72_FnIns>>::make({_6135_t}));
			}
		}
		_match_end_1ad4a71a6:;
	};
}

inline void _1ad4a9d24_pushLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d29ba4_StructIns> _6135_t) {
	{
		
{
			_case_begin_1ad4ab4a7:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,jule::Slice<jule::Ptr<_1a8d29ba4_StructIns>>::make({_6135_t}));
			}
		}
		_match_end_1ad4aa82a:;
	};
}

inline void _1ad4b1d5e_pushLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8de41ad_Var> _6135_t) {
	{
		
{
			_case_begin_1ad4b5aaa:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,jule::Slice<jule::Ptr<_1a8de41ad_Var>>::make({_6135_t}));
			}
		}
		_match_end_1ad4b502c:;
	};
}



inline void _1a9a6b64d_setReferencesAsLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8d43151_ReferenceStack>* _7444_rs) {
	if (((*(_7444_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _7813_i = 0LL;;
	for (; (_7813_i < _1a8d43838_Len((*(_7444_rs)).ptr())); (_7813_i)++) {
		{
			jule::Any _8017_ref = _1a8d43b79_At((*(_7444_rs)).ptr(), _7813_i);;
			{
				auto &_match_expr{ _8017_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1ad49bbc3:;
					{
						jule::Ptr<_1a8d5034a_Trait> _8321_t = _8017_ref.unsafe_cast_ptr<_1a8d5034a_Trait>();;
						if (_1ad49cec1_isLive(_self_, &(_8321_t))) {
							goto _iter_next_1ad49ade2;
						};
						_1ad49d367_pushLive(_self_, _8321_t);
						{
							auto expr = &((*(_8321_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ad49c94e:;
							if (it != expr_end) {
								jule::Ptr<_1a8d3be91_Fn> _8829_ins = *it;
								{
									{
										auto expr = &((*(_8829_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ad4a1dd7:;
										if (it != expr_end) {
											jule::Ptr<_1a8d3ee72_FnIns> _8933_mins = *it;
											{
												if (_1ad4a3922_isLive(_self_, &(_8933_mins))) {
													goto _iter_next_1ad4a1dd7;
												};
												_1ad4a3cb8_pushLive(_self_, _8933_mins);
												_1a9a6b64d_setReferencesAsLive(_self_, &((*(_8933_mins))._field_Refers));
											}
											_iter_next_1ad4a1dd7:;
											++it;
											goto _iter_begin_1ad4a1dd7;
										}
										_iter_end_1ad4a1dd7:;
									};
								}
								_iter_next_1ad49c94e:;
								++it;
								goto _iter_begin_1ad49c94e;
							}
							_iter_end_1ad49c94e:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1ad49ba08:;
					{
						jule::Ptr<_1a8d3ee72_FnIns> _9821_f = _8017_ref.unsafe_cast_ptr<_1a8d3ee72_FnIns>();;
						if (_1ad4a3922_isLive(_self_, &(_9821_f))) {
							goto _match_end_1ad49ba80;
						};
						if ((((*(_9821_f))._field_Owner != nullptr) && (!((*((*_9821_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1ad4a976e_isLive(_self_, &((*_9821_f.alloc)._field_Owner))))) {
								_1ad4a9d24_pushLive(_self_, (*_9821_f.alloc)._field_Owner);
								_1a9a6b64d_setReferencesAsLive(_self_, &((*(*_9821_f.alloc)._field_Owner.alloc)._field_Refers));
							};
						};
						_1ad4a3cb8_pushLive(_self_, _9821_f);
						_1a9a6b64d_setReferencesAsLive(_self_, &((*_9821_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1ad49bc39:;
					{
						jule::Ptr<_1a8de41ad_Var> _11121_v = _8017_ref.unsafe_cast_ptr<_1a8de41ad_Var>();;
						if (_1ad4b19b8_isLive(_self_, &(_11121_v))) {
							goto _match_end_1ad49ba80;
						};
						_1ad4b1d5e_pushLive(_self_, _11121_v);
						_1a9a6b64d_setReferencesAsLive(_self_, &((*(_11121_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1ad49bca0:;
					{
						jule::Ptr<_1a8d29ba4_StructIns> _11821_s = _8017_ref.unsafe_cast_ptr<_1a8d29ba4_StructIns>();;
						if (_1ad4a976e_isLive(_self_, &(_11821_s))) {
							goto _match_end_1ad49ba80;
						};
						_1ad4a9d24_pushLive(_self_, _11821_s);
						_1a9a6b64d_setReferencesAsLive(_self_, &((*(_11821_s))._field_Refers));
						{
							auto expr = &((*_11821_s.alloc)._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ad4b7e20:;
							if (it != expr_end) {
								jule::Ptr<_1a8d3be91_Fn> _12429_m = *it;
								{
									{
										auto expr = &((*(_12429_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ad4b8b02:;
										if (it != expr_end) {
											jule::Ptr<_1a8d3ee72_FnIns> _12533_ins = *it;
											{
												if (_1ad4a3922_isLive(_self_, &(_12533_ins))) {
													goto _iter_next_1ad4b8b02;
												};
												if (_1a9a6e321_isTraitMethod(&(_11821_s), &(_12533_ins))) {
													_1ad4a3cb8_pushLive(_self_, _12533_ins);
													_1a9a6b64d_setReferencesAsLive(_self_, &((*(_12533_ins))._field_Refers));
												};
												;
												;
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Eq)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Gt)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_GtEq)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Lt)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_LtEq)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Shl)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Shr)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Add)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Sub)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Div)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Mul)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Mod)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitAnd)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitOr)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitXor)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Neg)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Pos)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitNot)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_AddAssign)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_SubAssign)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_DivAssign)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_MulAssign)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ModAssign)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ShlAssign)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ShrAssign)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitOrAssign)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitAndAssign)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitXorAssign)) {
														_1ad4a3cb8_pushLive(_self_, _12533_ins);
														_1a9a6b64d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
											}
											_iter_next_1ad4b8b02:;
											++it;
											goto _iter_begin_1ad4b8b02;
										}
										_iter_end_1ad4b8b02:;
									};
								}
								_iter_next_1ad4b7e20:;
								++it;
								goto _iter_begin_1ad4b7e20;
							}
							_iter_end_1ad4b7e20:;
						};
					}
				}
				_match_end_1ad49ba80:;
			};
		}
	_iter_next_1ad49ade2:;
	}
	_iter_end_1ad49ade2:;;
}



inline void _1a9a6b906_inits(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8da3dc6_Package>* _15630_pkg) {
	{
		auto expr = &((*((*(_15630_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4bb2a8:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _15721_file = *it;
			{
				{
					auto expr = &((*(_15721_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad4b88b0:;
					if (it != expr_end) {
						jule::Ptr<_1a8d3be91_Fn> _15825_f = *it;
						{
							if ((*(_15825_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1a8d3ee72_FnIns> _16025_ins = (*_15825_f.alloc)._field_Instances[0LL];;
								(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a8d3ee72_FnIns>>::make({_16025_ins}));
								_1a9a6b64d_setReferencesAsLive(_self_, &((*(_16025_ins))._field_Refers));
							};
						}
						_iter_next_1ad4b88b0:;
						++it;
						goto _iter_begin_1ad4b88b0;
					}
					_iter_end_1ad4b88b0:;
				};
			}
			_iter_next_1ad4bb2a8:;
			++it;
			goto _iter_begin_1ad4bb2a8;
		}
		_iter_end_1ad4bb2a8:;
	};
}



inline void _1a9a6bbae_collectLivePackage(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8da3dc6_Package>* _16843_pkg) {
	_1a9a6b906_inits(_self_, _16843_pkg);
	if (_22eb8c122_Test) {
		{
			auto expr = &((*((*(_16843_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad4d76e2:;
			if (it != expr_end) {
				jule::Ptr<_1a8e4694c_SymbolTable> _17425_file = *it;
				{
					{
						auto expr = &((*(_17425_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad4d812c:;
						if (it != expr_end) {
							jule::Ptr<_1a8d3be91_Fn> _17529_f = *it;
							{
								if (_1a9a6de58_hasDirective(&((*(_17529_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1a8d3ee72_FnIns> _17729_ins = (*_17529_f.alloc)._field_Instances[0LL];;
									(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a8d3ee72_FnIns>>::make({_17729_ins}));
									_1a9a6b64d_setReferencesAsLive(_self_, &((*(_17729_ins))._field_Refers));
								};
							}
							_iter_next_1ad4d812c:;
							++it;
							goto _iter_begin_1ad4d812c;
						}
						_iter_end_1ad4d812c:;
					};
				}
				_iter_next_1ad4d76e2:;
				++it;
				goto _iter_begin_1ad4d76e2;
			}
			_iter_end_1ad4d76e2:;
		};
	};
}



inline void _1a9a6bdac_collectLive(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4d8094:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _18721_used = *it;
			{
				if ((!((*(_18721_used))._field_Binded))) {
					_1a9a6bbae_collectLivePackage(_self_, &((*_18721_used.alloc)._field_Package));
				};
			}
			_iter_next_1ad4d8094:;
			++it;
			goto _iter_begin_1ad4d8094;
		}
		_iter_end_1ad4d8094:;
	};
	_1a9a6bbae_collectLivePackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
	jule::Ptr<_1a8d3be91_Fn> _19513_main = _1a8da545a_FindFn((*(*_self_.alloc)._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1a8d3ee72_FnIns> _19613_ins = (*(_19513_main))._field_Instances[0LL];;
	(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a8d3ee72_FnIns>>::make({_19613_ins}));
	_1a9a6b64d_setReferencesAsLive(_self_, &((*(_19613_ins))._field_Refers));
}



inline void _1a9a6c165_removeDeadGlobals(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _20142_vars) {
	jule::I32 _20213_i = 0LL;;
	while ((_20213_i < (*(_20142_vars)).len())) {
		{
			jule::Ptr<_1a8de41ad_Var> _20413_v = (*(_20142_vars))[_20213_i];;
			if (_1ad4b19b8_isLive(_self_, &(_20413_v))) {
				(_20213_i)++;
				goto _iter_next_1ad4de364;
			};
			(*(_20142_vars))=jule::append((*(_20142_vars)).slice(0LL, _20213_i),(*(_20142_vars)).slice((_20213_i + 1LL)));
		}
	_iter_next_1ad4de364:;
	}
	_iter_end_1ad4de364:;;
}



inline void _1a9a6c41d_removeDeadFns(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a8d3be91_Fn>>* _21338_funcs) {
	jule::I32 _21413_i = 0LL;;
	while ((_21413_i < (*(_21338_funcs)).len())) {
		{
			jule::Ptr<_1a8d3be91_Fn> _21617_f = (*(_21338_funcs))[_21413_i];;
			jule::I32 _21717_j = 0LL;;
			while ((_21717_j < (*(_21617_f))._field_Instances.len())) {
				{
					jule::Ptr<_1a8d3ee72_FnIns> _21917_ins = (*_21617_f.alloc)._field_Instances[_21717_j];;
					if (_1ad4a3922_isLive(_self_, &(_21917_ins))) {
						(_21717_j)++;
						goto _iter_next_1ad4e1ab4;
					};
					(*_21617_f.alloc)._field_Instances=jule::append((*_21617_f.alloc)._field_Instances.slice(0LL, _21717_j),(*_21617_f.alloc)._field_Instances.slice((_21717_j + 1LL)));
				}
			_iter_next_1ad4e1ab4:;
			}
			_iter_end_1ad4e1ab4:;;
			if (((*_21617_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_21338_funcs))=jule::append((*(_21338_funcs)).slice(0LL, _21413_i),(*(_21338_funcs)).slice((_21413_i + 1LL)));
				goto _iter_next_1ad4e0e15;
			};
			(_21413_i)++;
		}
	_iter_next_1ad4e0e15:;
	}
	_iter_end_1ad4e0e15:;;
}



inline void _1a9a6c6c6_removeDeadStructs(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a8d26e26_Struct>>* _23442_structs) {
	jule::I32 _23513_i = 0LL;;
	while ((_23513_i < (*(_23442_structs)).len())) {
		{
			jule::Ptr<_1a8d26e26_Struct> _23717_s = (*(_23442_structs))[_23513_i];;
			jule::I32 _23817_j = 0LL;;
			while ((_23817_j < (*(_23717_s))._field_Instances.len())) {
				{
					jule::Ptr<_1a8d29ba4_StructIns> _24021_ins = (*_23717_s.alloc)._field_Instances[_23817_j];;
					_1a9a6c41d_removeDeadFns(_self_, &((*(_24021_ins))._field_Methods));
					if ((((*_24021_ins.alloc)._field_Methods.len() != 0LL) || _1ad4a976e_isLive(_self_, &(_24021_ins)))) {
						(_23817_j)++;
						goto _iter_next_1ad4e57ee;
					};
					(*_23717_s.alloc)._field_Instances=jule::append((*_23717_s.alloc)._field_Instances.slice(0LL, _23817_j),(*_23717_s.alloc)._field_Instances.slice((_23817_j + 1LL)));
				}
			_iter_next_1ad4e57ee:;
			}
			_iter_end_1ad4e57ee:;;
			if (((*_23717_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_23442_structs))=jule::append((*(_23442_structs)).slice(0LL, _23513_i),(*(_23442_structs)).slice((_23513_i + 1LL)));
				goto _iter_next_1ad4e4b50;
			};
			(_23513_i)++;
		}
	_iter_next_1ad4e4b50:;
	}
	_iter_end_1ad4e4b50:;;
}



inline void _1a9a6c97e_removeDeadTraits(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a8d5034a_Trait>>* _25641_traits) {
	jule::I32 _25713_i = 0LL;;
	while ((_25713_i < (*(_25641_traits)).len())) {
		{
			jule::Ptr<_1a8d5034a_Trait> _25917_t = (*(_25641_traits))[_25713_i];;
			if ((!(_1ad49cec1_isLive(_self_, &(_25917_t))))) {
				(*(_25641_traits))=jule::append((*(_25641_traits)).slice(0LL, _25713_i),(*(_25641_traits)).slice((_25713_i + 1LL)));
				goto _iter_next_1ad4e93e6;
			};
			jule::I32 _26417_j = 0LL;;
			while ((_26417_j < (*(_25917_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1a8d26e26_Struct> _26617_s = (*_25917_t.alloc)._field_Implemented[_26417_j];;
					if (((*(_26617_s))._field_Instances.len() > 0LL)) {
						(_26417_j)++;
						goto _iter_next_1ad4e9d20;
					};
					(*_25917_t.alloc)._field_Implemented=jule::append((*_25917_t.alloc)._field_Implemented.slice(0LL, _26417_j),(*_25917_t.alloc)._field_Implemented.slice((_26417_j + 1LL)));
				}
			_iter_next_1ad4e9d20:;
			}
			_iter_end_1ad4e9d20:;;
			(_25713_i)++;
		}
	_iter_next_1ad4e93e6:;
	}
	_iter_end_1ad4e93e6:;;
}



inline void _1a9a6cc37_removeDeadsFile(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8e4694c_SymbolTable>* _27740_file) {
	_1a9a6c41d_removeDeadFns(_self_, &((*((*(_27740_file))))._field_Funcs));
	_1a9a6c6c6_removeDeadStructs(_self_, &((*((*(_27740_file))))._field_Structs));
	_1a9a6c97e_removeDeadTraits(_self_, &((*((*(_27740_file))))._field_Traits));
	_1a9a6c165_removeDeadGlobals(_self_, &((*((*(_27740_file))))._field_Vars));
}



inline void _1a9a6cee0_removeDeadsPackage(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_, jule::Ptr<_1a8da3dc6_Package>* _28443_pkg) {
	{
		auto expr = &((*((*(_28443_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4ee990:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _28521_file = *it;
			{
				_1a9a6cc37_removeDeadsFile(_self_, &(_28521_file));
			}
			_iter_next_1ad4ee990:;
			++it;
			goto _iter_begin_1ad4ee990;
		}
		_iter_end_1ad4ee990:;
	};
}



inline void _1a9a6d1dd_removeDeads(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad500210:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _29121_used = *it;
			{
				if ((!((*(_29121_used))._field_Binded))) {
					_1a9a6cee0_removeDeadsPackage(_self_, &((*_29121_used.alloc)._field_Package));
				};
			}
			_iter_next_1ad500210:;
			++it;
			goto _iter_begin_1ad500210;
		}
		_iter_end_1ad500210:;
	};
	_1a9a6cee0_removeDeadsPackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
}



inline void _1a9a6d3db_elimanate(jule::Ptr<_1a9a6a806_ObjectDeadCode> _self_) {
	_1a9a6bdac_collectLive(_self_);
	_1a9a6d1dd_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a9a6a806_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1a990452a_IR__jule_tuple_s_224743e15_Log static__1a99049c0_Build(jule::Str _2721_path, jule::I32 _2732_flags) {
	__jule_tuple_x_1a990452a_IR__jule_tuple_s_224743e15_Log __jule_func_result;
	jule::Ptr<_1a9901a99_JuleImporter> _2813_importer = static__1a9901e95_New(_1a99064a5_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1a87715a7_Ast>> _2913_files;
	jule::Slice<_224743e15_Log> _2924_logs;
	({
		__jule_tuple_sx_1a87715a7_Ast__jule_tuple_s_224743e15_Log __jule_assign_result = _1a9903480_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8da3dc6_Package> _3913_pkg;
	({
		__jule_tuple_x_1a8da3dc6_Package__jule_tuple_s_224743e15_Log __jule_assign_result = _1a8ea42a1_AnalyzePackage(_2913_files, jule::Trait(_2813_importer, (jule::Trait::Type*)&_1a8d9d08a_Importer_mptr_data0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1a990452a_IR> _4413_ir = jule::new_ptr<_1a990452a_IR>(_1a990452a_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1a990222b_AllPackages(_2813_importer), });;
	(*(_4413_ir))._field_Passes=_1a9906296_getAllUniquePasses(&((*_4413_ir.alloc)._field_Main), (*_4413_ir.alloc)._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a9904ea9_appendStructs(_1a990452a_IR* _self_, jule::Ptr<_1a8da3dc6_Package>* _5633_p, jule::Slice<jule::Ptr<_1a8d26e26_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdce172:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad46257e:;
					if (it != expr_end) {
						jule::Ptr<_1a8d26e26_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1a8d26e26_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1ad46257e:;
						++it;
						goto _iter_begin_1ad46257e;
					}
					_iter_end_1ad46257e:;
				};
			}
			_iter_next_1acdce172:;
			++it;
			goto _iter_begin_1acdce172;
		}
		_iter_end_1acdce172:;
	};
}



inline jule::Slice<jule::Ptr<_1a8d26e26_Struct>> _1a9905240_GetAllStructures(_1a990452a_IR* _self_) {
	jule::Slice<jule::Ptr<_1a8d26e26_Struct>> _6917_buffer = nullptr;;
	_1a9904ea9_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad463728:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1a9904ea9_appendStructs(_self_, &((*_7121_u.alloc)._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1ad463728:;
			++it;
			goto _iter_begin_1ad463728;
		}
		_iter_end_1ad463728:;
	};
	return _6917_buffer;;
}



inline void _1a99055a3_appendGlobals(_1a990452a_IR* _self_, jule::Ptr<_1a8da3dc6_Package>* _7933_p, jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad464d78:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad4657c4:;
					if (it != expr_end) {
						jule::Ptr<_1a8de41ad_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*_8125_v.alloc)._field_Binded))) && (!((*_8125_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1a8de41ad_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1ad4657c4:;
						++it;
						goto _iter_begin_1ad4657c4;
					}
					_iter_end_1ad4657c4:;
				};
			}
			_iter_next_1ad464d78:;
			++it;
			goto _iter_begin_1ad464d78;
		}
		_iter_end_1ad464d78:;
	};
}



inline jule::Slice<jule::Ptr<_1a8de41ad_Var>> _1a9905839_GetAllGlobals(_1a990452a_IR* _self_) {
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _9217_buffer = nullptr;;
	_1a99055a3_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4671cc:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1a99055a3_appendGlobals(_self_, &((*_9421_u.alloc)._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1ad4671cc:;
			++it;
			goto _iter_begin_1ad4671cc;
		}
		_iter_end_1ad4671cc:;
	};
	return _9217_buffer;;
}



inline void _1a9905a37_Order(_1a990452a_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1a9905240_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1a9905839_GetAllGlobals(_self_);
	static__1a9907918_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1a9907b49_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1a990452a_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8d2a028_Str(_1a8d29ba4_StructIns* _self_) {
	_2234c269a_StrBuilder _23913_kind = static__2234c2ac9_New(32LL);;
	_2234c313a_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_2234c33e3_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abe604bd:;
			if (it != expr_end) {
				jule::I32 _24317_i = it - expr->begin();
				jule::Ptr<_1a8e81635_InsGeneric> *_24320_g = it;
				{
					_2234c313a_WriteStr(&_23913_kind, _1a8e833d4_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_2234c33e3_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1abe604bd:;
				++it;
				_24317_i++;
				goto _iter_begin_1abe604bd;
			}
			_iter_end_1abe604bd:;
		};
		_2234c33e3_WriteByte(&_23913_kind, ']');
	};
	return _2234c3932_Str(&_23913_kind);;
}



inline jule::Bool _1a8d2a369_Equal(jule::Ptr<_1a8d29ba4_StructIns> _self_, jule::Ptr<_1a8e8301b_TypeKind> _25521_other) {
	jule::Ptr<_1a8d29ba4_StructIns> _2569_s = _1a8e86be0_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I32 _26913_i = 0LL;;
	for (; (_26913_i < (*_self_.alloc)._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1a8e83725_Equal((*((*_self_.alloc)._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1abe63a98:;
	}
	_iter_end_1abe63a98:;;
	return true;;
}



inline jule::Bool _1a8d2a820_Same(_1a8d29ba4_StructIns* _self_, jule::Ptr<_1a8d29ba4_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*_28319_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe670c9:;
		if (it != expr_end) {
			jule::I32 _28713_i = it - expr->begin();
			jule::Ptr<_1a8e81635_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1a8e81635_InsGeneric> _28813_g2 = (*_28319_s.alloc)._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*(*(_28813_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a8e83725_Equal((*(*(_28716_g)).alloc)._field_Kind, (*_28813_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1abe670c9:;
			++it;
			_28713_i++;
			goto _iter_begin_1abe670c9;
		}
		_iter_end_1abe670c9:;
	};
	return true;;
}



inline jule::Ptr<_1a8d3be91_Fn> _1a8d2ac1b_FindMethod(_1a8d29ba4_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe69b04:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*_29921_f.alloc)._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1abe69b04:;
			++it;
			goto _iter_begin_1abe69b04;
		}
		_iter_end_1abe69b04:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d29104_FieldIns> _1a8d2b05c_FindField(_1a8d29ba4_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe6a176:;
		if (it != expr_end) {
			jule::Ptr<_1a8d29104_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1abe6a176:;
			++it;
			goto _iter_begin_1abe6a176;
		}
		_iter_end_1abe6a176:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8de41ad_Var> _1a8d2b39d_FindStatic(_1a8d29ba4_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe6c0ce:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1abe6c0ce:;
			++it;
			goto _iter_begin_1abe6c0ce;
		}
		_iter_end_1abe6c0ce:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d29ba4_StructIns _Src) {
	_Stream << _1a8d2a028_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_224805e50_Cmd> static__22480634b_New(jule::Str _2619_path) {
	return jule::new_ptr<_224805e50_Cmd>(_224805e50_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _224806549_Spawn(_224805e50_Cmd* _self_) {
	return _22480a51a_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _2248069cd_Wait(_224805e50_Cmd* _self_) {
	return _22480a99e_wait(_self_);
}



inline jule::VoidExceptional _22480a51a_spawn(_224805e50_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:43:13"));;
	};
	STARTUPINFOW _4513_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4613_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4513_startupInfo)), sizeof(_4513_startupInfo));
		ZeroMemory((&(_4613_processInfo)), sizeof(_4613_processInfo));
	};
	_4513_startupInfo.cb=sizeof(_4513_startupInfo);
	jule::Slice<jule::Str> _5213_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5213_args[0LL]=(*(_self_))._field_path;
	(_5213_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _559_argv = _2232967b0_UTF16FromStr(_22480b120_makeCmdLine(_5213_args));;
	jule::Slice<jule::U16> _569_env = ({
		auto except = _22480b4e9_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5713_envp = (&(_569_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5713_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_559_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5713_envp, nullptr, (&(_4513_startupInfo)), (&(_4613_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_22480c71a_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4613_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4613_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _22480a99e_wait(_224805e50_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:86:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8913_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8913_exitCode)));
		_2232c07ea_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess)));
		_2232c07ea_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread)));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I32>{.result=static_cast<jule::I32>(_8913_exitCode)};;
}





std::ostream &operator<<(std::ostream &_Stream, _224805e50_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _223295847_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return ((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL);;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _223295b11_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = (55296LL + ((_7819_r >> 10LL) & 1023LL));
	__jule_func_result.__jule_result_arg1 = (56320LL + (_7819_r & 1023LL));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _223295e52_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I32 _889_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa386a17:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_889_n)++;
				};
			}
			_iter_next_1aa386a17:;
			++it;
			goto _iter_begin_1aa386a17;
		}
		_iter_end_1aa386a17:;
	};
	jule::Slice<jule::U16> _959_a = jule::Slice<jule::U16>::alloc(_889_n, _889_n, 0);;
	_889_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa387c49:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_1aa3889b4:;
						{
							_959_a[_889_n]=static_cast<jule::U16>((*(_9712_v)));
							(_889_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_1aa388695:;
						{
							jule::I32 _10513_r1;
							jule::I32 _10517_r2;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _223295b11_EncodeRune((*(_9712_v)));
								_10513_r1 = __jule_assign_result.__jule_result_arg0;
								_10517_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_959_a[_889_n]=static_cast<jule::U16>(_10513_r1);
							_959_a[(_889_n + 1LL)]=static_cast<jule::U16>(_10517_r2);
							_889_n+=2LL;
						}
					}
					else {
						_case_begin_1aa38862e:;
						{
							_959_a[_889_n]=static_cast<jule::U16>(65533LLU);
							(_889_n)++;
						}
					}
					_match_end_1aa388530:;
				};
			}
			_iter_next_1aa387c49:;
			++it;
			goto _iter_begin_1aa387c49;
		}
		_iter_end_1aa387c49:;
	};
	return _959_a.slice(0LL, _889_n);;
}



inline jule::Slice<jule::I32> _2232961d8_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1209_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I32 _1219_n = 0LL;;
	jule::I32 _1229_i = 0LL;;
	for (; (_1229_i < _11911_s.len()); (_1229_i)++) {
		{
			jule::U16 _1249_r = _11911_s[_1229_i];;
			{
				
				if ((_1249_r < 55296LLU) || (57344LL <= _1249_r)) {
					_case_begin_1aa38d2b0:;
					{
						_1209_a[_1219_n]=static_cast<jule::I32>(_1249_r);
					}
				}
				else if (((((_1249_r < 56320LLU) && ((_1229_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1229_i + 1LL)])) && (_11911_s[(_1229_i + 1LL)] < 57344LLU))) {
					_case_begin_1aa38d07e:;
					{
						_1209_a[_1219_n]=_223295847_DecodeRune(static_cast<jule::I32>(_1249_r), static_cast<jule::I32>(_11911_s[(_1229_i + 1LL)]));
						(_1229_i)++;
					}
				}
				else {
					_case_begin_1aa38cbc7:;
					{
						_1209_a[_1219_n]=65533LL;
					}
				}
				_match_end_1aa38cb61:;
			};
			(_1219_n)++;
		}
	_iter_next_1aa38ac19:;
	}
	_iter_end_1aa38ac19:;;
	return _1209_a.slice(0LL, _1219_n);;
}



inline jule::Slice<jule::U16> _22329655c_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1aa390c74:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(_14929_r)}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1aa390d1d:;
			{
				jule::I32 _1569_r1;
				jule::I32 _15613_r2;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _223295b11_EncodeRune(_14929_r);
					_1569_r1 = __jule_assign_result.__jule_result_arg0;
					_15613_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(_1569_r1),static_cast<jule::U16>(_15613_r2)}));;
			}
		}
		_match_end_1aa390b86:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _2232967b0_UTF16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _205_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _219_buff = jule::Slice<jule::U16>::alloc(0LL, _205_runes.len(), 0);;
	{
		auto expr = &(_205_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa39b697:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_1aa39b697;
				};
				_219_buff=_22329655c_AppendRune(_219_buff, (*(_2212_r)));
			}
			_iter_next_1aa39b697:;
			++it;
			goto _iter_begin_1aa39b697;
		}
		_iter_end_1aa39b697:;
	};
	return _22329655c_AppendRune(_219_buff, 0LL);;
}



inline jule::Str _223296abd_UTF16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _389_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa39de5d:;
		if (it != expr_end) {
			jule::I32 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					(_389_codePage).mut_slice(0LL, _399_i);;
					goto _iter_end_1aa39de5d;
				};
			}
			_iter_next_1aa39de5d:;
			++it;
			_399_i++;
			goto _iter_begin_1aa39de5d;
		}
		_iter_end_1aa39de5d:;
	};
	return static_cast<jule::Str>(_2232961d8_Decode(_389_codePage));;
}



inline jule::Str _223296d87_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage;;
	jule::I32 _569_i = 0LL;;
	for (; ; (_569_i)++) {
		{
			jule::U16 _589_r = _5023_s[_569_i];;
			if ((_589_r == 0LLU)) {
				return static_cast<jule::Str>(_2232961d8_Decode(_5513_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5513_codePage; __jule_push_dest.push(_589_r); };
		}
	_iter_next_1aa3a006e:;
	}
	_iter_end_1aa3a006e:;;
	return jule::Str();;
}



inline jule::I32 _216273ada_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _2232c0531_GetStdHandle(jule::Uintptr _6417_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_6417_stdh)));;
}



inline jule::Bool _2232c07ea_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I32 _2232c0b6e_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return _wstat(((wchar_t*)(_6817_path)), _6833_stat);;
}



inline jule::I32 _2232c109d_Wopen(jule::U16* _7317_path, jule::I32 _7329_flag, jule::I32 _7340_mode) {
	return _wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode);;
}



inline jule::U32 _2232c12ac_GetLastError(void) {
	return GetLastError();;
}



inline jule::U32 _2232c1631_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff)));;
}



inline jule::Bool _2232c1bb4_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _2232c1e7d_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _2232c2247_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _2232c2731_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1095_buff, jule::U16** _10917_fname) {
	return GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1095_buff)), ((wchar_t**)(_10917_fname)));;
}



inline jule::Bool _2232c2aa5_GetConsoleMode(jule::Uintptr _11419_handle, jule::I32* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)(_11440_mode)));;
}



inline jule::Bool _2232c31b0_SetConsoleMode(jule::Uintptr _11919_handle, jule::I32 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _2232c3710_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I32 _12454_toWrite, jule::I32* _12510_written, void* _12524_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_12510_written)))), _12524_reserved);;
}



inline jule::Bool _2232c3be9_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I32 _13257_toRead, jule::I32* _13310_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)(_13310_readed)), nullptr);;
}



inline jule::Uintptr _2232c427c_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return ((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data)));;
}



inline jule::I32 _2232c4601_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return FindNextFileW(((HANDLE)(_14924_h)), _14939_data);;
}



inline jule::I32 _2232c48ba_FindClose(jule::Uintptr _15414_h) {
	return FindClose(((HANDLE)(_15414_h)));;
}



inline jule::I32 _2232c6999_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I32 _2232c6d73_Close(jule::I32 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I32 _2232c722a_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _2232c745b_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline __jule_tuple_i32__jule_tuple_int _2233e3a3e_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _2233e27a7_first[static_cast<jule::I32>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1955_sz = static_cast<jule::I32>((_1875_x & 7LLU));;
	_2233e2d5c_acceptRange _1965_accept = _2233e3203_acceptRanges[static_cast<jule::I32>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _2233e3d80_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2335_s0 = _22918_s[0LL];;
	jule::U8 _2345_x = _2233e27a7_first[static_cast<jule::I32>(_2335_s0)];;
	if ((_2345_x >= 240LLU)) {
		jule::I32 _2399_mask = static_cast<jule::I32>(((_2345_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2399_mask))) | (65533LL & _2399_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2425_sz = static_cast<jule::I32>((_2345_x & 7LLU));;
	_2233e2d5c_acceptRange _2435_accept = _2233e3203_acceptRanges[static_cast<jule::I32>((_2345_x >> 4LLU))];;
	if ((_22918_s.len() < _2425_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2475_s1 = _22918_s[1LL];;
	if (((_2475_s1 < _2435_accept._field_lo) || (_2435_accept._field_hi < _2475_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2335_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2475_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2545_s2 = _22918_s[2LL];;
	if (((_2545_s2 < 128LLU) || (191LL < _2545_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2335_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2545_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2615_s3 = _22918_s[3LL];;
	if (((_2615_s3 < 128LLU) || (191LL < _2615_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2335_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2545_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2615_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _2233e43d0_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _3215_end = _31722_s.len();;
	jule::I32 _3229_start = (_3215_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3229_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _3309_lim = (_3215_end - 4LL);;
	if ((_3309_lim < 0LL)) {
		_3309_lim=0LL;
	};
	(_3229_start)--;
	for (; (_3229_start >= _3309_lim); (_3229_start)--) {
		{
			if (_2233e5aeb_RuneStart(_31722_s[_3229_start])) {
				goto _iter_end_1aa456c19;
			};
		}
	_iter_next_1aa456c19:;
	}
	_iter_end_1aa456c19:;;
	if ((_3229_start < 0LL)) {
		_3229_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e3d80_DecodeRuneStr(_31722_s.slice(_3229_start, _3215_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3229_start + __jule_func_result.__jule_result_arg1) != _3215_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I32 _2233e4699_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1aa459dc6:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1aa45a2c2:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1aa45a349:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1aa45a3c1:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1aa45a448:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1aa459e3c:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1aa459d60:;
			{
				return -1LL;;
			}
		}
		_match_end_1aa459667:;
	};
}



inline jule::I32 _2233e4b2d_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3765_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3765_i <= 127LLU)) {
			_case_begin_1aa45eae0:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(_37434_r);
				return 1LL;;
			}
		}
		else if ((_3765_i <= 2047LLU)) {
			_case_begin_1aa46031b:;
			{
				_37419_p[0LL]=(192LLU | static_cast<jule::U8>((_37434_r >> 6LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 2LL;;
			}
		}
		else if ((_3765_i > 1114111LLU) || ((55296LL <= _3765_i) && (_3765_i <= 57343LLU))) {
			_case_begin_1aa45cd74:;
			{
				_37434_r=65533LL;
				goto _case_begin_1aa4601c8;
			}
		}
		else if ((_3765_i <= 65535LLU)) {
			_case_begin_1aa4601c8:;
			{
				_37419_p[0LL]=(224LLU | static_cast<jule::U8>((_37434_r >> 12LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 3LL;;
			}
		}
		else {
			_case_begin_1aa45c9ab:;
			{
				_37419_p[0LL]=(240LLU | static_cast<jule::U8>((_37434_r >> 18LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[3LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 4LL;;
			}
		}
		_match_end_1aa45c945:;
	};
}



inline jule::Slice<jule::U8> _2233e4e2a_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(_40530_r)}));;
	};
	return _2233e529e_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _2233e529e_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1aa4675ba:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(192LL | static_cast<jule::U8>((_41242_r >> 6LL))),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1aa46619b:;
			{
				_41242_r=128LL;
				goto _case_begin_1aa466212;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1aa466212:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(224LL | static_cast<jule::U8>((_41242_r >> 12LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else {
			_case_begin_1aa46594d:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(240LL | static_cast<jule::U8>((_41242_r >> 18LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		_match_end_1aa4658d7:;
	};
}



inline jule::I32 _2233e5832_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1aa46aba6;
			};
			jule::U8 _4829_x = _2233e27a7_first[static_cast<jule::I32>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1aa46aba6;
			};
			jule::I32 _48713_size = static_cast<jule::I32>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1aa46aba6;
			};
			_2233e2d5c_acceptRange _4929_accept = _2233e3203_acceptRanges[static_cast<jule::I32>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1aa46aba6:;
	}
	_iter_end_1aa46aba6:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _2233e5aeb_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline void _2233ece77_handleRW(jule::Slice<jule::U8>* _514_b) {
}



inline void _2233ec916_HandleRW(jule::Slice<jule::U8>* _814_b) {
	_2233ece77_handleRW(_814_b);
}



inline jule::Str _2234b5b88_Str(jule::U8* _108_b, jule::I32 _1018_n) {
	jule::Str _119_s = jule::Str();;
	{
		_119_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_119_s._len = _1018_n;
		_119_s._slice = _108_b;
	};
	return _119_s;;
}



inline jule::Slice<jule::U8> _1aa492c88_Slice(jule::U8* _2316_e, jule::I32 _2326_n) {
	jule::Slice<jule::U8> _249_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_249_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_249_buf._len = _2326_n;
		_249_buf._cap = _2326_n;
		_249_buf._slice = _2316_e;
	};
	return _249_buf;;
}



inline jule::Slice<jule::U8> _2234c1930_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1aa492c88_Slice((&(_4113_s[0LL])), _4113_s.len());;
}



inline jule::Str _2234c1bb6_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _2234b5b88_Str((&(_5013_b[0LL])), _5013_b.len());;
}



inline jule::Str _2234c1e80_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	return (*(((jule::Str*)((&(_5817_b))))));;
}



inline jule::I32 _223500be5_getLastOsErrorWindows(void) {
	jule::U32 _165_err = _2232c12ac_GetLastError();;
	{
		auto &_match_expr{ _165_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1aa4a78c4:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aa4a793a:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1aa4a79a1:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1aa4a7a17:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else {
			_case_begin_1aa4a47a0:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		_match_end_1aa4a487c:;
	};
}



inline jule::Slice<jule::Str> _223502257_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _2235026b9_WorkingDir(void) {
	return _223503104_getwd();
}



inline jule::Exceptional<jule::Str> _223503104_getwd(void) {
	jule::Array<jule::U16,261> _1513_buf = jule::Array<jule::U16,261>(0);;
	jule::U32 _165_n = _2232c1631_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_1513_buf[0LL])));;
	if ((_165_n == 0LLU)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_223500be5_getLastOsErrorWindows(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Str>{.result=_223296d87_U16PtrToStr((&(_1513_buf[0LL])))};;
}



inline jule::Bool _2245d7a23_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_22464a602__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _224653a4a_isExcludingLatin(_2245e19e9_Letter, _7613_r);;
}



inline jule::Bool _224652dbd_is16(jule::Slice<_224651130_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab2a6749:;
			if (it != expr_end) {
				jule::I32 _19313_i = it - expr->begin();
				{
					_224651130_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1ab2a6749:;
				++it;
				_19313_i++;
				goto _iter_begin_1ab2a6749;
			}
			_iter_end_1ab2a6749:;
		};
		return false;;
	};
	jule::I32 _2089_lo = 0LL;;
	jule::I32 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I32 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_224651130_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=(_2119_m + 1LL);
				};
			};
		}
	_iter_next_1ab2a555b:;
	}
	_iter_end_1ab2a555b:;;
	return false;;
}



inline jule::Bool _224653242_is32(jule::Slice<_22465165d_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab2ace26:;
			if (it != expr_end) {
				jule::I32 _23013_i = it - expr->begin();
				{
					_22465165d_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1ab2ace26:;
				++it;
				_23013_i++;
				goto _iter_begin_1ab2ace26;
			}
			_iter_end_1ab2ace26:;
		};
		return false;;
	};
	jule::I32 _2459_lo = 0LL;;
	jule::I32 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I32 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_22465165d_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=(_2489_m + 1LL);
				};
			};
		}
	_iter_next_1ab2ac84e:;
	}
	_iter_end_1ab2ac84e:;;
	return false;;
}



inline jule::Bool _224653a4a_isExcludingLatin(jule::Ptr<_224651ad1_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_224651130_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I32 _2829_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _224652dbd_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_22465165d_Range32> *_2876_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _224653242_is32((*(_2876_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _224653c8c_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_22464a602__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _224653a4a_isExcludingLatin(_2245e7cb9_Upper, _29512_r);;
}



inline jule::I32 _224694519_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _469_it = _4535_end;;
	for (; (_469_it >= _4517_begin); (_469_it)--) {
		{
			{
				if (((*(_469_it)) == _4547_b)) {
					return ((jule::I32)((_469_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1ab2c3887:;
	}
	_iter_end_1ab2c3887:;;
	return -1LL;;
}



inline jule::I32 _224694b46_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2c59bb:;
		if (it != expr_end) {
			jule::I32 _709_i = it - expr->begin();
			jule::U8 *_7012_se = it;
			{
				if (((*(_7012_se)) == _6824_b)) {
					return _709_i;;
				};
			}
			_iter_next_1ab2c59bb:;
			++it;
			_709_i++;
			goto _iter_begin_1ab2c59bb;
		}
		_iter_end_1ab2c59bb:;
	};
	return -1LL;;
}



inline jule::I32 _224694eba_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _224694519_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _2246952b7_Repeat(jule::Str _1111_s, jule::I32 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(2147483647LL,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	_2234c269a_StrBuilder _189_ss = static__2234c2ac9_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_2234c313a_WriteStr(&_189_ss, _1111_s);
		}
	_iter_next_1ab2d6768:;
	}
	_iter_end_1ab2d6768:;;
	return _2234c3932_Str(&_189_ss);;
}



inline jule::Bool _224695680_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _224695a04_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I32 _224695eaa_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_224695680_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1ab2da3a4:;
	}
	_iter_end_1ab2da3a4:;;
	return -1LL;;
}



inline jule::I32 _2246962eb_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _224695eaa_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I32 _22469672a_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i) {
	jule::I32 _639_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_639_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1ab2dd0ee:;
	for (; (_639_j >= 0LL); (_639_j)--) {
		{
			jule::I32 _6913_k = _639_j;;
			jule::I32 _7013_z = 0LL;;
			for (; (_7013_z < _6223_sub.len()); ({
				jule::I32 ___jule_assign_arg = (_6913_k + 1LL);
				jule::I32 _1___jule_assign_arg = (_7013_z + 1LL);
				_6913_k = ___jule_assign_arg;
				_7013_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_6913_k] != _6223_sub[_7013_z])) {
						goto _iter_next_1ab2dcc58;
					};
				}
			_iter_next_1ab2ddc37:;
			}
			_iter_end_1ab2ddc37:;;
			return _639_j;;
		}
	_iter_next_1ab2dcc58:;
	}
	_iter_end_1ab2dcc58:;;
	return -1LL;;
}



inline jule::I32 _224696a9e_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _22469672a_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I32 _224698386_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _224694eba_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I32 _22469870a_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I32 _1569_i = 0LL;;
	while ((_1569_i < _15513_s.len())) {
		{
			jule::I32 _1589_br;
			jule::I32 _15813_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e3d80_DecodeRuneStr(_15513_s.slice(_1569_i));
				_1589_br = __jule_assign_result.__jule_result_arg0;
				_15813_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1589_br)) {
				return _1569_i;;
			};
			_1569_i+=_15813_n;
		}
	_iter_next_1ab2e65e1:;
	}
	_iter_end_1ab2e65e1:;;
	return -1LL;;
}



inline jule::I32 _224699134_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I32 _1869_i = 0LL;;
	while ((_1869_i < _18512_s.len())) {
		{
			jule::I32 _1889_r;
			jule::I32 _18812_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e3d80_DecodeRuneStr(_18512_s.slice(_1869_i));
				_1889_r = __jule_assign_result.__jule_result_arg0;
				_18812_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22469870a_FindRune(_18520_runes, _1889_r) != -1LL)) {
				return _1869_i;;
			};
			_1869_i+=_18812_n;
		}
	_iter_next_1ab2e9924:;
	}
	_iter_end_1ab2e9924:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _2246997c7_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n) {
	jule::I32 _2169_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2169_cap=16LLU;
	};
	jule::Slice<jule::Str> _2209_parts = jule::Slice<jule::Str>::alloc(0LL, _2169_cap);;
	if ((_21532_n == 0LL)) {
		return _2209_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I32 _2279_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I32 _2299_j = _224695eaa_FindAt(_21510_s, _21518_sub, _2279_i);;
			if ((_2299_j == -1LL)) {
				goto _iter_end_1ab2ee60a;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2209_parts; __jule_push_dest.push(_21510_s.slice(_2279_i, _2299_j)); };
			_2279_i=(_2299_j + _21518_sub.len());
		}
	_iter_next_1ab2ee60a:;
	}
	_iter_end_1ab2ee60a:;;
	if (((_21532_n > 0LL) && (_2279_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2209_parts; __jule_push_dest.push(_21510_s.slice(_2279_i)); };
	};
	return _2209_parts;;
}



inline jule::Bool _224699b4b_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_224695eaa_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _22469a6b8_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_224699134_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I32 _22469aa3c_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2689_n = 0LL;;
	jule::I32 _2699_i = 0LL;;
	for (;;) {
		{
			jule::I32 _2719_j = _224695eaa_FindAt(_26410_s, _26418_sub, _2699_i);;
			if ((_2719_j == -1LL)) {
				goto _iter_end_1ab304775;
			};
			(_2689_n)++;
			_2699_i=(_2719_j + _26418_sub.len());
		}
	_iter_next_1ab304775:;
	}
	_iter_end_1ab304775:;;
	return _2689_n;;
}



inline jule::Str _22469b026_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I32 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I32 _2895_m = _22469aa3c_Count(_28412_s, _28420_sub);;
	if ((_2895_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2895_m < _28444_n))) {
		_28444_n=_2895_m;
	};
	_2234c269a_StrBuilder _2979_ss = static__2234c2ac9_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I32 _2989_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I32 _3009_j = _224695eaa_FindAt(_28412_s, _28420_sub, _2989_i);;
			if ((_3009_j == -1LL)) {
				goto _iter_end_1ab30823a;
			};
			_2234c313a_WriteStr(&_2979_ss, _28412_s.slice(_2989_i, _3009_j));
			_2234c313a_WriteStr(&_2979_ss, _28430_new);
			_2989_i=(_3009_j + _28420_sub.len());
		}
	_iter_next_1ab30823a:;
	}
	_iter_end_1ab30823a:;;
	_2234c313a_WriteStr(&_2979_ss, _28412_s.slice(_2989_i));
	return _2234c3932_Str(&_2979_ss);;
}



inline jule::Str _22469bca2_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I32 _3429_i = 0LL;;
	while ((_3429_i < _34117_s.len())) {
		{
			jule::I32 _3449_r;
			jule::I32 _34412_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e3d80_DecodeRuneStr(_34117_s.slice(_3429_i));
				_3449_r = __jule_assign_result.__jule_result_arg0;
				_34412_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22469870a_FindRune(_34125_cutset, _3449_r) == -1LL)) {
				return _34117_s.slice(_3429_i);;
			};
			_3429_i+=_34412_n;
		}
	_iter_next_1ab30cb13:;
	}
	_iter_end_1ab30cb13:;;
	return jule::Str();;
}



inline jule::Str _22469c126_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I32 _3569_i = _35514_s.len();;
	while ((_3569_i > 0LL)) {
		{
			jule::I32 _3589_r;
			jule::I32 _35812_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e43d0_DecodeLastRuneStr(_35514_s.slice(0LL, _3569_i));
				_3589_r = __jule_assign_result.__jule_result_arg0;
				_35812_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22469870a_FindRune(_35522_cutset, _3589_r) == -1LL)) {
				return _35514_s.slice(0LL, _3569_i);;
			};
			_3569_i-=_35812_n;
		}
	_iter_next_1ab30ecd0:;
	}
	_iter_end_1ab30ecd0:;;
	return jule::Str();;
}



inline jule::Str _22469c49a_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _22469bca2_TrimLeft(_22469c126_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Bool _2234c51e7_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _2234c5505_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _2234c57be_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return (_5512_c - 32LL);;
	};
	return _5512_c;;
}



inline jule::I32 _2234c5d96_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _885_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _885_c) && (_885_c <= 'z')) || (('A' <= _885_c) && (_885_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_2234c5505_isSlash(_8318_path[0LL]))) || (!(_2234c5505_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _965_p1;
	jule::Str _9613_rest;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2234c6160_cutPath(_8318_path.slice(2LL));
		_965_p1 = __jule_assign_result.__jule_result_arg0;
		_9613_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _979_p2 = jule::Str();;
	jule::Bool _989_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2234c6160_cutPath(_9613_rest);
		_979_p2 = __jule_assign_result.__jule_result_arg0;
		_9613_rest = __jule_assign_result.__jule_result_arg1;
		_989_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_989_ok))) {
		return _8318_path.len();;
	};
	if (((!_965_p1.equal(".", 1)) && (!_965_p1.equal("?", 1)))) {
		return ((_8318_path.len() - _9613_rest.len()) - 1LL);;
	};
	if (((((_979_p2.len() == 3LL) && (_2234c57be_toUpper(_979_p2[0LL]) == 'U')) && (_2234c57be_toUpper(_979_p2[1LL]) == 'N')) && (_2234c57be_toUpper(_979_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2234c6160_cutPath(_9613_rest);
			_9613_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2234c6160_cutPath(_9613_rest);
			_9613_rest = __jule_assign_result.__jule_result_arg1;
			_989_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_989_ok))) {
			return _8318_path.len();;
		};
	};
	return ((_8318_path.len() - _9613_rest.len()) - 1LL);;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _2234c6160_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab328942:;
		if (it != expr_end) {
			jule::I32 _1219_i = it - expr->begin();
			{
				if (_2234c5505_isSlash(_12012_path[_1219_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1219_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1219_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab328942:;
			++it;
			_1219_i++;
			goto _iter_begin_1ab328942;
		}
		_iter_end_1ab328942:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _2234c6429_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1305_utf16Name = _2232967b0_UTF16FromStr(_12913_name);;
	jule::U16* _1315_p = (&(_1305_utf16Name[0LL]));;
	jule::U32 _1329_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _13413_buf = jule::Slice<jule::U16>::alloc(static_cast<jule::I32>(_1329_n), static_cast<jule::I32>(_1329_n), 0);;
			_1329_n=_2232c2731_GetFullPathName(_1315_p, static_cast<jule::U32>(_13413_buf.len()), (&(_13413_buf[0LL])), nullptr);
			if ((_1329_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1329_n <= static_cast<jule::U32>(_13413_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _223296abd_UTF16ToStr(_13413_buf.slice(0LL, static_cast<jule::I32>(_1329_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1ab329080:;
	}
	_iter_end_1ab329080:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _2234c6803_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2234c6429_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _22469e7aa_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _2234c6a45_join(jule::Slice<jule::Str> _16013_elem) {
	_2234c269a_StrBuilder _1619_s = static__2234c2ac9_New(16LL);;
	jule::U8 _1629_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_16013_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab32ed22:;
		if (it != expr_end) {
			jule::Str _16317_e = *it;
			{
				{
					
					if ((_2234c3db6_Len(&_1619_s) == 0LL)) {
						_case_begin_1ab330ac0:;
					}
					else if (_2234c5505_isSlash(_1629_lastChar)) {
						_case_begin_1ab330e88:;
						{
							while (((_16317_e.len() > 0LL) && _2234c5505_isSlash(_16317_e[0LL]))) {
								{
									(_16317_e).mut_slice(1LL);;
								}
							_iter_next_1ab3315b5:;
							}
							_iter_end_1ab3315b5:;;
						}
					}
					else if ((_1629_lastChar == ':')) {
						_case_begin_1ab3307a1:;
					}
					else {
						_case_begin_1ab33073a:;
						{
							_2234c33e3_WriteByte(&_1619_s, '\\');
							_1629_lastChar='\\';
						}
					}
					_match_end_1ab33063b:;
				};
				if ((_16317_e.len() > 0LL)) {
					_2234c313a_WriteStr(&_1619_s, _16317_e);
					_1629_lastChar=_16317_e[(_16317_e.len() - 1LL)];
				};
			}
			_iter_next_1ab32ed22:;
			++it;
			goto _iter_begin_1ab32ed22;
		}
		_iter_end_1ab32ed22:;
	};
	if ((_2234c3db6_Len(&_1619_s) == 0LL)) {
		return jule::Str();;
	};
	return _22469e7aa_Clean(_2234c3932_Str(&_1619_s));;
}



inline jule::Str _22469e7aa_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I32 _1115_volLen = _2234c5d96_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _2234c51e7_IsPathSep(_1105_originalPath[0LL])) && _2234c51e7_IsPathSep(_1105_originalPath[1LL]))) {
			return _22469ed82_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _2234c51e7_IsPathSep(_10914_path[0LL]);;
	jule::I32 _1275_n = _10914_path.len();;
	_22469d952_lazyBuff _1289_out = _22469d952_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I32 _1339_r;
	jule::I32 _13316_dotdot;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_22469e15b_append(&_1289_out, 92LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_2234c51e7_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1ab33ada5:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _2234c51e7_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1ab337984:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _2234c51e7_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1ab3379ea:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1ab33de74:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_2234c51e7_IsPathSep(_22469dda3_index(&_1289_out, _1289_out._field_w)))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1ab33e705:;
									}
									_iter_end_1ab33e705:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1ab33e01d:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_22469e15b_append(&_1289_out, 92LLU);
									};
									_22469e15b_append(&_1289_out, '.');
									_22469e15b_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1ab33db11:;
						};
					}
				}
				else {
					_case_begin_1ab33791d:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_22469e15b_append(&_1289_out, 92LLU);
						};
						if ((((_1289_out._field_w == 0LL) && (_1289_out._field_volLen == 0LL)) && (_1339_r != 0LL))) {
							jule::I32 _17621_i = _1339_r;;
							for (; ((_17621_i < _1275_n) && (!(_2234c51e7_IsPathSep(_10914_path[_17621_i])))); (_17621_i)++) {
								{
									if ((_10914_path[_17621_i] == ':')) {
										_22469e15b_append(&_1289_out, '.');
										_22469e15b_append(&_1289_out, 92LLU);
										goto _iter_end_1ab3393e2;
									};
								}
							_iter_next_1ab3393e2:;
							}
							_iter_end_1ab3393e2:;;
						};
						for (; ((_1339_r < _1275_n) && (!(_2234c51e7_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_22469e15b_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1ab338c82:;
						}
						_iter_end_1ab338c82:;;
					}
				}
				_match_end_1ab337874:;
			};
		}
	_iter_next_1ab336631:;
	}
	_iter_end_1ab336631:;;
	if ((_1289_out._field_w == 0LL)) {
		_22469e15b_append(&_1289_out, '.');
	};
	return _22469ed82_FromSlash(_22469e3e2_string(&_1289_out));;
}



inline jule::Str _22469ed82_FromSlash(jule::Str _21214_path) {
	;
	return _22469b026_Replace(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1), -1LL);;
}



inline jule::Str _2246a01c3_Join(jule::Slice<jule::Str> _2269_elem) {
	return _2234c6a45_join(_2269_elem);;
}



inline jule::Str _2246a0459_Ext(jule::Str _2318_path) {
	jule::I32 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_2234c51e7_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1ab3431dc:;
	}
	_iter_end_1ab3431dc:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _2246a0723_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_2234c6803_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _2246a09dc_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _2234c51e7_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1ab344540:;
	}
	_iter_end_1ab344540:;;
	(_25213_path).mut_slice(_2246a1108_VolumeName(_25213_path).len());;
	jule::I32 _2639_i = (_25213_path.len() - 1LL);;
	while (((_2639_i >= 0LL) && (!(_2234c51e7_IsPathSep(_25213_path[_2639_i]))))) {
		{
			(_2639_i)--;
		}
	_iter_next_1ab34493b:;
	}
	_iter_end_1ab34493b:;;
	if ((_2639_i >= 0LL)) {
		(_25213_path).mut_slice((_2639_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25213_path;;
}



inline jule::Str _2246a0db6_Dir(jule::Str _2838_path) {
	jule::Str _2845_vol = _2246a1108_VolumeName(_2838_path);;
	jule::I32 _2859_i = (_2838_path.len() - 1LL);;
	while (((_2859_i >= _2845_vol.len()) && (!(_2234c51e7_IsPathSep(_2838_path[_2859_i]))))) {
		{
			(_2859_i)--;
		}
	_iter_next_1ab3481ae:;
	}
	_iter_end_1ab3481ae:;;
	jule::Str _2895_dir = _22469e7aa_Clean(_2838_path.slice(_2845_vol.len(), (_2859_i + 1LL)));;
	if ((_2895_dir.equal(".", 1) && (_2845_vol.len() > 2LL))) {
		return _2845_vol;;
	};
	return (_2845_vol + _2895_dir);;
}



inline jule::Str _2246a1108_VolumeName(jule::Str _30115_path) {
	return _22469ed82_FromSlash(_30115_path.slice(0LL, _2234c5d96_volumeNameLen(_30115_path)));;
}



inline jule::I32 _2232d74b0_getLastFsError(void) {
	jule::I32 _725_err = _216273ada_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ab35b1e4:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ab35b0e5:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1ab35aa2e:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1ab35aa95:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ab35ab0b:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ab35ab83:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1ab35ac0a:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ab35ac82:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1ab35b38c:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1ab35b414:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ab35b48b:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1ab35b513:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ab35b58a:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ab35b612:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ab35b689:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1ab35b711:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1ab35b788:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ab35b810:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1ab35b887:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ab35b90e:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1ab35b986:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1ab35ba0d:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ab35ba85:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1ab35bb0c:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1ab35bb84:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1ab35bc0b:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1ab35bc83:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1ab35bd0a:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1ab35a8b9:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1ab35a9c9:;
	};
}



inline jule::Bool _2233ee7e7_isConsoleHandle(jule::Uintptr _11620_handle) {
	return (((_11620_handle == _2232bec28_STDIN) || (_11620_handle == _2232beec0_STDOUT)) || (_11620_handle == _2232c02bc_STDERR));;
}



inline void _22480ad56_appendEscapeArg(_2234c269a_StrBuilder* _10225_s, jule::Str _10240_arg) {
	if ((_10240_arg.len() == 0LL)) {
		_2234c313a_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
		return;;
	};
	jule::Bool _1089_needsBackslash = false;;
	jule::Bool _1099_hasSpace = false;;
	jule::I32 _1109_i = 0LL;;
	for (; (_1109_i < _10240_arg.len()); (_1109_i)++) {
		{
			{
				auto &_match_expr{ _10240_arg[_1109_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1ab3a0799:;
					{
						_1089_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1ab3a0a96:;
					{
						_1099_hasSpace=true;
					}
				}
				_match_end_1ab3a0986:;
			};
		}
	_iter_next_1ab3a0304:;
	}
	_iter_end_1ab3a0304:;;
	if (((!(_1089_needsBackslash)) && (!(_1099_hasSpace)))) {
		_2234c313a_WriteStr(_10225_s, _10240_arg);
		return;;
	};
	if ((!(_1089_needsBackslash))) {
		_2234c33e3_WriteByte(_10225_s, '\"');
		_2234c313a_WriteStr(_10225_s, _10240_arg);
		_2234c33e3_WriteByte(_10225_s, '\"');
		return;;
	};
	if (_1099_hasSpace) {
		_2234c33e3_WriteByte(_10225_s, '\"');
	};
	jule::I32 _1369_slashes = 0LL;;
	_1109_i=0LL;
	for (; (_1109_i < _10240_arg.len()); (_1109_i)++) {
		{
			jule::U8 _1399_c = _10240_arg[_1109_i];;
			{
				auto &_match_expr{ _1399_c };
				
				if (_match_expr == '\\') {
					_case_begin_1ab3a3dda:;
					{
						(_1369_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1ab3a3ea6:;
					{
						for (; (_1369_slashes > 0LL); (_1369_slashes)--) {
							{
								_2234c33e3_WriteByte(_10225_s, '\\');
							}
						_iter_next_1ab3a46b0:;
						}
						_iter_end_1ab3a46b0:;;
						_2234c33e3_WriteByte(_10225_s, '\\');
					}
				}
				else {
					_case_begin_1ab3a3967:;
					{
						_1369_slashes=0LL;
					}
				}
				_match_end_1ab3a3a77:;
			};
			_2234c33e3_WriteByte(_10225_s, _1399_c);
		}
	_iter_next_1ab3a3192:;
	}
	_iter_end_1ab3a3192:;;
	if (_1099_hasSpace) {
		for (; (_1369_slashes > 0LL); (_1369_slashes)--) {
			{
				_2234c33e3_WriteByte(_10225_s, '\\');
			}
		_iter_next_1ab3a524e:;
		}
		_iter_end_1ab3a524e:;;
		_2234c33e3_WriteByte(_10225_s, '\"');
	};
}



inline jule::Str _22480b120_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_2234c269a_StrBuilder _1649_s = static__2234c2ac9_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3a5e75:;
		if (it != expr_end) {
			jule::Str *_16512_arg = it;
			{
				if ((_2234c3db6_Len(&_1649_s) > 0LL)) {
					_2234c33e3_WriteByte(&_1649_s, ' ');
				};
				_22480ad56_appendEscapeArg(&(_1649_s), (*(_16512_arg)));
			}
			_iter_next_1ab3a5e75:;
			++it;
			goto _iter_begin_1ab3a5e75;
		}
		_iter_end_1ab3a5e75:;
	};
	return _2234c3932_Str(&_1649_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _22480b4e9_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_223295e52_Encode(jule::Slice<jule::I32>::make({0LL,0LL}))};;
	};
	jule::I32 _1839_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3a78a0:;
		if (it != expr_end) {
			jule::Str *_18412_s = it;
			{
				if ((_224694b46_FindByteStr((*(_18412_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
				};
				_1839_n+=((*(_18412_s)).len() + 1LL);
			}
			_iter_next_1ab3a78a0:;
			++it;
			goto _iter_begin_1ab3a78a0;
		}
		_iter_end_1ab3a78a0:;
	};
	(_1839_n)++;
	jule::Slice<jule::U16> _1919_b = jule::Slice<jule::U16>::alloc(0LL, _1839_n, 0);;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3a71c9:;
		if (it != expr_end) {
			jule::Str *_19212_s = it;
			{
				{
					auto expr = _19212_s;
					char *it = expr->operator char*();
					const char *end = it + expr->len();
					std::size_t len;
					jule::I32 _19316_c;
					_iter_begin_1ab3a9cc0:;
					std::tie(_19316_c, len) = jule::utf8_decode_rune_str(it, end - it);
					if (it < end) {
						{
							_1919_b=_22329655c_AppendRune(_1919_b, _19316_c);
						}
						_iter_next_1ab3a9cc0:;
						it += len;
						goto _iter_begin_1ab3a9cc0;
					}
				};
				_1919_b=_22329655c_AppendRune(_1919_b, 0LL);
			}
			_iter_next_1ab3a71c9:;
			++it;
			goto _iter_begin_1ab3a71c9;
		}
		_iter_end_1ab3a71c9:;
	};
	_1919_b=_22329655c_AppendRune(_1919_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1919_b};;
}



inline jule::I32 _22480c4ea_processErrorFromCode(jule::I32 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1ab3ab255:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1ab3aaad4:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1ab3aa551:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1ab3aa70a:;
	};
}



inline jule::I32 _22480c71a_getLastProcessError(void) {
	return _22480c4ea_processErrorFromCode(static_cast<jule::I32>(_2232c12ac_GetLastError()));;
}



inline void _22480d034_Exit(jule::I32 _129_code) {
	_2232c745b_Exit(_129_code);
}



inline jule::Str _22480d243_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _2247367ed_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _224736ac8_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_224735d08_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3cc9a2:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1ab3cc9a2:;
			++it;
			goto _iter_begin_1ab3cc9a2;
		}
		_iter_end_1ab3cc9a2:;
	};
	return false;;
}



inline jule::Bool _224736d92_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_2246a4095_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3cd046:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1ab3cd046:;
			++it;
			goto _iter_begin_1ab3cd046;
		}
		_iter_end_1ab3cd046:;
	};
	{
		auto expr = &(_224734b70_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3cdb7e:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1ab3cdb7e:;
			++it;
			goto _iter_begin_1ab3cdb7e;
		}
		_iter_end_1ab3cdb7e:;
	};
	return false;;
}



inline jule::Str _224744377_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args) {
	return _224744d17_applyFmt(_3239_fmt, _32322_args);;
}



inline jule::Str _224744685_argToStr(jule::Any _32713_arg) {
	{
		auto &_match_expr{ _32713_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ab3d01be:;
			{
				return _32713_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1ab3d0840:;
			{
				return jule::Str::from_byte(_32713_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ab3d08b7:;
			{
				return jule::Str::from_rune(_32713_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1ab3d0400:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1ab3d039a:;
	};
}



inline jule::I32 _22474494e_findNextFmt(jule::Str _34016_fmt) {
	{
		auto expr = &(_34016_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3d0510:;
		if (it != expr_end) {
			jule::I32 _3419_i = it - expr->begin();
			jule::U8 *_34112_b = it;
			{
				if (((*(_34112_b)) == '@')) {
					return _3419_i;;
				};
			}
			_iter_next_1ab3d0510:;
			++it;
			_3419_i++;
			goto _iter_begin_1ab3d0510;
		}
		_iter_end_1ab3d0510:;
	};
	return -1LL;;
}



inline jule::Str _224744d17_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args) {
	_2234c269a_StrBuilder _3509_s = static__2234c2ac9_New(32LL);;
	{
		auto expr = &(_34927_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3d2424:;
		if (it != expr_end) {
			jule::Any *_35112_arg = it;
			{
				jule::I32 _3529_i = _22474494e_findNextFmt(_34917_fmt);;
				if ((_3529_i == -1LL)) {
					goto _iter_end_1ab3d2424;
				};
				_2234c313a_WriteStr(&_3509_s, _34917_fmt.slice(0LL, _3529_i));
				_2234c313a_WriteStr(&_3509_s, _224744685_argToStr((*(_35112_arg))));
				(_34917_fmt).mut_slice((_3529_i + 1LL));;
			}
			_iter_next_1ab3d2424:;
			++it;
			goto _iter_begin_1ab3d2424;
		}
		_iter_end_1ab3d2424:;
	};
	_2234c313a_WriteStr(&_3509_s, _34917_fmt);
	return _2234c3932_Str(&_3509_s);;
}



inline jule::Bool _224745b70_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _22474708e_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _22474739c_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _224747666_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _2247479a7_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _224747c3d_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _224748007_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _2247482c1_IsUnix(jule::Str _5511_os) {
	return (_22474739c_IsDarwin(_5511_os) || _224747666_IsLinux(_5511_os));;
}



inline jule::Bool _22474869a_Is32Bit(jule::Str _5812_arch) {
	return _2247479a7_IsI386(_5812_arch);;
}



inline jule::Bool _2247488dc_Is64Bit(jule::Str _6112_arch) {
	return (_224747c3d_IsAmd64(_6112_arch) || _224748007_IsArm64(_6112_arch));;
}



inline void _22480e4ca_init(void) {
	jule::Str _259_path = _22480d243_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_22480da29_PathWd=({
			auto except = _2235026b9_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_22480d782_PathExec=_2246a0db6_Dir(_259_path);
		_22480d573_PathStdlib=_2246a01c3_Join(jule::Slice<jule::Str>::make({_22480d782_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_22480dd26_PathApi=_2246a01c3_Join(jule::Slice<jule::Str>::make({_22480d782_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I32 _20a24b43c_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _20a253cc4_Len64(_6119_x));;
}



inline jule::I32 _20a24c383_TrailingZeros(jule::U32 _8318_x) {
	;
	return _20a24d032_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I32 _20a24cc68_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(_20a24ba7a__DE_BRUIJN32_TAB[static_cast<jule::I32>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I32 _20a24d032_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(_20a24c11e__DE_BRUIJN64_TAB[static_cast<jule::I32>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I32 _20a253a0a_Len32(jule::U32 _35214_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I32 _20a253cc4_Len64(jule::U64 _36614_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _20a254a61_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=((_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _20a25636a_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=(((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::U32 _209e0669c_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _209e069aa_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _209e06c74_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _209e070b5_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _209e09628_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1ab4bb794:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_20a25e065_IsInf(_4714_f, 0LL) || _20a25d8d3_IsNaN(_4714_f)) {
			_case_begin_1ab4bb83d:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1ab4bb6b7:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _20a25e32e_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _209e06c74_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=(_569_x & 9227875636482146303LLU);
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_209e070b5_F64FromBits(_569_x);
	return __jule_func_result;;
}



inline jule::F64 _20a25d5c5_NaN(void) {
	return _209e070b5_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _20a25d8d3_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _20a25db9c_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _209e070b5_F64FromBits(9218868437227405312LLU);;
	};
	return _209e070b5_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _20a25e065_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _20a25e32e_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_20a261809_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _20a260d14_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_20a25d8d3_IsNaN(_1118_x) || _20a25e065_IsInf(_1118_x, 1LL)) {
			_case_begin_1ab509392:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1ab50943b:;
			{
				return _20a25d5c5_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1ab5094a2:;
			{
				return _20a25db9c_Inf(-1LL);;
			}
		}
		_match_end_1ab5092c6:;
	};
	jule::F64 _1339_f1;
	jule::I32 _13317_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _209e09628_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return ((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f));;
}



inline jule::F64 _20a261809_Abs(jule::F64 _438_x) {
	return _209e070b5_F64FromBits((_209e06c74_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _20a2683d2_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _20a261809_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=(_465_absF + 4503599627370496LL);
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1ab573395:;
		}
		_iter_end_1ab573395:;;
		if ((_449_f < 0LL)) {
			_479_i=(-(_479_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _479_i);
	return __jule_func_result;;
}



inline jule::F64 _20a268bda_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac;
	jule::I32 _4511_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _209e09628_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>((_4511_exp - 1LL));;
	};
	return ((_20a260d14_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp));;
}



inline jule::Str _20a292681_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize) {
	return _2234c1e80_StrFromBytes(_20a292c69_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _20a296124_max(((_7932_prec + 4LL) + 1LL), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _20a292c69_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize) {
	jule::U64 _889_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_20a291471_floatInfo> _8913_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1ab781b8b:;
			{
				_889_bits=static_cast<jule::U64>(_209e0669c_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8913_flt=((jule::Ptr<_20a291471_floatInfo>)((&(_20a29186c_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab781c02:;
			{
				_889_bits=_209e06c74_F64Bits(_8733_val);
				_8913_flt=((jule::Ptr<_20a291471_floatInfo>)((&(_20a291b69_f64info))));
			}
		}
		else {
			_case_begin_1ab77e826:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:9"));;
			}
		}
		_match_end_1ab781460:;
	};
	jule::Bool _1015_neg = ((_889_bits >> ((*(_8913_flt))._field_expbits + (*_8913_flt.alloc)._field_mantbits)) != 0LLU);;
	jule::I32 _1029_exp = (static_cast<jule::I32>((_889_bits >> (*_8913_flt.alloc)._field_mantbits)) & static_cast<jule::I32>(((1LL << (*_8913_flt.alloc)._field_expbits) - 1LL)));;
	jule::U64 _1039_mant = (_889_bits & ((static_cast<jule::U64>(1LLU) << (*_8913_flt.alloc)._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1029_exp };
		
		if (_match_expr == static_cast<jule::I32>(((1LL << (*_8913_flt.alloc)._field_expbits) - 1LL))) {
			_case_begin_1ab785a4c:;
			{
				{
					
					if ((_1039_mant != 0LLU)) {
						_case_begin_1ab7872bd:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1015_neg) {
						_case_begin_1ab7873ab:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1ab786b5d:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1ab786a5e:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ab785b3a:;
			{
				(_1029_exp)++;
			}
		}
		else {
			_case_begin_1ab784bb1:;
			{
				_1039_mant|=(static_cast<jule::U64>(1LLU) << (*_8913_flt.alloc)._field_mantbits);
			}
		}
		_match_end_1ab784d59:;
	};
	_1029_exp+=(*_8913_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _20a295299_fmtB(_8720_dst, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _20a29592b_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	;
	_20a2920ed_decimalSlice _1379_digs = _20a2920ed_decimalSlice{};;
	jule::Bool _1389_ok = false;;
	jule::Bool _1405_shortest = (_8758_prec < 0LL);;
	if (_1405_shortest) {
		_1379_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_20a2a1074_ryuFtoaShortest(&(_1379_digs), _1039_mant, (_1029_exp - static_cast<jule::I32>((*_8913_flt.alloc)._field_mantbits)), &((*_8913_flt.alloc)));
		_1389_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab785695:;
				{
					_8758_prec=_20a296124_max((_1379_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab78aea3:;
				{
					_8758_prec=_20a296124_max((_1379_digs._field_nd - _1379_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab78b019:;
				{
					_8758_prec=_1379_digs._field_nd;
				}
			}
			_match_end_1ab78a03a:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I32 _15713_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab78ce72:;
				{
					(_15713_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab78d060:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_15713_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1ab78ca32:;
				{
					_15713_digits=1LL;
				}
			}
			_match_end_1ab78b503:;
		};
		if (((_8769_bitSize == 32LL) && (_15713_digits <= 9LL))) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_20a29ecba_ryuFtoaFixed32(&(_1379_digs), static_cast<jule::U32>(_1039_mant), (_1029_exp - static_cast<jule::I32>((*_8913_flt.alloc)._field_mantbits)), _15713_digits);
			_1389_ok=true;
		} else if ((_15713_digits <= 18LL)) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_20a2a0260_ryuFtoaFixed64(&(_1379_digs), _1039_mant, (_1029_exp - static_cast<jule::I32>((*_8913_flt.alloc)._field_mantbits)), _15713_digits);
			_1389_ok=true;
		};
	};
	if ((!(_1389_ok))) {
		return _20a293473_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	return _20a293b49_fmtDigits(_8720_dst, _1405_shortest, _1015_neg, _1379_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _20a293473_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1885_mant, jule::I32 _18816_exp, _20a291471_floatInfo* _18827_flt) {
	_20a2a4d58_decimal _1899_d = _20a2a4d58_decimal{};;
	_20a2a5210_assign(&_1899_d, _1885_mant);
	_20a2a54b8_shift(&_1899_d, (_18816_exp - static_cast<jule::I32>((*(_18827_flt))._field_mantbits)));
	_20a2920ed_decimalSlice _1929_digs = _20a2920ed_decimalSlice{};;
	jule::Bool _1935_shortest = (_18733_prec < 0LL);;
	if (_1935_shortest) {
		_20a294067_roundShortest(&(_1899_d), _1885_mant, _18816_exp, _18827_flt);
		_1929_digs=_20a2920ed_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab793dce:;
				{
					_18733_prec=(_1929_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab794bc1:;
				{
					_18733_prec=_20a296124_max((_1929_digs._field_nd - _1929_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab794c37:;
				{
					_18733_prec=_1929_digs._field_nd;
				}
			}
			_match_end_1ab794a4a:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab793b15:;
				{
					_20a2a5cd2_round(&_1899_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab793b7b:;
				{
					_20a2a5cd2_round(&_1899_d, (_1899_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab793be2:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_20a2a5cd2_round(&_1899_d, _18733_prec);
				}
			}
			_match_end_1ab796398:;
		};
		_1929_digs=_20a2920ed_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
	};
	return _20a293b49_fmtDigits(_18716_dst, _1935_shortest, _18755_neg, _1929_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _20a293b49_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _20a2920ed_decimalSlice _2255_digs, jule::I32 _22529_prec, jule::U8 _22540_fmt) {
	{
		auto &_match_expr{ _22540_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1ab7993ce:;
			{
				return _20a29460b_fmtE(_22418_dst, _22447_neg, _2255_digs, _22529_prec, _22540_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ab799445:;
			{
				return _20a294ae5_fmtF(_22418_dst, _22447_neg, _2255_digs, _22529_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1ab7994ab:;
			{
				jule::I32 _23313_eprec = _22529_prec;;
				if (((_23313_eprec > _2255_digs._field_nd) && (_2255_digs._field_nd >= _2255_digs._field_dp))) {
					_23313_eprec=_2255_digs._field_nd;
				};
				if (_22431_shortest) {
					_23313_eprec=6LL;
				};
				jule::I32 _2439_exp = (_2255_digs._field_dp - 1LL);;
				if (((_2439_exp < -4LL) || (_2439_exp >= _23313_eprec))) {
					if ((_22529_prec > _2255_digs._field_nd)) {
						_22529_prec=_2255_digs._field_nd;
					};
					return _20a29460b_fmtE(_22418_dst, _22447_neg, _2255_digs, (_22529_prec - 1LL), ((_22540_fmt + 'e') - 'g'));;
				};
				if ((_22529_prec > _2255_digs._field_dp)) {
					_22529_prec=_2255_digs._field_nd;
				};
				return _20a294ae5_fmtF(_22418_dst, _22447_neg, _2255_digs, _20a296124_max((_22529_prec - _2255_digs._field_dp), 0LL));;
			}
		}
		_match_end_1ab799335:;
	};
	return jule::append(_22418_dst,jule::Slice<jule::U8>::make({'%',_22540_fmt}));;
}



inline void _20a294067_roundShortest(_20a2a4d58_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _20a291471_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2835_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2835_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_20a2a4d58_decimal _2929_upper = _20a2a4d58_decimal{};;
	_20a2a5210_assign(&_2929_upper, ((_26235_mant << 1LLU) + 1LLU));
	_20a2a54b8_shift(&_2929_upper, ((_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3029_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I32 _3039_explo = 0LL;;
	if (((_26235_mant > (1LLU << (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2835_minexp))) {
		_3029_mantlo=(_26235_mant - 1LLU);
		_3039_explo=_26246_exp;
	} else {
		_3029_mantlo=((_26235_mant << 1LLU) - 1LLU);
		_3039_explo=(_26246_exp - 1LL);
	};
	_20a2a4d58_decimal _3119_lower = _20a2a4d58_decimal{};;
	_20a2a5210_assign(&_3119_lower, ((_3029_mantlo << 1LLU) + 1LLU));
	_20a2a54b8_shift(&_3119_lower, ((_3039_explo - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3185_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3319_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I32 _3359_ui = 0LL;;
	for (; ; (_3359_ui)++) {
		{
			jule::I32 _3409_mi = ((_3359_ui - _2929_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3409_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1ab7a5c37;
			};
			jule::I32 _3449_li = ((_3359_ui - _2929_upper._field_dp) + _3119_lower._field_dp);;
			jule::U8 _34513_l = static_cast<jule::U8>(48LLU);;
			if (((_3449_li >= 0LL) && (_3449_li < _3119_lower._field_nd))) {
				_34513_l=_3119_lower._field_d[_3449_li];
			};
			jule::U8 _34913_m = static_cast<jule::U8>(48LLU);;
			if ((_3409_mi >= 0LL)) {
				_34913_m=(*(_26223_d))._field_d[_3409_mi];
			};
			jule::U8 _35313_u = static_cast<jule::U8>(48LLU);;
			if ((_3359_ui < _2929_upper._field_nd)) {
				_35313_u=_2929_upper._field_d[_3359_ui];
			};
			jule::Bool _3619_okdown = ((_34513_l != _34913_m) || (_3185_inclusive && ((_3449_li + 1LL) == _3119_lower._field_nd)));;
			{
				
				if (((_3319_upperdelta == 0LLU) && ((_34913_m + 1LLU) < _35313_u))) {
					_case_begin_1ab7aa8a7:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				else if (((_3319_upperdelta == 0LLU) && (_34913_m != _35313_u))) {
					_case_begin_1ab7aa951:;
					{
						_3319_upperdelta=1LLU;
					}
				}
				else if (((_3319_upperdelta == 1LLU) && ((_34913_m != '9') || (_35313_u != '0')))) {
					_case_begin_1ab7aa9b7:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				_match_end_1ab7aa7db:;
			};
			jule::Bool _3829_okup = ((_3319_upperdelta > 0LLU) && ((_3185_inclusive || (_3319_upperdelta > 1LLU)) || ((_3359_ui + 1LL) < _2929_upper._field_nd)));;
			{
				
				if ((_3619_okdown && _3829_okup)) {
					_case_begin_1ab7ad404:;
					{
						_20a2a5cd2_round(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				else if (_3619_okdown) {
					_case_begin_1ab7ad49d:;
					{
						_20a2a5771_roundDown(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				else if (_3829_okup) {
					_case_begin_1ab7ad514:;
					{
						_20a2a5a29_roundUp(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				_match_end_1ab7aaa2d:;
			};
		}
	_iter_next_1ab7a5c37:;
	}
	_iter_end_1ab7a5c37:;;
}



inline jule::Slice<jule::U8> _20a29460b_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _20a2920ed_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4089_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4089_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I32 _41713_i = 1LL;;
		jule::I32 _4189_m = _20a295ca0_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_41713_i < _4189_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_41713_i, _4189_m));;
			_41713_i=_4189_m;
		};
		for (; (_41713_i <= _40154_prec); (_41713_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1ab7b24e6:;
		}
		_iter_end_1ab7b24e6:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I32 _4309_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4309_exp=0LL;
	};
	if ((_4309_exp < 0LL)) {
		_4089_ch='-';
		_4309_exp=(-(_4309_exp));
	} else {
		_4089_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	{
		
		if ((_4309_exp < 10LL)) {
			_case_begin_1ab7b4b8b:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((static_cast<jule::U8>(_4309_exp) + '0')); };
			}
		}
		else if ((_4309_exp < 100LL)) {
			_case_begin_1ab7b4dbc:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1ab7b45b4:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp / 100LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_4309_exp / 10LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1ab7b4053:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _20a294ae5_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _20a2920ed_decimalSlice _45637_d, jule::I32 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I32 _46413_m = _20a295ca0_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _46413_m));;
		for (; (_46413_m < _45637_d._field_dp); (_46413_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1ab7b840e:;
		}
		_iter_end_1ab7b840e:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I32 _47513_i = 0LL;;
		for (; (_47513_i < _45654_prec); (_47513_i)++) {
			{
				jule::U8 _47717_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _47813_j = (_45637_d._field_dp + _47513_i);;
				if (((0LL <= _47813_j) && (_47813_j < _45637_d._field_nd))) {
					_47717_ch=_45637_d._field_d[_47813_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_47717_ch); };
			}
		_iter_next_1ab7b9eb0:;
		}
		_iter_end_1ab7b9eb0:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _20a295299_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _20a291471_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _20a2aa105_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I32>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _20a2aa105_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _20a29592b_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5129_mant, jule::I32 _51224_exp, _20a291471_floatInfo* _51235_flt) {
	if ((_5129_mant == 0LLU)) {
		_51224_exp=0LL;
	};
	_5129_mant<<=(60LLU - (*(_51235_flt))._field_mantbits);
	while (((_5129_mant != 0LLU) && ((_5129_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5129_mant<<=1LLU;
			(_51224_exp)--;
		}
	_iter_next_1ab7bed94:;
	}
	_iter_end_1ab7bed94:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U32 _5269_shift = static_cast<jule::U32>((_51126_prec << 2LLU));;
		jule::U64 _5279_extra = ((_5129_mant << _5269_shift) & 1152921504606846975LLU);;
		_5129_mant>>=(60LLU - _5269_shift);
		if (((_5279_extra | (_5129_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5129_mant)++;
		};
		_5129_mant<<=(60LLU - _5269_shift);
		if (((_5129_mant & 2305843009213693952LLU) != 0LLU)) {
			_5129_mant>>=1LLU;
			(_51224_exp)++;
		};
	};
	jule::Str _5409_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5409_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5409_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push(('0' + static_cast<jule::U8>(((_5129_mant >> 60LLU) & 1LLU)))); };
	_5129_mant<<=4LLU;
	if (((_51126_prec < 0LL) && (_5129_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5129_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I32>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1ab7c573a:;
		}
		_iter_end_1ab7c573a:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I32 _56313_i = 0LL;;
		for (; (_56313_i < _51126_prec); (_56313_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I32>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1ab7c6e34:;
		}
		_iter_end_1ab7c6e34:;;
	};
	jule::U8 _5719_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _20a296cb2_lower(_51137_fmt))) {
		_5719_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	if ((_51224_exp < 0LL)) {
		_5719_ch='-';
		_51224_exp=(-(_51224_exp));
	} else {
		_5719_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	{
		
		if ((_51224_exp < 100LL)) {
			_case_begin_1ab7c992b:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51224_exp < 1000LL)) {
			_case_begin_1ab7c90ac:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 100LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1ab7c8e25:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 1000LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_51224_exp / 100LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1ab7c8ae5:;
	};
	return _51113_dst;;
}



inline jule::I32 _20a295ca0_min(jule::I32 _5968_a, jule::I32 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I32 _20a296124_max(jule::I32 _6038_a, jule::I32 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _20a296cb2_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1ecb2be90_ConvError _20a297235_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1ecb2be90_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1ab7d0657:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1ab7d058b:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_20a296cb2_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1ab7d2071:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_20a296cb2_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1ab7d215e:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_20a296cb2_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1ab7d1c30:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1ab7d1bb9:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1ab7d1b0e:;
					};
				};
			}
		}
		else {
			_case_begin_1ab7ce9a8:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1ab7d003b:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1ab7d6031:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ab7d5c12:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1ab7d52e9:;
			{
				_909_cutoff=(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU);
			}
		}
		_match_end_1ab7d5b24:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1ab7d5c78:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab7d1845:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1ab7d71ca:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7d8088:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1ab7d93ca:;
						{
							_11013_d=(_10912_c - '0');
						}
					}
					else if ((('a' <= _20a296cb2_lower(_10912_c)) && (_20a296cb2_lower(_10912_c) <= 'z'))) {
						_case_begin_1ab7d930e:;
						{
							_11013_d=((_20a296cb2_lower(_10912_c) - 'a') + 10LLU);
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1ab7d8e24:;
						{
							goto _iter_next_1ab7d8088;
						}
					}
					else {
						_case_begin_1ab7d8dad:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1ab7d8d58:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1ab7d8088:;
			++it;
			goto _iter_begin_1ab7d8088;
		}
		_iter_end_1ab7d8088:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _20a297664_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize) {
	jule::U64 _1475_un;
	jule::I32 _1479_err;
	({
		__jule_tuple_u64__jule_tuple__1ecb2be90_ConvError __jule_assign_result = _20a297235_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1479_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1475_un};;
}



inline jule::Exceptional<jule::I64> _20a297b1a_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un;
	jule::I32 _18713_err;
	({
		__jule_tuple_u64__jule_tuple__1ecb2be90_ConvError __jule_assign_result = _20a297235_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I32>(0LL)) && (_18713_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18713_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U32>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0)};
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=(-(_2039_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2039_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _20a2987ca_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_209e070b5_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _575_clz = _20a24b43c_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U32>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi;
	jule::U64 _6318_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a25636a_Mul64(_4122_man, _20a299644_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi;
		jule::U64 _6714_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a25636a_Mul64(_4122_man, _20a299644_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi;
		jule::U64 _6823_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _209e070b5_F64FromBits(_1039_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _20a298c4d_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_209e069aa_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1325_clz = _20a24b43c_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U32>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi;
	jule::U64 _13819_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a25636a_Mul64(_11022_man, _20a299644_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi;
		jule::U64 _14215_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a25636a_Mul64(_11022_man, _20a299644_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi;
		jule::U64 _14324_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _209e069aa_F32FromBits(static_cast<jule::U32>(_1789_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _20a29aa30_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I32 _479_n = _4638_prefix.len();;
	if ((_479_n > _4630_s.len())) {
		_479_n=_4630_s.len();
	};
	jule::I32 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = _4630_s[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4638_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1aacec15d:;
	}
	_iter_end_1aacec15d:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _20a29ad3d_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _739_sign = 1LL;;
	jule::I32 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1aad009d0:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Str* _8317_sp = (&(_6912_s));;
					((*(_8317_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1aad00a57;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1aad00a57:;
			{
				jule::I32 _8813_caseN = _20a29aa30_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _20a25db9c_Inf(_739_sign);
					__jule_func_result.__jule_result_arg1 = (_749_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1aad00abd:;
			{
				if ((_20a29aa30_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _20a25d5c5_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1aad00936:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _20a29b107_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1aad06101:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1aad06167:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1aad05c05:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I32 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_20a296cb2_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I32 _1349_nd = 0LL;;
	jule::I32 _1359_ndMant = 0LL;;
	jule::I32 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1aad0b14a:;
					{
						goto _iter_next_1aad0a479;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1aad0b1e4:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1aad10abc;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1aad0a479;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1aad0b25a:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1aad0a479;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1aad0a479;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _20a296cb2_lower(_1389_c))) && (_20a296cb2_lower(_1389_c) <= 'f'))) {
					_case_begin_1aad0b2c1:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_20a296cb2_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1aad0a479;
					}
				}
				_match_end_1aad0b06d:;
			};
			goto _iter_end_1aad0a479;
		}
	_iter_next_1aad0a479:;
	}
	_iter_end_1aad0a479:;;
	_julec_label_1aad10abc:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_20a296cb2_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I32 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1aad1342c;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=(((_21113_e * 10LL) + static_cast<jule::I32>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1aad1342c:;
		}
		_iter_end_1aad1342c:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1369_dp - _1359_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _20a29cb53_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _20a291b69_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1aad1c436:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1aad1c4be:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_20a29c01a_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _20a29c01a_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1aad1c535:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_20a29c01a_f64pow10[(-(_48635_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aad1bd5e:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _20a29d082_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _20a29186c_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1aad2167c:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1aad21715:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_20a29c34a_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _20a29c34a_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1aad2177b:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_20a29c34a_f32pow10[(-(_52035_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aad210a5:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1ecb2be90_ConvError _20a29d626_atofHex(_20a291471_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1ecb2be90_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5575_maxExp = ((static_cast<jule::I32>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I32 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I32>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1aad25087:;
	}
	_iter_end_1aad25087:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1aad27452:;
	}
	_iter_end_1aad27452:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1aad2782b:;
	}
	_iter_end_1aad2782b:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I32 _6039_err = static_cast<jule::I32>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits));
		_55652_exp=(_5575_maxExp + 1LL);
		_6039_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _20a29186c_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_209e069aa_F32FromBits(static_cast<jule::U32>(_6109_bits)));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _209e070b5_F64FromBits(_6109_bits);
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1ecb2be90_ConvError _20a29da00_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1ecb2be90_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val;
		jule::I32 _62314__n;
		jule::Bool _62318_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20a29ad3d_special(_62111_s);
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6239_val);
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa;
	jule::I32 _62915_exp;
	jule::Bool _62920_neg;
	jule::Bool _62925_trunc;
	jule::Bool _62932_hex;
	jule::I32 _62937__n;
	jule::Bool _62945_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20a29b107_readFloat(&(_62111_s));
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1ecb2be90_ConvError __jule_assign_result = _20a29d626_atofHex(&(_20a29186c_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_63613_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _20a29d082_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _20a298c4d_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _20a298c4d_eiselLemire32((_6295_mantissa + 1LLU), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_20a2a4d58_decimal _6679_d = _20a2a4d58_decimal{};;
	if ((!(_20a29b789_set(&_6679_d, _2234c1930_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b;
	jule::Bool _6718_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _20a29baca_floatBits(&_6679_d, &(_20a29186c_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_209e069aa_F32FromBits(static_cast<jule::U32>(_6715_b));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ecb2be90_ConvError _20a29dc42_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1ecb2be90_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val;
		jule::I32 _68114__n;
		jule::Bool _68118_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20a29ad3d_special(_67911_s);
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa;
	jule::I32 _68715_exp;
	jule::Bool _68720_neg;
	jule::Bool _68725_trunc;
	jule::Bool _68732_hex;
	jule::I32 _68737__n;
	jule::Bool _68745_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20a29b107_readFloat(&(_67911_s));
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__1ecb2be90_ConvError __jule_assign_result = _20a29d626_atofHex(&(_20a291b69_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _20a29cb53_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _20a2987ca_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _20a2987ca_eiselLemire64((_6875_mantissa + 1LLU), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_20a2a4d58_decimal _7249_d = _20a2a4d58_decimal{};;
	if ((!(_20a29b789_set(&_7249_d, _2234c1930_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b;
	jule::Bool _7288_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _20a29baca_floatBits(&_7249_d, &(_20a291b69_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_209e070b5_F64FromBits(_7285_b);
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ecb2be90_ConvError _20a29e0b6_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1ecb2be90_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f;
		jule::I32 _73812_n;
		jule::I32 _73815_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1ecb2be90_ConvError __jule_assign_result = _20a29da00_atof32((*(_73622_s)));
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7389_f);
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_20a29dc42_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _20a29e43a_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize) {
	jule::F64 _7695_f;
	jule::I32 _7698_n;
	jule::I32 _76911_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1ecb2be90_ConvError __jule_assign_result = _20a29e0b6_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7695_f = __jule_assign_result.__jule_result_arg0;
		_7698_n = __jule_assign_result.__jule_result_arg1;
		_76911_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7698_n != _76815_s.len()) && ((_76911_err == static_cast<jule::I32>(0LL)) || (_76911_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
	};
	if ((_76911_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_76911_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7695_f};;
}



inline void _20a29ecba_ryuFtoaFixed32(_20a2920ed_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _629_e2 = _4956_exp;;
	jule::I32 _635_b = _20a253a0a_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U32>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I32>(_635_b) - 25LL);
	};
	jule::I32 _745_q = (((-(_20a2a130a_mulByLog2Log10((_629_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di;
	jule::I32 _8113_dexp2;
	jule::Bool _8124_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20a2a2c02_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _20a2a34a5_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_745_q))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U32 _945_extra = static_cast<jule::U32>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = (_819_di >> _945_extra);
		jule::U32 _1___jule_assign_arg = (_819_di & _955_extraMask);
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_20a2a0a9b_formatDecimal(_4924_d, static_cast<jule::U64>(_819_di), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _20a2a0260_ryuFtoaFixed64(_20a2920ed_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _1319_e2 = _12156_exp;;
	jule::I32 _1325_b = _20a253cc4_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=(_12145_mant << static_cast<jule::U32>((55LL - _1325_b)));
		_1319_e2+=(static_cast<jule::I32>(_1325_b) - 55LL);
	};
	jule::I32 _1465_q = (((-(_20a2a130a_mulByLog2Log10((_1319_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di;
	jule::I32 _15313_dexp2;
	jule::Bool _15324_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20a2a3131_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _20a2a34a5_divisibleByPow5(_12145_mant, (-(_1465_q))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U32 _1665_extra = static_cast<jule::U32>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_1539_di >> _1665_extra);
		jule::U64 _1___jule_assign_arg = (_1539_di & _1675_extraMask);
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_20a2a0a9b_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _20a2a0a9b_formatDecimal(_20a2920ed_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2015_max = _20a2a05a1_u64pow10[_20088_prec];;
	jule::I32 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a;
			jule::U64 _20412_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1aad5d400:;
	}
	_iter_end_1aad5d400:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U32 _2299_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(_20088_prec);
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2319_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2319_v % 100LL);
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((_2299_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(((2LL * _23413_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I32>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((2LL * _23413_v2)));
			_2319_v=_23313_v1;
		}
	_iter_next_1aad60d4d:;
	}
	_iter_end_1aad60d4d:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(((2LL * _2319_v) + 1LLU)));
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((2LL * _2319_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1aad67481:;
	}
	_iter_end_1aad67481:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2029_trimmed);
}



inline void _20a2a1074_ryuFtoaShortest(_20a2920ed_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _20a291471_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_20a24d032_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U32>((-(_26157_exp)));
		_20a2a2152_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml;
	jule::U64 _2739_mc;
	jule::U64 _27313_mu;
	jule::I32 _27321_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _20a2a1a03_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_20a2a2152_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I32 _2795_q = (_20a2a130a_mulByLog2Log10((-(_27321_e2))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _20a29186c_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20a2a2c02_mult64bitPow10(static_cast<jule::U32>(_2735_ml), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20a2a2c02_mult64bitPow10(static_cast<jule::U32>(_2739_mc), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20a2a2c02_mult64bitPow10(static_cast<jule::U32>(_27313_mu), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_29013_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_29113_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_29213_du32);
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20a2a3131_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20a2a3131_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20a2a3131_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_20a2a34a5_divisibleByPow5(_2735_ml, (-(_2795_q)))) {
			_2869_dl0=true;
		};
		if (_20a2a34a5_divisibleByPow5(_2739_mc, (-(_2795_q)))) {
			_2879_dc0=true;
		};
		if (_20a2a34a5_divisibleByPow5(_27313_mu, (-(_2795_q)))) {
			_2889_du0=true;
		};
	};
	jule::U32 _3255_extra = static_cast<jule::U32>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2839_dl >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2839_dl & _3265_extraMask);
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2849_dc >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2849_dc & _3265_extraMask);
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2859_du >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2859_du & _3265_extraMask);
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_20a2a2152_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I32 _20a2a130a_mulByLog2Log10(jule::I32 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I32 _20a2a15c4_mulByLog10Log2(jule::I32 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _20a2a1a03_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _20a291471_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = ((2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = ((4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _20a2a2152_ryuDigits(_20a2920ed_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi;
	jule::U32 _41014_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _20a2a376e_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi;
	jule::U32 _41110_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _20a2a376e_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi;
	jule::U32 _41210_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _20a2a376e_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_20a2a27c3_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_20a2a27c3_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _42813_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1;
				jule::U32 _43117_v2;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_42813_n)]=static_cast<jule::U8>((_43117_v2 + '0'));
			}
		_iter_next_1ab83a4c5:;
		}
		_iter_end_1ab83a4c5:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I32>(_42813_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I32>((9LL - _42813_n));
		_20a2a27c3_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1ab83d176:;
	}
	_iter_end_1ab83d176:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1ab83b031:;
	}
	_iter_end_1ab83b031:;;
}



inline void _20a2a27c3_ryuDigits32(_20a2920ed_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I32 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45554_endindex + 1LL);
		return;;
	};
	jule::I32 _4609_trimmed = 0LL;;
	jule::I32 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c;
			jule::U32 _47120_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1ab8408c6;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I32>(_47120_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1ab8408c6:;
	}
	_iter_end_1ab8408c6:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I32 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1;
			jule::U32 _51213_v2;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(((2LL * _51213_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((2LL * _51213_v2)));
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1ab84647b:;
	}
	_iter_end_1ab84647b:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>((_5099_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45554_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4609_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _20a2a2c02_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _20a299644_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi;
	jule::U64 _5489_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a25636a_Mul64(static_cast<jule::U64>(_53419_m), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_20a2a15c4_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _20a2a3131_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _20a299644_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_20a2a15c4_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1;
	jule::U64 _5799_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a25636a_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1;
	jule::U64 _58013_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a25636a_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid;
	jule::U64 _58110_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a254a61_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = ((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _20a2a34a5_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1ab855314:;
	}
	_iter_end_1ab855314:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _20a2a376e_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _20a2a66a6_trim(_20a2a4d58_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1ab858801:;
	}
	_iter_end_1ab858801:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _20a2a6992_rightShift(_20a2a4d58_decimal* _28420_a, jule::U32 _28432_k) {
	jule::I32 _2859_r = 0LL;;
	jule::I32 _2869_w = 0LL;;
	jule::U32 _2899_n = static_cast<jule::U32>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=(_2899_n * 10LLU);
						(_2859_r)++;
					}
				_iter_next_1ab85b99c:;
				}
				_iter_end_1ab85b99c:;;
				goto _iter_end_1ab85a44b;
			};
			jule::U32 _3039_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=(((_2899_n * 10LLU) + _3039_c) - '0');
		}
	_iter_next_1ab85a44b:;
	}
	_iter_end_1ab85a44b:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U32 _3085_mask = (static_cast<jule::U32>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U32 _3129_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2859_r]);;
			jule::U32 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>((_3139_dig + '0'));
			(_2869_w)++;
			_2899_n=(((_2899_n * 10LLU) + _3129_c) - '0');
		}
	_iter_next_1ab85b31a:;
	}
	_iter_end_1ab85b31a:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U32 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>((_3229_dig + '0'));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=(_2899_n * 10LLU);
		}
	_iter_next_1ab85e186:;
	}
	_iter_end_1ab85e186:;;
	(*(_28420_a))._field_nd=_2869_w;
	_20a2a66a6_trim(_28420_a);
}



inline jule::Bool _20a2a6e48_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s) {
	jule::I32 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1ab863201:;
	}
	_iter_end_1ab863201:;;
	return false;;
}



inline void _20a2a7201_leftShift(_20a2a4d58_decimal* _35219_a, jule::U32 _35231_k) {
	jule::I32 _3539_delta = _20a2a4770_leftCheats[static_cast<jule::I32>(_35231_k)]._field_delta;;
	if (_20a2a6e48_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_20a2a4770_leftCheats[static_cast<jule::I32>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I32 _3589_r = (*(_35219_a))._field_nd;;
	jule::I32 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U32 _3629_n = static_cast<jule::U32>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U32>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U32 _3669_quo = (_3629_n / 10LLU);;
			jule::U32 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>((_3679_rem + '0'));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1ab7e4ccb:;
	}
	_iter_end_1ab7e4ccb:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U32 _3799_quo = (_3629_n / 10LLU);;
			jule::U32 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>((_3809_rem + '0'));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1ab7e92b9:;
	}
	_iter_end_1ab7e92b9:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_20a2a66a6_trim(_35219_a);
}



inline jule::Bool _20a2a7575_shouldRoundUp(_20a2a4d58_decimal* _39919_a, jule::I32 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _20a2a8d07_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _20a2a97ca_small(static_cast<jule::I32>(_6112_i));;
	};
	jule::Str _658_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _20a2aa105_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_658_s = __jule_assign_result.__jule_result_arg1;
	});
	return _658_s;;
}



inline jule::Str _20a2a91c0_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _20a2a97ca_small(static_cast<jule::I32>(_7211_i));;
	};
	jule::Str _768_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _20a2aa105_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_768_s = __jule_assign_result.__jule_result_arg1;
	});
	return _768_s;;
}



inline jule::Str _20a2a9489_Itoa(jule::I32 _819_i) {
	return _20a2a91c0_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _20a2a97ca_small(jule::I32 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _909_buf = jule::Slice<jule::U8>::alloc(3LL, 3LL, 0);;
	_909_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_909_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _2234c1e80_StrFromBytes(_909_buf.slice(0LL, 2LL));;
}



inline jule::Bool _20a2a9a61_isPowerOfTwo(jule::I32 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _20a2aa105_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:9"));;
	};
	jule::Slice<jule::U8> _1119_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I32 _1129_i = _1119_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1ab995c18:;
			{
				;
				jule::U32 _15413_us = static_cast<jule::U32>(_10533_u);;
				while ((_15413_us >= 100LLU)) {
					{
						jule::U32 _15613_is = ((_15413_us % 100LL) << 1LLU);;
						_15413_us/=100LLU;
						_1129_i-=2LL;
						_1119_a[(_1129_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((_15613_is + 1LLU)));
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_15613_is));
					}
				_iter_next_1ab9977a8:;
				}
				_iter_end_1ab9977a8:;;
				jule::U32 _1649_is = (_15413_us << 1LLU);;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((_1649_is + 1LLU)));
				if ((_15413_us >= 10LLU)) {
					(_1129_i)--;
					_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1649_is));
				};
			}
		}
		else if (_20a2a9a61_isPowerOfTwo(_10541_base)) {
			_case_begin_1ab9963cd:;
			{
				jule::U32 _1799_shift = (static_cast<jule::U32>(_20a24c383_TrailingZeros(static_cast<jule::U32>(_10541_base))) & 7LLU);;
				jule::U64 _1809_b = static_cast<jule::U64>(_10541_base);;
				jule::U32 _1819_m = (static_cast<jule::U32>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1809_b)) {
					{
						(_1129_i)--;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>((static_cast<jule::U32>(_10533_u) & _1819_m)));
						_10533_u>>=_1799_shift;
					}
				_iter_next_1ab9a04c5:;
				}
				_iter_end_1ab9a04c5:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		else {
			_case_begin_1ab994d27:;
			{
				jule::U64 _1929_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1929_b)) {
					{
						(_1129_i)--;
						jule::U64 _19813_q = jule::div(_10533_u,_1929_b);;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>((_10533_u - (_19813_q * _1929_b)))));
						_10533_u=_19813_q;
					}
				_iter_next_1ab9959e8:;
				}
				_iter_end_1ab9959e8:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		_match_end_1ab994c8e:;
	};
	if (_10552_neg) {
		(_1129_i)--;
		_1119_a[_1129_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1119_a.slice(_1129_i));
		return __jule_func_result;;
	};
	jule::I32 _2175_n = jule::copy(_1119_a, _1119_a.slice(_1129_i));;
	__jule_func_result.__jule_result_arg1=_2234c1e80_StrFromBytes(_1119_a.slice(0LL, _2175_n));
	return __jule_func_result;;
}



inline jule::Str _20a2ab601_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ab9b1a14:;
			{
				return _20a2aab1c_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ab9b5177:;
			{
				return _20a2aadc5_SysUint;;
			}
		}
		else {
			_case_begin_1ab9b29c1:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1ab9b43b8:;
	};
}



inline jule::I32 _20a2ab8ba_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ab9b60ac:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab9b62cc:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab9b6343:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab9b6123:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ab9b6189:;
			{
				return _20a2aa820_BitSize;;
			}
		}
		else {
			_case_begin_1ab9b5de2:;
			{
				return -1LL;;
			}
		}
		_match_end_1ab9b6013:;
	};
}



inline jule::Str _20a2abc0b_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ab9b86ec:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ab9b8521:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ab9b8587:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ab9b8763:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1ab9b7cd4:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab9b7e05:;
	};
}



inline jule::Str _20a2abe92_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ab9b9973:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ab9b9236:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ab9b929c:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ab9b99d9:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1ab9b94de:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab9b918c:;
	};
}



inline jule::Str _20a2ac25b_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1ab9bae4c:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ab9ba4bd:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1ab9ba765:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab9ba413:;
	};
}



inline jule::Bool _20a2acd61_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _20a29e43a_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _20a2ad12a_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1ab9c0a78:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ab9c0506:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ab9bc47b:;
	};
}



inline jule::I32 _20a2ad3e4_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1ab9c17d2:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1ab9c18ae:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1ab9c1925:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ab9c0d42:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ab9c0c65:;
	};
}



inline jule::I32 _20a2ad6ad_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1ab9c3350:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1ab9c253b:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1ab9c25a2:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ab9c24b4:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ab9c2959:;
	};
}



inline void _20a2ad856_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _22480e387_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1ab9c340a:;
				{
					_20a2aa820_BitSize=64LLU;
					_20a2aab1c_SysInt=jule::Str::lit("i64", 3);
					_20a2aadc5_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1ab9c432e:;
				{
					_20a2aa820_BitSize=32LLU;
					_20a2aab1c_SysInt=jule::Str::lit("i32", 3);
					_20a2aadc5_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1ab9c4230:;
		};
	};
}



inline void _20a2ad9cc_init(void) {
	_20a2ad856_UpdateTarget();
}



inline jule::I64 _20a2b263a_MinI(jule::Str _6113_k) {
	_6113_k=_20a2ab601_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ab9c6a18:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab9c6793:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab9c6809:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab9c6881:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1ab9c34e8:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab9c35b4:;
	};
}



inline jule::I64 _20a2b2948_MaxI(jule::Str _7913_k) {
	_7913_k=_20a2ab601_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ab9c7a2a:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab9c7a91:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab9c7b07:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab9c7b6d:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1ab9c78c6:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab9c7871:;
	};
}



inline jule::U64 _20a2b2c12_MaxU(jule::Str _9713_k) {
	_9713_k=_20a2ab601_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ab9c9125:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab9c918b:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ab9c9202:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ab9c9268:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1ab9c8ec1:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ab9c8e6b:;
	};
}



inline jule::F64 _20a2b3053_Min(jule::Str _11512_k) {
	_11512_k=_20a2ab601_RealKindOf(_11512_k);
	jule::I64 _1175_i = _20a2b263a_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(_1175_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab9cb798:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab9cb325:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1ab9cae4b:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab9cab60:;
	};
}



inline jule::F64 _20a2b32d9_Max(jule::Str _13312_k) {
	_13312_k=_20a2ab601_RealKindOf(_13312_k);
	jule::I64 _1355_i = _20a2b2948_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(_1355_i);;
	};
	jule::U64 _1395_u = _20a2b2c12_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(_1395_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab9cdaa8:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab9cd635:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1ab9cd25b:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab9cce1a:;
	};
}



inline jule::Bool _20a2b3790_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _20a2b3a9d_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _20a2b3d67_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _20a2b41a8_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _20a2b443e_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _20a2b4708_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _20a2b49c2_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _20a2b4d9b_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _20a2b5198_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ab9d22a4:;
			{
				return _20a2b630e_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ab9d231a:;
			{
				return _20a2b661c_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ab9d2381:;
			{
				return _20a2b661c_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab9d2408:;
			{
				return _20a2b3790_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab9d267d:;
			{
				return _20a2b3a9d_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab9d2705:;
			{
				return _20a2b3d67_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab9d277c:;
			{
				return _20a2b41a8_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ab9d2804:;
			{
				return _20a2b443e_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ab9d2914:;
			{
				return _20a2b4708_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab9d297a:;
			{
				return _20a2b49c2_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab9d29e1:;
			{
				return _20a2b4d9b_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1ab9d2a57:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab9d2051:;
			{
				return false;;
			}
		}
		_match_end_1ab9d0a55:;
	};
}



inline jule::Bool _20a2b630e_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _20a2b661c_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _20a2b68d6_IsInt(jule::Str _4610_k) {
	return (_20a2b630e_IsSigInt(_4610_k) || _20a2b661c_IsUnsigInt(_4610_k));;
}



inline jule::Bool _20a2b6c27_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _20a2b6ead_IsNum(jule::Str _5610_k) {
	return (_20a2b68d6_IsInt(_5610_k) || _20a2b6c27_IsFloat(_5610_k));;
}



inline jule::Bool _20a2b7277_IsSigNum(jule::Str _6113_k) {
	return (_20a2b630e_IsSigInt(_6113_k) || _20a2b6c27_IsFloat(_6113_k));;
}



inline void _20a2c156c_lshiftUnsig(_20a2b7552_Const* _59021_c, _20a2b7552_Const* _59032_x) {
	jule::U64 _5915_l = _20a2b9e7d_AsU64(_59021_c);;
	jule::U64 _5925_r = _20a2b9e7d_AsU64(_59032_x);;
	_20a2ba775_SetU64(_59021_c, (_5915_l << _5925_r));
}



inline void _20a2c189c_rshiftUnsig(_20a2b7552_Const* _59621_c, _20a2b7552_Const* _59632_x) {
	jule::U64 _5975_l = _20a2b9e7d_AsU64(_59621_c);;
	jule::U64 _5985_r = _20a2b9e7d_AsU64(_59632_x);;
	_20a2ba775_SetU64(_59621_c, (_5975_l >> _5985_r));
}



inline jule::Bool _1a875d6c6_IsUnaryOp(jule::U32 _33414_id) {
	{
		auto expr = &(_1a86b39e4_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba8a1b4:;
		if (it != expr_end) {
			jule::U32 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1aba8a1b4:;
			++it;
			goto _iter_begin_1aba8a1b4;
		}
		_iter_end_1aba8a1b4:;
	};
	return false;;
}



inline jule::Bool _1a875d9d4_IsBinOp(jule::U32 _34412_id) {
	{
		auto expr = &(_1a8756d95_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba8a6c0:;
		if (it != expr_end) {
			jule::U32 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1aba8a6c0:;
			++it;
			goto _iter_begin_1aba8a6c0;
		}
		_iter_end_1aba8a6c0:;
	};
	return false;;
}



inline jule::Bool _1a875e0de_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1a875e375_IsRawStr(_36410_k)));;
}



inline jule::Bool _1a875e375_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1a875e63e_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1a8760024_IsFloat(jule::Str _38012_k) {
	if (_224695680_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _22469a6b8_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _22469a6b8_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1a87602dd_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1a8760871_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1a8760b3a_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1a87611bd_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1a86b3708_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba92aa1:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1aba92aa1:;
			++it;
			goto _iter_begin_1aba92aa1;
		}
		_iter_end_1aba92aa1:;
	};
	return false;;
}



inline jule::Bool _1a87616b8_IsLetter(jule::I32 _42913_r) {
	return _2245d7a23_IsLetter(_42913_r);;
}



inline jule::Bool _1a8761b3b_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1a8761e05_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1a87621be_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1a8762488_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1aba96621:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1aba966ba:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1aba96742:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aba96599:;
			{
				return false;;
			}
		}
		_match_end_1aba960b0:;
	};
}



inline jule::Bool _1a8762752_IsAssign(jule::U32 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U32>(1LLU)) || (_47313_id == static_cast<jule::U32>(27LLU))) || (_47313_id == static_cast<jule::U32>(30LLU))) || (_47313_id == static_cast<jule::U32>(32LLU))) || (_47313_id == static_cast<jule::U32>(24LLU))) || (_47313_id == static_cast<jule::U32>(74LLU))) || (_47313_id == static_cast<jule::U32>(62LLU))) || (_47313_id == static_cast<jule::U32>(65LLU)));;
}



inline jule::Bool _1a8762a1b_IsPostfixOp(jule::U32 _48516_id) {
	{
		auto expr = &(_1a875746c_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba97c4e:;
		if (it != expr_end) {
			jule::U32 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1aba97c4e:;
			++it;
			goto _iter_begin_1aba97c4e;
		}
		_iter_end_1aba97c4e:;
	};
	return false;;
}



inline jule::Bool _1a8762cd5_IsAssignOp(jule::U32 _49515_id) {
	if (_1a8762a1b_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1a8757758_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba9a416:;
		if (it != expr_end) {
			jule::U32 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1aba9a416:;
			++it;
			goto _iter_begin_1aba9a416;
		}
		_iter_end_1aba9a416:;
	};
	return false;;
}



inline jule::Ptr<_1a8763720_File> _1a8764aea_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1a8763720_File>(_1a8763720_File{._field_Path=_5715_path, });;
}



inline _224743e15_Log _1a8766624_makeErr(jule::I32 _10012_row, jule::I32 _10022_col, jule::Ptr<_1a8763720_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _224743e15_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_224744377_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1a87669dc_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaa5685:;
		if (it != expr_end) {
			jule::I32 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1abaa5685:;
			++it;
			_1149_i++;
			goto _iter_begin_1abaa5685;
		}
		_iter_end_1abaa5685:;
	};
	return true;;
}



inline jule::Str _1a8766d61_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I32 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1a8761b3b_IsDecimal(_1289_b))))) {
				goto _iter_end_1abaa8523;
			};
		}
	_iter_next_1abaa8523:;
	}
	_iter_end_1abaa8523:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1a8767229_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I32 _15628_i) {
	return _1a8766d61_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1a876759d_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I32 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1abaaa943:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1a8761b3b_IsDecimal(_1689_b)) {
					_case_begin_1abaab3e4:;
					{
						goto _iter_next_1abaaa69b;
					}
				}
				else if (_1a8768e2e_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1abaab48d:;
					{
						return _1a8767229_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1abaab36c:;
					{
						goto _iter_end_1abaaa69b;
					}
				}
				_match_end_1abaab306:;
			};
		}
	_iter_next_1abaaa69b:;
	}
	_iter_end_1abaaa69b:;;
	return jule::Str();;
}



inline jule::Str _1a8767922_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I32 _18136_i) {
	_18136_i+=2LL;
	return _1a8766d61_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1a8767c96_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I32 _18635_i) {
	(_18635_i)++;
	return _1a8766d61_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1a876822a_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I32 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1a8766d61_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1a8761b3b_IsDecimal(_2019_b))))) {
				goto _iter_end_1abaae1a5;
			};
		}
	_iter_next_1abaae1a5:;
	}
	_iter_end_1abaae1a5:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1a876846c_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I32 _2179_i = 0LL;;
	_julec_label_1abaad935:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1abab22da:;
					{
						__jule_func_result = _1a876822a_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1abab2384:;
					{
						goto _iter_next_1abab16d5;
					}
				}
				else if (_1a8768aaa_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1abab23ea:;
					{
						__jule_func_result = _1a8766d61_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1a8761b3b_IsDecimal(_2209_b)))) {
					_case_begin_1abab2461:;
					{
						goto _iter_end_1abab16d5;
					}
				}
				_match_end_1abab220d:;
			};
		}
	_iter_next_1abab16d5:;
	}
	_iter_end_1abab16d5:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1a8768736_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1a87669dc_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1a8761e05_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1abab51bc;
			};
		}
	_iter_next_1abab51bc:;
	}
	_iter_end_1abab51bc:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1a8768aaa_isFloatFmtE(jule::U8 _26116_b, jule::I32 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1a8768e2e_isFloatFmtP(jule::U8 _26516_b, jule::I32 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1a87692a3_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I32 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1abab7ca2:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1a8761b3b_IsDecimal(_2769_b)) {
					_case_begin_1abab8cb4:;
					{
						goto _iter_next_1abab7ba3;
					}
				}
				else if (_1a8768e2e_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1abab8d5d:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1abab8c3c:;
					{
						goto _iter_end_1abab7ba3;
					}
				}
				_match_end_1abab8bc6:;
			};
		}
	_iter_next_1abab7ba3:;
	}
	_iter_end_1abab7ba3:;;
	return false;;
}



inline jule::Bool _1a8769627_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I32 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1ababa0c3:;
			{
				goto _case_begin_1ababa16c;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1ababa16c:;
			{
				goto _case_begin_1ababa1e4;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1ababa1e4:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ababa03a:;
			{
				return true;;
			}
		}
		_match_end_1abab9e3b:;
	};
}



inline jule::Bool _1a876999b_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I32 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1ababbd83:;
			{
				goto _case_begin_1ababbde9;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1ababbde9:;
			{
				goto _case_begin_1ababbe60;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1ababbe60:;
			{
				goto _case_begin_1ababbed7;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1ababbed7:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ababbcb7:;
			{
				return true;;
			}
		}
		_match_end_1ababb877:;
	};
}



inline jule::Str _1a8769e96_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I32 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1a876822a_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1a8768aaa_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1a8766d61_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1a87621be_IsOctal(_3399_b))))) {
				goto _iter_end_1abac14d6;
			};
		}
	_iter_next_1abac14d6:;
	}
	_iter_end_1abac14d6:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _1a876a172_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3699_i = 2LL;;
	_julec_label_1abac4e9b:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_1a8769627_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1abac5ba0:;
					{
						__jule_func_result = _1a8767c96_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1a876999b_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1abac5c49:;
					{
						__jule_func_result = _1a8767922_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1a8768e2e_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1abac5cb0:;
					{
						__jule_func_result = _1a8767229_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1a87692a3_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1abac5d26:;
					{
						__jule_func_result = _1a876759d_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1a8762488_IsHex(_3729_b))))) {
					_case_begin_1abac5d8c:;
					{
						goto _iter_end_1abac5100;
					}
				}
				_match_end_1abac5ab2:;
			};
		}
	_iter_next_1abac5100:;
	}
	_iter_end_1abac5100:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1a876a4c4_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I32 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1a8762488_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_20a165059:;
	}
	_iter_end_20a165059:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1a876a78d_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1a876a4c4_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1a876aa57_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1a876a4c4_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1a876ad21_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1a876a4c4_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1a876b0da_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1a87621be_IsOctal((*(_42616_txt))[1LL]))) || (!(_1a87621be_IsOctal((*(_42616_txt))[2LL])))) || (!(_1a87621be_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_224743e15_Log> _1a87710ce_Lex(jule::Ptr<_1a8763720_File> _80912_f, jule::I32 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1a876b85a_lex _8149_lex = _1a876b85a_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1a876e671_newLine(&_8149_lex);
	_1a876c44e_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1a8dbc53d_FindModuleFile(jule::Slice<jule::Ptr<_2232d7a65_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2007e7:;
		if (it != expr_end) {
			jule::Ptr<_2232d7a65_DirEntry> *_1412_d = it;
			{
				if (((!(_2232db508_IsDir((*((*(_1412_d))))._field_Stat.ptr()))) && (*(*(_1412_d)).alloc)._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1ab2007e7:;
			++it;
			goto _iter_begin_1ab2007e7;
		}
		_iter_end_1ab2007e7:;
	};
	return false;;
}



inline jule::Str _1a8dbc7e6_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_2232d7a65_DirEntry>> _2713_dirents = ({
				auto except = static__2246a168b_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1ab2011ee;
				} jule::Slice<jule::Ptr<_2232d7a65_DirEntry>>(nullptr);});
			});;
			jule::Bool _319_exist = _1a8dbc53d_FindModuleFile(&(_2713_dirents));;
			if (_319_exist) {
				return _2527_path;;
			};
			jule::I32 _369_n = _2527_path.len();;
			_2527_path=_2246a0db6_Dir(_2527_path);
			if ((_2527_path.len() == _369_n)) {
				goto _iter_end_1ab2011ee;
			};
		}
	_iter_next_1ab2011ee:;
	}
	_iter_end_1ab2011ee:;;
	return jule::Str();;
}



inline jule::Slice<_224743e15_Log> _1a8dbcab0_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _485_bytes = ({
		auto except = static__2232d999b_Read(_2246a01c3_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_224743e15_Log>::make({_224743e15_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _545_s = _22469c49a_Trim(_2234c1bb6_BytesStr(_485_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_545_s.len() != 0LL)) {
		return jule::Slice<_224743e15_Log>::make({_224743e15_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1a8dbd40c_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _119_b = _910_ident[0LL];;
		return (('A' <= _119_b) && (_119_b <= 'Z'));;
	};
	jule::I32 _145_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e3d80_DecodeRuneStr(_910_ident);
		_145_r = __jule_assign_result.__jule_result_arg0;
	});
	return _224653c8c_IsUpper(_145_r);;
}



inline jule::Bool _1a8e15c6d_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1a8e30c99_ToRune(jule::Str _2015_lit) {
	jule::I32 _219_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I32 _2413_i = 0LL;;
		_219_r=_1a8e31904_runeFromEsqSeq(_2015_lit, &(_2413_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e3d80_DecodeRuneStr(_2015_lit);
			_219_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _219_r;;
}



inline jule::Str _1a8e30ea8_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1a8e312e9_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _539_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab20d140:;
		if (it != expr_end) {
			jule::U8 _5412_b = *it;
			{
				if (((_5412_b >= 128LLU) || (_5412_b == '\\'))) {
					_539_isPure=false;
					goto _iter_end_1ab20d140;
				};
			}
			_iter_next_1ab20d140:;
			++it;
			goto _iter_begin_1ab20d140;
		}
		_iter_end_1ab20d140:;
	};
	if (_539_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _689_s = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len(), 0);;
	jule::I32 _699_i = 0LL;;
	while ((_699_i < _4714_lit.len())) {
		{
			jule::U8 _719_b = _4714_lit[_699_i];;
			if ((_719_b == '\\')) {
				_1a8e31c9a_strEsqSeq(&(_689_s), _4714_lit, &(_699_i));
			} else {
				jule::I32 _7513_r;
				jule::I32 _7516_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e3d80_DecodeRuneStr(_4714_lit.slice(_699_i));
					_7513_r = __jule_assign_result.__jule_result_arg0;
					_7516_size = __jule_assign_result.__jule_result_arg1;
				});
				_699_i+=_7516_size;
				_689_s=_2233e4e2a_AppendRune(_689_s, _7513_r);
			};
		}
	_iter_next_1ab210131:;
	}
	_iter_end_1ab210131:;;
	return _2234c1e80_StrFromBytes(_689_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1a8e31580_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1ab21260b:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ab212d26:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ab212d8c:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1ab212e03:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1ab212e69:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ab212ee1:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1ab213068:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1ab2130e0:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1ab213167:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1ab2131de:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1ab212b7d:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1a8e31904_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i) {
	jule::U8 _1145_b;
	jule::Bool _1148_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1a8e31580_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1145_b = __jule_assign_result.__jule_result_arg0;
		_1148_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1148_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1145_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1ab217cd7:;
			{
				;
				jule::I32 _1249_r = static_cast<jule::I32>(({
					auto except = _20a297664_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:19"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1249_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ab217aea:;
			{
				;
				jule::I32 _1299_r = static_cast<jule::I32>(({
					auto except = _20a297664_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:19"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1299_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ab217512:;
			{
				;
				jule::Str _1349_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _20a297664_ParseUint(_1349_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:18"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1ab216313:;
			{
				;
				jule::Str _1399_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _20a297664_ParseUint(_1399_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:18"));
					(except.result);
				}));;
			}
		}
		_match_end_1ab216a83:;
	};
}



inline void _1a8e31c9a_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i) {
	jule::I32 _1465_r = _1a8e31904_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1465_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1465_r)); };
		return;;
	};
	(*(_14519_buf))=_2233e4e2a_AppendRune((*(_14519_buf)), _1465_r);
}



inline jule::I32 _1a9060dda_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I32 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _139_r;
			jule::I32 _1312_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e3a3e_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_139_r = __jule_assign_result.__jule_result_arg0;
				_1312_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_139_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_1312_size;
		}
	_iter_next_1ab243a7c:;
	}
	_iter_end_1ab243a7c:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1a906121a_getFormatRange(jule::I32* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I32 _285_start = (*(_2724_i));;
	jule::I32 _299_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _319_r;
			jule::I32 _3112_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2233e3a3e_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_319_r = __jule_assign_result.__jule_result_arg0;
				_3112_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3112_size;
			{
				auto &_match_expr{ _319_r };
				
				if (_match_expr == '{') {
					_case_begin_1ab2464db:;
					{
						(_299_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1ab246750:;
					{
						(_299_braces)--;
						if ((_299_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_285_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1ab245c49:;
			};
		}
	_iter_next_1ab2455c8:;
	}
	_iter_end_1ab2455c8:;;
	return nullptr;;
}



inline void _1a9061506_FmtByDefault(_2234c269a_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_2234c313a_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1ab2483de:;
			{
				_2234c313a_WriteStr(_4722_buf, _20a292681_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type135)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab247c29:;
			{
				_2234c313a_WriteStr(_4722_buf, _20a292681_FmtFloat((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1ab247c90:;
			{
				_2234c313a_WriteStr(_4722_buf, _20a2a91c0_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1ab247d06:;
			{
				_2234c313a_WriteStr(_4722_buf, _20a2a91c0_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type137)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ab247d6c:;
			{
				_2234c313a_WriteStr(_4722_buf, _20a2a91c0_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab247dd3:;
			{
				_2234c313a_WriteStr(_4722_buf, _20a2a91c0_FmtInt((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1ab248510:;
			{
				_2234c313a_WriteStr(_4722_buf, _20a2a8d07_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1ab248576:;
			{
				_2234c313a_WriteStr(_4722_buf, _20a2a8d07_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1ab2485dc:;
			{
				_2234c313a_WriteStr(_4722_buf, _20a2a8d07_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab248653:;
			{
				_2234c313a_WriteStr(_4722_buf, _20a2a8d07_FmtUint((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ab2486b9:;
			{
				_2234c313a_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ab248730:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_2234c313a_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_2234c313a_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1ab2476c9:;
			{
				_2234c313a_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1ab245a07:;
	};
}



inline void _1a9061924_applyFmtByDefault(_2234c269a_StrBuilder* _8627_buf, jule::I32* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _875_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1a9061506_FmtByDefault(_8627_buf, &(_875_arg));
}



inline void _1a9061d42_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _2234c269a_StrBuilder* _9436_buf, jule::I32* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1a9061924_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_2234c313a_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_2234c2d82_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1a90621b6_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1169_fmtBytes = _2234c1930_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1169_fmtBytes;;
	};
	jule::I32 _1209_i = _1a9060dda_findFormatPrefix(&(_1169_fmtBytes), 0LL);;
	if ((_1209_i == -1LL)) {
		return _1169_fmtBytes;;
	};
	jule::I32 _1249_j = 0LL;;
	jule::I32 _1259_last = 0LL;;
	_2234c269a_StrBuilder _1269_buf = static__2234c2ac9_New(_11511_fmt.len());;
	for (; (_1209_i != -1LL); _1209_i=_1a9060dda_findFormatPrefix(&(_1169_fmtBytes), _1209_i)) {
		{
			_2234c2d82_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last, _1209_i));
			jule::Slice<jule::U8> _12913_format = _1a906121a_getFormatRange(&(_1209_i), &(_1169_fmtBytes));;
			if ((_12913_format == nullptr)) {
				goto _iter_next_1ab255907;
			};
			_1a9061d42_applyFmt(&(_12913_format), &(_1269_buf), &(_1249_j), _11521_args);
			if ((_1249_j >= _11521_args.len())) {
				_2234c2d82_Write(&_1269_buf, _1169_fmtBytes.slice(_1209_i));
				_1259_last=_1169_fmtBytes.len();
				goto _iter_end_1ab255907;
			};
			_1259_last=_1209_i;
		}
	_iter_next_1ab255907:;
	}
	_iter_end_1ab255907:;;
	if ((_1259_last < _1169_fmtBytes.len())) {
		_2234c2d82_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last));
	};
	return _2234c43d3_Buf(&_1269_buf);;
}



inline jule::Str _1a90641da_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _2234c1e80_StrFromBytes(_1a90621b6_Format(_3111_fmt, _3121_args));;
}



inline jule::Bool _1a8d4224e_parameterUsesGenerics(jule::Ptr<_1a8d3dde9_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1a8780770_GenericDecl>>* _38546_generics) {
	if (_1a8d3aad8_IsSelf((*((*(_38531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1a8e9d773_kindUsesGenerics(&((*((*(_38531_p))))._field_Kind), _38546_generics);;
}



inline jule::Ptr<_1a8e8a1dd_TypeSymbol> _1a8d449c1_buildType(jule::Ptr<_1a8773565_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1a8e4ce3c_Value> _1a8d44cce_buildExpr(jule::Ptr<_1a8777899_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1a8e82229_TypeAlias> _1a8d45098_buildTypeAlias(jule::Ptr<_1a878a082_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1a8e82229_TypeAlias>(_1a8e82229_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1a8d449c1_buildType((*_11223_decl.alloc)._field_Kind), });;
}



inline jule::Ptr<_1a8d24000_Field> _1a8d453d9_buildField(jule::Ptr<_1a8d213e8_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1a8d24000_Field>(_1a8d24000_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1a8d449c1_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1a8d24000_Field>> _1a8d45670_buildFields(jule::Slice<jule::Ptr<_1a8d213e8_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1a8d24000_Field>> _1359_fields = jule::Slice<jule::Ptr<_1a8d24000_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe9d330:;
		if (it != expr_end) {
			jule::Ptr<_1a8d213e8_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8d24000_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1a8d453d9_buildField(_13617_decl)); };
			}
			_iter_next_1abe9d330:;
			++it;
			goto _iter_begin_1abe9d330;
		}
		_iter_end_1abe9d330:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1a8d26e26_Struct> _1a8d45939_buildStruct(jule::Ptr<_1a8d21cde_StructDecl> _14220_decl) {
	return jule::new_ptr<_1a8d26e26_Struct>(_1a8d26e26_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1a8d45670_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, });;
}



inline jule::Ptr<_1a8d3a4bc_Param> _1a8d45c03_buildParam(jule::Ptr<_1a8783cc3_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1a8d3a4bc_Param>(_1a8d3a4bc_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1a8d449c1_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1a8d3a4bc_Param>> _1a8d460cc_buildParams(jule::Slice<jule::Ptr<_1a8783cc3_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1a8d3a4bc_Param>> _1669_params = jule::Slice<jule::Ptr<_1a8d3a4bc_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abea54d0:;
		if (it != expr_end) {
			jule::Ptr<_1a8783cc3_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8d3a4bc_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1a8d45c03_buildParam(_16717_decl)); };
			}
			_iter_next_1abea54d0:;
			++it;
			goto _iter_begin_1abea54d0;
		}
		_iter_end_1abea54d0:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1a8d39c3b_RetType> _1a8d4631e_buildRetType(jule::Ptr<_1a8776458_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a8d39c3b_RetType>(_1a8d39c3b_RetType{._field_Kind=_1a8d449c1_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1a8d3be91_Fn> _1a8d465d8_buildFunc(jule::Ptr<_1a8785225_FnDecl> _18318_decl) {
	return jule::new_ptr<_1a8d3be91_Fn>(_1a8d3be91_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1a8d4631e_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1a8d460cc_buildParams(&((*_18318_decl.alloc)._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1a8d3be91_Fn>> _1a8d468a2_buildMethods(jule::Slice<jule::Ptr<_1a8785225_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1a8d3be91_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1a8d3be91_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abeaaa79:;
		if (it != expr_end) {
			jule::Ptr<_1a8785225_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8d3be91_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1a8d465d8_buildFunc(_20317_decl)); };
			}
			_iter_next_1abeaaa79:;
			++it;
			goto _iter_begin_1abeaaa79;
		}
		_iter_end_1abeaaa79:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1a8e8a1dd_TypeSymbol>> _1a8d46b6b_buildTraitInherits(jule::Slice<jule::Ptr<_1a8773565_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1a8e8a1dd_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1a8e8a1dd_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abeab6a1:;
		if (it != expr_end) {
			jule::Ptr<_1a8773565_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8e8a1dd_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1a8d449c1_buildType(_21117_it)); };
			}
			_iter_next_1abeab6a1:;
			++it;
			goto _iter_begin_1abeab6a1;
		}
		_iter_end_1abeab6a1:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1a8d5034a_Trait> _1a8d46e35_buildTrait(jule::Ptr<_1a8d2252b_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1a8d5034a_Trait>(_1a8d5034a_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1a8d46b6b_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1a8d468a2_buildMethods(&((*_21719_decl.alloc)._field_Methods)), });;
}



inline jule::Ptr<_1a8d51ed9_EnumItem> _1a8d471ee_buildEnumItem(jule::Ptr<_1a8d1e5d3_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1a8d51ed9_EnumItem>(_1a8d51ed9_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1a8d44cce_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1a8d51ed9_EnumItem>> _1a8d474b8_buildEnumItems(jule::Slice<jule::Ptr<_1a8d1e5d3_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1a8d51ed9_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1a8d51ed9_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abeada38:;
		if (it != expr_end) {
			jule::Ptr<_1a8d1e5d3_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8d51ed9_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1a8d471ee_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1abeada38:;
			++it;
			goto _iter_begin_1abeada38;
		}
		_iter_end_1abeada38:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1a8d52a56_Enum> _1a8d479b3_buildEnum(jule::Ptr<_1a8d20194_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1a8d52a56_Enum>(_1a8d52a56_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1a8d449c1_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1a8d474b8_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a8d53b89_TypeEnumItem> _1a8d47b8e_buildTypeEnumItem(jule::Ptr<_1a8d209be_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1a8d53b89_TypeEnumItem>(_1a8d53b89_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1a8d449c1_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1a8d53b89_TypeEnumItem>> _1a8d47e36_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a8d209be_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1a8d53b89_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1a8d53b89_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abeb1c8e:;
		if (it != expr_end) {
			jule::Ptr<_1a8d209be_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8d53b89_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1a8d47b8e_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1abeb1c8e:;
			++it;
			goto _iter_begin_1abeb1c8e;
		}
		_iter_end_1abeb1c8e:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1a8d54261_TypeEnum> _1a8d48200_buildTypeEnum(jule::Ptr<_1a8d2112e_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1a8d54261_TypeEnum>(_1a8d54261_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1a8d47e36_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a8de41ad_Var> _1a8d484b9_buildVar(jule::Ptr<_1a87863d0_VarDecl> _27817_decl) {
	return jule::new_ptr<_1a8de41ad_Var>(_1a8de41ad_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1a8d449c1_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1a8d44cce_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1a8d4343c_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1a8de41ad_Var>> _1a8d48783_buildVars(jule::Slice<jule::Ptr<_1a87863d0_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1a8de41ad_Var>> _2969_vars = jule::Slice<jule::Ptr<_1a8de41ad_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abeb7976:;
		if (it != expr_end) {
			jule::Ptr<_1a87863d0_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8de41ad_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1a8d484b9_buildVar(_29717_decl)); };
			}
			_iter_next_1abeb7976:;
			++it;
			goto _iter_begin_1abeb7976;
		}
		_iter_end_1abeb7976:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1a8d789b1_Impl> _1a8d48a4c_buildImpl(jule::Ptr<_1a8d22b8b_Impl> _30318_decl) {
	return jule::new_ptr<_1a8d789b1_Impl>(_1a8d789b1_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1a8d468a2_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1a8d48783_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d73e0c_buildAsComptimeMethodData(jule::Ptr<_1a8d3ee72_FnIns>* _142135_f) {
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait((*(_142135_f)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data1)}), });;
}



inline jule::Ptr<_1a8da0ea0_ImportInfo> _1a8d7421a_findComptimePackage(jule::Ptr<_1a8dc1344_Sema>* _142929_s) {
	return _1a8dc17d9_SelectPackage((*(_142929_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a8da0ea0_ImportInfo>>((void*)__jule_anon1ac038ab3, nullptr, nullptr));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d7458e_buildComptimeTypeInfoData(jule::Ptr<_1a8dc1344_Sema>* _143535_s, jule::Ptr<_1a8e8301b_TypeKind>* _143550_t) {
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8dc0b7e_pushComptimeTypeInfo((*((*(_143535_s))))._field_meta.ptr(), _143550_t), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data15)}), });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8d748d0_buildComptimeValue(jule::Ptr<_1a8e4bcb5_Data>* _144328_d) {
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d6d203_comptimeValue>(_1a8d6d203_comptimeValue{._field_data=(*(_144328_d))}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data16)}), });;
}



inline jule::Str _1a8d7795a_toStrConstraints(jule::Ptr<_1a8e81635_InsGeneric> _14321_g) {
	_2234c269a_StrBuilder _1449_sb = static__2234c2ac9_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcb1297:;
		if (it != expr_end) {
			jule::I32 _1459_i = it - expr->begin();
			jule::Ptr<_1a8e8301b_TypeKind> *_14512_c = it;
			{
				_2234c313a_WriteStr(&_1449_sb, _1a8e833d4_Str((*(_14512_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1459_i) > 1LL)) {
					_2234c313a_WriteStr(&_1449_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1abcb1297:;
			++it;
			_1459_i++;
			goto _iter_begin_1abcb1297;
		}
		_iter_end_1abcb1297:;
	};
	return _2234c3932_Str(&_1449_sb);;
}



inline jule::Bool _1a8d77d23_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a8e8301b_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1abcb3101:;
			{
				jule::Ptr<_1a8e8aae5_Prim> _1579_prim = _1a8e8566c_Prim((*(_15434_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _20a2b7277_IsSigNum((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1abcb3167:;
			{
				jule::Ptr<_1a8e8aae5_Prim> _1639_prim = _1a8e8566c_Prim((*(_15434_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _20a2b661c_IsUnsigInt((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1abcb31de:;
			{
				jule::Ptr<_1a8e8aae5_Prim> _1699_prim = _1a8e8566c_Prim((*(_15434_g)).ptr());;
				if ((_1699_prim == nullptr)) {
					return false;;
				};
				return _20a2b6c27_IsFloat((*(_1699_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1abcb3266:;
			{
				jule::Ptr<_1a8e8aae5_Prim> _1759_prim = _1a8e8566c_Prim((*(_15434_g)).ptr());;
				if ((_1759_prim == nullptr)) {
					return false;;
				};
				return _20a2b6ead_IsNum((*(_1759_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1abcb3442:;
			{
				return _1a8e8489c_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1abcb34a8:;
			{
				return (!(_1a8e8489c_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1abcb351e:;
			{
				return _1a8e84616_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1abcb3585:;
			{
				return _1a8e84b33_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1abcb2551:;
			{
				return false;;
			}
		}
		_match_end_1abcb2e9c:;
	};
}



inline jule::Bool _1a8d780dc_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1a8d75d21_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcb92a0:;
		if (it != expr_end) {
			jule::Str *_19412_bc = it;
			{
				if (((*(_19325_ident)) == (*(_19412_bc)))) {
					return true;;
				};
			}
			_iter_next_1abcb92a0:;
			++it;
			goto _iter_begin_1abcb92a0;
		}
		_iter_end_1abcb92a0:;
	};
	return false;;
}



inline jule::Ptr<_1a8d863c5_scopeChecker> _1a8d7abe4_newScopeCheckerBase(jule::Ptr<_1a8dc1344_Sema>* _5829_s, jule::Ptr<_1a8d3ee72_FnIns> _5843_owner) {
	return jule::new_ptr<_1a8d863c5_scopeChecker>(_1a8d863c5_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1a8e4694c_SymbolTable>(), });;
}



inline jule::Ptr<_1a8d863c5_scopeChecker> _1a8d7b0ac_newScopeChecker(jule::Ptr<_1a8dc1344_Sema>* _6625_s, jule::Ptr<_1a8d3ee72_FnIns> _6639_owner) {
	jule::Ptr<_1a8d863c5_scopeChecker> _679_base = _1a8d7abe4_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a8d84d52_scopeLabel>>>(nullptr);
	(*_679_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a8d853d5_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1a8d84d52_scopeLabel> _1a8d7b431_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1a8d863c5_scopeChecker> _7637_scope) {
	jule::Ptr<_1a8d84d52_scopeLabel> _779_label = _1a8d8a4c8_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_779_label=_1a8d8a4c8_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1abcd2e78:;
	}
	_iter_end_1abcd2e78:;;
	return _779_label;;
}



inline jule::Bool _1a8d7b7e9_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1a8d7de17_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1abcd4d15:;
			{
				jule::Ptr<_1a8d3112d_FnCallExprModel> _939_fcem = _9021_Model.unsafe_cast_ptr<_1a8d3112d_FnCallExprModel>();;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1abcd3682:;
			{
				jule::Ptr<_1a8e4bcb5_Data> _989_d = _9021_Model.unsafe_cast_ptr<_1a8e4bcb5_Data>();;
				return _1a8d7b7e9_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1abcd4cb0:;
	};
	return false;;
}



inline jule::Bool _1a8d7bb6d_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1a8d7de17_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1abcd6a09:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1a8d7de17_Scope>(&__jule_any_type21) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1abcd7389:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1a8d7ed4c_InfIter>(&__jule_any_type35)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1abcd7400:;
			{
				jule::Ptr<_1a8d80c4e_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1a8d80c4e_RangeIter>(&__jule_any_type39);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1a8d7b7e9_modelIsGotoScope((*((*_1119_it.alloc)._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1abcd6e7c:;
			{
				jule::Ptr<_1a8d80303_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1a8d80303_WhileIter>(&__jule_any_type37);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1a8d7b7e9_modelIsGotoScope((*_1149_it.alloc)._field_Expr, _10434_sc)) || _1a8d7b7e9_modelIsGotoScope((*_1149_it.alloc)._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1abcd6ee3:;
			{
				jule::Ptr<_1a8d8312a_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1a8d8312a_Match>(&__jule_any_type46);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abcdb7bc:;
					if (it != expr_end) {
						jule::Ptr<_1a8d83b53_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(*(_12016_c)).alloc)._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1abcdc713:;
								if (it != expr_end) {
									jule::Ptr<_1a8e4bcb5_Data> *_12420_expr = it;
									{
										if (_1a8d7b7e9_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1abcdc713:;
									++it;
									goto _iter_begin_1abcdc713;
								}
								_iter_end_1abcdc713:;
							};
						}
						_iter_next_1abcdb7bc:;
						++it;
						goto _iter_begin_1abcdb7bc;
					}
					_iter_end_1abcdb7bc:;
				};
				return (((*_1199_m.alloc)._field_Default != nullptr) && ((*(*_1199_m.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1abcd7059:;
			{
				jule::Ptr<_1a8d7ea50_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1a8d7ea50_Conditional>(&__jule_any_type34);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abcde2d6:;
					if (it != expr_end) {
						jule::Ptr<_1a8d7e335_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1a8d7b7e9_modelIsGotoScope((*(*(_13316_elif)).alloc)._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1abcde2d6:;
						++it;
						goto _iter_begin_1abcde2d6;
					}
					_iter_end_1abcde2d6:;
				};
				return (((*_1329_c.alloc)._field_Default != nullptr) && ((*(*_1329_c.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1abcd70c0:;
			{
				jule::Ptr<_1a8e4bcb5_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1a8e4bcb5_Data>(&__jule_any_type23);;
				return _1a8d7b7e9_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1abcd5376:;
			{
				return false;;
			}
		}
		_match_end_1abcd5321:;
	};
}



inline jule::I32 _1a8d7bee2_countMatchType(jule::Ptr<_1a8d8312a_Match>* _14720_m, jule::Ptr<_1a8e8301b_TypeKind>* _14732_t) {
	jule::I32 _1489_n = 0LL;;
	jule::Str _1495_kind = _1a8e833d4_Str((*(_14732_t)).ptr());;
	_julec_label_1abce221d:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abce264c:;
		if (it != expr_end) {
			jule::Ptr<_1a8d83b53_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1abce264c;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abce3384:;
					if (it != expr_end) {
						jule::Ptr<_1a8e4bcb5_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1abce264c;
							};
							if ((_1495_kind == _1a8e833d4_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1a8e8301b_TypeKind>(&__jule_any_type84).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1abce3384:;
						++it;
						goto _iter_begin_1abce3384;
					}
					_iter_end_1abce3384:;
				};
			}
			_iter_next_1abce264c:;
			++it;
			goto _iter_begin_1abce264c;
		}
		_iter_end_1abce264c:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> _1a8d7c2ab_getDatasFromTupleData(jule::Ptr<_1a8e4bcb5_Data>* _17131_d) {
	if ((_1a8e87493_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1abce6e26:;
				{
					return (*((*((*(_17131_d))))._field_Model.unsafe_cast_ptr<_1a8d34818_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1abce4dd0:;
				{
					jule::Ptr<_1a8e90bd8_Tuple> _17717_t = _1a8e87493_Tup((*((*(_17131_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> _17817_r = jule::Slice<jule::Ptr<_1a8e4bcb5_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*_17717_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1abce66b7:;
						if (it != expr_end) {
							jule::Ptr<_1a8e8301b_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1a8e4bcb5_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1abce66b7:;
							++it;
							goto _iter_begin_1abce66b7;
						}
						_iter_end_1abce66b7:;
					};
					return _17817_r;;
				}
			}
			_match_end_1abce4d7a:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1a8e4bcb5_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1a8d7cae7_checkMut(jule::Ptr<_1a8dc1344_Sema>* _20618_s, jule::Ptr<_1a8e4bcb5_Data>* _20629_left, jule::Ptr<_1a8e4bcb5_Data> _20646_right, jule::Ptr<_1a875ce89_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1abcea952:;
			{
				_1a8dc3e7e_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*_20646_right.alloc)._field_Mutable))) && _1a8e8489c_Mutable((*_20646_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1abcead4d:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U32>(71LLU)) && (_1a8e86be0_Struct((*_20646_right.alloc)._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1a8dc3e7e_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*_20646_right.alloc)._field_Kind), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1abcea8db:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1abcea842:;
	};
}



inline jule::Bool _1a8d7d0d1_checkAssign(jule::Ptr<_1a8dc1344_Sema>* _22521_s, jule::Ptr<_1a8e4bcb5_Data>* _22536_left, jule::Ptr<_1a8e4bcb5_Data> _22553_right, jule::Ptr<_1a875ce89_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8d3ee72_FnIns> _2265_f = _1a8e86959_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*_2265_f.alloc)._field_Decl != nullptr)) && (*(*_2265_f.alloc)._field_Decl.alloc)._field_Global)) {
		_1a8dc3e7e_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1a8e4c6bc_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1abd0121b:;
			{
				_1a8dc3e7e_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1a8dc42e2_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1abd01282:;
			{
				_1a8dc3e7e_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1a8d7cae7_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1abd012e8:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1abd01161:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1abd00eeb:;
	};
}



inline jule::Bool _1a8d7d39a_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1abd01381:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1a8782013_AssignSt>(&__jule_any_type57)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1abd03471:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1abd0332d:;
			{
				return false;;
			}
		}
		_match_end_1abd032c8:;
	};
}



inline jule::Bool _1a8d7d664_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type42 || _match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type45) {
			_case_begin_1abd03b36:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1abd045b5:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1a8e4bcb5_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type33) {
						_case_begin_1abd04e89:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1abd05792:;
						{
							return false;;
						}
					}
					_match_end_1abd0573c:;
				};
			}
		}
		else {
			_case_begin_1abd042eb:;
			{
				return false;;
			}
		}
		_match_end_1abd03bad:;
	};
}



inline jule::Bool _1a8d7d92d_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1abd05c15:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1abd04d57:;
			{
				return false;;
			}
		}
		_match_end_1abd04d02:;
	};
}



inline jule::U32 _1a8d987d3_removeEqFromOp(jule::U32 _219719_op) {
	{
		auto &_match_expr{ _219719_op };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1abd069c4:;
			{
				return static_cast<jule::U32>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1abd06a3a:;
			{
				return static_cast<jule::U32>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1abd066e9:;
			{
				return static_cast<jule::U32>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1abd06760:;
			{
				return static_cast<jule::U32>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1abd06b28:;
			{
				return static_cast<jule::U32>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1abd06b8e:;
			{
				return static_cast<jule::U32>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1abd06c05:;
			{
				return static_cast<jule::U32>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1abd06c7c:;
			{
				return static_cast<jule::U32>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1abd06d04:;
			{
				return static_cast<jule::U32>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1abd06dd1:;
			{
				return static_cast<jule::U32>(66LLU);;
			}
		}
		else {
			_case_begin_1abd06111:;
			{
				return _219719_op;;
			}
		}
		_match_end_1abd0661c:;
	};
}



inline void _1a8d98a14_makeComptimeRange(jule::Ptr<_1a8e4bcb5_Data>* _222627_d) {
	{
		
		if ((_1a8e879b0_comptimeStructFields((*((*(_222627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd072cc:;
			{
				(*((*(_222627_d))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d573b8_comptimeRange>(_1a8d573b8_comptimeRange{._field_kind=jule::Trait(_1a8e879b0_comptimeStructFields((*((*(_222627_d))))._field_Kind), (jule::Trait::Type*)&_1a8d57198_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data5)});
			}
		}
		else if ((_1a8e87ecc_comptimeEnumFields((*((*(_222627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd0a841:;
			{
				(*((*(_222627_d))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d573b8_comptimeRange>(_1a8d573b8_comptimeRange{._field_kind=jule::Trait(_1a8e87ecc_comptimeEnumFields((*((*(_222627_d))))._field_Kind), (jule::Trait::Type*)&_1a8d57198_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data5)});
			}
		}
		else if ((_1a8e88c9c_comptimeTypeInfos((*((*(_222627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd0a8a7:;
			{
				(*((*(_222627_d))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d573b8_comptimeRange>(_1a8d573b8_comptimeRange{._field_kind=jule::Trait(_1a8e88c9c_comptimeTypeInfos((*((*(_222627_d))))._field_Kind), (jule::Trait::Type*)&_1a8d57198_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data5)});
			}
		}
		else if ((_1a8e884e9_comptimeParams((*((*(_222627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd07343:;
			{
				(*((*(_222627_d))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d573b8_comptimeRange>(_1a8d573b8_comptimeRange{._field_kind=jule::Trait(_1a8e884e9_comptimeParams((*((*(_222627_d))))._field_Kind), (jule::Trait::Type*)&_1a8d57198_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data5)});
			}
		}
		else if ((_1a8e892b9_comptimeStatics((*((*(_222627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd073a9:;
			{
				(*((*(_222627_d))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d573b8_comptimeRange>(_1a8d573b8_comptimeRange{._field_kind=jule::Trait(_1a8e892b9_comptimeStatics((*((*(_222627_d))))._field_Kind), (jule::Trait::Type*)&_1a8d57198_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data5)});
			}
		}
		else if ((_1a8e89d03_comptimeFiles((*((*(_222627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd07420:;
			{
				(*((*(_222627_d))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d573b8_comptimeRange>(_1a8d573b8_comptimeRange{._field_kind=jule::Trait(_1a8e89d03_comptimeFiles((*((*(_222627_d))))._field_Kind), (jule::Trait::Type*)&_1a8d57198_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1abd07266:;
			{
				(*((*(_222627_d))))._field_Decl=true;
			}
		}
		_match_end_1abd0a511:;
	};
}



inline jule::Bool _1a8d9900e_canComptimeMatch(jule::Ptr<_1a8e4bcb5_Data>* _224726_d) {
	if ((!(_1a8e45a4a_isGoodValueToInfer(_224726_d)))) {
		return false;;
	};
	return (_1a8e4c6bc_IsConst((*(_224726_d)).ptr()) || (_1a8e89033_comptimeTypeInfo((*((*(_224726_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1a8de41ad_Var> _1a8d9d486_findVarInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2ca98c:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1a8de41ad_Var> _4813_v = _1a8e47332_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1ac2ca98c:;
			++it;
			goto _iter_begin_1ac2ca98c;
		}
		_iter_end_1ac2ca98c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8e82229_TypeAlias> _1a8d9d909_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2cb8e4:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1a8e82229_TypeAlias> _6013_ta = _1a8e4772d_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1ac2cb8e4:;
			++it;
			goto _iter_begin_1ac2cb8e4;
		}
		_iter_end_1ac2cb8e4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d26e26_Struct> _1a8d9dd38_findStructInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2cce01:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1a8d26e26_Struct> _7213_s = _1a8e47b29_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1ac2cce01:;
			++it;
			goto _iter_begin_1ac2cce01;
		}
		_iter_end_1ac2cce01:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d3be91_Fn> _1a8d9e2de_findFnInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2ce40d:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1a8d3be91_Fn> _8413_f = _1a8e48025_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1ac2ce40d:;
			++it;
			goto _iter_begin_1ac2ce40d;
		}
		_iter_end_1ac2ce40d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d5034a_Trait> _1a8d9e630_findTraitInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2d0ee2:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1a8d5034a_Trait> _9613_t = _1a8e48366_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1ac2d0ee2:;
			++it;
			goto _iter_begin_1ac2d0ee2;
		}
		_iter_end_1ac2d0ee2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d52a56_Enum> _1a8d9e9a4_findEnumInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2d1234:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1a8d52a56_Enum> _10813_e = _1a8e486a7_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1ac2d1234:;
			++it;
			goto _iter_begin_1ac2d1234;
		}
		_iter_end_1ac2d1234:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8d54261_TypeEnum> _1a8d9ed28_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2d2565:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1a8d54261_TypeEnum> _12013_e = _1a8e489e8_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1ac2d2565:;
			++it;
			goto _iter_begin_1ac2d2565;
		}
		_iter_end_1ac2d2565:;
	};
	return nullptr;;
}



inline jule::Any _1a8da0367_defByIdentPackage(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2d3a2d:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1a8e499b6_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1ac2d3a2d:;
			++it;
			goto _iter_begin_1ac2d3a2d;
		}
		_iter_end_1ac2d3a2d:;
	};
	return nullptr;;
}



inline jule::Bool _1a8da63a1_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _224695680_HasPrefix((*(_35518_f)), _2246a01c3_Join(jule::Slice<jule::Str>::make({_22480d573_PathStdlib,_35526_p})));;
}



inline jule::Bool _1a8dbd9d4_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac2e5666:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac2e56cc:;
			{
				jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1a8d33c9b_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_1813_model))._field_Field != nullptr) && _1a8dbd9d4_isValidModelForRef(&((*((*_1813_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac2e5743:;
			{
				jule::Ptr<_1a8d2e527_UnaryExprModel> _2113_unary = (*(_1328_m)).cast_ptr<_1a8d2e527_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2113_unary))._field_Op))._field_Id != static_cast<jule::U32>(62LLU))) {
					return false;;
				};
				if ((_1a8e85b89_Ptr((*((*_2113_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1a8e85903_Sptr((*(*_2113_unary.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
					return false;;
				};
				return _1a8dbd9d4_isValidModelForRef(&((*(*_2113_unary.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ac2e57a9:;
			{
				jule::Ptr<_1a8d319ad_IndexingExprModel> _3513_indexing = (*(_1328_m)).cast_ptr<_1a8d319ad_IndexingExprModel>(&__jule_any_type44);;
				return _1a8dbd9d4_isValidModelForRef(&((*((*(_3513_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1ac2e4d91:;
			{
				return false;;
			}
		}
		_match_end_1ac2e4d3b:;
	};
}



inline _224743e15_Log _1a8dbde8a_compilerErr(jule::Ptr<_1a875ce89_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args) {
	_224743e15_Log _439_log = _224743e15_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_4217_token))))._field_Row, ._field_Column=(*((*(_4217_token))))._field_Column, ._field_Path=(*((*((*(_4217_token))))._field_File))._field_Path, ._field_Text=_224744377_Logf(_4244_fmt, _4257_args), };;
	if (_4232_line) {
		_439_log._field_Line=_1a8764732_GetRow((*((*(_4217_token))))._field_File, (*((*(_4217_token))))._field_Row);
	};
	return _439_log;;
}



inline jule::Bool _1a8dbe30e_impIsLookupable(jule::Ptr<_1a8da0ea0_ImportInfo>* _5621_i, jule::Str* _5638_ident) {
	if ((*((*(_5621_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5621_i))))._field_ImportAll))) {
		if (((*((*(_5621_i))))._field_Selected.len() > 0LL)) {
			return _1a8da3832_existIdent((*(_5621_i)).ptr(), (*(_5638_ident)));;
		};
	};
	return (*((*(_5621_i))))._field_ImportAll;;
}



inline void _1a8dbe63e_appendRetVars(jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _6823_dest, jule::Ptr<_1a8d3ee72_FnIns>* _6842_f) {
	if ((_1a8d3c414_IsVoid((*((*(_6842_f))))._field_Decl.ptr()) || ((*((*(_6842_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>> _739_types = _1a8d41171_Types((*(_6842_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6842_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac30141e:;
		if (it != expr_end) {
			jule::I32 _7410_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> _7417_ident = *it;
			{
				if ((_1a8760871_IsIgnoreIdent((*(_7417_ident))._field_Kind) || _1a8760b3a_IsAnonIdent((*_7417_ident.alloc)._field_Kind))) {
					goto _iter_next_1ac30141e;
				};
				{ jule::Slice<jule::Ptr<_1a8de41ad_Var>> &__jule_push_dest = (*(_6823_dest)); __jule_push_dest.push(jule::new_ptr<_1a8de41ad_Var>(_1a8de41ad_Var{._field_Scope=(*((*(_6842_f))))._field_Scope, ._field_Token=_7417_ident, ._field_Ident=(*_7417_ident.alloc)._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=_739_types[_7410_i]}), ._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()}), ._field_RetOrder=_7410_i, })); };
			}
			_iter_next_1ac30141e:;
			++it;
			_7410_i++;
			goto _iter_begin_1ac30141e;
		}
		_iter_end_1ac30141e:;
	};
	if ((((*(*(*((*(_6842_f))))._field_Decl.alloc)._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6823_dest)).len() == 1LL))) {
		(*((*(_6823_dest))[((*(_6823_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1a8dbe92a_appendParamVars(jule::Slice<jule::Ptr<_1a8de41ad_Var>>* _9825_dest, jule::Ptr<_1a8d3ee72_FnIns>* _9844_f) {
	if (((*((*(_9844_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9844_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac305cc5:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3dde9_ParamIns> _10317_p = *it;
			{
				if ((_1a8760871_IsIgnoreIdent((*((*(_10317_p))._field_Decl))._field_Ident) || _1a8760b3a_IsAnonIdent((*(*_10317_p.alloc)._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1ac305cc5;
				};
				jule::Ptr<_1a8de41ad_Var> _10813_v = jule::new_ptr<_1a8de41ad_Var>(_1a8de41ad_Var{._field_Scope=(*((*(_9844_f))))._field_Scope, ._field_Token=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Token, ._field_Ident=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Ident, ._field_Mutable=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Mutable, ._field_Used=true, ._field_Reference=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(), ._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()}), });;
				{
					
					if (_1a8d3aad8_IsSelf((*_10317_p.alloc)._field_Decl)) {
						_case_begin_1ac309b31:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9844_f))))._field_Owner, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0)});
							(*_10813_v.alloc)._field_Reference=(!(_1a8d3ad6e_IsRef((*_10317_p.alloc)._field_Decl)));
							if (_1a8d3ad6e_IsRef((*_10317_p.alloc)._field_Decl)) {
								((*(_10813_v))._field_Ident).mut_slice(1LL);;
								(*((*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1a8e8e621_Sptr>(_1a8e8e621_Sptr{._field_Elem=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_BindIdent=(*(*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent, ._field_Kind=(*(*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data21);
							};
						}
					}
					else if ((*(*_10317_p.alloc)._field_Decl.alloc)._field_Variadic) {
						_case_begin_1ac309867:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8e900e4_Slc>(_1a8e900e4_Slc{._field_Elem=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_BindIdent=(*((*_10317_p.alloc)._field_Kind))._field_BindIdent, ._field_Kind=(*(*_10317_p.alloc)._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data22)});
						}
					}
					else {
						_case_begin_1ac309801:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=(*_10317_p.alloc)._field_Kind;
						}
					}
					_match_end_1ac3096d0:;
				};
				{ jule::Slice<jule::Ptr<_1a8de41ad_Var>> &__jule_push_dest = (*(_9825_dest)); __jule_push_dest.push(_10813_v); };
			}
			_iter_next_1ac305cc5:;
			++it;
			goto _iter_begin_1ac305cc5;
		}
		_iter_end_1ac305cc5:;
	};
}



inline void _1a8dbec16_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>* _15834_dest, jule::Ptr<_1a8d3ee72_FnIns>* _15859_f) {
	jule::I32 _1599_size = (*((*(_15859_f))))._field_Generics.len();;
	if (((*((*((*(_15859_f))))._field_Decl))._field_Owner != nullptr)) {
		_1599_size+=(*(*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1599_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15859_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac31309b:;
		if (it != expr_end) {
			jule::I32 _16810_i = it - expr->begin();
			jule::Ptr<_1a8e81635_InsGeneric> _16817_g = *it;
			{
				jule::Ptr<_1a8780770_GenericDecl> _16913_decl = (*(*((*(_15859_f))))._field_Decl.alloc)._field_Generics[_16810_i];;
				{ jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1a8e82229_TypeAlias>(_1a8e82229_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_16913_decl.alloc)._field_Token, ._field_Ident=(*(_16913_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=(*(_16817_g))._field_Kind}), })); };
			}
			_iter_next_1ac31309b:;
			++it;
			_16810_i++;
			goto _iter_begin_1ac31309b;
		}
		_iter_end_1ac31309b:;
	};
	if (((*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1a8d29ba4_StructIns> _18113_owner = (*((*(_15859_f))))._field_Owner;;
		{
			auto expr = &((*_18113_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac3145a8:;
			if (it != expr_end) {
				jule::I32 _18214_i = it - expr->begin();
				jule::Ptr<_1a8e81635_InsGeneric> _18221_g = *it;
				{
					jule::Ptr<_1a8780770_GenericDecl> _18317_decl = (*((*(_18113_owner))._field_Decl))._field_Generics[_18214_i];;
					{ jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1a8e82229_TypeAlias>(_1a8e82229_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_18317_decl.alloc)._field_Token, ._field_Ident=(*(_18317_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=(*(_18221_g))._field_Kind}), })); };
				}
				_iter_next_1ac3145a8:;
				++it;
				_18214_i++;
				goto _iter_begin_1ac3145a8;
			}
			_iter_end_1ac3145a8:;
		};
	};
}



inline jule::Ptr<_1a8e4694c_SymbolTable> _1a8dc008a_findFile(jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>* _19618_files, jule::Ptr<_1a8763720_File>* _19642_handler) {
	{
		auto expr = _19618_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac31859b:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _19717_fl = *it;
			{
				if (((*(_19717_fl))._field_File == (*(_19642_handler)))) {
					return _19717_fl;;
				};
			}
			_iter_next_1ac31859b:;
			++it;
			goto _iter_begin_1ac31859b;
		}
		_iter_end_1ac31859b:;
	};
	return nullptr;;
}



inline void _1a8dc0541_pushSuggestion(_224743e15_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args) {
	(*(_20530_log))._field_Suggestion=_224744377_Logf(_20541_fmt, _20554_args);
}



inline void _1a8de2893_pushImplemented(jule::Ptr<_1a8d5034a_Trait> _288224_t, jule::Ptr<_1a8d26e26_Struct>* _288240_d) {
	_julec_label_1ac31a4e3:;
	{
		
		if (((*(_288224_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1ac31b36d:;
			{
				{
					auto expr = &((*_288224_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac31bcb9:;
					if (it != expr_end) {
						jule::Ptr<_1a8d26e26_Struct> _288616_s = *it;
						{
							if ((_288616_s == (*(_288240_d)))) {
								goto _match_end_1ac31a823;
							};
						}
						_iter_next_1ac31bcb9:;
						++it;
						goto _iter_begin_1ac31bcb9;
					}
					_iter_end_1ac31bcb9:;
				};
				goto _case_begin_1ac31a8bc;
			}
		}
		else {
			_case_begin_1ac31a8bc:;
			{
				(*(_288224_t))._field_Implemented=jule::append((*_288224_t.alloc)._field_Implemented,jule::Slice<jule::Ptr<_1a8d26e26_Struct>>::make({(*(_288240_d))}));
			}
		}
		_match_end_1ac31a823:;
	};
	{
		auto expr = &((*(_288224_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac31c13d:;
		if (it != expr_end) {
			jule::Ptr<_1a8e8a1dd_TypeSymbol> _289517_i = *it;
			{
				_1a8de2893_pushImplemented(_1a8e86e76_Trait((*(_289517_i))._field_Kind.ptr()), _288240_d);
			}
			_iter_next_1ac31c13d:;
			++it;
			goto _iter_begin_1ac31c13d;
		}
		_iter_end_1ac31c13d:;
	};
}



inline void _1a8de2b7e_pushImplements(jule::Ptr<_1a8d26e26_Struct>* _290024_s, jule::Ptr<_1a8d5034a_Trait> _290040_t) {
	_julec_label_1ac31d54b:;
	{
		
		if (((*((*(_290024_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1ac31e2d8:;
			{
				{
					auto expr = &((*((*(_290024_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac31ec34:;
					if (it != expr_end) {
						jule::Ptr<_1a8d5034a_Trait> _290416_b = *it;
						{
							if ((_290416_b == _290040_t)) {
								goto _match_end_1ac31d78d;
							};
						}
						_iter_next_1ac31ec34:;
						++it;
						goto _iter_begin_1ac31ec34;
					}
					_iter_end_1ac31ec34:;
				};
				goto _case_begin_1ac31d837;
			}
		}
		else {
			_case_begin_1ac31d837:;
			{
				{ jule::Slice<jule::Ptr<_1a8d5034a_Trait>> &__jule_push_dest = (*((*(_290024_s))))._field_Implements; __jule_push_dest.push(_290040_t); };
			}
		}
		_match_end_1ac31d78d:;
	};
	{
		auto expr = &((*(_290040_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3200a8:;
		if (it != expr_end) {
			jule::Ptr<_1a8e8a1dd_TypeSymbol> _291317_i = *it;
			{
				_1a8de2b7e_pushImplements(_290024_s, _1a8e86e76_Trait((*(_291317_i))._field_Kind.ptr()));
			}
			_iter_next_1ac3200a8:;
			++it;
			goto _iter_begin_1ac3200a8;
		}
		_iter_end_1ac3200a8:;
	};
}



inline jule::Bool _1a8e3252b_traitHasReferenceReceiver(jule::Ptr<_1a8d5034a_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2b2611:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> *_2912_f = it;
			{
				if ((*((*(_2912_f))))._field_Statically) {
					goto _iter_next_1ac2b2611;
				};
				jule::Ptr<_1a8d3a4bc_Param> _359_p = (*(*(_2912_f)).alloc)._field_Params[0LL];;
				if ((_1a8d3ad6e_IsRef(_359_p.ptr()) && _1a8d3aad8_IsSelf(_359_p))) {
					return true;;
				};
			}
			_iter_next_1ac2b2611:;
			++it;
			goto _iter_begin_1ac2b2611;
		}
		_iter_end_1ac2b2611:;
	};
	return false;;
}



inline jule::Bool _1a8e328d3_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1a8e4bcb5_Data>* _4333_d) {
	jule::Str _445_value = _20a292681_FmtFloat(_20a2ba214_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _20a2acd61_CheckBitFloat(_445_value, _20a2ab8ba_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1a8e32c57_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1a8e4bcb5_Data>* _4830_d) {
	jule::F64 _495_min = _20a2b3053_Min(_4818_kind);;
	jule::F64 _505_max = _20a2b32d9_Max(_4818_kind);;
	{
		
		if (_20a2bc05c_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1ac2b614d:;
			{
				jule::F64 _539_x = _20a2b9961_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _549_i;
				jule::F64 _5412_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _20a2683d2_Modf(_539_x);
					_549_i = __jule_assign_result.__jule_result_arg0;
					_5412_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5412_frac != 0LL)) {
					return false;;
				};
				return ((_549_i >= _495_min) && (_549_i <= _505_max));;
			}
		}
		else if (_20a2bb7a9_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1ac2b61b4:;
			{
				jule::F64 _609_x = _20a2ba214_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_609_x <= _505_max)) {
					return true;;
				};
			}
		}
		else if (_20a2bb523_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1ac2b623b:;
			{
				jule::F64 _659_x = _20a2ba214_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_495_min <= _659_x) && (_659_x <= _505_max));;
			}
		}
		_match_end_1ac2b603d:;
	};
	return false;;
}



inline jule::Bool _1a8e33120_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1a8e4bcb5_Data>* _7132_d) {
	jule::F64 _725_max = _20a2b32d9_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && _7120_kind.equal("u8", 2))) {
		return _1a8e15c6d_IsAscii(static_cast<jule::I32>(_20a2b8e27_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_20a2bc05c_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1ac2bbce1:;
			{
				jule::F64 _799_x = _20a2b9961_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_799_x < 0LL)) {
					return false;;
				};
				jule::F64 _839_i;
				jule::F64 _8312_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _20a2683d2_Modf(_799_x);
					_839_i = __jule_assign_result.__jule_result_arg0;
					_8312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8312_frac != 0LL)) {
					return false;;
				};
				return (_839_i <= _725_max);;
			}
		}
		else if (_20a2bb7a9_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1ac2bbd57:;
			{
				jule::F64 _899_x = _20a2ba214_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_899_x <= _725_max)) {
					return true;;
				};
			}
		}
		else if (_20a2bb523_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1ac2bbdbd:;
			{
				jule::F64 _949_x = _20a2ba214_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _949_x) && (_949_x <= _725_max));;
			}
		}
		_match_end_1ac2bb450:;
	};
	return false;;
}



inline jule::Bool _1a8e33494_intAssignable(jule::Str _10018_kind, jule::Ptr<_1a8e4bcb5_Data>* _10030_d) {
	{
		
		if (_20a2b630e_IsSigInt(_10018_kind)) {
			_case_begin_1ac2c1983:;
			{
				return _1a8e32c57_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_20a2b661c_IsUnsigInt(_10018_kind)) {
			_case_begin_1ac2c1a1b:;
			{
				return _1a8e33120_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1ac2c1499:;
			{
				return false;;
			}
		}
		_match_end_1ac2c13cd:;
	};
}



inline void _1a8e3e8ac_checkMutRiskOfStructLit(jule::Ptr<_1a8dc1344_Sema>* _92033_s, jule::Ptr<_1a8d2edeb_StructLitExprModel>* _92044_m) {
	{
		auto expr = &((*((*(_92044_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2c2a94:;
		if (it != expr_end) {
			jule::Ptr<_1a8d2ea55_StructArgExprModel> *_92112_arg = it;
			{
				if ((*((*((*((*(_92112_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1ac2c2a94;
				};
				if (((!((*((*(*(_92112_arg)).alloc)._field_Expr))._field_Mutable)) && _1a8e8489c_Mutable((*(*(*(_92112_arg)).alloc)._field_Expr.alloc)._field_Kind.ptr()))) {
					_1a8dc3e7e_pushErr((*(_92033_s)).ptr(), (*(*(_92112_arg)).alloc)._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(*(*(_92112_arg)).alloc)._field_Expr.alloc)._field_Kind), &__jule_any_type4)}));
				};
			}
			_iter_next_1ac2c2a94:;
			++it;
			goto _iter_begin_1ac2c2a94;
		}
		_iter_end_1ac2c2a94:;
	};
}



inline jule::Ptr<_1a8e8301b_TypeKind> _1a8e456e8_lenKind(void) {
	return _1a906682a_primInt;;
}



inline jule::Bool _1a8e45a4a_isGoodValueToInfer(jule::Ptr<_1a8e4bcb5_Data>* _142124_d) {
	return (!(_1a8e4c1a0_IsNil((*(_142124_d)).ptr())));;
}



inline jule::Ptr<_1a8772982_Directive> _1a8e7a4b9_findDirective(jule::Slice<jule::Ptr<_1a8772982_Directive>>* _425923_directives, jule::Str _425954_d) {
	{
		auto expr = _425923_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6c876e:;
		if (it != expr_end) {
			jule::Ptr<_1a8772982_Directive> _426017_dr = *it;
			{
				if (((*((*(_426017_dr))._field_Tag))._field_Kind == _425954_d)) {
					return _426017_dr;;
				};
			}
			_iter_next_1ac6c876e:;
			++it;
			goto _iter_begin_1ac6c876e;
		}
		_iter_end_1ac6c876e:;
	};
	return nullptr;;
}



inline jule::Any _1a8e7a882_findBuiltinsImport(jule::Str* _426824_ident, jule::Ptr<_1a8da0ea0_ImportInfo> _426836_imp) {
	return _1a9069e38_findPackageBuiltinDef(&((*(_426836_imp))._field_LinkPath), _426824_ident);;
}



inline void _1a8e7aab3_fitBitsize(jule::Ptr<_1a8e4bcb5_Data>* _427720_d) {
	jule::Ptr<_1a8e8aae5_Prim> _42789_prim = _1a8e8566c_Prim((*((*(_427720_d))))._field_Kind.ptr());;
	jule::I32 _42795_z = _20a2ab8ba_BitsizeOf(_1a8e8ae36_Str(_42789_prim.ptr()));;
	{
		
		if (_20a2bb523_IsI64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1ac6cb057:;
			{
				jule::I32 _42829_k = _20a2ad3e4_BitsizeOfInt(_20a2b8e27_ReadI64((*((*(_427720_d))))._field_Constant));;
				if (((_42829_k > _42795_z) || _20a2b661c_IsUnsigInt((*_42789_prim.alloc)._field_Kind))) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_20a2abc0b_IntFromBits(_42829_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1a9068b7e_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_20a2bb7a9_IsU64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1ac6cb0bd:;
			{
				jule::I32 _42889_k = _20a2ad6ad_BitsizeOfUint(_20a2b91ad_ReadU64((*((*(_427720_d))))._field_Constant));;
				if (((_42889_k > _42795_z) || _20a2b630e_IsSigInt((*_42789_prim.alloc)._field_Kind))) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_20a2abe92_UintFromBits(_42889_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1a9068b7e_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_20a2bc05c_IsF64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1ac6cb145:;
			{
				if ((_42795_z == 64LLU)) {
					return;;
				};
				jule::I32 _42989_k = _20a2ad12a_BitsizeOfFloat(_20a2b9961_ReadF64((*((*(_427720_d))))._field_Constant));;
				if ((_42989_k > _42795_z)) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_20a2ac25b_FloatFromBits(_42989_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1a9068b7e_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1ac6cae47:;
	};
}



inline void _1a8e7ade3_makeStructLitAlloc(jule::Ptr<_1a8e4bcb5_Data>* _430628_d, jule::Ptr<_1a8d2edeb_StructLitExprModel>* _430643_lit) {
	(*((*(_430628_d))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8e8e621_Sptr>(_1a8e8e621_Sptr{._field_Elem=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait((*((*(_430643_lit))))._field_Strct, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data21)});
	(*((*(_430628_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d301e8_AllocStructLitExprModel>(_1a8d301e8_AllocStructLitExprModel{._field_Lit=(*(_430643_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1a8de41ad_Var> _1a8e7b267_buildErrorVar(jule::Ptr<_1a8d7de17_Scope>* _431723_s, jule::Ptr<_1a877b5c3_FnCallExpr>* _431739_fc) {
	return jule::new_ptr<_1a8de41ad_Var>(_1a8de41ad_Var{._field_Scope=(*(_431723_s)), ._field_Token=(*((*(_431739_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1a9068b7e_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>()}), });;
}



inline jule::Any _1a8e7b5db_findBuiltinsSema(jule::Str* _433222_ident, jule::Ptr<_1a8dc1344_Sema> _433238_s) {
	{
		auto expr = &((*((*(_433238_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6d7838:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _433317_imp = *it;
			{
				if (((*(_433317_imp))._field_ImportAll || _1a8da3832_existIdent(_433317_imp, (*(_433222_ident))))) {
					jule::Any _433517_def = _1a8e7a882_findBuiltinsImport(_433222_ident, _433317_imp);;
					if ((_433517_def != nullptr)) {
						return _433517_def;;
					};
				};
			}
			_iter_next_1ac6d7838:;
			++it;
			goto _iter_begin_1ac6d7838;
		}
		_iter_end_1ac6d7838:;
	};
	jule::Str _43439_ppath = _1a8763dc4_Dir((*(*_433238_s.alloc)._field_file.alloc)._field_File.ptr());;
	if (_224695680_HasPrefix(_43439_ppath, _22480d573_PathStdlib)) {
		(_43439_ppath).mut_slice(_22480d573_PathStdlib.len());;
		_43439_ppath=(jule::Str::lit("std", 3) + _22469b026_Replace(_43439_ppath, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));
		return _1a9069e38_findPackageBuiltinDef(&(_43439_ppath), _433222_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1a8e7b8a5_isOkForShifting(jule::Ptr<_1a8e4bcb5_Data>* _435725_d) {
	if (_1a8e4c6bc_IsConst((*(_435725_d)).ptr())) {
		{
			
			if (_20a2bb523_IsI64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1ac6dac48:;
				{
					return (_20a2b8e27_ReadI64((*((*(_435725_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_20a2bb7a9_IsU64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1ac6dace2:;
				{
					return true;;
				}
			}
			else if (_20a2bc05c_IsF64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1ac6dad69:;
				{
					return (_20a2b9961_ReadF64((*((*(_435725_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1ac6dabb0:;
				{
					return false;;
				}
			}
			_match_end_1ac6daae4:;
		};
	};
	jule::Ptr<_1a8e8aae5_Prim> _43705_prim = _1a8e8566c_Prim((*((*(_435725_d))))._field_Kind.ptr());;
	return ((_43705_prim != nullptr) && _20a2b68d6_IsInt(_1a8e8ae36_Str(_43705_prim)));;
}



inline jule::Bool _1a8e7bc7e_isInstancedStruct(jule::Ptr<_1a8d29ba4_StructIns> _437422_s) {
	return ((*((*(_437422_s))._field_Decl))._field_Generics.len() == (*_437422_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1a8e7c07b_isPtrArithmeticCompatible(jule::Ptr<_1a8e4bcb5_Data>* _437835_l, jule::Ptr<_1a8e4bcb5_Data>* _437850_r) {
	jule::Ptr<_1a8e92dd8_Ptr> _43795_ptr = _1a8e85b89_Ptr((*((*(_437850_r))))._field_Kind.ptr());;
	if ((_43795_ptr != nullptr)) {
		return _1a8e83725_Equal((*(_1a8e85b89_Ptr((*((*(_437835_l))))._field_Kind)))._field_Elem, (*_43795_ptr.alloc)._field_Elem);;
	};
	if (_1a8e4c6bc_IsConst((*(_437850_r)).ptr())) {
		return _1a8e33494_intAssignable(jule::Str::lit("int", 3), _437850_r);;
	};
	_1a8e3397d_typeCompatibilityChecker _43869_tcc = _1a8e3397d_typeCompatibilityChecker{._field_dest=_1a906682a_primInt, ._field_src=(*((*(_437850_r))))._field_Kind, };;
	return _1a8e35144_check(&_43869_tcc);;
}



inline void _1a8e7c422_applyCastKindModel(jule::Ptr<_1a8e4bcb5_Data>* _439328_d, jule::Ptr<_1a8e8301b_TypeKind>* _439343_t, jule::Ptr<_1a875ce89_Token>* _439362_token) {
	(*((*(_439328_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d3077b_CastingExprModel>(_1a8d3077b_CastingExprModel{._field_Token=(*(_439362_token)), ._field_Expr=jule::new_ptr<_1a8e4bcb5_Data>((*((*(_439328_d))))), ._field_Kind=(*(_439343_t)), ._field_ExprKind=(*((*(_439328_d))))._field_Kind}), &__jule_any_type93);
}



inline void _1a8e7c7b8_applyCastKind(jule::Ptr<_1a8e4bcb5_Data>* _440223_d, jule::Ptr<_1a8e8301b_TypeKind>* _440238_t, jule::Ptr<_1a875ce89_Token>* _440257_token) {
	_1a8e7c422_applyCastKindModel(_440223_d, _440238_t, _440257_token);
	(*((*(_440223_d))))._field_Kind=(*(_440238_t));
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e7c9c7_buildVoidData(void) {
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065593_primVoid, });;
}



inline jule::Str _1a8e7cd4b_checkDataForIntegerIndexing(jule::Ptr<_1a8e4bcb5_Data>* _441337_d, jule::Ptr<_1a875ce89_Token>* _441352_token) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_441337_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1a8e8566c_Prim((*((*(_441337_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1ac6e5538:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_20a2b68d6_IsInt(_1a8e8ae36_Str(_1a8e8566c_Prim((*((*(_441337_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1ac6e559e:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1a8e4c6bc_IsConst((*(_441337_d)).ptr())) {
			_case_begin_1ac6e5615:;
			{
				if ((_20a2ba214_AsF64((*((*(_441337_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1a8e8566c_Prim((*((*(_441337_d))))._field_Kind.ptr()) == nullptr) || _1a8e4c6bc_IsConst((*(_441337_d)).ptr()) || (_20a2ab601_RealKindOf(_1a8e8ae36_Str(_1a8e8566c_Prim((*((*(_441337_d))))._field_Kind).ptr())) != _20a2ab601_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1ac6e567b:;
			{
				_1a8e7c7b8_applyCastKind(_441337_d, &(_1a906682a_primInt), _441352_token);
			}
		}
		_match_end_1ac6e547d:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1a8e7d1e2_applyCastModelByEnum(jule::Ptr<_1a8e4bcb5_Data>* _443830_d, jule::Ptr<_1a8d52a56_Enum> _443844_e, jule::Ptr<_1a875ce89_Token>* _443859_token) {
	if ((_443844_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _44425_p = _1a8e8566c_Prim((*((*(_443844_e))._field_Kind))._field_Kind.ptr());;
	if (_1a8e8e07c_IsStr(_44425_p.ptr())) {
		return;;
	};
	_1a8e7c422_applyCastKindModel(_443830_d, &((*(*(_443844_e))._field_Kind.alloc)._field_Kind), _443859_token);
}



inline void _1a8e7d4cd_castConstByType(jule::Str* _444921_t, jule::Ptr<_1a8e4bcb5_Data>* _444934_d) {
	{
		
		if (_20a2b630e_IsSigInt((*(_444921_t)))) {
			_case_begin_1ac7012e1:;
			{
				{
					auto _match_expr{ _20a2ab8ba_BitsizeOf(_20a2ab601_RealKindOf((*(_444921_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ac701da2:;
						{
							_20a2ba4bc_SetI64((*((*(_444934_d))))._field_Constant.ptr(), _20a2b9be7_AsI64((*((*(_444934_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ac701e29:;
						{
							_20a2ba4bc_SetI64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_20a2b9be7_AsI64((*((*(_444934_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1ac701e90:;
						{
							_20a2ba4bc_SetI64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_20a2b9be7_AsI64((*((*(_444934_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1ac702006:;
						{
							_20a2ba4bc_SetI64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_20a2b9be7_AsI64((*((*(_444934_d))))._field_Constant))));
						}
					}
					_match_end_1ac701a83:;
				};
			}
		}
		else if (_20a2b661c_IsUnsigInt((*(_444921_t)))) {
			_case_begin_1ac70138a:;
			{
				{
					auto _match_expr{ _20a2ab8ba_BitsizeOf(_20a2ab601_RealKindOf((*(_444921_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ac705ed8:;
						{
							_20a2ba775_SetU64((*((*(_444934_d))))._field_Constant.ptr(), _20a2b9e7d_AsU64((*((*(_444934_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ac706060:;
						{
							_20a2ba775_SetU64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_20a2b9e7d_AsU64((*((*(_444934_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1ac7060c6:;
						{
							_20a2ba775_SetU64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_20a2b9e7d_AsU64((*((*(_444934_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1ac70613c:;
						{
							_20a2ba775_SetU64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_20a2b9e7d_AsU64((*((*(_444934_d))))._field_Constant))));
						}
					}
					_match_end_1ac704ea4:;
				};
			}
		}
		else if (_20a2b6c27_IsFloat((*(_444921_t)))) {
			_case_begin_1ac701401:;
			{
				{
					auto _match_expr{ _20a2ab8ba_BitsizeOf(_20a2ab601_RealKindOf((*(_444921_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ac489e04:;
						{
							_20a2bb08e_SetF64((*((*(_444934_d))))._field_Constant.ptr(), _20a2ba214_AsF64((*((*(_444934_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ac5806e2:;
						{
							_20a2bb08e_SetF64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_20a2ba214_AsF64((*((*(_444934_d))))._field_Constant))));
						}
					}
					_match_end_1ac489cc2:;
				};
			}
		}
		_match_end_1ac70118c:;
	};
}



inline void _1a8e7d9ea_updateModelToGenericIns(jule::Any* _448333_m, jule::Ptr<_1a8d3ee72_FnIns>* _448352_f) {
	{
		auto &_match_expr{ (*(_448333_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac582b23:;
			{
				(*(_448333_m))=jule::Any((*(_448352_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac57e779:;
			{
				(*((*(_448333_m)).cast_ptr<_1a8d33c9b_StructSubIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_448352_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ac582bab:;
			{
				(*((*(_448333_m)).cast_ptr<_1a8d34142_StructStaticIdentExprModel>(&__jule_any_type96)))._field_Method=(*(_448352_f));
			}
		}
		_match_end_1ac582abd:;
	};
}



inline jule::Bool _1a8e7dc5e_pushSubIdentFromExpr(jule::Any _449429_expr, jule::Ptr<_1a8773e39_SubIdentTypeDecl>* _449450_t) {
	{
		auto &_match_expr{ _449429_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ac583e54:;
			{
				jule::Ptr<_1a87791b4_IdentExpr> _449713_e = _449429_expr.unsafe_cast_ptr<_1a87791b4_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a8773b70_IdentTypeDecl>> &__jule_push_dest = (*((*(_449450_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a8773b70_IdentTypeDecl>(_1a8773b70_IdentTypeDecl{._field_Token=(*(_449713_e))._field_Token, ._field_Ident=(*_449713_e.alloc)._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ac584a48:;
			{
				jule::Ptr<_1a877a9ac_SubIdentExpr> _450313_e = _449429_expr.unsafe_cast_ptr<_1a877a9ac_SubIdentExpr>();;
				if ((!(_1a8e7dc5e_pushSubIdentFromExpr((*((*(_450313_e))._field_Expr))._field_Kind, _449450_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1a8773b70_IdentTypeDecl>> &__jule_push_dest = (*((*(_449450_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a8773b70_IdentTypeDecl>(_1a8773b70_IdentTypeDecl{._field_Token=(*_450313_e.alloc)._field_Ident, ._field_Ident=(*((*_450313_e.alloc)._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1ac5845e7:;
			{
				return false;;
			}
		}
		_match_end_1ac584592:;
	};
	return true;;
}



inline jule::Str _1a8e7e028_constoa(jule::Ptr<_20a2b7552_Const>* _451713_c) {
	{
		
		if (_20a2bb523_IsI64((*(_451713_c)).ptr())) {
			_case_begin_1ac58796e:;
			{
				return _20a2a91c0_FmtInt(_20a2b8e27_ReadI64((*(_451713_c)).ptr()), 10LL);;
			}
		}
		else if (_20a2bb7a9_IsU64((*(_451713_c)).ptr())) {
			_case_begin_1ac5877d7:;
			{
				return _20a2a8d07_FmtUint(_20a2b91ad_ReadU64((*(_451713_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1ac584c79:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ac58819a:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a8e7e457_evalEnumStatic(jule::Ptr<_1a8d52a56_Enum>* _452824_enm, jule::Ptr<_1a8d51ed9_EnumItem>* _452841_item, jule::Ptr<_1a875ce89_Token>* _452863_token) {
	jule::Ptr<_1a8e4bcb5_Data> _45299_d = jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait((*(_452824_enm)), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data3)}), });;
	if (((*(_452841_item)) != nullptr)) {
		(*(_45299_d))._field_Constant=jule::new_ptr<_20a2b7552_Const>((*(*((*((*((*(_452841_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_45299_d.alloc)._field_Model=jule::Any((*_45299_d.alloc)._field_Constant, &__jule_any_type19);
		_1a8e7d1e2_applyCastModelByEnum(&(_45299_d), (*(_452824_enm)), _452863_token);
	};
	return _45299_d;;
}



inline jule::Ptr<_1a8d2edeb_StructLitExprModel> _1a8e7e721_isLitBased(jule::Any* _454520_m) {
	{
		auto &_match_expr{ (*(_454520_m)) };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ac858a20:;
			{
				return (*(_454520_m)).cast_ptr<_1a8d2edeb_StructLitExprModel>(&__jule_any_type95);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ac858a86:;
			{
				return (*((*(_454520_m)).cast_ptr<_1a8d301e8_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac858aec:;
			{
				jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _455213_ssi = (*(_454520_m)).cast_ptr<_1a8d33c9b_StructSubIdentExprModel>(&__jule_any_type98);;
				return _1a8e7e721_isLitBased(&((*((*(_455213_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ac858b63:;
			{
				jule::Ptr<_1a8d3077b_CastingExprModel> _455513_c = (*(_454520_m)).cast_ptr<_1a8d3077b_CastingExprModel>(&__jule_any_type93);;
				return _1a8e7e721_isLitBased(&((*((*(_455513_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1ac8585d0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac85857a:;
	};
}



inline void _1a8e7ea0c_makeImplicitDeref(jule::Ptr<_1a8e4bcb5_Data>* _456227_d, jule::Ptr<_1a875ce89_Token> _456241_baseToken) {
	jule::Ptr<_1a8d2e527_UnaryExprModel> _45639_unary = jule::new_ptr<_1a8d2e527_UnaryExprModel>(_1a8d2e527_UnaryExprModel{._field_Expr=jule::new_ptr<_1a8e4bcb5_Data>((*((*(_456227_d))))), ._field_Op=jule::new_ptr<_1a875ce89_Token>((*(_456241_baseToken)))});;
	(*((*(_45639_unary))._field_Op))._field_Id=static_cast<jule::U32>(62LLU);
	(*(*_45639_unary.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("*", 1);
	(*((*(_456227_d))))._field_Model=jule::Any(_45639_unary, &__jule_any_type110);
}



inline void _1ac73aeda_updateRefer(jule::Ptr<_1a8d43151_ReferenceStack> _457323_ref, jule::Ptr<_1a8d3ee72_FnIns>* _457346_old, jule::Ptr<_1a8d3ee72_FnIns>* _457359_new) {
	{
		auto expr = &((*_457323_ref.alloc)._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac73c8d2:;
		if (it != expr_end) {
			jule::I32 _45749_i = it - expr->begin();
			jule::Any _457412_sym = *it;
			{
				if ((__jule_any_type7_compare(_457412_sym, (*(_457346_old))))) {
					(*(_457323_ref))._field_buffer[_45749_i]=jule::Any((*(_457359_new)), &__jule_any_type7);
				};
			}
			_iter_next_1ac73c8d2:;
			++it;
			_45749_i++;
			goto _iter_begin_1ac73c8d2;
		}
		_iter_end_1ac73c8d2:;
	};
}



inline void _1a8e8018e_makeVariadic(jule::Ptr<_1a8e4bcb5_Data>* _458122_d, jule::Ptr<_1a8e8301b_TypeKind> _458136_elem) {
	(*((*(_458122_d))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_BindIdent=(*_458136_elem.alloc)._field_BindIdent, ._field_Generic=(*(_458136_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_458136_elem.alloc)._field_Kind});
}



inline jule::Bool _1a8e805bd_isVarCaptured(jule::Ptr<_1a8d863c5_scopeChecker> _459518_r, jule::Ptr<_1a8d863c5_scopeChecker> _459540_s, jule::Ptr<_1a8de41ad_Var> _459558_v) {
	if (((*(_459558_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_459540_s))._field_scope == (*_459558_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_459540_s.alloc)._field_parent == nullptr) || (_459540_s == _459518_r))) {
				goto _iter_end_1ac8601ca;
			};
			_459540_s=(*_459540_s.alloc)._field_parent;
		}
	_iter_next_1ac8601ca:;
	}
	_iter_end_1ac8601ca:;;
	return true;;
}



inline jule::Bool _1a8e9d773_kindUsesGenerics(jule::Ptr<_1a8e8301b_TypeKind>* _171626_k, jule::Slice<jule::Ptr<_1a8780770_GenericDecl>>* _171641_generics) {
	{
		auto expr = _171641_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accc4908:;
		if (it != expr_end) {
			jule::Ptr<_1a8780770_GenericDecl> *_171712_g = it;
			{
				if (static__1a8e9d344_exist(&((*((*(_171712_g))))._field_Ident), _171626_k)) {
					return true;;
				};
			}
			_iter_next_1accc4908:;
			++it;
			goto _iter_begin_1accc4908;
		}
		_iter_end_1accc4908:;
	};
	return false;;
}



inline jule::Bool _1a8e9db3b_hasDirective(jule::Slice<jule::Ptr<_1a8772982_Directive>>* _172622_directives, jule::Str _172653_tag) {
	{
		auto expr = _172622_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accc519a:;
		if (it != expr_end) {
			jule::Ptr<_1a8772982_Directive> _172717_dr = *it;
			{
				if (((*((*(_172717_dr))._field_Tag))._field_Kind == _172653_tag)) {
					return true;;
				};
			}
			_iter_next_1accc519a:;
			++it;
			goto _iter_begin_1accc519a;
		}
		_iter_end_1accc519a:;
	};
	return false;;
}



inline jule::Bool _1a8e9de05_canGetPtr(jule::Ptr<_1a8e4bcb5_Data>* _173519_d) {
	{
		
		if ((!((*((*(_173519_d))))._field_Lvalue)) || _1a8e4c6bc_IsConst((*(_173519_d)).ptr())) {
			_case_begin_1accc6ae7:;
			{
				return false;;
			}
		}
		else if ((_1a8e86959_Fn((*((*(_173519_d))))._field_Kind.ptr()) != nullptr) || (_1a8e85e20_Enum((*((*(_173519_d))))._field_Kind) != nullptr)) {
			_case_begin_1accc6b80:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1accc6a81:;
			{
				return true;;
			}
		}
		_match_end_1accc6058:;
	};
}



inline jule::Bool _1a8e9e246_isValidForSptrType(jule::Ptr<_1a8e8301b_TypeKind>* _174728_t) {
	jule::Ptr<_1a8d29ba4_StructIns> _17489_s = _1a8e86be0_Struct((*(_174728_t)).ptr());;
	if ((((_17489_s != nullptr) && ((*_17489_s.alloc)._field_Decl != nullptr)) && (*(*_17489_s.alloc)._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1a8e9e4cc_isValidForRef(jule::Ptr<_1a8e8301b_TypeKind>* _175623_t) {
	return (_1a8e86959_Fn((*(_175623_t)).ptr()) == nullptr);;
}



inline jule::Bool _1a8e9e796_isBuiltinStrConvertable(jule::Ptr<_1a8e8301b_TypeKind>* _175933_t) {
	return ((((!(_1a8e84380_Void((*(_175933_t)).ptr()))) && (_1a8e86959_Fn((*(_175933_t)).ptr()) == nullptr)) && (_1a8e87493_Tup((*(_175933_t)).ptr()) == nullptr)) && (!(_1a8e87729_comptime((*(_175933_t)).ptr()))));;
}



inline jule::Str _1a8e9ea60_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _176327_tokens) {
	if ((((*(_176327_tokens)).len() == 1LL) && ((*((*(_176327_tokens))[0LL]))._field_Id == static_cast<jule::U32>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I32 _17679_n = 0LL;;
	{
		auto expr = _176327_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acccc955:;
		if (it != expr_end) {
			jule::Ptr<_1a875ce89_Token> *_176812_token = it;
			{
				_17679_n+=(*((*(_176812_token))))._field_Kind.len();
				_17679_n+=2LL;
			}
			_iter_next_1acccc955:;
			++it;
			goto _iter_begin_1acccc955;
		}
		_iter_end_1acccc955:;
	};
	_2234c269a_StrBuilder _17729_s = static__2234c2ac9_New(_17679_n);;
	{
		auto expr = _176327_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accca656:;
		if (it != expr_end) {
			jule::I32 _17739_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> *_177312_token = it;
			{
				_2234c313a_WriteStr(&_17729_s, (*((*(_177312_token))))._field_Kind);
				if ((((*(_176327_tokens)).len() - _17739_i) > 1LL)) {
					_2234c313a_WriteStr(&_17729_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1accca656:;
			++it;
			_17739_i++;
			goto _iter_begin_1accca656;
		}
		_iter_end_1accca656:;
	};
	return _2234c3932_Str(&_17729_s);;
}



inline jule::Ptr<_1a8e8aae5_Prim> _1a8e9ee39_buildPrimType(jule::Str _178218_kind) {
	return jule::new_ptr<_1a8e8aae5_Prim>(_1a8e8aae5_Prim{._field_Kind=_178218_kind});;
}



inline void _1a8ea0522_applyImplicitCast(jule::Ptr<_1a8e8301b_TypeKind>* _181027_dest, jule::Ptr<_1a8e4bcb5_Data>* _181049_d, jule::Ptr<_1a875ce89_Token>* _181064_token) {
	if (_1a8e840e9_IsNil((*((*(_181049_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _18145_destPrim = _1a8e8566c_Prim((*(_181027_dest)).ptr());;
	if (((_18145_destPrim != nullptr) && _1a8e8e313_IsAny(_18145_destPrim))) {
		jule::Ptr<_1a8e8aae5_Prim> _18169_prim = _1a8e8566c_Prim((*((*(_181049_d))))._field_Kind);;
		if (((_18169_prim == nullptr) || (!(_1a8e8e313_IsAny(_18169_prim.ptr()))))) {
			_1a8e7c7b8_applyCastKind(_181049_d, _181027_dest, _181064_token);
		};
		return;;
	};
	jule::Ptr<_1a8d5034a_Trait> _18235_dt = _1a8e86e76_Trait((*(_181027_dest)).ptr());;
	if ((_18235_dt != nullptr)) {
		jule::Ptr<_1a8d5034a_Trait> _18259_bt = _1a8e86e76_Trait((*((*(_181049_d))))._field_Kind);;
		if (((_18259_bt == nullptr) || (_18259_bt != _18235_dt))) {
			_1a8e7c422_applyCastKindModel(_181049_d, _181027_dest, _181064_token);
			return;;
		};
	};
	if (((_1a8e861a6_TypeEnum((*(_181027_dest)).ptr()) != nullptr) && (_1a8e861a6_TypeEnum((*((*(_181049_d))))._field_Kind) == nullptr))) {
		_1a8e7c422_applyCastKindModel(_181049_d, _181027_dest, _181064_token);
		return;;
	};
}



inline jule::Bool _1a8ea07db_validTypeForXof(jule::Ptr<_1a8e8301b_TypeKind>* _183825_t) {
	return ((!(_1a8e84380_Void((*(_183825_t)).ptr()))) && (_1a8e86959_Fn((*(_183825_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1a8e4694c_SymbolTable__jule_tuple_s_224743e15_Log _1a8ea38ee_buildSymbols(jule::Ptr<_1a87715a7_Ast>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1a8d49113_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1a8e4694c_SymbolTable__jule_tuple_s_224743e15_Log __jule_func_result;
	jule::Ptr<_1a8d49113_symbolBuilder> _179_sb = jule::new_ptr<_1a8d49113_symbolBuilder>(_1a8d49113_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1a8d4e712_build(_179_sb);
	if (((*_179_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_179_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_179_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a8da3dc6_Package__jule_tuple_s_224743e15_Log _1a8ea3d72_analyzePackage(jule::Slice<jule::Ptr<_1a87715a7_Ast>>* _3024_files, jule::Trait* _3044_importer, jule::I32* _3065_flags) {
	__jule_tuple_x_1a8da3dc6_Package__jule_tuple_s_224743e15_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9149de:;
		if (it != expr_end) {
			jule::Ptr<_1a87715a7_Ast> _3317_f = *it;
			{
				jule::Ptr<_1a8e4694c_SymbolTable> _3413_table;
				jule::Slice<_224743e15_Log> _3424_errors;
				({
					__jule_tuple_x_1a8e4694c_SymbolTable__jule_tuple_s_224743e15_Log __jule_assign_result = _1a8ea38ee_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1a8e4694c_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1ab9149de:;
			++it;
			goto _iter_begin_1ab9149de;
		}
		_iter_end_1ab9149de:;
	};
	jule::Ptr<_1a8dc1344_Sema> _419_sema = jule::new_ptr<_1a8dc1344_Sema>(_1a8dc1344_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1a8dc073e_commonSemaMeta>()});;
	_1a8de0ad3_check(_419_sema, &(_329_tables));
	if (((*_419_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_419_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8da3dc6_Package> _509_pkg = jule::new_ptr<_1a8da3dc6_Package>(_1a8da3dc6_Package{._field_Files=(*_419_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a8da3dc6_Package__jule_tuple_s_224743e15_Log _1a8ea42a1_AnalyzePackage(jule::Slice<jule::Ptr<_1a87715a7_Ast>> _7423_files, jule::Trait _7442_importer, jule::I32 _7462_flags) {
	__jule_tuple_x_1a8da3dc6_Package__jule_tuple_s_224743e15_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a8ea3d72_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1a8d3ee72_FnIns> _1a9064b7a_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1ab91dc4b:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _2920_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a906a6db_builtinCallerOut), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1ab91dcb2:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _3220_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a906ab1a_builtinCallerOutln), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1ab91dd39:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _3520_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a906b049_builtinCallerNew), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1ab91ddb1:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _3820_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a906b478_builtinCallerPanic), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1ab91e059:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _4120_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a906bad8_builtinCallerMake), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1ab91e0c0:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _4420_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a906be07_builtinCallerAppend), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1ab91e147:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _4720_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a906c820_builtinCallerCopy), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1ab91e1be:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _5020_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a906deb4_builtinCallerLen), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1ab91e2e0:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _5320_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a906e767_builtinCallerCap), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1ab91e356:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _5620_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a9070180_builtinCallerDelete), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1ab91e3bc:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _5920_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a90705ae_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1ab91d795:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab91da4d:;
	};
}



inline jule::Ptr<_1a8e82229_TypeAlias> _1a9064e88_primTypeAlias(jule::Ptr<_1a8e8301b_TypeKind>* _6623_k) {
	return jule::new_ptr<_1a8e82229_TypeAlias>(_1a8e82229_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1a8de41ad_Var> _1a906883d_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1ab92665a:;
			{
				static jule::Ptr<_1a8de41ad_Var> _9720_v = jule::new_ptr<_1a8de41ad_Var>(_1a8de41ad_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(_1a8e8a1dd_TypeSymbol{._field_Kind=_1a9065296_primNil}), ._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Constant=static__20a2b87b7_NewNil()})}), });;
				return _9720_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1ab926704:;
			{
				static jule::Ptr<_1a8de41ad_Var> _11220_v = jule::new_ptr<_1a8de41ad_Var>(_1a8de41ad_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1a9068b7e_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Constant=static__20a2b8025_NewBool(true)})}), });;
				return _11220_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1ab92677b:;
			{
				static jule::Ptr<_1a8de41ad_Var> _12520_v = jule::new_ptr<_1a8de41ad_Var>(_1a8de41ad_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1a9068b7e_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1a8e4ce3c_Value>(_1a8e4ce3c_Value{._field_Data=jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Constant=static__20a2b8025_NewBool(false)})}), });;
				return _12520_v;;
			}
		}
		else {
			_case_begin_1ab925da7:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab920357:;
	};
}



inline jule::Ptr<_1a8e82229_TypeAlias> _1a9068b7e_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1ab92b53e:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _14520_t = _1a9064e88_primTypeAlias(&(_1a906584b_primAny));;
				return _14520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1ab92b6b5:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _14820_t = _1a9064e88_primTypeAlias(&(_1a9065b48_primStr));;
				return _14820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1ab92b72b:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _15120_t = _1a9064e88_primTypeAlias(&(_1a9065e01_primBool));;
				return _15120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ab92b7b4:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _15420_t = _1a9064e88_primTypeAlias(&(_1a90661a9_primUintptr));;
				return _15420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ab92b82a:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _15720_t = _1a9064e88_primTypeAlias(&(_1a9066462_primUint));;
				return _15720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ab92b891:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _16020_t = _1a9064e88_primTypeAlias(&(_1a906682a_primInt));;
				return _16020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ab92b907:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _16320_t = _1a9064e88_primTypeAlias(&(_1a9066a6c_primI8));;
				return _16320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab92b97e:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _16620_t = _1a9064e88_primTypeAlias(&(_1a9066d14_primI16));;
				return _16620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab92ba5b:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _16920_t = _1a9064e88_primTypeAlias(&(_1a9067375_primI64));;
				return _16920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab92bad3:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _17220_t = _1a9064e88_primTypeAlias(&(_1a90678d6_primU16));;
				return _17220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ab92bb5a:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _17520_t = _1a9064e88_primTypeAlias(&(_1a9067b8e_primU32));;
				return _17520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ab92bbd2:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _17820_t = _1a9064e88_primTypeAlias(&(_1a9068178_primU64));;
				return _17820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab92bc59:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _18120_t = _1a9064e88_primTypeAlias(&(_1a90683ba_primF32));;
				return _18120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab92bcd1:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _18420_t = _1a9064e88_primTypeAlias(&(_1a90685c9_primF64));;
				return _18420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ab92bd58:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _18720_t = _1a9064e88_primTypeAlias(&(_1a906762d_primU8));;
				return _18720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab92bdd0:;
			{
				static jule::Ptr<_1a8e82229_TypeAlias> _19020_t = _1a9064e88_primTypeAlias(&(_1a90670bc_primI32));;
				return _19020_t;;
			}
		}
		else {
			_case_begin_1ab926c98:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab926d75:;
	};
}



inline jule::Any _1a9068e15_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1a8de41ad_Var> _1989_v = _1a906883d_findBuiltinVar(_19720_ident);;
	if ((_1989_v != nullptr)) {
		return jule::Any(_1989_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _2029_f = _1a9064b7a_findBuiltinFunc(_19720_ident);;
	if ((_2029_f != nullptr)) {
		return jule::Any(_2029_f, &__jule_any_type7);;
	};
	jule::Ptr<_1a8e82229_TypeAlias> _2069_ta = _1a9068b7e_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_2069_ta != nullptr)) {
		return jule::Any(_2069_ta, &__jule_any_type65);;
	};
	return nullptr;;
}



inline jule::Any _1a90691ce_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1ab93669d:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _21620_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a9073d54_builtinCallerStdDebugOut), });;
				return jule::Any(_21620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1ab9369de:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _21920_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a9074283_builtinCallerStdDebugOutln), });;
				return jule::Any(_21920_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ab934d50:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab936527:;
	};
}



inline jule::Any _1a9069498_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1ab93800c:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _22920_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a9072759_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1ab938370:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _23220_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a9072b88_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1ab938095:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _23520_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a90730b7_builtinCallerStdMemFree), });;
				return jule::Any(_23520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ab93823d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9367be:;
	};
}



inline jule::Any _1a9069872_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1ab93a509:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _24520_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a90709dd_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1ab93a7d4:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _24820_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a907115e_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1ab93a84a:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _25120_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a907158d_builtinCallerStdComptimeLine), });;
				return jule::Any(_25120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1ab93a570:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _25420_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a90719bc_builtinCallerStdComptimeFile), });;
				return jule::Any(_25420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1ab93a5e7:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _25720_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a9071deb_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1ab93a916:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _26020_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a907232a_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ab93a6b3:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab93876b:;
	};
}



inline jule::Any _1a9069ab4_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1ab93abad:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _27020_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a90734e6_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1ab93ebc3:;
			{
				static jule::Ptr<_1a8d3ee72_FnIns> _27320_f = jule::new_ptr<_1a8d3ee72_FnIns>(_1a8d3ee72_FnIns{._field_Decl=jule::new_ptr<_1a8d3be91_Fn>(_1a8d3be91_Fn{._field_Generics=jule::Slice<jule::Ptr<_1a8780770_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1a8e4bcb5_Data>,jule::Ptr<_1a8e4d9dc_Eval>*,jule::Ptr<_1a877b5c3_FnCallExpr>*,jule::Ptr<_1a8e4bcb5_Data>*>(_1a9073925_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27320_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ab93eaa2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab93e9b4:;
	};
}



inline jule::Any _1a9069e38_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident) {
	{
		auto &_match_expr{ (*(_28527_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1ab941cb3:;
			{
				return _1a9069872_findBuiltinDefStdComptime(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1ab941d29:;
			{
				return _1a90691ce_findBuiltinDefStdDebug(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1ab941d90:;
			{
				return _1a9069498_findBuiltinDefStdMem(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1ab941e06:;
			{
				return _1a9069ab4_findBuiltinDefStdJuleIntegrated(_28543_ident);;
			}
		}
		else {
			_case_begin_1ab93ee26:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab941961:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906a2ac_builtinCallerError(jule::Ptr<_1a8e4d9dc_Eval>* _30028_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _30043_fc) {
	if (((*((*(_30043_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_30028_e)).ptr(), (*((*(_30043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_30043_fc))))._field_Args.len() > 1LL)) {
		_1a8e4e03c_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _3089_expr = _1a8e6bc4c_evalExpr((*(_30028_e)), (*((*(_30043_fc))))._field_Args[0LL]);;
	if ((_3089_expr == nullptr)) {
		return nullptr;;
	};
	if (_1a8e4c1a0_IsNil(_3089_expr.ptr())) {
		_1a8e4e03c_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a8e4bcb5_Data> _3179_d = _1a8e7c9c7_buildVoidData();;
	(*(_3179_d))._field_Model=jule::Any(jule::new_ptr<_1a8d3792b_BuiltinErrorCallExprModel>(_1a8d3792b_BuiltinErrorCallExprModel{._field_Err=_3089_expr}), &__jule_any_type22);
	return _3179_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906a6db_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _32226_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _32241_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	if (((*((*(_32241_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_32226_e)).ptr(), (*((*(_32241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_32241_fc))))._field_Args.len() > 1LL)) {
		_1a8e4e03c_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _3319_expr = _1a8e6bc4c_evalExpr((*(_32226_e)), (*((*(_32241_fc))))._field_Args[0LL]);;
	if ((_3319_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a8e9e796_isBuiltinStrConvertable(&((*(_3319_expr))._field_Kind))))) {
		_1a8e4e03c_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8e4bcb5_Data> _3419_d = _1a8e7c9c7_buildVoidData();;
	(*(_3419_d))._field_Model=jule::Any(jule::new_ptr<_1a8d34be2_BuiltinOutCallExprModel>(_1a8d34be2_BuiltinOutCallExprModel{._field_Expr=(*(_3319_expr))._field_Model, }), &__jule_any_type26);
	return _3419_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906ab1a_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _34628_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _34643_fc, jule::Ptr<_1a8e4bcb5_Data>* _34665_d) {
	(*(_34665_d))=_1a906a6db_builtinCallerOut(nullptr, _34628_e, _34643_fc, _34665_d);
	if (((*(_34665_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_34665_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d350bb_BuiltinOutlnCallExprModel>(_1a8d350bb_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_34665_d))))._field_Model.cast_ptr<_1a8d34be2_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Expr, }), &__jule_any_type27);
	return (*(_34665_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906b049_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _35826_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _35841_fc, jule::Ptr<_1a8e4bcb5_Data>* _35863_d) {
	if (((*((*(_35841_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_35826_e)).ptr(), (*((*(_35841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35841_fc))))._field_Args.len() > 2LL)) {
		_1a8e4e03c_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _3679_t = _1a8e6ae38_evalExprKind((*(_35826_e)), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3679_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3679_t))._field_Decl))) {
		_1a8e4e03c_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1a8e9e246_isValidForSptrType(&((*(_3679_t))._field_Kind))))) {
		jule::Ptr<_1a8d29ba4_StructIns> _37813_s = _1a8e86be0_Struct((*(_3679_t))._field_Kind.ptr());;
		if ((((_37813_s != nullptr) && ((*_37813_s.alloc)._field_Decl != nullptr)) && (*(*_37813_s.alloc)._field_Decl.alloc)._field_Binded)) {
			_1a8e4e03c_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_35863_d))))._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8e8e621_Sptr>(_1a8e8e621_Sptr{._field_Elem=(*(_3679_t))._field_Kind}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data21)});
	if (((*((*(_35841_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a8e8301b_TypeKind> _39213_old = (*((*(_35826_e))))._field_prefix;;
		(*((*(_35826_e))))._field_prefix=(*(_3679_t))._field_Kind;
		jule::Ptr<_1a8e4bcb5_Data> _39513_init = _1a8e6bc4c_evalExpr((*(_35826_e)), (*((*(_35841_fc))))._field_Args[1LL]);;
		(*((*(_35826_e))))._field_prefix=_39213_old;
		if ((_39513_init != nullptr)) {
			jule::Ptr<_1a875ce89_Token> _40017_token = (*((*((*(_35841_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1a8dd0d26_checkValidityForInitExpr((*((*(_35826_e))))._field_s, (!((*((*(_35826_e))))._field_immutable)), false, &((*(_3679_t))._field_Kind), &(_39513_init), &(_40017_token));
			_1a8dcb98c_checkAssignType((*((*(_35826_e))))._field_s, false, &((*(_3679_t))._field_Kind), &(_39513_init), _40017_token);
			(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d35495_BuiltinNewCallExprModel>(_1a8d35495_BuiltinNewCallExprModel{._field_Kind=(*(_3679_t))._field_Kind, ._field_Init=(*_39513_init.alloc)._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d35495_BuiltinNewCallExprModel>(_1a8d35495_BuiltinNewCallExprModel{._field_Kind=(*(_3679_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_35863_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906b478_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _42028_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _42043_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	if (((*((*(_42043_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_42043_fc))))._field_Args.len() > 1LL)) {
		_1a8e4e03c_pushErr((*(_42028_e)).ptr(), (*((*((*(_42043_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _4299_expr = _1a8e6bc4c_evalExpr((*(_42028_e)), (*((*(_42043_fc))))._field_Args[0LL]);;
	if ((_4299_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a8e8566c_Prim((*(_4299_expr))._field_Kind.ptr()) == nullptr) || (!(_1a8e8e07c_IsStr(_1a8e8566c_Prim((*(_4299_expr))._field_Kind).ptr()))))) {
		_1a8e4e03c_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a8e4bcb5_Data> _4389_d = _1a8e7c9c7_buildVoidData();;
	(*(_4389_d))._field_Model=jule::Any(jule::new_ptr<_1a8d3586e_BuiltinPanicCallExprModel>(_1a8d3586e_BuiltinPanicCallExprModel{._field_Token=(*((*(_42043_fc))))._field_Token, ._field_Expr=(*(_4299_expr))._field_Model}), &__jule_any_type28);
	return _4389_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906bad8_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _44627_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _44642_fc, jule::Ptr<_1a8e4bcb5_Data>* _44664_d) {
	if (((*((*(_44642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44642_fc))))._field_Args.len() == 1LL)) {
			_1a8e4e03c_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a8e4e03c_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_44642_fc))))._field_Args.len() > 3LL)) {
		_1a8e4e03c_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8e4bcb5_Data> _4599_t = _1a8e6ae38_evalExprKind((*(_44627_e)), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4599_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4599_t))._field_Decl))) {
		_1a8e4e03c_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1a8e866c3_Slc((*(_4599_t))._field_Kind.ptr()) == nullptr)) {
		_1a8e4e03c_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_4599_t))._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_44664_d))))._field_Kind=(*(_4599_t))._field_Kind;
	jule::Ptr<_1a8e4bcb5_Data> _4749_lenExpr = _1a8e6bc4c_evalExpr(_1a8dcb0da_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4599_t))._field_Kind), (*((*(_44642_fc))))._field_Args[1LL]);;
	if ((_4749_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1a8e57c27_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4749_lenExpr), (*((*((*(_44642_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1a8d362cb_BuiltinMakeCallExprModel> _4819_model = jule::new_ptr<_1a8d362cb_BuiltinMakeCallExprModel>(_1a8d362cb_BuiltinMakeCallExprModel{._field_Kind=(*(_4599_t))._field_Kind, ._field_Len=(*(_4749_lenExpr))._field_Model, });;
	(*((*(_44664_d))))._field_Model=jule::Any(_4819_model, &__jule_any_type114);
	if (((*((*(_44642_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1a8e4bcb5_Data> _48713_capExpr = _1a8e6bc4c_evalExpr(_1a8dcb0da_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4599_t))._field_Kind), (*((*(_44642_fc))))._field_Args[2LL]);;
		if ((_48713_capExpr == nullptr)) {
			return (*(_44664_d));;
		};
		_1a8e57c27_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_48713_capExpr), (*((*((*(_44642_fc))))._field_Args[2LL]))._field_Token);
		(*(_4819_model))._field_Cap=(*(_48713_capExpr))._field_Model;
	};
	return (*(_44664_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906be07_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _49729_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _49744_fc, jule::Ptr<_1a8e4bcb5_Data>* _49766_d) {
	if (((*((*(_49744_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49744_fc))))._field_Args.len() == 1LL)) {
			_1a8e4e03c_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("values", 6), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a8e4e03c_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8e4bcb5_Data> _5079_t = _1a8e6bc4c_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[0LL]);;
	if ((_5079_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8e900e4_Slc> _5129_s = _1a8e866c3_Slc((*(_5079_t))._field_Kind.ptr());;
	if ((_5129_s == nullptr)) {
		_1a8e4e03c_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8e8301b_TypeKind> _5189_prefix = (*((*(_49729_e))))._field_prefix;;
	(*((*(_49729_e))))._field_prefix=(*(_5079_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_49729_e))))._field_prefix=_5189_prefix;
	});;
	;
	;
	(*(_49766_d))=jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=(*(_5079_t))._field_Kind, ._field_Mutable=true, });
	{
		auto &_match_expr{ (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ab979d51:;
			{
				if (((*((*(_49744_fc))))._field_Args.len() > 2LL)) {
					_1a8e4e03c_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a8e4bcb5_Data> _53513_e1 = _1a8e6bc4c_evalExpr((*(_49729_e)), (*((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind.unsafe_cast_ptr<_1a8779d30_VariadicExpr>()))._field_Expr);;
				if ((_53513_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1a8e8566c_Prim((*(_5129_s))._field_Elem.ptr()) != nullptr) && _1a8e8c4dc_IsU8(_1a8e8566c_Prim((*(_5129_s))._field_Elem).ptr()))) {
					if (((_1a8e8566c_Prim((*(_53513_e1))._field_Kind) != nullptr) && _1a8e8e07c_IsStr(_1a8e8566c_Prim((*(_53513_e1))._field_Kind).ptr()))) {
						_1a8e8018e_makeVariadic(&(_53513_e1), _1a906762d_primU8);
						(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d366a5_BuiltinAppendCallExprModel>(_1a8d366a5_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=(*(_53513_e1))._field_Model}), &__jule_any_type25);
						return (*(_49766_d));;
					};
				};
				if ((!(_1a8e853d6_Variadicable((*(_53513_e1))._field_Kind)))) {
					_1a8e4e03c_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_53513_e1))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				_1a8e8018e_makeVariadic(&(_53513_e1), (*(_5129_s))._field_Elem);
				if (_1a8dd0d26_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5129_s))._field_Elem), &(_53513_e1), &((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token))) {
					_1a8dcb98c_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5129_s))._field_Elem), &(_53513_e1), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token);
				};
				(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d366a5_BuiltinAppendCallExprModel>(_1a8d366a5_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=(*(_53513_e1))._field_Model}), &__jule_any_type25);
				return (*(_49766_d));;
			}
		}
		_match_end_1ab979ca7:;
	};
	jule::Ptr<_1a8e4bcb5_Data> _5699_e1 = _1a8e6bc4c_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[1LL]);;
	if ((_5699_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8d31507_SliceExprModel> _5749_slice = jule::new_ptr<_1a8d31507_SliceExprModel>(_1a8d31507_SliceExprModel{._field_ElemKind=(*(_5129_s))._field_Elem, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49744_fc))))._field_Args.len() - 1LL), jule::Any(nullptr))});;
	{
		auto expr = (*((*(_49744_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1acddb954:;
		if (it != expr_end) {
			jule::Ptr<_1a8777899_Expr> _57817_arg = *it;
			{
				_5699_e1=_1a8e6bc4c_evalExpr((*(_49729_e)), _57817_arg);
				if ((_5699_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5699_e1))._field_Kind.alloc)._field_Variadic) {
					_1a8e4e03c_pushErr((*(_49729_e)).ptr(), (*(_57817_arg))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				if (_1a8dd0d26_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5129_s))._field_Elem), &(_5699_e1), &((*_57817_arg.alloc)._field_Token))) {
					_1a8dcb98c_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5129_s))._field_Elem), &(_5699_e1), (*_57817_arg.alloc)._field_Token);
				};
				(*(_5749_slice))._field_Elems=jule::append((*_5749_slice.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_5699_e1))._field_Model}));
			}
			_iter_next_1acddb954:;
			++it;
			goto _iter_begin_1acddb954;
		}
		_iter_end_1acddb954:;
	};
	(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d366a5_BuiltinAppendCallExprModel>(_1a8d366a5_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=jule::Any(_5749_slice, &__jule_any_type76)}), &__jule_any_type25);
	return (*(_49766_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906c3e1_callerCopySlice(jule::Ptr<_1a8e4bcb5_Data>* _60025_dest, jule::Ptr<_1a8e4d9dc_Eval>* _60043_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _60058_fc, jule::Ptr<_1a8e4bcb5_Data>* _60080_d) {
	if ((!((*((*(_60025_dest))))._field_Mutable))) {
		_1a8e4e03c_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a8e4bcb5_Data> _6059_src = _1a8e6bc4c_evalExpr((*(_60043_e)), (*((*(_60058_fc))))._field_Args[1LL]);;
	if ((_6059_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8e900e4_Slc> _6099_slc = _1a8e866c3_Slc((*(_6059_src))._field_Kind.ptr());;
	if ((_6099_slc != nullptr)) {
		if (((!((*(_6059_src))._field_Mutable)) && _1a8e8489c_Mutable((*_6099_slc.alloc)._field_Elem.ptr()))) {
			_1a8e4e03c_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1a8e83725_Equal((*((*(_60025_dest))))._field_Kind, (*(_6059_src))._field_Kind)))) {
			_1a8e4e03c_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_60025_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(_6059_src))._field_Kind), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1a8e8aae5_Prim> _6199_destPrim = _1a8e8566c_Prim((*(_1a8e866c3_Slc((*((*(_60025_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1a8e8aae5_Prim> _6209_prim = _1a8e8566c_Prim((*(_6059_src))._field_Kind);;
		if (((((_6199_destPrim == nullptr) || (_6209_prim == nullptr)) || (!(_1a8e8e07c_IsStr(_6209_prim.ptr())))) || (!(_1a8e8c4dc_IsU8(_6199_destPrim.ptr()))))) {
			_1a8e4e03c_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*((*(_60025_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(_6059_src))._field_Kind), &__jule_any_type4)}));
		};
	};
	(*((*(_60080_d))))._field_Kind=_1a8e456e8_lenKind();
	(*((*(_60080_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d37552_BuiltinCopyCallExprModel>(_1a8d37552_BuiltinCopyCallExprModel{._field_Dest=(*(_60025_dest)), ._field_Src=_6059_src}), &__jule_any_type30);
	return (*(_60080_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906c820_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _63427_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _63442_fc, jule::Ptr<_1a8e4bcb5_Data>* _63464_d) {
	if (((*((*(_63442_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_63442_fc))))._field_Args.len() == 1LL)) {
			_1a8e4e03c_pushErr((*(_63427_e)).ptr(), (*((*(_63442_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a8e4e03c_pushErr((*(_63427_e)).ptr(), (*((*(_63442_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_63442_fc))))._field_Args.len() > 2LL)) {
		_1a8e4e03c_pushErr((*(_63427_e)).ptr(), (*((*((*(_63442_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _6479_dest = _1a8e6bc4c_evalExpr((*(_63427_e)), (*((*(_63442_fc))))._field_Args[0LL]);;
	{
		
		if ((_6479_dest == nullptr)) {
			_case_begin_1ace0222d:;
			{
				return nullptr;;
			}
		}
		else if ((_1a8e866c3_Slc((*(_6479_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace02294:;
			{
				return _1a906c3e1_callerCopySlice(&(_6479_dest), _63427_e, _63442_fc, _63464_d);;
			}
		}
		else {
			_case_begin_1ace011d8:;
			{
				_1a8e4e03c_pushErr((*(_63427_e)).ptr(), (*((*((*(_63442_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1acdee67b:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906cb94_callerLenSlice(jule::Ptr<_1a8e4bcb5_Data>* _65924_expr, jule::Ptr<_1a8e4bcb5_Data>* _65942_d) {
	(*((*(_65942_d))))._field_Kind=_1a8e456e8_lenKind();
	(*((*(_65942_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d369a2_BuiltinLenCallExprModel>(_1a8d369a2_BuiltinLenCallExprModel{._field_Expr=(*(_65924_expr))}), &__jule_any_type115);
	return (*(_65942_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906d018_callerLenMap(jule::Ptr<_1a8e4bcb5_Data>* _66722_expr, jule::Ptr<_1a8e4bcb5_Data>* _66740_d) {
	(*((*(_66740_d))))._field_Kind=_1a8e456e8_lenKind();
	(*((*(_66740_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d369a2_BuiltinLenCallExprModel>(_1a8d369a2_BuiltinLenCallExprModel{._field_Expr=(*(_66722_expr))}), &__jule_any_type115);
	return (*(_66740_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906d38c_callerLenArr(jule::Ptr<_1a8e4bcb5_Data>* _67522_expr, jule::Ptr<_1a8e4bcb5_Data>* _67540_d) {
	(*((*(_67540_d))))._field_Kind=_1a8e456e8_lenKind();
	(*((*(_67540_d))))._field_Constant=static__20a2b7992_NewI64(static_cast<jule::I64>((*(_1a8e8643c_Arr((*((*(_67522_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_67540_d))))._field_Model=jule::Any((*((*(_67540_d))))._field_Constant, &__jule_any_type19);
	return (*(_67540_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906d711_callerLenStr(jule::Ptr<_1a8e4bcb5_Data>* _68222_expr, jule::Ptr<_1a8e4bcb5_Data>* _68240_d) {
	(*((*(_68240_d))))._field_Kind=_1a8e456e8_lenKind();
	if (_1a8e4c6bc_IsConst((*(_68222_expr)).ptr())) {
		(*((*(_68240_d))))._field_Constant=static__20a2b7992_NewI64(static_cast<jule::I64>(_20a2b96ca_ReadStr((*((*(_68222_expr))))._field_Constant.ptr()).len()));
		(*((*(_68240_d))))._field_Model=jule::Any((*((*(_68240_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_68240_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d369a2_BuiltinLenCallExprModel>(_1a8d369a2_BuiltinLenCallExprModel{._field_Expr=(*(_68222_expr))}), &__jule_any_type115);
	};
	return (*(_68240_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906da85_callerLenComptime(jule::Ptr<_1a8e4bcb5_Data>* _69527_d, jule::I32 _69537_n) {
	(*((*(_69527_d))))._field_Kind=_1a8e456e8_lenKind();
	(*((*(_69527_d))))._field_Constant=static__20a2b7992_NewI64(static_cast<jule::I64>(_69537_n));
	(*((*(_69527_d))))._field_Model=jule::Any((*((*(_69527_d))))._field_Constant, &__jule_any_type19);
	return (*(_69527_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906deb4_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _70226_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _70241_fc, jule::Ptr<_1a8e4bcb5_Data>* _70263_d) {
	if (((*((*(_70241_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_70226_e)).ptr(), (*((*(_70241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_70241_fc))))._field_Args.len() > 1LL)) {
		_1a8e4e03c_pushErr((*(_70226_e)).ptr(), (*((*((*(_70241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _7109_dest = _1a8e6b90b_evalExpr1((*(_70226_e)), (*((*(_70241_fc))))._field_Args[0LL]);;
	{
		
		if ((_7109_dest == nullptr)) {
			_case_begin_1ace0e67a:;
			{
				return nullptr;;
			}
		}
		else if ((_1a8e866c3_Slc((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace0d5be:;
			{
				return _1a906cb94_callerLenSlice(&(_7109_dest), _70263_d);;
			}
		}
		else if ((_1a8e8643c_Arr((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace0d635:;
			{
				return _1a906d38c_callerLenArr(&(_7109_dest), _70263_d);;
			}
		}
		else if ((_1a8e8720c_Map((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace0d69b:;
			{
				return _1a906d018_callerLenMap(&(_7109_dest), _70263_d);;
			}
		}
		else if (((_1a8e8566c_Prim((*(_7109_dest))._field_Kind.ptr()) != nullptr) && _1a8e8e07c_IsStr(_1a8e8566c_Prim((*_7109_dest.alloc)._field_Kind).ptr()))) {
			_case_begin_1ace0d712:;
			{
				return _1a906d711_callerLenStr(&(_7109_dest), _70263_d);;
			}
		}
		else if ((_1a8e879b0_comptimeStructFields((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace0d778:;
			{
				return _1a906da85_callerLenComptime(_70263_d, (*(_1a8e879b0_comptimeStructFields((*_7109_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a8e87ecc_comptimeEnumFields((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace0d7de:;
			{
				return _1a906da85_callerLenComptime(_70263_d, (*(_1a8e87ecc_comptimeEnumFields((*_7109_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a8e88c9c_comptimeTypeInfos((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace0e779:;
			{
				return _1a906da85_callerLenComptime(_70263_d, (*(_1a8e88c9c_comptimeTypeInfos((*_7109_dest.alloc)._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1a8e884e9_comptimeParams((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace0e7e0:;
			{
				return _1a906da85_callerLenComptime(_70263_d, (*(_1a8e884e9_comptimeParams((*_7109_dest.alloc)._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1a8e892b9_comptimeStatics((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace0e856:;
			{
				return _1a906da85_callerLenComptime(_70263_d, (*(_1a8e892b9_comptimeStatics((*_7109_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a8e89d03_comptimeFiles((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace0e8bc:;
			{
				return _1a906da85_callerLenComptime(_70263_d, (*(_1a8e89d03_comptimeFiles((*_7109_dest.alloc)._field_Kind)))._field_files.len());;
			}
		}
		else {
			_case_begin_1ace0d558:;
			{
				_1a8e4e03c_pushErr((*(_70226_e)).ptr(), (*((*((*(_70241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ace0b9eb:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906e338_callerCapSlice(jule::Ptr<_1a8e4bcb5_Data>* _74024_expr, jule::Ptr<_1a8e4bcb5_Data>* _74042_d) {
	(*((*(_74042_d))))._field_Kind=_1a8e456e8_lenKind();
	(*((*(_74042_d))))._field_Model=jule::Any(jule::new_ptr<_1a8d36c9e_BuiltinCapCallExprModel>(_1a8d36c9e_BuiltinCapCallExprModel{._field_Expr=(*(_74024_expr))}), &__jule_any_type116);
	return (*(_74042_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906e767_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _74826_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _74841_fc, jule::Ptr<_1a8e4bcb5_Data>* _74863_d) {
	if (((*((*(_74841_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_74826_e)).ptr(), (*((*(_74841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_74841_fc))))._field_Args.len() > 1LL)) {
		_1a8e4e03c_pushErr((*(_74826_e)).ptr(), (*((*((*(_74841_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _7569_dest = _1a8e6bc4c_evalExpr((*(_74826_e)), (*((*(_74841_fc))))._field_Args[0LL]);;
	{
		
		if ((_7569_dest == nullptr)) {
			_case_begin_1ace1e239:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7569_dest))._field_Decl) {
			_case_begin_1ace1e2a0:;
			{
				_1a8e4e03c_pushErr((*(_74826_e)).ptr(), (*((*((*(_74841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a8e866c3_Slc((*(_7569_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace1e316:;
			{
				return _1a906e338_callerCapSlice(&(_7569_dest), _74863_d);;
			}
		}
		else {
			_case_begin_1ace1d1e4:;
			{
				_1a8e4e03c_pushErr((*(_74826_e)).ptr(), (*((*((*(_74841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ace1b687:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a906ec51_callerDeleteMap(jule::Ptr<_1a8e4d9dc_Eval>* _77125_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _77140_fc, jule::Ptr<_1a8e4bcb5_Data>* _77162_expr, jule::Ptr<_1a8e4bcb5_Data>* _77180_d) {
	if ((!((*((*(_77162_expr))))._field_Mutable))) {
		_1a8e4e03c_pushErr((*(_77125_e)).ptr(), (*((*((*(_77140_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_77180_d))=_1a8e7c9c7_buildVoidData();
	jule::Ptr<_1a8d37178_BuiltinDeleteCallExprModel> _7769_model = jule::new_ptr<_1a8d37178_BuiltinDeleteCallExprModel>(_1a8d37178_BuiltinDeleteCallExprModel{._field_Dest=(*(_77162_expr)), });;
	if (((*((*(_77140_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a8e4bcb5_Data> _78013_key = _1a8e6bc4c_evalExpr((*(_77125_e)), (*((*(_77140_fc))))._field_Args[1LL]);;
		{
			
			if ((_78013_key == nullptr)) {
				_case_begin_1ace25075:;
				{
					return nullptr;;
				}
			}
			else if ((*(_78013_key))._field_Decl) {
				_case_begin_1ace23bbc:;
				{
					_1a8e4e03c_pushErr((*(_77125_e)).ptr(), (*((*((*(_77140_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1ace23b56:;
				{
					;
					jule::Ptr<_1a8e8301b_TypeKind> _78917_keyType = (*(_1a8e8720c_Map((*((*(_77162_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1a8dcb98c_checkAssignType((*((*(_77125_e))))._field_s, false, &(_78917_keyType), &(_78013_key), (*((*((*(_77140_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1ace23ae0:;
		};
		(*(_7769_model))._field_Key=_78013_key;
	};
	(*((*(_77180_d))))._field_Model=jule::Any(_7769_model, &__jule_any_type31);
	return (*(_77180_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a9070180_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _80029_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _80044_fc, jule::Ptr<_1a8e4bcb5_Data>* _80066_d) {
	if (((*((*(_80044_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_80029_e)).ptr(), (*((*(_80044_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80044_fc))))._field_Args.len() > 2LL)) {
		_1a8e4e03c_pushErr((*(_80029_e)).ptr(), (*((*((*(_80044_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _8089_dest = _1a8e6bc4c_evalExpr((*(_80029_e)), (*((*(_80044_fc))))._field_Args[0LL]);;
	{
		
		if ((_8089_dest == nullptr)) {
			_case_begin_1ace2bcc4:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8089_dest))._field_Decl) {
			_case_begin_1ace2bd3a:;
			{
				_1a8e4e03c_pushErr((*(_80029_e)).ptr(), (*((*((*(_80044_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a8e8720c_Map((*(_8089_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace2bda1:;
			{
				return _1a906ec51_callerDeleteMap(_80029_e, _80044_fc, &(_8089_dest), _80066_d);;
			}
		}
		else {
			_case_begin_1ace2ac7e:;
			{
				_1a8e4e03c_pushErr((*(_80029_e)).ptr(), (*((*((*(_80044_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ace29222:;
	};
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a90705ae_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _82329_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _82344_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	if (((*((*(_82344_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_82329_e)).ptr(), (*((*(_82344_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_82344_fc))))._field_Args.len() > 2LL)) {
		_1a8e4e03c_pushErr((*(_82329_e)).ptr(), (*((*((*(_82344_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _8329_expr = _1a8e6bc4c_evalExpr((*(_82329_e)), (*((*(_82344_fc))))._field_Args[0LL]);;
	if ((_8329_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a8e8566c_Prim((*(_8329_expr))._field_Kind.ptr()) == nullptr) || (!(_1a8e8dce6_IsBool(_1a8e8566c_Prim((*(_8329_expr))._field_Kind).ptr()))))) {
		_1a8e4e03c_pushErr((*(_82329_e)).ptr(), (*((*(_82344_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a8d35d25_BuiltinAssertCallExprModel> _8419_model = jule::new_ptr<_1a8d35d25_BuiltinAssertCallExprModel>(_1a8d35d25_BuiltinAssertCallExprModel{._field_Token=(*((*(_82344_fc))))._field_Token, ._field_Expr=(*(_8329_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_82344_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a8e4bcb5_Data> _84913_log = _1a8e6bc4c_evalExpr((*(_82329_e)), (*((*(_82344_fc))))._field_Args[1LL]);;
		if ((_84913_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1a8e4c6bc_IsConst(_84913_log.ptr()))) || (_1a8e8566c_Prim((*(_84913_log))._field_Kind) == nullptr)) || (!(_1a8e8e07c_IsStr(_1a8e8566c_Prim((*(_84913_log))._field_Kind).ptr()))))) {
			_1a8e4e03c_pushErr((*(_82329_e)).ptr(), (*((*((*(_82344_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(_84913_log))._field_Kind), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8419_model))._field_Log=_20a2b96ca_ReadStr((*(_84913_log))._field_Constant.ptr());
	};
	jule::Ptr<_1a8e4bcb5_Data> _8629_d = _1a8e7c9c7_buildVoidData();;
	(*(_8629_d))._field_Model=jule::Any(_8419_model, &__jule_any_type29);
	return _8629_d;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a90709dd_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _86740_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _86755_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	if (((*((*(_86755_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_86740_e)).ptr(), (*((*(_86755_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_86755_fc))))._field_Args.len() > 1LL)) {
		_1a8e4e03c_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _8769_d = _1a8e6ae38_evalExprKind((*(_86740_e)), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8769_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _8805_f = _1a8e86959_Fn((*(_8769_d))._field_Kind.ptr());;
	if ((_8805_f != nullptr)) {
		if (_1a8d41407_IsBuiltin(_8805_f)) {
			_1a8e4e03c_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*_8805_f.alloc)._field_Generics.len() != (*((*_8805_f.alloc)._field_Decl))._field_Generics.len())) {
			_1a8e4e03c_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1a8d29ba4_StructIns> _8915_s = _1a8e86be0_Struct((*(_8769_d))._field_Kind);;
	if (((_8915_s != nullptr) && ((*_8915_s.alloc)._field_Generics.len() != (*((*_8915_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1a8e4e03c_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1a8e87729_comptime((*(_8769_d))._field_Kind)) {
		_1a8e4e03c_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_8769_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a8d7458e_buildComptimeTypeInfoData(&((*((*(_86740_e))))._field_s), &((*(_8769_d))._field_Kind));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a907115e_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _90341_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _90356_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	if (((*((*(_90356_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_90341_e)).ptr(), (*((*(_90356_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_90356_fc))))._field_Args.len() > 1LL)) {
		_1a8e4e03c_pushErr((*(_90341_e)).ptr(), (*((*((*(_90356_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _9119_d = _1a8e6bc4c_evalExpr((*(_90341_e)), (*((*(_90356_fc))))._field_Args[0LL]);;
	if ((_9119_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a8e45a4a_isGoodValueToInfer(&(_9119_d))))) {
		_1a8e4e03c_pushErr((*(_90341_e)).ptr(), (*((*((*(_90356_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_9119_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a8d748d0_buildComptimeValue(&(_9119_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a907158d_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _92338_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _92353_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	if (((*((*(_92353_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_92338_e)).ptr(), (*((*((*(_92353_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_20a2b7552_Const> _9279_constant = static__20a2b7992_NewI64(static_cast<jule::I64>((*((*((*(_92353_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a906682a_primInt, ._field_Model=jule::Any(_9279_constant, &__jule_any_type19), ._field_Constant=_9279_constant});;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a90719bc_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _93538_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _93553_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	if (((*((*(_93553_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_93538_e)).ptr(), (*((*((*(_93553_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d7214c_comptimeFile>(_1a8d7214c_comptimeFile{._field_file=(*((*((*(_93538_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data18)}), });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a9071deb_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _94839_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _94854_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	if (((*((*(_94854_fc))))._field_Args.len() > 0LL)) {
		_1a8e4e03c_pushErr((*(_94839_e)).ptr(), (*((*((*(_94854_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8d70a52_comptimeFiles>(_1a8d70a52_comptimeFiles{._field_files=(*((*((*(_94839_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data17)}), });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a907232a_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _96143_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _96158_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	if (((*((*(_96158_fc))))._field_Args.len() > 2LL)) {
		_1a8e4e03c_pushErr((*(_96143_e)).ptr(), (*((*((*(_96158_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96158_fc))))._field_Args.len() == 0LL)) {
		_1a8e4e03c_pushErr((*(_96143_e)).ptr(), (*((*(_96158_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96158_fc))))._field_Args.len() == 1LL)) {
		_1a8e4e03c_pushErr((*(_96143_e)).ptr(), (*((*(_96158_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_96158_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ace53658:;
			{
				goto _match_end_1ace558e1;
			}
		}
		else {
			_case_begin_1ace55957:;
			{
				_1a8e4e03c_pushErr((*(_96143_e)).ptr(), (*((*((*(_96158_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a8e4e3a0_pushSuggestion((*(_96143_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ace558e1:;
	};
	jule::Ptr<_1a875ce89_Token> _9829_ident = (*((*((*((*(_96158_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1a87791b4_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_96143_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0)) {
			_case_begin_1ace57c45:;
			{
				goto _match_end_1ace57e87;
			}
		}
		else {
			_case_begin_1ace57edc:;
			{
				_1a8e4e03c_pushErr((*(_96143_e)).ptr(), (*((*(_96158_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ace57e87:;
	};
	jule::Ptr<_1a8d863c5_scopeChecker> _9919_sc = (*((*(_96143_e))))._field_lookup.cast_ptr<_1a8d863c5_scopeChecker>((jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data0);;
	jule::Ptr<_1a8e82229_TypeAlias> _9929_alias = jule::new_ptr<_1a8e82229_TypeAlias>(_1a8e82229_TypeAlias{._field_Scope=(*(_9919_sc))._field_tree, ._field_Public=_1a8dbd40c_IsPub((*(_9829_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9829_ident, ._field_Ident=(*_9829_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1a8e8a1dd_TypeSymbol>(), });;
	jule::Ptr<_1a8e4bcb5_Data> _10029_t = _1a8e6b279_eval1((*(_96143_e)), (*((*(_96158_fc))))._field_Args[1LL]);;
	if ((_10029_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10029_t))._field_Decl) {
		(*((*(_9929_alias))._field_Kind))._field_Kind=(*(_10029_t))._field_Kind;
	} else {
		jule::Ptr<_1a8d66be1_comptimeTypeInfo> _100913_cti = _1a8e89033_comptimeTypeInfo((*(_10029_t))._field_Kind.ptr());;
		if ((_100913_cti == nullptr)) {
			_1a8e4e03c_pushErr((*(_96143_e)).ptr(), (*((*((*(_96158_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a8e4e3a0_pushSuggestion((*(_96143_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9929_alias))._field_Kind))._field_Kind=(*(_100913_cti))._field_base;
	};
	_1a8d8b276_checkTypeAlias(_9919_sc, &(_9929_alias));
	return _1a8e7c9c7_buildVoidData();;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a9072759_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _102135_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _102150_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<_1a8e4bcb5_Data> _10229_result = jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9066462_primUint, });;
	if (((*((*(_102150_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_102135_e)).ptr(), (*((*(_102150_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10229_result;;
	};
	if (((*((*(_102150_fc))))._field_Args.len() > 1LL)) {
		_1a8e4e03c_pushErr((*(_102135_e)).ptr(), (*((*((*(_102150_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _10349_d = _1a8e6ae38_evalExprKind((*(_102135_e)), (*((*((*(_102150_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10349_d == nullptr)) {
		return _10229_result;;
	};
	if ((!(_1a8ea07db_validTypeForXof(&((*(_10349_d))._field_Kind))))) {
		_1a8e4e03c_pushErr((*(_102135_e)).ptr(), (*((*((*(_102150_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_10349_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10229_result))._field_Model=jule::Any(jule::new_ptr<_1a8d380d0_SizeofExprModel>(_1a8d380d0_SizeofExprModel{._field_Expr=(*(_10349_d))._field_Model}), &__jule_any_type117);
	return _10229_result;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a9072b88_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _104636_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _104651_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<_1a8e4bcb5_Data> _10479_result = jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9066462_primUint, });;
	if (((*((*(_104651_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_104636_e)).ptr(), (*((*(_104651_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10479_result;;
	};
	if (((*((*(_104651_fc))))._field_Args.len() > 1LL)) {
		_1a8e4e03c_pushErr((*(_104636_e)).ptr(), (*((*((*(_104651_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _10599_d = _1a8e6ae38_evalExprKind((*(_104636_e)), (*((*((*(_104651_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10599_d == nullptr)) {
		return _10479_result;;
	};
	if ((!(_1a8ea07db_validTypeForXof(&((*(_10599_d))._field_Kind))))) {
		_1a8e4e03c_pushErr((*(_104636_e)).ptr(), (*((*((*(_104651_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a8e833d4_Str((*(_10599_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10479_result))._field_Model=jule::Any(jule::new_ptr<_1a8d382bc_AlignofExprModel>(_1a8d382bc_AlignofExprModel{._field_Expr=(*(_10599_d))._field_Model}), &__jule_any_type118);
	return _10479_result;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a90730b7_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _107133_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _107148_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	if (((*((*(_107148_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_107133_e)).ptr(), (*((*(_107148_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107148_fc))))._field_Args.len() > 1LL)) {
		_1a8e4e03c_pushErr((*(_107133_e)).ptr(), (*((*((*(_107148_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _10809_d = _1a8e6bc4c_evalExpr((*(_107133_e)), (*((*(_107148_fc))))._field_Args[0LL]);;
	if ((_10809_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a8e85150_PerformsRC((*(_10809_d))._field_Kind.ptr())))) {
		_1a8e4e03c_pushErr((*(_107133_e)).ptr(), (*((*((*(_107148_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a8e4bcb5_Data> _10899_result = _1a8e7c9c7_buildVoidData();;
	(*(_10899_result))._field_Model=jule::Any(jule::new_ptr<_1a8d39037_FreeExprModel>(_1a8d39037_FreeExprModel{._field_Expr=(*(_10809_d))._field_Model}), &__jule_any_type32);
	return _10899_result;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a90734e6_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _109445_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _109460_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	if (((*((*(_109460_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_109445_e)).ptr(), (*((*(_109460_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_109460_fc))))._field_Args.len() > 1LL)) {
		_1a8e4e03c_pushErr((*(_109445_e)).ptr(), (*((*((*(_109460_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8e4bcb5_Data> _11039_d = _1a8e6bc4c_evalExpr((*(_109445_e)), (*((*(_109460_fc))))._field_Args[0LL]);;
	if ((_11039_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a8e9e796_isBuiltinStrConvertable(&((*(_11039_d))._field_Kind))))) {
		_1a8e4e03c_pushErr((*(_109445_e)).ptr(), (*((*((*(_109460_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a8e4bcb5_Data>(_1a8e4bcb5_Data{._field_Kind=_1a9065b48_primStr, ._field_Model=jule::Any(jule::new_ptr<_1a8d38861_IntegratedToStrExprModel>(_1a8d38861_IntegratedToStrExprModel{._field_Expr=(*(_11039_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a9073925_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _112144_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _112159_fc, jule::Ptr<_1a8e4bcb5_Data>* _112181_d) {
	if ((!(_1a8e4ea32_isUnsafe((*(_112144_e)).ptr())))) {
		_1a8e4e03c_pushErr((*(_112144_e)).ptr(), (*((*(_112159_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_112159_fc))))._field_Args.len() < 1LL)) {
		_1a8e4e03c_pushErr((*(_112144_e)).ptr(), (*((*(_112159_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8e4bcb5_Data> _11319_argd = _1a8e6bc4c_evalExpr((*(_112144_e)), (*((*(_112159_fc))))._field_Args[0LL]);;
	if ((_11319_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1a8e8566c_Prim((*(_11319_argd))._field_Kind.ptr()) == nullptr) || (!(_1a8e8e07c_IsStr(_1a8e8566c_Prim((*(_11319_argd))._field_Kind).ptr()))))) {
		_1a8e4e03c_pushErr((*(_112144_e)).ptr(), (*((*((*(_112159_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a8e833d4_Str((*(_11319_argd))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1a8e4c6bc_IsConst(_11319_argd.ptr()))) || (!(_20a2bbcc6_IsStr((*(_11319_argd))._field_Constant.ptr()))))) {
		_1a8e4e03c_pushErr((*(_112144_e)).ptr(), (*((*((*(_112159_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8e4bcb5_Data> _11469_r = _1a8e7c9c7_buildVoidData();;
	jule::Ptr<_1a8d3ee72_FnIns> _11489_f = _1a8e86959_Fn((*((*(_112181_d))))._field_Kind);;
	if (((*(_11489_f))._field_Generics.len() > 0LL)) {
		(*(_11469_r))._field_Kind=(*((*_11489_f.alloc)._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1a8d38c3a_BackendEmitExprModel> _11539_model = jule::new_ptr<_1a8d38c3a_BackendEmitExprModel>(_1a8d38c3a_BackendEmitExprModel{._field_Code=_20a2b96ca_ReadStr((*(_11319_argd))._field_Constant), });;
	if (((*((*(_112159_fc))))._field_Args.len() > 1LL)) {
		(*(_11539_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_112159_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_112159_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ace82ad8:;
			if (it != expr_end) {
				jule::Ptr<_1a8777899_Expr> _115921_arg = *it;
				{
					_11319_argd=_1a8e6b279_eval1((*(_112144_e)), _115921_arg);
					if ((_11319_argd == nullptr)) {
						return nullptr;;
					};
					(*_11539_model.alloc)._field_Exprs=jule::append((*_11539_model.alloc)._field_Exprs,jule::Slice<jule::Any>::make({(*(_11319_argd))._field_Model}));
				}
				_iter_next_1ace82ad8:;
				++it;
				goto _iter_begin_1ace82ad8;
			}
			_iter_end_1ace82ad8:;
		};
	};
	(*_11469_r.alloc)._field_Model=jule::Any(_11539_model, &__jule_any_type24);
	return _11469_r;;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a9073d54_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _117234_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _117249_fc, jule::Ptr<_1a8e4bcb5_Data>* _117271_d) {
	(*(_117271_d))=_1a906a6db_builtinCallerOut(nullptr, _117234_e, _117249_fc, _117271_d);
	if (((*(_117271_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_117271_d))))._field_Model.cast_ptr<_1a8d34be2_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Debug=true;
	return (*(_117271_d));;
}



inline jule::Ptr<_1a8e4bcb5_Data> _1a9074283_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _118136_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _118151_fc, jule::Ptr<_1a8e4bcb5_Data>* _118173_d) {
	(*(_118173_d))=_1a906ab1a_builtinCallerOutln(nullptr, _118136_e, _118151_fc, _118173_d);
	if (((*(_118173_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_118173_d))))._field_Model.cast_ptr<_1a8d350bb_BuiltinOutlnCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_118173_d));;
}



inline jule::Ptr<_1a98a065d_FileInfo> _1a98e410d_ParseFile(jule::Ptr<_1a8763720_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a98a065d_FileInfo> _279_finf = jule::new_ptr<_1a98a065d_FileInfo>();;
	({
		__jule_tuple_x_1a87715a7_Ast__jule_tuple_s_224743e15_Log __jule_assign_result = _1a98e46a2_parseFileset(_2318_f);
		(*_279_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_279_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_279_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_279_finf.alloc)._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1a87715a7_Ast__jule_tuple_s_224743e15_Log _1a98e46a2_parseFileset(jule::Ptr<_1a8763720_File> _5521_f) {
	__jule_tuple_x_1a87715a7_Ast__jule_tuple_s_224743e15_Log __jule_func_result;
	jule::Ptr<_20a0a48b1_parser> _569_p = jule::new_ptr<_20a0a48b1_parser>();;
	_1e1831651_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_569_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_569_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1a8783586_ScopeTree> _1a98e5142_newScope(void) {
	return jule::new_ptr<_1a8783586_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a98e54c7_isSt(jule::Ptr<_1a875ce89_Token> _499_current, jule::Ptr<_1a875ce89_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U32>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U32>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a98e584b_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _5526_tokens, jule::I32* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1a875ce89_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U32>(17LLU)) || (_1a875d9d4_IsBinOp((*_619_prev.alloc)._field_Id) && ((*_619_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a98e5c14_nextStPos(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _6815_tokens, jule::I32 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _699_braceN = 0LL;;
	jule::I32 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_1a875ce89_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1ad010a78:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1a98e584b_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a98e54c7_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1ad0109bd;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1ad00e637;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1ad010cdc:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a98e54c7_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1ad0109bd;
							};
						};
						goto _iter_next_1ad00e637;
					}
				}
				_match_end_1ad010c65:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1ad00e637;
			};
			if ((_709_i > _6833_start)) {
				if (_1a98e584b_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1ad00e637;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a98e54c7_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a98e54c7_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1ad00e637;
			};
			_julec_label_1ad0109bd:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1ad00e637:;
	}
	_iter_end_1ad00e637:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a875ce89_Token__jule_tuple_bool _1a98e6088_skipSt(jule::I32* _13016_i, jule::Slice<jule::Ptr<_1a875ce89_Token>> _13028_tokens) {
	__jule_tuple_sx_1a875ce89_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a98e5c14_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1a875ce89_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1a98e6088_skipSt(_13016_i, _13028_tokens));
return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1a98e63b8_stmt>> _1a98e6770_splitStmts(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _15120_tokens) {
	jule::Slice<jule::Ptr<_1a98e63b8_stmt>> _1529_stmts = jule::Slice<jule::Ptr<_1a98e63b8_stmt>>::alloc(0LL, 20LL);;
	jule::I32 _1539_pos = 0LL;;
	while ((_1539_pos < (*(_15120_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1a875ce89_Token>> _15513_stmt;
			jule::Bool _15519_terminated;
			({
				__jule_tuple_sx_1a875ce89_Token__jule_tuple_bool __jule_assign_result = _1a98e6088_skipSt(&(_1539_pos), (*(_15120_tokens)));
				_15513_stmt = __jule_assign_result.__jule_result_arg0;
				_15519_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1a98e63b8_stmt>> &__jule_push_dest = _1529_stmts; __jule_push_dest.push(jule::new_ptr<_1a98e63b8_stmt>(_1a98e63b8_stmt{._field_tokens=_15513_stmt, ._field_terminated=_15519_terminated})); };
		}
	_iter_next_1ad018ec1:;
	}
	_iter_end_1ad018ec1:;;
	return _1529_stmts;;
}



inline jule::Bool _20a09e45a_isTypeOp(jule::U32* _89314_id) {
	return ((((*(_89314_id)) == static_cast<jule::U32>(65LLU)) || ((*(_89314_id)) == static_cast<jule::U32>(54LLU))) || ((*(_89314_id)) == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _20a09e768_isTypeRange(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _90021_tokens) {
	jule::Bool _9019_op = false;;
	{
		auto expr = _90021_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca3c3a7:;
		if (it != expr_end) {
			jule::I32 _9029_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> _90212_token = *it;
			{
				if (((*(_90212_token))._field_Id == static_cast<jule::U32>(76LLU))) {
					if (_9019_op) {
						return true;;
					};
					jule::I32 _90717_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1a875ce89_Token>> _90817_lTokens = (*(_90021_tokens)).slice(_9029_i);;
					{
						auto expr = &(_90817_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aca3dce3:;
						if (it != expr_end) {
							jule::Ptr<_1a875ce89_Token> _90920_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90920_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U32>(76LLU)) {
										_case_begin_1aca3e585:;
										{
											(_90717_rangeN)++;
											goto _iter_next_1aca3dce3;
										}
									}
									else if (_match_expr == static_cast<jule::U32>(77LLU)) {
										_case_begin_1aca3e95e:;
										{
											(_90717_rangeN)--;
											goto _iter_next_1aca3dce3;
										}
									}
									_match_end_1aca3e871:;
								};
								if ((_90717_rangeN == 0LL)) {
									return _20a09e45a_isTypeOp(&((*(_90920_lToken))._field_Id));;
								};
							}
							_iter_next_1aca3dce3:;
							++it;
							goto _iter_begin_1aca3dce3;
						}
						_iter_end_1aca3dce3:;
					};
					return true;;
				};
				if ((!(_20a09e45a_isTypeOp(&((*_90212_token.alloc)._field_Id))))) {
					return false;;
				};
				_9019_op=true;
			}
			_iter_next_1aca3c3a7:;
			++it;
			_9029_i++;
			goto _iter_begin_1aca3c3a7;
		}
		_iter_end_1aca3c3a7:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a875ce89_Token>> _20a09ea32_getBlockExpr(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _93322_tokens) {
	jule::I32 _9349_braceN = 0LL;;
	jule::I32 _9359_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca40e49:;
		if (it != expr_end) {
			jule::I32 _9369_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ (*(_93612_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1aca42632:;
						{
							if (((((*(_93322_tokens)).len() - _9369_i) > 1LL) && ((*((*(_93322_tokens))[(_9369_i + 1LL)]))._field_Id == static_cast<jule::U32>(72LLU)))) {
								(_9359_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1aca426ba:;
						{
							if (((_9349_braceN > 0LL) || (_9359_skipToNextBraceClose > 0LL))) {
								if ((_9359_skipToNextBraceClose > 0LL)) {
									(_9359_skipToNextBraceClose)--;
								};
								(_9349_braceN)++;
								goto _match_end_1aca42577;
							};
							return (*(_93322_tokens)).slice(0LL, _9369_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1aca42731:;
						{
							(_9349_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1aca42797:;
						{
							(_9349_braceN)--;
						}
					}
					_match_end_1aca42577:;
				};
			}
			_iter_next_1aca40e49:;
			++it;
			_9369_i++;
			goto _iter_begin_1aca40e49;
		}
		_iter_end_1aca40e49:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a875ce89_Token__jule_tuple_sx_1a875ce89_Token _20a09edea_splitDelim(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _96520_tokens, jule::U32 _96538_delim) {
	__jule_tuple_sx_1a875ce89_Token__jule_tuple_sx_1a875ce89_Token __jule_func_result;
	jule::I32 _9669_func = -1LL;;
	jule::I32 _9679_rangeN = 0LL;;
	jule::I32 _9689_i = 0LL;;
	for (; (_9689_i < (*(_96520_tokens)).len()); (_9689_i)++) {
		{
			jule::Ptr<_1a875ce89_Token> _9709_token = (*(_96520_tokens))[_9689_i];;
			{
				auto &_match_expr{ (*(_9709_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(29LLU)) {
					_case_begin_1aca4726e:;
					{
						_9669_func=_9679_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1aca472d5:;
					{
						(_9679_rangeN)++;
						goto _iter_next_1aca459ba;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1aca4734b:;
					{
						(_9679_rangeN)--;
						if ((_9669_func == _9679_rangeN)) {
							_9669_func=-1LL;
							if (((((*(_96520_tokens)).len() - _9689_i) > 1LL) && ((*((*(_96520_tokens))[(_9689_i + 1LL)]))._field_Id == static_cast<jule::U32>(8LLU)))) {
								(_9689_i)++;
								goto _iter_next_1aca459ba;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1aca473b2:;
					{
						(_9679_rangeN)--;
					}
				}
				_match_end_1aca47219:;
			};
			if ((((*(_9709_token))._field_Id == _96538_delim) && (_9679_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1a875ce89_Token>> _99417_l = (*(_96520_tokens)).slice(0LL, _9689_i);;
				jule::Slice<jule::Ptr<_1a875ce89_Token>> _99517_r = (*(_96520_tokens)).slice((_9689_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _99417_l;
				__jule_func_result.__jule_result_arg1 = _99517_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1aca459ba:;
	}
	_iter_end_1aca459ba:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _20a0a01b4_findLowestPrecOp(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _100422_tokens) {
	jule::U8 _10099_prec = 255LLU;;
	jule::I32 _10109_precPos = -1LL;;
	jule::I32 _10129_braceN = 0LL;;
	jule::Bool _10139_skipToNextBraceOpen = false;;
	{
		auto expr = _100422_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca4c582:;
		if (it != expr_end) {
			jule::I32 _10149_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> *_101412_token = it;
			{
				{
					auto &_match_expr{ (*((*(_101412_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1aca4d31e:;
						{
							_10139_skipToNextBraceOpen=false;
							goto _case_begin_1aca4d3a7;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1aca4d3a7:;
						{
							(_10129_braceN)++;
							goto _iter_next_1aca4c582;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1aca4d41d:;
						{
							(_10129_braceN)--;
							goto _iter_next_1aca4c582;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(13LLU)) {
						_case_begin_1aca4d484:;
						{
							_10139_skipToNextBraceOpen=true;
							goto _iter_next_1aca4c582;
						}
					}
					_match_end_1aca4d264:;
				};
				{
					
					if (_10139_skipToNextBraceOpen) {
						_case_begin_1aca4eb8e:;
						{
							goto _iter_next_1aca4c582;
						}
					}
					else if ((_10149_i == 0LL)) {
						_case_begin_1aca4ec05:;
						{
							goto _iter_next_1aca4c582;
						}
					}
					else if ((_10129_braceN > 0LL)) {
						_case_begin_1aca4ec6b:;
						{
							goto _iter_next_1aca4c582;
						}
					}
					else if ((!(_1a875d9d4_IsBinOp((*((*(_101412_token))))._field_Id)))) {
						_case_begin_1aca4ecd2:;
						{
							goto _iter_next_1aca4c582;
						}
					}
					_match_end_1aca4ea29:;
				};
				jule::Ptr<_1a875ce89_Token> _10439_left = (*(_100422_tokens))[(_10149_i - 1LL)];;
				if ((_1a875d6c6_IsUnaryOp((*(_10439_left))._field_Id) || ((*_10439_left.alloc)._field_Id == static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1aca4c582;
				};
				if (((_10149_i > 1LL) && ((*_10439_left.alloc)._field_Id == static_cast<jule::U32>(77LLU)))) {
					jule::Ptr<_1a875ce89_Token> _105113_lleft = (*(_100422_tokens))[(_10149_i - 2LL)];;
					if (((*(_105113_lleft))._field_Id == static_cast<jule::U32>(76LLU))) {
						if ((((*((*(_101412_token))))._field_Id == static_cast<jule::U32>(65LLU)) || ((*(*(_101412_token)).alloc)._field_Id == static_cast<jule::U32>(62LLU)))) {
							goto _iter_next_1aca4c582;
						};
					};
				};
				jule::U8 _10609_p = _1a875d30d_Prec((*(_101412_token)));;
				if (((_10609_p != 0LLU) && (_10609_p <= _10099_prec))) {
					_10099_prec=_10609_p;
					_10109_precPos=_10149_i;
				};
			}
			_iter_next_1aca4c582:;
			++it;
			_10149_i++;
			goto _iter_begin_1aca4c582;
		}
		_iter_end_1aca4c582:;
	};
	return _10109_precPos;;
}



inline jule::Ptr<_1a87791b4_IdentExpr> _20a0a047d_buildIdentExpr(jule::Ptr<_1a875ce89_Token>* _106924_token) {
	return jule::new_ptr<_1a87791b4_IdentExpr>(_1a87791b4_IdentExpr{._field_Token=(*(_106924_token)), ._field_Ident=(*((*(_106924_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1a875ce89_Token__jule_tuple_int _20a0a0747_getRangeExprTokens(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _107728_tokens) {
	__jule_tuple_sx_1a875ce89_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _10789_rangeN = 0LL;;
	jule::I32 _10799_i = ((*(_107728_tokens)).len() - 1LL);;
	for (; (_10799_i >= 0LL); (_10799_i)--) {
		{
			jule::Ptr<_1a875ce89_Token> _10819_tok = (*(_107728_tokens))[_10799_i];;
			{
				auto &_match_expr{ (*(_10819_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1aca56bda:;
					{
						(_10789_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1aca56ee8:;
					{
						(_10789_rangeN)--;
					}
				}
				_match_end_1aca56e93:;
			};
			if ((_10789_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_107728_tokens)).slice(0LL, _10799_i);
				__jule_func_result.__jule_result_arg1 = _10789_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1aca5627d:;
	}
	_iter_end_1aca5627d:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10789_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _20a0a0b21_isAnonFnHead(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _110018_tokens) {
	{
		auto &_match_expr{ (*((*(_110018_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1aca58934:;
			{
				if ((((*(_110018_tokens)).len() == 1LL) || ((*((*(_110018_tokens))[1LL]))._field_Id != static_cast<jule::U32>(29LLU)))) {
					goto _match_end_1aca58d96;
				};
				goto _case_begin_1aca58ec8;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1aca58ec8:;
			{
				if (((*((*(_110018_tokens))[((*(_110018_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U32>(73LLU))) {
					goto _match_end_1aca58d96;
				};
				return true;;
			}
		}
		_match_end_1aca58d96:;
	};
	return false;;
}



inline jule::Bool _20a0a1869_checkAssignTokens(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1a8762752_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I32 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acaea08b:;
		if (it != expr_end) {
			jule::Ptr<_1a875ce89_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1acaea795:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1acaeab4c:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1acaeaa5e:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1acaebcd5:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1acaebd6d:;
						{
							goto _iter_next_1acaea08b;
						}
					}
					else if (_1a8762cd5_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*(*(_2112_t)).alloc)._field_Id == static_cast<jule::U32>(38LLU))) {
						_case_begin_1acaebdd4:;
						{
							return true;;
						}
					}
					_match_end_1acaebc80:;
				};
			}
			_iter_next_1acaea08b:;
			++it;
			goto _iter_begin_1acaea08b;
		}
		_iter_end_1acaea08b:;
	};
	return false;;
}



inline _224743e15_Log _20a0a2a35_makeErr(jule::I32 _5112_row, jule::I32 _5122_col, jule::Ptr<_1a8763720_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _224743e15_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_224744377_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1a875ce89_Token>> _20a0a3063_range(jule::I32* _6915_i, jule::U32 _6923_open, jule::U32 _6938_close, jule::Slice<jule::Ptr<_1a875ce89_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1a875ce89_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I32 _789_rangeN = 1LL;;
	jule::I32 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1a875ce89_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1acb01d73:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1acb021c5:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1acb0214d:;
			};
		}
	_iter_next_1acb0127e:;
	}
	_iter_end_1acb0127e:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1a875ce89_Token__jule_tuple_sx_1a875ce89_Token _20a0a332c_rangeLast(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _9919_tokens) {
	__jule_tuple_sx_1a875ce89_Token__jule_tuple_sx_1a875ce89_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U32 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U32>(73LLU)) && (_1035_first != static_cast<jule::U32>(76LLU))) && (_1035_first != static_cast<jule::U32>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1099_braceN = 0LL;;
	jule::I32 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_1a875ce89_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1acb06152:;
					{
						(_1099_braceN)++;
						goto _iter_next_1acb0541a;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1acb06460:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1acb0640a:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1acb0541a:;
	}
	_iter_end_1acb0541a:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log _20a0a37d3_parts(jule::Slice<jule::Ptr<_1a875ce89_Token>>* _13715_tokens, jule::U32 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1a875ce89_Token__jule_tuple_s_224743e15_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1419_rangeN = 0LL;;
	jule::I32 _1429_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb09298:;
		if (it != expr_end) {
			jule::I32 _1439_i = it - expr->begin();
			jule::Ptr<_1a875ce89_Token> _14312_token = *it;
			{
				{
					auto &_match_expr{ (*(_14312_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1acb0a2bb:;
						{
							(_1419_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1acb0a343:;
						{
							(_1419_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1acb0a3a9:;
						{
							if ((_1419_rangeN > 0LL)) {
								goto _iter_next_1acb09298;
							};
							if ((_13746_exprMust && ((_1439_i - _1429_last) <= 0LL))) {
								_224743e15_Log _15417_err = _20a0a2a35_makeErr((*(_14312_token))._field_Row, (*_14312_token.alloc)._field_Column, &((*_14312_token.alloc)._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
								{ jule::Slice<_224743e15_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_15417_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1429_last, _1439_i)); };
							_1429_last=(_1439_i + 1LL);
						}
					}
					_match_end_1acb0a211:;
				};
			}
			_iter_next_1acb09298:;
			++it;
			_1439_i++;
			goto _iter_begin_1acb09298;
		}
		_iter_end_1acb09298:;
	};
	if ((_1429_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a875ce89_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1429_last)); };
	};
	return __jule_func_result;;
}



inline jule::U32 _20a0a3a69_getCloseOfBrace(jule::U32 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1acb0d81e:;
			{
				return static_cast<jule::U32>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1acb0d885:;
			{
				return static_cast<jule::U32>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1acb0d8eb:;
			{
				return static_cast<jule::U32>(76LLU);;
			}
		}
		else {
			_case_begin_1acb09bb1:;
			{
				return _16720_left;;
			}
		}
		_match_end_1acb09cd2:;
	};
}



inline _224743e15_Log _20a0a3e98_compilerErr(jule::Ptr<_1a875ce89_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _224743e15_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_224744377_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1a8764732_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), };;
}



inline void _20a0a433e_pushSuggestion(_224743e15_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_224744377_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1a8773565_TypeDecl> _1a98ec105_buildVoidType(void) {
	return jule::new_ptr<_1a8773565_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a917c2e2_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1acd83db3:;
			{
				__jule_func_result.__jule_result_arg0=_22474708e_IsWindows(_22480e0ce_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1acd83a2d:;
			{
				__jule_func_result.__jule_result_arg0=_22474739c_IsDarwin(_22480e0ce_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1acd83a94:;
			{
				__jule_func_result.__jule_result_arg0=_224747666_IsLinux(_22480e0ce_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1acd83b0a:;
			{
				__jule_func_result.__jule_result_arg0=_2247482c1_IsUnix(_22480e0ce_Os);
			}
		}
		else {
			_case_begin_1acd83544:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1acd83665:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a917709a_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1acd86091:;
			{
				__jule_func_result.__jule_result_arg0=_2247479a7_IsI386(_22480e387_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1acd85c0b:;
			{
				__jule_func_result.__jule_result_arg0=_224747c3d_IsAmd64(_22480e387_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1acd85c72:;
			{
				__jule_func_result.__jule_result_arg0=_224748007_IsArm64(_22480e387_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1acd85cd8:;
			{
				__jule_func_result.__jule_result_arg0=_2247488dc_Is64Bit(_22480e387_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1acd85d4e:;
			{
				__jule_func_result.__jule_result_arg0=_22474869a_Is32Bit(_22480e387_Arch);
			}
		}
		else {
			_case_begin_1acd85722:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1acd85843:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a9177353_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_2246a09dc_Base(_5029_p);
	jule::I32 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _2246a0459_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I32 _649_i = _224698386_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok;
		jule::Bool _6721_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a917c2e2_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a917709a_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=_224698386_FindLastByte(_5029_p, '_');
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok;
		jule::Bool _8821_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a917c2e2_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a917709a_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok;
	jule::Bool _9617_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a917709a_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a917c2e2_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a917c2e2_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1a9192c20_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_22480e0ce_Os); };
	if (_2247482c1_IsUnix(_22480e0ce_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1a9192e95_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_22480e387_Arch); };
	if (_2247488dc_Is64Bit(_22480e387_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_22474869a_Is32Bit(_22480e387_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1a9193281_initVars(jule::Slice<jule::Str>* _5518_vars, _1a9192901_CompileInfo* _5532_info) {
	_1a9192c20_setOsVars(_5518_vars);
	_1a9192e95_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1acd91b4b:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1acd91596:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1acd9150d:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1acd9162e:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1acd92366:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1acd923cc:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1acd92311:;
	};
}



inline jule::Slice<jule::U8> _1a99012a2_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__2232d999b_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_22480d034_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _224743e15_Log _1a99015b0_flatCompilerErr(jule::Str _4120_text) {
	return _224743e15_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Text=_4120_text, };;
}



inline void _1a9905dcd_pushPasses(jule::Ptr<_1a8da3dc6_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdc30ab:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _11217_f = *it;
			{
				_julec_label_1acdc36d8:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acdc3b39:;
					if (it != expr_end) {
						_1a8d4465d_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1acdc3b39;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1acdc470b:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1acdc3b39;
										};
									}
									_iter_next_1acdc470b:;
									++it;
									goto _iter_begin_1acdc470b;
								}
								_iter_end_1acdc470b:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1acdc3b39:;
						++it;
						goto _iter_begin_1acdc3b39;
					}
					_iter_end_1acdc3b39:;
				};
			}
			_iter_next_1acdc30ab:;
			++it;
			goto _iter_begin_1acdc30ab;
		}
		_iter_end_1acdc30ab:;
	};
}



inline jule::Slice<jule::Str> _1a9906296_getAllUniquePasses(jule::Ptr<_1a8da3dc6_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1a8da0ea0_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1a9905dcd_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdc5cd4:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1a9905dcd_pushPasses(&((*_13217_u.alloc)._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1acdc5cd4:;
			++it;
			goto _iter_begin_1acdc5cd4;
		}
		_iter_end_1acdc5cd4:;
	};
	return _12913_passes;;
}



inline _1a9192901_CompileInfo _1a99064a5_buildCompileInfo(void) {
	_1a9192901_CompileInfo _1429_info = _1a9192901_CompileInfo{._field_Prod=_22eb8c9d5_Production, ._field_Test=_22eb8c122_Test, };;
	{
		auto &_match_expr{ _22eb8b550_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1acdc71c0:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1acdc7335:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1acdc72ad:;
	};
	{
		auto &_match_expr{ _22eb8b96d_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1acdc73bd:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1acdc7e5c:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1acdc76ed:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1acdc8105:;
	};
	return _1429_info;;
}



inline void _1a9a6d71b_EliminateDefines(jule::Ptr<_1a990452a_IR>* _30526_ir) {
	jule::Ptr<_1a9a6a806_ObjectDeadCode> _3069_ocd = static__1a9a6ac9b_new(_30526_ir);;
	_1a9a6d3db_elimanate(_3069_ocd);
}



inline jule::Ptr<_1a8772982_Directive> _1a9a6dad4_findDirective(jule::Slice<jule::Ptr<_1a8772982_Directive>>* _31123_directives, jule::Str _31154_tag) {
	{
		auto expr = _31123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad496edc:;
		if (it != expr_end) {
			jule::Ptr<_1a8772982_Directive> _31217_dr = *it;
			{
				if (((*((*(_31217_dr))._field_Tag))._field_Kind == _31154_tag)) {
					return _31217_dr;;
				};
			}
			_iter_next_1ad496edc:;
			++it;
			goto _iter_begin_1ad496edc;
		}
		_iter_end_1ad496edc:;
	};
	return nullptr;;
}



inline jule::Bool _1a9a6de58_hasDirective(jule::Slice<jule::Ptr<_1a8772982_Directive>>* _32118_directives, jule::Str _32149_tag) {
	return (_1a9a6dad4_findDirective(&((*(_32118_directives))), _32149_tag) != nullptr);;
}



inline jule::Bool _1a9a6e321_isTraitMethod(jule::Ptr<_1a8d29ba4_StructIns>* _32623_owner, jule::Ptr<_1a8d3ee72_FnIns>* _32643_f) {
	{
		auto expr = &((*((*((*(_32623_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4988b2:;
		if (it != expr_end) {
			jule::Ptr<_1a8d5034a_Trait> _32717_t = *it;
			{
				if ((_1a8d50ee9_FindMethod(_32717_t.ptr(), (*((*((*(_32643_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1ad4988b2:;
			++it;
			goto _iter_begin_1ad4988b2;
		}
		_iter_end_1ad4988b2:;
	};
	return false;;
}



inline void _1a9a73325_eliminateDeadCodeOfScope(jule::Ptr<_1a8d7de17_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1a8d817aa_Label>> _2425_labels = jule::Slice<jule::Ptr<_1a8d817aa_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1a8d81b84_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1a8d81b84_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1a9a700e1_scopeDeadCode> _2449_sdc = jule::new_ptr<_1a9a700e1_scopeDeadCode>(_1a9a700e1_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1a8d817aa_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1a8d81b84_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1a9a72ee5_optimizeStmts(_2449_sdc);
	};
}



inline void _1a9a7359a_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a8d3be91_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5038b7:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad505e3b:;
					if (it != expr_end) {
						jule::Ptr<_1a8d3ee72_FnIns> _25621_ins = *it;
						{
							_1a9a73325_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1ad505e3b:;
						++it;
						goto _iter_begin_1ad505e3b;
					}
					_iter_end_1ad505e3b:;
				};
			}
			_iter_next_1ad5038b7:;
			++it;
			goto _iter_begin_1ad5038b7;
		}
		_iter_end_1ad5038b7:;
	};
}



inline void _1a9a737cb_eliminateFunctionsScopePackage(jule::Ptr<_1a8da3dc6_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5068cb:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _26317_f = *it;
			{
				_1a9a7359a_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1ad5068cb:;
			++it;
			goto _iter_begin_1ad5068cb;
		}
		_iter_end_1ad5068cb:;
	};
}



inline void _1a9a73a84_eliminateScopePackage(jule::Ptr<_1a8da3dc6_Package>* _26831_pkg) {
	_1a9a737cb_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1a9a73c82_EliminateScopes(jule::Ptr<_1a990452a_IR>* _27325_ir) {
	jule::I32 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1a8da0ea0_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1a9a73a84_eliminateScopePackage(&((*_27613_u.alloc)._field_Package));
			};
		}
	_iter_next_1ad5080e7:;
	}
	_iter_end_1ad5080e7:;;
	_1a9a73a84_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1a907453b_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1a9074904_equalConst(jule::Ptr<_20a2b7552_Const> _2115_l, jule::Ptr<_20a2b7552_Const> _2126_r) {
	{
		
		if (_20a2bb523_IsI64(_2115_l.ptr())) {
			_case_begin_1ad107873:;
			{
				return (_20a2bb523_IsI64(_2126_r.ptr()) && (_20a2b8e27_ReadI64(_2115_l) == _20a2b8e27_ReadI64(_2126_r)));;
			}
		}
		else if (_20a2bb7a9_IsU64(_2115_l.ptr())) {
			_case_begin_1ad1078d9:;
			{
				return (_20a2bb7a9_IsU64(_2126_r.ptr()) && (_20a2b91ad_ReadU64(_2115_l) == _20a2b91ad_ReadU64(_2126_r)));;
			}
		}
		else if (_20a2bc05c_IsF64(_2115_l.ptr())) {
			_case_begin_1ad107950:;
			{
				return (_20a2bc05c_IsF64(_2126_r.ptr()) && (_20a2b9961_ReadF64(_2115_l) == _20a2b9961_ReadF64(_2126_r)));;
			}
		}
		else if (_20a2bbcc6_IsStr(_2115_l.ptr())) {
			_case_begin_1ad1079c7:;
			{
				return (_20a2bbcc6_IsStr(_2126_r.ptr()) && (_20a2b96ca_ReadStr(_2115_l) == _20a2b96ca_ReadStr(_2126_r)));;
			}
		}
		else if (_20a2bba40_IsBool(_2115_l.ptr())) {
			_case_begin_1ad107a4e:;
			{
				return (_20a2bba40_IsBool(_2126_r.ptr()) && (_20a2b9444_ReadBool(_2115_l) == _20a2b9444_ReadBool(_2126_r)));;
			}
		}
		else if (_20a2bc2e3_IsNil(_2115_l.ptr())) {
			_case_begin_1ad107b92:;
			{
				return _20a2bc2e3_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1ad107785:;
			{
				return false;;
			}
		}
		_match_end_1ad1072ce:;
	};
}



inline jule::Bool _1a9074c78_equalCasting(jule::Ptr<_1a8d3077b_CastingExprModel> _4017_l, jule::Ptr<_1a8d3077b_CastingExprModel> _4039_r) {
	if ((!(_1a8e83725_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1a9075bad_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*_4039_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a9075141_equalUnary(jule::Ptr<_1a8d2e527_UnaryExprModel> _4715_l, jule::Ptr<_1a8d2e527_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*_4715_l.alloc)._field_Op.alloc)._field_Kind != (*(*_4735_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1a9075bad_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*_4735_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a90754b5_equalIndexing(jule::Ptr<_1a8d319ad_IndexingExprModel> _5418_l, jule::Ptr<_1a8d319ad_IndexingExprModel> _5441_r) {
	return (_1a9075bad_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1a9075bad_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*_5441_r.alloc)._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1a9075839_equalBinary(jule::Ptr<_1a8d2e14d_BinaryExprModel> _5916_l, jule::Ptr<_1a8d2e14d_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*_5916_l.alloc)._field_Op.alloc)._field_Kind != (*(*_5937_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1a9075bad_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*_5937_r.alloc)._field_Left.alloc)._field_Model) && _1a9075bad_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*_5937_r.alloc)._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1a9075bad_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1a907453b_typeData(&(_7016_l)) != _1a907453b_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad116662:;
			{
				return (_7016_l.unsafe_cast_ptr<_1a8de41ad_Var>() == _7030_r.cast_ptr<_1a8de41ad_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad116ed1:;
			{
				jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _789_li = _7016_l.unsafe_cast_ptr<_1a8d33c9b_StructSubIdentExprModel>();;
				jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1a8d33c9b_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1a9075bad_equalModels((*((*_789_li.alloc)._field_Expr))._field_Model, (*(*_799_ri.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad117047:;
			{
				return _1a9074904_equalConst(_7016_l.unsafe_cast_ptr<_20a2b7552_Const>(), _7030_r.cast_ptr<_20a2b7552_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad116a80:;
			{
				return _1a9074c78_equalCasting(_7016_l.unsafe_cast_ptr<_1a8d3077b_CastingExprModel>(), _7030_r.cast_ptr<_1a8d3077b_CastingExprModel>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad116ae6:;
			{
				return _1a9075141_equalUnary(_7016_l.unsafe_cast_ptr<_1a8d2e527_UnaryExprModel>(), _7030_r.cast_ptr<_1a8d2e527_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad116b5c:;
			{
				return _1a90754b5_equalIndexing(_7016_l.unsafe_cast_ptr<_1a8d319ad_IndexingExprModel>(), _7030_r.cast_ptr<_1a8d319ad_IndexingExprModel>(&__jule_any_type44));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ad116bc3:;
			{
				return _1a9075839_equalBinary(_7016_l.unsafe_cast_ptr<_1a8d2e14d_BinaryExprModel>(), _7030_r.cast_ptr<_1a8d2e14d_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1ad11684e:;
			{
				return false;;
			}
		}
		_match_end_1ad11640e:;
	};
}



inline void _1a907b7c9_possibleNilRemove(jule::Ptr<_1a907a7ea_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1a907b09d_removeVar((*(_7827_n)).ptr(), _1a907c29c_getNilVar(_7837_m));
	};
}



inline jule::Bool _1a907bb92_isGuaranteedNonNilExpr(jule::Ptr<_1a907a7ea_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad11cd83:;
			{
				return true;;
			}
		}
		_match_end_1ad11cd2d:;
	};
	return (((*(_8432_n)) != nullptr) && _1a907b3de_isSafe((*(_8432_n)).ptr(), _1a907c29c_getNilVar(_8442_m)));;
}



inline jule::Bool _1a907be5b_isNilValidType(jule::Ptr<_1a8e8301b_TypeKind> _9223_t) {
	return (_1a8e85903_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1a907c29c_getNilVar(jule::Any _9414_m) {
	if ((!(_1a909821e_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad11e439:;
			{
				jule::Ptr<_1a8de41ad_Var> _1009_v = _9414_m.unsafe_cast_ptr<_1a8de41ad_Var>();;
				if ((!((*(_1009_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1a8de41ad_Var>());;
				};
				return _1a907c29c_getNilVar((*((*((*_1009_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad11e36d:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1a8d33c9b_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1ad11e3d4:;
	};
	return 0LLU;;
}



inline jule::Bool _1a90831d7_isStdPackage(jule::Str* _67718_f, jule::Str _67726_p) {
	return _224695680_HasPrefix((*(_67718_f)), _2246a01c3_Join(jule::Slice<jule::Str>::make({_22480d573_PathStdlib,_67726_p})));;
}



inline jule::Bool _1a90834e5_isConstantValidConditionalCase(jule::Ptr<_1a8d7e335_If>* _68136_i) {
	{
		auto &_match_expr{ (*((*(_68136_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad127860:;
			{
				jule::Ptr<_20a2b7552_Const> _6849_c = (*((*(_68136_i))))._field_Expr.unsafe_cast_ptr<_20a2b7552_Const>();;
				return (_20a2bba40_IsBool(_6849_c.ptr()) && _20a2b9444_ReadBool(_6849_c));;
			}
		}
		_match_end_1ad12780a:;
	};
	return false;;
}



inline jule::Bool _1a90837ae_isUnreachableExpr(jule::Any* _69023_expr) {
	{
		auto &_match_expr{ (*(_69023_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad127be5:;
			{
				jule::Ptr<_20a2b7552_Const> _6939_c = (*(_69023_expr)).cast_ptr<_20a2b7552_Const>(&__jule_any_type19);;
				return (_20a2bba40_IsBool(_6939_c.ptr()) && (!(_20a2b9444_ReadBool(_6939_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ad127909:;
			{
				jule::Ptr<_1a8d2e14d_BinaryExprModel> _6969_m = (*(_69023_expr)).cast_ptr<_1a8d2e14d_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_6969_m))._field_Op))._field_Id == static_cast<jule::U32>(54LLU))) {
					return (_1a90837ae_isUnreachableExpr(&((*((*_6969_m.alloc)._field_Left))._field_Model)) || _1a90837ae_isUnreachableExpr(&((*((*_6969_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1ad127b90:;
	};
	return false;;
}



inline jule::Bool _1a9083b00_isConstantValidMatchCase(jule::Ptr<_1a8d83b53_Case>* _70530_case) {
	{
		auto expr = &((*((*(_70530_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad12c06d:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4bcb5_Data> *_70612_expr = it;
			{
				if (((_1a8e4c6bc_IsConst((*(_70612_expr)).ptr()) && _20a2bba40_IsBool((*(*(_70612_expr)).alloc)._field_Constant.ptr())) && _20a2b9444_ReadBool((*(*(_70612_expr)).alloc)._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1ad12c06d:;
			++it;
			goto _iter_begin_1ad12c06d;
		}
		_iter_end_1ad12c06d:;
	};
	return false;;
}



inline jule::Bool _1a9083d86_isUnreachableConditionalCase(jule::Ptr<_1a8d7e335_If>* _71434_i) {
	return _1a90837ae_isUnreachableExpr(&((*((*(_71434_i))))._field_Expr));;
}



inline jule::Bool _1a9084150_isUnreachableMatchCase(jule::Ptr<_1a8d83b53_Case>* _71828_case) {
	{
		auto expr = &((*((*(_71828_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad12e02b:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4bcb5_Data> *_71912_expr = it;
			{
				if ((!(_1a90837ae_isUnreachableExpr(&((*((*(_71912_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1ad12e02b:;
			++it;
			goto _iter_begin_1ad12e02b;
		}
		_iter_end_1ad12e02b:;
	};
	return true;;
}



inline jule::Bool _1a9084419_isForwarded(jule::Ptr<_1a8d7de17_Scope>* _72717_s) {
	jule::Any _7285_last = (*((*(_72717_s))))._field_Stmts[((*((*(_72717_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _7285_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad130846:;
			{
				{
					auto &_match_expr{ (*(_7285_last.cast_ptr<_1a8e4bcb5_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1ad130a22:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ad1316e3:;
						{
							return false;;
						}
					}
					_match_end_1ad13168d:;
				};
			}
		}
		else {
			_case_begin_1ad1309ab:;
			{
				return true;;
			}
		}
		_match_end_1ad130956:;
	};
}



inline __jule_tuple_bool__jule_tuple_u64 _1a908dc92_checkForBitShiftOpt(jule::Ptr<_1a8d2db53_OperandExprModel>* _77925_l, jule::Ptr<_1a8d2db53_OperandExprModel>* _77948_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_20a2b68d6_IsInt(_1a8e833d4_Str((*((*(_77925_l))))._field_Kind.ptr())))) || (!(_20a2b68d6_IsInt(_1a8e833d4_Str((*((*(_77948_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_20a2b9e7d_AsU64((*((*(_77948_r))))._field_Model.cast_ptr<_20a2b7552_Const>(&__jule_any_type19).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _7875_j = _20a268bda_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _7885_z = static_cast<jule::U64>(_7875_j);;
	if ((static_cast<jule::F64>(_7885_z) != _7875_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _7885_z;
	return __jule_func_result;;
}



inline jule::Bool _1a908e15a_areSameLvalueExprModel(jule::Any* _79628_l, jule::Any* _79643_r) {
	{
		auto &_match_expr{ (*(_79628_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad5e85d3:;
			{
				return ((*(_79643_r)) == (*(_79628_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad5e83b3:;
			{
				{
					auto &_match_expr{ (*(_79643_r)) };
					
					if (_match_expr.type == &__jule_any_type98) {
						_case_begin_1ad5e902e:;
						{
							goto _match_end_1ad5e8dec;
						}
					}
					else {
						_case_begin_1ad5e91c7:;
						{
							return false;;
						}
					}
					_match_end_1ad5e8dec:;
				};
				jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _8099_lsi = (*(_79628_l)).cast_ptr<_1a8d33c9b_StructSubIdentExprModel>(&__jule_any_type98);;
				jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _8109_rsi = (*(_79643_r)).cast_ptr<_1a8d33c9b_StructSubIdentExprModel>(&__jule_any_type98);;
				if (((*(_8099_lsi))._field_Field != (*(_8109_rsi))._field_Field)) {
					return false;;
				};
				return _1a908e15a_areSameLvalueExprModel(&((*((*_8099_lsi.alloc)._field_Expr))._field_Model), &((*(*_8109_rsi.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad5e8649:;
			{
				{
					auto &_match_expr{ (*(_79643_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1ad5eabac:;
						{
							jule::Ptr<_1a8d2e527_UnaryExprModel> _82213_ul = (*(_79628_l)).cast_ptr<_1a8d2e527_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1a8d2e527_UnaryExprModel> _82313_ur = (*(_79643_r)).cast_ptr<_1a8d2e527_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_82213_ul))._field_Op))._field_Id != (*(*(_82313_ur))._field_Op.alloc)._field_Id) || ((*(*_82213_ul.alloc)._field_Op.alloc)._field_Kind != (*(*_82313_ur.alloc)._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1a908e15a_areSameLvalueExprModel(&((*((*_82213_ul.alloc)._field_Expr))._field_Model), &((*(*_82313_ur.alloc)._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1ad5ea4b4:;
				};
			}
		}
		_match_end_1ad5e8539:;
	};
	return false;;
}



inline void _1a909116d_possibleDynamicRemove(jule::Ptr<_1a90900d4_dynamic>* _8031_d, jule::Any _8044_m) {
	if (((*(_8031_d)) != nullptr)) {
		_1a9090887_removeVar((*(_8031_d)).ptr(), _1a9091beb_getDynamicVar(_8044_m));
	};
}



inline jule::Bool _1a909147b_isDynamicValidType(jule::Ptr<_1a8e8301b_TypeKind> _8627_t) {
	return _1a9091e82_isAny(&(_8627_t));;
}



inline jule::Ptr<_1a8e8301b_TypeKind> _1a90918aa_isTypeGuaranteedDynamicData(jule::Ptr<_1a90900d4_dynamic>* _8837_dy, jule::Ptr<_1a8e8301b_TypeKind> _8855_t, jule::Any _8873_m) {
	jule::Bool _895_isAny = _1a9091e82_isAny(&(_8855_t));;
	if (((!(_895_isAny)) && (_1a8e86e76_Trait(_8855_t.ptr()) == nullptr))) {
		return _8855_t;;
	};
	if ((!(_895_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8873_m };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad2bd3eb:;
			{
				jule::Ptr<_1a8d3077b_CastingExprModel> _9813_cem = _8873_m.unsafe_cast_ptr<_1a8d3077b_CastingExprModel>();;
				return _1a90918aa_isTypeGuaranteedDynamicData(_8837_dy, (*(_9813_cem))._field_ExprKind, (*((*_9813_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1ad2bd709:;
	};
	jule::Uintptr _1015_var = _1a9091beb_getDynamicVar(_8873_m);;
	if ((_1015_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8837_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2c0200:;
		if (it != expr_end) {
			_1a908ec93_dynamicVar _10517_v = *it;
			{
				if ((_10517_v._field_var == _1015_var)) {
					return _10517_v._field_kind;;
				};
			}
			_iter_next_1ad2c0200:;
			++it;
			goto _iter_begin_1ad2c0200;
		}
		_iter_end_1ad2c0200:;
	};
	return nullptr;;
}



inline jule::Uintptr _1a9091beb_getDynamicVar(jule::Any _11318_m) {
	if ((!(_1a9099c04_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11318_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad2c091a:;
			{
				jule::Ptr<_1a8de41ad_Var> _1199_v = _11318_m.unsafe_cast_ptr<_1a8de41ad_Var>();;
				if ((!((*(_1199_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11318_m.unsafe_cast_ptr<_1a8de41ad_Var>());;
				};
				return _1a9091beb_getDynamicVar((*((*((*_1199_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad2c07e9:;
			{
				return static_cast<jule::Uintptr>((*(_11318_m.unsafe_cast_ptr<_1a8d33c9b_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad2c12de:;
			{
				jule::Ptr<_1a8d2e527_UnaryExprModel> _1309_uem = _11318_m.unsafe_cast_ptr<_1a8d2e527_UnaryExprModel>();;
				if (((*((*(_1309_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1a9091beb_getDynamicVar((*((*_1309_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1ad2c0871:;
	};
	return 0LLU;;
}



inline jule::Bool _1a9091e82_isAny(jule::Ptr<_1a8e8301b_TypeKind>* _13915_t) {
	if ((_1a8e861a6_TypeEnum((*(_13915_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _1435_prim = _1a8e8566c_Prim((*(_13915_t)).ptr());;
	return ((_1435_prim != nullptr) && _1a8e8e313_IsAny(_1435_prim));;
}



inline jule::Bool _1a909598b_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1a90961c8_fitsSize(_8424_m, _8424_m);;
}



inline jule::I32 _1a9095d54_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2d1d38:;
		if (it != expr_end) {
			jule::I32 _909_i = it - expr->begin();
			jule::Any *_9012_m = it;
			{
				if (_1a90961c8_fitsSize((*(_9012_m)), _8934_expr)) {
					return _909_i;;
				};
			}
			_iter_next_1ad2d1d38:;
			++it;
			_909_i++;
			goto _iter_begin_1ad2d1d38;
		}
		_iter_end_1ad2d1d38:;
	};
	return -1LL;;
}



inline jule::Bool _1a90961c8_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1a907453b_typeData(&(_9813_e1)) != _1a907453b_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad2d3851:;
			{
				jule::Ptr<_20a2b7552_Const> _1049_exprConst = _9828_e2.cast_ptr<_20a2b7552_Const>(&__jule_any_type19);;
				return ((_20a2ba214_AsF64(_1049_exprConst.ptr()) >= 0LL) && _20a2bde1b_GtEq(_9813_e1.unsafe_cast_ptr<_20a2b7552_Const>().ptr(), (*_1049_exprConst.alloc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad2d38b7:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad2d392d:;
			{
				jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _1099_ssi1 = _9813_e1.unsafe_cast_ptr<_1a8d33c9b_StructSubIdentExprModel>();;
				jule::Ptr<_1a8d33c9b_StructSubIdentExprModel> _1109_ssi2 = _9828_e2.cast_ptr<_1a8d33c9b_StructSubIdentExprModel>(&__jule_any_type98);;
				return (_1a9075bad_equalModels((*((*(_1099_ssi1))._field_Expr))._field_Model, (*(*(_1109_ssi2))._field_Expr.alloc)._field_Model) && ((*_1099_ssi1.alloc)._field_Field == (*_1109_ssi2.alloc)._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad2d3994:;
			{
				jule::Ptr<_1a8d2e527_UnaryExprModel> _1139_uem1 = _9813_e1.unsafe_cast_ptr<_1a8d2e527_UnaryExprModel>();;
				jule::Ptr<_1a8d2e527_UnaryExprModel> _1149_uem2 = _9828_e2.cast_ptr<_1a8d2e527_UnaryExprModel>(&__jule_any_type110);;
				if ((((*((*(_1139_uem1))._field_Op))._field_Id != static_cast<jule::U32>(62LLU)) || ((*(*_1139_uem1.alloc)._field_Op.alloc)._field_Id != (*(*(_1149_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1a90961c8_fitsSize((*((*_1139_uem1.alloc)._field_Expr))._field_Model, (*(*_1149_uem2.alloc)._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1ad2d2542:;
			{
				return false;;
			}
		}
		_match_end_1ad2d24dc:;
	};
}



inline void _1a9096508_possibleBoundaryRemove(jule::Ptr<_1a9094924_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2d3cb3:;
		if (it != expr_end) {
			_1a90945d3_boundaryVar _12617_v = *it;
			{
				{
					auto expr = &(_12617_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad2da6c1:;
					if (it != expr_end) {
						jule::I32 _12713_i = it - expr->begin();
						jule::Any _12716_max = *it;
						{
							if (_1a9075bad_equalModels(_12716_max, _12446_model)) {
								_12617_v._field_maxSize=jule::append(_12617_v._field_maxSize.slice(0LL, _12713_i),_12617_v._field_maxSize.slice((_12713_i + 1LL)));
								goto _iter_end_1ad2da6c1;
							};
						}
						_iter_next_1ad2da6c1:;
						++it;
						_12713_i++;
						goto _iter_begin_1ad2da6c1;
					}
					_iter_end_1ad2da6c1:;
				};
			}
			_iter_next_1ad2d3cb3:;
			++it;
			goto _iter_begin_1ad2d3cb3;
		}
		_iter_end_1ad2d3cb3:;
	};
}



inline jule::Bool _1a90967c2_isBoundaryRiskyType(jule::Ptr<_1a8e8301b_TypeKind> _13628_t) {
	return (_1a8e8643c_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1a9096a8b_isBoundaryValidType(jule::Ptr<_1a8e8301b_TypeKind> _14128_t) {
	return ((_1a8e866c3_Slc(_14128_t.ptr()) != nullptr) || (_1a8e8643c_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1a9096d55_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1a909821e_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad2dcbe0:;
			{
				jule::Ptr<_1a8de41ad_Var> _1499_v = _14319_m.unsafe_cast_ptr<_1a8de41ad_Var>();;
				if ((!((*(_1499_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1a8de41ad_Var>());;
				};
				return _1a9096d55_getBoundaryVar((*((*((*_1499_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad2dd031:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1a8d33c9b_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad2dcc89:;
			{
				jule::Ptr<_1a8d2e527_UnaryExprModel> _1609_uem = _14319_m.unsafe_cast_ptr<_1a8d2e527_UnaryExprModel>();;
				if (((*((*(_1609_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1a9096d55_getBoundaryVar((*((*_1609_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1ad2dcb8a:;
	};
	return 0LLU;;
}



inline void _1a9099dd0_PushOptLevel(jule::I32 _3217_level) {
	jule::Bool _335_l1 = (_3217_level >= static_cast<jule::I32>(1LL));;
	_1a90975b4_Copy=_335_l1;
	_1a90978b1_Deadcode=_335_l1;
	_1a9097b69_Append=_335_l1;
	_1a9097e66_Math=_335_l1;
	_1a909821e_Access=_335_l1;
	_1a90984c7_Inline=_335_l1;
	_1a9098780_Ptr=_335_l1;
	_1a9098b48_Cond=_335_l1;
	_1a9098d8a_Str=_335_l1;
	_1a9099132_Slice=_335_l1;
	_1a90993da_Assign=_335_l1;
	_1a9099693_Exceptional=_335_l1;
	_1a909994b_Iter=_335_l1;
	_1a9099c04_Dynamic=_335_l1;
}



inline void _1a9a7d220_detectEnabled(void) {
	_1a9a7ae54_exprEnabled=(((_1a9098780_Ptr || _1a9097e66_Math) || _1a909821e_Access) || _1a9098b48_Cond);
	_1a9a7b21d_scopeEnabled=((((((((_1a9098b48_Cond || _1a9097b69_Append) || _1a90975b4_Copy) || _1a9098d8a_Str) || _1a9099132_Slice) || _1a90993da_Assign) || _1a9099693_Exceptional) || _1a909994b_Iter) || _1a9099c04_Dynamic);
}



inline void _1a9aabade_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_22480d034_Exit(1LL);
}



inline jule::U64 _1aa2d6a99_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1aa215d3b_isCopyOptimizable(jule::Ptr<_1a8e4bcb5_Data>* _104823_expr) {
	if ((!((*((*(_104823_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_104823_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ad6cd586:;
			{
				return false;;
			}
		}
		_match_end_1ad6cd531:;
	};
	return true;;
}



inline jule::Bool _1aa216204_isIterCopyOptimizable(jule::Ptr<_1a8e4bcb5_Data>* _105927_expr, jule::Ptr<_1a8de41ad_Var>* _105941_v) {
	if (((!((*((*(_105927_expr))))._field_Lvalue)) && (!(_1a8e8489c_Mutable((*((*(_105927_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_105941_v))))._field_Mutable)) && (!((*((*(_105927_expr))))._field_Mutable)));;
}



inline jule::Bool _1aa216633_captureVarHandling(jule::Ptr<_1aa2e0586_ObjectCoder>* _106628_oc, jule::Ptr<_1a8d31e64_AnonFnExprModel>* _106651_m, jule::Ptr<_1a8de41ad_Var>* _106677_v) {
	{
		auto expr = &((*((*(_106651_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6d0720:;
		if (it != expr_end) {
			jule::Ptr<_1a8de41ad_Var> _106712_cv = *it;
			{
				if ((_106712_cv == (*(_106677_v)))) {
					_1aa2e0c6d_write((*(_106628_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1aa23086c_var(&((*((*(_106628_oc))))._field_Buf), (*(_106677_v)));
					return true;;
				};
			}
			_iter_next_1ad6d0720:;
			++it;
			goto _iter_begin_1ad6d0720;
		}
		_iter_end_1ad6d0720:;
	};
	return false;;
}



inline jule::Str _1aa227369_decomposeCommonEsq(jule::U8 _158223_b) {
	{
		auto &_match_expr{ _158223_b };
		
		if (_match_expr == '\\') {
			_case_begin_1ad97ca22:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ad97c88a:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ad97c901:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1ad97c406:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1ad97c46c:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1ad97c4e4:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1ad97c56b:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1ad97c5e3:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1ad97ca88:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1ad97caee:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1ad97ab63:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ad97c3a1:;
	};
}



inline jule::Str _1aa227677_sbtoa(jule::U8 _160910_b) {
	if ((_160910_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_160910_b < 128LLU)) {
		jule::Str _16149_seq = _1aa227369_decomposeCommonEsq(_160910_b);;
		if (!(_16149_seq).empty()) {
			return _16149_seq;;
		};
		if (((32LL <= _160910_b) && (_160910_b <= 126LLU))) {
			return jule::Str::from_byte(_160910_b);;
		};
	};
	jule::Str _16225_seq = _20a2a8d07_FmtUint(static_cast<jule::U64>(_160910_b), 8LL);;
	if ((_16225_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _16225_seq);;
	};
	return (jule::Str::lit("\\", 1) + _16225_seq);;
}



inline void _1aa227963_cstrBytes(_2234c269a_StrBuilder* _162919_s, jule::Str _162934_ctx) {
	{
		auto expr = &(_162934_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad982807:;
		if (it != expr_end) {
			jule::U8 *_163012_b = it;
			{
				_2234c313a_WriteStr(_162919_s, _1aa227677_sbtoa((*(_163012_b))));
			}
			_iter_next_1ad982807:;
			++it;
			goto _iter_begin_1ad982807;
		}
		_iter_end_1ad982807:;
	};
}



inline void _1aa227c93_cstrLit(_2234c269a_StrBuilder* _163517_s, jule::Str _163532_ctx) {
	_2234c33e3_WriteByte(_163517_s, '\"');
	_1aa227963_cstrBytes(_163517_s, _163532_ctx);
	_2234c33e3_WriteByte(_163517_s, '\"');
}



inline void _1aa228139_ftoa(_2234c269a_StrBuilder* _164114_s, jule::F64 _164129_f, jule::I32 _164137_bitsize) {
	if ((_164137_bitsize != 32LL)) {
		if ((_164129_f == static_cast<jule::F64>(static_cast<jule::I64>(_164129_f)))) {
			_1aa228425_itoa(_164114_s, static_cast<jule::I64>(_164129_f));
			return;;
		};
		if ((_164129_f == static_cast<jule::F64>(static_cast<jule::U64>(_164129_f)))) {
			_1aa228711_utoa(_164114_s, static_cast<jule::U64>(_164129_f));
			return;;
		};
	};
	jule::Str _16525_m = _20a292681_FmtFloat(_164129_f, 'f', -1LL, _164137_bitsize);;
	_2234c313a_WriteStr(_164114_s, _16525_m);
	if ((!(_224699b4b_Contains(_16525_m, jule::Str::lit(".", 1))))) {
		_2234c313a_WriteStr(_164114_s, jule::Str::lit(".0", 2));
	};
}



inline void _1aa228425_itoa(_2234c269a_StrBuilder* _165914_s, jule::I64 _165929_x) {
	{
		
		if ((_165929_x == jule::MAX_I64)) {
			_case_begin_1ad986ad6:;
			{
				_2234c313a_WriteStr(_165914_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_165929_x == jule::MIN_I64)) {
			_case_begin_1ad986b80:;
			{
				_2234c313a_WriteStr(_165914_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1ad9869c6:;
	};
	_2234c313a_WriteStr(_165914_s, _20a2a91c0_FmtInt(_165929_x, 10LL));
	if (_2247488dc_Is64Bit(jule::Str::lit("i386", 4))) {
		_2234c33e3_WriteByte(_165914_s, 'L');
	};
	_2234c33e3_WriteByte(_165914_s, 'L');
}



inline void _1aa228711_utoa(_2234c269a_StrBuilder* _167614_s, jule::U64 _167629_x) {
	{
		
		if ((_167629_x == jule::MAX_U64)) {
			_case_begin_1ad988c2b:;
			{
				_2234c313a_WriteStr(_167614_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1ad988ae9:;
	};
	_2234c313a_WriteStr(_167614_s, _20a2a8d07_FmtUint(_167629_x, 10LL));
	if (_2247488dc_Is64Bit(jule::Str::lit("i386", 4))) {
		_2234c33e3_WriteByte(_167614_s, 'L');
	};
	_2234c313a_WriteStr(_167614_s, jule::Str::lit("LU", 2));
}



inline jule::Bool _1aa228ada_isForwarded(jule::Ptr<_1a8d7de17_Scope>* _169017_s) {
	jule::Any _16915_last = (*((*(_169017_s))))._field_Stmts[((*((*(_169017_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16915_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad98ae5e:;
			{
				{
					auto &_match_expr{ (*(_16915_last.cast_ptr<_1a8e4bcb5_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1ad98b13a:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ad98bcd9:;
						{
							return false;;
						}
					}
					_match_end_1ad98bc73:;
				};
			}
		}
		else {
			_case_begin_1ad98b0c4:;
			{
				return true;;
			}
		}
		_match_end_1ad98aed6:;
	};
}



inline jule::Bool _1aa228d2c_isExprComesFromBind(jule::Ptr<_1a8e4bcb5_Data>* _170525_d) {
	{
		auto &_match_expr{ (*((*(_170525_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad98c02b:;
			{
				return (*((*((*(_170525_d))))._field_Model.unsafe_cast_ptr<_1a8de41ad_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad98c9aa:;
			{
				return (*((*((*((*((*(_170525_d))))._field_Model.unsafe_cast_ptr<_1a8d33c9b_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1ad98c4e3:;
			{
				return false;;
			}
		}
		_match_end_1ad98c48d:;
	};
}



inline jule::Bool _1aa2290e6_isAny(jule::Ptr<_1a8e8301b_TypeKind>* _171715_t) {
	if ((_1a8e861a6_TypeEnum((*(_171715_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a8e8aae5_Prim> _17215_prim = _1a8e8566c_Prim((*(_171715_t)).ptr());;
	return ((_17215_prim != nullptr) && _1a8e8e313_IsAny(_17215_prim));;
}



inline jule::Bool _1aa2293b0_isClosure(jule::Ptr<_1a8d31e64_AnonFnExprModel>* _172515_m) {
	return ((*((*(_172515_m))))._field_Captured.len() > 0LL);;
}



inline void _1aa2ed71a_iterFiles(jule::Ptr<_1a8da3dc6_Package>* _141519_pkg, jule::Fn<void,jule::Ptr<_1a8e4694c_SymbolTable>*> _141534_f) {
	{
		auto expr = &((*((*(_141519_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb2eec1:;
		if (it != expr_end) {
			jule::Ptr<_1a8e4694c_SymbolTable> _141617_file = *it;
			{
				_141534_f(&(_141617_file));
			}
			_iter_next_1adb2eec1:;
			++it;
			goto _iter_begin_1adb2eec1;
		}
		_iter_end_1adb2eec1:;
	};
}



inline jule::Slice<jule::U8> _1aa2eda28_concatAllParts(jule::Slice<jule::Ptr<_1a875ce89_Token>> _142219_parts) {
	jule::I32 _14239_n = 0LL;;
	{
		auto expr = &(_142219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb30e6c:;
		if (it != expr_end) {
			jule::Ptr<_1a875ce89_Token> *_142412_part = it;
			{
				_14239_n+=(*((*(_142412_part))))._field_Kind.len();
			}
			_iter_next_1adb30e6c:;
			++it;
			goto _iter_begin_1adb30e6c;
		}
		_iter_end_1adb30e6c:;
	};
	if ((_14239_n == 0LL)) {
		return nullptr;;
	};
	_2234c269a_StrBuilder _14309_s = static__2234c2ac9_New(_14239_n);;
	{
		auto expr = &(_142219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb30b09:;
		if (it != expr_end) {
			jule::Ptr<_1a875ce89_Token> *_143112_p = it;
			{
				_2234c313a_WriteStr(&_14309_s, (*((*(_143112_p))))._field_Kind);
			}
			_iter_next_1adb30b09:;
			++it;
			goto _iter_begin_1adb30b09;
		}
		_iter_end_1adb30b09:;
	};
	return _2234c43d3_Buf(&_14309_s);;
}



inline jule::Bool _1aa2edd9c_containsTraitMethod(jule::Ptr<_1a8d5034a_Trait>* _143829_t, jule::Str* _143841_ident) {
	{
		auto expr = &((*((*(_143829_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb33090:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _143912_m = *it;
			{
				if (((*(_143912_m))._field_Ident == (*(_143841_ident)))) {
					return true;;
				};
			}
			_iter_next_1adb33090:;
			++it;
			goto _iter_begin_1adb33090;
		}
		_iter_end_1adb33090:;
	};
	return false;;
}



inline void _1aa2ee1cc_pushMethodsFromInherit(jule::Ptr<_1a8d5034a_Trait>* _145032_dest, jule::Ptr<_1a8d5034a_Trait>* _145051_src) {
	_1aa2ee4b8_pushMethodsFromInherits(_145032_dest, _145051_src);
	{
		auto expr = &((*((*(_145051_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb34118:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _145217_m = *it;
			{
				if ((!(_1aa2edd9c_containsTraitMethod(_145032_dest, &((*(_145217_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1a8d3be91_Fn>> &__jule_push_dest = (*((*(_145032_dest))))._field_Methods; __jule_push_dest.push(_145217_m); };
				};
			}
			_iter_next_1adb34118:;
			++it;
			goto _iter_begin_1adb34118;
		}
		_iter_end_1adb34118:;
	};
}



inline void _1aa2ee4b8_pushMethodsFromInherits(jule::Ptr<_1a8d5034a_Trait>* _146133_dest, jule::Ptr<_1a8d5034a_Trait>* _146152_src) {
	{
		auto expr = &((*((*(_146152_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb35889:;
		if (it != expr_end) {
			jule::Ptr<_1a8e8a1dd_TypeSymbol> _146217_inh = *it;
			{
				jule::Ptr<_1a8d5034a_Trait> _146313_t2 = _1a8e86e76_Trait((*(_146217_inh))._field_Kind.ptr());;
				_1aa2ee1cc_pushMethodsFromInherit(_146133_dest, &(_146313_t2));
			}
			_iter_next_1adb35889:;
			++it;
			goto _iter_begin_1adb35889;
		}
		_iter_end_1adb35889:;
	};
}



inline jule::Bool _1aa2ee782_isOpMethod(jule::Ptr<_1a8d3be91_Fn>* _146916_m) {
	if ((((*((*(_146916_m))))._field_Generics.len() > 0LL) || ((*((*(_146916_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _14735_mi = (*((*(_146916_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14735_mi == (*(*_14735_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1aa2eea4b_isHeadDecl(jule::Ptr<_1a8d3be91_Fn>* _148520_m) {
	if ((((*((*(_148520_m))))._field_Generics.len() > 0LL) || ((*((*(_148520_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1aa2ee782_isOpMethod(_148520_m)) {
		return true;;
	};
	jule::Ptr<_1a8d3ee72_FnIns> _14929_mi = (*((*(_148520_m))))._field_Instances[0LL];;
	;
	return static__1a8de5654_Dispose(_1a8d2ac1b_FindMethod((*(_14929_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Ptr<_1a8772982_Directive> _1aa30d8a1_findDirective(jule::Slice<jule::Ptr<_1a8772982_Directive>>* _46123_directives, jule::Str _46154_tag) {
	{
		auto expr = _46123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adcc19ae:;
		if (it != expr_end) {
			jule::Ptr<_1a8772982_Directive> _46217_dr = *it;
			{
				if (((*((*(_46217_dr))._field_Tag))._field_Kind == _46154_tag)) {
					return _46217_dr;;
				};
			}
			_iter_next_1adcc19ae:;
			++it;
			goto _iter_begin_1adcc19ae;
		}
		_iter_end_1adcc19ae:;
	};
	return nullptr;;
}



inline jule::Bool _1aa30dc69_hasDirective(jule::Slice<jule::Ptr<_1a8772982_Directive>>* _47118_directives, jule::Str _47149_tag) {
	return (_1aa30d8a1_findDirective(&((*(_47118_directives))), _47149_tag) != nullptr);;
}



inline jule::Bool _1aa30e033_shouldInitialized(jule::Ptr<_1a8e8301b_TypeKind>* _47827_t) {
	jule::Ptr<_1a8e8aae5_Prim> _4795_prim = _1a8e8566c_Prim((*(_47827_t)).ptr());;
	if ((_4795_prim != nullptr)) {
		return ((!(_1a8e8e313_IsAny(_4795_prim))) && (!(_1a8e8e07c_IsStr(_4795_prim))));;
	};
	{
		
		if ((_1a8e85903_Sptr((*(_47827_t)).ptr()) != nullptr)) {
			_case_begin_1adcc4792:;
			{
				return false;;
			}
		}
		else if ((_1a8e8720c_Map((*(_47827_t)).ptr()) != nullptr)) {
			_case_begin_1adcc4808:;
			{
				return false;;
			}
		}
		else if ((_1a8e866c3_Slc((*(_47827_t)).ptr()) != nullptr)) {
			_case_begin_1adcc486e:;
			{
				return false;;
			}
		}
		else if ((_1a8e86e76_Trait((*(_47827_t)).ptr()) != nullptr)) {
			_case_begin_1adcc39c2:;
			{
				return false;;
			}
		}
		else if ((_1a8e86959_Fn((*(_47827_t)).ptr()) != nullptr)) {
			_case_begin_1adcc4929:;
			{
				return false;;
			}
		}
		else if ((_1a8e8643c_Arr((*(_47827_t)).ptr()) != nullptr)) {
			_case_begin_1adcc4990:;
			{
				jule::Ptr<_1a8e92415_Arr> _49513_arr = _1a8e8643c_Arr((*(_47827_t)).ptr());;
				return _1aa30e033_shouldInitialized(&((*(_49513_arr))._field_Elem));;
			}
		}
		else if ((_1a8e86be0_Struct((*(_47827_t)).ptr()) != nullptr)) {
			_case_begin_1adcc4a06:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1adcc394a:;
			{
				return true;;
			}
		}
		_match_end_1adcc3c9c:;
	};
}



inline void _2248123e0_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _224812665_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_2248123e0_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _419_max = _224812214_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_224812214_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1add69859:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I32 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1add69859:;
			++it;
			goto _iter_begin_1add69859;
		}
		_iter_end_1add69859:;
	};
	_2234c269a_StrBuilder _499_s = static__2234c2ac9_New(32LL);;
	;
	{
		auto expr = &(_224812214_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1add6b196:;
		if (it != expr_end) {
			jule::I32 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_2234c313a_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_2234c313a_WriteStr(&_499_s, _2246952b7_Repeat(jule::Str::lit(" ", 1), ((_419_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_2234c313a_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_2234c33e3_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1add6b196:;
			++it;
			_519_i++;
			goto _iter_begin_1add6b196;
		}
		_iter_end_1add6b196:;
	};
	jule::outln(_499_s);
}



inline void _224812896_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_2248123e0_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.16 @master", 18));
}



inline void _224812aa5_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _224812c1a_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _224812e18_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_2248123e0_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1add71ed2:;
			{
				_224812aa5_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1add7209d:;
			{
				_224812c1a_toolDistarch();
			}
		}
		else {
			_case_begin_1add709d6:;
			{
				_2248123e0_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1add71ac5:;
	};
}



inline void _224813149_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_2248123e0_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.16 @master", 33));
	jule::outln(jule::Str::lit("architecture: i386", 18));
	jule::outln(jule::Str::lit("operating system: windows", 25));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _22eb8b550_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _22eb8b96d_CppStd));
}



inline void _22481348a_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_2248123e0_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1add755bd:;
			{
				({
					auto except = static__2232d9d42_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_2248123e0_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1add741b0:;
			{
				_2248123e0_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1add750a1:;
	};
}



inline jule::Bool _2248136cc_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1add76a97:;
			{
				_224812665_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1add76b0d:;
			{
				_224812896_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1add76b74:;
			{
				_224812e18_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1add7635a:;
			{
				_224813149_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1add763c1:;
			{
				_22481348a_mod(_15320_args);
			}
		}
		else {
			_case_begin_1add75205:;
			{
				return false;;
			}
		}
		_match_end_1add75c83:;
	};
	return true;;
}



inline void _224813875_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _223502257_Args();;
	if ((_1899_args.len() < 2LL)) {
		_224813875_showInfo();
		return;;
	};
	if (_2248136cc_processCommand(&(_1899_args))) {
		return;;
	};
	_1aa37d48c_compileCommand(&(_1899_args));
}



inline void _224814304_enableVtp(void) {
	jule::Uintptr _195_hOut = _2232c0531_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));;
	if ((_195_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I32 _249_dwMode = 0LL;;
	if ((!(_2232c2aa5_GetConsoleMode(_195_hOut, &(_249_dwMode))))) {
		return;;
	};
	_249_dwMode|=4LL;
	_2232c31b0_SetConsoleMode(_195_hOut, _249_dwMode);
}



inline void _2248144be_init(void) {
	_224814304_enableVtp();
}



inline void _1aa37a3ac_init(void) {
	_22eb8b550_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_2232d8eea_File> _1aa37a676_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _2246a0db6_Dir((*(_4316_path)));;
	({
		auto except = static__2246a24b1_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__2246a18bc_Create(_445_dir);
				if (!except.ok()) {
					_1a9aabade_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__2232d96d2_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1a9aabade_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1aa37a81e_clearObjects(void) {
	({
		auto except = static__2233edcad_Remove(_1aa37b974_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__2246a1aed_Remove(_1aa379b5e_OutDir);
}



inline void _1aa37ab2c_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_224805e50_Cmd> _739_cmd = static__22480634b_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_2246997c7_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _224806549_Spawn(_739_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1add7e022:;
					{
						static__1a9aa7eb4_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1add7dbe2:;
					{
						static__1a9aa7eb4_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1add7da27:;
					{
						static__1a9aa7eb4_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1add7db37:;
			};
			_1a9aabade_Throw(jule::Str());
		}
	});
	jule::I32 _865_status = ({
		auto except = _2248069cd_Wait(_739_cmd);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _22eb8b550_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a9aa7eb4_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1a9aabade_Throw(jule::Str());
	};
	_1aa37a81e_clearObjects();
}



inline jule::Bool _1aa37ade6_isCppSourceFile(jule::Str _9920_path) {
	jule::I32 _1005_offset = _224698386_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _224736d92_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1aa37b127_pushCompCmdClang(_2234c269a_StrBuilder* _10726_cmd) {
	_2234c313a_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_2234c313a_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _22eb8b96d_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1add81d49:;
			{
				_2234c313a_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1add82c07:;
			{
				_2234c313a_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1add82c6d:;
			{
				_2234c313a_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1add81dc1:;
	};
	_2234c33e3_WriteByte(_10726_cmd, ' ');
	if (_22eb8c9d5_Production) {
		_2234c313a_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_2234c313a_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_2234c313a_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_2234c313a_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_2234c313a_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1aa37b358_pushCompCmdGcc(_2234c269a_StrBuilder* _13324_cmd) {
	_2234c313a_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_2234c313a_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _22eb8b96d_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1add8428b:;
			{
				_2234c313a_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1add85bb6:;
			{
				_2234c313a_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1add85c2c:;
			{
				_2234c313a_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1add84324:;
	};
	_2234c33e3_WriteByte(_13324_cmd, ' ');
	if (_22eb8c9d5_Production) {
		_2234c313a_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_2234c313a_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_2234c313a_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_2234c313a_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1aa37b7dc_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a990452a_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_22eb8b75e_CompilerPath);;
	_2234c269a_StrBuilder _1619_cmd = static__2234c2ac9_New(64LL);;
	{
		auto &_match_expr{ _22eb8b550_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1add888cd:;
			{
				_1aa37b358_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1add88e1c:;
			{
				_1aa37b127_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1add88ba8:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1add891c5:;
		if (it != expr_end) {
			jule::Ptr<_1a8da0ea0_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1aa37ade6_isCppSourceFile((*(*(_17112_u)).alloc)._field_Path))) {
					_2234c313a_WriteStr(&_1619_cmd, (*(*(_17112_u)).alloc)._field_Path);
					_2234c33e3_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1add891c5:;
			++it;
			goto _iter_begin_1add891c5;
		}
		_iter_end_1add891c5:;
	};
	if (!(_1aa37a203_Out).empty()) {
		_2234c313a_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_2234c313a_WriteStr(&_1619_cmd, _1aa37a203_Out);
		_2234c33e3_WriteByte(&_1619_cmd, ' ');
	};
	_2234c313a_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1add8bbcd:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_2234c33e3_WriteByte(&_1619_cmd, ' ');
				_2234c313a_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1add8bbcd:;
			++it;
			goto _iter_begin_1add8bbcd;
		}
		_iter_end_1add8bbcd:;
	};
	if (_22480e0ce_Os.equal("windows", 7)) {
		_2234c313a_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _2234c3932_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1aa37b974_getCompilePath(void) {
	return _2246a01c3_Join(jule::Slice<jule::Str>::make({_1aa379b5e_OutDir,_1aa379e4a_OutName}));;
}



inline void _1aa37bba5_applyTargetIndependentOptimizations(jule::Ptr<_1a990452a_IR>* _20545_ir) {
	jule::Ptr<_1a9a7b41b_Optimizer> _2069_opt = static__1a9a7b88e_New(_20545_ir);;
	_1a9a7ce78_Optimize(_2069_opt.ptr());
}



inline void _1aa37bd4d_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _22eb8b550_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1add8e3a6:;
			{
				_1a9aabade_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1add8e2da:;
			{
				if ((_22eb8b75e_CompilerPath).empty()) {
					_22eb8b75e_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1add8debb:;
			{
				if ((_22eb8b75e_CompilerPath).empty()) {
					_22eb8b75e_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1add8da9d:;
			{
				_1a9aabade_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _22eb8b550_Compiler));
			}
		}
		_match_end_1add8dd01:;
	};
}



inline void _1aa37c05c_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1a9aabade_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1aa37c28d_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1a9aabade_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1aa37c4be_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1a9aabade_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _2246997c7_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1a9aabade_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os;
	jule::Str _2539_arch;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1aa37c28d_checkTargetOs(_2535_os);
		_22480e0ce_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1aa37c05c_checkTargetArch(_2539_arch);
		_22480e387_Arch=_2539_arch;
	};
	_20a2ad856_UpdateTarget();
}



inline void _1aa37c700_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1a9aabade_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1add95c81:;
			{
				goto _match_end_1add954de;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1add95d2a:;
			{
				_1a9099dd0_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else {
			_case_begin_1add955cc:;
			{
				_1a9aabade_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1add954de:;
	};
}



inline void _1aa37cab8_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _22eb8b96d_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1add96ad9:;
			{
				goto _match_end_1add965bc;
			}
		}
		else {
			_case_begin_1add959b7:;
			{
				_1a9aabade_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _22eb8b96d_CppStd));
			}
		}
		_match_end_1add965bc:;
	};
}



inline jule::Slice<jule::Str> _1aa37cc83_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2939_opt = jule::Str::lit("L0", 2);;
	jule::Str _2949_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1aa374b48_FlagSet> _2969_fs = static__1aa374e34_New();;
	_1add984ae_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2939_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1add984ae_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_2949_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1add984ae_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_1aa37a203_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_22eb8bb7c_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_22eb8bd8b_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1add984ae_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_22eb8b550_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1add984ae_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_22eb8b75e_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_22eb8c9d5_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_22eb8c3ca_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_22eb8c793_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1add984ae_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_22eb8b96d_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a90975b4_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a90978b1_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a9097b69_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a9097e66_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a909821e_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a90984c7_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a9098780_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a9098b48_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a9098d8a_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a9099132_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a90993da_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a9099693_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a909994b_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1adda03ea_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a9099c04_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3249_content = ({
		auto except = _1aa375d03_Parse(_2969_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1a9aabade_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1aa37bd4d_checkCompilerFlag();
	_1aa37cab8_checkCppStdFlag();
	_1aa37c4be_checkTargetFlag(&(_2949_target));
	_1aa37c700_checkOptFlag(&(_2939_opt));
	return _3249_content;;
}



inline void _1aa37ce92_setupSemaFlags(jule::I32* _33724_flags) {
	if (_22eb8bb7c_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1a990452a_IR> _1aa37d25b_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3445_content = _1aa37cc83_checkFlags(_34313_args);;
	jule::I32 _3469_semaFlags = static_cast<jule::I32>(0LL);;
	_1aa37ce92_setupSemaFlags(&(_3469_semaFlags));
	if ((_3445_content.len() == 0LL)) {
		_1a9aabade_Throw(_224744377_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3445_content.len() > 1LL)) {
		_1a9aabade_Throw((jule::Str::lit("undefined content: ", 19) + _3445_content[1LL]));
	};
	jule::Str _3549_path;
	jule::Bool _35415_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2246a0723_Abs(_3445_content[0LL]);
		_3549_path = __jule_assign_result.__jule_result_arg0;
		_35415_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35415_ok))) {
		_1a9aabade_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_2232db12e_Status> _3605_inf = ({
		auto except = static__2246a24b1_Of(_22480d573_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a9aabade_Throw(_224744377_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_2232db12e_Status>(nullptr);});
	});;
	if ((!(_2232db508_IsDir(_3605_inf.ptr())))) {
		_1a9aabade_Throw(_224744377_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a990452a_IR> _3689_ir;
	jule::Slice<_224743e15_Log> _36813_logs;
	({
		__jule_tuple_x_1a990452a_IR__jule_tuple_s_224743e15_Log __jule_assign_result = static__1a99049c0_Build(_3549_path, _3469_semaFlags);
		_3689_ir = __jule_assign_result.__jule_result_arg0;
		_36813_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3689_ir == nullptr) && (_36813_logs == nullptr))) {
		_1a9aabade_Throw(_224744377_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3549_path, &__jule_any_type4)})));
	};
	if ((_36813_logs != nullptr)) {
		static__1a9aab12c_PrintLogs(&(_36813_logs));
		_1a9aabade_Throw(jule::Str());
	};
	return _3689_ir;;
}



inline void _1aa37d48c_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_22eb8c122_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1a990452a_IR> _3899_ir = _1aa37d25b_buildIr(_38324_args);;
	;
	if ((!(_22eb8c122_Test))) {
		jule::Ptr<_1a8d3be91_Fn> _39413_main = _1a8da545a_FindFn((*(_3899_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39413_main == nullptr)) {
			_1a9aabade_Throw(_224744377_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1aa37bba5_applyTargetIndependentOptimizations(&(_3899_ir));
	_1a9905a37_Order(_3899_ir);
	jule::Str _4055_compPath = _1aa37b974_getCompilePath();;
	jule::Str _4065_compiler;
	jule::Str _40615_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1aa37b7dc_genCompileCmd(_4055_compPath, &(_3899_ir));
		_4065_compiler = __jule_assign_result.__jule_result_arg0;
		_40615_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1aa2e0586_ObjectCoder> _4089_oc = static__1aa2e09b5_New(&(_3899_ir), _1aa2dd287_SerializationInfo{._field_Compiler=_4065_compiler, ._field_CompilerCommand=_40615_compilerCmd});;
	if (_22eb8c122_Test) {
		jule::Ptr<_1aa22a405_TestCoder> _41313_tc = static__1aa22a878_New(&(_4089_oc));;
		_1aa22bbed_Serialize(_41313_tc);
	} else {
		_1aa2ed330_Serialize(_4089_oc);
	};
	jule::Ptr<_2232d8eea_File> _4199_file = _1aa37a676_openOutput(&(_4055_compPath));;
	({
		auto except = _2233ee132_Write(_4199_file.ptr(), _2234c43d3_Buf(&(*(_4089_oc))._field_Buf));
		if (!except.ok()) {
			_1a9aabade_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _2232da57e_Close(_4199_file);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:5"));
	});
	if ((!(_22eb8bd8b_Transpilation))) {
		_1aa37ab2c_compileIr(_4065_compiler, _40615_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_22480e4ca_init();
	_20a2ad9cc_init();
	_2248144be_init();
	_1aa37a3ac_init();

}

inline jule::Bool __jule_anon1abe84558(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8d3dde9_ParamIns> _24027_p1, jule::Ptr<_1a8d3dde9_ParamIns> _24042_p2) {
	if (((*((*(_24027_p1))._field_Decl))._field_Mutable != (*(*(_24042_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1a8d3aad8_IsSelf((*_24027_p1.alloc)._field_Decl)) {
		if ((!(_1a8d3aad8_IsSelf((*_24042_p2.alloc)._field_Decl)))) {
			return false;;
		};
		if ((_1a8d3ad6e_IsRef((*_24027_p1.alloc)._field_Decl) != _1a8d3ad6e_IsRef((*_24042_p2.alloc)._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*_24027_p1.alloc)._field_Decl.alloc)._field_Reference != (*(*_24042_p2.alloc)._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*_24027_p1.alloc)._field_Decl.alloc)._field_Variadic != (*(*_24042_p2.alloc)._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1a8e83725_Equal((*_24027_p1.alloc)._field_Kind, (*_24042_p2.alloc)._field_Kind);;
}

inline jule::Bool __jule_anon_1abedb637(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da0ea0_ImportInfo> _50045_spkg) {
	jule::Ptr<__jule_anon_1abedb637_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abedb637_ctx>();
	return ((*((*(__jule_closure_ctx.alloc->_49841_pkg))))._field_Path == (*(_50045_spkg))._field_Path);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac0456b3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _8833_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _8848_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1ac0456b3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac0456b3_ctx>();
	return _1a8d58b39__Name(__jule_closure_ctx.alloc->_self_, _8833_e, _8848_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac04761b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _9533_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _9548_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1ac04761b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac04761b_ctx>();
	return _1a8d59431__Public(__jule_closure_ctx.alloc->_self_, _9533_e, _9548_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac049574(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _10233_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _10248_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1ac049574_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac049574_ctx>();
	return _1a8d59035__Type(__jule_closure_ctx.alloc->_self_, _10233_e, _10248_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac05b2cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _21133_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _21148_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1ac05b2cd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac05b2cd_ctx>();
	return _1a8d5be39__Name(__jule_closure_ctx.alloc->_self_, _21133_e, _21148_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac05d236(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _21833_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _21848_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1ac05d236_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac05d236_ctx>();
	return _1a8d5c731__Public(__jule_closure_ctx.alloc->_self_, _21833_e, _21848_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac06018e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _22533_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _22548_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1ac06018e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac06018e_ctx>();
	return _1a8d5c335__Type(__jule_closure_ctx.alloc->_self_, _22533_e, _22548_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac06beae(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _31333_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _31348_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1ac06beae_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac06beae_ctx>();
	return _1a8d6014b__Name(__jule_closure_ctx.alloc->_self_, _31333_e, _31348_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac081a2e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _43533_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _43548_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1ac081a2e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac081a2e_ctx>();
	return _1a8d62cb9__Name(__jule_closure_ctx.alloc->_self_, _43533_e, _43548_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac083987(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _44233_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _44248_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1ac083987_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac083987_ctx>();
	return _1a8d635b1__Variadic(__jule_closure_ctx.alloc->_self_, _44233_e, _44248_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac0858e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _44933_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _44948_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1ac0858e0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac0858e0_ctx>();
	return _1a8d639ac__Reference(__jule_closure_ctx.alloc->_self_, _44933_e, _44948_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac087848(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _45633_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _45648_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1ac087848_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac087848_ctx>();
	return _1a8d631b5__Type(__jule_closure_ctx.alloc->_self_, _45633_e, _45648_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1ac11a090(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _99833_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _99848_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1ac11a090_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac11a090_ctx>();
	return _1a8d67a05__Str(__jule_closure_ctx.alloc->_self_, _99833_e, _99848_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc4d2ab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _100533_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _100548_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc4d2ab_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc4d2ab_ctx>();
	return _1a8d682ec__Bits(__jule_closure_ctx.alloc->_self_, _100533_e, _100548_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc4ed07(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _101233_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _101248_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc4ed07_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc4ed07_ctx>();
	return _1a8d686e8__Elem(__jule_closure_ctx.alloc->_self_, _101233_e, _101248_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc51765(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _101933_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _101948_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc51765_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc51765_ctx>();
	return _1a8d68ae4__Size(__jule_closure_ctx.alloc->_self_, _101933_e, _101948_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc5359c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _102633_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _102648_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc5359c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc5359c_ctx>();
	return _1a8d68ee0__Key(__jule_closure_ctx.alloc->_self_, _102633_e, _102648_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc55505(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _103333_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _103348_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc55505_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc55505_ctx>();
	return _1a8d693db__Value(__jule_closure_ctx.alloc->_self_, _103333_e, _103348_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc5745d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _104033_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _104048_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc5745d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc5745d_ctx>();
	return _1a8d697d7__Fields(__jule_closure_ctx.alloc->_self_, _104033_e, _104048_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc593b6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _104733_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _104748_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc593b6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc593b6_ctx>();
	return _1a8d69bd3__Statics(__jule_closure_ctx.alloc->_self_, _104733_e, _104748_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc5b462(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _105433_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _105448_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc5b462_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc5b462_ctx>();
	return _1a8d6caa4__Params(__jule_closure_ctx.alloc->_self_, _105433_e, _105448_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc5d3ba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _106133_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _106148_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc5d3ba_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc5d3ba_ctx>();
	return _1a8d6b5b9__Types(__jule_closure_ctx.alloc->_self_, _106133_e, _106148_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc60323(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _106833_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _106848_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc60323_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc60323_ctx>();
	return _1a8d6a0ce__Public(__jule_closure_ctx.alloc->_self_, _106833_e, _106848_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc6227b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _107533_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _107548_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc6227b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc6227b_ctx>();
	return _1a8d6a4ca__Binded(__jule_closure_ctx.alloc->_self_, _107533_e, _107548_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc641d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _108233_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _108248_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc641d4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc641d4_ctx>();
	return _1a8d6a8c6__Ordered(__jule_closure_ctx.alloc->_self_, _108233_e, _108248_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc6613c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _108933_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _108948_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc6613c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc6613c_ctx>();
	return _1a8d6acc2__Comparable(__jule_closure_ctx.alloc->_self_, _108933_e, _108948_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc68095(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _109633_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _109648_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc68095_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc68095_ctx>();
	return _1a8d6b1bd__Mutable(__jule_closure_ctx.alloc->_self_, _109633_e, _109648_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc69eed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _110333_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _110348_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc69eed_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc69eed_ctx>();
	return _1a8d6b9b5__Exceptional(__jule_closure_ctx.alloc->_self_, _110333_e, _110348_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc6be56(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _111033_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _111048_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc6be56_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc6be56_ctx>();
	return _1a8d6bdb1__CanNil(__jule_closure_ctx.alloc->_self_, _111033_e, _111048_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc6ddae(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _111733_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _111748_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc6ddae_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc6ddae_ctx>();
	return _1a8d6c2ac__RC(__jule_closure_ctx.alloc->_self_, _111733_e, _111748_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc70d17(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _112433_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _112448_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc70d17_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc70d17_ctx>();
	return _1a8d6c6a8__Result(__jule_closure_ctx.alloc->_self_, _112433_e, _112448_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc72c70(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _113133_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _113148_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc72c70_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc72c70_ctx>();
	return _1a8d67e01__Kind(__jule_closure_ctx.alloc->_self_, _113133_e, _113148_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc8d1ec(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _124733_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _124748_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc8d1ec_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc8d1ec_ctx>();
	return _1a8d6de18__Unwrap(__jule_closure_ctx.alloc->_self_, _124733_e, _124748_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc90155(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _125433_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _125448_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc90155_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc90155_ctx>();
	return _1a8d6e314__Type(__jule_closure_ctx.alloc->_self_, _125433_e, _125448_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc920ad(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _126133_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _126148_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc920ad_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc920ad_ctx>();
	return _1a8d6e710__Lvalue(__jule_closure_ctx.alloc->_self_, _126133_e, _126148_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc94016(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _126833_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _126848_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc94016_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc94016_ctx>();
	return _1a8d6eb0b__Mutable(__jule_closure_ctx.alloc->_self_, _126833_e, _126848_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc95e6e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _127533_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _127548_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc95e6e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc95e6e_ctx>();
	return _1a8d70007__Const(__jule_closure_ctx.alloc->_self_, _127533_e, _127548_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abc97dc7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _128233_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _128248_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abc97dc7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc97dc7_ctx>();
	return _1a8d70403__Field(__jule_closure_ctx.alloc->_self_, _128233_e, _128248_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abcaa912(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _139633_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _139648_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abcaa912_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abcaa912_ctx>();
	return _1a8d72e50__Path(__jule_closure_ctx.alloc->_self_, _139633_e, _139648_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abcac86a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _140333_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _140348_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abcac86a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abcac86a_ctx>();
	return _1a8d7334b__Name(__jule_closure_ctx.alloc->_self_, _140333_e, _140348_fc);;
}

inline jule::Ptr<_1a8e4bcb5_Data> __jule_anon_1abcae7c3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4d9dc_Eval>* _141033_e, jule::Ptr<_1a877b5c3_FnCallExpr>* _141048_fc, jule::Ptr<_1a8e4bcb5_Data>* ) {
	jule::Ptr<__jule_anon_1abcae7c3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abcae7c3_ctx>();
	return _1a8d73747__Dir(__jule_closure_ctx.alloc->_self_, _141033_e, _141048_fc);;
}

inline jule::Bool __jule_anon_1abcba306(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8dc1344_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>* _6439_generics) {
	jule::Ptr<__jule_anon_1abcba306_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abcba306_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcbb406:;
		if (it != expr_end) {
			jule::I32 _6518_i = it - expr->begin();
			jule::Ptr<_1a8780770_GenericDecl> _6525_g = *it;
			{
				jule::Ptr<_1a8e81635_InsGeneric> _6621_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_6518_i];;
				if ((((*(_6525_g))._field_Constraint == nullptr) || ((*((*_6525_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1abcbb406;
				};
				(*(_6621_generic))._field_Constraint=jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>>::alloc(0LL, (*((*_6525_g.alloc)._field_Constraint))._field_Mask.len());
				{
					auto expr = &((*((*_6525_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abcbe173:;
					if (it != expr_end) {
						jule::Ptr<_1a8773565_TypeDecl> _7129_mask = *it;
						{
							jule::I32 _7221_n = (*((*(_6421_sema))))._field_errors.len();;
							jule::Ptr<_1a8e8301b_TypeKind> _7325_kind = _1a8dc8e0c_buildTypeWithRefers((*(_6421_sema)), &(_7129_mask), jule::Trait((*(_6421_sema)), (jule::Trait::Type*)&_1a8ea2b0c_Lookup_mptr_data3), (*(_6439_generics)), nullptr);;
							if ((_7325_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7129_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type74) {
										_case_begin_1abcc0e66:;
										{
											jule::Ptr<_1a8773b70_IdentTypeDecl> _7733_itd = (*(_7129_mask))._field_Kind.unsafe_cast_ptr<_1a8773b70_IdentTypeDecl>();;
											if ((((*(_7733_itd))._field_Generics.len() == 0LL) && _1a8d780dc_isBuiltinConstraint(&((*_7733_itd.alloc)._field_Ident)))) {
												_7325_kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(_1a8e9ee39_buildPrimType((*_7733_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data20)});
												((*((*(_6421_sema))))._field_errors).mut_slice(0LL, _7221_n);;
												goto _julec_label_1abcc3ac3;
											};
										}
									}
									_match_end_1abcc0e00:;
								};
								return false;;
							};
							_julec_label_1abcc3ac3:;
							(*_6621_generic.alloc)._field_Constraint=jule::append((*_6621_generic.alloc)._field_Constraint,jule::Slice<jule::Ptr<_1a8e8301b_TypeKind>>::make({_7325_kind}));
						}
						_iter_next_1abcbe173:;
						++it;
						goto _iter_begin_1abcbe173;
					}
					_iter_end_1abcbe173:;
				};
			}
			_iter_next_1abcbb406:;
			++it;
			_6518_i++;
			goto _iter_begin_1abcbb406;
		}
		_iter_end_1abcbb406:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1ac3d67bd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8dc1344_Sema>* _110543_sema, jule::Slice<jule::Ptr<_1a8e82229_TypeAlias>>* _110561_generics) {
	jule::Ptr<__jule_anon_1ac3d67bd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac3d67bd_ctx>();
	jule::Bool _110617_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3d7c64:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3dde9_ParamIns> _110725_p = *it;
			{
				if (_1a8d3aad8_IsSelf((*(_110725_p))._field_Decl.ptr())) {
					if (_1a8d3ad6e_IsRef((*_110725_p.alloc)._field_Decl)) {
						(*_110725_p.alloc)._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a8e8e621_Sptr>(_1a8e8e621_Sptr{._field_Elem=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data21)});
					} else {
						(*_110725_p.alloc)._field_Kind=jule::new_ptr<_1a8e8301b_TypeKind>(_1a8e8301b_TypeKind{._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a8e82a65_Kind_mptr_data0)});
					};
				} else {
					(*(_110725_p))._field_Kind=_1a8dca0a6_buildTypeWithGenerics((*(_110543_sema)), &((*((*((*_110725_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_110561_generics)), (*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Refers);
					if (((*_110725_p.alloc)._field_Kind != nullptr)) {
						_1a8dceac2_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_110725_p));
					} else {
						_110617_ok=false;
					};
				};
			}
			_iter_next_1ac3d7c64:;
			++it;
			goto _iter_begin_1ac3d7c64;
		}
		_iter_end_1ac3d7c64:;
	};
	if ((!(_1a8d3c414_IsVoid((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Result=_1a8dca0a6_buildTypeWithGenerics((*(_110543_sema)), &((*((*((*(*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_110561_generics)), (*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Refers);
		_110617_ok=(((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Result != nullptr) && _110617_ok);
	};
	return _110617_ok;;
}

inline jule::Bool __jule_anon_1ac7d47d1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da0ea0_ImportInfo> _183149_imp) {
	jule::Ptr<__jule_anon_1ac7d47d1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac7d47d1_ctx>();
	if ((((*__jule_closure_ctx.alloc->_182934_s.alloc)._field_Ns.len() == 1LL) && ((*(_183149_imp))._field_Alias == __jule_closure_ctx.alloc->_18309_path))) {
		return true;;
	};
	return (((*_183149_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_18309_path) && _1a8da3ab8_isAccessibleViaSelection(_183149_imp));;
}

inline jule::Str __jule_anon1acd485c5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _84725_def) {
	{
		auto &_match_expr{ (*(_84725_def)) };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1acd49692:;
			{
				return (*((*(_84725_def)).cast_ptr<_1a8e82229_TypeAlias>(&__jule_any_type65)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1acd494b6:;
			{
				return (*((*(_84725_def)).cast_ptr<_1a8d26e26_Struct>(&__jule_any_type64)))._field_Ident;;
			}
		}
		else {
			_case_begin_1acd49087:;
			{
				return jule::Str();;
			}
		}
		_match_end_1acd49032:;
	};
}

inline jule::Bool __jule_anon_1ab8db356(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da0ea0_ImportInfo> _151949_imp) {
	jule::Ptr<__jule_anon_1ab8db356_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab8db356_ctx>();
	if ((((*__jule_closure_ctx.alloc->_151739_decl.alloc)._field_Idents.len() == 1LL) && ((*(_151949_imp))._field_Alias == __jule_closure_ctx.alloc->_15189_path))) {
		return true;;
	};
	return (((*_151949_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_15189_path) && _1a8da3ab8_isAccessibleViaSelection(_151949_imp));;
}

inline void __jule_anon_1ad6e502b(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad6e502b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad6e502b_ctx>();
	if (__jule_closure_ctx.alloc->_13613_ref) {
		_1aa2e0c6d_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1aa2e0c6d_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1ad6e89e1(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad6e89e1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad6e89e1_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_12839_it))))._field_KeyB.alloc)._field_Reference) {
			_1aa2e0c6d_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it", 2));
		} else {
			_1aa2e0c6d_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1ad707eb7(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad707eb7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad707eb7_ctx>();
	_1aa2e0c6d_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it->first", 9));
}

inline void __jule_anon_1ad70a43c(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad70a43c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad70a43c_ctx>();
	_1aa2e0c6d_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it->second", 10));
}

inline void __jule_anon_1ad884a28(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad884a28_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad884a28_ctx>();
	_1aa2e0c6d_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1ad9008b8(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad9008b8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad9008b8_ctx>();
	_1aa2e0c6d_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1ad901bc7(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad901bc7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad901bc7_ctx>();
	_1aa21c32b_possibleRefExpr((*(*__jule_closure_ctx.alloc->_self_.alloc)._field_oc.alloc)._field_ec, (*(*__jule_closure_ctx.alloc->_63333_m.alloc)._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1ad972242(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8de41ad_Var> _100976_v) {
	jule::Ptr<__jule_anon_1ad972242_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad972242_ctx>();
	return _1aa216633_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_100337_m), &(_100976_v));;
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1add43657(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22565_s, jule::I32 _22573_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _20a297b1a_ParseInt(_22565_s, _22573_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1add4b51c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23366_s, jule::I32 _23374_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _20a297664_ParseUint(_23366_s, _23374_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline void __jule_anon_1adbad879(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da3dc6_Package>* _55335_pkg) {
	jule::Ptr<__jule_anon_1adbad879_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1adbad879_ctx>();
	_1aa2ed71a_iterFiles(_55335_pkg, jule::__new_closure<void,jule::Ptr<_1a8e4694c_SymbolTable>*>((void*)__jule_anon_1adbae79d, jule::Ptr<__jule_anon_1adbae79d_ctx>::make(__jule_anon_1adbae79d_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1adbae79d_ctx_handler));
}

inline void __jule_anon_1adc0cd29(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da3dc6_Package>* _91135_pkg) {
	jule::Ptr<__jule_anon_1adc0cd29_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1adc0cd29_ctx>();
	_1aa2ed71a_iterFiles(_91135_pkg, jule::__new_closure<void,jule::Ptr<_1a8e4694c_SymbolTable>*>((void*)__jule_anon_1adc0dc2b, jule::Ptr<__jule_anon_1adc0dc2b_ctx>::make(__jule_anon_1adc0dc2b_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1adc0dc2b_ctx_handler));
}

inline void __jule_anon_1adc1444b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da3dc6_Package>* _93735_pkg) {
	jule::Ptr<__jule_anon_1adc1444b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1adc1444b_ctx>();
	_1aa2ed71a_iterFiles(_93735_pkg, jule::__new_closure<void,jule::Ptr<_1a8e4694c_SymbolTable>*>((void*)__jule_anon_1adc1534d, jule::Ptr<__jule_anon_1adc1534d_ctx>::make(__jule_anon_1adc1534d_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1adc1534d_ctx_handler));
}

inline void __jule_anon_1ad664dd0(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad664dd0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad664dd0_ctx>();
	_1aa2e0c6d_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1aa226be8_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(*__jule_closure_ctx.alloc->_100727_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
	_1aa2e0c6d_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1ad995d26(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad995d26_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad995d26_ctx>();
	_1aa21c32b_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(*__jule_closure_ctx.alloc->_100727_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1ad998499(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad998499_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad998499_ctx>();
	_1aa2e0c6d_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1ad999621(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad999621_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad999621_ctx>();
	_1aa226ea1_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*__jule_closure_ctx.alloc->_100727_v.alloc)._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1adca9007(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da3dc6_Package>* _129735_pkg) {
	jule::Ptr<__jule_anon_1adca9007_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1adca9007_ctx>();
	_1aa2ed71a_iterFiles(_129735_pkg, jule::__new_closure<void,jule::Ptr<_1a8e4694c_SymbolTable>*>((void*)__jule_anon_1adca9e2b, jule::Ptr<__jule_anon_1adca9e2b_ctx>::make(__jule_anon_1adca9e2b_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1adca9e2b_ctx_handler));
}

inline void __jule_anon_1adcacadd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4694c_SymbolTable>* _131332_file) {
	jule::Ptr<__jule_anon_1adcacadd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1adcacadd_ctx>();
	{
		auto expr = &((*((*(_131332_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adcad4c3:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _131420_f = *it;
			{
				if ((*(_131420_f))._field_Ident.equal("init", 4)) {
					_1aa2e1620_indent(__jule_closure_ctx.alloc->_self_);
					static__1aa22e30a_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_131420_f));
					_1aa2e0c6d_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1adcad4c3:;
			++it;
			goto _iter_begin_1adcad4c3;
		}
		_iter_end_1adcad4c3:;
	};
}

inline void __jule_anon_1adcb32ec(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da3dc6_Package>* _134235_pkg) {
	jule::Ptr<__jule_anon_1adcb32ec_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1adcb32ec_ctx>();
	_1aa2ec4c7_pushInit(__jule_closure_ctx.alloc->_self_, _134235_pkg);
}

inline jule::Bool __jule_anon1ac038ab3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8da0ea0_ImportInfo> _143028_pkg) {
	return (*(_143028_pkg))._field_LinkPath.equal("std::comptime", 13);;
}

inline void __jule_anon_1adbae79d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4694c_SymbolTable>* _55436_file) {
	jule::Ptr<__jule_anon_1adbae79d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1adbae79d_ctx>();
	{
		auto expr = &((*((*(_55436_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbb024e:;
		if (it != expr_end) {
			jule::Ptr<_1a8d5034a_Trait> _55529_t = *it;
			{
				if (((*(_55529_t))._field_Token == nullptr)) {
					return;;
				};
				if (((*_55529_t.alloc)._field_Implemented.len() == 0LL)) {
					jule::Ptr<_1aa2dd85e_traitHash> _56029_hash = jule::new_ptr<_1aa2dd85e_traitHash>(_1aa2dd85e_traitHash{._field_t=_55529_t, ._field_s=nullptr, ._field_i=0LL});;
					_2234c269a_StrBuilder _56529_b = static__2234c2ac9_New((*_55529_t.alloc)._field_Ident.len());;
					static__1aa22d727_writeIdentTo(&(_56529_b), &((*_55529_t.alloc)._field_Ident));
					(*(_56029_hash))._field_ti=_2234c3932_Str(&_56529_b);
					(*__jule_closure_ctx.alloc->_self_.alloc)._field_tmap=jule::append((*__jule_closure_ctx.alloc->_self_.alloc)._field_tmap,jule::Slice<jule::Ptr<_1aa2dd85e_traitHash>>::make({_56029_hash}));
					goto _iter_next_1adbb024e;
				};
				jule::I32 _57125_i = 0LL;;
				{
					auto expr = &((*_55529_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adbb0b12:;
					if (it != expr_end) {
						jule::Ptr<_1a8d26e26_Struct> _57233_s = *it;
						{
							{
								auto expr = &((*(_57233_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1adbb45d8:;
								if (it != expr_end) {
									jule::Ptr<_1a8d29ba4_StructIns> _57337_ins = *it;
									{
										jule::Ptr<_1aa2dd85e_traitHash> _57433_hash = jule::new_ptr<_1aa2dd85e_traitHash>(_1aa2dd85e_traitHash{._field_t=_55529_t, ._field_s=_57337_ins, ._field_i=_57125_i});;
										_2234c269a_StrBuilder _57933_b = static__2234c2ac9_New((*_55529_t.alloc)._field_Ident.len());;
										static__1aa22d727_writeIdentTo(&(_57933_b), &((*_55529_t.alloc)._field_Ident));
										(*(_57433_hash))._field_ti=_2234c3932_Str(&_57933_b);
										(*__jule_closure_ctx.alloc->_self_.alloc)._field_tmap=jule::append((*__jule_closure_ctx.alloc->_self_.alloc)._field_tmap,jule::Slice<jule::Ptr<_1aa2dd85e_traitHash>>::make({_57433_hash}));
										(_57125_i)++;
									}
									_iter_next_1adbb45d8:;
									++it;
									goto _iter_begin_1adbb45d8;
								}
								_iter_end_1adbb45d8:;
							};
						}
						_iter_next_1adbb0b12:;
						++it;
						goto _iter_begin_1adbb0b12;
					}
					_iter_end_1adbb0b12:;
				};
				_1aa2ee4b8_pushMethodsFromInherits(&(_55529_t), &(_55529_t));
			}
			_iter_next_1adbb024e:;
			++it;
			goto _iter_begin_1adbb024e;
		}
		_iter_end_1adbb024e:;
	};
}

inline void __jule_anon_1adc0dc2b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4694c_SymbolTable>* _91236_file) {
	jule::Ptr<__jule_anon_1adc0dc2b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1adc0dc2b_ctx>();
	{
		auto expr = &((*((*(_91236_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc0e6aa:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _91329_f = *it;
			{
				if (((!((*(_91329_f))._field_Binded)) && ((*_91329_f.alloc)._field_Token != nullptr))) {
					_1aa2e2995_pushResult(__jule_closure_ctx.alloc->_self_, &(_91329_f));
					_1aa2e76d1_funcDecl(__jule_closure_ctx.alloc->_self_, &(_91329_f), false);
				};
			}
			_iter_next_1adc0e6aa:;
			++it;
			goto _iter_begin_1adc0e6aa;
		}
		_iter_end_1adc0e6aa:;
	};
}

inline void __jule_anon_1adc1534d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4694c_SymbolTable>* _93836_file) {
	jule::Ptr<__jule_anon_1adc1534d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1adc1534d_ctx>();
	{
		auto expr = &((*((*(_93836_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc15ccc:;
		if (it != expr_end) {
			jule::Ptr<_1a8d5034a_Trait> _93929_t = *it;
			{
				if (((*(_93929_t))._field_Token == nullptr)) {
					return;;
				};
				if (((*_93929_t.alloc)._field_Methods.len() == 0LL)) {
					goto _iter_next_1adc15ccc;
				};
				_1aa2e0c6d_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1aa22e8d2_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _93929_t);
				_1aa2e0c6d_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1aa2e0c6d_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1aa2e1224_addIndent(__jule_closure_ctx.alloc->_self_);
				_1aa2e1620_indent(__jule_closure_ctx.alloc->_self_);
				_1aa2e0c6d_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1aa2e7e40_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_93929_t));
				_1aa2e1422_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1aa2e1620_indent(__jule_closure_ctx.alloc->_self_);
				_1aa2e0c6d_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1adc15ccc:;
			++it;
			goto _iter_begin_1adc15ccc;
		}
		_iter_end_1adc15ccc:;
	};
}

inline void __jule_anon_1adca9e2b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8e4694c_SymbolTable>* _129836_file) {
	jule::Ptr<__jule_anon_1adca9e2b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1adca9e2b_ctx>();
	{
		auto expr = &((*((*(_129836_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adcaa8cc:;
		if (it != expr_end) {
			jule::Ptr<_1a8d3be91_Fn> _129929_f = *it;
			{
				if (((!(_22eb8c122_Test)) && _1aa30dc69_hasDirective(&((*(_129929_f))._field_Directives), jule::Str::lit("test", 4)))) {
					goto _iter_next_1adcaa8cc;
				};
				if (((!((*_129929_f.alloc)._field_Binded)) && ((*_129929_f.alloc)._field_Token != nullptr))) {
					_1aa2e9b67_func(__jule_closure_ctx.alloc->_self_, &(_129929_f));
					_1aa2e0c6d_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1adcaa8cc:;
			++it;
			goto _iter_begin_1adcaa8cc;
		}
		_iter_end_1adcaa8cc:;
	};
}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}