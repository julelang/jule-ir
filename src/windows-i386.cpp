// Auto generated by JuleC.
// JuleC version: jule0.0.14
// Date: 17/7/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _221202d06_comptimeRangeKind{};
struct _22123eded_Importer{};
struct _221452e35_Kind{};
struct _22147198c_Lookup{};
struct _203c56316_CommonFlag{};
struct _21c5cb447_acceptRange;
struct _21d59c0c6_Range16;
struct _21d59c549_Range32;
struct _21d59c9bc_RangeTable;
struct _21d5dcd5e_lazyBuff;
struct _21c4ddbd9_DirEntry;
struct _21c4dde4d_Directory;
struct _21c4ea91b_File;
struct _21c4ed05b_Status;
struct _21d716e99_cmdAttrs;
struct _21d6755de_Log;
struct _21da1aa0b_Token;
struct _21da20d96_File;
struct _21da22ded_kindPair;
struct _21da2895e_lex;
struct _21e69e062_floatInfo;
struct _21e69ea02_decimalSlice;
struct _21e6b0d32_leftCheat;
struct _21e6b1805_decimal;
struct _21e6c53da_Const;
struct _22117005e_Ast;
struct _221170e0b_Node;
struct _221171307_Directive;
struct _2211a478b_TypeDecl;
struct _2211a4d52_IdentTypeDecl;
struct _2211a54a1_SubIdentTypeDecl;
struct _2211a5858_NamespaceTypeDecl;
struct _2211a5b44_SptrTypeDecl;
struct _2211a6040_SlcTypeDecl;
struct _2211a632b_TupleTypeDecl;
struct _2211a6617_PtrTypeDecl;
struct _2211a6c99_ArrTypeDecl;
struct _2211a74e7_MapTypeDecl;
struct _2211a789e_RetTypeDecl;
struct _2211a8cac_Expr;
struct _2211a9098_RangeExpr;
struct _2211a964d_UseExpr;
struct _2211a9939_TupleExpr;
struct _2211a9ce1_LitExpr;
struct _2211aa4ea_UnsafeExpr;
struct _2211aa96d_IdentExpr;
struct _2211ab177_UnaryExpr;
struct _2211ab52e_VariadicExpr;
struct _2211ab8d6_CastExpr;
struct _2211abc8d_NsSelectionExpr;
struct _2211ac211_SubIdentExpr;
struct _2211ac684_BinopExpr;
struct _2211acc8e_FnCallExpr;
struct _2211ad71d_FieldExprPair;
struct _2211ade6b_StructLit;
struct _2211ae3de_BraceLit;
struct _2211aebb4_KeyValPair;
struct _2211b039b_SliceExpr;
struct _2211b0c1a_IndexingExpr;
struct _2211b1325_SlicingExpr;
struct _2211b1611_Constraint;
struct _2211b1a84_GenericDecl;
struct _2211b1e3b_LabelSt;
struct _2211b22e3_GotoSt;
struct _2211b25ce_FallSt;
struct _2211b2bd9_AssignLeft;
struct _2211b3228_AssignSt;
struct _2211b4119_Stmt;
struct _2211b4724_ScopeTree;
struct _2211b4dea_ParamDecl;
struct _2211b621a_FnDecl;
struct _2211b71e9_VarDecl;
struct _2211b75a1_RetSt;
struct _2211b7c11_Iter;
struct _2211b84d6_WhileKind;
struct _2211b8d77_RangeKind;
struct _2211b922e_BreakSt;
struct _2211b95d6_ContSt;
struct _2211b9a59_If;
struct _2211b9e11_Else;
struct _2211ba384_Conditional;
struct _2211baa5a_TypeAliasDecl;
struct _2211baecd_Case;
struct _2211bb6a4_MatchCase;
struct _2211bbe46_UseDecl;
struct _2211bc3b9_EnumItemDecl;
struct _2211bcde2_EnumDecl;
struct _2211bd8e8_TypeEnumItemDecl;
struct _2211be003_TypeEnumDecl;
struct _2211be201_FieldDecl;
struct _2211be9a4_StructDecl;
struct _2211c017a_TraitDecl;
struct _2211c0785_Impl;
struct _2211c1d08_Field;
struct _2211c3ab8_Operators;
struct _2211c48cc_Struct;
struct _2211c6bed_FieldIns;
struct _2211cb692_OperandExprModel;
struct _2211cbb59_BinopExprModel;
struct _2211cc011_UnaryExprModel;
struct _2211cc40c_StructArgExprModel;
struct _2211cc7b4_StructLitExprModel;
struct _2211ccac2_AllocStructLitExprModel;
struct _2211cd122_CastingExprModel;
struct _2211cd9c4_FnCallExprModel;
struct _2211cdd7b_SliceExprModel;
struct _2211ce2ee_IndexingExprModel;
struct _2211ce6a6_AnonFnExprModel;
struct _2211cea5d_KeyValPairExprModel;
struct _2211ceed1_MapExprModel;
struct _2211d0520_SlicingExprModel;
struct _2211d0a5e_TraitSubIdentExprModel;
struct _2211d1345_StructSubIdentExprModel;
struct _2211d16db_StructStaticIdentExprModel;
struct _2211d1aa4_ArrayExprModel;
struct _2211d1d90_CommonIdentExprModel;
struct _2211d2401_CommonSubIdentExprModel;
struct _2211d26ed_TupleExprModel;
struct _2211d2ac7_BuiltinOutCallExprModel;
struct _2211d2eb2_BuiltinOutlnCallExprModel;
struct _2211d32d1_BuiltinCloneCallExprModel;
struct _2211d36bb_BuiltinNewCallExprModel;
struct _2211d3aa6_BuiltinPanicCallExprModel;
struct _2211d405c_BuiltinAssertCallExprModel;
struct _2211d4513_BuiltinMakeCallExprModel;
struct _2211d48ed_BuiltinAppendCallExprModel;
struct _2211d4c1c_BuiltinLenCallExprModel;
struct _2211d503b_BuiltinCapCallExprModel;
struct _2211d56e0_BuiltinDeleteCallExprModel;
struct _2211d5a53_BuiltinCopyCallExprModel;
struct _2211d5e3d_BuiltinErrorCallExprModel;
struct _2211d623a_SizeofExprModel;
struct _2211d6526_AlignofExprModel;
struct _2211d6812_RuneExprModel;
struct _2211d6b20_IntegratedToStrExprModel;
struct _2211d6ed8_BackendEmitExprModel;
struct _2211d72c4_FreeExprModel;
struct _2211d7c86_RetType;
struct _2211d8490_Param;
struct _2211d9ccc_Fn;
struct _2211dbaae_ParamIns;
struct _2211dc97d_FnIns;
struct _2211e08d7_ReferenceStack;
struct _2211e1c18_Pass;
struct _2211e6459_symbolBuilder;
struct _2211ebeed_Trait;
struct _2211edc8b_EnumItem;
struct _2211ee781_Enum;
struct _2212007b5_TypeEnumItem;
struct _221200d7b_TypeEnum;
struct _221202ed2_comptimeRange;
struct _2212039c7_comptimeStructField;
struct _2212054bd_comptimeStructFields;
struct _2212069ca_comptimeStatic;
struct _221208515_comptimeStatics;
struct _2212099cd_comptimeEnumField;
struct _22120abee_comptimeEnumFields;
struct _22120c250_comptimeParam;
struct _22120e2eb_comptimeParams;
struct _2212107b4_comptimeTypeInfos;
struct _221211c7c_comptimeTypeInfo;
struct _221217777_comptimeValue;
struct _22121c22c_constraintChecker;
struct _22121e0ca_Impl;
struct _221224135_Scope;
struct _221224531_If;
struct _22122481c_Else;
struct _221224b91_Conditional;
struct _221224e7c_InfIter;
struct _221225400_WhileIter;
struct _221225cd5_RangeIter;
struct _2212261d1_ContSt;
struct _221226588_BreakSt;
struct _221226874_Label;
struct _221226b60_GotoSt;
struct _221227017_Postfix;
struct _22122748a_Assign;
struct _221227842_MultiAssign;
struct _221227e4c_Match;
struct _221228997_Case;
struct _22122904c_FallSt;
struct _2212293c1_RetSt;
struct _2212299cb_scopeLabel;
struct _221229e4e_scopeGoto;
struct _22122ac63_scopeChecker;
struct _22123b9bb_directiveChecker;
struct _221242a9e_ImportInfo;
struct _2212456d9_Package;
struct _22124a359_commonSemaMeta;
struct _22124ad71_Sema;
struct _221267e26_missingRetChecker;
struct _22126a137_IterRelation;
struct _22126b17c_Var;
struct _22126be2a_FuncPattern;
struct _22140e9c4_typeCompatibilityChecker;
struct _2214115ec_assignTypeChecker;
struct _2214130d2_dynamicTypeAnnotation;
struct _221417999_fnCallArgChecker;
struct _22141a3a3_structLitChecker;
struct _22141be87_rangeChecker;
struct _22141e484_retTypeChecker;
struct _221421222_SymbolTable;
struct _221425c2c_Data;
struct _221426ca5_Value;
struct _22142779a_Eval;
struct _2214446da_unaryEval;
struct _221446478_binaryEval;
struct _221451b15_InsGeneric;
struct _22145264e_TypeAlias;
struct _221453397_TypeKind;
struct _221459c50_TypeSymbol;
struct _22145a5be_Prim;
struct _22145dd53_Sptr;
struct _22145e7b0_Slc;
struct _22146033d_Tuple;
struct _221460d66_Map;
struct _22146195a_Arr;
struct _2214623b7_Ptr;
struct _22146330d_referencer;
struct _2214641dd_typeChecker;
struct _22146b8ee_identTypeLookup;
struct _203186a99_FileInfo;
struct _2031d06c5_stmt;
struct _2031d1000_scopeParser;
struct _2031dc4d4_exprBuilder;
struct _2031e8d1a_assignInfo;
struct _2031ec714_parser;
struct _20320d439_typeBuilder;
struct _22160b42e_CompileInfo;
struct _22160c782_directiveEval;
struct _2032126a2_JuleImporter;
struct _203217454_OrderedDefines;
struct _2032176b8_defineOrderer;
struct _203310096_liveTable;
struct _203345d46_scopeDeadCode;
struct _203349ca1_exprDeadCode;
struct _221523775_StrCompExprModel;
struct _221523b3d_StrAppendExprModel;
struct _221523e29_UnsafeBinopExprModel;
struct _2215242ae_UnsafeIndexingExprModel;
struct _221524644_PushToSliceExprModel;
struct _221524b83_MutSlicingExprModel;
struct _22152505c_StrInsertBeginExprModel;
struct _22152626c_scopeOptimizer;
struct _22152bb68_exprOptimizer;
struct _203351a66_Optimizer;
struct _203373ed9_AnsiEscape;
struct _20337556d_Logger;
struct _203bca9d8_AbsTime;
struct _203bcb17b_Time;
struct _203a59adc_scopeCoder;
struct _203b2d6c7_exprCoder;
struct _203b3d011_deriveCoder;
struct _203b3e93b_TestCoder;
struct _203b41e7c_identCoder;
struct _203bd386a_SerializationInfo;
struct _203bd3d32_traitHash;
struct _203bd41d9_traitCast;
struct _203be303e_customType;
struct _203be39ac_typeCoder;
struct _203beb575_resultCoder;
struct _2080e576c_Flag;
struct _2080e9540_Flag;
struct _2080ecd07_Flag;
struct _208101613_Flag;
struct _208104dca_Flag;
struct _203c57c74_FlagSet;
struct _203c5a44c_argParser;
struct _203bd520c_ObjectCoder;
struct _20331045e_ObjectDeadCode;
struct _203214e13_IR;
struct _2211c76e3_StructIns;
struct _21d7131b5_Cmd;
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_221425c2c_Data__jule_tuple_x_221425c2c_Data {
	jule::Ptr<_221425c2c_Data> __jule_result_arg0;
	jule::Ptr<_221425c2c_Data> __jule_result_arg1;
};
struct __jule_tuple_x_2211baecd_Case__jule_tuple_bool {
	jule::Ptr<_2211baecd_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_2211baecd_Case__jule_tuple_x_2211b9e11_Else {
	jule::Slice<jule::Ptr<_2211baecd_Case>> __jule_result_arg0;
	jule::Ptr<_2211b9e11_Else> __jule_result_arg1;
};
struct __jule_tuple__2211b3dd8_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_2211b3228_AssignSt__jule_tuple_bool {
	jule::Ptr<_2211b3228_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool {
	jule::Ptr<_2211a478b_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_2211a789e_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_2211a789e_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_22117005e_Ast__jule_tuple_s_21d6755de_Log {
	jule::Slice<jule::Ptr<_22117005e_Ast>> __jule_result_arg0;
	jule::Slice<_21d6755de_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_21d6755de_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_21d6755de_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_203214e13_IR__jule_tuple_s_21d6755de_Log {
	jule::Ptr<_203214e13_IR> __jule_result_arg0;
	jule::Slice<_21d6755de_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__21e0a533c_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__21e0a533c_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__21e0a533c_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__21e0a533c_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_221421222_SymbolTable__jule_tuple_s_21d6755de_Log {
	jule::Ptr<_221421222_SymbolTable> __jule_result_arg0;
	jule::Slice<_21d6755de_Log> __jule_result_arg1;
};
struct __jule_tuple_x_2212456d9_Package__jule_tuple_s_21d6755de_Log {
	jule::Ptr<_2212456d9_Package> __jule_result_arg0;
	jule::Slice<_21d6755de_Log> __jule_result_arg1;
};
struct __jule_tuple_x_22117005e_Ast__jule_tuple_s_21d6755de_Log {
	jule::Ptr<_22117005e_Ast> __jule_result_arg0;
	jule::Slice<_21d6755de_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_21da1aa0b_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_21da1aa0b_Token__jule_tuple_sx_21da1aa0b_Token {
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_21da1aa0b_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log {
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> __jule_result_arg0;
	jule::Slice<_21d6755de_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct _21c5cb447_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_21c5cb447_acceptRange(void) = default;

	inline bool operator==(_21c5cb447_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_21c5cb447_acceptRange _other) { return !this->operator==(_other); }


};
struct _21d59c0c6_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_21d59c0c6_Range16(void) = default;

	inline bool operator==(_21d59c0c6_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_21d59c0c6_Range16 _other) { return !this->operator==(_other); }


};
struct _21d59c549_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_21d59c549_Range32(void) = default;

	inline bool operator==(_21d59c549_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_21d59c549_Range32 _other) { return !this->operator==(_other); }


};
struct _21d59c9bc_RangeTable {
	jule::Slice<_21d59c0c6_Range16> _field_R16;
	jule::Slice<_21d59c549_Range32> _field_R32;
	jule::I32 _field_LatinOffset = 0;
	

	_21d59c9bc_RangeTable(void) = default;


};
inline jule::U8 _21d5dd2d2_index(_21d5dcd5e_lazyBuff*, jule::I32);
inline void _21d5dd557_append(_21d5dcd5e_lazyBuff*, jule::U8);
inline jule::Str _21d5dd7bb_string(_21d5dcd5e_lazyBuff*);
struct _21d5dcd5e_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen = 0;
	

	_21d5dcd5e_lazyBuff(void) = default;


};
struct _21c4ddbd9_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_21c4ed05b_Status> _field_Stat;
	

	_21c4ddbd9_DirEntry(void) = default;

	inline bool operator==(_21c4ddbd9_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_21c4ddbd9_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_21c4ddbd9_DirEntry>>> static__21d5e0823_Read(jule::Str);
inline jule::VoidExceptional static__21d5e0a32_Create(jule::Str);
inline jule::VoidExceptional static__21d5e0c41_Remove(jule::Str);
struct _21c4dde4d_Directory {
	

	_21c4dde4d_Directory(void) = default;

	inline bool operator==(_21c4dde4d_Directory _other) { return true; }

	inline bool operator!=(_21c4dde4d_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21c4ea91b_File> static__21c4ead7d_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_21c4ea91b_File>> static__21c4eb125_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__21c4eb3bc_Read(jule::Str);
inline jule::VoidExceptional static__21c4eb71e_Write(jule::Str, jule::Slice<jule::U8>, jule::I32);
inline jule::VoidExceptional static__21c4eba71_WriteStr(jule::Str, jule::Str*, jule::I32);
inline jule::Exceptional<jule::I32> _21c4ec038_Seek(_21c4ea91b_File*, jule::I32, jule::I32);
inline jule::Exceptional<jule::I32> _21c4ec346_WriteStr(_21c4ea91b_File*, jule::Str*);
inline jule::VoidExceptional _21c4ec522_Close(_21c4ea91b_File*);
inline jule::Exceptional<jule::Ptr<_21c4ea91b_File>> static__21c5cee2e_Open(jule::Str, jule::I32, jule::I32);
inline jule::VoidExceptional static__21c5d013d_Remove(jule::Str);
inline jule::Exceptional<jule::I32> _21c5d054a_Write(_21c4ea91b_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I32> _21c5d0858_Read(_21c4ea91b_File*, jule::Slice<jule::U8>);
struct _21c4ea91b_File {
	jule::Uintptr _field_handle = 0;
	

	_21c4ea91b_File(void) = default;

	inline bool operator==(_21c4ea91b_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_21c4ea91b_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c4ed468_IsDir(_21c4ed05b_Status*);
inline jule::Bool _21c4ed6cc_IsReg(_21c4ed05b_Status*);
inline jule::U32 _21c4ed941_Size(_21c4ed05b_Status*);
inline jule::Exceptional<jule::Ptr<_21c4ed05b_Status>> static__21d5e159e_Of(jule::Str);
struct _21c4ed05b_Status {
	jule::I32 _field_mode = 0LL;
	jule::U32 _field_size = 0;
	

	_21c4ed05b_Status(void) = default;

	inline bool operator==(_21c4ed05b_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_21c4ed05b_Status _other) { return !this->operator==(_other); }


};
struct _21d716e99_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	_21d716e99_cmdAttrs(void) = default;

	inline bool operator==(_21d716e99_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_21d716e99_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _21d6755de_Log {
	jule::I32 _field_Kind = 0LL;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_21d6755de_Log(void) = default;

	inline bool operator==(_21d6755de_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_21d6755de_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _21da1adb3_Prec(_21da1aa0b_Token*);
struct _21da1aa0b_Token {
	jule::Ptr<_21da20d96_File> _field_File;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U32 _field_Id = 0LLU;
	

	_21da1aa0b_Token(void) = default;

	inline bool operator==(_21da1aa0b_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_21da1aa0b_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _21da212a3_IsOk(_21da20d96_File*);
inline void _21da21528_Fill(_21da20d96_File*, jule::Slice<jule::U8>);
inline jule::Str _21da2178c_Dir(_21da20d96_File*);
inline jule::Str _21da21a01_Name(_21da20d96_File*);
inline jule::Uintptr _21da21c65_Addr(_21da20d96_File*);
inline jule::Str _21da22073_GetRow(_21da20d96_File*, jule::I32);
struct _21da20d96_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _field_Tokens;
	

	_21da20d96_File(void) = default;


};
struct _21da22ded_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U32 _field_id = 0LLU;
	

	_21da22ded_kindPair(void) = default;

	inline bool operator==(_21da22ded_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_21da22ded_kindPair _other) { return !this->operator==(_other); }


};
inline void _21da29003_pushErr(_21da2895e_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _21da29322_pushErrTok(_21da2895e_lex*, jule::Ptr<_21da1aa0b_Token>*, jule::Str);
inline void _21da294ed_lex(_21da2895e_lex*);
inline jule::Str _21da2980b_id(_21da2895e_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _21da29a70_resume(_21da2895e_lex*);
inline void _21da29ce5_lexLineComment(_21da2895e_lex*, jule::Ptr<_21da1aa0b_Token>*);
inline void _21da2a06a_lexRangeComment(_21da2895e_lex*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Str _21da2a378_num(_21da2895e_lex*, jule::Slice<jule::U8>*);
inline jule::Str _21da2a686_escapeSeq(_21da2895e_lex*, jule::Slice<jule::U8>*);
inline jule::Str _21da2aa3d_getRune(_21da2895e_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _21da2ad4b_lexRune(_21da2895e_lex*, jule::Slice<jule::U8>*);
inline jule::Str _21da2b0b0_lexStr(_21da2895e_lex*);
inline jule::Bool _21da2b324_isFirstTokenOfLine(_21da2895e_lex*);
inline void _21da2b500_newLine(_21da2895e_lex*);
inline jule::Bool _21da2b9ea_isOp(_21da2895e_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U32, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _21da2bda2_lexBasicOps(_21da2895e_lex*, jule::Slice<jule::U8>, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _21da2c259_lexId(_21da2895e_lex*, jule::Slice<jule::U8>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _21da2c611_lexNum(_21da2895e_lex*, jule::Slice<jule::U8>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Ptr<_21da1aa0b_Token> _21da2c875_token(_21da2895e_lex*);
struct _21da2895e_lex {
	jule::I32 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _field_tokens;
	jule::Ptr<_21da20d96_File> _field_file;
	jule::I32 _field_pos = 0;
	jule::I32 _field_column = 0;
	jule::I32 _field_row = 0;
	jule::Slice<_21d6755de_Log> _field_errors;
	

	_21da2895e_lex(void) = default;


};
struct _21e69e062_floatInfo {
	jule::U32 _field_mantbits = 0;
	jule::U32 _field_expbits = 0;
	jule::I32 _field_bias = 0;
	

	_21e69e062_floatInfo(void) = default;

	inline bool operator==(_21e69e062_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_21e69e062_floatInfo _other) { return !this->operator==(_other); }


};
struct _21e69ea02_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_21e69ea02_decimalSlice(void) = default;


};
struct _21e6b0d32_leftCheat {
	jule::I32 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_21e6b0d32_leftCheat(void) = default;

	inline bool operator==(_21e6b0d32_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_21e6b0d32_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _21e6a8874_set(_21e6b1805_decimal*, jule::Str);
inline __jule_tuple_u64__jule_tuple_bool _21e6a8b82_floatBits(_21e6b1805_decimal*, _21e69e062_floatInfo*);
inline void _21e6b1bce_assign(_21e6b1805_decimal*, jule::U64);
inline void _21e6b1e54_shift(_21e6b1805_decimal*, jule::I32);
inline void _21e6b21c9_roundDown(_21e6b1805_decimal*, jule::I32);
inline void _21e6b244e_roundUp(_21e6b1805_decimal*, jule::I32);
inline void _21e6b26c4_round(_21e6b1805_decimal*, jule::I32);
inline jule::U64 _21e6b2938_roundedInteger(_21e6b1805_decimal*);
struct _21e6b1805_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_21e6b1805_decimal(void) = default;

	inline bool operator==(_21e6b1805_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_21e6b1805_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21e6c53da_Const> static__21e6c585d_NewI64(jule::I64);
inline jule::Ptr<_21e6c53da_Const> static__21e6c5b05_NewU64(jule::U64);
inline jule::Ptr<_21e6c53da_Const> static__21e6c5d9c_NewBool(jule::Bool);
inline jule::Ptr<_21e6c53da_Const> static__21e6c6144_NewStr(jule::Str);
inline jule::Ptr<_21e6c53da_Const> static__21e6c63db_NewF64(jule::F64);
inline jule::Ptr<_21e6c53da_Const> static__21e6c65d9_NewNil(void);
inline jule::I64 _21e6c6bd3_ReadI64(_21e6c53da_Const*);
inline jule::U64 _21e6c6e47_ReadU64(_21e6c53da_Const*);
inline jule::Bool _21e6c71ab_ReadBool(_21e6c53da_Const*);
inline jule::Str _21e6c7420_ReadStr(_21e6c53da_Const*);
inline jule::F64 _21e6c7684_ReadF64(_21e6c53da_Const*);
inline jule::I64 _21e6c78e8_AsI64(_21e6c53da_Const*);
inline jule::U64 _21e6c7b5c_AsU64(_21e6c53da_Const*);
inline jule::F64 _21e6c7dc1_AsF64(_21e6c53da_Const*);
inline void _21e6c8146_SetI64(_21e6c53da_Const*, jule::I64);
inline void _21e6c83bb_SetU64(_21e6c53da_Const*, jule::U64);
inline void _21e6c8641_SetBool(_21e6c53da_Const*, jule::Bool);
inline void _21e6c88b6_SetStr(_21e6c53da_Const*, jule::Str);
inline void _21e6c8b3b_SetF64(_21e6c53da_Const*, jule::F64);
inline void _21e6c8d17_SetNil(_21e6c53da_Const*);
inline jule::Bool _21e6c907b_IsI64(_21e6c53da_Const*);
inline jule::Bool _21e6c92e0_IsU64(_21e6c53da_Const*);
inline jule::Bool _21e6c9554_IsBool(_21e6c53da_Const*);
inline jule::Bool _21e6c97b8_IsStr(_21e6c53da_Const*);
inline jule::Bool _21e6c9a2c_IsF64(_21e6c53da_Const*);
inline jule::Bool _21e6c9c91_IsNil(_21e6c53da_Const*);
inline jule::Bool _21e6ca09e_AreSameTypes(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6ca3ac_And(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6ca6ba_Or(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6ca9c8_Eq(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6cacd6_Lt(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6cb0e4_LtEq(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6cb402_Gt(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6cb710_GtEq(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6cba1d_Add(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6cbd2b_Sub(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6cc139_Mul(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6cc447_Div(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6cc755_Mod(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6cca63_BitwiseAnd(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6ccd71_BitwiseOr(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6cd17e_Xor(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6cd48c_Lshift(_21e6c53da_Const*, _21e6c53da_Const);
inline jule::Bool _21e6cd79a_Rshift(_21e6c53da_Const*, _21e6c53da_Const);
struct _21e6c53da_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_21e6c53da_Const(void) = default;

	inline jule::Bool operator==(_21e6c53da_Const _other) { return _21e6ca9c8_Eq(this, _other); }

	inline bool operator!=(_21e6c53da_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_21e6c53da_Const _other) { return _21e6cb402_Gt(this, _other); }

	inline jule::Bool operator>=(_21e6c53da_Const _other) { return _21e6cb710_GtEq(this, _other); }

	inline jule::Bool operator<(_21e6c53da_Const _other) { return _21e6cacd6_Lt(this, _other); }

	inline jule::Bool operator<=(_21e6c53da_Const _other) { return _21e6cb0e4_LtEq(this, _other); }


};
struct _22117005e_Ast {
	jule::Ptr<_21da20d96_File> _field_File;
	jule::Slice<jule::Ptr<_221171307_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_2211bbe46_UseDecl>> _field_UseDecls;
	jule::Slice<_221170e0b_Node> _field_Nodes;
	

	_22117005e_Ast(void) = default;


};
struct _221170e0b_Node {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_221170e0b_Node(void) = default;

	inline bool operator==(_221170e0b_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_221170e0b_Node _other) { return !this->operator==(_other); }


};
struct _221171307_Directive {
	jule::Ptr<_21da1aa0b_Token> _field_Tag;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _field_Args;
	

	_221171307_Directive(void) = default;


};
struct _2211a478b_TypeDecl {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_2211a478b_TypeDecl(void) = default;

	inline bool operator==(_2211a478b_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2211a478b_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _2211a51b5_IsPrim(_2211a4d52_IdentTypeDecl*);
struct _2211a4d52_IdentTypeDecl {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _field_Generics;
	

	_2211a4d52_IdentTypeDecl(void) = default;


};
struct _2211a54a1_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_2211a4d52_IdentTypeDecl>> _field_Idents;
	

	_2211a54a1_SubIdentTypeDecl(void) = default;


};
struct _2211a5858_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _field_Idents;
	jule::Ptr<_2211a478b_TypeDecl> _field_Kind;
	

	_2211a5858_NamespaceTypeDecl(void) = default;


};
struct _2211a5b44_SptrTypeDecl {
	jule::Ptr<_2211a478b_TypeDecl> _field_Elem;
	

	_2211a5b44_SptrTypeDecl(void) = default;

	inline bool operator==(_2211a5b44_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2211a5b44_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _2211a6040_SlcTypeDecl {
	jule::Ptr<_2211a478b_TypeDecl> _field_Elem;
	

	_2211a6040_SlcTypeDecl(void) = default;

	inline bool operator==(_2211a6040_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2211a6040_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _2211a632b_TupleTypeDecl {
	jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _field_Types;
	

	_2211a632b_TupleTypeDecl(void) = default;


};
inline jule::Bool _2211a6969_IsUnsafe(_2211a6617_PtrTypeDecl*);
struct _2211a6617_PtrTypeDecl {
	jule::Ptr<_2211a478b_TypeDecl> _field_Elem;
	

	_2211a6617_PtrTypeDecl(void) = default;

	inline bool operator==(_2211a6617_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2211a6617_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _2211a7173_AutoSized(_2211a6c99_ArrTypeDecl*);
struct _2211a6c99_ArrTypeDecl {
	jule::Ptr<_2211a478b_TypeDecl> _field_Elem;
	jule::Ptr<_2211a8cac_Expr> _field_Size;
	

	_2211a6c99_ArrTypeDecl(void) = default;

	inline bool operator==(_2211a6c99_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_2211a6c99_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _2211a74e7_MapTypeDecl {
	jule::Ptr<_2211a478b_TypeDecl> _field_Key;
	jule::Ptr<_2211a478b_TypeDecl> _field_Val;
	

	_2211a74e7_MapTypeDecl(void) = default;

	inline bool operator==(_2211a74e7_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_2211a74e7_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _2211a789e_RetTypeDecl {
	jule::Ptr<_2211a478b_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _field_Idents;
	

	_2211a789e_RetTypeDecl(void) = default;


};
struct _2211a8cac_Expr {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_21da1aa0b_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_2211a8cac_Expr(void) = default;

	inline bool operator==(_2211a8cac_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2211a8cac_Expr _other) { return !this->operator==(_other); }


};
struct _2211a9098_RangeExpr {
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	

	_2211a9098_RangeExpr(void) = default;

	inline bool operator==(_2211a9098_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211a9098_RangeExpr _other) { return !this->operator==(_other); }


};
struct _2211a964d_UseExpr {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	

	_2211a964d_UseExpr(void) = default;

	inline bool operator==(_2211a964d_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211a964d_UseExpr _other) { return !this->operator==(_other); }


};
struct _2211a9939_TupleExpr {
	jule::Slice<jule::Ptr<_2211a8cac_Expr>> _field_Expr;
	

	_2211a9939_TupleExpr(void) = default;


};
inline jule::Bool _2211aa143_IsNil(_2211a9ce1_LitExpr*);
struct _2211a9ce1_LitExpr {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Value;
	

	_2211a9ce1_LitExpr(void) = default;

	inline bool operator==(_2211a9ce1_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_2211a9ce1_LitExpr _other) { return !this->operator==(_other); }


};
struct _2211aa4ea_UnsafeExpr {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	

	_2211aa4ea_UnsafeExpr(void) = default;

	inline bool operator==(_2211aa4ea_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211aa4ea_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _2211aacc0_IsSelf(_2211aa96d_IdentExpr*);
struct _2211aa96d_IdentExpr {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	

	_2211aa96d_IdentExpr(void) = default;

	inline bool operator==(_2211aa96d_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_2211aa96d_IdentExpr _other) { return !this->operator==(_other); }


};
struct _2211ab177_UnaryExpr {
	jule::Ptr<_21da1aa0b_Token> _field_Op;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	

	_2211ab177_UnaryExpr(void) = default;

	inline bool operator==(_2211ab177_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211ab177_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _2211ab52e_VariadicExpr {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	

	_2211ab52e_VariadicExpr(void) = default;

	inline bool operator==(_2211ab52e_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211ab52e_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _2211ab8d6_CastExpr {
	jule::Ptr<_2211a478b_TypeDecl> _field_Kind;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	

	_2211ab8d6_CastExpr(void) = default;

	inline bool operator==(_2211ab8d6_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211ab8d6_CastExpr _other) { return !this->operator==(_other); }


};
struct _2211abc8d_NsSelectionExpr {
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _field_Ns;
	jule::Ptr<_21da1aa0b_Token> _field_Ident;
	

	_2211abc8d_NsSelectionExpr(void) = default;


};
struct _2211ac211_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	jule::Ptr<_21da1aa0b_Token> _field_Ident;
	

	_2211ac211_SubIdentExpr(void) = default;

	inline bool operator==(_2211ac211_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_2211ac211_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _2211ac684_BinopExpr {
	jule::Ptr<_2211a8cac_Expr> _field_Left;
	jule::Ptr<_2211a8cac_Expr> _field_Right;
	jule::Ptr<_21da1aa0b_Token> _field_Op;
	

	_2211ac684_BinopExpr(void) = default;

	inline bool operator==(_2211ac684_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_2211ac684_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _2211ad102_Unhandled(_2211acc8e_FnCallExpr*);
inline jule::Bool _2211ad366_Ignored(_2211acc8e_FnCallExpr*);
struct _2211acc8e_FnCallExpr {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_2211a8cac_Expr>> _field_Args;
	jule::Ptr<_2211b4724_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_2211acc8e_FnCallExpr(void) = default;


};
inline jule::Bool _2211ada70_IsTargeted(_2211ad71d_FieldExprPair*);
struct _2211ad71d_FieldExprPair {
	jule::Ptr<_21da1aa0b_Token> _field_Field;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	

	_2211ad71d_FieldExprPair(void) = default;

	inline bool operator==(_2211ad71d_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211ad71d_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _2211ade6b_StructLit {
	jule::Ptr<_21da1aa0b_Token> _field_End;
	jule::Ptr<_2211a478b_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_2211a8cac_Expr>> _field_Exprs;
	

	_2211ade6b_StructLit(void) = default;


};
inline jule::Bool _2211ae741_IsEmpty(_2211ae3de_BraceLit*);
struct _2211ae3de_BraceLit {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_21da1aa0b_Token> _field_End;
	jule::Slice<jule::Ptr<_2211a8cac_Expr>> _field_Exprs;
	

	_2211ae3de_BraceLit(void) = default;


};
struct _2211aebb4_KeyValPair {
	jule::Ptr<_2211a8cac_Expr> _field_Key;
	jule::Ptr<_2211a8cac_Expr> _field_Val;
	jule::Ptr<_21da1aa0b_Token> _field_Colon;
	

	_2211aebb4_KeyValPair(void) = default;

	inline bool operator==(_2211aebb4_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_2211aebb4_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _2211b06cb_IsEmpty(_2211b039b_SliceExpr*);
struct _2211b039b_SliceExpr {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_21da1aa0b_Token> _field_End;
	jule::Slice<jule::Ptr<_2211a8cac_Expr>> _field_Exprs;
	

	_2211b039b_SliceExpr(void) = default;


};
struct _2211b0c1a_IndexingExpr {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_21da1aa0b_Token> _field_End;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	jule::Ptr<_2211a8cac_Expr> _field_Index;
	

	_2211b0c1a_IndexingExpr(void) = default;

	inline bool operator==(_2211b0c1a_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_2211b0c1a_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _2211b1325_SlicingExpr {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_21da1aa0b_Token> _field_End;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	jule::Ptr<_2211a8cac_Expr> _field_Start;
	jule::Ptr<_2211a8cac_Expr> _field_To;
	

	_2211b1325_SlicingExpr(void) = default;

	inline bool operator==(_2211b1325_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_2211b1325_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _2211b1611_Constraint {
	jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _field_Mask;
	

	_2211b1611_Constraint(void) = default;


};
struct _2211b1a84_GenericDecl {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_2211b1611_Constraint> _field_Constraint;
	

	_2211b1a84_GenericDecl(void) = default;

	inline bool operator==(_2211b1a84_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_2211b1a84_GenericDecl _other) { return !this->operator==(_other); }


};
struct _2211b1e3b_LabelSt {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	

	_2211b1e3b_LabelSt(void) = default;

	inline bool operator==(_2211b1e3b_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_2211b1e3b_LabelSt _other) { return !this->operator==(_other); }


};
struct _2211b22e3_GotoSt {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_21da1aa0b_Token> _field_Label;
	

	_2211b22e3_GotoSt(void) = default;

	inline bool operator==(_2211b22e3_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_2211b22e3_GotoSt _other) { return !this->operator==(_other); }


};
struct _2211b25ce_FallSt {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	

	_2211b25ce_FallSt(void) = default;

	inline bool operator==(_2211b25ce_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_2211b25ce_FallSt _other) { return !this->operator==(_other); }


};
struct _2211b2bd9_AssignLeft {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	

	_2211b2bd9_AssignLeft(void) = default;

	inline bool operator==(_2211b2bd9_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211b2bd9_AssignLeft _other) { return !this->operator==(_other); }


};
struct _2211b3228_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_21da1aa0b_Token> _field_Setter;
	jule::Slice<jule::Ptr<_2211b2bd9_AssignLeft>> _field_Left;
	jule::Ptr<_2211a8cac_Expr> _field_Right;
	

	_2211b3228_AssignSt(void) = default;


};
struct _2211b4119_Stmt {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_2211b4119_Stmt(void) = default;

	inline bool operator==(_2211b4119_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_2211b4119_Stmt _other) { return !this->operator==(_other); }


};
struct _2211b4724_ScopeTree {
	jule::Ptr<_2211b4724_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_2211b4119_Stmt> _field_Stmts;
	jule::Ptr<_21da1aa0b_Token> _field_End;
	

	_2211b4724_ScopeTree(void) = default;


};
inline jule::Bool _2211b525d_IsSelf(_2211b4dea_ParamDecl*);
inline jule::Bool _2211b54c2_IsRef(_2211b4dea_ParamDecl*);
struct _2211b4dea_ParamDecl {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_2211a478b_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_2211b4dea_ParamDecl(void) = default;

	inline bool operator==(_2211b4dea_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_2211b4dea_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _2211b656c_IsAnon(_2211b621a_FnDecl*);
struct _2211b621a_FnDecl {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_221171307_Directive>> _field_Directives;
	jule::Ptr<_2211b4724_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>> _field_Generics;
	jule::Ptr<_2211a789e_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_2211b4dea_ParamDecl>> _field_Params;
	

	_2211b621a_FnDecl(void) = default;


};
struct _2211b71e9_VarDecl {
	jule::Ptr<_2211b4724_ScopeTree> _field_Scope;
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_221171307_Directive>> _field_Directives;
	jule::Ptr<_2211a478b_TypeDecl> _field_Kind;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	

	_2211b71e9_VarDecl(void) = default;


};
struct _2211b75a1_RetSt {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	

	_2211b75a1_RetSt(void) = default;

	inline bool operator==(_2211b75a1_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211b75a1_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _2211b8063_IsInf(_2211b7c11_Iter*);
struct _2211b7c11_Iter {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_2211b4724_ScopeTree> _field_Scope;
	

	_2211b7c11_Iter(void) = default;

	inline bool operator==(_2211b7c11_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_2211b7c11_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _2211b8838_IsWhileNext(_2211b84d6_WhileKind*);
struct _2211b84d6_WhileKind {
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_21da1aa0b_Token> _field_NextToken;
	

	_2211b84d6_WhileKind(void) = default;

	inline bool operator==(_2211b84d6_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_2211b84d6_WhileKind _other) { return !this->operator==(_other); }


};
struct _2211b8d77_RangeKind {
	jule::Ptr<_21da1aa0b_Token> _field_InToken;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	jule::Ptr<_2211b71e9_VarDecl> _field_KeyA;
	jule::Ptr<_2211b71e9_VarDecl> _field_KeyB;
	

	_2211b8d77_RangeKind(void) = default;

	inline bool operator==(_2211b8d77_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_2211b8d77_RangeKind _other) { return !this->operator==(_other); }


};
struct _2211b922e_BreakSt {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_21da1aa0b_Token> _field_Label;
	

	_2211b922e_BreakSt(void) = default;

	inline bool operator==(_2211b922e_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_2211b922e_BreakSt _other) { return !this->operator==(_other); }


};
struct _2211b95d6_ContSt {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_21da1aa0b_Token> _field_Label;
	

	_2211b95d6_ContSt(void) = default;

	inline bool operator==(_2211b95d6_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_2211b95d6_ContSt _other) { return !this->operator==(_other); }


};
struct _2211b9a59_If {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	jule::Ptr<_2211b4724_ScopeTree> _field_Scope;
	

	_2211b9a59_If(void) = default;

	inline bool operator==(_2211b9a59_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_2211b9a59_If _other) { return !this->operator==(_other); }


};
struct _2211b9e11_Else {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_2211b4724_ScopeTree> _field_Scope;
	

	_2211b9e11_Else(void) = default;

	inline bool operator==(_2211b9e11_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_2211b9e11_Else _other) { return !this->operator==(_other); }


};
struct _2211ba384_Conditional {
	jule::Ptr<_2211b9a59_If> _field_Head;
	jule::Slice<jule::Ptr<_2211b9a59_If>> _field_Tail;
	jule::Ptr<_2211b9e11_Else> _field_Default;
	

	_2211ba384_Conditional(void) = default;


};
struct _2211baa5a_TypeAliasDecl {
	jule::Ptr<_2211b4724_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_2211a478b_TypeDecl> _field_Kind;
	

	_2211baa5a_TypeAliasDecl(void) = default;

	inline bool operator==(_2211baa5a_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2211baa5a_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _2211baecd_Case {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_2211b4724_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_2211a8cac_Expr>> _field_Exprs;
	

	_2211baecd_Case(void) = default;


};
struct _2211bb6a4_MatchCase {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_21da1aa0b_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_2211baecd_Case>> _field_Cases;
	jule::Ptr<_2211b9e11_Else> _field_Default;
	

	_2211bb6a4_MatchCase(void) = default;


};
struct _2211bbe46_UseDecl {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _field_Selected;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	

	_2211bbe46_UseDecl(void) = default;


};
inline jule::Bool _2211bc71b_AutoExpr(_2211bc3b9_EnumItemDecl*);
struct _2211bc3b9_EnumItemDecl {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	

	_2211bc3b9_EnumItemDecl(void) = default;

	inline bool operator==(_2211bc3b9_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211bc3b9_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _2211bd475_DefaultTyped(_2211bcde2_EnumDecl*);
struct _2211bcde2_EnumDecl {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_2211a478b_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_2211bc3b9_EnumItemDecl>> _field_Items;
	jule::Ptr<_21da1aa0b_Token> _field_End;
	

	_2211bcde2_EnumDecl(void) = default;


};
struct _2211bd8e8_TypeEnumItemDecl {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_2211a478b_TypeDecl> _field_Kind;
	

	_2211bd8e8_TypeEnumItemDecl(void) = default;

	inline bool operator==(_2211bd8e8_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2211bd8e8_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _2211be003_TypeEnumDecl {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_2211bd8e8_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_21da1aa0b_Token> _field_End;
	

	_2211be003_TypeEnumDecl(void) = default;


};
struct _2211be201_FieldDecl {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_2211a478b_TypeDecl> _field_Kind;
	jule::Ptr<_2211a8cac_Expr> _field_Default;
	

	_2211be201_FieldDecl(void) = default;

	inline bool operator==(_2211be201_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_2211be201_FieldDecl _other) { return !this->operator==(_other); }


};
struct _2211be9a4_StructDecl {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_21da1aa0b_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_2211be201_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_221171307_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>> _field_Generics;
	

	_2211be9a4_StructDecl(void) = default;


};
struct _2211c017a_TraitDecl {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_21da1aa0b_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_2211b621a_FnDecl>> _field_Methods;
	

	_2211c017a_TraitDecl(void) = default;


};
inline jule::Bool _2211c0ae8_IsTraitImpl(_2211c0785_Impl*);
inline jule::Bool _2211c0d5c_IsStructImpl(_2211c0785_Impl*);
struct _2211c0785_Impl {
	jule::Ptr<_21da1aa0b_Token> _field_End;
	jule::Ptr<_2211a478b_TypeDecl> _field_Base;
	jule::Ptr<_2211a478b_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_2211b621a_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_2211b71e9_VarDecl>> _field_Statics;
	

	_2211c0785_Impl(void) = default;


};
inline jule::Ptr<_2211c6bed_FieldIns> _2211c21b0_instance(jule::Ptr<_2211c1d08_Field>);
struct _2211c1d08_Field {
	jule::Ptr<_2211c48cc_Struct> _field_Owner;
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_221459c50_TypeSymbol> _field_Kind;
	jule::Ptr<_2211a8cac_Expr> _field_Default;
	

	_2211c1d08_Field(void) = default;

	inline bool operator==(_2211c1d08_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_2211c1d08_Field _other) { return !this->operator==(_other); }


};
struct _2211c3ab8_Operators {
	jule::Ptr<_2211dc97d_FnIns> _field_Eq;
	jule::Ptr<_2211dc97d_FnIns> _field_Gt;
	jule::Ptr<_2211dc97d_FnIns> _field_GtEq;
	jule::Ptr<_2211dc97d_FnIns> _field_Lt;
	jule::Ptr<_2211dc97d_FnIns> _field_LtEq;
	jule::Ptr<_2211dc97d_FnIns> _field_Shl;
	jule::Ptr<_2211dc97d_FnIns> _field_Shr;
	jule::Ptr<_2211dc97d_FnIns> _field_Add;
	jule::Ptr<_2211dc97d_FnIns> _field_Sub;
	jule::Ptr<_2211dc97d_FnIns> _field_Div;
	jule::Ptr<_2211dc97d_FnIns> _field_Mul;
	jule::Ptr<_2211dc97d_FnIns> _field_Mod;
	jule::Ptr<_2211dc97d_FnIns> _field_BitAnd;
	jule::Ptr<_2211dc97d_FnIns> _field_BitOr;
	jule::Ptr<_2211dc97d_FnIns> _field_BitXor;
	jule::Ptr<_2211dc97d_FnIns> _field_Neg;
	jule::Ptr<_2211dc97d_FnIns> _field_Pos;
	jule::Ptr<_2211dc97d_FnIns> _field_BitNot;
	jule::Ptr<_2211dc97d_FnIns> _field_AddAssign;
	jule::Ptr<_2211dc97d_FnIns> _field_SubAssign;
	jule::Ptr<_2211dc97d_FnIns> _field_DivAssign;
	jule::Ptr<_2211dc97d_FnIns> _field_MulAssign;
	jule::Ptr<_2211dc97d_FnIns> _field_ModAssign;
	jule::Ptr<_2211dc97d_FnIns> _field_ShlAssign;
	jule::Ptr<_2211dc97d_FnIns> _field_ShrAssign;
	jule::Ptr<_2211dc97d_FnIns> _field_BitOrAssign;
	jule::Ptr<_2211dc97d_FnIns> _field_BitAndAssign;
	jule::Ptr<_2211dc97d_FnIns> _field_BitXorAssign;
	

	_2211c3ab8_Operators(void) = default;

	inline bool operator==(_2211c3ab8_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_2211c3ab8_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2211c76e3_StructIns> _2211c4d3e_instance(jule::Ptr<_2211c48cc_Struct>);
inline jule::Ptr<_2211c76e3_StructIns> _2211c5119_appendInstance(_2211c48cc_Struct*, jule::Ptr<_2211c76e3_StructIns>*);
inline jule::Ptr<_2211d9ccc_Fn> _2211c54c1_FindMethod(_2211c48cc_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_22126b17c_Var> _2211c57ce_FindStatic(_2211c48cc_Struct*, jule::Str);
inline jule::Ptr<_2211c1d08_Field> _2211c5adc_FindField(_2211c48cc_Struct*, jule::Str);
inline jule::Bool _2211c5dea_IsImplements(_2211c48cc_Struct*, jule::Ptr<_2211ebeed_Trait>);
inline jule::Bool _2211c6208_IsDerives(_2211c48cc_Struct*, jule::Str);
inline jule::Bool _2211c6516_IsUses(_2211c48cc_Struct*, jule::Ptr<_2211c48cc_Struct>);
inline jule::Bool _2211c677a_HasRefAccessible(_2211c48cc_Struct*);
struct _2211c48cc_Struct {
	jule::Ptr<_22124ad71_Sema> _field_sema;
	jule::Slice<jule::Ptr<_2211c48cc_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_2211c48cc_Struct>> _field_Uses;
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_2211c1d08_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_2211d9ccc_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_22126b17c_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_221171307_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_2211ebeed_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_2211c76e3_StructIns>> _field_Instances;
	

	_2211c48cc_Struct(void) = default;


};
struct _2211c6bed_FieldIns {
	jule::Ptr<_2211c1d08_Field> _field_Decl;
	jule::Ptr<_221453397_TypeKind> _field_Kind;
	jule::Ptr<_221425c2c_Data> _field_Default;
	

	_2211c6bed_FieldIns(void) = default;

	inline bool operator==(_2211c6bed_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_2211c6bed_FieldIns _other) { return !this->operator==(_other); }


};
struct _2211cb692_OperandExprModel {
	jule::Ptr<_221453397_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_2211cb692_OperandExprModel(void) = default;

	inline bool operator==(_2211cb692_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_2211cb692_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _2211cbb59_BinopExprModel {
	jule::Ptr<_2211cb692_OperandExprModel> _field_Left;
	jule::Ptr<_2211cb692_OperandExprModel> _field_Right;
	jule::Ptr<_21da1aa0b_Token> _field_Op;
	

	_2211cbb59_BinopExprModel(void) = default;

	inline bool operator==(_2211cbb59_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_2211cbb59_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _2211cc011_UnaryExprModel {
	jule::Ptr<_221425c2c_Data> _field_Expr;
	jule::Ptr<_21da1aa0b_Token> _field_Op;
	

	_2211cc011_UnaryExprModel(void) = default;

	inline bool operator==(_2211cc011_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_2211cc011_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _2211cc40c_StructArgExprModel {
	jule::Ptr<_2211c6bed_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_2211cc40c_StructArgExprModel(void) = default;

	inline bool operator==(_2211cc40c_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211cc40c_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _2211cc7b4_StructLitExprModel {
	jule::Ptr<_2211c76e3_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_2211cc40c_StructArgExprModel>> _field_Args;
	

	_2211cc7b4_StructLitExprModel(void) = default;


};
struct _2211ccac2_AllocStructLitExprModel {
	jule::Ptr<_2211cc7b4_StructLitExprModel> _field_Lit;
	

	_2211ccac2_AllocStructLitExprModel(void) = default;

	inline bool operator==(_2211ccac2_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_2211ccac2_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _2211cd122_CastingExprModel {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_221453397_TypeKind> _field_Kind;
	jule::Ptr<_221453397_TypeKind> _field_ExprKind;
	

	_2211cd122_CastingExprModel(void) = default;

	inline bool operator==(_2211cd122_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_2211cd122_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _2211cd9c4_FnCallExprModel {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_2211dc97d_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_221224135_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_2211cd9c4_FnCallExprModel(void) = default;


};
struct _2211cdd7b_SliceExprModel {
	jule::Ptr<_221453397_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_2211cdd7b_SliceExprModel(void) = default;


};
struct _2211ce2ee_IndexingExprModel {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_221425c2c_Data> _field_Expr;
	jule::Ptr<_221425c2c_Data> _field_Index;
	

	_2211ce2ee_IndexingExprModel(void) = default;

	inline bool operator==(_2211ce2ee_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_2211ce2ee_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _2211ce6a6_AnonFnExprModel {
	jule::Ptr<_2211dc97d_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_2211ce6a6_AnonFnExprModel(void) = default;

	inline bool operator==(_2211ce6a6_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_2211ce6a6_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _2211cea5d_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_2211cea5d_KeyValPairExprModel(void) = default;

	inline bool operator==(_2211cea5d_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_2211cea5d_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _2211ceed1_MapExprModel {
	jule::Ptr<_221453397_TypeKind> _field_KeyKind;
	jule::Ptr<_221453397_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_2211cea5d_KeyValPairExprModel>> _field_Entries;
	

	_2211ceed1_MapExprModel(void) = default;


};
struct _2211d0520_SlicingExprModel {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_2211d0520_SlicingExprModel(void) = default;

	inline bool operator==(_2211d0520_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_2211d0520_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _2211d0a5e_TraitSubIdentExprModel {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_2211d9ccc_Fn> _field_Method;
	jule::Ptr<_2211ebeed_Trait> _field_Trt;
	

	_2211d0a5e_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_2211d0a5e_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_2211d0a5e_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _2211d1345_StructSubIdentExprModel {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Ptr<_221425c2c_Data> _field_Expr;
	jule::Ptr<_2211dc97d_FnIns> _field_Method;
	jule::Ptr<_2211c6bed_FieldIns> _field_Field;
	jule::Ptr<_2211c76e3_StructIns> _field_Owner;
	

	_2211d1345_StructSubIdentExprModel(void) = default;

	inline bool operator==(_2211d1345_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_2211d1345_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _2211d16db_StructStaticIdentExprModel {
	jule::Ptr<_2211c76e3_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_2211dc97d_FnIns> _field_Method;
	

	_2211d16db_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_2211d16db_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_2211d16db_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _2211d1aa4_ArrayExprModel {
	jule::Ptr<_22146195a_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_2211d1aa4_ArrayExprModel(void) = default;


};
struct _2211d1d90_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_2211d1d90_CommonIdentExprModel(void) = default;

	inline bool operator==(_2211d1d90_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_2211d1d90_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _2211d2401_CommonSubIdentExprModel {
	jule::Ptr<_221453397_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	

	_2211d2401_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_2211d2401_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_2211d2401_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _2211d26ed_TupleExprModel {
	jule::Slice<jule::Ptr<_221425c2c_Data>> _field_Datas;
	

	_2211d26ed_TupleExprModel(void) = default;


};
struct _2211d2ac7_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_2211d2ac7_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_2211d2ac7_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_2211d2ac7_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _2211d2eb2_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_2211d2eb2_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_2211d2eb2_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_2211d2eb2_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _2211d32d1_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_2211d32d1_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_2211d32d1_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211d32d1_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _2211d36bb_BuiltinNewCallExprModel {
	jule::Ptr<_221453397_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_2211d36bb_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_2211d36bb_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_2211d36bb_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _2211d3aa6_BuiltinPanicCallExprModel {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_2211d3aa6_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_2211d3aa6_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211d3aa6_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _2211d405c_BuiltinAssertCallExprModel {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_2211d405c_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_2211d405c_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_2211d405c_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _2211d4513_BuiltinMakeCallExprModel {
	jule::Ptr<_221453397_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_2211d4513_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_2211d4513_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_2211d4513_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _2211d48ed_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_2211d48ed_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_2211d48ed_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_2211d48ed_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _2211d4c1c_BuiltinLenCallExprModel {
	jule::Ptr<_221425c2c_Data> _field_Expr;
	

	_2211d4c1c_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_2211d4c1c_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211d4c1c_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _2211d503b_BuiltinCapCallExprModel {
	jule::Ptr<_221425c2c_Data> _field_Expr;
	

	_2211d503b_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_2211d503b_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211d503b_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _2211d56e0_BuiltinDeleteCallExprModel {
	jule::Ptr<_221425c2c_Data> _field_Dest;
	jule::Ptr<_221425c2c_Data> _field_Key;
	

	_2211d56e0_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_2211d56e0_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_2211d56e0_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _2211d5a53_BuiltinCopyCallExprModel {
	jule::Ptr<_221425c2c_Data> _field_Dest;
	jule::Ptr<_221425c2c_Data> _field_Src;
	

	_2211d5a53_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_2211d5a53_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_2211d5a53_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _2211d5e3d_BuiltinErrorCallExprModel {
	jule::Ptr<_2211dc97d_FnIns> _field_Func;
	jule::Ptr<_221425c2c_Data> _field_Err;
	

	_2211d5e3d_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_2211d5e3d_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_2211d5e3d_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _2211d623a_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_2211d623a_SizeofExprModel(void) = default;

	inline bool operator==(_2211d623a_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211d623a_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _2211d6526_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_2211d6526_AlignofExprModel(void) = default;

	inline bool operator==(_2211d6526_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211d6526_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _2211d6812_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_2211d6812_RuneExprModel(void) = default;

	inline bool operator==(_2211d6812_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_2211d6812_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _2211d6b20_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_2211d6b20_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_2211d6b20_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211d6b20_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _2211d6ed8_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_2211d6ed8_BackendEmitExprModel(void) = default;


};
struct _2211d72c4_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_2211d72c4_FreeExprModel(void) = default;

	inline bool operator==(_2211d72c4_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2211d72c4_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _2211d7c86_RetType {
	jule::Ptr<_221459c50_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _field_Idents;
	

	_2211d7c86_RetType(void) = default;


};
inline jule::Ptr<_2211dbaae_ParamIns> _2211d8858_instance(jule::Ptr<_2211d8490_Param>);
inline jule::Bool _2211d8abc_IsSelf(_2211d8490_Param*);
inline jule::Bool _2211d8d31_IsRef(_2211d8490_Param*);
struct _2211d8490_Param {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_221459c50_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_2211d8490_Param(void) = default;

	inline bool operator==(_2211d8490_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_2211d8490_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _2211da23e_IsVoid(_2211d9ccc_Fn*);
inline jule::Bool _2211da4a3_IsMethod(_2211d9ccc_Fn*);
inline jule::Bool _2211da717_IsEntryPoint(_2211d9ccc_Fn*);
inline jule::Bool _2211da97b_IsInit(_2211d9ccc_Fn*);
inline jule::Bool _2211dabe0_IsAnon(_2211d9ccc_Fn*);
inline jule::Bool _2211dae54_AnyVar(_2211d9ccc_Fn*);
inline jule::Ptr<_2211dc97d_FnIns> _2211db1b8_instanceForce(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Ptr<_2211dc97d_FnIns> _2211db42c_instance(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Ptr<_2211dc97d_FnIns> _2211db707_appendInstance(_2211d9ccc_Fn*, jule::Ptr<_2211dc97d_FnIns>*);
struct _2211d9ccc_Fn {
	jule::Ptr<_22124ad71_Sema> _field_sema;
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_221171307_Directive>> _field_Directives;
	jule::Ptr<_2211b4724_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>> _field_Generics;
	jule::Ptr<_2211d7c86_RetType> _field_Result;
	jule::Slice<jule::Ptr<_2211d8490_Param>> _field_Params;
	jule::Ptr<_2211c48cc_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_2211dc97d_FnIns>> _field_Instances;
	

	_2211d9ccc_Fn(void) = default;


};
inline jule::Str _2211dbe88_Str(_2211dbaae_ParamIns*);
struct _2211dbaae_ParamIns {
	jule::Ptr<_2211d8490_Param> _field_Decl;
	jule::Ptr<_221453397_TypeKind> _field_Kind;
	

	_2211dbaae_ParamIns(void) = default;

	inline bool operator==(_2211dbaae_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2211dbaae_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _2211dccad_Str(_2211dc97d_FnIns*);
inline jule::Bool _2211dd0bb_Equal(jule::Ptr<_2211dc97d_FnIns>, jule::Ptr<_221453397_TypeKind>);
inline jule::Bool _2211dd52d_EqualFn(jule::Ptr<_2211dc97d_FnIns>, jule::Ptr<_2211dc97d_FnIns>*);
inline jule::Bool _2211dd83b_equalTrait(jule::Ptr<_2211dc97d_FnIns>, jule::Ptr<_2211dc97d_FnIns>*);
inline jule::Slice<jule::Ptr<_221453397_TypeKind>> _2211ddaa0_Types(_2211dc97d_FnIns*);
inline jule::Bool _2211ddd14_IsBuiltin(_2211dc97d_FnIns*);
inline jule::Bool _2211de078_IsAnon(_2211dc97d_FnIns*);
inline jule::Bool _2211de386_Same(_2211dc97d_FnIns*, jule::Ptr<_2211dc97d_FnIns>);
inline jule::Str _2211de694_GetKindStr(_2211dc97d_FnIns*, jule::Bool);
struct _2211dc97d_FnIns {
	jule::Ptr<_2211c76e3_StructIns> _field_Owner;
	jule::Ptr<_2211d9ccc_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_221451b15_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_2211dbaae_ParamIns>> _field_Params;
	jule::Ptr<_221453397_TypeKind> _field_Result;
	jule::Ptr<_221224135_Scope> _field_Scope;
	jule::Ptr<_2211e08d7_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_2211dc97d_FnIns(void) = default;


};
inline jule::Ptr<_2211e08d7_ReferenceStack> static__2211e0b3a_new(void);
inline jule::I32 _2211e0ec0_Len(_2211e08d7_ReferenceStack*);
inline jule::Any _2211e12cd_At(_2211e08d7_ReferenceStack*, jule::I32);
inline void _2211e1553_Push(_2211e08d7_ReferenceStack*, jule::Any);
inline jule::Bool _20640c9ed_Exist(_2211e08d7_ReferenceStack*, jule::Ptr<_2211dc97d_FnIns>);
inline jule::Bool _20642176a_Exist(_2211e08d7_ReferenceStack*, jule::Ptr<_22126b17c_Var>);
inline jule::Bool _2064a14ba_Exist(_2211e08d7_ReferenceStack*, jule::Ptr<_2211c76e3_StructIns>);
inline jule::Bool _206896a58_Exist(_2211e08d7_ReferenceStack*, jule::Ptr<_2211ebeed_Trait>);
struct _2211e08d7_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_2211e08d7_ReferenceStack(void) = default;


};
struct _2211e1c18_Pass {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Text;
	

	_2211e1c18_Pass(void) = default;

	inline bool operator==(_2211e1c18_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_2211e1c18_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2211e6459_symbolBuilder> _2211e6910_getRoot(jule::Ptr<_2211e6459_symbolBuilder>);
inline void _2211e6cc8_pushErr(_2211e6459_symbolBuilder*, jule::Ptr<_21da1aa0b_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _2211e7191_pushErrText(_2211e6459_symbolBuilder*, jule::Ptr<_21da1aa0b_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _2211e74b0_pushSuggestion(_2211e6459_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2211e7867_checkCppUseDeclPath(_2211e6459_symbolBuilder*, jule::Ptr<_2211bbe46_UseDecl>*, jule::Str);
inline jule::Ptr<_221242a9e_ImportInfo> _2211e7b42_buildCppHeaderImport(_2211e6459_symbolBuilder*, jule::Ptr<_2211bbe46_UseDecl>*);
inline jule::Ptr<_221242a9e_ImportInfo> _2211e7e50_buildStdImport(_2211e6459_symbolBuilder*, jule::Ptr<_2211bbe46_UseDecl>*);
inline jule::Ptr<_221242a9e_ImportInfo> _2211e825d_buildIdentImport(jule::Ptr<_2211e6459_symbolBuilder>, jule::Ptr<_2211bbe46_UseDecl>*);
inline jule::Ptr<_221242a9e_ImportInfo> _2211e856b_buildImport(jule::Ptr<_2211e6459_symbolBuilder>, jule::Ptr<_2211bbe46_UseDecl>*);
inline jule::Bool _2211e8879_checkDuplicateUseDecl(_2211e6459_symbolBuilder*, jule::Ptr<_221242a9e_ImportInfo>*);
inline void _2211e8b98_implImportSelections(_2211e6459_symbolBuilder*, jule::Ptr<_221242a9e_ImportInfo>*, jule::Ptr<_2211bbe46_UseDecl>*);
inline jule::Str _2211e8ea6_getAsLinkPath(jule::Ptr<_2211e6459_symbolBuilder>, jule::Str);
inline void _2211e936e_pushCycleError(jule::Ptr<_2211e6459_symbolBuilder>, jule::Ptr<_2211e6459_symbolBuilder>*, jule::Str, jule::Str*);
inline void _2211e9737_pushCrossCycleError(jule::Ptr<_2211e6459_symbolBuilder>, jule::Ptr<_2211e6459_symbolBuilder>*, jule::Ptr<_221242a9e_ImportInfo>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _2211e9ade_checkImportCycles(jule::Ptr<_2211e6459_symbolBuilder>, jule::Ptr<_221242a9e_ImportInfo>, jule::Ptr<_2211bbe46_UseDecl>*);
inline void _2211e9ec9_checkPackageAccessibility(_2211e6459_symbolBuilder*, jule::Ptr<_2211bbe46_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _2211ea392_importPackage(jule::Ptr<_2211e6459_symbolBuilder>, jule::Ptr<_221242a9e_ImportInfo>*, jule::Ptr<_2211bbe46_UseDecl>*);
inline jule::Ptr<_221242a9e_ImportInfo> _2211ea6a0_importUseDecl(jule::Ptr<_2211e6459_symbolBuilder>, jule::Ptr<_2211bbe46_UseDecl>*);
inline void _2211ea87b_importUseDecls(jule::Ptr<_2211e6459_symbolBuilder>);
inline void _2211eab01_appendNode(_2211e6459_symbolBuilder*, _221170e0b_Node*);
inline void _2211eaccc_appendNodes(_2211e6459_symbolBuilder*);
inline void _2211eb052_pushDirectivePass(_2211e6459_symbolBuilder*, jule::Ptr<_221171307_Directive>*);
inline void _2211eb22d_appendTopDirectives(_2211e6459_symbolBuilder*);
inline void _2211eb409_build(jule::Ptr<_2211e6459_symbolBuilder>);
struct _2211e6459_symbolBuilder {
	jule::Ptr<_2211e6459_symbolBuilder> _field_owner;
	jule::Trait<_22123eded_Importer> _field_importer;
	jule::Slice<_21d6755de_Log> _field_errors;
	jule::Ptr<_22117005e_Ast> _field_ast;
	jule::Ptr<_221421222_SymbolTable> _field_table;
	

	_2211e6459_symbolBuilder(void) = default;


};
inline jule::Str _2211ec3e9_Str(_2211ebeed_Trait*);
inline jule::Bool _2211ec707_Equal(jule::Ptr<_2211ebeed_Trait>, jule::Ptr<_221453397_TypeKind>);
inline jule::Bool _2211eca8c_IsBuiltin(_2211ebeed_Trait*);
inline jule::Ptr<_2211d9ccc_Fn> _2211ecd9a_FindMethod(_2211ebeed_Trait*, jule::Str);
inline jule::Bool _2211ed1a8_inherits(jule::Ptr<_2211ebeed_Trait>, jule::Ptr<_2211ebeed_Trait>*);
inline jule::Ptr<_2211d9ccc_Fn> _2211ed4b6_findMethodInherit(_2211ebeed_Trait*, jule::Str*);
struct _2211ebeed_Trait {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_221459c50_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_2211d9ccc_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_2211c48cc_Struct>> _field_Implemented;
	

	_2211ebeed_Trait(void) = default;


};
inline jule::Bool _2211ee176_AutoExpr(_2211edc8b_EnumItem*);
struct _2211edc8b_EnumItem {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_221426ca5_Value> _field_Value;
	

	_2211edc8b_EnumItem(void) = default;

	inline bool operator==(_2211edc8b_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_2211edc8b_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _2211eeae4_Str(_2211ee781_Enum*);
inline jule::Bool _2211eee02_Equal(jule::Ptr<_2211ee781_Enum>, jule::Ptr<_221453397_TypeKind>);
inline jule::Ptr<_2211edc8b_EnumItem> _221200342_FindItem(_2211ee781_Enum*, jule::Str);
struct _2211ee781_Enum {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_221459c50_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_2211edc8b_EnumItem>> _field_Items;
	

	_2211ee781_Enum(void) = default;


};
struct _2212007b5_TypeEnumItem {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_221459c50_TypeSymbol> _field_Kind;
	

	_2212007b5_TypeEnumItem(void) = default;

	inline bool operator==(_2212007b5_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2212007b5_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _2212011ab_Str(_221200d7b_TypeEnum*);
inline jule::Bool _2212014b9_Equal(jule::Ptr<_221200d7b_TypeEnum>, jule::Ptr<_221453397_TypeKind>);
inline jule::Ptr<_2212007b5_TypeEnumItem> _2212018b5_FindItem(_221200d7b_TypeEnum*, jule::Str);
struct _221200d7b_TypeEnum {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_2212007b5_TypeEnumItem>> _field_Items;
	

	_221200d7b_TypeEnum(void) = default;


};
inline jule::Str _2212033cd_Str(_221202ed2_comptimeRange*);
inline jule::Bool _2212036db_Equal(jule::Ptr<_221202ed2_comptimeRange>, jule::Ptr<_221453397_TypeKind>);
struct _221202ed2_comptimeRange {
	jule::Trait<_221202d06_comptimeRangeKind> _field_kind;
	

	_221202ed2_comptimeRange(void) = default;

	inline bool operator==(_221202ed2_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_221202ed2_comptimeRange _other) { return !this->operator==(_other); }


};
inline jule::Str _221203d3a_Str(_2212039c7_comptimeStructField*);
inline jule::Bool _221204148_Equal(jule::Ptr<_2212039c7_comptimeStructField>, jule::Ptr<_221453397_TypeKind>);
inline jule::Ptr<_221425c2c_Data> _221204698__Name(jule::Ptr<_2212039c7_comptimeStructField>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221204a50__Type(jule::Ptr<_2212039c7_comptimeStructField>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221204e07__Public(jule::Ptr<_2212039c7_comptimeStructField>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _2212051d2_subIdent(jule::Ptr<_2212039c7_comptimeStructField>, jule::Str);
struct _2212039c7_comptimeStructField {
	jule::Ptr<_2211c6bed_FieldIns> _field_field;
	

	_2212039c7_comptimeStructField(void) = default;

	inline bool operator==(_2212039c7_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_2212039c7_comptimeStructField _other) { return !this->operator==(_other); }


};
inline jule::Str _221205875_Str(_2212054bd_comptimeStructFields*);
inline jule::Bool _221205b83_Equal(jule::Ptr<_2212054bd_comptimeStructFields>, jule::Ptr<_221453397_TypeKind>);
inline void _2212060b2_ready(_2212054bd_comptimeStructFields*, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_22126b17c_Var>*);
inline void _22120647a_step(_2212054bd_comptimeStructFields*, jule::I32, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_22126b17c_Var>*);
inline jule::I32 _2212066de_len(_2212054bd_comptimeStructFields*);
struct _2212054bd_comptimeStructFields {
	jule::Slice<jule::Ptr<_2211c6bed_FieldIns>> _field_fields;
	

	_2212054bd_comptimeStructFields(void) = default;


};
inline jule::Str _221206d3d_Str(_2212069ca_comptimeStatic*);
inline jule::Bool _22120714b_Equal(jule::Ptr<_2212069ca_comptimeStatic>, jule::Ptr<_221453397_TypeKind>);
inline jule::Ptr<_221425c2c_Data> _221207734__Name(jule::Ptr<_2212069ca_comptimeStatic>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221207adb__Type(jule::Ptr<_2212069ca_comptimeStatic>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221207e93__Public(jule::Ptr<_2212069ca_comptimeStatic>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _2212082a1_subIdent(jule::Ptr<_2212069ca_comptimeStatic>, jule::Str);
struct _2212069ca_comptimeStatic {
	jule::Ptr<_22126b17c_Var> _field_field;
	

	_2212069ca_comptimeStatic(void) = default;

	inline bool operator==(_2212069ca_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_2212069ca_comptimeStatic _other) { return !this->operator==(_other); }


};
inline jule::Str _221208878_Str(_221208515_comptimeStatics*);
inline jule::Bool _221208b86_Equal(jule::Ptr<_221208515_comptimeStatics>, jule::Ptr<_221453397_TypeKind>);
inline void _2212090b5_ready(_221208515_comptimeStatics*, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_22126b17c_Var>*);
inline void _22120947d_step(_221208515_comptimeStatics*, jule::I32, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_22126b17c_Var>*);
inline jule::I32 _2212096e2_len(_221208515_comptimeStatics*);
struct _221208515_comptimeStatics {
	jule::Slice<jule::Ptr<_22126b17c_Var>> _field_fields;
	

	_221208515_comptimeStatics(void) = default;


};
inline jule::Str _221209d41_Str(_2212099cd_comptimeEnumField*);
inline jule::Bool _22120a14e_Equal(jule::Ptr<_2212099cd_comptimeEnumField>, jule::Ptr<_221453397_TypeKind>);
inline jule::Ptr<_221425c2c_Data> _22120a605__Name(jule::Ptr<_2212099cd_comptimeEnumField>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _22120a913_subIdent(jule::Ptr<_2212099cd_comptimeEnumField>, jule::Str);
struct _2212099cd_comptimeEnumField {
	jule::Ptr<_2211edc8b_EnumItem> _field_field;
	

	_2212099cd_comptimeEnumField(void) = default;

	inline bool operator==(_2212099cd_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_2212099cd_comptimeEnumField _other) { return !this->operator==(_other); }


};
inline jule::Str _22120b172_Str(_22120abee_comptimeEnumFields*);
inline jule::Bool _22120b480_Equal(jule::Ptr<_22120abee_comptimeEnumFields>, jule::Ptr<_221453397_TypeKind>);
inline void _22120b837_ready(_22120abee_comptimeEnumFields*, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_22126b17c_Var>*);
inline void _22120bc00_step(_22120abee_comptimeEnumFields*, jule::I32, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_22126b17c_Var>*);
inline jule::I32 _22120be64_len(_22120abee_comptimeEnumFields*);
struct _22120abee_comptimeEnumFields {
	jule::Slice<jule::Ptr<_2211edc8b_EnumItem>> _field_fields;
	

	_22120abee_comptimeEnumFields(void) = default;


};
inline jule::Str _22120c5b3_Str(_22120c250_comptimeParam*);
inline jule::Bool _22120c8c1_Equal(jule::Ptr<_22120c250_comptimeParam>, jule::Ptr<_221453397_TypeKind>);
inline jule::Ptr<_221425c2c_Data> _22120d0db__Name(jule::Ptr<_22120c250_comptimeParam>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _22120d493__Type(jule::Ptr<_22120c250_comptimeParam>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _22120d84a__Variadic(jule::Ptr<_22120c250_comptimeParam>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _22120dc02__Reference(jule::Ptr<_22120c250_comptimeParam>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _22120e010_subIdent(jule::Ptr<_22120c250_comptimeParam>, jule::Str);
struct _22120c250_comptimeParam {
	jule::Ptr<_2211dbaae_ParamIns> _field_param;
	

	_22120c250_comptimeParam(void) = default;

	inline bool operator==(_22120c250_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_22120c250_comptimeParam _other) { return !this->operator==(_other); }


};
inline jule::Str _22120e65e_Str(_22120e2eb_comptimeParams*);
inline jule::Bool _22120e96c_Equal(jule::Ptr<_22120e2eb_comptimeParams>, jule::Ptr<_221453397_TypeKind>);
inline void _22120ed9b_ready(_22120e2eb_comptimeParams*, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_22126b17c_Var>*);
inline void _221210264_step(_22120e2eb_comptimeParams*, jule::I32, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_22126b17c_Var>*);
inline jule::I32 _2212104c8_len(_22120e2eb_comptimeParams*);
struct _22120e2eb_comptimeParams {
	jule::Slice<jule::Ptr<_2211dbaae_ParamIns>> _field_params;
	

	_22120e2eb_comptimeParams(void) = default;


};
inline jule::Str _221210b27_Str(_2212107b4_comptimeTypeInfos*);
inline jule::Bool _221210e35_Equal(jule::Ptr<_2212107b4_comptimeTypeInfos>, jule::Ptr<_221453397_TypeKind>);
inline void _221211364_ready(_2212107b4_comptimeTypeInfos*, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_22126b17c_Var>*);
inline void _22121172c_step(_2212107b4_comptimeTypeInfos*, jule::I32, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_22126b17c_Var>*);
inline jule::I32 _221211991_len(_2212107b4_comptimeTypeInfos*);
struct _2212107b4_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_221211c7c_comptimeTypeInfo>> _field_types;
	

	_2212107b4_comptimeTypeInfos(void) = default;


};
inline jule::Str _2212120e0_Str(_221211c7c_comptimeTypeInfo*);
inline jule::Bool _2212123ed_Equal(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_221453397_TypeKind>);
inline jule::Ptr<_221425c2c_Data> _2212129e7__Str(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221212d9e__Kind(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221213256__Bits(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _22121360d__Elem(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _2212139b5__Size(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221213d6c__Key(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221214224__Value(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _2212145cb__Fields(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221214983__Statics(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221214d3a__Public(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _2212151e2__Binded(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221215599__Ordered(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221215951__Comparable(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221215d08__Mutable(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _2212161b0__Types(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221216567__Exceptional(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _22121691e__CanNil(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221216cc6__Result(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _22121717d__Params(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _22121748b_subIdent(jule::Ptr<_221211c7c_comptimeTypeInfo>, jule::Str);
struct _221211c7c_comptimeTypeInfo {
	jule::Ptr<_221453397_TypeKind> _field_base;
	

	_221211c7c_comptimeTypeInfo(void) = default;

	inline bool operator==(_221211c7c_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_221211c7c_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
inline jule::Str _221217ada_Str(_221217777_comptimeValue*);
inline jule::Bool _221217de8_Equal(jule::Ptr<_221217777_comptimeValue>, jule::Ptr<_221453397_TypeKind>);
inline jule::Ptr<_221425c2c_Data> _221218404__Unwrap(jule::Ptr<_221217777_comptimeValue>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _2212187ab__Type(jule::Ptr<_221217777_comptimeValue>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221218b63__Lvalue(jule::Ptr<_221217777_comptimeValue>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _22121901a__Mutable(jule::Ptr<_221217777_comptimeValue>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _2212193c2__Const(jule::Ptr<_221217777_comptimeValue>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221219779__Field(jule::Ptr<_221217777_comptimeValue>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _221219a87_subIdent(jule::Ptr<_221217777_comptimeValue>, jule::Str);
struct _221217777_comptimeValue {
	jule::Ptr<_221425c2c_Data> _field_data;
	

	_221217777_comptimeValue(void) = default;

	inline bool operator==(_221217777_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_221217777_comptimeValue _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_22124ad71_Sema>*,jule::Slice<jule::Ptr<_22145264e_TypeAlias>>*)> _22121c65b_readyFn(jule::Ptr<_22121c22c_constraintChecker>);
inline jule::Bool _22121c8c0_readyFi(jule::Ptr<_22121c22c_constraintChecker>);
inline jule::Bool _22121cb34_readySi(jule::Ptr<_22121c22c_constraintChecker>);
inline jule::Bool _22121cd98_ready(jule::Ptr<_22121c22c_constraintChecker>);
inline jule::Bool _22121d10c_check(jule::Ptr<_22121c22c_constraintChecker>);
struct _22121c22c_constraintChecker {
	jule::Ptr<_22124ad71_Sema> _field_s;
	jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_221451b15_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_22145264e_TypeAlias>> _field_genericsA;
	jule::Ptr<_2211dc97d_FnIns> _field_fi;
	jule::Ptr<_2211c76e3_StructIns> _field_si;
	jule::Ptr<_21da1aa0b_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_22121c22c_constraintChecker(void) = default;


};
inline jule::Bool _22121e4c6_IsTraitImpl(_22121e0ca_Impl*);
inline jule::Bool _22121e73a_IsStructImpl(_22121e0ca_Impl*);
struct _22121e0ca_Impl {
	jule::Ptr<_2211a478b_TypeDecl> _field_Base;
	jule::Ptr<_2211a478b_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_2211d9ccc_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_22126b17c_Var>> _field_Statics;
	

	_22121e0ca_Impl(void) = default;


};
struct _221224135_Scope {
	jule::Ptr<_221224135_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_221224135_Scope(void) = default;


};
struct _221224531_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_221224135_Scope> _field_Scope;
	

	_221224531_If(void) = default;

	inline bool operator==(_221224531_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_221224531_If _other) { return !this->operator==(_other); }


};
struct _22122481c_Else {
	jule::Ptr<_221224135_Scope> _field_Scope;
	

	_22122481c_Else(void) = default;

	inline bool operator==(_22122481c_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_22122481c_Else _other) { return !this->operator==(_other); }


};
struct _221224b91_Conditional {
	jule::Slice<jule::Ptr<_221224531_If>> _field_Elifs;
	jule::Ptr<_22122481c_Else> _field_Default;
	

	_221224b91_Conditional(void) = default;


};
struct _221224e7c_InfIter {
	jule::Ptr<_221224135_Scope> _field_Scope;
	

	_221224e7c_InfIter(void) = default;

	inline bool operator==(_221224e7c_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_221224e7c_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _221225796_IsWhileNext(_221225400_WhileIter*);
struct _221225400_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_221224135_Scope> _field_Scope;
	

	_221225400_WhileIter(void) = default;

	inline bool operator==(_221225400_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_221225400_WhileIter _other) { return !this->operator==(_other); }


};
struct _221225cd5_RangeIter {
	jule::Ptr<_221425c2c_Data> _field_Expr;
	jule::Ptr<_221224135_Scope> _field_Scope;
	jule::Ptr<_22126b17c_Var> _field_KeyA;
	jule::Ptr<_22126b17c_Var> _field_KeyB;
	

	_221225cd5_RangeIter(void) = default;

	inline bool operator==(_221225cd5_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_221225cd5_RangeIter _other) { return !this->operator==(_other); }


};
struct _2212261d1_ContSt {
	jule::Uintptr _field_It = 0;
	

	_2212261d1_ContSt(void) = default;

	inline bool operator==(_2212261d1_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_2212261d1_ContSt _other) { return !this->operator==(_other); }


};
struct _221226588_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_221226588_BreakSt(void) = default;

	inline bool operator==(_221226588_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_221226588_BreakSt _other) { return !this->operator==(_other); }


};
struct _221226874_Label {
	jule::Str _field_Ident;
	

	_221226874_Label(void) = default;

	inline bool operator==(_221226874_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_221226874_Label _other) { return !this->operator==(_other); }


};
struct _221226b60_GotoSt {
	jule::Str _field_Ident;
	

	_221226b60_GotoSt(void) = default;

	inline bool operator==(_221226b60_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_221226b60_GotoSt _other) { return !this->operator==(_other); }


};
struct _221227017_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_221227017_Postfix(void) = default;

	inline bool operator==(_221227017_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_221227017_Postfix _other) { return !this->operator==(_other); }


};
struct _22122748a_Assign {
	jule::Ptr<_2211cb692_OperandExprModel> _field_L;
	jule::Ptr<_2211cb692_OperandExprModel> _field_R;
	jule::Ptr<_21da1aa0b_Token> _field_Op;
	

	_22122748a_Assign(void) = default;

	inline bool operator==(_22122748a_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_22122748a_Assign _other) { return !this->operator==(_other); }


};
struct _221227842_MultiAssign {
	jule::Slice<jule::Ptr<_221425c2c_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_221227842_MultiAssign(void) = default;


};
inline jule::Bool _221228458_IsGenericTypeMatch(_221227e4c_Match*);
struct _221227e4c_Match {
	jule::Ptr<_221425c2c_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_221228997_Case>> _field_Cases;
	jule::Ptr<_221228997_Case> _field_Default;
	

	_221227e4c_Match(void) = default;


};
inline jule::Bool _221228c61_isDefault(_221228997_Case*);
struct _221228997_Case {
	jule::Ptr<_221227e4c_Match> _field_Owner;
	jule::Ptr<_221224135_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_221425c2c_Data>> _field_Exprs;
	jule::Ptr<_221228997_Case> _field_Next;
	

	_221228997_Case(void) = default;


};
struct _22122904c_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_22122904c_FallSt(void) = default;

	inline bool operator==(_22122904c_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_22122904c_FallSt _other) { return !this->operator==(_other); }


};
struct _2212293c1_RetSt {
	jule::Ptr<_2211dc97d_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_2212293c1_RetSt(void) = default;

	inline bool operator==(_2212293c1_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2212293c1_RetSt _other) { return !this->operator==(_other); }


};
struct _2212299cb_scopeLabel {
	jule::Ptr<_21da1aa0b_Token> _field_token;
	jule::Ptr<_221226874_Label> _field_label;
	jule::I32 _field_pos = 0;
	jule::Ptr<_22122ac63_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_2212299cb_scopeLabel(void) = default;

	inline bool operator==(_2212299cb_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_2212299cb_scopeLabel _other) { return !this->operator==(_other); }


};
struct _221229e4e_scopeGoto {
	jule::Ptr<_2211b22e3_GotoSt> _field_gt;
	jule::Ptr<_22122ac63_scopeChecker> _field_scope;
	jule::I32 _field_pos = 0;
	

	_221229e4e_scopeGoto(void) = default;

	inline bool operator==(_221229e4e_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_221229e4e_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_221242a9e_ImportInfo> _22122b1d6_SelectPackage(_22122ac63_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)>);
inline jule::Ptr<_22126b17c_Var> _22122b58d_FindVar(_22122ac63_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_22145264e_TypeAlias> _22122b945_FindTypeAlias(_22122ac63_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_2211c48cc_Struct> _22122bcec_FindStruct(_22122ac63_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_2211d9ccc_Fn> _22122c1a4_FindFn(_22122ac63_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_2211ebeed_Trait> _22122c4b2_FindTrait(_22122ac63_scopeChecker*, jule::Str);
inline jule::Ptr<_2211ee781_Enum> _22122c7c0_FindEnum(_22122ac63_scopeChecker*, jule::Str);
inline jule::Ptr<_221200d7b_TypeEnum> _22122cacd_FindTypeEnum(_22122ac63_scopeChecker*, jule::Str);
inline jule::Bool _22122ce0d_isUnsafe(jule::Ptr<_22122ac63_scopeChecker>);
inline jule::Bool _22122d172_isRoot(_22122ac63_scopeChecker*);
inline void _22122d34d_stop(_22122ac63_scopeChecker*);
inline jule::Bool _22122d5b2_stopped(_22122ac63_scopeChecker*);
inline jule::Bool _22122d826_isDeferred(jule::Ptr<_22122ac63_scopeChecker>);
inline jule::Ptr<_22122ac63_scopeChecker> _22122da8a_getRoot(jule::Ptr<_22122ac63_scopeChecker>);
inline jule::Ptr<_22122ac63_scopeChecker> _22122dcee_getHardRoot(jule::Ptr<_22122ac63_scopeChecker>);
inline jule::Ptr<_221226874_Label> _22122e10c_findLabel(_22122ac63_scopeChecker*, jule::Str);
inline jule::Ptr<_2212299cb_scopeLabel> _22122e41a_findLabelScope(jule::Ptr<_22122ac63_scopeChecker>, jule::Str);
inline jule::Ptr<_2212299cb_scopeLabel> _22122e728_findLabelAll(_22122ac63_scopeChecker*, jule::Str);
inline jule::Bool _22122ead0_isDuplicatedIdent(_22122ac63_scopeChecker*, jule::Uintptr, jule::Str);
inline void _22122ed55_checkVarDecl(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b71e9_VarDecl>);
inline void _2212300ca_checkTypeAliasDecl(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211baa5a_TypeAliasDecl>);
inline jule::Ptr<_221224135_Scope> _22123033e_getChild(_22122ac63_scopeChecker*);
inline void _221230707_checkChildSsc(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b4724_ScopeTree>*, jule::Ptr<_221224135_Scope>*, jule::Ptr<_22122ac63_scopeChecker>*);
inline jule::Ptr<_221224135_Scope> _221230aae_checkChildSc(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b4724_ScopeTree>*, jule::Ptr<_22122ac63_scopeChecker>*);
inline jule::Ptr<_221224135_Scope> _221230dbc_checkChild(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b4724_ScopeTree>*);
inline void _221231142_checkAnonScope(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b4724_ScopeTree>);
inline void _221231461_processErrorCall(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211d5e3d_BuiltinErrorCallExprModel>*, jule::Ptr<_21da1aa0b_Token>);
inline void _2212316d6_checkExpr(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211a8cac_Expr>);
inline jule::Ptr<_221224531_If> _2212319e4_checkIf(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b9a59_If>);
inline jule::Ptr<_22122481c_Else> _221231d02_checkElse(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b9e11_Else>);
inline void _221232077_checkConditional(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211ba384_Conditional>);
inline void _2212324d9_checkIterScopeSsc(jule::Ptr<_22122ac63_scopeChecker>, jule::Uintptr, jule::Ptr<_2211b4724_ScopeTree>, jule::Ptr<_221224135_Scope>*, jule::Ptr<_22122ac63_scopeChecker>);
inline jule::Ptr<_221224135_Scope> _22123293a_checkIterScopeSc(jule::Ptr<_22122ac63_scopeChecker>, jule::Uintptr, jule::Ptr<_2211b4724_ScopeTree>, jule::Ptr<_22122ac63_scopeChecker>);
inline jule::Ptr<_221224135_Scope> _221232ce2_checkIterScope(jule::Ptr<_22122ac63_scopeChecker>, jule::Uintptr, jule::Ptr<_2211b4724_ScopeTree>*);
inline void _221233067_checkInfIter(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b7c11_Iter>*);
inline void _2212332dc_checkWhileIter(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b7c11_Iter>*);
inline void _2212336a5_checkComptimeRangeIter(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b7c11_Iter>*, jule::Ptr<_221225cd5_RangeIter>*, jule::Ptr<_221425c2c_Data>*);
inline void _22123392a_checkRangeIter(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b7c11_Iter>*);
inline void _221233ba0_checkIter(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b7c11_Iter>);
inline jule::Bool _221233ead_checkValidContLabel(jule::Ptr<_22122ac63_scopeChecker>, jule::Uintptr);
inline jule::Bool _2212342bb_checkValidBreakLabel(jule::Ptr<_22122ac63_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_2212261d1_ContSt> _2212345c9_checkContValidScope(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b95d6_ContSt>);
inline void _22123484e_checkCont(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b95d6_ContSt>);
inline void _221234ac4_checkLabel(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b1e3b_LabelSt>);
inline void _221234d49_pushGoto(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b22e3_GotoSt>);
inline void _2212350be_checkPostfix(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b3228_AssignSt>);
inline jule::Bool _2212353cc_isNewAssignIdent(_22122ac63_scopeChecker*, jule::Str);
inline jule::Bool _22123582d_checkStructureAssignOp(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211c76e3_StructIns>*, jule::Ptr<_2211b3228_AssignSt>*, jule::Ptr<_221425c2c_Data>*);
inline void _221235aa3_checkSingleAssign(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b3228_AssignSt>*);
inline void _2212360d1_processEndPartOfMultiAssign(_22122ac63_scopeChecker*, jule::Ptr<_221227842_MultiAssign>*, jule::Ptr<_2211b3228_AssignSt>*, jule::Ptr<_2211b2bd9_AssignLeft>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*);
inline void _221236367_checkMultiAssign(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b3228_AssignSt>*);
inline void _2212365dc_checkAssignSt(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b3228_AssignSt>);
inline jule::Ptr<_221224135_Scope> _221236994_checkCaseScope(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_221228997_Case>*, jule::Ptr<_2211b4724_ScopeTree>*);
inline jule::Ptr<_221228997_Case> _221236e8e_checkCase(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_221227e4c_Match>, jule::I32, jule::Ptr<_2211baecd_Case>, jule::Ptr<_221425c2c_Data>);
inline void _221237357_checkCases(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211bb6a4_MatchCase>*, jule::Ptr<_221227e4c_Match>, jule::Ptr<_221425c2c_Data>);
inline jule::Ptr<_221228997_Case> _22123770e_checkDefault(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_221227e4c_Match>, jule::Ptr<_2211b9e11_Else>);
inline void _221237a2d_checkComptimePanic(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_21da1aa0b_Token>, jule::Ptr<_221224135_Scope>*);
inline void _221237d4c_processConstMatch(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_221227e4c_Match>, jule::Ptr<_2211bb6a4_MatchCase>*);
inline void _2212380c2_checkTypeMatch(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211bb6a4_MatchCase>*);
inline void _221238347_checkCommonMatch(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211bb6a4_MatchCase>*);
inline void _2212385bc_checkMatch(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211bb6a4_MatchCase>);
inline void _221238842_checkFall(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b25ce_FallSt>);
inline jule::Ptr<_221226588_BreakSt> _221238b50_checkBreakWithLabel(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b922e_BreakSt>);
inline jule::Ptr<_221226588_BreakSt> _221238e5d_checkPlainBreak(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b922e_BreakSt>);
inline void _2212391d3_checkBreak(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b922e_BreakSt>);
inline void _221239458_checkRet(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b75a1_RetSt>);
inline void _2212396cd_checkUseExpr(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211a964d_UseExpr>);
inline void _221239953_checkNode(jule::Ptr<_22122ac63_scopeChecker>, jule::Any*);
inline void _221239b2e_checkResult(jule::Ptr<_22122ac63_scopeChecker>);
inline void _221239d0a_checkTree(jule::Ptr<_22122ac63_scopeChecker>);
inline void _22123a129_checkGoto(_22122ac63_scopeChecker*, jule::Ptr<_221229e4e_scopeGoto>*, jule::Ptr<_2212299cb_scopeLabel>*);
inline void _22123a305_checkGotos(_22122ac63_scopeChecker*);
inline void _22123a4d1_checkLabels(_22122ac63_scopeChecker*);
inline void _22123a6ac_checkVars(_22122ac63_scopeChecker*);
inline void _22123a888_checkAliases(_22122ac63_scopeChecker*);
inline void _22123aba7_check(jule::Ptr<_22122ac63_scopeChecker>, jule::Ptr<_2211b4724_ScopeTree>*, jule::Ptr<_221224135_Scope>*);
inline jule::Ptr<_22122ac63_scopeChecker> _22123ae1b_newChildChecker(jule::Ptr<_22122ac63_scopeChecker>);
struct _22122ac63_scopeChecker {
	jule::Ptr<_21da1aa0b_Token> _field_calledFrom;
	jule::Ptr<_22124ad71_Sema> _field_s;
	jule::Ptr<_2211dc97d_FnIns> _field_owner;
	jule::Ptr<_22122ac63_scopeChecker> _field_parent;
	jule::I32 _field_childIndex = 0;
	jule::Ptr<_221421222_SymbolTable> _field_table;
	jule::Ptr<_221224135_Scope> _field_scope;
	jule::Ptr<_2211b4724_ScopeTree> _field_tree;
	jule::Ptr<_2211dc97d_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_2212299cb_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_221229e4e_scopeGoto>>> _field_gotos;
	jule::I32 _field_i = 0;
	

	_22122ac63_scopeChecker(void) = default;

	inline bool operator==(_22122ac63_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_22122ac63_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _22123be0b_checkCdef(_22123b9bb_directiveChecker*, jule::Ptr<_221171307_Directive>*);
inline void _22123c181_checkTypedef(_22123b9bb_directiveChecker*, jule::Ptr<_221171307_Directive>*);
inline void _22123c406_checkDerive(_22123b9bb_directiveChecker*, jule::Ptr<_221171307_Directive>*);
inline void _22123c67b_checkNamespace(_22123b9bb_directiveChecker*, jule::Ptr<_221171307_Directive>*);
inline void _22123c901_checkDeprecated(_22123b9bb_directiveChecker*, jule::Ptr<_221171307_Directive>*);
inline void _22123cb76_checkTest(_22123b9bb_directiveChecker*, jule::Ptr<_221171307_Directive>*);
inline void _22123cdeb_checkDirective(_22123b9bb_directiveChecker*, jule::Ptr<_221171307_Directive>*);
inline void _22123d0c7_check(_22123b9bb_directiveChecker*);
struct _22123b9bb_directiveChecker {
	jule::Ptr<_22124ad71_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_221171307_Directive>>> _field_d;
	jule::Any _field_o;
	

	_22123b9bb_directiveChecker(void) = default;

	inline bool operator==(_22123b9bb_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_22123b9bb_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_221242a9e_ImportInfo> _2212430aa_SelectPackage(_221242a9e_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)>);
inline jule::Ptr<_22126b17c_Var> _221243462_FindVar(_221242a9e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_22145264e_TypeAlias> _221243819_FindTypeAlias(_221242a9e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_2211c48cc_Struct> _221243bc1_FindStruct(_221242a9e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_2211d9ccc_Fn> _221244078_FindFn(_221242a9e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_2211ebeed_Trait> _221244386_FindTrait(_221242a9e_ImportInfo*, jule::Str);
inline jule::Ptr<_2211ee781_Enum> _221244694_FindEnum(_221242a9e_ImportInfo*, jule::Str);
inline jule::Ptr<_221200d7b_TypeEnum> _2212449a2_FindTypeEnum(_221242a9e_ImportInfo*, jule::Str);
inline jule::Bool _221244d48_isLookupable(_221242a9e_ImportInfo*, jule::Str);
inline jule::Bool _221245156_existIdent(_221242a9e_ImportInfo*, jule::Str);
inline jule::Bool _2212453dc_isAccessibleViaSelection(_221242a9e_ImportInfo*);
struct _221242a9e_ImportInfo {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _field_Selected;
	jule::Ptr<_2212456d9_Package> _field_Package;
	jule::I32 _field_ModId = 0;
	

	_221242a9e_ImportInfo(void) = default;


};
inline jule::Ptr<_221242a9e_ImportInfo> _221245ba1_SelectPackage(_2212456d9_Package*, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)>);
inline jule::Ptr<_22126b17c_Var> _221246058_FindVar(_2212456d9_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_22145264e_TypeAlias> _221246410_FindTypeAlias(_2212456d9_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_2211c48cc_Struct> _2212467b7_FindStruct(_2212456d9_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_2211d9ccc_Fn> _221246b6e_FindFn(_2212456d9_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_2211ebeed_Trait> _221246e7c_FindTrait(_2212456d9_Package*, jule::Str);
inline jule::Ptr<_2211ee781_Enum> _22124728a_FindEnum(_2212456d9_Package*, jule::Str);
inline jule::Ptr<_221200d7b_TypeEnum> _221247598_FindTypeEnum(_2212456d9_Package*, jule::Str);
struct _2212456d9_Package {
	jule::Slice<jule::Ptr<_221421222_SymbolTable>> _field_Files;
	

	_2212456d9_Package(void) = default;


};
inline jule::Ptr<_221211c7c_comptimeTypeInfo> _22124a7dd_pushComptimeTypeInfo(_22124a359_commonSemaMeta*, jule::Ptr<_221453397_TypeKind>*);
struct _22124a359_commonSemaMeta {
	jule::Slice<jule::Ptr<_221211c7c_comptimeTypeInfo>> _field_comptimeTypeInfos;
	

	_22124a359_commonSemaMeta(void) = default;


};
inline jule::Ptr<_221242a9e_ImportInfo> _22124b2e4_SelectPackage(_22124ad71_Sema*, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)>);
inline jule::Ptr<_22126b17c_Var> _22124b69b_FindVar(_22124ad71_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_22145264e_TypeAlias> _22124ba53_FindTypeAlias(_22124ad71_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_2211c48cc_Struct> _22124be0a_FindStruct(_22124ad71_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_2211d9ccc_Fn> _22124c2b2_FindFn(_22124ad71_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_2211ebeed_Trait> _22124c5c0_FindTrait(_22124ad71_Sema*, jule::Str);
inline jule::Ptr<_2211ee781_Enum> _22124c8cd_FindEnum(_22124ad71_Sema*, jule::Str);
inline jule::Ptr<_221200d7b_TypeEnum> _22124cbdb_FindTypeEnum(_22124ad71_Sema*, jule::Str);
inline jule::Bool _22124d109_isFlag(_22124ad71_Sema*, jule::I32);
inline void _22124d37e_setCurrentFile(_22124ad71_Sema*, jule::Ptr<_221421222_SymbolTable>);
inline void _22124d747_pushErr(_22124ad71_Sema*, jule::Ptr<_21da1aa0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _22124da66_pushSuggestion(_22124ad71_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _22124de1d_isAccessibleDefine(_22124ad71_Sema*, jule::Bool, jule::Ptr<_21da1aa0b_Token>);
inline jule::Bool _22124e36e_isDuplicatedIdent(_22124ad71_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _22124e68d_checkDirectives(jule::Ptr<_22124ad71_Sema>, jule::Slice<jule::Ptr<_221171307_Directive>>*, jule::Any);
inline jule::Bool _22124eade_checkGenericQuantity(_22124ad71_Sema*, jule::I32, jule::I32, jule::Ptr<_21da1aa0b_Token>);
inline jule::Bool _22124eeb8_isDuplicatedImportSelection(_22124ad71_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _221250381_getImportDef(_22124ad71_Sema*, jule::Str, jule::Ptr<_221242a9e_ImportInfo>*);
inline jule::Bool _206072ca1_checkImportSelection(_22124ad71_Sema*, jule::Ptr<_21da1aa0b_Token>*, jule::Ptr<_22126b17c_Var>*);
inline jule::Bool _206076a0d_checkImportSelection(_22124ad71_Sema*, jule::Ptr<_21da1aa0b_Token>*, jule::Ptr<_22145264e_TypeAlias>*);
inline jule::Bool _20607a5d3_checkImportSelection(_22124ad71_Sema*, jule::Ptr<_21da1aa0b_Token>*, jule::Ptr<_2211c48cc_Struct>*);
inline jule::Bool _20607e560_checkImportSelection(_22124ad71_Sema*, jule::Ptr<_21da1aa0b_Token>*, jule::Ptr<_2211ebeed_Trait>*);
inline jule::Bool _206083135_checkImportSelection(_22124ad71_Sema*, jule::Ptr<_21da1aa0b_Token>*, jule::Ptr<_2211ee781_Enum>*);
inline jule::Bool _206086d1a_checkImportSelection(_22124ad71_Sema*, jule::Ptr<_21da1aa0b_Token>*, jule::Ptr<_221200d7b_TypeEnum>*);
inline jule::Bool _20608aa00_checkImportSelection(_22124ad71_Sema*, jule::Ptr<_21da1aa0b_Token>*, jule::Ptr<_2211d9ccc_Fn>*);
inline jule::Bool _221250a68_checkImportSelectedSelections(_22124ad71_Sema*, jule::Ptr<_221242a9e_ImportInfo>*);
inline jule::Bool _20608ec57_checkImportsAllSelectionsFromCollection(_22124ad71_Sema*, jule::Slice<jule::Ptr<_22126b17c_Var>>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _2060932aa_checkImportsAllSelectionsFromCollection(_22124ad71_Sema*, jule::Slice<jule::Ptr<_22145264e_TypeAlias>>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _206093882_checkImportsAllSelectionsFromCollection(_22124ad71_Sema*, jule::Slice<jule::Ptr<_2211c48cc_Struct>>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _206098bc8_checkImportsAllSelectionsFromCollection(_22124ad71_Sema*, jule::Slice<jule::Ptr<_2211d9ccc_Fn>>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _2060992b1_checkImportsAllSelectionsFromCollection(_22124ad71_Sema*, jule::Slice<jule::Ptr<_2211ebeed_Trait>>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _20609be73_checkImportsAllSelectionsFromCollection(_22124ad71_Sema*, jule::Slice<jule::Ptr<_2211ee781_Enum>>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _20609eb35_checkImportsAllSelectionsFromCollection(_22124ad71_Sema*, jule::Slice<jule::Ptr<_221200d7b_TypeEnum>>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _221251294_checkImportAllSelections(_22124ad71_Sema*, jule::Ptr<_221242a9e_ImportInfo>*);
inline jule::Bool _2212515b3_checkImportSelections(_22124ad71_Sema*, jule::Ptr<_221242a9e_ImportInfo>*);
inline jule::Bool _2212518c1_isUseAliasDuplication(_22124ad71_Sema*, jule::Ptr<_221242a9e_ImportInfo>*);
inline jule::Bool _221251bce_checkImport(_22124ad71_Sema*, jule::Ptr<_221242a9e_ImportInfo>*);
inline void _221251daa_checkImports(_22124ad71_Sema*);
inline void _221252086_implFileImpls(jule::Ptr<_22124ad71_Sema>);
inline void _221252262_implImpls(jule::Ptr<_22124ad71_Sema>);
inline void _22125243d_checkEnums(jule::Ptr<_22124ad71_Sema>);
inline void _221252619_checkFileInherits(jule::Ptr<_22124ad71_Sema>);
inline void _2212527e5_checkInherits(jule::Ptr<_22124ad71_Sema>);
inline _2214641dd_typeChecker _221252c46_typeChecker(jule::Ptr<_22124ad71_Sema>, jule::Trait<_22147198c_Lookup>, jule::Slice<jule::Ptr<_22145264e_TypeAlias>>, jule::Ptr<_22146330d_referencer>);
inline jule::Ptr<_221453397_TypeKind> _221253241_buildTypeWithRefers(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211a478b_TypeDecl>*, jule::Trait<_22147198c_Lookup>, jule::Slice<jule::Ptr<_22145264e_TypeAlias>>, jule::Ptr<_22146330d_referencer>);
inline jule::Bool _22125373b_checkTypeWithRefers(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_221459c50_TypeSymbol>*, jule::Trait<_22147198c_Lookup>, jule::Slice<jule::Ptr<_22145264e_TypeAlias>>, jule::Ptr<_22146330d_referencer>);
inline jule::Ptr<_22121c22c_constraintChecker> _2212539a0_constraintChecker(jule::Ptr<_22124ad71_Sema>);
inline jule::Bool _221253d57_checkType(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_221459c50_TypeSymbol>*, jule::Trait<_22147198c_Lookup>);
inline jule::Ptr<_221453397_TypeKind> _2212542a8_buildTypeWithGenerics(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211a478b_TypeDecl>*, jule::Slice<jule::Ptr<_22145264e_TypeAlias>>, jule::Ptr<_2211e08d7_ReferenceStack>);
inline jule::Ptr<_221453397_TypeKind> _2212545b6_buildType(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211a478b_TypeDecl>*);
inline jule::Ptr<_221453397_TypeKind> _2212548c4_selectType(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211a478b_TypeDecl>*);
inline jule::Ptr<_22142779a_Eval> _221254d25_evalpd(jule::Ptr<_22124ad71_Sema>, jule::Trait<_22147198c_Lookup>, jule::Ptr<_221453397_TypeKind>, jule::Ptr<_22126b17c_Var>);
inline jule::Ptr<_22142779a_Eval> _2212551cc_evalp(jule::Ptr<_22124ad71_Sema>, jule::Trait<_22147198c_Lookup>, jule::Ptr<_221453397_TypeKind>);
inline jule::Ptr<_22142779a_Eval> _2212554da_eval(jule::Ptr<_22124ad71_Sema>, jule::Trait<_22147198c_Lookup>);
inline jule::Bool _2212559d5_checkAssignType(jule::Ptr<_22124ad71_Sema>, jule::Bool, jule::Ptr<_221453397_TypeKind>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Bool _221255e36_checkTypeCompatibility(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_221453397_TypeKind>*, jule::Ptr<_221453397_TypeKind>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Ptr<_221453397_TypeKind> _2212563a9_buildNonGenericTypeKind(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211a478b_TypeDecl>*, jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>>*, jule::Slice<jule::Ptr<_221453397_TypeKind>>*);
inline jule::Bool _221256794_buildFnNonGenericTypeKinds(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211dc97d_FnIns>*, jule::Slice<jule::Ptr<_221453397_TypeKind>>*);
inline jule::Ptr<_2211dc97d_FnIns> _221256ab3_getTraitCheckFnKind(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211d9ccc_Fn>*);
inline jule::Bool _221257014_checkConstraintsFn(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211dc97d_FnIns>*, jule::Ptr<_21da1aa0b_Token>*, jule::Ptr<_2211dc97d_FnIns>);
inline jule::Bool _221257465_checkConstraintsStruct(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c76e3_StructIns>*, jule::Ptr<_21da1aa0b_Token>*, jule::Ptr<_2211c76e3_StructIns>);
inline jule::Bool _22125781c_fnEnvironment(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211dc97d_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_22124ad71_Sema>*,jule::Slice<jule::Ptr<_22145264e_TypeAlias>>*)>);
inline void _221257a92_checkFnParamKind(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211dbaae_ParamIns>*);
inline jule::Bool _221257da0_reloadFnInsTypes(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211dc97d_FnIns>);
inline jule::Bool _221258323_checkRefValidityForInitExpr(jule::Ptr<_22124ad71_Sema>, jule::Bool, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _2212588ea_checkValidityForInitExpr(jule::Ptr<_22124ad71_Sema>, jule::Bool, jule::Bool, jule::Ptr<_221453397_TypeKind>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _221258cb3_checkTypeAliasDeclKind(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22145264e_TypeAlias>*, jule::Trait<_22147198c_Lookup>);
inline void _2212590d2_checkTypeAliasDecl(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22145264e_TypeAlias>*, jule::Trait<_22147198c_Lookup>);
inline void _221259357_checkTypeAliasDeclDup(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22145264e_TypeAlias>*);
inline jule::Bool _2212595bb_checkTypeAliasDecls(jule::Ptr<_22124ad71_Sema>);
inline void _20613422a_checkEnumItemsDup(_22124ad71_Sema*, jule::Slice<jule::Ptr<_2211edc8b_EnumItem>>);
inline void _20613db19_checkEnumItemsDup(_22124ad71_Sema*, jule::Slice<jule::Ptr<_2212007b5_TypeEnumItem>>);
inline void _221259ab6_checkEnumItemsStr(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211ee781_Enum>*);
inline void _206119e9c_checkEnumItemInt(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211ee781_Enum>*, jule::Ptr<_22145a5be_Prim>*, jule::Ptr<_2211edc8b_EnumItem>*, jule::U64*);
inline void _206127aae_checkEnumItemInt(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211ee781_Enum>*, jule::Ptr<_22145a5be_Prim>*, jule::Ptr<_2211edc8b_EnumItem>*, jule::I64*);
inline void _20611655e_checkEnumItemsInt1(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22145a5be_Prim>*, jule::Ptr<_2211ee781_Enum>*);
inline void _20612205e_checkEnumItemsInt1(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22145a5be_Prim>*, jule::Ptr<_2211ee781_Enum>*);
inline void _22125a666_checkEnumItemsInt(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211ee781_Enum>*);
inline void _22125a8db_checkEnumDecl(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211ee781_Enum>*);
inline void _22125ab61_checkTypeEnumDecl(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_221200d7b_TypeEnum>*);
inline jule::Bool _22125adc5_checkEnumDecls(jule::Ptr<_22124ad71_Sema>);
inline jule::Bool _22125b139_checkTypeEnumDecls(jule::Ptr<_22124ad71_Sema>);
inline jule::Bool _22125b447_checkDeclGenerics(_22124ad71_Sema*, jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>>*);
inline jule::Bool _22125b755_checkFnDeclParamsDup(_22124ad71_Sema*, jule::Ptr<_2211d9ccc_Fn>*);
inline jule::Bool _22125ba63_checkFnDeclResultDup(_22124ad71_Sema*, jule::Ptr<_2211d9ccc_Fn>*);
inline jule::Bool _22125bd71_checkFnVariadicParam(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211d9ccc_Fn>*);
inline void _22125c0e6_checkFnDeclPrototype(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211d9ccc_Fn>*);
inline jule::Bool _22125c547_catchTraitInheritCycle(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211ebeed_Trait>, jule::Ptr<_2211ebeed_Trait>, jule::Str*);
inline jule::Bool _22125c877__checkTraitDeclInherits(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211ebeed_Trait>*);
inline void _22125cb0d_checkTraitDeclInherits(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211ebeed_Trait>*);
inline void _22125cd83_checkTraitDeclMethod(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211d9ccc_Fn>*);
inline void _22125d108_checkTraitDeclMethods(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211ebeed_Trait>*);
inline void _22125d37d_checkTraitDecl(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211ebeed_Trait>*);
inline jule::Bool _22125d5e2_checkTraitDecls(jule::Ptr<_22124ad71_Sema>);
inline jule::Bool _22125d999_checkTraitImplMethods(_22124ad71_Sema*, jule::Ptr<_2211ebeed_Trait>*, jule::Ptr<_22121e0ca_Impl>*);
inline jule::Bool _22125dd51_implToStruct(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c48cc_Struct>*, jule::Ptr<_22121e0ca_Impl>*);
inline void _22125e0c6_implTrait(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22121e0ca_Impl>*);
inline void _22125e34b_implStruct(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22121e0ca_Impl>*);
inline void _22125e5c1_implImpl(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22121e0ca_Impl>*);
inline void _22125e8e0_checkVarDecl(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22126b17c_Var>*, jule::Trait<_22147198c_Lookup>);
inline void _22125eb65_checkGlobalVarDecl(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22126b17c_Var>*);
inline jule::Bool _22125edc9_checkGlobalDecls(jule::Ptr<_22124ad71_Sema>);
inline jule::Bool _221260281_checkStructTraitImpl(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c48cc_Struct>*, jule::Ptr<_2211ebeed_Trait>*);
inline jule::Bool _22126058e_checkStructImpls(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c48cc_Struct>*);
inline jule::Bool _22126089c_checkStructFields(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c48cc_Struct>*);
inline void _221260b22_checkStructDecl(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c48cc_Struct>*);
inline jule::Bool _221260d86_checkStructDecls(jule::Ptr<_22124ad71_Sema>);
inline void _22126110b_checkAnonFnDecl(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211d9ccc_Fn>*);
inline void _221261381_checkFnDecl(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211d9ccc_Fn>*);
inline jule::Bool _22126168e_checkFuncDecls(jule::Ptr<_22124ad71_Sema>, jule::Slice<jule::Ptr<_2211d9ccc_Fn>>*);
inline jule::Bool _221261903_checkFnDecls(jule::Ptr<_22124ad71_Sema>);
inline void _221261cbb_pushCycleError(_22124ad71_Sema*, jule::Str*, jule::Str*, jule::Str*);
inline jule::Bool _22126221c_checkCrossCycle(_22124ad71_Sema*, jule::Ptr<_2211c48cc_Struct>*, jule::Ptr<_2211c48cc_Struct>*, jule::Str*);
inline jule::Bool _221262690_checkStructDeriveIllegalCycles(_22124ad71_Sema*, jule::Str, jule::Ptr<_2211c48cc_Struct>*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _2212629d1_checkStructInsDeriveClone(_22124ad71_Sema*, jule::Ptr<_2211c76e3_StructIns>);
inline void _221262bbd_checkPackageDecls(jule::Ptr<_22124ad71_Sema>);
inline void _22126300e_checkDataForTypeInference(_22124ad71_Sema*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_21da1aa0b_Token>*);
inline void _221263295_checkVar(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22126b17c_Var>*);
inline void _2212635b4_checkTypeVar(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_22126b17c_Var>*, jule::Trait<_22147198c_Lookup>);
inline void _221263790_checkGlobalTypes(jule::Ptr<_22124ad71_Sema>);
inline jule::Ptr<_2211dc97d_FnIns> _221263b47_readyToCheckFn(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c76e3_StructIns>*, jule::Ptr<_2211d9ccc_Fn>*);
inline void _221263e66_checkTypeMethod(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c76e3_StructIns>*, jule::Ptr<_2211d9ccc_Fn>*);
inline jule::Ptr<_2211dc97d_FnIns> _2212643b7_checkStructInsOp(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c76e3_StructIns>*, jule::Ptr<_2211d9ccc_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_2211d9ccc_Fn>)>);
inline jule::Bool _22126476e_checkStructEnv(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c76e3_StructIns>*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Bool _221264b26_precheckStructIns(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c76e3_StructIns>*, jule::Ptr<_21da1aa0b_Token>);
inline void _221264d9b_checkStructIns(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c76e3_StructIns>*);
inline void _221265121_checkTypeStruct(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c48cc_Struct>*);
inline void _2212652ec_checkStructTypes(jule::Ptr<_22124ad71_Sema>);
inline void _221265594_checkStructInsOperators(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c76e3_StructIns>);
inline void _22126582a_precheckStructType(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211c48cc_Struct>*);
inline void _221265a06_precheckStructTypes(jule::Ptr<_22124ad71_Sema>);
inline void _221265c7b_checkRets(_22124ad71_Sema*, jule::Ptr<_2211dc97d_FnIns>*);
inline void _22126609a_checkFnInsSc(_22124ad71_Sema*, jule::Ptr<_2211dc97d_FnIns>*, jule::Ptr<_22122ac63_scopeChecker>*);
inline void _2212663b9_checkFnInsCaller(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211dc97d_FnIns>*, jule::Ptr<_21da1aa0b_Token>);
inline void _22126663e_checkFnIns(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211dc97d_FnIns>*);
inline void _2212668b4_checkTypeFn(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211d9ccc_Fn>*);
inline void _221266b39_checkTestFn(_22124ad71_Sema*, jule::Ptr<_2211dc97d_FnIns>*);
inline void _221266dae_precheckTypeFn(jule::Ptr<_22124ad71_Sema>, jule::Ptr<_2211d9ccc_Fn>*);
inline void _22126708a_precheckFnTypes(jule::Ptr<_22124ad71_Sema>);
inline void _221267266_checkFnTypes(jule::Ptr<_22124ad71_Sema>);
inline void _221267442_checkPackageTypes(jule::Ptr<_22124ad71_Sema>);
inline void _22126761d_setFileSemaFields(jule::Ptr<_22124ad71_Sema>);
inline void _2212677e9_setSemaFields(jule::Ptr<_22124ad71_Sema>);
inline void _221267a6e_check(jule::Ptr<_22124ad71_Sema>, jule::Slice<jule::Ptr<_221421222_SymbolTable>>*);
struct _22124ad71_Sema {
	jule::Slice<_21d6755de_Log> _field_errors;
	jule::Slice<jule::Ptr<_221421222_SymbolTable>> _field_files;
	jule::Ptr<_221421222_SymbolTable> _field_file;
	jule::I32 _field_flags = 0LL;
	jule::Ptr<_22124a359_commonSemaMeta> _field_meta;
	

	_22124ad71_Sema(void) = default;


};
inline _221267e26_missingRetChecker static__2212682de_new(void);
inline jule::Bool _2212685b9_checkConditional(_221267e26_missingRetChecker*, jule::Ptr<_221224b91_Conditional>);
inline jule::Bool _2212688c7_checkMatch(_221267e26_missingRetChecker*, jule::Ptr<_221227e4c_Match>);
inline jule::Bool _221268bd5_checkInfIter(_221267e26_missingRetChecker*, jule::Ptr<_221224e7c_InfIter>);
inline jule::Bool _221268ee3_checkScope(_221267e26_missingRetChecker*, jule::Ptr<_221224135_Scope>);
inline jule::Bool _221269301_check(_221267e26_missingRetChecker*, jule::Ptr<_221224135_Scope>);
struct _221267e26_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_221267e26_missingRetChecker(void) = default;


};
struct _22126a137_IterRelation {
	jule::Ptr<_22126b17c_Var> _field_Range;
	

	_22126a137_IterRelation(void) = default;

	inline bool operator==(_22126a137_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_22126a137_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _22126b545_IsInitialized(_22126b17c_Var*);
inline jule::Bool _22126b7a9_IsTypeInferred(_22126b17c_Var*);
inline jule::Bool _22126ba1d_untypedConstant(_22126b17c_Var*);
struct _22126b17c_Var {
	jule::Ptr<_221224135_Scope> _field_Scope;
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_221459c50_TypeSymbol> _field_Kind;
	jule::Ptr<_221426ca5_Value> _field_Value;
	jule::Ptr<_2211e08d7_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_221171307_Directive>> _field_Directives;
	jule::Ptr<_22126a137_IterRelation> _field_IterRelation;
	jule::I32 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_22126b17c_Var>> _field_Depends;
	

	_22126b17c_Var(void) = default;


};
inline jule::Bool static__22126c59b_Dispose(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22126c843_Str(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22126cb84_logical(jule::Ptr<_2211d9ccc_Fn>*, jule::Str);
inline jule::Bool static__22126ce2b_Eq(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22126d1c3_Gt(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22126d46a_GtEq(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22126d712_Lt(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22126d9a9_LtEq(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22126dcea_result(jule::Ptr<_2211d9ccc_Fn>*, jule::Str);
inline jule::Bool static__22126e092_Shl(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22126e339_Shr(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22126e5d1_Add(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22126e878_Sub(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22126eb20_Div(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22126edb7_Mul(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22127015e_Mod(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__221270406_BitAnd(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22127069d_BitOr(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__221270945_BitXor(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__221270c86_unary(jule::Ptr<_2211d9ccc_Fn>*, jule::Str);
inline jule::Bool static__22127102d_Neg(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__2212712c5_Pos(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22127156c_BitNot(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__2212718ad_assign(jule::Ptr<_2211d9ccc_Fn>*, jule::Str);
inline jule::Bool static__221271b55_AddAssign(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__221271dec_SubAssign(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__221272194_DivAssign(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22127243b_MulAssign(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__2212726d3_ModAssign(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__22127297a_ShlAssign(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__221272c22_ShrAssign(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__221272eb9_BitOrAssign(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__221273261_BitAndAssign(jule::Ptr<_2211d9ccc_Fn>);
inline jule::Bool static__221273508_BitXorAssign(jule::Ptr<_2211d9ccc_Fn>);
struct _22126be2a_FuncPattern {
	

	_22126be2a_FuncPattern(void) = default;


};
inline void _22140eee1_pushErr(_22140e9c4_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _221410255_checkTrait(_22140e9c4_typeCompatibilityChecker*);
inline jule::Bool _2214104b9_checkPtr(_22140e9c4_typeCompatibilityChecker*);
inline jule::Bool _22141072d_checkPrim(_22140e9c4_typeCompatibilityChecker*);
inline jule::Bool _221410ad5_typeEnum(_22140e9c4_typeCompatibilityChecker*, jule::Ptr<_221200d7b_TypeEnum>*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _221410d49_checkTypeEnum(_22140e9c4_typeCompatibilityChecker*);
inline jule::Bool _2214110ad_check(_22140e9c4_typeCompatibilityChecker*);
struct _22140e9c4_typeCompatibilityChecker {
	jule::Ptr<_22124ad71_Sema> _field_s;
	jule::Ptr<_221453397_TypeKind> _field_dest;
	jule::Ptr<_221453397_TypeKind> _field_src;
	jule::Ptr<_21da1aa0b_Token> _field_errorToken;
	

	_22140e9c4_typeCompatibilityChecker(void) = default;

	inline bool operator==(_22140e9c4_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_22140e9c4_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _221411a5e_pushErr(_2214115ec_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _221411cc3_checkValidity(_2214115ec_assignTypeChecker*);
inline jule::Bool _221412037_checkConst(_2214115ec_assignTypeChecker*);
inline jule::Bool _22141229b_isPrim(_2214115ec_assignTypeChecker*);
inline jule::Bool _221412510_checkCompatibility(_2214115ec_assignTypeChecker*);
inline jule::Bool _221412774_check(_2214115ec_assignTypeChecker*);
struct _2214115ec_assignTypeChecker {
	jule::Ptr<_22124ad71_Sema> _field_s;
	jule::Ptr<_221453397_TypeKind> _field_dest;
	jule::Ptr<_221425c2c_Data> _field_d;
	jule::Ptr<_21da1aa0b_Token> _field_errorToken;
	

	_2214115ec_assignTypeChecker(void) = default;

	inline bool operator==(_2214115ec_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_2214115ec_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _2062bed22_annotateConstraintElem(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _2062c0196_annotateConstraintElem(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _2062be86b_annotateConstraintElem(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _2062c7346_annotateConstraintElem(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _2214139b7_annotateConstraintMap(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _221413cc5_annotateConstraintTup(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _2214140d3_annotateConstraintFn(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _221414413_annotateConstraintIdent(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _221414732_annotateConstraint(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline void _221414a51_pushGeneric(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*, jule::I32);
inline jule::Bool _221414d5e_annotatePrim(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _22141516c_annotateArr(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _22141547a_annotateSlc(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _221415832_checkMapKey(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _221415b40_annotateMap(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _221415e4d_annotateFn(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _22141625b_annotatePtr(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _221416569_annotateSptr(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _221416877_annotateStruct(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _221416b85_annotateAny(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _221416e93_annotateKind(_2214130d2_dynamicTypeAnnotation*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _221417207_annotate(_2214130d2_dynamicTypeAnnotation*);
struct _2214130d2_dynamicTypeAnnotation {
	jule::Ptr<_22142779a_Eval> _field_e;
	jule::Ptr<_2211dc97d_FnIns> _field_f;
	jule::Ptr<_2211dbaae_ParamIns> _field_p;
	jule::Ptr<_221425c2c_Data> _field_a;
	jule::Ptr<_21da1aa0b_Token> _field_errorToken;
	jule::Ptr<_221453397_TypeKind>* _field_k = nullptr;
	jule::Ptr<_2211a478b_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_221453397_TypeKind>> _field_ignored;
	

	_2214130d2_dynamicTypeAnnotation(void) = default;


};
inline void _221417ee9_pushErrToken(_221417999_fnCallArgChecker*, jule::Ptr<_21da1aa0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _221418318_pushErr(_221417999_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_2211dbaae_ParamIns>> _22141857c_getParams(_221417999_fnCallArgChecker*);
inline jule::Bool _22141888a_checkCounts(_221417999_fnCallArgChecker*, jule::Slice<jule::Ptr<_2211dbaae_ParamIns>>*);
inline jule::Bool _221418cdb_checkArg(_221417999_fnCallArgChecker*, jule::Ptr<_2211dbaae_ParamIns>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Bool _221419193_push(_221417999_fnCallArgChecker*, jule::Ptr<_2211dbaae_ParamIns>*, jule::Ptr<_2211a8cac_Expr>);
inline jule::Bool _22141954a_pushVariadic(_221417999_fnCallArgChecker*, jule::Ptr<_2211dbaae_ParamIns>*, jule::I32);
inline jule::Bool _221419858_checkArgs(_221417999_fnCallArgChecker*, jule::Slice<jule::Ptr<_2211dbaae_ParamIns>>*);
inline jule::Bool _221419ade_checkDynamicTypeAnnotation(_221417999_fnCallArgChecker*);
inline jule::Bool _221419d64_check(_221417999_fnCallArgChecker*);
struct _221417999_fnCallArgChecker {
	jule::Ptr<_22142779a_Eval> _field_e;
	jule::Slice<jule::Ptr<_2211a8cac_Expr>> _field_args;
	jule::Ptr<_21da1aa0b_Token> _field_errorToken;
	jule::Ptr<_2211dc97d_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_221453397_TypeKind>> _field_ignored;
	

	_221417999_fnCallArgChecker(void) = default;


};
inline void _22141a8ae_pushErr(_22141a3a3_structLitChecker*, jule::Ptr<_21da1aa0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _22141abcd_pushSuggestion(_22141a3a3_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _22141b096_pushMatch(_22141a3a3_structLitChecker*, jule::Ptr<_2211c6bed_FieldIns>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_21da1aa0b_Token>*);
inline void _22141b3b5_checkPair(_22141a3a3_structLitChecker*, jule::Ptr<_2211ad71d_FieldExprPair>*, jule::Slice<jule::Ptr<_2211a8cac_Expr>>*);
inline jule::Bool _22141b6c3_readyExprs(_22141a3a3_structLitChecker*, jule::Slice<jule::Ptr<_2211a8cac_Expr>>*);
inline void _22141b948_check(_22141a3a3_structLitChecker*, jule::Slice<jule::Ptr<_2211a8cac_Expr>>*);
struct _22141a3a3_structLitChecker {
	jule::Ptr<_22142779a_Eval> _field_e;
	jule::Ptr<_21da1aa0b_Token> _field_errorToken;
	jule::Ptr<_2211c76e3_StructIns> _field_s;
	jule::Slice<jule::Ptr<_2211cc40c_StructArgExprModel>> _field_args;
	

	_22141a3a3_structLitChecker(void) = default;


};
inline jule::Ptr<_22126b17c_Var> _22141c44e_buildVar(_22141be87_rangeChecker*, jule::Ptr<_2211b71e9_VarDecl>*);
inline void _22141c62a_setSizeKey(_22141be87_rangeChecker*);
inline void _22141c9e3_checkRangeExprValidity(_22141be87_rangeChecker*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_221453397_TypeKind>*);
inline void _22141cbbe_checkSlice(_22141be87_rangeChecker*);
inline void _22141cd9a_checkArray(_22141be87_rangeChecker*);
inline void _22141d076_checkMapKeyA(_22141be87_rangeChecker*);
inline void _22141d252_checkMapKeyB(_22141be87_rangeChecker*);
inline void _22141d42d_checkMap(_22141be87_rangeChecker*);
inline void _22141d609_checkStr(_22141be87_rangeChecker*);
inline void _22141d7d5_checkComptime(_22141be87_rangeChecker*);
inline jule::Bool _22141da49_checkComptimeRange(_22141be87_rangeChecker*);
inline jule::Bool _22141dcad_check(_22141be87_rangeChecker*);
struct _22141be87_rangeChecker {
	jule::Ptr<_22122ac63_scopeChecker> _field_sc;
	jule::Ptr<_2211b8d77_RangeKind> _field_rang;
	jule::Ptr<_221225cd5_RangeIter> _field_Kind;
	jule::Ptr<_221425c2c_Data> _field_d;
	

	_22141be87_rangeChecker(void) = default;

	inline bool operator==(_22141be87_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_22141be87_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _22141e929_prepareTypes(_22141e484_retTypeChecker*);
inline void _22141eb9e_prepareExprs(_22141e484_retTypeChecker*, jule::Ptr<_2211a8cac_Expr>*);
inline void _22141ed7a_checkExprs(_22141e484_retTypeChecker*);
inline jule::Bool _221420188_check(_22141e484_retTypeChecker*, jule::Ptr<_2211a8cac_Expr>*);
struct _22141e484_retTypeChecker {
	jule::Ptr<_22122ac63_scopeChecker> _field_sc;
	jule::Ptr<_2211dc97d_FnIns> _field_f;
	jule::Slice<jule::Ptr<_221453397_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_2211a8cac_Expr>> _field_exprs;
	jule::Ptr<_21da1aa0b_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_22141e484_retTypeChecker(void) = default;


};
inline jule::Ptr<_221242a9e_ImportInfo> _22142172d_SelectPackage(_221421222_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)>);
inline jule::Ptr<_22126b17c_Var> _221421ad5_FindVar(_221421222_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_22145264e_TypeAlias> _221421e8c_FindTypeAlias(_221421222_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_2211c48cc_Struct> _221422344_FindStruct(_221421222_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_2211d9ccc_Fn> _2214226eb_FindFn(_221421222_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_2211ebeed_Trait> _221422a09_FindTrait(_221421222_SymbolTable*, jule::Str);
inline jule::Ptr<_2211ee781_Enum> _221422d17_FindEnum(_221421222_SymbolTable*, jule::Str);
inline jule::Ptr<_221200d7b_TypeEnum> _221423125_FindTypeEnum(_221421222_SymbolTable*, jule::Str);
inline jule::Ptr<_22126b17c_Var> _221423697_findVar(_221421222_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_22145264e_TypeAlias> _221423ae8_findTypeAlias(_221421222_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _221423ea0_defByIdent(_221421222_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _221424401_isDuplicatedIdent(_221421222_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _221421222_SymbolTable {
	jule::Ptr<_21da20d96_File> _field_File;
	jule::Slice<_2211e1c18_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_221242a9e_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_22126b17c_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_22145264e_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_2211c48cc_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_2211d9ccc_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_2211ebeed_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_2211ee781_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_221200d7b_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_22121e0ca_Impl>> _field_Impls;
	

	_221421222_SymbolTable(void) = default;


};
inline jule::Bool _221426117_IsNil(_221425c2c_Data*);
inline jule::Bool _22142637b_IsVoid(_221425c2c_Data*);
inline jule::Bool _2214265e0_IsConst(_221425c2c_Data*);
inline jule::Bool _2214268ed_GoodOperand(_221425c2c_Data*, jule::Ptr<_221425c2c_Data>*);
struct _221425c2c_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_221453397_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_21e6c53da_Const> _field_Constant;
	

	_221425c2c_Data(void) = default;

	inline bool operator==(_221425c2c_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_221425c2c_Data _other) { return !this->operator==(_other); }


};
struct _221426ca5_Value {
	jule::Ptr<_2211a8cac_Expr> _field_Expr;
	jule::Ptr<_221425c2c_Data> _field_Data;
	

	_221426ca5_Value(void) = default;

	inline bool operator==(_221426ca5_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_221426ca5_Value _other) { return !this->operator==(_other); }


};
inline void _221427ca6_pushErr(_22142779a_Eval*, jule::Ptr<_21da1aa0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2214280c5_pushSuggestion(_22142779a_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _2214282a1_allowBuiltin(_22142779a_Eval*);
inline void _22142847c_disallowBuiltin(_22142779a_Eval*);
inline jule::Bool _2214286e1_isUnsafe(_22142779a_Eval*);
inline jule::Bool _221428955_isGlobal(_22142779a_Eval*);
inline jule::Bool _221428c30_applyNumericPrefix(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _221428e94_litNil(_22142779a_Eval*);
inline jule::Ptr<_221425c2c_Data> _2214292a2_litStr(_22142779a_Eval*, jule::Ptr<_2211a9ce1_LitExpr>*);
inline jule::Ptr<_221425c2c_Data> _2214295b0_litBool(_22142779a_Eval*, jule::Ptr<_2211a9ce1_LitExpr>*);
inline jule::Ptr<_221425c2c_Data> _2214298bd_litRune(_22142779a_Eval*, jule::Ptr<_2211a9ce1_LitExpr>*);
inline jule::Ptr<_221425c2c_Data> _221429bcb_litFloat(_22142779a_Eval*, jule::Ptr<_2211a9ce1_LitExpr>*);
inline jule::Ptr<_221425c2c_Data> _221429ed9_litInt(_22142779a_Eval*, jule::Ptr<_2211a9ce1_LitExpr>*);
inline jule::Ptr<_221425c2c_Data> _22142a2e7_litNum(_22142779a_Eval*, jule::Ptr<_2211a9ce1_LitExpr>*);
inline jule::Ptr<_221425c2c_Data> _22142a605_evalLit(_22142779a_Eval*, jule::Ptr<_2211a9ce1_LitExpr>);
inline jule::Any _22142a913_findBuiltins(_22142779a_Eval*, jule::Str);
inline jule::Any _22142acba_getDef(_22142779a_Eval*, jule::Str, jule::Bool);
inline void _206409e6d_pushReference(_22142779a_Eval*, jule::Ptr<_2211dc97d_FnIns>*);
inline void _20641dc73_pushReference(_22142779a_Eval*, jule::Ptr<_22126b17c_Var>*);
inline void _20649d8d5_pushReference(_22142779a_Eval*, jule::Ptr<_2211c76e3_StructIns>*);
inline jule::Ptr<_221425c2c_Data> _22142b34d__evalEnum(_22142779a_Eval*, jule::Ptr<_2211ee781_Enum>);
inline jule::Ptr<_221425c2c_Data> _22142b705_evalEnum(_22142779a_Eval*, jule::Ptr<_2211ee781_Enum>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22142ba13__evalTypeEnum(_22142779a_Eval*, jule::Ptr<_221200d7b_TypeEnum>);
inline jule::Ptr<_221425c2c_Data> _22142bdba_evalTypeEnum(_22142779a_Eval*, jule::Ptr<_221200d7b_TypeEnum>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22142c1c8__evalStruct(_22142779a_Eval*, jule::Ptr<_2211c76e3_StructIns>);
inline jule::Ptr<_221425c2c_Data> _22142c580_evalStruct(_22142779a_Eval*, jule::Ptr<_2211c76e3_StructIns>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22142c88d_evalFnIns(_22142779a_Eval*, jule::Ptr<_2211dc97d_FnIns>);
inline void _22142cbac_checkDeprecated(_22142779a_Eval*, jule::Slice<jule::Ptr<_221171307_Directive>>*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22142d064_evalFn(_22142779a_Eval*, jule::Ptr<_2211d9ccc_Fn>, jule::Ptr<_21da1aa0b_Token>);
inline void _22142d42c_pushIllegalCycleError(_22142779a_Eval*, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_22126b17c_Var>*, jule::Str*);
inline jule::Bool _22142d7d4_checkCrossCycle(_22142779a_Eval*, jule::Ptr<_22126b17c_Var>*, jule::Str*);
inline jule::Bool _22142db8b_checkIllegalCycles(_22142779a_Eval*, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22142e043_evalVar(_22142779a_Eval*, jule::Ptr<_22126b17c_Var>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22142e3ea_evalTypeAlias(_22142779a_Eval*, jule::Ptr<_22145264e_TypeAlias>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22142e7a2_evalDef(_22142779a_Eval*, jule::Any, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22142eab0_evalIdent(_22142779a_Eval*, jule::Ptr<_2211aa96d_IdentExpr>);
inline jule::Ptr<_221425c2c_Data> _22142edbd_evalUnary(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211ab177_UnaryExpr>);
inline jule::Ptr<_221425c2c_Data> _2214301cb_evalVariadic(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211ab52e_VariadicExpr>);
inline jule::Ptr<_221425c2c_Data> _2214304d9_evalUnsafe(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211aa4ea_UnsafeExpr>);
inline jule::Ptr<_221425c2c_Data> _2214307e7_evalArr(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211b039b_SliceExpr>);
inline jule::Ptr<_221425c2c_Data> _221430c48_evalExpSlc(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211b039b_SliceExpr>, jule::Ptr<_221453397_TypeKind>, jule::Any);
inline jule::Ptr<_221425c2c_Data> _221431056_evalSliceExpr(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211b039b_SliceExpr>);
inline void _221431397_checkIntegerIndexingByData(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_21da1aa0b_Token>);
inline void _221431771_indexingPtr(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211b0c1a_IndexingExpr>*);
inline void _221431b39_indexingArr(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211b0c1a_IndexingExpr>*);
inline void _221432002_indexingSlc(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211b0c1a_IndexingExpr>*);
inline void _2214323ba_indexingMap(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211b0c1a_IndexingExpr>*);
inline void _221432783_indexingStr(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211b0c1a_IndexingExpr>*);
inline void _221432b4b_toIndexing(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211b0c1a_IndexingExpr>*);
inline jule::Bool _2214330be_pushGenericsFromExprSubIdent(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211ac211_SubIdentExpr>*, jule::Slice<jule::Ptr<_2211a478b_TypeDecl>>*, jule::Ptr<_2211a8cac_Expr>*);
inline jule::Bool _221433487_pushGenericsFromData(jule::Ptr<_22142779a_Eval>, jule::Slice<jule::Ptr<_2211a478b_TypeDecl>>*, jule::Ptr<_2211a8cac_Expr>*);
inline void _2214337c8_evalIdentDeclFromIndexing(jule::Ptr<_22142779a_Eval>, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211b0c1a_IndexingExpr>*);
inline jule::Bool _221433c3a_checkGenericFn(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211dc97d_FnIns>*, jule::Ptr<_21da1aa0b_Token>*, jule::Any*);
inline void _22143407b_evalFnGenericFromIndexing(jule::Ptr<_22142779a_Eval>, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211b0c1a_IndexingExpr>*);
inline jule::Ptr<_221425c2c_Data> _22143439a_evalIndexing(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211b0c1a_IndexingExpr>);
inline __jule_tuple_x_221425c2c_Data__jule_tuple_x_221425c2c_Data _2214346a8_evalSlicingExprs(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211b1325_SlicingExpr>*);
inline void _22143492d_slicingArr(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>*);
inline void _221434ce6_slicingStr(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*);
inline void _221435258_checkSlicing(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211b1325_SlicingExpr>*);
inline jule::Ptr<_221425c2c_Data> _221435566_evalSlicing(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211b1325_SlicingExpr>);
inline void _22143592e_castPtr(_22142779a_Eval*, jule::Ptr<_221453397_TypeKind>, jule::Ptr<_221425c2c_Data>, jule::Ptr<_21da1aa0b_Token>);
inline void _221435ce7_castStruct(_22142779a_Eval*, jule::Ptr<_221453397_TypeKind>, jule::Ptr<_221425c2c_Data>, jule::Ptr<_21da1aa0b_Token>);
inline void _2214361b0_castRef(_22142779a_Eval*, jule::Ptr<_221453397_TypeKind>, jule::Ptr<_221425c2c_Data>, jule::Ptr<_21da1aa0b_Token>);
inline void _221436578_castSlc(_22142779a_Eval*, jule::Ptr<_221453397_TypeKind>, jule::Ptr<_221425c2c_Data>, jule::Ptr<_21da1aa0b_Token>);
inline void _221436897_castStr(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>, jule::Ptr<_21da1aa0b_Token>);
inline void _221436c60_castInt(_22142779a_Eval*, jule::Ptr<_221453397_TypeKind>, jule::Ptr<_221425c2c_Data>, jule::Ptr<_21da1aa0b_Token>);
inline void _221437128_castNum(_22142779a_Eval*, jule::Ptr<_221453397_TypeKind>, jule::Ptr<_221425c2c_Data>, jule::Ptr<_21da1aa0b_Token>);
inline void _2214374e1_castPrim(_22142779a_Eval*, jule::Ptr<_221453397_TypeKind>, jule::Ptr<_221425c2c_Data>, jule::Ptr<_21da1aa0b_Token>);
inline void _221437810_castConstant(_22142779a_Eval*, jule::Ptr<_221453397_TypeKind>*, jule::Ptr<_221425c2c_Data>*);
inline void _221437bc8_castTypeEnum(_22142779a_Eval*, jule::Ptr<_221453397_TypeKind>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_21da1aa0b_Token>*);
inline void _221438091_castTypeEnumT(_22142779a_Eval*, jule::Ptr<_221453397_TypeKind>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Ptr<_221425c2c_Data> _2214384e2_evalCastByTypeNData(_22142779a_Eval*, jule::Ptr<_221453397_TypeKind>, jule::Ptr<_221425c2c_Data>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _221438943_evalCastT(jule::Ptr<_22142779a_Eval>, jule::Ptr<_221453397_TypeKind>*, jule::Ptr<_2211a8cac_Expr>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Ptr<_221425c2c_Data> _221438c51_evalCast(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211ab8d6_CastExpr>);
inline jule::Ptr<_221425c2c_Data> _22143905e_evalNsSelection(_22142779a_Eval*, jule::Ptr<_2211abc8d_NsSelectionExpr>);
inline jule::Ptr<_221425c2c_Data> _2214394b0_evalStructLitExplicit(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211c76e3_StructIns>, jule::Slice<jule::Ptr<_2211a8cac_Expr>>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _2214397bd_evalStructLit(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211ade6b_StructLit>);
inline _2214641dd_typeChecker _221439a32_typeChecker(_22142779a_Eval*);
inline jule::Ptr<_221425c2c_Data> _221439d40_evalType(_22142779a_Eval*, jule::Ptr<_2211a478b_TypeDecl>);
inline void _22143a15e_callTypeFn(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline void _22143a47d_callBuiltinFn(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline void _22143a7be_checkFnOfConcurrentCall(_22142779a_Eval*, jule::Ptr<_2211dc97d_FnIns>*, jule::Ptr<_21da1aa0b_Token>);
inline void _22143abba_processExceptionalHandler(_22142779a_Eval*, jule::Ptr<_2211dc97d_FnIns>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline void _22143aeea_callFn(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22143b308_evalFnCall(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211acc8e_FnCallExpr>);
inline jule::Ptr<_221425c2c_Data> _22143b6b0_evalEnumStatic(_22142779a_Eval*, jule::Ptr<_2211ee781_Enum>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22143ba67_evalTypeEnumStatic(_22142779a_Eval*, jule::Ptr<_221200d7b_TypeEnum>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22143be1e_evalStructStatic(_22142779a_Eval*, jule::Ptr<_2211c76e3_StructIns>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22143c370_evalTraitSubIdent(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>, jule::Ptr<_2211ebeed_Trait>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22143c88c_evalStructSubIdentField(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211c76e3_StructIns>*, jule::Ptr<_21da1aa0b_Token>*, jule::Ptr<_2211c6bed_FieldIns>*);
inline jule::Ptr<_221425c2c_Data> _22143cd98_evalStructSubIdent(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>, jule::Ptr<_2211c76e3_StructIns>, jule::Ptr<_2211ac211_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_221425c2c_Data> _22143d250_evalSliceSubIdent(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22143d607_evalArraySubIdent(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22143d915_evalIntTypeStatic(_22142779a_Eval*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22143dc23_evalUintTypeStatic(_22142779a_Eval*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22143e031_evalI8TypeStatic(_22142779a_Eval*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22143e33e_evalI16TypeStatic(_22142779a_Eval*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22143e64c_evalI32TypeStatic(_22142779a_Eval*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22143e95a_evalI64TypeStatic(_22142779a_Eval*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22143ec68_evalU8TypeStatic(_22142779a_Eval*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _221440076_evalU16TypeStatic(_22142779a_Eval*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _221440384_evalU32TypeStatic(_22142779a_Eval*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _221440692_evalU64TypeStatic(_22142779a_Eval*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _2214409a0_evalF32TypeStatic(_22142779a_Eval*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _221440cad_evalF64TypeStatic(_22142779a_Eval*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _221441165_evalPrimStatic(_22142779a_Eval*, jule::Str, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_221425c2c_Data> _22144151c_evalTypeStatic(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>, jule::Ptr<_2211ac211_SubIdentExpr>);
inline jule::Ptr<_221425c2c_Data> _2066674a5_comptimeObjSubIdent(_22142779a_Eval*, jule::Ptr<_221211c7c_comptimeTypeInfo>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211ac211_SubIdentExpr>*);
inline jule::Ptr<_221425c2c_Data> _20666ac39_comptimeObjSubIdent(_22142779a_Eval*, jule::Ptr<_2212039c7_comptimeStructField>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211ac211_SubIdentExpr>*);
inline jule::Ptr<_221425c2c_Data> _20666e457_comptimeObjSubIdent(_22142779a_Eval*, jule::Ptr<_2212099cd_comptimeEnumField>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211ac211_SubIdentExpr>*);
inline jule::Ptr<_221425c2c_Data> _206672e3e_comptimeObjSubIdent(_22142779a_Eval*, jule::Ptr<_22120c250_comptimeParam>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211ac211_SubIdentExpr>*);
inline jule::Ptr<_221425c2c_Data> _20667665c_comptimeObjSubIdent(_22142779a_Eval*, jule::Ptr<_2212069ca_comptimeStatic>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211ac211_SubIdentExpr>*);
inline jule::Ptr<_221425c2c_Data> _206679d7a_comptimeObjSubIdent(_22142779a_Eval*, jule::Ptr<_221217777_comptimeValue>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211ac211_SubIdentExpr>*);
inline jule::Ptr<_221425c2c_Data> _221441d25_evalObjSubIdent(_22142779a_Eval*, jule::Ptr<_221425c2c_Data>, jule::Ptr<_2211ac211_SubIdentExpr>);
inline jule::Ptr<_221425c2c_Data> _221442133_evalSubIdent(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211ac211_SubIdentExpr>);
inline jule::Ptr<_221425c2c_Data> _221442441_evalTuple(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211a9939_TupleExpr>);
inline jule::Ptr<_221425c2c_Data> _2214427e8_evalMap(jule::Ptr<_22142779a_Eval>, jule::Ptr<_221460d66_Map>, jule::Ptr<_2211ae3de_BraceLit>);
inline jule::Ptr<_221425c2c_Data> _221442b06_evalBraceLit(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211ae3de_BraceLit>);
inline jule::Ptr<_221425c2c_Data> _221442e14_evalAnonFn(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211b621a_FnDecl>);
inline jule::Ptr<_221425c2c_Data> _221443222_evalBinop(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211ac684_BinopExpr>);
inline jule::Ptr<_221425c2c_Data> _221443530_evalExprKind(jule::Ptr<_22142779a_Eval>, jule::Any);
inline jule::Ptr<_221425c2c_Data> _22144383d_eval1(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211a8cac_Expr>);
inline jule::Ptr<_221425c2c_Data> _221443b4b_eval(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211a8cac_Expr>);
inline jule::Ptr<_221425c2c_Data> _221443e59_evalExpr1(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211a8cac_Expr>);
inline jule::Ptr<_221425c2c_Data> _221444267_evalExpr(jule::Ptr<_22142779a_Eval>, jule::Ptr<_2211a8cac_Expr>);
struct _22142779a_Eval {
	jule::Ptr<_22124ad71_Sema> _field_s;
	jule::Trait<_22147198c_Lookup> _field_lookup;
	jule::Ptr<_221453397_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_22126b17c_Var> _field_owner;
	jule::Ptr<_2211c6bed_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_22142779a_Eval(void) = default;

	inline bool operator==(_22142779a_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_22142779a_Eval _other) { return !this->operator==(_other); }


};
inline _2214446da_unaryEval static__221444b91_new(jule::Ptr<_22142779a_Eval>);
inline void _221444d6c_minus(_2214446da_unaryEval*);
inline void _221445048_plus(_2214446da_unaryEval*);
inline void _221445224_caret(_2214446da_unaryEval*);
inline void _221445400_excl(_2214446da_unaryEval*);
inline void _2214455cb_star(_2214446da_unaryEval*);
inline void _2214457a7_amper(_2214446da_unaryEval*);
inline void _221445983_typeDecl(_2214446da_unaryEval*);
inline void _221445b5e_evalData(_2214446da_unaryEval*);
inline jule::Ptr<_221425c2c_Data> _221445e39_eval(_2214446da_unaryEval*, jule::Ptr<_2211ab177_UnaryExpr>);
struct _2214446da_unaryEval {
	jule::Ptr<_22142779a_Eval> _field_e;
	jule::Ptr<_221425c2c_Data> _field_d;
	jule::Ptr<_2211ab177_UnaryExpr> _field_u;
	

	_2214446da_unaryEval(void) = default;

	inline bool operator==(_2214446da_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_2214446da_unaryEval _other) { return !this->operator==(_other); }


};
inline _221446478_binaryEval static__221446a50_newPlain(jule::Ptr<_22142779a_Eval>);
inline _221446478_binaryEval static__221446d91_new(jule::Ptr<_22142779a_Eval>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Bool _221447105_checkTypeCompatibility(_221446478_binaryEval*);
inline jule::Bool _22144739c_checkStructCommonOperatorCompatibility(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _221447644_evalComptimeTypeInfo(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _2214478a8_evalNil(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _221447b1c_evalEnum(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _221447d81_evalTypeEnum(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _2214480e5_evalSptr(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _221448359_evalPtr(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _2214485bd_evalArr(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _221448832_evalSlc(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _221448a96_evalStruct(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _221448d0a_evalTrait(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _22144906e_evalAny(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _2214492d3_evalBool(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _221449547_evalStr(_221446478_binaryEval*);
inline void _221449723_setTypeToGreater(_221446478_binaryEval*);
inline void _221449965_checkModData(_221446478_binaryEval*, jule::Ptr<_221425c2c_Data>*);
inline void _221449b41_mod(_221446478_binaryEval*);
inline jule::Bool _221449ee8_numbersAreCompatibile(_221446478_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_221425c2c_Data> _22144a25c_evalFloat(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _22144a4c1_evalInt(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _22144a735_evalPrim(_221446478_binaryEval*);
inline void _22144a911_checkSpecialCases(_221446478_binaryEval*);
inline jule::Ptr<_221425c2c_Data> _22144ab75_evalOp(_221446478_binaryEval*);
inline void _22144adea_evalConst(_221446478_binaryEval*, jule::Ptr<_221425c2c_Data>*);
inline void _22144b170_checkData(_221446478_binaryEval*, jule::Ptr<_221425c2c_Data>*);
inline void _22144b34b_checkDatas(_221446478_binaryEval*);
inline void _22144b5c1_setModel(_221446478_binaryEval*, jule::Ptr<_221425c2c_Data>*);
inline void _22144b846_postEval(_221446478_binaryEval*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22144bbed_solveExplicit(_221446478_binaryEval*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22144c00b_eval(_221446478_binaryEval*, jule::Ptr<_2211ac684_BinopExpr>*);
struct _221446478_binaryEval {
	jule::Ptr<_22142779a_Eval> _field_e;
	jule::Ptr<_221425c2c_Data> _field_l;
	jule::Ptr<_221425c2c_Data> _field_r;
	jule::Ptr<_21da1aa0b_Token> _field_op;
	

	_221446478_binaryEval(void) = default;

	inline bool operator==(_221446478_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_221446478_binaryEval _other) { return !this->operator==(_other); }


};
struct _221451b15_InsGeneric {
	jule::Ptr<_221453397_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_221453397_TypeKind>> _field_Constraint;
	

	_221451b15_InsGeneric(void) = default;


};
struct _22145264e_TypeAlias {
	jule::Ptr<_2211b4724_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_221459c50_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_22145264e_TypeAlias>> _field_Generics;
	

	_22145264e_TypeAlias(void) = default;


};
inline jule::Str _221453793_Str(_221453397_TypeKind*);
inline jule::Bool _221453aa1_Equal(jule::Ptr<_221453397_TypeKind>, jule::Ptr<_221453397_TypeKind>);
inline jule::Bool _221454167_CppLinked(_221453397_TypeKind*);
inline jule::Bool _2214543cb_IsNil(_221453397_TypeKind*);
inline jule::Bool _221454640_Void(_221453397_TypeKind*);
inline jule::Bool _2214548a4_Comparable(_221453397_TypeKind*);
inline jule::Bool _221454b18_Mutable(_221453397_TypeKind*);
inline jule::Bool _221454d7c_Ordered(_221453397_TypeKind*);
inline jule::Bool _2214550e1_NilCompatible(_221453397_TypeKind*);
inline jule::Bool _221455355_PerformsRC(_221453397_TypeKind*);
inline jule::Bool _2214555b9_SupportsCloning(_221453397_TypeKind*);
inline jule::Bool _22145582d_Variadicable(_221453397_TypeKind*);
inline jule::Ptr<_22145a5be_Prim> _221455a92_Prim(_221453397_TypeKind*);
inline jule::Ptr<_22145dd53_Sptr> _221455d06_Sptr(_221453397_TypeKind*);
inline jule::Ptr<_2214623b7_Ptr> _22145606a_Ptr(_221453397_TypeKind*);
inline jule::Ptr<_2211ee781_Enum> _2214562ce_Enum(_221453397_TypeKind*);
inline jule::Ptr<_221200d7b_TypeEnum> _221456543_TypeEnum(_221453397_TypeKind*);
inline jule::Ptr<_22146195a_Arr> _2214567a7_Arr(_221453397_TypeKind*);
inline jule::Ptr<_22145e7b0_Slc> _221456a1b_Slc(_221453397_TypeKind*);
inline jule::Ptr<_2211dc97d_FnIns> _221456c80_Fn(_221453397_TypeKind*);
inline jule::Ptr<_2211c76e3_StructIns> _221456ee4_Struct(_221453397_TypeKind*);
inline jule::Ptr<_2211ebeed_Trait> _221457258_Trait(_221453397_TypeKind*);
inline jule::Ptr<_221460d66_Map> _2214574bc_Map(_221453397_TypeKind*);
inline jule::Ptr<_22146033d_Tuple> _221457731_Tup(_221453397_TypeKind*);
inline jule::Bool _221457995_comptime(_221453397_TypeKind*);
inline jule::Ptr<_2212054bd_comptimeStructFields> _221457c09_comptimeStructFields(_221453397_TypeKind*);
inline jule::Ptr<_2212039c7_comptimeStructField> _221457e6d_comptimeStructField(_221453397_TypeKind*);
inline jule::Ptr<_22120abee_comptimeEnumFields> _2214581d2_comptimeEnumFields(_221453397_TypeKind*);
inline jule::Ptr<_2212099cd_comptimeEnumField> _221458446_comptimeEnumField(_221453397_TypeKind*);
inline jule::Ptr<_22120e2eb_comptimeParams> _2214586aa_comptimeParams(_221453397_TypeKind*);
inline jule::Ptr<_22120c250_comptimeParam> _22145891e_comptimeParam(_221453397_TypeKind*);
inline jule::Ptr<_221202ed2_comptimeRange> _221458b83_comptimeRange(_221453397_TypeKind*);
inline jule::Ptr<_2212107b4_comptimeTypeInfos> _221458de7_comptimeTypeInfos(_221453397_TypeKind*);
inline jule::Ptr<_221211c7c_comptimeTypeInfo> _22145915b_comptimeTypeInfo(_221453397_TypeKind*);
inline jule::Ptr<_221208515_comptimeStatics> _2214593c0_comptimeStatics(_221453397_TypeKind*);
inline jule::Ptr<_2212069ca_comptimeStatic> _221459634_comptimeStatic(_221453397_TypeKind*);
inline jule::Ptr<_221217777_comptimeValue> _221459898_comptimeValue(_221453397_TypeKind*);
struct _221453397_TypeKind {
	jule::Str _field_CppIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_221452e35_Kind> _field_Kind;
	

	_221453397_TypeKind(void) = default;

	inline bool operator==(_221453397_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_221453397_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _22145a107_checked(_221459c50_TypeSymbol*);
inline void _22145a2d3_removeKind(_221459c50_TypeSymbol*);
struct _221459c50_TypeSymbol {
	jule::Ptr<_2211a478b_TypeDecl> _field_Decl;
	jule::Ptr<_221453397_TypeKind> _field_Kind;
	

	_221459c50_TypeSymbol(void) = default;

	inline bool operator==(_221459c50_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_221459c50_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _22145a932_Str(_22145a5be_Prim*);
inline jule::Bool _22145ac40_Equal(jule::Ptr<_22145a5be_Prim>, jule::Ptr<_221453397_TypeKind>);
inline jule::Bool _22145b1b3_IsConstraint(_22145a5be_Prim*);
inline jule::Bool _22145b427_IsI8(_22145a5be_Prim*);
inline jule::Bool _22145b68b_IsI16(_22145a5be_Prim*);
inline jule::Bool _22145b900_IsI32(_22145a5be_Prim*);
inline jule::Bool _22145bb64_IsI64(_22145a5be_Prim*);
inline jule::Bool _22145bdc8_IsU8(_22145a5be_Prim*);
inline jule::Bool _22145c13c_IsU16(_22145a5be_Prim*);
inline jule::Bool _22145c3a1_IsU32(_22145a5be_Prim*);
inline jule::Bool _22145c615_IsU64(_22145a5be_Prim*);
inline jule::Bool _22145c879_IsF32(_22145a5be_Prim*);
inline jule::Bool _22145cadd_IsF64(_22145a5be_Prim*);
inline jule::Bool _22145cd52_IsInt(_22145a5be_Prim*);
inline jule::Bool _22145d0b6_IsUint(_22145a5be_Prim*);
inline jule::Bool _22145d32a_IsUintptr(_22145a5be_Prim*);
inline jule::Bool _22145d58e_IsBool(_22145a5be_Prim*);
inline jule::Bool _22145d803_IsStr(_22145a5be_Prim*);
inline jule::Bool _22145da67_IsAny(_22145a5be_Prim*);
struct _22145a5be_Prim {
	jule::Str _field_Kind;
	

	_22145a5be_Prim(void) = default;

	inline bool operator==(_22145a5be_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_22145a5be_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _22145e1b6_Str(_22145dd53_Sptr*);
inline jule::Bool _22145e4c4_Equal(jule::Ptr<_22145dd53_Sptr>, jule::Ptr<_221453397_TypeKind>);
struct _22145dd53_Sptr {
	jule::Ptr<_221453397_TypeKind> _field_Elem;
	

	_22145dd53_Sptr(void) = default;

	inline bool operator==(_22145dd53_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_22145dd53_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _22145ecbb_Str(_22145e7b0_Slc*);
inline jule::Bool _2214600c9_Equal(jule::Ptr<_22145e7b0_Slc>, jule::Ptr<_221453397_TypeKind>);
struct _22145e7b0_Slc {
	jule::Ptr<_221453397_TypeKind> _field_Elem;
	

	_22145e7b0_Slc(void) = default;

	inline bool operator==(_22145e7b0_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_22145e7b0_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _2214606a1_Str(_22146033d_Tuple*);
inline jule::Bool _2214609ae_Equal(jule::Ptr<_22146033d_Tuple>, jule::Ptr<_221453397_TypeKind>);
struct _22146033d_Tuple {
	jule::Slice<jule::Ptr<_221453397_TypeKind>> _field_Types;
	

	_22146033d_Tuple(void) = default;


};
inline jule::Str _2214611c9_Str(_221460d66_Map*);
inline jule::Bool _2214614d7_Equal(jule::Ptr<_221460d66_Map>, jule::Ptr<_221453397_TypeKind>);
struct _221460d66_Map {
	jule::Ptr<_221453397_TypeKind> _field_Key;
	jule::Ptr<_221453397_TypeKind> _field_Val;
	

	_221460d66_Map(void) = default;

	inline bool operator==(_221460d66_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_221460d66_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _221461cbd_Str(_22146195a_Arr*);
inline jule::Bool _2214620cb_Equal(jule::Ptr<_22146195a_Arr>, jule::Ptr<_221453397_TypeKind>);
struct _22146195a_Arr {
	jule::Bool _field_Auto = false;
	jule::I32 _field_N = 0;
	jule::Ptr<_221453397_TypeKind> _field_Elem;
	

	_22146195a_Arr(void) = default;

	inline bool operator==(_22146195a_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_22146195a_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _22146272a_Str(_2214623b7_Ptr*);
inline jule::Bool _221462a38_Equal(jule::Ptr<_2214623b7_Ptr>, jule::Ptr<_221453397_TypeKind>);
inline jule::Bool _221462d8a_IsUnsafe(_2214623b7_Ptr*);
struct _2214623b7_Ptr {
	jule::Ptr<_221453397_TypeKind> _field_Elem;
	

	_2214623b7_Ptr(void) = default;

	inline bool operator==(_2214623b7_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2214623b7_Ptr _other) { return !this->operator==(_other); }


};
struct _22146330d_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_22146330d_referencer(void) = default;

	inline bool operator==(_22146330d_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_22146330d_referencer _other) { return !this->operator==(_other); }


};
inline void _2214648e7_pushErr(_2214641dd_typeChecker*, jule::Ptr<_21da1aa0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _221464ac3_allowBuiltin(_2214641dd_typeChecker*);
inline void _221464c9e_disallowBuiltin(_2214641dd_typeChecker*);
inline jule::Ptr<_22145a5be_Prim> _2214650ac_buildPrim(_2214641dd_typeChecker*, jule::Ptr<_2211a4d52_IdentTypeDecl>*);
inline void _2068921b3_pushReference(_2214641dd_typeChecker*, jule::Ptr<_2211c76e3_StructIns>*);
inline void _206894dca_pushReference(_2214641dd_typeChecker*, jule::Ptr<_2211ebeed_Trait>*);
inline void _2214655a7_pushReferenceByKind(_2214641dd_typeChecker*, jule::Ptr<_221453397_TypeKind>*);
inline void _221465970_pushCycleError(_2214641dd_typeChecker*, jule::Any, jule::Any, jule::Str*);
inline jule::Bool _221465d27_checkCrossCycle(_2214641dd_typeChecker*, jule::Any, jule::Str*);
inline jule::Bool _2214661ce_checkIllegalCycles(_2214641dd_typeChecker*, jule::Ptr<_2211a4d52_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_221452e35_Kind> _221466586_fromTypeAlias(_2214641dd_typeChecker*, jule::Ptr<_2211a4d52_IdentTypeDecl>*, jule::Ptr<_22145264e_TypeAlias>*);
inline jule::Ptr<_2211ee781_Enum> _22146693d_fromEnum(_2214641dd_typeChecker*, jule::Ptr<_2211a4d52_IdentTypeDecl>*, jule::Ptr<_2211ee781_Enum>*);
inline jule::Ptr<_221200d7b_TypeEnum> _221466ce5_fromTypeEnum(_2214641dd_typeChecker*, jule::Ptr<_2211a4d52_IdentTypeDecl>*, jule::Ptr<_221200d7b_TypeEnum>*);
inline jule::Ptr<_2211ebeed_Trait> _22146719c_fromTrait(_2214641dd_typeChecker*, jule::Ptr<_2211a4d52_IdentTypeDecl>*, jule::Ptr<_2211ebeed_Trait>*);
inline jule::Bool _221467554_checkStructIns(_2214641dd_typeChecker*, jule::Ptr<_2211c76e3_StructIns>*, jule::Ptr<_21da1aa0b_Token>*);
inline void _2214677eb_appendUsedStructReference(_2214641dd_typeChecker*, jule::Ptr<_2211c48cc_Struct>*);
inline jule::Ptr<_2211c76e3_StructIns> _221467bb4_buildStructInstance(_2214641dd_typeChecker*, jule::Ptr<_2211a4d52_IdentTypeDecl>*, jule::Ptr<_2211c48cc_Struct>*);
inline jule::Ptr<_2211c76e3_StructIns> _22146806b_fromStruct(_2214641dd_typeChecker*, jule::Ptr<_2211a4d52_IdentTypeDecl>*, jule::Ptr<_2211c48cc_Struct>*);
inline jule::Trait<_221452e35_Kind> _221468379_getDef(_2214641dd_typeChecker*, jule::Ptr<_2211a4d52_IdentTypeDecl>*);
inline jule::Trait<_221452e35_Kind> _221468687_buildIdent(_2214641dd_typeChecker*, jule::Ptr<_2211a4d52_IdentTypeDecl>);
inline jule::Trait<_221452e35_Kind> _221468995_buildSubIdent(_2214641dd_typeChecker*, jule::Ptr<_2211a54a1_SubIdentTypeDecl>);
inline jule::Ptr<_22145dd53_Sptr> _221468ca3_buildSptrFromType(_2214641dd_typeChecker*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Ptr<_22145dd53_Sptr> _2214690b1_buildSptr(_2214641dd_typeChecker*, jule::Ptr<_2211a5b44_SptrTypeDecl>);
inline jule::Ptr<_2214623b7_Ptr> _2214693be_buildPtrFromType(_2214641dd_typeChecker*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Ptr<_2214623b7_Ptr> _2214696cc_buildPtr(_2214641dd_typeChecker*, jule::Ptr<_2211a6617_PtrTypeDecl>);
inline jule::Ptr<_22145e7b0_Slc> _2214699da_buildSlc(_2214641dd_typeChecker*, jule::Ptr<_2211a6040_SlcTypeDecl>);
inline jule::Ptr<_22146195a_Arr> _221469ce8_buildArr(_2214641dd_typeChecker*, jule::Ptr<_2211a6c99_ArrTypeDecl>);
inline jule::Ptr<_221460d66_Map> _22146a106_buildMap(_2214641dd_typeChecker*, jule::Ptr<_2211a74e7_MapTypeDecl>);
inline jule::Ptr<_22146033d_Tuple> _22146a414_buildTuple(_2214641dd_typeChecker*, jule::Ptr<_2211a632b_TupleTypeDecl>);
inline jule::Bool _22146a722_checkFnTypes(_2214641dd_typeChecker*, jule::Ptr<_2211dc97d_FnIns>*);
inline jule::Ptr<_2211dc97d_FnIns> _22146aa30_buildFn(_2214641dd_typeChecker*, jule::Ptr<_2211b621a_FnDecl>);
inline jule::Trait<_221452e35_Kind> _22146ad3d_buildByNamespace(_2214641dd_typeChecker*, jule::Ptr<_2211a5858_NamespaceTypeDecl>);
inline jule::Ptr<_221453397_TypeKind> _22146b14b_build(_2214641dd_typeChecker*, jule::Any*);
inline jule::Ptr<_221453397_TypeKind> _22146b459_checkDecl(_2214641dd_typeChecker*, jule::Ptr<_2211a478b_TypeDecl>*);
inline void _22146b6ce_check(_2214641dd_typeChecker*, jule::Ptr<_221459c50_TypeSymbol>*);
struct _2214641dd_typeChecker {
	jule::Ptr<_22124ad71_Sema> _field_s;
	jule::Trait<_22147198c_Lookup> _field_rootLookup;
	jule::Trait<_22147198c_Lookup> _field_lookup;
	jule::Ptr<_22146330d_referencer> _field_referencer;
	jule::Ptr<_2211e08d7_ReferenceStack> _field_refers;
	jule::Ptr<_21da1aa0b_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_221453397_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_22145264e_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_22145264e_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_22145264e_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_2214641dd_typeChecker(void) = default;


};
inline jule::Bool static__22146bd3e_prim(jule::Str*, jule::Ptr<_22145a5be_Prim>);
inline jule::Bool static__22146c180_exist(jule::Str*, jule::Ptr<_221453397_TypeKind>*);
struct _22146b8ee_identTypeLookup {
	

	_22146b8ee_identTypeLookup(void) = default;

	inline bool operator==(_22146b8ee_identTypeLookup _other) { return true; }

	inline bool operator!=(_22146b8ee_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _203186a99_FileInfo {
	jule::Ptr<_22117005e_Ast> _field_Ast;
	jule::Slice<_21d6755de_Log> _field_Errors;
	

	_203186a99_FileInfo(void) = default;


};
struct _2031d06c5_stmt {
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_2031d06c5_stmt(void) = default;


};
inline void _2031d1682_stop(_2031d1000_scopeParser*);
inline jule::Bool _2031d18e6_stopped(_2031d1000_scopeParser*);
inline jule::Bool _2031d1b5a_finished(_2031d1000_scopeParser*);
inline jule::Bool _2031d1dbe_isLastSt(_2031d1000_scopeParser*);
inline void _2031d21dd_pushErr(_2031d1000_scopeParser*, jule::Ptr<_21da1aa0b_Token>, jule::Str);
inline void _2031d250c_pushSuggestion(_2031d1000_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _2031d2782_insertAsNext(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2031d06c5_stmt> _2031d29e6_next(_2031d1000_scopeParser*);
inline jule::Ptr<_2211b4724_ScopeTree> _2031d2d9d_buildScope(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_2211b71e9_VarDecl> _2031d31ab_buildVarSt(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211b75a1_RetSt> _2031d34b9_buildRetSt(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211b7c11_Iter> _2031d37c7_buildWhileNextIter(_2031d1000_scopeParser*, jule::Ptr<_2031d06c5_stmt>*);
inline jule::Ptr<_2211b84d6_WhileKind> _2031d3ad5_buildWhileIterKind(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _2031d3de3_getRangeKindKeysTokens(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211b71e9_VarDecl> _2031d4201_buildRangeKindKey(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Slice<jule::Ptr<_2211b71e9_VarDecl>> _2031d450e_buildRangeKindKeys(_2031d1000_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>>*);
inline void _2031d4850_setupRangeKindKeysPlain(_2031d1000_scopeParser*, jule::Ptr<_2211b8d77_RangeKind>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _2031d4ba2_setupRangeKindKeysExplicit(_2031d1000_scopeParser*, jule::Ptr<_2211b8d77_RangeKind>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _2031d4ed2_setupRangeKindKeys(_2031d1000_scopeParser*, jule::Ptr<_2211b8d77_RangeKind>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211b8d77_RangeKind> _2031d5433_buildRangeIterKind(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Any _2031d57da_buildCommonIterKind(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Ptr<_2211b7c11_Iter> _2031d5ae8_buildCommonIter(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211b7c11_Iter> _2031d5e06_buildIterSt(_2031d1000_scopeParser*, jule::Ptr<_2031d06c5_stmt>*);
inline jule::Ptr<_2211b922e_BreakSt> _2031d6214_buildBreakSt(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211b95d6_ContSt> _2031d6522_buildContSt(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211b9a59_If> _2031d6830_buildIf(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211b9e11_Else> _2031d6b3d_buildElse(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211ba384_Conditional> _2031d6e4b_buildIfElseChain(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211a8cac_Expr> _2031d7259_buildCoCallSt(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211b22e3_GotoSt> _2031d7567_buildGotoSt(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211b25ce_FallSt> _2031d7875_buildFallSt(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211baa5a_TypeAliasDecl> _2031d7b83_buildTypeAliasSt(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _2031d80e5_pushCaseExpr(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>, jule::Ptr<_21da1aa0b_Token>, jule::Bool, jule::Slice<jule::Ptr<_2211a8cac_Expr>>*);
inline jule::Slice<jule::Ptr<_2211a8cac_Expr>> _2031d8546_buildCaseExprs(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Ptr<_21da1aa0b_Token>*, jule::Bool);
inline jule::Ptr<_2211b4724_ScopeTree> _2031d8854_buildCaseScope(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline __jule_tuple_x_2211baecd_Case__jule_tuple_bool _2031d8c0b_buildCase(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Bool);
inline __jule_tuple_sx_2211baecd_Case__jule_tuple_x_2211b9e11_Else _2031d90b3_buildCases(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>, jule::Bool);
inline jule::Ptr<_2211bb6a4_MatchCase> _2031d93c1_buildMatchCase(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211b4724_ScopeTree> _2031d96ce_buildScopeSt(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211b1e3b_LabelSt> _2031d99dc_buildLabelSt(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline __jule_tuple__2211b3dd8_StmtData__jule_tuple_bool _2031d9cea_buildIdSt(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2031e8d1a_assignInfo> _2031da108_buildAssignInfo(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211b2bd9_AssignLeft> _2031da416_buildAssignL(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Slice<jule::Ptr<_2211b2bd9_AssignLeft>> _2031da724_buildAssignLs(_2031d1000_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>>*);
inline __jule_tuple_x_2211b3228_AssignSt__jule_tuple_bool _2031daa32_buildPlainAssign(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline __jule_tuple_x_2211b3228_AssignSt__jule_tuple_bool _2031dad40_buildDeclAssign(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline __jule_tuple_x_2211b3228_AssignSt__jule_tuple_bool _2031db14d_buildAssignSt(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211a964d_UseExpr> _2031db45b_buildUseExpr(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Any _2031db769_buildSt(_2031d1000_scopeParser*, jule::Ptr<_2031d06c5_stmt>*);
inline void _2031dba88_build(_2031d1000_scopeParser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Ptr<_2211b4724_ScopeTree>*);
struct _2031d1000_scopeParser {
	jule::Ptr<_2031ec714_parser> _field_p;
	jule::Ptr<_2211b4724_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_2031d06c5_stmt>> _field_stmts;
	jule::I32 _field_pos = 0;
	

	_2031d1000_scopeParser(void) = default;


};
inline void _2031dcca9_pushErr(_2031dc4d4_exprBuilder*, jule::Ptr<_21da1aa0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2031dd0c8_pushSuggestion(_2031dc4d4_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_2211a9939_TupleExpr> _2031dd3d6_buildTuple(_2031dc4d4_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>>*);
inline jule::Ptr<_2211a9ce1_LitExpr> _2031dd6e4_buildLit(_2031dc4d4_exprBuilder*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_2211a478b_TypeDecl> _2031dda02_buildPrimitiveType(_2031dc4d4_exprBuilder*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Any _2031ddd10_buildSingle(_2031dc4d4_exprBuilder*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_2211aa96d_IdentExpr> _2031de11d_buildCppLinkedIdent(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211ab177_UnaryExpr> _2031de42b_buildUnary(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211ac211_SubIdentExpr> _2031de739_buildObjSubIdent(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211abc8d_NsSelectionExpr> _2031dea47_buildNsSubIdent(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211a478b_TypeDecl> _2031ded55_buildType(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Any _2031e0163_buildSubIdent(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211ab52e_VariadicExpr> _2031e0471_buildVariadic(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Any _2031e077e_buildOpRight(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211a9098_RangeExpr> _2031e0aae_buildBetweenParentheses(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211ab8d6_CastExpr> _2031e0dcd_tryBuildCast(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _2031e1296_pushArg(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_2211a8cac_Expr>>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Slice<jule::Ptr<_2211a8cac_Expr>> _2031e15a4_buildArgs(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _2031e18b2_buildCallGenerics(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211acc8e_FnCallExpr> _2031e1d13_buildFnCall(_2031dc4d4_exprBuilder*, jule::Ptr<_21da1aa0b_Token>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Any _2031e2121_buildParenthesesRange(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211aa4ea_UnsafeExpr> _2031e242e_buildUnsafeExpr(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211b621a_FnDecl> _2031e273c_buildAnonFn(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Any _2031e2a4a_buildUnsafe(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _2031e2e13_pushRangeLitPart(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>, jule::Ptr<_21da1aa0b_Token>, jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _2031e3243_getBraceRangeLitExprParts(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211ad71d_FieldExprPair> _2031e3562_buildFieldExprPair(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211a8cac_Expr> _2031e3870_buildStructLitExpr(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Slice<jule::Ptr<_2211a8cac_Expr>> _2031e3b7d_buildStructLitExprs(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211ade6b_StructLit> _2031e3ead_buildTypedStructLiteral(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211a8cac_Expr> _2031e42cc_buildBraceLitPart(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211ae3de_BraceLit> _2031e45da_buildBraceLit(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Any _2031e48e8_buildBraceRange(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _2031e4c06_getEnumerableParts(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211b039b_SliceExpr> _2031e5014_buildSlice(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211b0c1a_IndexingExpr> _2031e5465_buildIndexing(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Ptr<_2211b1325_SlicingExpr> _2031e5a09_buildSlicing(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Ptr<_21da1aa0b_Token>*, jule::Ptr<_21da1aa0b_Token>);
inline jule::Any _2031e5d17_buildBracketRange(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Any _2031e6125_buildData(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Any _2031e64cc_buildBinop(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::I32);
inline jule::Any _2031e67da_build(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Any _2031e6ae8_buildKind(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211a8cac_Expr> _2031e6e06_buildFromTokens(_2031dc4d4_exprBuilder*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
struct _2031dc4d4_exprBuilder {
	jule::Ptr<_2031ec714_parser> _field_p;
	

	_2031dc4d4_exprBuilder(void) = default;

	inline bool operator==(_2031dc4d4_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_2031dc4d4_exprBuilder _other) { return !this->operator==(_other); }


};
struct _2031e8d1a_assignInfo {
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _field_l;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _field_r;
	jule::Ptr<_21da1aa0b_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_2031e8d1a_assignInfo(void) = default;


};
inline void _2031eca44_stop(_2031ec714_parser*);
inline jule::Bool _2031ecca8_stopped(_2031ec714_parser*);
inline void _2031ed171_pushErr(_2031ec714_parser*, jule::Ptr<_21da1aa0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2031ed490_pushSuggestion(_2031ec714_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_2211a8cac_Expr> _2031ed79d_buildExpr(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_221171307_Directive> _2031edaab_buildDirective(_2031ec714_parser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline void _2031edd31_pushDirective(_2031ec714_parser*, jule::Ptr<_221171307_Directive>);
inline jule::Ptr<_2211b4724_ScopeTree> _2031ee1d8_buildScope(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Ptr<_21da1aa0b_Token>);
inline __jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool _2031ee639__buildType(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::I32*, jule::Bool);
inline __jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool _2031eea8a_buildType(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_2211baa5a_TypeAliasDecl> _2031eed98_buildTypeAliasDecl(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _2032001b7_buildVarTypeAndExpr(jule::Ptr<_2031ec714_parser>, jule::Ptr<_2211b71e9_VarDecl>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _2032004d6_buildVarCommon(jule::Ptr<_2031ec714_parser>, jule::Ptr<_2211b71e9_VarDecl>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline void _20320089e_buildVarBegin(_2031ec714_parser*, jule::Ptr<_2211b71e9_VarDecl>*, jule::I32*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211b71e9_VarDecl> _203200bac_buildVar(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211b1a84_GenericDecl> _203200eba_buildGeneric(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>> _203201372_buildGenerics(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Ptr<_21da1aa0b_Token>*);
inline jule::Ptr<_2211b4dea_ParamDecl> _203201680_buildSelfParam(_2031ec714_parser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline void _203201a48_paramTypeBegin(_2031ec714_parser*, jule::Ptr<_2211b4dea_ParamDecl>*, jule::I32*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _203201d67_buildParamType(jule::Ptr<_2031ec714_parser>, jule::Ptr<_2211b4dea_ParamDecl>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _203202186_buildParamBody(jule::Ptr<_2031ec714_parser>, jule::Ptr<_2211b4dea_ParamDecl>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211b4dea_ParamDecl> _203202494_buildParam(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline void _203202719_checkParams(_2031ec714_parser*, jule::Slice<jule::Ptr<_2211b4dea_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_2211b4dea_ParamDecl>> _203202ac1_buildParams(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Bool);
inline __jule_tuple_x_2211a789e_RetTypeDecl__jule_tuple_bool _203202e78_buildMultiRetType(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::I32*);
inline __jule_tuple_x_2211a789e_RetTypeDecl__jule_tuple_bool _203203330_buildRetType(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::I32*);
inline jule::Ptr<_2211b621a_FnDecl> _203203781_buildFnPrototype(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_2211b621a_FnDecl> _203203bd2_buildFn(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_21da1aa0b_Token>> _203203ee0_getUseDeclSelectors(_2031ec714_parser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline void _20320430e_buildCppUseDecl(_2031ec714_parser*, jule::Ptr<_2211bbe46_UseDecl>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _20320462d_buildStdUseDecl(_2031ec714_parser*, jule::Ptr<_2211bbe46_UseDecl>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline void _20320494c_buildIdentUseDecl(_2031ec714_parser*, jule::Ptr<_2211bbe46_UseDecl>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline void _203204c6b_parseUseDecl(_2031ec714_parser*, jule::Ptr<_2211bbe46_UseDecl>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211bbe46_UseDecl> _203205123_buildUseDecl(_2031ec714_parser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>, jule::Bool);
inline jule::Ptr<_2211a478b_TypeDecl> _2032054ca_buildTypeEnumItemKind(jule::Ptr<_2031ec714_parser>, jule::I32*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Slice<jule::Ptr<_2211bd8e8_TypeEnumItemDecl>> _2032057d8_buildTypeEnumItems(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211be003_TypeEnumDecl> _203205ae6_buildTypeEnumDecl(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211a8cac_Expr> _203205e9d_buildEnumItemExpr(jule::Ptr<_2031ec714_parser>, jule::I32*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Slice<jule::Ptr<_2211bc3b9_EnumItemDecl>> _2032062ab_buildEnumItems(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211bcde2_EnumDecl> _2032065b9_buildEnumDecl(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Any _2032068c7_buildNodeEnumDecl(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211be201_FieldDecl> _203206bd5_buildField(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Slice<jule::Ptr<_2211be201_FieldDecl>> _203206ee3_buildStructDeclFields(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211be9a4_StructDecl> _203207301_buildStructDecl(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _203207576_checkMethodReceiver(_2031ec714_parser*, jule::Ptr<_2211b621a_FnDecl>*);
inline void _203207895_buildTraitBody(jule::Ptr<_2031ec714_parser>, jule::Ptr<_2211c017a_TraitDecl>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211c017a_TraitDecl> _203207ba3_buildTraitDecl(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211b621a_FnDecl> _203207eb1_buildCppLinkFn(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211b71e9_VarDecl> _2032082be_buildCppLinkVar(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211be9a4_StructDecl> _2032085cc_buildCppLinkStruct(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211baa5a_TypeAliasDecl> _2032088da_buildCppLinkTypeAlias(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Ptr<_2211bbe46_UseDecl> _203208be8_buildCppLinkUse(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Any _203209006_buildCppLink(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211b621a_FnDecl> _203209314_getMethod(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _203209633_parseImplBody(jule::Ptr<_2031ec714_parser>, jule::Ptr<_2211c0785_Impl>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211c0785_Impl> _203209941_buildImpl(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Any _203209c4e_buildNodeData(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _203209ec4_applyFnMeta(_2031ec714_parser*, jule::Ptr<_2211b621a_FnDecl>*);
inline void _20320a249_applyMeta(_2031ec714_parser*, _221170e0b_Node*);
inline void _20320a4be_pushUseDecl(jule::Ptr<_2031ec714_parser>, jule::Ptr<_2211bbe46_UseDecl>*);
inline jule::Bool _20320a7cc_pushMetaNodes(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline _221170e0b_Node _20320aada_parseNode(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _20320ad60_appendNode(jule::Ptr<_2031ec714_parser>, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _20320b2c2_removeRange(_2031ec714_parser*, jule::I32, jule::Str, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Slice<jule::I32>*);
inline void _20320b68a_pushWrongOrderCloseErr(_2031ec714_parser*, jule::Ptr<_21da1aa0b_Token>*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Slice<jule::I32>*);
inline void _20320baec_pushRangeClose(_2031ec714_parser*, jule::Ptr<_21da1aa0b_Token>, jule::Str, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Slice<jule::I32>*);
inline void _20320bd72_checkRanges(_2031ec714_parser*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline void _20320c0e7_parse(jule::Ptr<_2031ec714_parser>, jule::Ptr<_21da20d96_File>*);
struct _2031ec714_parser {
	jule::Ptr<_22117005e_Ast> _field_ast;
	jule::Slice<jule::Ptr<_221171307_Directive>> _field_directives;
	jule::Slice<_21d6755de_Log> _field_errors;
	jule::Ptr<_2031dc4d4_exprBuilder> _field_ep;
	

	_2031ec714_parser(void) = default;


};
inline void _20320da11_pushErr(_20320d439_typeBuilder*, jule::Ptr<_21da1aa0b_Token>, jule::Str);
inline void _20320dd30_pushSuggestion(_20320d439_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_2211a478b_TypeDecl> _20320e094_buildPrim(_20320d439_typeBuilder*);
inline jule::Ptr<_2211a478b_TypeDecl> _20320e308_buildNamespace(_20320d439_typeBuilder*);
inline jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _20320e56c_buildGenerics(_20320d439_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _20320e7d1_identGenerics(_20320d439_typeBuilder*);
inline jule::Ptr<_2211a478b_TypeDecl> _20320ea45_buildIdent(_20320d439_typeBuilder*);
inline jule::Ptr<_2211a478b_TypeDecl> _20320eca9_buildCppLink(_20320d439_typeBuilder*);
inline jule::Ptr<_2211a478b_TypeDecl> _20321001d_buildFn(_20320d439_typeBuilder*);
inline jule::Ptr<_2211a478b_TypeDecl> _203210282_buildPtr(_20320d439_typeBuilder*);
inline jule::Ptr<_2211a478b_TypeDecl> _2032104e6_buildSptr(_20320d439_typeBuilder*);
inline jule::Ptr<_2211a478b_TypeDecl> _20321075a_buildOp(_20320d439_typeBuilder*);
inline jule::Ptr<_2211a478b_TypeDecl> _2032109be_buildSlc(_20320d439_typeBuilder*);
inline jule::Ptr<_2211a478b_TypeDecl> _203210c33_buildArr(_20320d439_typeBuilder*);
inline jule::Ptr<_2211a478b_TypeDecl> _203210e97_buildMap(_20320d439_typeBuilder*);
inline jule::Ptr<_2211a478b_TypeDecl> _20321120b_buildEnumerable(_20320d439_typeBuilder*);
inline jule::Ptr<_2211a478b_TypeDecl> _203211470_step(_20320d439_typeBuilder*);
inline __jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool _2032116d4_build(_20320d439_typeBuilder*);
struct _20320d439_typeBuilder {
	jule::Ptr<_2031ec714_parser> _field_p;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _field_tokens;
	jule::I32* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_20320d439_typeBuilder(void) = default;


};
struct _22160b42e_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_22160b42e_CompileInfo(void) = default;

	inline bool operator==(_22160b42e_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_22160b42e_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _22160ccd2_pushErr(_22160c782_directiveEval*, jule::Ptr<_21da1aa0b_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _22160d189_splitOperans(_22160c782_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Bool _22160d497_evalDirectiveIdent(_22160c782_directiveEval*, jule::Str);
inline jule::Bool _22160d7a5_evalDirectivePart(_22160c782_directiveEval*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Bool _22160da19_eval(_22160c782_directiveEval*);
struct _22160c782_directiveEval {
	jule::Slice<_21d6755de_Log> _field_logs;
	jule::Ptr<_221171307_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_22160c782_directiveEval(void) = default;


};
inline jule::Ptr<_2032126a2_JuleImporter> static__203212ad1_New(_22160b42e_CompileInfo);
inline jule::Slice<jule::Ptr<_221242a9e_ImportInfo>> _203212d45_AllPackages(_2032126a2_JuleImporter*);
inline void _20321320d_SetModPath(_2032126a2_JuleImporter*, jule::Str);
inline jule::Str _203213472_GetModPath(_2032126a2_JuleImporter*);
inline jule::Str _203213780_ModById(_2032126a2_JuleImporter*, jule::I32);
inline jule::Ptr<_221242a9e_ImportInfo> _203213a8d_GetImport(_2032126a2_JuleImporter*, jule::Str);
inline __jule_tuple_sx_22117005e_Ast__jule_tuple_s_21d6755de_Log _203213e45_ImportPackage(_2032126a2_JuleImporter*, jule::Str, jule::Bool);
inline void _2032141ba_Imported(_2032126a2_JuleImporter*, jule::Ptr<_221242a9e_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_21d6755de_Log _20321460a_isPassBuildDirectives(_2032126a2_JuleImporter*, jule::Ptr<_22117005e_Ast>*);
struct _2032126a2_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_221242a9e_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_2032126a2_JuleImporter(void) = default;


};
struct _203217454_OrderedDefines {
	jule::Slice<jule::Ptr<_2211c48cc_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_22126b17c_Var>> _field_Globals;
	

	_203217454_OrderedDefines(void) = default;


};
inline jule::Bool _2079db905_isCommonOrdered(jule::Slice<jule::Ptr<_2211c48cc_Struct>>, jule::Ptr<_2211c48cc_Struct>);
inline jule::Bool _2079e170c_isCommonOrdered(jule::Slice<jule::Ptr<_22126b17c_Var>>, jule::Ptr<_22126b17c_Var>);
inline void _2079d81b5_orderCommon(jule::Slice<jule::Ptr<_2211c48cc_Struct>>*);
inline void _2079d8a01_orderCommon(jule::Slice<jule::Ptr<_22126b17c_Var>>*);
inline void static__20321808c_orderStructures(jule::Slice<jule::Ptr<_2211c48cc_Struct>>*);
inline void static__20321829b_orderVars(jule::Slice<jule::Ptr<_22126b17c_Var>>*);
struct _2032176b8_defineOrderer {
	

	_2032176b8_defineOrderer(void) = default;

	inline bool operator==(_2032176b8_defineOrderer _other) { return true; }

	inline bool operator!=(_2032176b8_defineOrderer _other) { return !this->operator==(_other); }


};
struct _203310096_liveTable {
	jule::Slice<jule::Ptr<_22126b17c_Var>> _field_vars;
	jule::Slice<jule::Ptr<_2211dc97d_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_2211c76e3_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_2211ebeed_Trait>> _field_traits;
	

	_203310096_liveTable(void) = default;


};
inline void _20334631e_optimizeChild(jule::Ptr<_203345d46_scopeDeadCode>, jule::Ptr<_221224135_Scope>*);
inline void _2033465b6_optimizeBodyChildExceptional(jule::Ptr<_203345d46_scopeDeadCode>, jule::Ptr<_221224135_Scope>*);
inline void _20334684c_optimizeBodyChild(jule::Ptr<_203345d46_scopeDeadCode>, jule::Ptr<_221224135_Scope>*);
inline void _203346ac2_optimizeExprModel(jule::Ptr<_203345d46_scopeDeadCode>, jule::Any*);
inline void _203346c9d_eliminateFollowed(_203345d46_scopeDeadCode*);
inline void _203347023_pushGoto(jule::Ptr<_203345d46_scopeDeadCode>, jule::Ptr<_221226b60_GotoSt>);
inline void _203347298_pushLabel(jule::Ptr<_203345d46_scopeDeadCode>, jule::Ptr<_221226874_Label>);
inline void _20334751d_optimizeRangeIter(jule::Ptr<_203345d46_scopeDeadCode>, jule::Ptr<_221225cd5_RangeIter>);
inline void _203347793_optimizeWhileIter(jule::Ptr<_203345d46_scopeDeadCode>, jule::Ptr<_221225400_WhileIter>);
inline void _203347a18_optimizeInfIter(jule::Ptr<_203345d46_scopeDeadCode>, jule::Ptr<_221224e7c_InfIter>);
inline void _203347c8d_optimizeConditional(jule::Ptr<_203345d46_scopeDeadCode>, jule::Ptr<_221224b91_Conditional>);
inline void _203348013_optimizeMatch(jule::Ptr<_203345d46_scopeDeadCode>, jule::Ptr<_221227e4c_Match>);
inline void _203348288_optimizeAssign(jule::Ptr<_203345d46_scopeDeadCode>, jule::Ptr<_22122748a_Assign>);
inline void _20334850d_optimizeMultiAssign(jule::Ptr<_203345d46_scopeDeadCode>, jule::Ptr<_221227842_MultiAssign>);
inline void _203348783_optimizeStmt(jule::Ptr<_203345d46_scopeDeadCode>, jule::Any);
inline void _20334895e_optimizeStmts(jule::Ptr<_203345d46_scopeDeadCode>);
struct _203345d46_scopeDeadCode {
	jule::Ptr<_203345d46_scopeDeadCode> _field_parent;
	jule::Ptr<_221224135_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I32 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_221226874_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_221226b60_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_203345d46_scopeDeadCode(void) = default;

	inline bool operator==(_203345d46_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_203345d46_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _203349ca1_exprDeadCode static__20334a3cd_new(jule::Ptr<_203345d46_scopeDeadCode>*);
inline void _20334a653_binary(_203349ca1_exprDeadCode*, jule::Ptr<_2211cbb59_BinopExprModel>);
inline void _20334a8c8_unary(_203349ca1_exprDeadCode*, jule::Ptr<_2211cc011_UnaryExprModel>);
inline void _20334ab4d_structureLit(_203349ca1_exprDeadCode*, jule::Ptr<_2211cc7b4_StructLitExprModel>);
inline void _20334adc3_allocStructure(_203349ca1_exprDeadCode*, jule::Ptr<_2211ccac2_AllocStructLitExprModel>);
inline void _20334b148_casting(_203349ca1_exprDeadCode*, jule::Ptr<_2211cd122_CastingExprModel>);
inline void _20334b3bd_args(_203349ca1_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _20334b643_funcCall(_203349ca1_exprDeadCode*, jule::Ptr<_2211cd9c4_FnCallExprModel>);
inline void _20334b8b8_slice(_203349ca1_exprDeadCode*, jule::Ptr<_2211cdd7b_SliceExprModel>);
inline void _20334bb3d_array(_203349ca1_exprDeadCode*, jule::Ptr<_2211d1aa4_ArrayExprModel>);
inline void _20334bdb3_indexing(_203349ca1_exprDeadCode*, jule::Ptr<_2211ce2ee_IndexingExprModel>);
inline void _20334c138_anonFunc(_203349ca1_exprDeadCode*, jule::Ptr<_2211ce6a6_AnonFnExprModel>);
inline void _20334c3ad_mapExpr(_203349ca1_exprDeadCode*, jule::Ptr<_2211ceed1_MapExprModel>);
inline void _20334c633_slicing(_203349ca1_exprDeadCode*, jule::Ptr<_2211d0520_SlicingExprModel>);
inline void _20334c8a8_traitSub(_203349ca1_exprDeadCode*, jule::Ptr<_2211d0a5e_TraitSubIdentExprModel>);
inline void _20334cb2d_structureSub(_203349ca1_exprDeadCode*, jule::Ptr<_2211d1345_StructSubIdentExprModel>);
inline void _20334cda3_commonSub(_203349ca1_exprDeadCode*, jule::Ptr<_2211d2401_CommonSubIdentExprModel>);
inline void _20334d128_tuple(_203349ca1_exprDeadCode*, jule::Ptr<_2211d26ed_TupleExprModel>);
inline void _20334d39d_newCall(_203349ca1_exprDeadCode*, jule::Ptr<_2211d36bb_BuiltinNewCallExprModel>);
inline void _20334d623_outCall(_203349ca1_exprDeadCode*, jule::Ptr<_2211d2ac7_BuiltinOutCallExprModel>);
inline void _20334d898_outlnCall(_203349ca1_exprDeadCode*, jule::Ptr<_2211d2eb2_BuiltinOutlnCallExprModel>);
inline void _20334db1d_panicCall(_203349ca1_exprDeadCode*, jule::Ptr<_2211d3aa6_BuiltinPanicCallExprModel>);
inline void _20334dd93_assertCall(_203349ca1_exprDeadCode*, jule::Ptr<_2211d405c_BuiltinAssertCallExprModel>);
inline void _20334e118_errorCall(_203349ca1_exprDeadCode*, jule::Ptr<_2211d5e3d_BuiltinErrorCallExprModel>);
inline void _20334e38d_makeCall(_203349ca1_exprDeadCode*, jule::Ptr<_2211d4513_BuiltinMakeCallExprModel>);
inline void _20334e613_appendCall(_203349ca1_exprDeadCode*, jule::Ptr<_2211d48ed_BuiltinAppendCallExprModel>);
inline void _20334e888_lenCall(_203349ca1_exprDeadCode*, jule::Ptr<_2211d4c1c_BuiltinLenCallExprModel>);
inline void _20334eb0d_capCall(_203349ca1_exprDeadCode*, jule::Ptr<_2211d503b_BuiltinCapCallExprModel>);
inline void _20334ed83_cloneCall(_203349ca1_exprDeadCode*, jule::Ptr<_2211d32d1_BuiltinCloneCallExprModel>);
inline void _203350108_deleteCall(_203349ca1_exprDeadCode*, jule::Ptr<_2211d56e0_BuiltinDeleteCallExprModel>);
inline void _20335037d_sizeof(_203349ca1_exprDeadCode*, jule::Ptr<_2211d623a_SizeofExprModel>);
inline void _203350603_alignof(_203349ca1_exprDeadCode*, jule::Ptr<_2211d6526_AlignofExprModel>);
inline void _203350878_integratedToStr(_203349ca1_exprDeadCode*, jule::Ptr<_2211d6b20_IntegratedToStrExprModel>);
inline void _203350aed_free(_203349ca1_exprDeadCode*, jule::Ptr<_2211d72c4_FreeExprModel>);
inline void _203350d73_backendEmit(_203349ca1_exprDeadCode*, jule::Ptr<_2211d6ed8_BackendEmitExprModel>);
inline void _2033510e8_optimize(_203349ca1_exprDeadCode*, jule::Any*);
struct _203349ca1_exprDeadCode {
	jule::Ptr<_203345d46_scopeDeadCode> _field_s;
	

	_203349ca1_exprDeadCode(void) = default;

	inline bool operator==(_203349ca1_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_203349ca1_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _221523775_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_21e6c53da_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	_221523775_StrCompExprModel(void) = default;

	inline bool operator==(_221523775_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_221523775_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _221523b3d_StrAppendExprModel {
	jule::Any _field_Str = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_221523b3d_StrAppendExprModel(void) = default;

	inline bool operator==(_221523b3d_StrAppendExprModel _other) {
		return 
			this->_field_Str == _other._field_Str &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_221523b3d_StrAppendExprModel _other) { return !this->operator==(_other); }


};
struct _221523e29_UnsafeBinopExprModel {
	jule::Ptr<_2211cbb59_BinopExprModel> _field_Node;
	

	_221523e29_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_221523e29_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_221523e29_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _2215242ae_UnsafeIndexingExprModel {
	jule::Ptr<_2211ce2ee_IndexingExprModel> _field_Node;
	

	_2215242ae_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_2215242ae_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_2215242ae_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _221524644_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_2211cdd7b_SliceExprModel> _field_Elems;
	

	_221524644_PushToSliceExprModel(void) = default;

	inline bool operator==(_221524644_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_221524644_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _221524b83_MutSlicingExprModel {
	jule::Ptr<_21da1aa0b_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_221524b83_MutSlicingExprModel(void) = default;

	inline bool operator==(_221524b83_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_221524b83_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _22152505c_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_22152505c_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_22152505c_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_22152505c_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_22152626c_scopeOptimizer> static__2215267cd_new(jule::Ptr<_221224135_Scope>);
inline void _221526a53_setCurrentStmt(_22152626c_scopeOptimizer*, jule::Any);
inline void _221526cc8_optimizeData(_22152626c_scopeOptimizer*, jule::Ptr<_221425c2c_Data>);
inline void _22152704d_optimizeVar(_22152626c_scopeOptimizer*, jule::Ptr<_22126b17c_Var>);
inline void _2215272c3_optimizeConditional(_22152626c_scopeOptimizer*, jule::Ptr<_221224b91_Conditional>);
inline void _2215276ad_buildDefaultConstatTrueCase(_22152626c_scopeOptimizer*, jule::Ptr<_221228997_Case>, jule::I32*, jule::Ptr<_221227e4c_Match>*);
inline void _2215278bc_optimizeMatch(_22152626c_scopeOptimizer*, jule::Ptr<_221227e4c_Match>);
inline void _221527b42_optimizeRangeIter(_22152626c_scopeOptimizer*, jule::Ptr<_221225cd5_RangeIter>);
inline void _221527db7_optimizeWhileIter(_22152626c_scopeOptimizer*, jule::Ptr<_221225400_WhileIter>);
inline jule::Bool _2215281c5_substr(_22152626c_scopeOptimizer*, jule::Ptr<_22122748a_Assign>);
inline jule::Bool _2215284d3_strInsert(_22152626c_scopeOptimizer*, jule::Ptr<_22122748a_Assign>);
inline jule::Bool _2215287e1_strAppend(_22152626c_scopeOptimizer*, jule::Ptr<_22122748a_Assign>);
inline jule::Bool _221528aee_strAssign(_22152626c_scopeOptimizer*, jule::Ptr<_22122748a_Assign>);
inline void _221528d74_optimizeAssign(_22152626c_scopeOptimizer*, jule::Ptr<_22122748a_Assign>);
inline void _2215290e9_optimizeMultiAssign(_22152626c_scopeOptimizer*, jule::Ptr<_221227842_MultiAssign>);
inline void _22152936e_optimizeRet(_22152626c_scopeOptimizer*, jule::Ptr<_2212293c1_RetSt>);
inline void _2215295e4_optimizeStmt(_22152626c_scopeOptimizer*, jule::Any);
inline void _221529869_optimizeChild(_22152626c_scopeOptimizer*, jule::Ptr<_221224135_Scope>);
inline void _221529a45_optimize(_22152626c_scopeOptimizer*);
struct _22152626c_scopeOptimizer {
	jule::I32 _field_i = 0;
	jule::Ptr<_221224135_Scope> _field_scope;
	

	_22152626c_scopeOptimizer(void) = default;

	inline bool operator==(_22152626c_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_22152626c_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__22152c196_optimize(jule::Any*);
inline jule::Bool _22152c4a4_strCond(_22152bb68_exprOptimizer*, jule::Ptr<_2211cbb59_BinopExprModel>);
inline void _22152c729_binary(_22152bb68_exprOptimizer*, jule::Ptr<_2211cbb59_BinopExprModel>);
inline void _22152c99e_unary(_22152bb68_exprOptimizer*, jule::Ptr<_2211cc011_UnaryExprModel>);
inline void _22152cc24_structureLit(_22152bb68_exprOptimizer*, jule::Ptr<_2211cc7b4_StructLitExprModel>);
inline void _22152ce99_allocStructure(_22152bb68_exprOptimizer*, jule::Ptr<_2211ccac2_AllocStructLitExprModel>);
inline void _22152d21e_casting(_22152bb68_exprOptimizer*, jule::Ptr<_2211cd122_CastingExprModel>);
inline void _22152d494_args(_22152bb68_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _22152d719_scope(_22152bb68_exprOptimizer*, jule::Ptr<_221224135_Scope>*);
inline void _22152d98e_funcCall(_22152bb68_exprOptimizer*, jule::Ptr<_2211cd9c4_FnCallExprModel>);
inline void _22152dc14_slice(_22152bb68_exprOptimizer*, jule::Ptr<_2211cdd7b_SliceExprModel>);
inline void _22152de89_array(_22152bb68_exprOptimizer*, jule::Ptr<_2211d1aa4_ArrayExprModel>);
inline void _22152e20e_indexing(_22152bb68_exprOptimizer*, jule::Ptr<_2211ce2ee_IndexingExprModel>);
inline void _22152e484_anonFunc(_22152bb68_exprOptimizer*, jule::Ptr<_2211ce6a6_AnonFnExprModel>);
inline void _22152e709_mapExpr(_22152bb68_exprOptimizer*, jule::Ptr<_2211ceed1_MapExprModel>);
inline void _22152e97e_slicing(_22152bb68_exprOptimizer*, jule::Ptr<_2211d0520_SlicingExprModel>);
inline void _22152ec04_traitSub(_22152bb68_exprOptimizer*, jule::Ptr<_2211d0a5e_TraitSubIdentExprModel>);
inline void _22152ee79_structureSub(_22152bb68_exprOptimizer*, jule::Ptr<_2211d1345_StructSubIdentExprModel>);
inline void _2215301ee_commonSub(_22152bb68_exprOptimizer*, jule::Ptr<_2211d2401_CommonSubIdentExprModel>);
inline void _221530474_tuple(_22152bb68_exprOptimizer*, jule::Ptr<_2211d26ed_TupleExprModel>);
inline void _2215306e9_newCall(_22152bb68_exprOptimizer*, jule::Ptr<_2211d36bb_BuiltinNewCallExprModel>);
inline void _22153096e_outCall(_22152bb68_exprOptimizer*, jule::Ptr<_2211d2ac7_BuiltinOutCallExprModel>);
inline void _221530be4_outlnCall(_22152bb68_exprOptimizer*, jule::Ptr<_2211d2eb2_BuiltinOutlnCallExprModel>);
inline void _221530e69_panicCall(_22152bb68_exprOptimizer*, jule::Ptr<_2211d3aa6_BuiltinPanicCallExprModel>);
inline void _2215311de_assertCall(_22152bb68_exprOptimizer*, jule::Ptr<_2211d405c_BuiltinAssertCallExprModel>);
inline void _221531464_errorCall(_22152bb68_exprOptimizer*, jule::Ptr<_2211d5e3d_BuiltinErrorCallExprModel>);
inline void _2215316d9_makeCall(_22152bb68_exprOptimizer*, jule::Ptr<_2211d4513_BuiltinMakeCallExprModel>);
inline void _22153195e_appendCall(_22152bb68_exprOptimizer*, jule::Ptr<_2211d48ed_BuiltinAppendCallExprModel>);
inline void _221531bd4_lenCall(_22152bb68_exprOptimizer*, jule::Ptr<_2211d4c1c_BuiltinLenCallExprModel>);
inline void _221531e59_capCall(_22152bb68_exprOptimizer*, jule::Ptr<_2211d503b_BuiltinCapCallExprModel>);
inline void _2215321ce_cloneCall(_22152bb68_exprOptimizer*, jule::Ptr<_2211d32d1_BuiltinCloneCallExprModel>);
inline void _221532454_deleteCall(_22152bb68_exprOptimizer*, jule::Ptr<_2211d56e0_BuiltinDeleteCallExprModel>);
inline void _2215326c9_sizeof(_22152bb68_exprOptimizer*, jule::Ptr<_2211d623a_SizeofExprModel>);
inline void _22153294e_alignof(_22152bb68_exprOptimizer*, jule::Ptr<_2211d6526_AlignofExprModel>);
inline void _221532bc4_integratedToStr(_22152bb68_exprOptimizer*, jule::Ptr<_2211d6b20_IntegratedToStrExprModel>);
inline void _221532e49_free(_22152bb68_exprOptimizer*, jule::Ptr<_2211d72c4_FreeExprModel>);
inline void _2215331be_backendEmit(_22152bb68_exprOptimizer*, jule::Ptr<_2211d6ed8_BackendEmitExprModel>);
inline void _22153339a_do(_22152bb68_exprOptimizer*);
struct _22152bb68_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_22152bb68_exprOptimizer(void) = default;

	inline bool operator==(_22152bb68_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_22152bb68_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203351a66_Optimizer> static__20335201c_New(jule::Ptr<_203214e13_IR>*);
inline void _203352292_optimizeGlobal(_203351a66_Optimizer*, jule::Ptr<_22126b17c_Var>*);
inline void _203352517_optimizeFunction(_203351a66_Optimizer*, jule::Ptr<_2211d9ccc_Fn>*);
inline void _20335278c_optimizeStruct(_203351a66_Optimizer*, jule::Ptr<_2211c48cc_Struct>*);
inline void _203352a12_optimizeGlobals(_203351a66_Optimizer*, jule::Ptr<_2212456d9_Package>*);
inline void _203352c87_optimizeFunctions(_203351a66_Optimizer*, jule::Ptr<_2212456d9_Package>*);
inline void _20335300c_optimizeStructs(_203351a66_Optimizer*, jule::Ptr<_2212456d9_Package>*);
inline void _203353282_optimizePackage(_203351a66_Optimizer*, jule::Ptr<_2212456d9_Package>*);
inline void _20335345d_Optimize(_203351a66_Optimizer*);
struct _203351a66_Optimizer {
	jule::Ptr<_203214e13_IR> _field_ir;
	

	_203351a66_Optimizer(void) = default;

	inline bool operator==(_203351a66_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_203351a66_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__203353cbb_Reset(void);
inline void static__203372e50_Print(jule::Str, jule::Str);
struct _203373ed9_AnsiEscape {
	

	_203373ed9_AnsiEscape(void) = default;

	inline bool operator==(_203373ed9_AnsiEscape _other) { return true; }

	inline bool operator!=(_203373ed9_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__203375804_LogFlat(_21d6755de_Log*);
inline void static__203375a13_LogError(_21d6755de_Log*);
inline void static__203375c22_Log(_21d6755de_Log*);
inline void static__203375e31_PrintLogs(jule::Slice<_21d6755de_Log>*);
struct _20337556d_Logger {
	

	_20337556d_Logger(void) = default;

	inline bool operator==(_20337556d_Logger _other) { return true; }

	inline bool operator!=(_20337556d_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _203bcad90_Unix(_203bca9d8_AbsTime*);
struct _203bca9d8_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_203bca9d8_AbsTime(void) = default;

	inline bool operator==(_203bca9d8_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_203bca9d8_AbsTime _other) { return !this->operator==(_other); }


};
inline _203bcb17b_Time static__203bcb522_Unix(jule::U64);
inline _203bcb17b_Time static__203bcb720_Now(void);
inline jule::U64 _203bcbb71_Unix(_203bcb17b_Time*);
inline jule::U64 _203bcbdd5_Day(_203bcb17b_Time*);
inline jule::U64 _203bcc149_Month(_203bcb17b_Time*);
inline jule::U64 _203bcc3ad_Year(_203bcb17b_Time*);
inline jule::U64 _203bcc622_Second(_203bcb17b_Time*);
inline jule::U64 _203bcc886_Minute(_203bcb17b_Time*);
inline jule::U64 _203bccaea_Hour(_203bcb17b_Time*);
inline _203bca9d8_AbsTime _203bccd5e_Abs(_203bcb17b_Time*);
struct _203bcb17b_Time {
	jule::U64 _field_sec = 0;
	

	_203bcb17b_Time(void) = default;

	inline bool operator==(_203bcb17b_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_203bcb17b_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203a59adc_scopeCoder> static__203a5a22a_new(jule::Ptr<_203bd520c_ObjectCoder>*);
inline void _207c7e58d_iterHead(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221225cd5_RangeIter>*, jule::Bool*, jule::Str*);
inline void _203a5a868_rangeIndexIter(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221225cd5_RangeIter>*);
inline void _203a5aadd_rangeHashmapIter(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221225cd5_RangeIter>*);
inline void _203a5ad63_ifCase(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221224531_If>);
inline void _203a5b0d8_conditional(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221224b91_Conditional>);
inline void _203a5b35d_infIter(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221224e7c_InfIter>);
inline void _203a5b5d3_whileIter(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221225400_WhileIter>);
inline void _203a5b858_rangeIter(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221225cd5_RangeIter>);
inline void _203a5bacd_cont(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_2212261d1_ContSt>);
inline void _203a5bd53_label(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221226874_Label>);
inline void _203a5c0c8_gotoSt(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221226b60_GotoSt>);
inline void _203a5c34d_postfix(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221227017_Postfix>);
inline void _203a5c5c3_assign(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_22122748a_Assign>);
inline void _203a5c848_mapLookupAssign(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221227842_MultiAssign>*);
inline void _203a5cabd_multiAssignTup(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221227842_MultiAssign>*);
inline void _203a5cd43_multiAssignFn(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221227842_MultiAssign>*);
inline void _203a5d0b8_multiAssign(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221227842_MultiAssign>);
inline jule::Fn<void(void)> _203a5d3c6_matchExpr(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221227e4c_Match>);
inline void _203a5d6e5_case(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221227e4c_Match>, jule::Ptr<_221228997_Case>);
inline void _203a5d96a_matchSt(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221227e4c_Match>);
inline void _203a5dbe0_fallSt(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_22122904c_FallSt>);
inline void _203a5de65_breakSt(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221226588_BreakSt>);
inline void _203a5e1da_setResult(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_2212293c1_RetSt>);
inline void _203a5e460_retSt(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_2212293c1_RetSt>);
inline void _203a5e6d5_var(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_22126b17c_Var>);
inline void _203a5e95a_strAppend(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221523b3d_StrAppendExprModel>);
inline void _203a5ebd0_st(jule::Ptr<_203a59adc_scopeCoder>, jule::Any);
inline void _203a5ee55_scopeStmts(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221224135_Scope>*);
inline void _203a601ca_scope(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_221224135_Scope>);
inline void _203a60450_funcScope(jule::Ptr<_203a59adc_scopeCoder>, jule::Ptr<_2211dc97d_FnIns>);
struct _203a59adc_scopeCoder {
	jule::Ptr<_203bd520c_ObjectCoder> _field_oc;
	

	_203a59adc_scopeCoder(void) = default;

	inline bool operator==(_203a59adc_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_203a59adc_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203b2d6c7_exprCoder> static__203b2dac3_new(jule::Ptr<_203bd520c_ObjectCoder>*);
inline void _203b2dd48_string(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_21e6c53da_Const>*);
inline void _203b2e0bd_boolean(jule::Ptr<_203b2d6c7_exprCoder>, jule::Bool);
inline void _203b2e299_nilLit(jule::Ptr<_203b2d6c7_exprCoder>);
inline jule::Bool _203b2e5a7_ftoaSpecialCases(jule::Ptr<_203b2d6c7_exprCoder>, jule::F64*);
inline void _203b2e82c_float32(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_21e6c53da_Const>*);
inline void _203b2eaa2_float64(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_21e6c53da_Const>*);
inline void _203b2ed27_constant(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_21e6c53da_Const>);
inline void _203b301e0_divByZeroBinary(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_21da1aa0b_Token>*, jule::Ptr<_2211cb692_OperandExprModel>*, jule::Ptr<_2211cb692_OperandExprModel>*);
inline void _203b30465_unsafeBinary(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211cbb59_BinopExprModel>);
inline void _203b306da_binary(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211cbb59_BinopExprModel>);
inline void _203b30960_var(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_22126b17c_Var>);
inline void _203b30bd5_structureIns(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211c76e3_StructIns>);
inline void _203b30e5a_unary(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211cc011_UnaryExprModel>);
inline void _203b311d0_structureLit(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211cc7b4_StructLitExprModel>);
inline void _203b31455_allocStructure(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211ccac2_AllocStructLitExprModel>);
inline void _203b316ca_possibleRefExpr(jule::Ptr<_203b2d6c7_exprCoder>, jule::Any);
inline void _203b31a93_castTraitFromTrait(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211cd122_CastingExprModel>*, jule::Ptr<_2211ebeed_Trait>, jule::Ptr<_2211ebeed_Trait>);
inline void _203b31d18_casting(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211cd122_CastingExprModel>);
inline void _203b3208d_models(jule::Ptr<_203b2d6c7_exprCoder>, jule::Slice<jule::Any>);
inline void _203b32313_args(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211cd9c4_FnCallExprModel>*);
inline void _203b32588_modelForCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Any);
inline void _203b3280d_pushCallInf(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211cd9c4_FnCallExprModel>*);
inline jule::Bool _203b32b1b_isWrapped(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211cd9c4_FnCallExprModel>*);
inline void _203b32d91_pureFuncCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211cd9c4_FnCallExprModel>*);
inline void _203b33116_coFuncCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211cd9c4_FnCallExprModel>*);
inline void _203b33435_writeUseExpr(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211dc97d_FnIns>*, jule::Ptr<_221425c2c_Data>);
inline void _203b336aa_funcCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211cd9c4_FnCallExprModel>);
inline void _203b33930_slice(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211cdd7b_SliceExprModel>);
inline void _203b33ba5_indexing(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211ce2ee_IndexingExprModel>);
inline void _203b33e2a_unsafeIndexing(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2215242ae_UnsafeIndexingExprModel>);
inline void _203b341a0_anonFunc(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211ce6a6_AnonFnExprModel>);
inline void _203b34425_mapExpr(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211ceed1_MapExprModel>);
inline void _203b3469a_slicing(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d0520_SlicingExprModel>);
inline void _203b34920_traitSub(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d0a5e_TraitSubIdentExprModel>);
inline void _203b34b95_structureSub(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d1345_StructSubIdentExprModel>);
inline void _203b34e1a_commonIdent(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d1d90_CommonIdentExprModel>);
inline void _203b35190_commonSub(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d2401_CommonSubIdentExprModel>);
inline void _203b35415_array(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d1aa4_ArrayExprModel>);
inline void _203b3568a_funcInsCommon(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211dc97d_FnIns>);
inline void _203b35910_funcIns(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211dc97d_FnIns>);
inline void _203b35b85_tuple(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d26ed_TupleExprModel>);
inline void _203b35e0a_newCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d36bb_BuiltinNewCallExprModel>);
inline void _203b36180_outCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d2ac7_BuiltinOutCallExprModel>);
inline void _203b36405_outlnCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d2eb2_BuiltinOutlnCallExprModel>);
inline void _203b3667a_panicCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d3aa6_BuiltinPanicCallExprModel>);
inline void _203b36900_assertCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d405c_BuiltinAssertCallExprModel>);
inline void _203b36b75_errorCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d5e3d_BuiltinErrorCallExprModel>);
inline void _203b36dea_copyCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d5a53_BuiltinCopyCallExprModel>);
inline void _203b37170_lenCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d4c1c_BuiltinLenCallExprModel>);
inline void _203b373e5_capCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d503b_BuiltinCapCallExprModel>);
inline void _203b3766a_deleteCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d56e0_BuiltinDeleteCallExprModel>);
inline void _203b378e0_makeCallSlice(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d4513_BuiltinMakeCallExprModel>*);
inline void _203b37b65_makeCallStr(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d4513_BuiltinMakeCallExprModel>*);
inline void _203b37dda_makeCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d4513_BuiltinMakeCallExprModel>);
inline void _203b38160_pushToSlice(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_221524644_PushToSliceExprModel>);
inline void _203b383d5_appendCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d48ed_BuiltinAppendCallExprModel>);
inline void _203b3865a_cloneCall(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d32d1_BuiltinCloneCallExprModel>);
inline void _203b388d0_sizeof(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d623a_SizeofExprModel>);
inline void _203b38b55_alignof(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d6526_AlignofExprModel>);
inline jule::Str _203b38e63_runeLit(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d6812_RuneExprModel>);
inline void _203b391d8_structureStatic(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d16db_StructStaticIdentExprModel>);
inline void _203b3945d_integratedToStr(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d6b20_IntegratedToStrExprModel>);
inline void _203b396d3_backendEmit(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d6ed8_BackendEmitExprModel>);
inline void _203b39958_free(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_2211d72c4_FreeExprModel>);
inline void _203b39bcd_mutSlicing(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_221524b83_MutSlicingExprModel>);
inline void _203b39e53_strInsertBegin(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_22152505c_StrInsertBeginExprModel>);
inline void _203b3a1c8_strComp(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_221523775_StrCompExprModel>);
inline void _203b3a44d_model(jule::Ptr<_203b2d6c7_exprCoder>, jule::Any);
inline void _203b3a6c3_initExpr(jule::Ptr<_203b2d6c7_exprCoder>, jule::Ptr<_221453397_TypeKind>);
struct _203b2d6c7_exprCoder {
	jule::Ptr<_203bd520c_ObjectCoder> _field_oc;
	

	_203b2d6c7_exprCoder(void) = default;

	inline bool operator==(_203b2d6c7_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_203b2d6c7_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203b3d011_deriveCoder> static__203b3d3eb_new(jule::Ptr<_203bd520c_ObjectCoder>);
inline jule::Str _203b3d709_cloneFuncDecl(_203b3d011_deriveCoder*, jule::Ptr<_2211c48cc_Struct>*);
inline jule::Str _203b3da17_cloneFuncDef(_203b3d011_deriveCoder*, jule::Ptr<_2211c48cc_Struct>*);
struct _203b3d011_deriveCoder {
	jule::Ptr<_203bd520c_ObjectCoder> _field_oc;
	

	_203b3d011_deriveCoder(void) = default;

	inline bool operator==(_203b3d011_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_203b3d011_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203b3e93b_TestCoder> static__203b3edae_New(jule::Ptr<_203bd520c_ObjectCoder>*);
inline jule::Ptr<_221242a9e_ImportInfo> _203b40123_findTestingPackage(jule::Ptr<_203b3e93b_TestCoder>);
inline void _203b40398_appendTest(jule::Ptr<_203b3e93b_TestCoder>, jule::Ptr<_2211dc97d_FnIns>);
inline void _203b4061d_appendPackageTests(jule::Ptr<_203b3e93b_TestCoder>, jule::Ptr<_2212456d9_Package>*);
inline jule::Bool _203b40882_readyTestingPackage(jule::Ptr<_203b3e93b_TestCoder>);
inline void _203b40a5d_callTmReset(jule::Ptr<_203b3e93b_TestCoder>);
inline void _203b40c39_callTmFailed(jule::Ptr<_203b3e93b_TestCoder>);
inline void _203b40e15_callTmSkipped(jule::Ptr<_203b3e93b_TestCoder>);
inline void _203b410e1_Serialize(jule::Ptr<_203b3e93b_TestCoder>);
struct _203b3e93b_TestCoder {
	jule::Ptr<_2211c76e3_StructIns> _field_t;
	jule::Ptr<_2211d9ccc_Fn> _field_tmReset;
	jule::Ptr<_2211d9ccc_Fn> _field_tmFailed;
	jule::Ptr<_2211d9ccc_Fn> _field_tmSkipped;
	jule::Ptr<_203bd520c_ObjectCoder> _field_oc;
	

	_203b3e93b_TestCoder(void) = default;

	inline bool operator==(_203b3e93b_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_203b3e93b_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__203b42554_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__203b4293e_toLocal(jule::I32, jule::I32, jule::Str*);
inline jule::Str static__203b42bd6_func(jule::Ptr<_2211d9ccc_Fn>*);
inline jule::Str static__203b42e7d_funcIns(jule::Ptr<_2211dc97d_FnIns>*);
inline jule::Str static__203b43225_traitDecl(jule::Ptr<_2211ebeed_Trait>);
inline jule::Str static__203b434bc_param(jule::Ptr<_2211d8490_Param>*);
inline jule::Str static__203b43764_structure(jule::Ptr<_2211c48cc_Struct>*);
inline jule::Str static__203b43a0b_structureIns(jule::Ptr<_2211c76e3_StructIns>*);
inline jule::Str static__203b43ca3_field(jule::Ptr<_2211c1d08_Field>*);
inline jule::Str static__203b4404a_var(jule::Ptr<_22126b17c_Var>);
inline jule::Str static__203b442e2_iterBegin(jule::Uintptr);
inline jule::Str static__203b44589_iterEnd(jule::Uintptr);
inline jule::Str static__203b44831_iterNext(jule::Uintptr);
inline jule::Str static__203b44ac8_label(jule::Str*);
inline jule::Str static__203b44d70_matchEnd(jule::Uintptr);
inline jule::Str static__203b45117_caseBegin(jule::Uintptr);
struct _203b41e7c_identCoder {
	

	_203b41e7c_identCoder(void) = default;

	inline bool operator==(_203b41e7c_identCoder _other) { return true; }

	inline bool operator!=(_203b41e7c_identCoder _other) { return !this->operator==(_other); }


};
struct _203bd386a_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_203bd386a_SerializationInfo(void) = default;

	inline bool operator==(_203bd386a_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_203bd386a_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _203bd3d32_traitHash {
	jule::Ptr<_2211ebeed_Trait> _field_t;
	jule::Ptr<_2211c76e3_StructIns> _field_s;
	jule::I32 _field_i = 0;
	

	_203bd3d32_traitHash(void) = default;

	inline bool operator==(_203bd3d32_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_203bd3d32_traitHash _other) { return !this->operator==(_other); }


};
struct _203bd41d9_traitCast {
	jule::Ptr<_2211ebeed_Trait> _field_t1;
	jule::Ptr<_2211ebeed_Trait> _field_t2;
	

	_203bd41d9_traitCast(void) = default;

	inline bool operator==(_203bd41d9_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_203bd41d9_traitCast _other) { return !this->operator==(_other); }


};
inline jule::Str _203be32e7_Str(_203be303e_customType*);
inline jule::Bool _203be3605_Equal(jule::Ptr<_203be303e_customType>, jule::Ptr<_221453397_TypeKind>);
struct _203be303e_customType {
	jule::Str _field_kind;
	

	_203be303e_customType(void) = default;

	inline bool operator==(_203be303e_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_203be303e_customType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203be39ac_typeCoder> static__203be3eeb_new(jule::Ptr<_203bd520c_ObjectCoder>*);
inline jule::Str _203be4309_toType(_203be39ac_typeCoder*, jule::Str);
inline jule::Str _203be4617_prim(_203be39ac_typeCoder*, jule::Ptr<_22145a5be_Prim>);
inline jule::Str _203be4925_tuple(_203be39ac_typeCoder*, jule::Ptr<_22146033d_Tuple>);
inline jule::Str _203be4c33_asSptr(_203be39ac_typeCoder*, jule::Str);
inline jule::Str _203be5041_asPtr(_203be39ac_typeCoder*, jule::Str);
inline jule::Str _203be534e_sptr(_203be39ac_typeCoder*, jule::Ptr<_22145dd53_Sptr>);
inline jule::Str _203be565c_ptr(_203be39ac_typeCoder*, jule::Ptr<_2214623b7_Ptr>);
inline jule::Str _203be596a_enumDecl(_203be39ac_typeCoder*, jule::Ptr<_2211ee781_Enum>);
inline jule::Str _203be5c78_typeEnumDecl(_203be39ac_typeCoder*, jule::Ptr<_221200d7b_TypeEnum>);
inline jule::Str _203be6086_asSlice(_203be39ac_typeCoder*, jule::Ptr<_221453397_TypeKind>);
inline jule::Str _203be6394_slice(_203be39ac_typeCoder*, jule::Ptr<_22145e7b0_Slc>);
inline jule::Str _203be66a2_mapType(_203be39ac_typeCoder*, jule::Ptr<_221460d66_Map>);
inline jule::Str _203be69b0_traitIdent(_203be39ac_typeCoder*, jule::Str);
inline jule::Str _203be6cbd_traitDecl(_203be39ac_typeCoder*, jule::Ptr<_2211ebeed_Trait>);
inline jule::Str _203be70cb_structure(_203be39ac_typeCoder*, jule::Ptr<_2211c48cc_Struct>);
inline jule::Str _203be73d9_structureIns(_203be39ac_typeCoder*, jule::Ptr<_2211c76e3_StructIns>);
inline jule::Str _203be76e7_array(_203be39ac_typeCoder*, jule::Ptr<_22146195a_Arr>);
inline jule::Str _203be7d13_paramIns(_203be39ac_typeCoder*, jule::Ptr<_2211dbaae_ParamIns>*);
inline void _203be8440_funcInsResult(_203be39ac_typeCoder*, jule::Str*, jule::Ptr<_2211dc97d_FnIns>*);
inline jule::Str _203be874d_anonFunc(_203be39ac_typeCoder*, jule::Ptr<_2211dc97d_FnIns>);
inline jule::Str _203be8a5b_func(_203be39ac_typeCoder*, jule::Ptr<_2211dc97d_FnIns>);
inline jule::Str _203be8d69_kind(_203be39ac_typeCoder*, jule::Ptr<_221453397_TypeKind>);
struct _203be39ac_typeCoder {
	jule::Ptr<_203bd520c_ObjectCoder> _field_oc;
	jule::Ptr<_203beb575_resultCoder> _field_rc;
	

	_203be39ac_typeCoder(void) = default;

	inline bool operator==(_203be39ac_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_203be39ac_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203beb575_resultCoder> static__203beba81_new(jule::Ptr<_203be39ac_typeCoder>*);
inline void _203bebda0_ptr(_203beb575_resultCoder*, jule::Str*, jule::Ptr<_2214623b7_Ptr>);
inline void _203bec1be_sptr(_203beb575_resultCoder*, jule::Str*, jule::Ptr<_22145dd53_Sptr>);
inline void _203bec4dd_mapType(_203beb575_resultCoder*, jule::Str*, jule::Ptr<_221460d66_Map>);
inline void _203bec80c_slice(_203beb575_resultCoder*, jule::Str*, jule::Ptr<_22145e7b0_Slc>);
inline void _203becb2b_arr(_203beb575_resultCoder*, jule::Str*, jule::Ptr<_22146195a_Arr>);
inline void _203bece4a_func(_203beb575_resultCoder*, jule::Str*, jule::Ptr<_2211dc97d_FnIns>);
inline void _203bed269_tup(_203beb575_resultCoder*, jule::Str*, jule::Ptr<_22146033d_Tuple>);
inline void _203bed588_codeMut(_203beb575_resultCoder*, jule::Str*, jule::Ptr<_221453397_TypeKind>*);
inline void _203bed8a7_codeMut1(_203beb575_resultCoder*, jule::Str*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Str _203bedb82_code(_203beb575_resultCoder*, jule::Ptr<_221453397_TypeKind>*);
struct _203beb575_resultCoder {
	jule::Ptr<_203be39ac_typeCoder> _field_tc;
	

	_203beb575_resultCoder(void) = default;

	inline bool operator==(_203beb575_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_203beb575_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _2080e5bbd_Name(_2080e576c_Flag*);
inline jule::Str _2080e5d00_What(_2080e576c_Flag*);
inline void _2080e5e32_Reset(_2080e576c_Flag*);
inline jule::I32 _2080e6075_Short(_2080e576c_Flag*);
struct _2080e576c_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_2080e576c_Flag(void) = default;

	inline bool operator==(_2080e576c_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_2080e576c_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _2080e90cd_Name(_2080e9540_Flag*);
inline jule::Str _2080e982b_What(_2080e9540_Flag*);
inline void _2080e995d_Reset(_2080e9540_Flag*);
inline jule::I32 _2080e9a90_Short(_2080e9540_Flag*);
struct _2080e9540_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_2080e9540_Flag(void) = default;

	inline bool operator==(_2080e9540_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_2080e9540_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _2080ec895_Name(_2080ecd07_Flag*);
inline jule::Str _2080ed0e3_What(_2080ecd07_Flag*);
inline void _2080ed225_Reset(_2080ecd07_Flag*);
inline jule::I32 _2080ed357_Short(_2080ecd07_Flag*);
struct _2080ecd07_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_2080ecd07_Flag(void) = default;

	inline bool operator==(_2080ecd07_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_2080ecd07_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _2081011a1_Name(_208101613_Flag*);
inline jule::Str _2081018ee_What(_208101613_Flag*);
inline void _208101a31_Reset(_208101613_Flag*);
inline jule::I32 _208101b63_Short(_208101613_Flag*);
struct _208101613_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_208101613_Flag(void) = default;

	inline bool operator==(_208101613_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_208101613_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _208104968_Name(_208104dca_Flag*);
inline jule::Str _2081051b6_What(_208104dca_Flag*);
inline void _2081052e8_Reset(_208104dca_Flag*);
inline jule::I32 _20810542a_Short(_208104dca_Flag*);
struct _208104dca_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_208104dca_Flag(void) = default;

	inline bool operator==(_208104dca_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_208104dca_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203c57c74_FlagSet> static__203c58060_New(void);
inline jule::Trait<_203c56316_CommonFlag> _203c584e4_FindFlag(_203c57c74_FlagSet*, jule::Str);
inline jule::Trait<_203c56316_CommonFlag> _203c58802_FindFlagShort(_203c57c74_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_203c56316_CommonFlag>> _203c58a66_Flags(_203c57c74_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _203c58d74_Parse(_203c57c74_FlagSet*, jule::Slice<jule::Str>);
inline void _203c59050_Reset(_203c57c74_FlagSet*);
inline jule::Ptr<_208104dca_Flag> _208178b52_addFlagCommon(_203c57c74_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_208101613_Flag> _208182166_addFlagCommon(_203c57c74_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _208176ad9_AddVar(_203c57c74_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _20818010e_AddVar(_203c57c74_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _203c57c74_FlagSet {
	jule::Slice<jule::Trait<_203c56316_CommonFlag>> _field_flags;
	

	_203c57c74_FlagSet(void) = default;


};
inline __jule_tuple_i64__jule_tuple_bool _20811ccc2_parseInteger(_203c5a44c_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>);
inline __jule_tuple_u64__jule_tuple_bool _208125cec_parseInteger(_203c5a44c_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>);
inline jule::Str _203c5ac44_getData(_203c5a44c_argParser*);
inline jule::VoidExceptional _203c5ae86_processFlag(_203c5a44c_argParser*, jule::Trait<_203c56316_CommonFlag>*);
inline jule::VoidExceptional _203c5b20b_singleDash(_203c5a44c_argParser*, jule::Str*);
inline jule::VoidExceptional _203c5b481_doubleDash(_203c5a44c_argParser*, jule::Str*);
inline jule::VoidExceptional _203c5b65c_tryArg(_203c5a44c_argParser*);
inline jule::VoidExceptional _203c5b838_parse(_203c5a44c_argParser*);
struct _203c5a44c_argParser {
	_203c57c74_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i = 0;
	

	_203c5a44c_argParser(void) = default;


};
inline jule::Ptr<_203bd520c_ObjectCoder> static__203bd562a_New(jule::Ptr<_203214e13_IR>*, _203bd386a_SerializationInfo);
inline void _203bd58a0_write(jule::Ptr<_203bd520c_ObjectCoder>, jule::Str);
inline void _203bd5a7b_addIndent(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bd5c57_doneIndent(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bd5e33_indent(jule::Ptr<_203bd520c_ObjectCoder>);
inline jule::I32 _203bd6241_findAnyType(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_221453397_TypeKind>*);
inline jule::I32 _203bd654e_pushAnyType(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_221453397_TypeKind>);
inline void _203bd67c4_pushResultIns(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211dc97d_FnIns>*);
inline void _203bd6a49_pushResult(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211d9ccc_Fn>*);
inline jule::I32 _203bd6e01_findTypeOffsetS(_203bd520c_ObjectCoder*, jule::Ptr<_2211ebeed_Trait>, jule::Ptr<_2211c76e3_StructIns>);
inline jule::I32 _203bd72a8_findTypeOffset(_203bd520c_ObjectCoder*, jule::Ptr<_2211ebeed_Trait>, jule::Ptr<_221453397_TypeKind>);
inline void _203bd75c7_pushAndWriteMaskMapper(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211ebeed_Trait>, jule::Ptr<_2211ebeed_Trait>);
inline void _203bd784c_locInfo(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_21da1aa0b_Token>*);
inline void _203bd7a28_head(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bd7c04_links(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bd7e79_prepareStructure(_203bd520c_ObjectCoder*, jule::Ptr<_2211c48cc_Struct>*);
inline void _203bd8155_prepareStructures(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bd83ca_iterPackages(jule::Ptr<_203bd520c_ObjectCoder>, jule::Fn<void(jule::Ptr<_2212456d9_Package>*)>);
inline void _203bd85a6_buildTraitMap(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bd8782_traitDecls(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bd8a07_structurePlainDecl(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211c48cc_Struct>*);
inline void _203bd8bd3_structurePlainDecls(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bd8e58_fieldDecl(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211c6bed_FieldIns>*);
inline void _203bd91cd_structureDestructor(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211c76e3_StructIns>*);
inline void _203bd9475_structureDeriveDefsDecls(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211c76e3_StructIns>*);
inline void _203bd97a5_structureOperatorEq(jule::Ptr<_203bd520c_ObjectCoder>, jule::Str*, jule::Ptr<_2211c76e3_StructIns>*);
inline void _203bd9ac4_structureOperatorNotEq(jule::Ptr<_203bd520c_ObjectCoder>, jule::Str*, jule::Ptr<_2211c76e3_StructIns>*);
inline void _203bd9e8c_structureOperator(jule::Ptr<_203bd520c_ObjectCoder>, jule::Str*, jule::Ptr<_2211dc97d_FnIns>*, jule::Str);
inline void _203bda212_structureOperators(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211c76e3_StructIns>*);
inline void _203bda487_structureInsDecl(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211c76e3_StructIns>*);
inline void _203bda70c_structureDecl(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211c48cc_Struct>*);
inline void _203bda8d8_structureDecls(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bdab5d_paramsDecls(jule::Ptr<_203bd520c_ObjectCoder>, jule::Slice<jule::Ptr<_2211dbaae_ParamIns>>*);
inline void _203bdae7c_funcHead(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211dc97d_FnIns>*, jule::Bool);
inline void _203bdb29b_funcDeclIns(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211dc97d_FnIns>*, jule::Bool);
inline void _203bdb5ba_funcDecl(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211d9ccc_Fn>*, jule::Bool);
inline void _203bdb983_funcDeclTrait(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211ebeed_Trait>*, jule::Ptr<_2211d9ccc_Fn>*, jule::Bool);
inline void _203bdbb5e_funcDecls(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bdbe7d_traitDataTypeMethods(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211ebeed_Trait>*, jule::Ptr<_2211ebeed_Trait>*);
inline void _203bdc159_traitDataTypes(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bdc3ce_paramIns(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211dbaae_ParamIns>*);
inline void _203bdc654_paramsIns(jule::Ptr<_203bd520c_ObjectCoder>, jule::Slice<jule::Ptr<_2211dbaae_ParamIns>>*);
inline void _203bdc973_varInitExpr(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_22126b17c_Var>*, jule::Fn<void(void)>);
inline void _203bdcbe8_var(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_22126b17c_Var>);
inline void _203bdce6d_funcIns(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211dc97d_FnIns>*);
inline void _203bdd1e3_func(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211d9ccc_Fn>*);
inline void _203bdd512_funcTrait(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_203bd3d32_traitHash>*, jule::Ptr<_2211d9ccc_Fn>*);
inline void _203bdd831_traitWrapper(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211d9ccc_Fn>*, jule::Ptr<_203bd3d32_traitHash>*);
inline void _203bdda0c_traitWrappers(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bddd2b_traitDataMethods(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211ebeed_Trait>*, jule::Ptr<_203bd3d32_traitHash>*);
inline void _203bde14a_traitData(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_203bd3d32_traitHash>*, jule::Ptr<_2211ebeed_Trait>*);
inline void _203bde326_traitDatas(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bde502_globals(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bde6cd_decls(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203bde953_structureMethods(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211c76e3_StructIns>*);
inline void _203bdebc8_structureDeriveDefs(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211c76e3_StructIns>*);
inline void _203bdee4d_structureOstream(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211c76e3_StructIns>*);
inline void _203be01c3_structureIns(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211c76e3_StructIns>*);
inline void _203be0448_structure(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2211c48cc_Struct>*);
inline void _203be0624_structures(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203be0800_funcs(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203be0a75_pushInit(jule::Ptr<_203bd520c_ObjectCoder>, jule::Ptr<_2212456d9_Package>*);
inline void _203be0c51_initCaller(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203be0e2c_end(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203be1108_serializeHead(jule::Ptr<_203bd520c_ObjectCoder>);
inline void _203be12d4_Serialize(jule::Ptr<_203bd520c_ObjectCoder>);
struct _203bd520c_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_203214e13_IR> _field_ir;
	_203bd386a_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_203bd3d32_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_221453397_TypeKind>> _field_anyTypeMap;
	jule::Slice<_203bd41d9_traitCast> _field_traitCastMap;
	jule::Ptr<_203b2d6c7_exprCoder> _field_ec;
	jule::Ptr<_203a59adc_scopeCoder> _field_sc;
	jule::Ptr<_203be39ac_typeCoder> _field_tc;
	jule::Ptr<_203b3d011_deriveCoder> _field_dc;
	jule::I32 _field_headPos = 0;
	jule::I32 _field_declPos = 0;
	

	_203bd520c_ObjectCoder(void) = default;


};
inline jule::Ptr<_20331045e_ObjectDeadCode> static__203310937_new(jule::Ptr<_203214e13_IR>*);
inline jule::Bool _207a1835a_isLive(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Ptr<_2211ebeed_Trait>*);
inline jule::Bool _207a1d1b7_isLive(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Ptr<_2211dc97d_FnIns>*);
inline jule::Bool _207a251be_isLive(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Ptr<_2211c76e3_StructIns>*);
inline jule::Bool _207a2b1b4_isLive(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Ptr<_22126b17c_Var>*);
inline void _207a186ac_pushLive(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Ptr<_2211ebeed_Trait>);
inline void _207a1dae1_pushLive(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Ptr<_2211dc97d_FnIns>);
inline void _207a24c4b_pushLive(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Ptr<_2211c76e3_StructIns>);
inline void _207a2b516_pushLive(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Ptr<_22126b17c_Var>);
inline void _203342ae0_setReferencesAsLive(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Ptr<_2211e08d7_ReferenceStack>*);
inline void _203342d65_inits(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Ptr<_2212456d9_Package>*);
inline void _2033430da_collectLivePackage(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Ptr<_2212456d9_Package>*);
inline void _2033432b6_collectLive(jule::Ptr<_20331045e_ObjectDeadCode>);
inline void _20334353b_removeDeadGlobals(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Slice<jule::Ptr<_22126b17c_Var>>*);
inline void _2033437b1_removeDeadFns(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Slice<jule::Ptr<_2211d9ccc_Fn>>*);
inline void _203343a36_removeDeadStructs(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Slice<jule::Ptr<_2211c48cc_Struct>>*);
inline void _203343cab_removeDeadTraits(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Slice<jule::Ptr<_2211ebeed_Trait>>*);
inline void _203344031_removeDeadsFile(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Ptr<_221421222_SymbolTable>*);
inline void _2033442a6_removeDeadsPackage(jule::Ptr<_20331045e_ObjectDeadCode>, jule::Ptr<_2212456d9_Package>*);
inline void _203344482_removeDeads(jule::Ptr<_20331045e_ObjectDeadCode>);
inline void _20334465d_elimanate(jule::Ptr<_20331045e_ObjectDeadCode>);
struct _20331045e_ObjectDeadCode {
	_203310096_liveTable _field_live;
	jule::Ptr<_203214e13_IR> _field_ir;
	

	_20331045e_ObjectDeadCode(void) = default;


};
inline __jule_tuple_x_203214e13_IR__jule_tuple_s_21d6755de_Log static__203215397_Build(jule::Str, jule::I32);
inline void _2032157e8_appendStructs(_203214e13_IR*, jule::Ptr<_2212456d9_Package>*, jule::Slice<jule::Ptr<_2211c48cc_Struct>>*);
inline jule::Slice<jule::Ptr<_2211c48cc_Struct>> _203215a5c_GetAllStructures(_203214e13_IR*);
inline void _203215d7b_appendGlobals(_203214e13_IR*, jule::Ptr<_2212456d9_Package>*, jule::Slice<jule::Ptr<_22126b17c_Var>>*);
inline jule::Slice<jule::Ptr<_22126b17c_Var>> _2032160e0_GetAllGlobals(_203214e13_IR*);
inline void _2032162bb_Order(_203214e13_IR*);
struct _203214e13_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_2212456d9_Package> _field_Main;
	jule::Slice<jule::Ptr<_221242a9e_ImportInfo>> _field_Used;
	_203217454_OrderedDefines _field_Ordered;
	

	_203214e13_IR(void) = default;


};
inline jule::Str _2211c7a9a_Str(_2211c76e3_StructIns*);
inline jule::Bool _2211c7da8_Equal(jule::Ptr<_2211c76e3_StructIns>, jule::Ptr<_221453397_TypeKind>);
inline jule::Bool _2211c82d7_Same(_2211c76e3_StructIns*, jule::Ptr<_2211c76e3_StructIns>);
inline jule::Ptr<_2211d9ccc_Fn> _2211c868e_FindMethod(_2211c76e3_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_2211c6bed_FieldIns> _2211c899c_FindField(_2211c76e3_StructIns*, jule::Str);
inline jule::Ptr<_22126b17c_Var> _2211c8caa_FindStatic(_2211c76e3_StructIns*, jule::Str);
struct _2211c76e3_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_2211c48cc_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_221451b15_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_2211c6bed_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_22126b17c_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_2211d9ccc_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_2211e08d7_ReferenceStack> _field_Refers;
	_2211c3ab8_Operators _field_Operators;
	

	_2211c76e3_StructIns(void) = default;


};
inline jule::Ptr<_21d7131b5_Cmd> static__21d713616_New(jule::Str);
inline jule::VoidExceptional _21d7137e2_Spawn(_21d7131b5_Cmd*);
inline jule::VoidExceptional _21d7139bd_Kill(_21d7131b5_Cmd*);
inline jule::Exceptional<jule::I32> _21d713c32_Wait(_21d7131b5_Cmd*);
inline jule::VoidExceptional _21d71731d_spawn(_21d7131b5_Cmd*);
inline jule::VoidExceptional _21d7174e9_kill(_21d7131b5_Cmd*);
inline jule::Exceptional<jule::I32> _21d71775d_wait(_21d7131b5_Cmd*);
struct _21d7131b5_Cmd {
	_21d716e99_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_21d7131b5_Cmd(void) = default;


};
inline jule::I32 _21c498215_DecodeRune(jule::I32, jule::I32);
inline __jule_tuple_i32__jule_tuple_i32 _21c4984ac_EncodeRune(jule::I32);
inline jule::Slice<jule::U16> _21c4987cb_Encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _21c498a73_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _21c498d81_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _21c4990b2_Utf16FromStr(jule::Str);
inline jule::Str _21c49936a_Utf16ToStr(jule::Slice<jule::U16>);
inline jule::Str _21c499612_U16PtrToStr(jule::U16*);
inline jule::I32 _21b5d27e5_GetLastErrno(void);
inline jule::Uintptr _21c4c6bd3_GetStdHandle(jule::Uintptr);
inline jule::Bool _21c4c6e7a_CloseHandle(jule::Uintptr);
inline jule::I32 _21c4c72bb_Wstat(jule::U16*, struct _stat*);
inline jule::I32 _21c4c76a6_Wopen(jule::U16*, jule::I32, jule::I32);
inline jule::U32 _21c4c78a4_GetLastError(void);
inline jule::U32 _21c4c7be5_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _21c4c8234_DeleteFile(jule::U16*);
inline jule::Bool _21c4c84cb_CreateDirectory(jule::U16*);
inline jule::Bool _21c4c8773_RemoveDirectory(jule::U16*);
inline jule::U32 _21c4c8c07_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _21c4c9048_GetConsoleMode(jule::Uintptr, jule::I32*);
inline jule::Bool _21c4c960e_SetConsoleMode(jule::Uintptr, jule::I32);
inline jule::Bool _21c4c9b09_WriteConsole(jule::Uintptr, jule::U16*, jule::I32, jule::I32*, void*);
inline jule::Bool _21c4ca08d_ReadConsole(jule::Uintptr, jule::U16*, jule::I32, jule::I32*);
inline jule::Uintptr _21c4ca5cc_FindFirstFile(jule::U16*, WIN32_FIND_DATAW*);
inline jule::I32 _21c4ca91d_FindNextFile(jule::Uintptr, WIN32_FIND_DATAW*);
inline jule::I32 _21c4cabb5_FindClose(jule::Uintptr);
inline jule::I32 _21c4cc6de_Seek(jule::I32, jule::I32, jule::I32);
inline jule::I32 _21c4ccac9_Read(jule::I32, void*, jule::U32);
inline jule::I32 _21c4cce4d_Close(jule::I32);
inline jule::I32 _21c4cd338_Write(jule::I32, void*, jule::U32);
inline void _21c4cd547_Exit(jule::I32);
inline jule::Slice<jule::U8> _21c4e9332_Stobs(jule::Str*);
inline void _21c4e99d6_PushToStrBuffer(jule::Str*, jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _21c5cbed6_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _21c5cc305_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _21c5cc59c_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::I32 _21c5ccadb_RuneLen(jule::I32);
inline jule::I32 _21c5cd009_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _21c5cd34a_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _21c5cd68b_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I32 _21c5cdbca_RuneCountStr(jule::Str);
inline jule::Bool _21c5cde72_RuneStart(jule::U8);
inline jule::I32 _21c685633_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _21c686b51_Args(void);
inline jule::Exceptional<jule::Str> _21c6870c4_WorkingDir(void);
inline jule::Exceptional<jule::Str> _21c687987_getwd(void);
inline jule::Bool _21d5361b4_IsLetter(jule::I32);
inline jule::Bool _21d59db88_is16(jule::Slice<_21d59c0c6_Range16>, jule::U16);
inline jule::Bool _21d59dec9_is32(jule::Slice<_21d59c549_Range32>, jule::U32);
inline jule::Bool _21d59e76b_isExcludingLatin(jule::Ptr<_21d59c9bc_RangeTable>, jule::I32);
inline jule::Bool _21d59ea13_IsUpper(jule::I32);
inline jule::I32 _21d5c11d8_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _21d5d3508_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _21d5d37c2_FindByteStr(jule::Str*, jule::U8);
inline jule::I32 _21d5d3b13_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _21d5d3ecb_Repeat(jule::Str, jule::I32);
inline jule::Bool _21d5d440a_hasPrefix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _21d5d474b_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _21d5d4bad_hasSuffix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _21d5d4ebb_HasSuffix(jule::Str, jule::Str);
inline jule::I32 _21d5d53a6_FindAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _21d5d5be2_FindLastAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _21d5d6033_FindLast(jule::Str, jule::Str);
inline jule::I32 _21d5d72cb_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I32 _21d5d7b17_FindLastByte(jule::Str, jule::U8);
inline jule::I32 _21d5d892b_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _21d5d9157_Split(jule::Str, jule::Str, jule::I32);
inline jule::Bool _21d5d9498_Contains(jule::Str, jule::Str);
inline jule::Bool _21d5d9e6b_ContainsAny(jule::Str, jule::Str);
inline jule::I32 _21d5da2ac_Count(jule::Str, jule::Str);
inline jule::Str _21d5da741_Replace(jule::Str, jule::Str, jule::Str, jule::I32);
inline void _21d5d77a4_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _21d5db7ec_TrimLeft(jule::Str, jule::Str);
inline void _21d5dbaa5_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _21d5dc237_Trim(jule::Str, jule::Str);
inline jule::Bool _21c661796_IsPathSep(jule::U8);
inline jule::Bool _21c661a60_isSlash(jule::U8);
inline jule::U8 _21c661d07_toUpper(jule::U8);
inline jule::I32 _21c6623bd_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _21c662665_cutPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _21c66290c_fullPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _21c662c81_abs(jule::Str);
inline jule::Str _21c663028_join(jule::Slice<jule::Str>);
inline jule::Str _21d5ddb1d_Clean(jule::Str);
inline jule::Str _21d5de1a1_FromSlash(jule::Str);
inline jule::Str _21d5de4c0_Join(jule::Slice<jule::Str>);
inline jule::Str _21d5de767_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _21d5dea0e_Abs(jule::Str);
inline jule::Str _21d5deca6_Base(jule::Str);
inline jule::Str _21d5e012a_Dir(jule::Str);
inline jule::Str _21d5e03c2_VolumeName(jule::Str);
inline jule::I32 _21c4dd667_getLastFsError(void);
inline jule::Bool _21c5d0baa_isConsoleHandle(jule::Uintptr);
inline void _21d717ac1_appendEscapeArg(jule::Str*, jule::Str);
inline jule::Str _21d717d68_makeCmdLine(jule::Slice<jule::Str>);
inline jule::Exceptional<jule::Slice<jule::U16>> _21d718220_createEnvBlock(jule::Slice<jule::Str>);
inline jule::I32 _21d7191ee_processErrorFromCode(jule::I32);
inline jule::I32 _21d71940d_getLastProcessError(void);
inline void _21d719bb1_Exit(jule::I32);
inline jule::Str _21d719dae_Executable(void);
inline jule::Bool _21d667a87_IsStdHeaderPath(jule::Str);
inline jule::Bool _21d667d40_IsValidHeaderExt(jule::Str);
inline jule::Bool _21d6680d7_IsValidCppExt(jule::Str);
inline jule::Str _21d675a2e_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _21d675d1a_argToStr(jule::Any);
inline jule::I32 _21d6760b2_findNextFmt(jule::Str);
inline jule::Str _21d676447_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _21d6774c0_IsTopDirective(jule::Str);
inline jule::Bool _21d678900_IsWindows(jule::Str);
inline jule::Bool _21d678ba8_IsDarwin(jule::Str);
inline jule::Bool _21d678e50_IsLinux(jule::Str);
inline jule::Bool _21d67926e_IsI386(jule::Str);
inline jule::Bool _21d679516_IsAmd64(jule::Str);
inline jule::Bool _21d6797ad_IsArm64(jule::Str);
inline jule::Bool _21d679a55_IsUnix(jule::Str);
inline jule::Bool _21d679dc9_Is32Bit(jule::Str);
inline jule::Bool _21d67a171_Is64Bit(jule::Str);
inline void _21d71b146_init(void);
inline jule::Bool _21da1b215_IsUnaryOp(jule::Str);
inline jule::Bool _21da1b501_IsBinOp(jule::Str);
inline jule::Bool _21da1bab7_IsStr(jule::Str);
inline jule::Bool _21da1bd5e_IsRawStr(jule::Str);
inline jule::Bool _21da1c106_IsRune(jule::Str);
inline jule::Bool _21da1c722_IsBool(jule::Str);
inline jule::Bool _21da1c9b9_IsFloat(jule::Str);
inline jule::Bool _21da1cc61_IsNum(jule::Str);
inline jule::Bool _21da1d2a0_IsIgnoreIdent(jule::Str);
inline jule::Bool _21da1d547_IsAnonIdent(jule::Str);
inline jule::Bool _21da1da86_IsSpace(jule::I32);
inline jule::Bool _21da1ded7_IsLetter(jule::I32);
inline jule::Bool _21da1e526_IsDecimal(jule::U8);
inline jule::Bool _21da1e7bd_IsBinary(jule::U8);
inline jule::Bool _21da1ea65_IsOctal(jule::U8);
inline jule::Bool _21da1ed0c_IsHex(jule::U8);
inline jule::Bool _21da200a4_IsAssign(jule::U32);
inline jule::Bool _21da2034b_IsPostfixOp(jule::Str);
inline jule::Bool _21da205e3_IsAssignOp(jule::Str);
inline jule::Ptr<_21da20d96_File> _21da223c5_NewFileSet(jule::Str);
inline _21d6755de_Log _21da23b68_makeErr(jule::I32, jule::I32, jule::Ptr<_21da20d96_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _21da23eed_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _21da2433e_floatFmtE(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _21da246c4_floatFmtP(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _21da24a15_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _21da24d56_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _21da25197_floatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _21da255e8_floatNum(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _21da25890_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _21da25b37_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _21da25e78_isFloatFmtE(jule::U8, jule::I32);
inline jule::Bool _21da262b9_isFloatFmtP(jule::U8, jule::I32);
inline jule::Bool _21da2660a_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _21da2694b_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _21da26c8c_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _21da271dd_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _21da27485_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _21da277c6_hexEscape(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _21da27a6d_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _21da27d37_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _21da27ee1_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _21da28277_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_21d6755de_Log> _21da2cc71_Lex(jule::Ptr<_21da20d96_File>, jule::I32);
inline jule::I32 _21e655007_LeadingZeros64(jule::U64);
inline jule::I32 _21e655e3c_TrailingZeros(jule::U32);
inline jule::I32 _21e656833_TrailingZeros32(jule::U32);
inline jule::I32 _21e656aca_TrailingZeros64(jule::U64);
inline jule::I32 _21e65c1da_Len32(jule::U32);
inline jule::I32 _21e65c482_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _21e65d142_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _21e65e7c5_Mul64(jule::U64, jule::U64);
inline jule::U32 _21e581b7b_F32Bits(jule::F32);
inline jule::F32 _21e581e67_F32FromBits(jule::U32);
inline jule::U64 _21e58220e_F64Bits(jule::F64);
inline jule::F64 _21e58252d_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _21e584a19_Frexp(jule::F64);
inline jule::F64 _21e66b617_NaN(void);
inline jule::Bool _21e66b903_IsNaN(jule::F64);
inline jule::F64 _21e66bb9a_Inf(jule::I32);
inline jule::Bool _21e66bea8_IsInf(jule::F64, jule::I32);
inline __jule_tuple_f64__jule_tuple_int _21e66c250_normalize(jule::F64);
inline jule::F64 _21e66db36_Log(jule::F64);
inline jule::F64 _21e66e4c7_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _21e675e18_Modf(jule::F64);
inline jule::F64 _21e6766cc_Log2(jule::F64);
inline jule::Str _21e6a0041_FmtFloat(jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _21e6a05b3_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _21e6a0c34_bigFtoa(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _21e69e062_floatInfo*);
inline jule::Slice<jule::U8> _21e6a1383_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _21e69ea02_decimalSlice, jule::I32, jule::U8);
inline void _21e6a177e_roundShortest(_21e6b1805_decimal*, jule::U64, jule::I32, _21e69e062_floatInfo*);
inline jule::Slice<jule::U8> _21e6a1cac_fmtE(jule::Slice<jule::U8>, jule::Bool, _21e69ea02_decimalSlice, jule::I32, jule::U8);
inline jule::Slice<jule::U8> _21e6a2241_fmtF(jule::Slice<jule::U8>, jule::Bool, _21e69ea02_decimalSlice, jule::I32);
inline jule::Slice<jule::U8> _21e6a284b_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I32, _21e69e062_floatInfo*);
inline jule::Slice<jule::U8> _21e6a2ebc_fmtX(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _21e69e062_floatInfo*);
inline jule::I32 _21e6a330d_min(jule::I32, jule::I32);
inline jule::I32 _21e6a364e_max(jule::I32, jule::I32);
inline jule::U8 _21e6a4177_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__21e0a533c_ConvError _21e6a45a6_parseUint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::U64> _21e6a4991_ParseUint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::I64> _21e6a4e03_ParseInt(jule::Str, jule::I32, jule::I32);
inline __jule_tuple_f64__jule_tuple_bool _21e6a5a19_eiselLemire64(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _21e6a5e15_eiselLemire32(jule::U64, jule::I32, jule::Bool);
inline jule::I32 _21e6a7b2b_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _21e6a7e28_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _21e6a81c0_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _21e6a9b50_atof64exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _21e6aa03a_atof32exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f64__jule_tuple__21e0a533c_ConvError _21e6aa612_atofHex(jule::Str, _21e69e062_floatInfo*, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__21e0a533c_ConvError _21e6aa9b9_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__21e0a533c_ConvError _21e6aac61_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__21e0a533c_ConvError _21e6ab0a2_parseFloatPrefix(jule::Str, jule::I32);
inline jule::Exceptional<jule::F64> _21e6ab3e3_ParseFloat(jule::Str, jule::I32);
inline void _21e6abb63_ryuFtoaFixed32(_21e69ea02_decimalSlice*, jule::U32, jule::I32, jule::I32);
inline void _21e6ac0a3_ryuFtoaFixed64(_21e69ea02_decimalSlice*, jule::U64, jule::I32, jule::I32);
inline void _21e6ac889_formatDecimal(_21e69ea02_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I32);
inline void _21e6acd0c_ryuFtoaShortest(_21e69ea02_decimalSlice*, jule::U64, jule::I32, _21e69e062_floatInfo*);
inline jule::I32 _21e6ad0a4_mulByLog2Log10(jule::I32);
inline jule::I32 _21e6ad34b_mulByLog10Log2(jule::I32);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _21e6ad736_computeBounds(jule::U64, jule::I32, _21e69e062_floatInfo*);
inline void _21e6adcca_ryuDigits(_21e69ea02_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _21e6ae3b3_ryuDigits32(_21e69ea02_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I32);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _21e6ae79d_mult64bitPow10(jule::U32, jule::I32, jule::I32);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _21e6aeb88_mult128bitPow10(jule::U64, jule::I32, jule::I32);
inline jule::Bool _21e6aeec9_divisibleByPow5(jule::U64, jule::I32);
inline __jule_tuple_u32__jule_tuple_u32 _21e6b0271_divmod1e9(jule::U64);
inline void _21e6b2edd_trim(_21e6b1805_decimal*);
inline void _21e6b3296_rightShift(_21e6b1805_decimal*, jule::U32);
inline jule::Bool _21e6b3708_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I32, jule::Str);
inline void _21e6b397d_leftShift(_21e6b1805_decimal*, jule::U32);
inline jule::Bool _21e6b3cbe_shouldRoundUp(_21e6b1805_decimal*, jule::I32);
inline jule::Str _21e6b53db_FmtUint(jule::U64, jule::I32);
inline jule::Str _21e6b5771_FmtInt(jule::I64, jule::I32);
inline jule::Str _21e6b5a18_Itoa(jule::I32);
inline jule::Str _21e6b5d37_small(jule::I32);
inline jule::Bool _21e6b60ce_isPowerOfTwo(jule::I32);
inline __jule_tuple_su8__jule_tuple_str _21e6b660c_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline jule::Str _21e6b78d8_RealKindOf(jule::Str);
inline jule::I32 _21e6b7b80_BitsizeOf(jule::Str);
inline jule::Str _21e6b7e9e_IntFromBits(jule::I32);
inline jule::Str _21e6b8246_UintFromBits(jule::I32);
inline jule::Str _21e6b84dd_FloatFromBits(jule::I32);
inline jule::Bool _21e6b908d_CheckBitFloat(jule::Str, jule::I32);
inline jule::I32 _21e6b9335_BitsizeOfFloat(jule::F64);
inline jule::I32 _21e6b95cc_BitsizeOfInt(jule::I64);
inline jule::I32 _21e6b9874_BitsizeOfUint(jule::U64);
inline void _21e6b99d9_UpdateTarget(void);
inline void _21e6b9b4e_init(void);
inline jule::I64 _21e6bd8de_MinI(jule::Str);
inline jule::I64 _21e6bdbca_MaxI(jule::Str);
inline jule::U64 _21e6bde72_MaxU(jule::Str);
inline jule::F64 _21e6be181_Min(jule::Str);
inline jule::F64 _21e6be428_Max(jule::Str);
inline jule::Bool _21e6be879_IsI8Compatible(jule::Str);
inline jule::Bool _21e6beb65_IsI16Compatible(jule::Str);
inline jule::Bool _21e6bee0c_IsI32Compatible(jule::Str);
inline jule::Bool _21e6c022b_IsI64Compatible(jule::Str);
inline jule::Bool _21e6c04c3_IsU8Compatible(jule::Str);
inline jule::Bool _21e6c076a_IsU16Compatible(jule::Str);
inline jule::Bool _21e6c0a12_IsU32Compatible(jule::Str);
inline jule::Bool _21e6c0d86_IsU64Compatible(jule::Str);
inline jule::Bool _21e6c112d_IsF32Compatible(jule::Str);
inline jule::Bool _21e6c13c5_IsF64Compatible(jule::Str);
inline jule::Bool _21e6c1716_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _21e6c19ad_IsI16Greater(jule::Str);
inline jule::Bool _21e6c1c55_IsI32Greater(jule::Str);
inline jule::Bool _21e6c1eec_IsI64Greater(jule::Str);
inline jule::Bool _21e6c2294_IsU16Greater(jule::Str);
inline jule::Bool _21e6c26e5_IsU32Greater(jule::Str);
inline jule::Bool _21e6c298c_IsU64Greater(jule::Str);
inline jule::Bool _21e6c2c34_IsF32Greater(jule::Str);
inline jule::Bool _21e6c2ecb_IsF64Greater(jule::Str);
inline jule::Bool _21e6c331c_IsGreater(jule::Str, jule::Str);
inline jule::Bool _21e6c4351_IsSigInt(jule::Str);
inline jule::Bool _21e6c463c_IsUnsigInt(jule::Str);
inline jule::Bool _21e6c48d4_IsInt(jule::Str);
inline jule::Bool _21e6c4c03_IsFloat(jule::Str);
inline jule::Bool _21e6c4e9a_IsNum(jule::Str);
inline jule::Bool _21e6c5242_IsSigNum(jule::Str);
inline void _21e6cdb0d_lshiftUnsig(_21e6c53da_Const*, _21e6c53da_Const*);
inline void _21e6cde0a_rshiftUnsig(_21e6c53da_Const*, _21e6c53da_Const*);
inline jule::Bool _221284904_IsAscii(jule::I32);
inline jule::I32 _221284a36_ToRune(jule::Slice<jule::U8>);
inline jule::Str _22129ba3c_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _22129bd5b_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _22129c103_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _22129c411_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::Slice<jule::U8> _22140d110_strEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::I32 _22150d92a_findFormatPrefix(jule::Slice<jule::U8>*, jule::I32*);
inline jule::Slice<jule::U8> _221514557_getFormatRange(jule::I32*, jule::Slice<jule::U8>*);
inline void _221514810_FmtByDefault(jule::Str*, jule::Any*);
inline void _221514bd9_applyFmtByDefault(jule::Str*, jule::I32*, jule::Slice<jule::Any>);
inline void _2215150d5_applyFmt(jule::Slice<jule::U8>*, jule::Str*, jule::I32*, jule::Slice<jule::Any>);
inline jule::Str _2215153e3_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _2215170c6_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2211dea90_parameterUsesGenerics(jule::Ptr<_2211dbaae_ParamIns>*, jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>>*);
inline jule::Ptr<_221459c50_TypeSymbol> _2211e206a_buildType(jule::Ptr<_2211a478b_TypeDecl>);
inline jule::Ptr<_221426ca5_Value> _2211e2356_buildExpr(jule::Ptr<_2211a8cac_Expr>);
inline jule::Ptr<_22145264e_TypeAlias> _2211e25ed_buildTypeAlias(jule::Ptr<_2211baa5a_TypeAliasDecl>);
inline jule::Ptr<_2211c1d08_Field> _2211e291c_buildField(jule::Ptr<_2211be201_FieldDecl>);
inline jule::Slice<jule::Ptr<_2211c1d08_Field>> _2211e2bb4_buildFields(jule::Slice<jule::Ptr<_2211be201_FieldDecl>>*);
inline jule::Ptr<_2211c48cc_Struct> _2211e2e5b_buildStruct(jule::Ptr<_2211be9a4_StructDecl>);
inline jule::Ptr<_2211d8490_Param> _2211e3203_buildParam(jule::Ptr<_2211b4dea_ParamDecl>);
inline jule::Slice<jule::Ptr<_2211d8490_Param>> _2211e3577_buildParams(jule::Slice<jule::Ptr<_2211b4dea_ParamDecl>>*);
inline jule::Ptr<_2211d7c86_RetType> _2211e381e_buildRetType(jule::Ptr<_2211a789e_RetTypeDecl>);
inline jule::Ptr<_2211d9ccc_Fn> _2211e3ab6_buildFn(jule::Ptr<_2211b621a_FnDecl>);
inline jule::Slice<jule::Ptr<_2211d9ccc_Fn>> _2211e3d5d_buildMethods(jule::Slice<jule::Ptr<_2211b621a_FnDecl>>*);
inline jule::Slice<jule::Ptr<_221459c50_TypeSymbol>> _2211e4105_buildTraitInherits(jule::Slice<jule::Ptr<_2211a478b_TypeDecl>>*);
inline jule::Ptr<_2211ebeed_Trait> _2211e439c_buildTrait(jule::Ptr<_2211c017a_TraitDecl>);
inline jule::Ptr<_2211edc8b_EnumItem> _2211e4644_buildEnumItem(jule::Ptr<_2211bc3b9_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_2211edc8b_EnumItem>> _2211e48db_buildEnumItems(jule::Slice<jule::Ptr<_2211bc3b9_EnumItemDecl>>*);
inline jule::Ptr<_2211ee781_Enum> _2211e4d3c_buildEnum(jule::Ptr<_2211bcde2_EnumDecl>);
inline jule::Ptr<_2212007b5_TypeEnumItem> _2211e50d4_buildTypeEnumItem(jule::Ptr<_2211bd8e8_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_2212007b5_TypeEnumItem>> _2211e537b_buildTypeEnumItems(jule::Slice<jule::Ptr<_2211bd8e8_TypeEnumItemDecl>>*);
inline jule::Ptr<_221200d7b_TypeEnum> _2211e5623_buildTypeEnum(jule::Ptr<_2211be003_TypeEnumDecl>);
inline jule::Ptr<_22126b17c_Var> _2211e58ba_buildVar(jule::Ptr<_2211b71e9_VarDecl>);
inline jule::Slice<jule::Ptr<_22126b17c_Var>> _2211e5b62_buildVars(jule::Slice<jule::Ptr<_2211b71e9_VarDecl>>);
inline jule::Ptr<_22121e0ca_Impl> _2211e5e09_buildImpl(jule::Ptr<_2211c0785_Impl>);
inline jule::Ptr<_221425c2c_Data> _221219e0b_buildAsComptimeMethodData(jule::Ptr<_2211dc97d_FnIns>*);
inline jule::Ptr<_221242a9e_ImportInfo> _22121a0e8_findComptimePackage(jule::Ptr<_22124ad71_Sema>*);
inline jule::Ptr<_221425c2c_Data> _22121a45b_buildComptimeTypeInfoData(jule::Ptr<_22124ad71_Sema>*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Ptr<_221425c2c_Data> _22121a78b_buildComptimeValue(jule::Ptr<_221425c2c_Data>*);
inline jule::Bool _22121d508_matchConstraint(jule::Str*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _22121d7e4_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_22122ac63_scopeChecker> _221221165_newScopeCheckerBase(jule::Ptr<_22124ad71_Sema>*, jule::Ptr<_2211dc97d_FnIns>);
inline jule::Ptr<_22122ac63_scopeChecker> _2212214ea_newScopeChecker(jule::Ptr<_22124ad71_Sema>*, jule::Ptr<_2211dc97d_FnIns>);
inline jule::Ptr<_2212299cb_scopeLabel> _22122183b_findLabelParent(jule::Str, jule::Ptr<_22122ac63_scopeChecker>);
inline jule::Bool _221221bc1_modelIsGotoScope(jule::Any, jule::Ptr<_221224135_Scope>*);
inline jule::Bool _221222012_stmtIsGotoScope(jule::Any*, jule::Ptr<_221224135_Scope>*);
inline jule::I32 _221222353_countMatchType(jule::Ptr<_221227e4c_Match>*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Slice<jule::Ptr<_221425c2c_Data>> _2212225ea_getDatasFromTupleData(jule::Ptr<_221425c2c_Data>*);
inline jule::Bool _221222e36_checkMut(jule::Ptr<_22124ad71_Sema>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Bool _2212233ba_checkAssign(jule::Ptr<_22124ad71_Sema>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Bool _221223662_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _221223909_isValidStForNextSt(jule::Any*);
inline jule::Bool _221223ba1_stmtIsDef(jule::Any*);
inline jule::Ptr<_22126b17c_Var> _2212402b6_findVarInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_22145264e_TypeAlias> _2212406e5_findTypeAliasInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_2211c48cc_Struct> _221240ad0_findStructInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_2211d9ccc_Fn> _221241042_findFnInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_2211ebeed_Trait> _221241350_findTraitInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>*, jule::Str);
inline jule::Ptr<_2211ee781_Enum> _221241691_findEnumInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>*, jule::Str);
inline jule::Ptr<_221200d7b_TypeEnum> _2212419d2_findTypeEnumInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>*, jule::Str);
inline jule::Any _221241ecc_defByIdentPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _221247994_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _2212486ed_isValidModelForRef(jule::Any*);
inline _21d6755de_Log _221248b93_compilerErr(jule::Ptr<_21da1aa0b_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _221248ed4_impIsLookupable(jule::Ptr<_221242a9e_ImportInfo>*, jule::Str);
inline void _2212492d1_appendRetVars(jule::Slice<jule::Ptr<_22126b17c_Var>>*, jule::Ptr<_2211dc97d_FnIns>*);
inline void _221249589_appendParamVars(jule::Slice<jule::Ptr<_22126b17c_Var>>*, jule::Ptr<_2211dc97d_FnIns>*);
inline void _221249864_appendGenericTypeAliases(jule::Slice<jule::Ptr<_22145264e_TypeAlias>>*, jule::Ptr<_2211dc97d_FnIns>*);
inline jule::Ptr<_221421222_SymbolTable> _221249bb6_findFile(jule::Slice<jule::Ptr<_221421222_SymbolTable>>*, jule::Ptr<_21da20d96_File>*);
inline void _22124a128_pushSuggestion(_21d6755de_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _221269664_pushImplemented(jule::Ptr<_2211ebeed_Trait>, jule::Ptr<_2211c48cc_Struct>*);
inline void _22126991c_pushImplements(jule::Ptr<_2211c48cc_Struct>*, jule::Ptr<_2211ebeed_Trait>);
inline jule::Bool _22140d75e_traitHasReferenceReceiver(jule::Ptr<_2211ebeed_Trait>*);
inline jule::Bool _22140da06_floatAssignable(jule::Str, jule::Ptr<_221425c2c_Data>*);
inline jule::Bool _22140dd47_sigAssignable(jule::Str, jule::Ptr<_221425c2c_Data>*);
inline jule::Bool _22140e1cc_unsigAssignable(jule::Str, jule::Ptr<_221425c2c_Data>*);
inline jule::Bool _22140e51d_intAssignable(jule::Str, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221453397_TypeKind> _2214203b9_lenKind(void);
inline jule::Ptr<_221171307_Directive> _22144c407_findDirective(jule::Slice<jule::Ptr<_221171307_Directive>>*, jule::Str);
inline jule::Any _22144c78c_findBuiltinsImport(jule::Str, jule::Ptr<_221242a9e_ImportInfo>);
inline void _22144c99b_fitBitsize(jule::Ptr<_221425c2c_Data>*);
inline void _22144cc98_makeStructLitAlloc(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211cc7b4_StructLitExprModel>*);
inline jule::Ptr<_22126b17c_Var> _22144d0d9_buildErrorVar(jule::Ptr<_221224135_Scope>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Any _22144d42a_findBuiltinsSema(jule::Str, jule::Ptr<_22124ad71_Sema>);
inline jule::Bool _22144d6c2_isOkForShifting(jule::Ptr<_221425c2c_Data>*);
inline jule::Bool _22144da79_isInstancedStruct(jule::Ptr<_2211c76e3_StructIns>);
inline jule::Bool _22144dddc_isPtrArithmeticCompatible(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*);
inline void _22144e12e_applyCastKindModel(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221453397_TypeKind>*);
inline void _22144e3d7_applyCastKind(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221453397_TypeKind>*);
inline jule::Ptr<_221425c2c_Data> _22144e5d5_buildVoidData(void);
inline jule::Str _22144e89e_checkDataForIntegerIndexing(jule::Ptr<_221425c2c_Data>*);
inline void _22144eb68_applyCastModelByEnum(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_2211ee781_Enum>);
inline void _22144ee21_castConstByType(jule::Str*, jule::Ptr<_221425c2c_Data>*);
inline void _22145042c_updateModelToGenericIns(jule::Any*, jule::Ptr<_2211dc97d_FnIns>*);
inline jule::Bool _22145066e_pushSubIdentFromExpr(jule::Any, jule::Ptr<_2211a54a1_SubIdentTypeDecl>*);
inline jule::Str _221450916_constoa(jule::Ptr<_21e6c53da_Const>*);
inline jule::Ptr<_221425c2c_Data> _221450c57_evalEnumStatic(jule::Ptr<_2211ee781_Enum>*, jule::Ptr<_2211edc8b_EnumItem>*);
inline jule::Bool _22146c57b_kindUsesGenerics(jule::Ptr<_221453397_TypeKind>*, jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>>*);
inline jule::Bool _22146c911_hasDirective(jule::Slice<jule::Ptr<_221171307_Directive>>*, jule::Str);
inline jule::Bool _22146cba8_canGetPtr(jule::Ptr<_221425c2c_Data>*);
inline jule::Bool _22146cec7_isValidForSptrType(jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _22146d26e_isValidForRef(jule::Ptr<_221453397_TypeKind>*);
inline jule::Bool _22146d538_isBuiltinStrConvertable(jule::Ptr<_221453397_TypeKind>*);
inline jule::Str _22146d7ad_buildLinkPathByTokens(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_22145a5be_Prim> _22146db65_buildPrimType(jule::Str);
inline jule::Ptr<_2211c48cc_Struct> _22146de0c_getStructFromKind(jule::Ptr<_221453397_TypeKind>);
inline jule::Bool _22146e1a4_isPrim(jule::Str);
inline void _22146e45c_applyImplicitCast(jule::Ptr<_221453397_TypeKind>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Bool _22146e704_validTypeForXof(jule::Ptr<_221453397_TypeKind>*);
inline jule::Ptr<_221453397_TypeKind> _22146e902_buildVoidType(void);
inline __jule_tuple_x_221421222_SymbolTable__jule_tuple_s_21d6755de_Log _2214726a2_buildSymbols(jule::Ptr<_22117005e_Ast>*, jule::Trait<_22123eded_Importer>*, jule::Ptr<_2211e6459_symbolBuilder>);
inline __jule_tuple_x_2212456d9_Package__jule_tuple_s_21d6755de_Log _221472ad1_analyzePackage(jule::Slice<jule::Ptr<_22117005e_Ast>>*, jule::Trait<_22123eded_Importer>*, jule::I32*);
inline __jule_tuple_x_2212456d9_Package__jule_tuple_s_21d6755de_Log _221472ebb_AnalyzePackage(jule::Slice<jule::Ptr<_22117005e_Ast>>, jule::Trait<_22123eded_Importer>, jule::I32);
inline jule::Ptr<_2211dc97d_FnIns> _22151788a_findBuiltinFn(jule::Str);
inline jule::Ptr<_22145264e_TypeAlias> _221517abb_findBuiltinTypeAlias(jule::Str);
inline jule::Any _221517d63_findBuiltinDef(jule::Str);
inline jule::Any _221518182_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _221518429_findBuiltinDefStdMem(jule::Str);
inline jule::Any _2215186e3_findBuiltinDefStdComptime(jule::Str);
inline jule::Any _22151898a_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _221518dec_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_221425c2c_Data> _221519309_builtinCallerCommonPlain(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151967d_builtinCallerCommon(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _221519a68_builtinCallerCommonMut(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _221519da9_builtinCallerError(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*);
inline jule::Ptr<_221425c2c_Data> _22151a294_builtinCallerOut(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151a67e_builtinCallerOutln(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151aa69_builtinCallerNew(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151b185_builtinCallerPanic(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151b570_builtinCallerMake(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151b95a_builtinCallerAppend(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151bdde_callerCopySlice(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151c373_callerCopyStr(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151c75d_builtinCallerCopy(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151ca9e_callerLenSlice(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151cde0_callerLenMap(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151d231_callerLenArr(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151d572_callerLenStr(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151d95c_builtinCallerLen(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151dc9d_callerCapSlice(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151e0de_callerCapStr(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151e4c9_builtinCallerCap(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151e95d_callerDeleteMap(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22151ed48_builtinCallerDelete(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22152040e_builtinCallerClone(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _221520750_builtinCallerAssert(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _221520b5c_builtinCallerStdComptimeTypeOf(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _22152107a_builtinCallerStdComptimeValueOf(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _221521498_builtinCallerStdComptimeRange(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _2215218b6_builtinCallerStdMemSizeOf(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _221521cd4_builtinCallerStdMemAlignOf(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _221522202_builtinCallerStdMemFree(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _221522631_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _221522a4e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _221522e8e_builtinCallerStdDebugOut(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Ptr<_221425c2c_Data> _221523379_builtinCallerStdDebugOutln(jule::Ptr<_22142779a_Eval>*, jule::Ptr<_2211acc8e_FnCallExpr>*, jule::Ptr<_221425c2c_Data>*);
inline jule::Bool _22161c8d5_FindModuleFile(jule::Slice<jule::Ptr<_21c4ddbd9_DirEntry>>*);
inline jule::Str _22161ca17_FindModuleFileDeep(jule::Str);
inline jule::Slice<_21d6755de_Log> _22161cc15_CheckModuleFile(jule::Str);
inline jule::Ptr<_203186a99_FileInfo> _2031cd618_ParseFile(jule::Ptr<_21da20d96_File>);
inline __jule_tuple_x_22117005e_Ast__jule_tuple_s_21d6755de_Log _2031cdb9b_parseFileset(jule::Ptr<_21da20d96_File>);
inline jule::Ptr<_2211b4724_ScopeTree> _2031ce5c5_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _2031ce8b1_isSt(jule::Ptr<_21da1aa0b_Token>, jule::Ptr<_21da1aa0b_Token>);
inline jule::Bool _2031cec02_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::I32*);
inline __jule_tuple_int__jule_tuple_bool _2031d0087_nextStPos(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::I32);
inline __jule_tuple_sx_21da1aa0b_Token__jule_tuple_bool _2031d03c8_skipSt(jule::I32*, jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Slice<jule::Ptr<_2031d06c5_stmt>> _2031d0a6b_splitStmts(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Bool _2031e7258_isTypeOp(jule::Str*);
inline jule::Bool _2031e7544_isTypeRange(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Slice<jule::Ptr<_21da1aa0b_Token>> _2031e77db_getBlockExpr(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline __jule_tuple_sx_21da1aa0b_Token__jule_tuple_sx_21da1aa0b_Token _2031e7b71_splitDelim(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::U32);
inline jule::I32 _2031e7e18_findLowestPrecOp(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Ptr<_2211aa96d_IdentExpr> _2031e81b0_buildIdentExpr(jule::Ptr<_21da1aa0b_Token>*);
inline __jule_tuple_sx_21da1aa0b_Token__jule_tuple_int _2031e8457_getRangeExprTokens(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Bool _2031e91b1_checkAssignTokens(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline _21d6755de_Log _2031ea3d2_makeErr(jule::I32, jule::I32, jule::Ptr<_21da20d96_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_21da1aa0b_Token>> _2031ea8aa_range(jule::I32*, jule::Str, jule::Str, jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline __jule_tuple_sx_21da1aa0b_Token__jule_tuple_sx_21da1aa0b_Token _2031eab52_rangeLast(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline __jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log _2031eb03c_partsKind(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::Str, jule::Bool);
inline __jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log _2031eb427_parts(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*, jule::U32, jule::Bool);
inline jule::Str _2031eb6be_getCloseKindOfBrace(jule::Str);
inline _21d6755de_Log _2031ebaa9_compilerErr(jule::Ptr<_21da1aa0b_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _2031ebed8_pushSuggestion(_21d6755de_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _2031ec280_tokstoa(jule::Slice<jule::Ptr<_21da1aa0b_Token>>*);
inline jule::Bool _20320c3c2_isPub(jule::Str*);
inline jule::Ptr<_2211a478b_TypeDecl> _20320cc63_buildVoidType(void);
inline jule::Ptr<_2211a478b_TypeDecl> _20320cea5_buildPrimType(jule::Ptr<_21da1aa0b_Token>);
inline __jule_tuple_bool__jule_tuple_bool _2215e1942_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _2215e1a74_checkArch(jule::Str);
inline jule::Bool _2215e1ba6_isPassFileAnnotation(jule::Str);
inline void _22160b73c_setOsVars(jule::Slice<jule::Str>*);
inline void _22160b990_setArchVars(jule::Slice<jule::Str>*);
inline void _22160bc48_initVars(jule::Slice<jule::Str>*, _22160b42e_CompileInfo*);
inline jule::Slice<jule::U8> _203211e65_readBuff(jule::Str);
inline _21d6755de_Log _20321221d_flatCompilerErr(jule::Str);
inline void _20321662e_pushPasses(jule::Ptr<_2212456d9_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _2032169b4_getAllUniquePasses(jule::Ptr<_2212456d9_Package>*, jule::Slice<jule::Ptr<_221242a9e_ImportInfo>>);
inline _22160b42e_CompileInfo _203216bb2_buildCompileInfo(void);
inline void _203344927_EliminateDefines(jule::Ptr<_203214e13_IR>*);
inline jule::Ptr<_221171307_Directive> _203344cac_findDirective(jule::Slice<jule::Ptr<_221171307_Directive>>*, jule::Str);
inline jule::Bool _2033450ed_hasDirective(jule::Slice<jule::Ptr<_221171307_Directive>>*, jule::Str);
inline void _203348c4a_eliminateDeadCodeOfScope(jule::Ptr<_221224135_Scope>);
inline void _203348ed1_eliminateScopeFunctions(jule::Slice<jule::Ptr<_2211d9ccc_Fn>>*);
inline void _203349223_eliminateFunctionsScopePackage(jule::Ptr<_2212456d9_Package>*);
inline void _2033494ba_eliminateScopePackage(jule::Ptr<_2212456d9_Package>*);
inline void _2033496c9_EliminateScopes(jule::Ptr<_203214e13_IR>*);
inline jule::Bool _221529e41_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _22152a24e_isConstantValidConditionalCase(jule::Ptr<_221224531_If>*);
inline jule::Bool _22152a507_isUnreachableExpr(jule::Any*);
inline jule::Bool _22152a848_isConstantValidMatchCase(jule::Ptr<_221228997_Case>*);
inline jule::Bool _22152aae0_isUnreachableConditionalCase(jule::Ptr<_221224531_If>*);
inline jule::Bool _22152ad98_isUnreachableMatchCase(jule::Ptr<_221228997_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _221533796_checkForBitShiftOpt(jule::Ptr<_2211cb692_OperandExprModel>*, jule::Ptr<_2211cb692_OperandExprModel>*);
inline void _221535a95_PushOptLevel(jule::I32);
inline void _20335367d_detectEnabled(void);
inline void _20337685a_Throw(jule::Str);
inline jule::U64 _203bcd117_unix(void);
inline jule::U64 _203bcd425_unixYearToSeconds(jule::U64, jule::Bool*);
inline jule::U64 _203bcd7aa_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _203a607a2_isCopyOptimizable(jule::Ptr<_221425c2c_Data>*);
inline jule::Bool _203a60b37_isIterCopyOptimizable(jule::Ptr<_221425c2c_Data>*, jule::Ptr<_22126b17c_Var>*);
inline jule::Str _203b3aa25_decomposeCommonEsq(jule::U8);
inline jule::Str _203b3ad11_sbtoa(jule::U8);
inline jule::Str _203b3b0a8_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _203b3b3c7_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _203b3b6d5_ftoa(jule::F64, jule::I32);
inline jule::Str _203b3b97c_itoa(jule::I64);
inline jule::Str _203b3bc24_utoa(jule::U64);
inline jule::Bool _203b3c0cb_isForwarded(jule::Ptr<_221224135_Scope>*);
inline jule::Bool _203b3c395_isBuiltinCallHasDebuginf(jule::Ptr<_2211cd9c4_FnCallExprModel>*);
inline jule::Bool _203b3c5c6_isExprComesFromBind(jule::Ptr<_221425c2c_Data>*);
inline jule::Bool _203b3c86d_isAny(jule::Ptr<_221453397_TypeKind>*);
inline void _203be1647_iterFiles(jule::Ptr<_2212456d9_Package>*, jule::Fn<void(jule::Ptr<_221421222_SymbolTable>*)>);
inline jule::Str _203be1933_concatAllParts(jule::Slice<jule::Ptr<_21da1aa0b_Token>>);
inline jule::Bool _203be1c74_containsTraitMethod(jule::Ptr<_2211ebeed_Trait>*, jule::Str*);
inline void _203be2071_pushMethodsFromInherit(jule::Ptr<_2211ebeed_Trait>*, jule::Ptr<_2211ebeed_Trait>*);
inline void _203be234b_pushMethodsFromInherits(jule::Ptr<_2211ebeed_Trait>*, jule::Ptr<_2211ebeed_Trait>*);
inline jule::Ptr<_221171307_Directive> _203c00568_findDirective(jule::Slice<jule::Ptr<_221171307_Directive>>*, jule::Str);
inline jule::Bool _203c008ed_hasDirective(jule::Slice<jule::Ptr<_221171307_Directive>>*, jule::Str);
inline jule::Bool _203c00b95_shouldInitialized(jule::Ptr<_221453397_TypeKind>*);
inline void _21d71e039_printErrorMessage(jule::Str);
inline void _21d71e28c_help(jule::Slice<jule::Str>*);
inline void _21d71e49b_version(jule::Slice<jule::Str>*);
inline void _21d71e688_toolDistos(void);
inline void _21d71e7ed_toolDistarch(void);
inline void _21d71ea0c_tool(jule::Slice<jule::Str>*);
inline void _21d71ec1b_julenv(jule::Slice<jule::Str>*);
inline void _21d720007_mod(jule::Slice<jule::Str>*);
inline jule::Bool _21d72029e_processCommand(jule::Slice<jule::Str>*);
inline void _21d720414_showInfo(void);
void entry_point(void);
inline void _21d720d2c_enableVtp(void);
inline void _21d720ed6_init(void);
inline void _203c5ce11_init(void);
inline jule::Ptr<_21c4ea91b_File> _203c5d1b9_openOutput(jule::Str*);
inline void _203c5d32e_clearObjects(void);
inline void _203c5d62b_compileIr(jule::Str, jule::Str);
inline jule::Bool _203c5d8c3_isCppSourceFile(jule::Str);
inline void _203c5dad2_pushCompCmdClang(jule::Str*);
inline void _203c5dce1_pushCompCmdGcc(jule::Str*);
inline __jule_tuple_str__jule_tuple_str _203c5e242_genCompileCmd(jule::Str, jule::Ptr<_203214e13_IR>*);
inline jule::Str _203c5e440_getCompilePath(void);
inline void _203c5e682_applyTargetIndependentOptimizations(jule::Ptr<_203214e13_IR>*);
inline void _203c5e7e7_checkCompilerFlag(void);
inline void _203c5e9b2_checkTargetArch(jule::Str);
inline void _203c5ebc1_checkTargetOs(jule::Str);
inline void _203c5edd0_checkTargetFlag(jule::Str*);
inline void _203c600de_checkOptFlag(jule::Str*);
inline void _203c60463_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _203c606e9_checkFlags(jule::Slice<jule::Str>*);
inline void _203c60908_setupSemaFlags(jule::I32*);
inline jule::Ptr<_203214e13_IR> _203c60ba0_buildIr(jule::Slice<jule::Str>*);
inline void _203c60dae_compileCommand(jule::Slice<jule::Str>*);


struct _221202d06_comptimeRangeKindMptrData {
	void(*_221202586_ready)(jule::Trait<_221202d06_comptimeRangeKind>, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_22126b17c_Var>*);
	void(*_22120294e_step)(jule::Trait<_221202d06_comptimeRangeKind>, jule::I32, jule::Ptr<_22126b17c_Var>*, jule::Ptr<_22126b17c_Var>*);
	jule::I32(*_221202bb3_len)(jule::Trait<_221202d06_comptimeRangeKind>);
};

struct _22123eded_ImporterMptrData {
	void(*_22123dd20_SetModPath)(jule::Trait<_22123eded_Importer>, jule::Str);
	jule::Str(*_22123e062_GetModPath)(jule::Trait<_22123eded_Importer>);
	jule::Str(*_22123e370_ModById)(jule::Trait<_22123eded_Importer>, jule::I32);
	jule::Ptr<_221242a9e_ImportInfo>(*_22123e67d_GetImport)(jule::Trait<_22123eded_Importer>, jule::Str);
	__jule_tuple_sx_22117005e_Ast__jule_tuple_s_21d6755de_Log(*_22123ea35_ImportPackage)(jule::Trait<_22123eded_Importer>, jule::Str, jule::Bool);
	void(*_22123ecaa_Imported)(jule::Trait<_22123eded_Importer>, jule::Ptr<_221242a9e_ImportInfo>);
};

struct _221452e35_KindMptrData {
	jule::Str(*_2214529d4_Str)(jule::Trait<_221452e35_Kind>);
	jule::Bool(*_221452ce2_Equal)(jule::Trait<_221452e35_Kind>, jule::Ptr<_221453397_TypeKind>);
};

struct _22147198c_LookupMptrData {
	jule::Ptr<_221242a9e_ImportInfo>(*_22146ee52_SelectPackage)(jule::Trait<_22147198c_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)>);
	jule::Ptr<_22126b17c_Var>(*_221470309_FindVar)(jule::Trait<_22147198c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_22145264e_TypeAlias>(*_2214706b1_FindTypeAlias)(jule::Trait<_22147198c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_2211c48cc_Struct>(*_221470a68_FindStruct)(jule::Trait<_22147198c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_2211d9ccc_Fn>(*_221470e20_FindFn)(jule::Trait<_22147198c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_2211ebeed_Trait>(*_22147122d_FindTrait)(jule::Trait<_22147198c_Lookup>, jule::Str);
	jule::Ptr<_2211ee781_Enum>(*_22147153b_FindEnum)(jule::Trait<_22147198c_Lookup>, jule::Str);
	jule::Ptr<_221200d7b_TypeEnum>(*_221471849_FindTypeEnum)(jule::Trait<_22147198c_Lookup>, jule::Str);
};

struct _203c56316_CommonFlagMptrData {
	jule::Str(*_203c26649_Name)(jule::Trait<_203c56316_CommonFlag>);
	jule::I32(*_203c2677b_Short)(jule::Trait<_203c56316_CommonFlag>);
	jule::Str(*_203c268ad_What)(jule::Trait<_203c56316_CommonFlag>);
	void(*_203c561d4_Reset)(jule::Trait<_203c56316_CommonFlag>);
};



inline void _221202586_ready_comptimeRangeKind_0(jule::Trait<_221202d06_comptimeRangeKind> _self_, jule::Ptr<_22126b17c_Var>* _1329_keyA, jule::Ptr<_22126b17c_Var>* _1346_keyB) {
	_2212060b2_ready(_self_.safe_ptr<_2212054bd_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _22120294e_step_comptimeRangeKind_0(jule::Trait<_221202d06_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_22126b17c_Var>* _1436_keyA, jule::Ptr<_22126b17c_Var>* _1453_keyB) {
	_22120647a_step(_self_.safe_ptr<_2212054bd_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _221202bb3_len_comptimeRangeKind_0(jule::Trait<_221202d06_comptimeRangeKind> _self_) {
	return _2212066de_len(_self_.safe_ptr<_2212054bd_comptimeStructFields>());
}
inline void _221202586_ready_comptimeRangeKind_1(jule::Trait<_221202d06_comptimeRangeKind> _self_, jule::Ptr<_22126b17c_Var>* _1329_keyA, jule::Ptr<_22126b17c_Var>* _1346_keyB) {
	_2212090b5_ready(_self_.safe_ptr<_221208515_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _22120294e_step_comptimeRangeKind_1(jule::Trait<_221202d06_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_22126b17c_Var>* _1436_keyA, jule::Ptr<_22126b17c_Var>* _1453_keyB) {
	_22120947d_step(_self_.safe_ptr<_221208515_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _221202bb3_len_comptimeRangeKind_1(jule::Trait<_221202d06_comptimeRangeKind> _self_) {
	return _2212096e2_len(_self_.safe_ptr<_221208515_comptimeStatics>());
}
inline void _221202586_ready_comptimeRangeKind_2(jule::Trait<_221202d06_comptimeRangeKind> _self_, jule::Ptr<_22126b17c_Var>* _1329_keyA, jule::Ptr<_22126b17c_Var>* _1346_keyB) {
	_22120b837_ready(_self_.safe_ptr<_22120abee_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _22120294e_step_comptimeRangeKind_2(jule::Trait<_221202d06_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_22126b17c_Var>* _1436_keyA, jule::Ptr<_22126b17c_Var>* _1453_keyB) {
	_22120bc00_step(_self_.safe_ptr<_22120abee_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _221202bb3_len_comptimeRangeKind_2(jule::Trait<_221202d06_comptimeRangeKind> _self_) {
	return _22120be64_len(_self_.safe_ptr<_22120abee_comptimeEnumFields>());
}
inline void _221202586_ready_comptimeRangeKind_3(jule::Trait<_221202d06_comptimeRangeKind> _self_, jule::Ptr<_22126b17c_Var>* _1329_keyA, jule::Ptr<_22126b17c_Var>* _1346_keyB) {
	_22120ed9b_ready(_self_.safe_ptr<_22120e2eb_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _22120294e_step_comptimeRangeKind_3(jule::Trait<_221202d06_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_22126b17c_Var>* _1436_keyA, jule::Ptr<_22126b17c_Var>* _1453_keyB) {
	_221210264_step(_self_.safe_ptr<_22120e2eb_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _221202bb3_len_comptimeRangeKind_3(jule::Trait<_221202d06_comptimeRangeKind> _self_) {
	return _2212104c8_len(_self_.safe_ptr<_22120e2eb_comptimeParams>());
}
inline void _221202586_ready_comptimeRangeKind_4(jule::Trait<_221202d06_comptimeRangeKind> _self_, jule::Ptr<_22126b17c_Var>* _1329_keyA, jule::Ptr<_22126b17c_Var>* _1346_keyB) {
	_221211364_ready(_self_.safe_ptr<_2212107b4_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _22120294e_step_comptimeRangeKind_4(jule::Trait<_221202d06_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_22126b17c_Var>* _1436_keyA, jule::Ptr<_22126b17c_Var>* _1453_keyB) {
	_22121172c_step(_self_.safe_ptr<_2212107b4_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _221202bb3_len_comptimeRangeKind_4(jule::Trait<_221202d06_comptimeRangeKind> _self_) {
	return _221211991_len(_self_.safe_ptr<_2212107b4_comptimeTypeInfos>());
}
inline void _22123dd20_SetModPath_Importer_0(jule::Trait<_22123eded_Importer> _self_, jule::Str _1729_path) {
	_20321320d_SetModPath(_self_.safe_ptr<_2032126a2_JuleImporter>(), _1729_path);
}
inline jule::Str _22123e062_GetModPath_Importer_0(jule::Trait<_22123eded_Importer> _self_) {
	return _203213472_GetModPath(_self_.safe_ptr<_2032126a2_JuleImporter>());
}
inline jule::Str _22123e370_ModById_Importer_0(jule::Trait<_22123eded_Importer> _self_, jule::I32 _2522_id) {
	return _203213780_ModById(_self_.safe_ptr<_2032126a2_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_221242a9e_ImportInfo> _22123e67d_GetImport_Importer_0(jule::Trait<_22123eded_Importer> _self_, jule::Str _3128_path) {
	return _203213a8d_GetImport(_self_.safe_ptr<_2032126a2_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_22117005e_Ast__jule_tuple_s_21d6755de_Log _22123ea35_ImportPackage_Importer_0(jule::Trait<_22123eded_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _203213e45_ImportPackage(_self_.safe_ptr<_2032126a2_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _22123ecaa_Imported_Importer_0(jule::Trait<_22123eded_Importer> _self_, jule::Ptr<_221242a9e_ImportInfo> _4131__0) {
	_2032141ba_Imported(_self_.safe_ptr<_2032126a2_JuleImporter>(), _4131__0);
}
inline jule::Str _2214529d4_Str_Kind_0(jule::Trait<_221452e35_Kind> _self_) {
	return _2211c7a9a_Str(_self_.safe_ptr<_2211c76e3_StructIns>());
}
inline jule::Bool _221452ce2_Equal_Kind_0(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _2211c7da8_Equal(_self_.data.as<_2211c76e3_StructIns>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_1(jule::Trait<_221452e35_Kind> _self_) {
	return _2211dccad_Str(_self_.safe_ptr<_2211dc97d_FnIns>());
}
inline jule::Bool _221452ce2_Equal_Kind_1(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _2211dd0bb_Equal(_self_.data.as<_2211dc97d_FnIns>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_2(jule::Trait<_221452e35_Kind> _self_) {
	return _2211ec3e9_Str(_self_.safe_ptr<_2211ebeed_Trait>());
}
inline jule::Bool _221452ce2_Equal_Kind_2(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _2211ec707_Equal(_self_.data.as<_2211ebeed_Trait>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_3(jule::Trait<_221452e35_Kind> _self_) {
	return _2211eeae4_Str(_self_.safe_ptr<_2211ee781_Enum>());
}
inline jule::Bool _221452ce2_Equal_Kind_3(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _2211eee02_Equal(_self_.data.as<_2211ee781_Enum>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_4(jule::Trait<_221452e35_Kind> _self_) {
	return _2212011ab_Str(_self_.safe_ptr<_221200d7b_TypeEnum>());
}
inline jule::Bool _221452ce2_Equal_Kind_4(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _2212014b9_Equal(_self_.data.as<_221200d7b_TypeEnum>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_5(jule::Trait<_221452e35_Kind> _self_) {
	return _2212033cd_Str(_self_.safe_ptr<_221202ed2_comptimeRange>());
}
inline jule::Bool _221452ce2_Equal_Kind_5(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _2212036db_Equal(_self_.data.as<_221202ed2_comptimeRange>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_6(jule::Trait<_221452e35_Kind> _self_) {
	return _221203d3a_Str(_self_.safe_ptr<_2212039c7_comptimeStructField>());
}
inline jule::Bool _221452ce2_Equal_Kind_6(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _221204148_Equal(_self_.data.as<_2212039c7_comptimeStructField>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_7(jule::Trait<_221452e35_Kind> _self_) {
	return _221205875_Str(_self_.safe_ptr<_2212054bd_comptimeStructFields>());
}
inline jule::Bool _221452ce2_Equal_Kind_7(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _221205b83_Equal(_self_.data.as<_2212054bd_comptimeStructFields>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_8(jule::Trait<_221452e35_Kind> _self_) {
	return _221206d3d_Str(_self_.safe_ptr<_2212069ca_comptimeStatic>());
}
inline jule::Bool _221452ce2_Equal_Kind_8(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _22120714b_Equal(_self_.data.as<_2212069ca_comptimeStatic>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_9(jule::Trait<_221452e35_Kind> _self_) {
	return _221208878_Str(_self_.safe_ptr<_221208515_comptimeStatics>());
}
inline jule::Bool _221452ce2_Equal_Kind_9(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _221208b86_Equal(_self_.data.as<_221208515_comptimeStatics>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_10(jule::Trait<_221452e35_Kind> _self_) {
	return _221209d41_Str(_self_.safe_ptr<_2212099cd_comptimeEnumField>());
}
inline jule::Bool _221452ce2_Equal_Kind_10(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _22120a14e_Equal(_self_.data.as<_2212099cd_comptimeEnumField>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_11(jule::Trait<_221452e35_Kind> _self_) {
	return _22120b172_Str(_self_.safe_ptr<_22120abee_comptimeEnumFields>());
}
inline jule::Bool _221452ce2_Equal_Kind_11(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _22120b480_Equal(_self_.data.as<_22120abee_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_12(jule::Trait<_221452e35_Kind> _self_) {
	return _22120c5b3_Str(_self_.safe_ptr<_22120c250_comptimeParam>());
}
inline jule::Bool _221452ce2_Equal_Kind_12(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _22120c8c1_Equal(_self_.data.as<_22120c250_comptimeParam>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_13(jule::Trait<_221452e35_Kind> _self_) {
	return _22120e65e_Str(_self_.safe_ptr<_22120e2eb_comptimeParams>());
}
inline jule::Bool _221452ce2_Equal_Kind_13(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _22120e96c_Equal(_self_.data.as<_22120e2eb_comptimeParams>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_14(jule::Trait<_221452e35_Kind> _self_) {
	return _221210b27_Str(_self_.safe_ptr<_2212107b4_comptimeTypeInfos>());
}
inline jule::Bool _221452ce2_Equal_Kind_14(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _221210e35_Equal(_self_.data.as<_2212107b4_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_15(jule::Trait<_221452e35_Kind> _self_) {
	return _2212120e0_Str(_self_.safe_ptr<_221211c7c_comptimeTypeInfo>());
}
inline jule::Bool _221452ce2_Equal_Kind_15(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _2212123ed_Equal(_self_.data.as<_221211c7c_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_16(jule::Trait<_221452e35_Kind> _self_) {
	return _221217ada_Str(_self_.safe_ptr<_221217777_comptimeValue>());
}
inline jule::Bool _221452ce2_Equal_Kind_16(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _221217de8_Equal(_self_.data.as<_221217777_comptimeValue>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_17(jule::Trait<_221452e35_Kind> _self_) {
	return _221453793_Str(_self_.safe_ptr<_221453397_TypeKind>());
}
inline jule::Bool _221452ce2_Equal_Kind_17(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _221453aa1_Equal(_self_.data.as<_221453397_TypeKind>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_18(jule::Trait<_221452e35_Kind> _self_) {
	return _22145a932_Str(_self_.safe_ptr<_22145a5be_Prim>());
}
inline jule::Bool _221452ce2_Equal_Kind_18(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _22145ac40_Equal(_self_.data.as<_22145a5be_Prim>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_19(jule::Trait<_221452e35_Kind> _self_) {
	return _22145e1b6_Str(_self_.safe_ptr<_22145dd53_Sptr>());
}
inline jule::Bool _221452ce2_Equal_Kind_19(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _22145e4c4_Equal(_self_.data.as<_22145dd53_Sptr>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_20(jule::Trait<_221452e35_Kind> _self_) {
	return _22145ecbb_Str(_self_.safe_ptr<_22145e7b0_Slc>());
}
inline jule::Bool _221452ce2_Equal_Kind_20(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _2214600c9_Equal(_self_.data.as<_22145e7b0_Slc>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_21(jule::Trait<_221452e35_Kind> _self_) {
	return _2214606a1_Str(_self_.safe_ptr<_22146033d_Tuple>());
}
inline jule::Bool _221452ce2_Equal_Kind_21(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _2214609ae_Equal(_self_.data.as<_22146033d_Tuple>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_22(jule::Trait<_221452e35_Kind> _self_) {
	return _2214611c9_Str(_self_.safe_ptr<_221460d66_Map>());
}
inline jule::Bool _221452ce2_Equal_Kind_22(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _2214614d7_Equal(_self_.data.as<_221460d66_Map>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_23(jule::Trait<_221452e35_Kind> _self_) {
	return _221461cbd_Str(_self_.safe_ptr<_22146195a_Arr>());
}
inline jule::Bool _221452ce2_Equal_Kind_23(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _2214620cb_Equal(_self_.data.as<_22146195a_Arr>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_24(jule::Trait<_221452e35_Kind> _self_) {
	return _22146272a_Str(_self_.safe_ptr<_2214623b7_Ptr>());
}
inline jule::Bool _221452ce2_Equal_Kind_24(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _221462a38_Equal(_self_.data.as<_2214623b7_Ptr>(), _5621_other);
}
inline jule::Str _2214529d4_Str_Kind_25(jule::Trait<_221452e35_Kind> _self_) {
	return _203be32e7_Str(_self_.safe_ptr<_203be303e_customType>());
}
inline jule::Bool _221452ce2_Equal_Kind_25(jule::Trait<_221452e35_Kind> _self_, jule::Ptr<_221453397_TypeKind> _5621_other) {
	return _203be3605_Equal(_self_.data.as<_203be303e_customType>(), _5621_other);
}
inline jule::Ptr<_221242a9e_ImportInfo> _22146ee52_SelectPackage_Lookup_0(jule::Trait<_22147198c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)> _932_selector) {
	return _22122b1d6_SelectPackage(_self_.safe_ptr<_22122ac63_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_22126b17c_Var> _221470309_FindVar_Lookup_0(jule::Trait<_22147198c_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_cpp_linked) {
	return _22122b58d_FindVar(_self_.safe_ptr<_22122ac63_scopeChecker>(), _1326_ident, _1338_cpp_linked);
}
inline jule::Ptr<_22145264e_TypeAlias> _2214706b1_FindTypeAlias_Lookup_0(jule::Trait<_22147198c_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_cpp_linked) {
	return _22122b945_FindTypeAlias(_self_.safe_ptr<_22122ac63_scopeChecker>(), _1732_ident, _1744_cpp_linked);
}
inline jule::Ptr<_2211c48cc_Struct> _221470a68_FindStruct_Lookup_0(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_cpp_linked) {
	return _22122bcec_FindStruct(_self_.safe_ptr<_22122ac63_scopeChecker>(), _2129_ident, _2141_cpp_linked);
}
inline jule::Ptr<_2211d9ccc_Fn> _221470e20_FindFn_Lookup_0(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_cpp_linked) {
	return _22122c1a4_FindFn(_self_.safe_ptr<_22122ac63_scopeChecker>(), _2525_ident, _2537_cpp_linked);
}
inline jule::Ptr<_2211ebeed_Trait> _22147122d_FindTrait_Lookup_0(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2928_ident) {
	return _22122c4b2_FindTrait(_self_.safe_ptr<_22122ac63_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_2211ee781_Enum> _22147153b_FindEnum_Lookup_0(jule::Trait<_22147198c_Lookup> _self_, jule::Str _3327_ident) {
	return _22122c7c0_FindEnum(_self_.safe_ptr<_22122ac63_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_221200d7b_TypeEnum> _221471849_FindTypeEnum_Lookup_0(jule::Trait<_22147198c_Lookup> _self_, jule::Str _3731_ident) {
	return _22122cacd_FindTypeEnum(_self_.safe_ptr<_22122ac63_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_221242a9e_ImportInfo> _22146ee52_SelectPackage_Lookup_1(jule::Trait<_22147198c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)> _932_selector) {
	return _2212430aa_SelectPackage(_self_.safe_ptr<_221242a9e_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_22126b17c_Var> _221470309_FindVar_Lookup_1(jule::Trait<_22147198c_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_cpp_linked) {
	return _221243462_FindVar(_self_.safe_ptr<_221242a9e_ImportInfo>(), _1326_ident, _1338_cpp_linked);
}
inline jule::Ptr<_22145264e_TypeAlias> _2214706b1_FindTypeAlias_Lookup_1(jule::Trait<_22147198c_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_cpp_linked) {
	return _221243819_FindTypeAlias(_self_.safe_ptr<_221242a9e_ImportInfo>(), _1732_ident, _1744_cpp_linked);
}
inline jule::Ptr<_2211c48cc_Struct> _221470a68_FindStruct_Lookup_1(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_cpp_linked) {
	return _221243bc1_FindStruct(_self_.safe_ptr<_221242a9e_ImportInfo>(), _2129_ident, _2141_cpp_linked);
}
inline jule::Ptr<_2211d9ccc_Fn> _221470e20_FindFn_Lookup_1(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_cpp_linked) {
	return _221244078_FindFn(_self_.safe_ptr<_221242a9e_ImportInfo>(), _2525_ident, _2537_cpp_linked);
}
inline jule::Ptr<_2211ebeed_Trait> _22147122d_FindTrait_Lookup_1(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2928_ident) {
	return _221244386_FindTrait(_self_.safe_ptr<_221242a9e_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_2211ee781_Enum> _22147153b_FindEnum_Lookup_1(jule::Trait<_22147198c_Lookup> _self_, jule::Str _3327_ident) {
	return _221244694_FindEnum(_self_.safe_ptr<_221242a9e_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_221200d7b_TypeEnum> _221471849_FindTypeEnum_Lookup_1(jule::Trait<_22147198c_Lookup> _self_, jule::Str _3731_ident) {
	return _2212449a2_FindTypeEnum(_self_.safe_ptr<_221242a9e_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_221242a9e_ImportInfo> _22146ee52_SelectPackage_Lookup_2(jule::Trait<_22147198c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)> _932_selector) {
	return _221245ba1_SelectPackage(_self_.safe_ptr<_2212456d9_Package>(), _932_selector);
}
inline jule::Ptr<_22126b17c_Var> _221470309_FindVar_Lookup_2(jule::Trait<_22147198c_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_cpp_linked) {
	return _221246058_FindVar(_self_.safe_ptr<_2212456d9_Package>(), _1326_ident, _1338_cpp_linked);
}
inline jule::Ptr<_22145264e_TypeAlias> _2214706b1_FindTypeAlias_Lookup_2(jule::Trait<_22147198c_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_cpp_linked) {
	return _221246410_FindTypeAlias(_self_.safe_ptr<_2212456d9_Package>(), _1732_ident, _1744_cpp_linked);
}
inline jule::Ptr<_2211c48cc_Struct> _221470a68_FindStruct_Lookup_2(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_cpp_linked) {
	return _2212467b7_FindStruct(_self_.safe_ptr<_2212456d9_Package>(), _2129_ident, _2141_cpp_linked);
}
inline jule::Ptr<_2211d9ccc_Fn> _221470e20_FindFn_Lookup_2(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_cpp_linked) {
	return _221246b6e_FindFn(_self_.safe_ptr<_2212456d9_Package>(), _2525_ident, _2537_cpp_linked);
}
inline jule::Ptr<_2211ebeed_Trait> _22147122d_FindTrait_Lookup_2(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2928_ident) {
	return _221246e7c_FindTrait(_self_.safe_ptr<_2212456d9_Package>(), _2928_ident);
}
inline jule::Ptr<_2211ee781_Enum> _22147153b_FindEnum_Lookup_2(jule::Trait<_22147198c_Lookup> _self_, jule::Str _3327_ident) {
	return _22124728a_FindEnum(_self_.safe_ptr<_2212456d9_Package>(), _3327_ident);
}
inline jule::Ptr<_221200d7b_TypeEnum> _221471849_FindTypeEnum_Lookup_2(jule::Trait<_22147198c_Lookup> _self_, jule::Str _3731_ident) {
	return _221247598_FindTypeEnum(_self_.safe_ptr<_2212456d9_Package>(), _3731_ident);
}
inline jule::Ptr<_221242a9e_ImportInfo> _22146ee52_SelectPackage_Lookup_3(jule::Trait<_22147198c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)> _932_selector) {
	return _22124b2e4_SelectPackage(_self_.safe_ptr<_22124ad71_Sema>(), _932_selector);
}
inline jule::Ptr<_22126b17c_Var> _221470309_FindVar_Lookup_3(jule::Trait<_22147198c_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_cpp_linked) {
	return _22124b69b_FindVar(_self_.safe_ptr<_22124ad71_Sema>(), _1326_ident, _1338_cpp_linked);
}
inline jule::Ptr<_22145264e_TypeAlias> _2214706b1_FindTypeAlias_Lookup_3(jule::Trait<_22147198c_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_cpp_linked) {
	return _22124ba53_FindTypeAlias(_self_.safe_ptr<_22124ad71_Sema>(), _1732_ident, _1744_cpp_linked);
}
inline jule::Ptr<_2211c48cc_Struct> _221470a68_FindStruct_Lookup_3(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_cpp_linked) {
	return _22124be0a_FindStruct(_self_.safe_ptr<_22124ad71_Sema>(), _2129_ident, _2141_cpp_linked);
}
inline jule::Ptr<_2211d9ccc_Fn> _221470e20_FindFn_Lookup_3(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_cpp_linked) {
	return _22124c2b2_FindFn(_self_.safe_ptr<_22124ad71_Sema>(), _2525_ident, _2537_cpp_linked);
}
inline jule::Ptr<_2211ebeed_Trait> _22147122d_FindTrait_Lookup_3(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2928_ident) {
	return _22124c5c0_FindTrait(_self_.safe_ptr<_22124ad71_Sema>(), _2928_ident);
}
inline jule::Ptr<_2211ee781_Enum> _22147153b_FindEnum_Lookup_3(jule::Trait<_22147198c_Lookup> _self_, jule::Str _3327_ident) {
	return _22124c8cd_FindEnum(_self_.safe_ptr<_22124ad71_Sema>(), _3327_ident);
}
inline jule::Ptr<_221200d7b_TypeEnum> _221471849_FindTypeEnum_Lookup_3(jule::Trait<_22147198c_Lookup> _self_, jule::Str _3731_ident) {
	return _22124cbdb_FindTypeEnum(_self_.safe_ptr<_22124ad71_Sema>(), _3731_ident);
}
inline jule::Ptr<_221242a9e_ImportInfo> _22146ee52_SelectPackage_Lookup_4(jule::Trait<_22147198c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)> _932_selector) {
	return _22142172d_SelectPackage(_self_.safe_ptr<_221421222_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_22126b17c_Var> _221470309_FindVar_Lookup_4(jule::Trait<_22147198c_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_cpp_linked) {
	return _221421ad5_FindVar(_self_.safe_ptr<_221421222_SymbolTable>(), _1326_ident, _1338_cpp_linked);
}
inline jule::Ptr<_22145264e_TypeAlias> _2214706b1_FindTypeAlias_Lookup_4(jule::Trait<_22147198c_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_cpp_linked) {
	return _221421e8c_FindTypeAlias(_self_.safe_ptr<_221421222_SymbolTable>(), _1732_ident, _1744_cpp_linked);
}
inline jule::Ptr<_2211c48cc_Struct> _221470a68_FindStruct_Lookup_4(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_cpp_linked) {
	return _221422344_FindStruct(_self_.safe_ptr<_221421222_SymbolTable>(), _2129_ident, _2141_cpp_linked);
}
inline jule::Ptr<_2211d9ccc_Fn> _221470e20_FindFn_Lookup_4(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_cpp_linked) {
	return _2214226eb_FindFn(_self_.safe_ptr<_221421222_SymbolTable>(), _2525_ident, _2537_cpp_linked);
}
inline jule::Ptr<_2211ebeed_Trait> _22147122d_FindTrait_Lookup_4(jule::Trait<_22147198c_Lookup> _self_, jule::Str _2928_ident) {
	return _221422a09_FindTrait(_self_.safe_ptr<_221421222_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_2211ee781_Enum> _22147153b_FindEnum_Lookup_4(jule::Trait<_22147198c_Lookup> _self_, jule::Str _3327_ident) {
	return _221422d17_FindEnum(_self_.safe_ptr<_221421222_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_221200d7b_TypeEnum> _221471849_FindTypeEnum_Lookup_4(jule::Trait<_22147198c_Lookup> _self_, jule::Str _3731_ident) {
	return _221423125_FindTypeEnum(_self_.safe_ptr<_221421222_SymbolTable>(), _3731_ident);
}
inline jule::Str _203c26649_Name_CommonFlag_0(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _2080e5bbd_Name(_self_.safe_ptr<_2080e576c_Flag>());
}
inline jule::I32 _203c2677b_Short_CommonFlag_0(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _2080e6075_Short(_self_.safe_ptr<_2080e576c_Flag>());
}
inline jule::Str _203c268ad_What_CommonFlag_0(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _2080e5d00_What(_self_.safe_ptr<_2080e576c_Flag>());
}
inline void _203c561d4_Reset_CommonFlag_0(jule::Trait<_203c56316_CommonFlag> _self_) {
	_2080e5e32_Reset(_self_.safe_ptr<_2080e576c_Flag>());
}
inline jule::Str _203c26649_Name_CommonFlag_1(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _2080e90cd_Name(_self_.safe_ptr<_2080e9540_Flag>());
}
inline jule::I32 _203c2677b_Short_CommonFlag_1(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _2080e9a90_Short(_self_.safe_ptr<_2080e9540_Flag>());
}
inline jule::Str _203c268ad_What_CommonFlag_1(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _2080e982b_What(_self_.safe_ptr<_2080e9540_Flag>());
}
inline void _203c561d4_Reset_CommonFlag_1(jule::Trait<_203c56316_CommonFlag> _self_) {
	_2080e995d_Reset(_self_.safe_ptr<_2080e9540_Flag>());
}
inline jule::Str _203c26649_Name_CommonFlag_2(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _2080ec895_Name(_self_.safe_ptr<_2080ecd07_Flag>());
}
inline jule::I32 _203c2677b_Short_CommonFlag_2(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _2080ed357_Short(_self_.safe_ptr<_2080ecd07_Flag>());
}
inline jule::Str _203c268ad_What_CommonFlag_2(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _2080ed0e3_What(_self_.safe_ptr<_2080ecd07_Flag>());
}
inline void _203c561d4_Reset_CommonFlag_2(jule::Trait<_203c56316_CommonFlag> _self_) {
	_2080ed225_Reset(_self_.safe_ptr<_2080ecd07_Flag>());
}
inline jule::Str _203c26649_Name_CommonFlag_3(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _2081011a1_Name(_self_.safe_ptr<_208101613_Flag>());
}
inline jule::I32 _203c2677b_Short_CommonFlag_3(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _208101b63_Short(_self_.safe_ptr<_208101613_Flag>());
}
inline jule::Str _203c268ad_What_CommonFlag_3(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _2081018ee_What(_self_.safe_ptr<_208101613_Flag>());
}
inline void _203c561d4_Reset_CommonFlag_3(jule::Trait<_203c56316_CommonFlag> _self_) {
	_208101a31_Reset(_self_.safe_ptr<_208101613_Flag>());
}
inline jule::Str _203c26649_Name_CommonFlag_4(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _208104968_Name(_self_.safe_ptr<_208104dca_Flag>());
}
inline jule::I32 _203c2677b_Short_CommonFlag_4(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _20810542a_Short(_self_.safe_ptr<_208104dca_Flag>());
}
inline jule::Str _203c268ad_What_CommonFlag_4(jule::Trait<_203c56316_CommonFlag> _self_) {
	return _2081051b6_What(_self_.safe_ptr<_208104dca_Flag>());
}
inline void _203c561d4_Reset_CommonFlag_4(jule::Trait<_203c56316_CommonFlag> _self_) {
	_2081052e8_Reset(_self_.safe_ptr<_208104dca_Flag>());
}


static _221202d06_comptimeRangeKindMptrData _221202d06_comptimeRangeKind_mptr_data[] = {
	{
		._221202586_ready=_221202586_ready_comptimeRangeKind_0,
		._22120294e_step=_22120294e_step_comptimeRangeKind_0,
		._221202bb3_len=_221202bb3_len_comptimeRangeKind_0,
	},
	{
		._221202586_ready=_221202586_ready_comptimeRangeKind_1,
		._22120294e_step=_22120294e_step_comptimeRangeKind_1,
		._221202bb3_len=_221202bb3_len_comptimeRangeKind_1,
	},
	{
		._221202586_ready=_221202586_ready_comptimeRangeKind_2,
		._22120294e_step=_22120294e_step_comptimeRangeKind_2,
		._221202bb3_len=_221202bb3_len_comptimeRangeKind_2,
	},
	{
		._221202586_ready=_221202586_ready_comptimeRangeKind_3,
		._22120294e_step=_22120294e_step_comptimeRangeKind_3,
		._221202bb3_len=_221202bb3_len_comptimeRangeKind_3,
	},
	{
		._221202586_ready=_221202586_ready_comptimeRangeKind_4,
		._22120294e_step=_22120294e_step_comptimeRangeKind_4,
		._221202bb3_len=_221202bb3_len_comptimeRangeKind_4,
	},
};
static _22123eded_ImporterMptrData _22123eded_Importer_mptr_data[] = {
	{
		._22123dd20_SetModPath=_22123dd20_SetModPath_Importer_0,
		._22123e062_GetModPath=_22123e062_GetModPath_Importer_0,
		._22123e370_ModById=_22123e370_ModById_Importer_0,
		._22123e67d_GetImport=_22123e67d_GetImport_Importer_0,
		._22123ea35_ImportPackage=_22123ea35_ImportPackage_Importer_0,
		._22123ecaa_Imported=_22123ecaa_Imported_Importer_0,
	},
};
static _221452e35_KindMptrData _221452e35_Kind_mptr_data[] = {
	{
		._2214529d4_Str=_2214529d4_Str_Kind_0,
		._221452ce2_Equal=_221452ce2_Equal_Kind_0,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_1,
		._221452ce2_Equal=_221452ce2_Equal_Kind_1,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_2,
		._221452ce2_Equal=_221452ce2_Equal_Kind_2,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_3,
		._221452ce2_Equal=_221452ce2_Equal_Kind_3,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_4,
		._221452ce2_Equal=_221452ce2_Equal_Kind_4,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_5,
		._221452ce2_Equal=_221452ce2_Equal_Kind_5,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_6,
		._221452ce2_Equal=_221452ce2_Equal_Kind_6,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_7,
		._221452ce2_Equal=_221452ce2_Equal_Kind_7,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_8,
		._221452ce2_Equal=_221452ce2_Equal_Kind_8,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_9,
		._221452ce2_Equal=_221452ce2_Equal_Kind_9,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_10,
		._221452ce2_Equal=_221452ce2_Equal_Kind_10,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_11,
		._221452ce2_Equal=_221452ce2_Equal_Kind_11,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_12,
		._221452ce2_Equal=_221452ce2_Equal_Kind_12,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_13,
		._221452ce2_Equal=_221452ce2_Equal_Kind_13,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_14,
		._221452ce2_Equal=_221452ce2_Equal_Kind_14,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_15,
		._221452ce2_Equal=_221452ce2_Equal_Kind_15,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_16,
		._221452ce2_Equal=_221452ce2_Equal_Kind_16,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_17,
		._221452ce2_Equal=_221452ce2_Equal_Kind_17,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_18,
		._221452ce2_Equal=_221452ce2_Equal_Kind_18,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_19,
		._221452ce2_Equal=_221452ce2_Equal_Kind_19,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_20,
		._221452ce2_Equal=_221452ce2_Equal_Kind_20,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_21,
		._221452ce2_Equal=_221452ce2_Equal_Kind_21,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_22,
		._221452ce2_Equal=_221452ce2_Equal_Kind_22,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_23,
		._221452ce2_Equal=_221452ce2_Equal_Kind_23,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_24,
		._221452ce2_Equal=_221452ce2_Equal_Kind_24,
	},
	{
		._2214529d4_Str=_2214529d4_Str_Kind_25,
		._221452ce2_Equal=_221452ce2_Equal_Kind_25,
	},
};
static _22147198c_LookupMptrData _22147198c_Lookup_mptr_data[] = {
	{
		._22146ee52_SelectPackage=_22146ee52_SelectPackage_Lookup_0,
		._221470309_FindVar=_221470309_FindVar_Lookup_0,
		._2214706b1_FindTypeAlias=_2214706b1_FindTypeAlias_Lookup_0,
		._221470a68_FindStruct=_221470a68_FindStruct_Lookup_0,
		._221470e20_FindFn=_221470e20_FindFn_Lookup_0,
		._22147122d_FindTrait=_22147122d_FindTrait_Lookup_0,
		._22147153b_FindEnum=_22147153b_FindEnum_Lookup_0,
		._221471849_FindTypeEnum=_221471849_FindTypeEnum_Lookup_0,
	},
	{
		._22146ee52_SelectPackage=_22146ee52_SelectPackage_Lookup_1,
		._221470309_FindVar=_221470309_FindVar_Lookup_1,
		._2214706b1_FindTypeAlias=_2214706b1_FindTypeAlias_Lookup_1,
		._221470a68_FindStruct=_221470a68_FindStruct_Lookup_1,
		._221470e20_FindFn=_221470e20_FindFn_Lookup_1,
		._22147122d_FindTrait=_22147122d_FindTrait_Lookup_1,
		._22147153b_FindEnum=_22147153b_FindEnum_Lookup_1,
		._221471849_FindTypeEnum=_221471849_FindTypeEnum_Lookup_1,
	},
	{
		._22146ee52_SelectPackage=_22146ee52_SelectPackage_Lookup_2,
		._221470309_FindVar=_221470309_FindVar_Lookup_2,
		._2214706b1_FindTypeAlias=_2214706b1_FindTypeAlias_Lookup_2,
		._221470a68_FindStruct=_221470a68_FindStruct_Lookup_2,
		._221470e20_FindFn=_221470e20_FindFn_Lookup_2,
		._22147122d_FindTrait=_22147122d_FindTrait_Lookup_2,
		._22147153b_FindEnum=_22147153b_FindEnum_Lookup_2,
		._221471849_FindTypeEnum=_221471849_FindTypeEnum_Lookup_2,
	},
	{
		._22146ee52_SelectPackage=_22146ee52_SelectPackage_Lookup_3,
		._221470309_FindVar=_221470309_FindVar_Lookup_3,
		._2214706b1_FindTypeAlias=_2214706b1_FindTypeAlias_Lookup_3,
		._221470a68_FindStruct=_221470a68_FindStruct_Lookup_3,
		._221470e20_FindFn=_221470e20_FindFn_Lookup_3,
		._22147122d_FindTrait=_22147122d_FindTrait_Lookup_3,
		._22147153b_FindEnum=_22147153b_FindEnum_Lookup_3,
		._221471849_FindTypeEnum=_221471849_FindTypeEnum_Lookup_3,
	},
	{
		._22146ee52_SelectPackage=_22146ee52_SelectPackage_Lookup_4,
		._221470309_FindVar=_221470309_FindVar_Lookup_4,
		._2214706b1_FindTypeAlias=_2214706b1_FindTypeAlias_Lookup_4,
		._221470a68_FindStruct=_221470a68_FindStruct_Lookup_4,
		._221470e20_FindFn=_221470e20_FindFn_Lookup_4,
		._22147122d_FindTrait=_22147122d_FindTrait_Lookup_4,
		._22147153b_FindEnum=_22147153b_FindEnum_Lookup_4,
		._221471849_FindTypeEnum=_221471849_FindTypeEnum_Lookup_4,
	},
};
static _203c56316_CommonFlagMptrData _203c56316_CommonFlag_mptr_data[] = {
	{
		._203c26649_Name=_203c26649_Name_CommonFlag_0,
		._203c2677b_Short=_203c2677b_Short_CommonFlag_0,
		._203c268ad_What=_203c268ad_What_CommonFlag_0,
		._203c561d4_Reset=_203c561d4_Reset_CommonFlag_0,
	},
	{
		._203c26649_Name=_203c26649_Name_CommonFlag_1,
		._203c2677b_Short=_203c2677b_Short_CommonFlag_1,
		._203c268ad_What=_203c268ad_What_CommonFlag_1,
		._203c561d4_Reset=_203c561d4_Reset_CommonFlag_1,
	},
	{
		._203c26649_Name=_203c26649_Name_CommonFlag_2,
		._203c2677b_Short=_203c2677b_Short_CommonFlag_2,
		._203c268ad_What=_203c268ad_What_CommonFlag_2,
		._203c561d4_Reset=_203c561d4_Reset_CommonFlag_2,
	},
	{
		._203c26649_Name=_203c26649_Name_CommonFlag_3,
		._203c2677b_Short=_203c2677b_Short_CommonFlag_3,
		._203c268ad_What=_203c268ad_What_CommonFlag_3,
		._203c561d4_Reset=_203c561d4_Reset_CommonFlag_3,
	},
	{
		._203c26649_Name=_203c26649_Name_CommonFlag_4,
		._203c2677b_Short=_203c2677b_Short_CommonFlag_4,
		._203c268ad_What=_203c268ad_What_CommonFlag_4,
		._203c561d4_Reset=_203c561d4_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211dc97d_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_2211dc97d_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_22126b17c_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_22126b17c_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211c76e3_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_2211c76e3_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ebeed_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_2211ebeed_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211c0785_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_2211c0785_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211baa5a_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_2211baa5a_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211be9a4_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_2211be9a4_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b621a_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_2211b621a_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211c017a_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_2211c017a_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b71e9_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_2211b71e9_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211bcde2_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_2211bcde2_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211be003_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_2211be003_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21e6c53da_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_21e6c53da_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a4d52_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_2211a4d52_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221226874_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_221226874_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221224135_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_221224135_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d5e3d_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_2211d5e3d_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221425c2c_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_221425c2c_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d6ed8_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_2211d6ed8_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d48ed_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_2211d48ed_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d32d1_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_2211d32d1_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d2ac7_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_2211d2ac7_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d2eb2_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_2211d2eb2_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d3aa6_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_2211d3aa6_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d405c_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_2211d405c_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d5a53_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_2211d5a53_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d56e0_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_2211d56e0_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d72c4_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_2211d72c4_FreeExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211cd9c4_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_2211cd9c4_FnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221224b91_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_221224b91_Conditional> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221224e7c_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_221224e7c_InfIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b84d6_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_2211b84d6_WhileKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221225400_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_221225400_WhileIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b8d77_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_2211b8d77_RangeKind> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221225cd5_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_221225cd5_RangeIter> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2212261d1_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_2212261d1_ContSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221226b60_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_221226b60_GotoSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221227017_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_221227017_Postfix> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_22122748a_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_22122748a_Assign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ce2ee_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_2211ce2ee_IndexingExprModel> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221227842_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_221227842_MultiAssign> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221227e4c_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_221227e4c_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_22122904c_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_22122904c_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221226588_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_221226588_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2212293c1_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_2212293c1_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b4724_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_2211b4724_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a8cac_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_2211a8cac_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ba384_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_2211ba384_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b7c11_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_2211b7c11_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b95d6_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_2211b95d6_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b1e3b_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_2211b1e3b_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b22e3_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_2211b22e3_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b3228_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_2211b3228_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211bb6a4_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_2211bb6a4_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b25ce_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_2211b25ce_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b922e_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_2211b922e_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b75a1_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_2211b75a1_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a964d_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_2211a964d_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d9ccc_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_2211d9ccc_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211c48cc_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_2211c48cc_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_22145264e_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_22145264e_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ee781_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_2211ee781_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221200d7b_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_221200d7b_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d0a5e_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_2211d0a5e_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d1345_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_2211d1345_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d1d90_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_2211d1d90_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d2401_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_2211d2401_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211cc011_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_2211cc011_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a6c99_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_2211a6c99_ArrTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a6040_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_2211a6040_SlcTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a6617_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_2211a6617_PtrTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a5b44_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_2211a5b44_SptrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a74e7_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_2211a74e7_MapTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a632b_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_2211a632b_TupleTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ab52e_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_2211ab52e_VariadicExpr> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211cdd7b_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_2211cdd7b_SliceExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ad71d_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_2211ad71d_FieldExprPair> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211aebb4_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_2211aebb4_KeyValPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211aa96d_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_2211aa96d_IdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a9939_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_2211a9939_TupleExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d26ed_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_2211d26ed_TupleExprModel> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d6812_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_2211d6812_RuneExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221453397_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_221453397_TypeKind> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d1aa4_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_2211d1aa4_ArrayExprModel> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ac211_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_2211ac211_SubIdentExpr> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a54a1_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_2211a54a1_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ab177_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_2211ab177_UnaryExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a478b_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_2211a478b_TypeDecl> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211abc8d_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_2211abc8d_NsSelectionExpr> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a5858_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_2211a5858_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d0520_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_2211d0520_SlicingExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211cd122_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_2211cd122_CastingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b039b_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_2211b039b_SliceExpr> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211cc7b4_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_2211cc7b4_StructLitExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d16db_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_2211d16db_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ceed1_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_2211ceed1_MapExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ce6a6_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_2211ce6a6_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a9098_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_2211a9098_RangeExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211a9ce1_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_2211a9ce1_LitExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211aa4ea_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_2211aa4ea_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b0c1a_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_2211b0c1a_IndexingExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211b1325_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_2211b1325_SlicingExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ab8d6_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_2211ab8d6_CastExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ade6b_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_2211ade6b_StructLit> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211acc8e_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_2211acc8e_FnCallExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ae3de_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_2211ae3de_BraceLit> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ac684_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_2211ac684_BinopExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211cbb59_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_2211cbb59_BinopExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211ccac2_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_2211ccac2_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d36bb_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_2211d36bb_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d4513_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_2211d4513_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d4c1c_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_2211d4c1c_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d503b_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_2211d503b_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d623a_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_2211d623a_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d6526_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_2211d6526_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2211d6b20_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_2211d6b20_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221524b83_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_221524b83_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_22152505c_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_22152505c_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221523b3d_StrAppendExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_221523b3d_StrAppendExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221524644_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_221524644_PushToSliceExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221523775_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_221523775_StrCompExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_221523e29_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_221523e29_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2215242ae_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_2215242ae_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type130_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type130_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=__jule_any_type130_eq, .to_str=__jule_any_type130_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type130 && __jule_any_type130_eq(any.data.alloc, (void*)&other); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _21d71dd5d_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _203c5c707_OutDir = jule::Str("dist", 4);
jule::Str _203c5c98d_OutName = jule::Str("ir.cpp", 6);
jule::Str _203c5cc57_Out = jule::Str();
jule::Str _21b53643b_Compiler = jule::Str();
jule::Str _21b5376b2_CompilerPath = jule::Str();
jule::Str _21b5378d2_CppStd = jule::Str("cpp17", 5);
jule::Bool _21b537b79_Shadowing = false;
jule::Bool _21b537dee_Transpilation = false;
jule::Bool _21b5381b8_Test = false;
jule::Bool _21b538482_RC = true;
jule::Bool _21b53885b_Safety = true;
jule::Bool _21b538b25_Production = false;
jule::Uintptr _21c4c641e_STDIN = _21c4c6bd3_GetStdHandle(static_cast<jule::Uintptr>(4294967286LLU));
jule::Uintptr _21c4c66d8_STDOUT = _21c4c6bd3_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));
jule::Uintptr _21c4c696e_STDERR = _21c4c6bd3_GetStdHandle(static_cast<jule::Uintptr>(4294967284LLU));
jule::Array<jule::U8,256> _21c5cadb4_first = jule::Array<jule::U8,256>({});
jule::Array<_21c5cb447_acceptRange,16> _21c5cb755_acceptRanges = jule::Array<_21c5cb447_acceptRange,16>({_21c5cb447_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_21c5cb447_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_21c5cb447_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_21c5cb447_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_21c5cb447_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_21d59c9bc_RangeTable> _21d53820a__L = jule::new_ptr<_21d59c9bc_RangeTable>(_21d59c9bc_RangeTable{._field_R16=jule::Slice<_21d59c0c6_Range16>::make({_21d59c0c6_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_21d59c0c6_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_21d59c0c6_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_21d59c0c6_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_21d59c0c6_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_21d59c0c6_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_21d59c0c6_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_21d59c0c6_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_21d59c0c6_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_21d59c0c6_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_21d59c0c6_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_21d59c0c6_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_21d59c0c6_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_21d59c0c6_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_21d59c0c6_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_21d59c0c6_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_21d59c0c6_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_21d59c0c6_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_21d59c0c6_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_21d59c0c6_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_21d59c0c6_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_21d59c0c6_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_21d59c0c6_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_21d59c0c6_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_21d59c0c6_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_21d59c0c6_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_21d59c0c6_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_21d59c0c6_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_21d59c0c6_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_21d59c0c6_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_21d59c0c6_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_21d59c0c6_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_21d59c0c6_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_21d59c0c6_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_21d59c0c6_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_21d59c0c6_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_21d59c0c6_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_21d59c0c6_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_21d59c0c6_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_21d59c0c6_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_21d59c0c6_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_21d59c0c6_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_21d59c0c6_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_21d59c0c6_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_21d59c0c6_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_21d59c0c6_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_21d59c0c6_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_21d59c0c6_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_21d59c0c6_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_21d59c0c6_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_21d59c0c6_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_21d59c0c6_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_21d59c0c6_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_21d59c0c6_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_21d59c0c6_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_21d59c0c6_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_21d59c0c6_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_21d59c0c6_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_21d59c0c6_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_21d59c0c6_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_21d59c549_Range32>::make({_21d59c549_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_21d59c549_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_21d59c549_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_21d59c549_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_21d59c549_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_21d59c549_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_21d59c549_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_21d59c549_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_21d59c549_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_21d59c549_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_21d59c549_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_21d59c549_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_21d59c549_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_21d59c549_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_21d59c549_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_21d59c549_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_21d59c549_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_21d59c549_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_21d59c549_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_21d59c549_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_21d59c549_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_21d59c549_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_21d59c549_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_21d59c549_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_21d59c549_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_21d59c549_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_21d59c549_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_21d59c549_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_21d59c549_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_21d59c549_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_21d59c549_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_21d59c549_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_21d59c549_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_21d59c549_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_21d59c549_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_21d59c549_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_21d59c549_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_21d59c549_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_21d59c549_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_21d59c549_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_21d59c549_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_21d59c549_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_21d59c549_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_21d59c9bc_RangeTable> _21d5391ea__LU = jule::new_ptr<_21d59c9bc_RangeTable>(_21d59c9bc_RangeTable{._field_R16=jule::Slice<_21d59c0c6_Range16>::make({_21d59c0c6_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_21d59c0c6_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_21d59c0c6_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_21d59c0c6_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_21d59c0c6_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_21d59c0c6_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_21d59c0c6_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_21d59c0c6_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_21d59c0c6_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_21d59c0c6_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_21d59c0c6_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_21d59c0c6_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_21d59c0c6_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_21d59c0c6_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_21d59c0c6_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_21d59c0c6_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_21d59c0c6_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_21d59c549_Range32>::make({_21d59c549_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_21d59c549_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_21d59c549_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_21d59c549_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_21d59c549_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_21d59c549_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_21d59c549_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _21d596433__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _21d5e2c76_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _21d665c2d_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _21d665e4d_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _21d71a19a_PathStdlib = jule::Str();
jule::Str _21d71a3ba_PathExec = jule::Str();
jule::Str _21d71a673_PathWd = jule::Str();
jule::Str _21d71a981_PathApi = jule::Str();
jule::Str _21d71ac4a_Os = jule::Str("windows", 7);
jule::Str _21d71b014_Arch = jule::Str("i386", 4);
jule::Array<jule::I32,5> _21d96ed5b_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _21d97007b_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _21d97029b_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _21da15011_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _21da1530d_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_21da22ded_kindPair,47> _21da2332c_keywords = jule::Array<_21da22ded_kindPair,47>({_21da22ded_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U32>(1LLU)},_21da22ded_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U32>(6LLU)},_21da22ded_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U32>(6LLU)},_21da22ded_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U32>(6LLU)},_21da22ded_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U32>(9LLU)},_21da22ded_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U32>(4LLU)},_21da22ded_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U32>(10LLU)},_21da22ded_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U32>(12LLU)},_21da22ded_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U32>(13LLU)},_21da22ded_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U32>(14LLU)},_21da22ded_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U32>(15LLU)},_21da22ded_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U32>(16LLU)},_21da22ded_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U32>(17LLU)},_21da22ded_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U32>(19LLU)},_21da22ded_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U32>(21LLU)},_21da22ded_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U32>(23LLU)},_21da22ded_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U32>(24LLU)},_21da22ded_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U32>(25LLU)},_21da22ded_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U32>(26LLU)},_21da22ded_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U32>(27LLU)},_21da22ded_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U32>(28LLU)},_21da22ded_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U32>(29LLU)},_21da22ded_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U32>(30LLU)},_21da22ded_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U32>(31LLU)},_21da22ded_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U32>(32LLU)},_21da22ded_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U32>(33LLU)},_21da22ded_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U32>(34LLU)},_21da22ded_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U32>(35LLU)},_21da22ded_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U32>(36LLU)},_21da22ded_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U32>(37LLU)},_21da22ded_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U32>(39LLU)},_21da22ded_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U32>(40LLU)}});
jule::Array<_21da22ded_kindPair,39> _21da2366d_basicOps = jule::Array<_21da22ded_kindPair,39>({_21da22ded_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U32>(22LLU)},_21da22ded_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U32>(11LLU)},_21da22ded_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U32>(5LLU)},_21da22ded_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U32>(8LLU)},_21da22ded_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U32>(20LLU)},_21da22ded_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U32>(7LLU)},_21da22ded_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U32>(38LLU)}});
jule::Array<jule::U8,32> _21e655612__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _21e655bc8__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_21e69e062_floatInfo _21e69e293_f32info = _21e69e062_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_21e69e062_floatInfo _21e69e5a1_f64info = _21e69e062_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _21e6a6883_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I32> _21e6a8511_powtab = jule::Slice<jule::I32>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _21e6a906c_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _21e6a93ad_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _21e6ac3d3_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_21e6b0d32_leftCheat> _21e6b1261_leftCheats = jule::Slice<_21e6b0d32_leftCheat>::make({_21e6b0d32_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_21e6b0d32_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_21e6b0d32_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_21e6b0d32_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_21e6b0d32_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_21e6b0d32_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_21e6b0d32_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_21e6b0d32_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_21e6b0d32_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_21e6b0d32_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_21e6b0d32_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_21e6b0d32_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_21e6b0d32_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_21e6b0d32_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_21e6b0d32_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_21e6b0d32_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_21e6b0d32_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_21e6b0d32_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_21e6b0d32_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_21e6b0d32_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_21e6b0d32_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_21e6b0d32_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_21e6b0d32_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_21e6b0d32_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_21e6b0d32_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_21e6b0d32_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_21e6b0d32_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_21e6b0d32_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_21e6b0d32_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_21e6b0d32_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_21e6b0d32_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_21e6b0d32_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_21e6b0d32_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_21e6b0d32_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_21e6b0d32_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_21e6b0d32_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_21e6b0d32_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_21e6b0d32_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_21e6b0d32_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_21e6b0d32_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_21e6b0d32_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_21e6b0d32_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_21e6b0d32_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_21e6b0d32_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_21e6b0d32_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_21e6b0d32_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_21e6b0d32_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_21e6b0d32_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_21e6b0d32_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_21e6b0d32_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_21e6b0d32_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_21e6b0d32_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_21e6b0d32_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_21e6b0d32_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_21e6b0d32_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_21e6b0d32_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_21e6b0d32_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_21e6b0d32_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_21e6b0d32_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_21e6b0d32_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_21e6b0d32_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I32 _21e6b6bc3_BitSize = 0LL;
jule::Str _21e6b6e37_SysInt = jule::Str();
jule::Str _21e6b7201_SysUint = jule::Str();
jule::Slice<jule::Str> _22121b968_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _221533ee4_Copy = false;
jule::Bool _221534302_Deadcode = false;
jule::Bool _2215345bb_Append = false;
jule::Bool _2215348c9_Math = false;
jule::Bool _221534b93_Access = false;
jule::Bool _221534e5c_Inline = false;
jule::Bool _221535226_Ptr = false;
jule::Bool _221535600_Cond = false;
jule::Bool _2215358b9_Str = false;
jule::Bool _20335169d_exprEnabled = false;
jule::Bool _2033518bd_scopeEnabled = false;
jule::Array<jule::U64,12> _203bca06a_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _203a594c1_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_21d59c9bc_RangeTable> _21d546900_Upper = _21d5391ea__LU;
jule::Ptr<_21d59c9bc_RangeTable> _21d540399_Letter = _21d53820a__L;





std::ostream &operator<<(std::ostream &_Stream, _21c5cb447_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21d59c0c6_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21d59c549_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21d59c9bc_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _21d5dd2d2_index(_21d5dcd5e_lazyBuff* _self_, jule::I32 _5424_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5424_i];;
	};
	return (*(_self_))._field_path[_5424_i];;
}



inline void _21d5dd557_append(_21d5dcd5e_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6125_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), (static_cast<jule::Slice<jule::U8>>((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w))));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6125_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _21d5dd7bb_string(_21d5dcd5e_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _21d5dcd5e_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4ddbd9_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_21c4ddbd9_DirEntry>>> static__21d5e0823_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_21c4ddbd9_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _1613_utf16Path = _21c4990b2_Utf16FromStr(_21d5de4c0_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str("*", 1)})));;
	WIN32_FIND_DATAW _1717_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _1813_handle = _21c4ca5cc_FindFirstFile((&(_1613_utf16Path[0LL])), (&(_1717_data)));;
	if ((_1813_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_21c4ddbd9_DirEntry>>>(jule::Any(), __jule_func_result);;
	};
	for (;;) {
		{
			jule::Ptr<_21c4ddbd9_DirEntry> _2321_entry = jule::new_ptr<_21c4ddbd9_DirEntry>(_21c4ddbd9_DirEntry{._field_Name=_21c499612_U16PtrToStr(((jule::U16*)(_1717_data.cFileName))), });;
			_2321_entry.get()._field_Stat=({
				auto except = static__21d5e159e_Of(_21d5de4c0_Join(jule::Slice<jule::Str>::make({_1520_path,_2321_entry.get()._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_21c4ddbd9_DirEntry>>>(except.error);
				} jule::Ptr<_21c4ed05b_Status>(nullptr);});
			});
			__jule_func_result = jule::alloc_for_append(__jule_func_result,1);__jule_func_result.__push(_2321_entry);;
			if ((_21c4ca91d_FindNextFile(_1813_handle, (&(_1717_data))) == 0LL)) {
				goto _iter_end_204514d9e;
			};
		}
	_iter_next_204514d9e:;
	}
	_iter_end_204514d9e:;;
	_21c4cabb5_FindClose(_1813_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_21c4ddbd9_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__21d5e0a32_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _4413_utf16Path = _21c4990b2_Utf16FromStr(_3922_path);;
	if ((!(_21c4c84cb_CreateDirectory((&(_4413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_21c4dd667_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__21d5e0c41_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _5413_utf16Path = _21c4990b2_Utf16FromStr(_5322_path);;
	if ((!(_21c4c8773_RemoveDirectory((&(_5413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_21c4dd667_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _21c4dde4d_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21c4ea91b_File> static__21c4ead7d_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_21c4ea91b_File>(_21c4ea91b_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_21c4ea91b_File>> static__21c4eb125_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_21c4ea91b_File>>(jule::Any(), ({
		auto except = static__21c5cee2e_Open(_5622_path, static_cast<jule::I32>(770LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_21c4ea91b_File>>(except.error);
		} jule::Ptr<_21c4ea91b_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__21c4eb3bc_Read(jule::Str _6820_path) {
	jule::Ptr<_21c4ed05b_Status> _6913_s = ({
		auto except = static__21d5e159e_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_21c4ed05b_Status>(nullptr);});
	});;
	if ((!(_21c4ed6cc_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0));
	};
	if ((_21c4ed941_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_21c4ea91b_File> _7917_f = ({
		auto except = static__21c5cee2e_Open(_6820_path, static_cast<jule::I32>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_21c4ea91b_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _21c4ec522_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I32>(_21c4ed941_Size(_6913_s.ptr())), static_cast<jule::I32>(_21c4ed941_Size(_6913_s.ptr())), 0);;
	jule::I32 _8313_n = ({
		auto except = _21c5d0858_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__21c4eb71e_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I32 _9246_perm) {
	jule::Ptr<_21c4ea91b_File> _9317_f = ({
		auto except = static__21c5cee2e_Open(_9221_path, static_cast<jule::I32>(769LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_21c4ea91b_File>(nullptr);});
	});;
	({
		auto except = _21c5d054a_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _21c4ec522_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__21c4eba71_WriteStr(jule::Str _9924_path, jule::Str* _9936_data, jule::I32 _9947_perm) {
	({
		auto except = static__21c4eb71e_Write(_9924_path, _21c4e9332_Stobs(_9936_data), _9947_perm);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _21c4ec038_Seek(_21c4ea91b_File* _self_, jule::I32 _11123_offset, jule::I32 _11136_origin) {
	jule::I32 _11213_pos = _21c4cc6de_Seek(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), _11123_offset, static_cast<jule::I32>(_11136_origin));;
	if ((_11213_pos == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_21c4dd667_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I32>(jule::Any(), _11213_pos);;
}



inline jule::Exceptional<jule::I32> _21c4ec346_WriteStr(_21c4ea91b_File* _self_, jule::Str* _12028_data) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result = static_cast<jule::I32>(({
		auto except = _21c5d054a_Write(_self_, _21c4e9332_Stobs(_12028_data));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I32>(except.error);
		} 0;});
	}));
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional _21c4ec522_Close(_21c4ea91b_File* _self_) {
	if ((_21c4cce4d_Close(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_21c4dd667_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_21c4ea91b_File>> static__21c5cee2e_Open(jule::Str _2120_path, jule::I32 _2131_flag, jule::I32 _2144_mode) {
	jule::Slice<jule::U16> _2213_utf16Path = _21c4990b2_Utf16FromStr(_2120_path);;
	jule::I32 _2313_handle = _21c4c76a6_Wopen((&(_2213_utf16Path[0LL])), static_cast<jule::I32>(_2131_flag), _2144_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_21c4ea91b_File>>(jule::Any(_21c4dd667_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_21c4ea91b_File>>(jule::Any(), static__21c4ead7d_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));;
}



inline jule::VoidExceptional static__21c5d013d_Remove(jule::Str _3422_path) {
	jule::Slice<jule::U16> _3513_utf16Path = _21c4990b2_Utf16FromStr(_3422_path);;
	if ((!(_21c4c8234_DeleteFile((&(_3513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_21c4dd667_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _21c5d054a_Write(_21c4ea91b_File* _self_, jule::Slice<jule::U8> _4924_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_4924_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	if (_21c5d0baa_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16Buff = _21c4990b2_Utf16FromStr(static_cast<jule::Str>(_4924_buff));;
		jule::Bool _5617_ok = _21c4c9b09_WriteConsole((*(_self_))._field_handle, (&(_5517_utf16Buff[0LL])), static_cast<jule::I32>(_5517_utf16Buff.len()), &(__jule_func_result), nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I32>(jule::Any(_21c4dd667_getLastFsError(), &__jule_any_type0));
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_21c4cd338_Write(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_4924_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_4924_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_21c4dd667_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I32> _21c5d0858_Read(_21c4ea91b_File* _self_, jule::Slice<jule::U8> _7927_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_7927_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	if (_21c5d0baa_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8521_codepage = jule::Slice<jule::U16>::alloc(_7927_buff.len(), _7927_buff.len(), 0);;
		jule::Bool _8617_ok = _21c4ca08d_ReadConsole((*(_self_))._field_handle, (&(_8521_codepage[0LL])), static_cast<jule::I32>(_7927_buff.len()), &(__jule_func_result));;
		if ((!(_8617_ok))) {
			return jule::Exceptional<jule::I32>(jule::Any(_21c4dd667_getLastFsError(), &__jule_any_type0));
		};
		jule::Slice<jule::I32> _9117_runes = _21c498a73_Decode(_8521_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9117_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20453592a:;
			if (it != expr_end) {
				jule::I32 *_9320_r = it;
				{
					jule::I32 _9421_size = _21c5ccadb_RuneLen((*(_9320_r)));;
					if (((__jule_func_result + _9421_size) > _7927_buff.len())) {
						goto _iter_end_20453592a;
					};
					_21c5cd009_EncodeRune(_7927_buff.slice(__jule_func_result), (*(_9320_r)));
					__jule_func_result+=_9421_size;
				}
				_iter_next_20453592a:;
				++it;
				goto _iter_begin_20453592a;
			}
			_iter_end_20453592a:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_21c4ccac9_Read(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_7927_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_7927_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_21c4dd667_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4ea91b_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c4ed468_IsDir(_21c4ed05b_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _21c4ed6cc_IsReg(_21c4ed05b_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _21c4ed941_Size(_21c4ed05b_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_21c4ed05b_Status>> static__21d5e159e_Of(jule::Str _1218_path) {
	if (_1218_path.empty()) {
		return jule::Exceptional<jule::Ptr<_21c4ed05b_Status>>(jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0));
	};
	jule::Slice<jule::U16> _1613_utf16Path = _21c4990b2_Utf16FromStr(_1218_path);;
	struct _stat _1717_handle = (struct _stat){};;
	jule::I32 _1813_code = _21c4c72bb_Wstat((&(_1613_utf16Path[0LL])), (&(_1717_handle)));;
	if ((_1813_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_21c4ed05b_Status>>(jule::Any(_21c4dd667_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_21c4ed05b_Status> _2217_stat = jule::new_ptr<_21c4ed05b_Status>();;
	_2217_stat.get()._field_size=_1717_handle.st_size;
	if (((_1717_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_1717_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_21c4ed05b_Status>>(jule::Any(), _2217_stat);;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4ed05b_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21d716e99_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21d6755de_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _21da1adb3_Prec(_21da1aa0b_Token* _self_) {
	if (((*(_self_))._field_Id != static_cast<jule::U32>(7LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_20521d03a:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_20521d0a1:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_20521c952:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_20521c9c9:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_20521ca51:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_20521c754:;
			{
				return 0LLU;;
			}
		}
		_match_end_20521bbb5:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _21da1aa0b_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21da212a3_IsOk(_21da20d96_File* _self_) {
	({
		auto except = static__21d5e159e_Of((*(_self_))._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} jule::Ptr<_21c4ed05b_Status>(nullptr);});
	});
	return true;;
}



inline void _21da21528_Fill(_21da20d96_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*(_self_))._field_Data=_2327_data;
}



inline jule::Str _21da2178c_Dir(_21da20d96_File* _self_) {
	return _21d5e012a_Dir((*(_self_))._field_Path);;
}



inline jule::Str _21da21a01_Name(_21da20d96_File* _self_) {
	return _21d5deca6_Base((*(_self_))._field_Path);;
}



inline jule::Uintptr _21da21c65_Addr(_21da20d96_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*(_self_)))))));;
}



inline jule::Str _21da22073_GetRow(_21da20d96_File* _self_, jule::I32 _4421_row) {
	jule::I32 _4517_n = 0LL;;
	jule::I32 _4617_lineStart = 0LL;;
	jule::I32 _4717_i = 0LL;;
	for (; (_4717_i < (*(_self_))._field_Data.len()); (_4717_i)++) {
		{
			if (((*(_self_))._field_Data[_4717_i] != '\n')) {
				goto _iter_next_205222a9a;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4617_lineStart, _4717_i));;
			};
			_4617_lineStart=static_cast<jule::I32>((_4717_i + 1LL));
		}
	_iter_next_205222a9a:;
	}
	_iter_end_205222a9a:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _21da20d96_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21da22ded_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _21da29003_pushErr(_21da2895e_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_21da23b68_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _45826_fmt, _45839_args));;
}



inline void _21da29322_pushErrTok(_21da2895e_lex* _self_, jule::Ptr<_21da1aa0b_Token>* _46330_token, jule::Str _46345_fmt) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_21da23b68_makeErr((*(_46330_token)).get()._field_Row, (*(_46330_token)).get()._field_Column, &((*(_self_))._field_file), _46345_fmt, jule::Slice<jule::Any>()));;
}



inline void _21da294ed_lex(_21da2895e_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_21da2b500_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_21da1aa0b_Token> _47321_token = _21da2c875_token(_self_);;
			if ((_47321_token.get()._field_Id != static_cast<jule::U32>(0LLU))) {
				(*(_self_))._field_tokens = jule::alloc_for_append((*(_self_))._field_tokens,1);(*(_self_))._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_20525611c:;
	}
	_iter_end_20525611c:;;
}



inline jule::Str _21da2980b_id(_21da2895e_lex* _self_, jule::Slice<jule::U8>* _48222_ln) {
	if (((*(_48222_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _48614_r = 0;;
	jule::I32 _48621_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cbed6_DecodeRune((*(_48222_ln)));
		_48614_r = __jule_assign_result.__jule_result_arg0;
		_48621_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_48614_r != '_') && (!(_21da1ded7_IsLetter(_48614_r))))) {
		return jule::Str();;
	};
	while ((_48621_i < (*(_48222_ln)).len())) {
		{
			jule::I32 _49218_pr = 0;;
			jule::I32 _49222_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cbed6_DecodeRune((*(_48222_ln)).slice(_48621_i));
				_49218_pr = __jule_assign_result.__jule_result_arg0;
				_49222_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_49218_pr != '_') && (!(_21da1e526_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_21da1ded7_IsLetter(_49218_pr))))) {
				(*(_self_))._field_pos+=_48621_i;
				return static_cast<jule::Str>((*(_48222_ln)).slice(0LL, _48621_i));;
			};
			_48621_i+=_49222_n;
		}
	_iter_next_20525930c:;
	}
	_iter_end_20525930c:;;
	(*(_self_))._field_pos+=(*(_48222_ln)).len();
	return static_cast<jule::Str>((*(_48222_ln)));;
}



inline jule::Slice<jule::U8> _21da29a70_resume(_21da2895e_lex* _self_) {
	jule::I32 _50717_i = (*(_self_))._field_pos;;
	for (; (_50717_i < (*(_self_))._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_50717_i]);;
			if (_21da1da86_IsSpace(_50917_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_20525dc3a:;
						{
							_21da2b500_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_20525d71d:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_205259274:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_20525d5ec:;
				};
				goto _iter_next_20525be36;
			};
			jule::I32 _52421_j = _50717_i;;
			for (; (_52421_j < (*(_self_))._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_20525ca19;
					};
				}
			_iter_next_20525ca19:;
			}
			_iter_end_20525ca19:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_50717_i, _52421_j);;
		}
	_iter_next_20525be36:;
	}
	_iter_end_20525be36:;;
	return nullptr;;
}



inline void _21da29ce5_lexLineComment(_21da2895e_lex* _self_, jule::Ptr<_21da1aa0b_Token>* _53538_token) {
	jule::I32 _53613_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _53917_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_205261369;
			};
		}
	_iter_next_205261369:;
	}
	_iter_end_205261369:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*(_53538_token)).get()._field_Id=static_cast<jule::U32>(18LLU);
		(*(_53538_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_53613_start, (*(_self_))._field_pos));
	};
}



inline void _21da2a06a_lexRangeComment(_21da2895e_lex* _self_, jule::Ptr<_21da1aa0b_Token>* _55039_token) {
	jule::I32 _55113_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _55417_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_205264669;
			};
			if ((_55417_r == '\n')) {
				_21da2b500_newLine(_self_);
				goto _iter_next_205264669;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*(_55039_token)).get()._field_Id=static_cast<jule::U32>(18LLU);
					(*(_55039_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_55113_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_205264669:;
	}
	_iter_end_205264669:;;
	_21da29003_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _21da2a378_num(_21da2895e_lex* _self_, jule::Slice<jule::U8>* _57823_txt) {
	jule::Str __jule_func_result;
	if (((*(_57823_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_21da27485_hexNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_21da271dd_octalNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_21da25b37_binaryNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_21da25890_commonNum(_57823_txt);
	_julec_label_end:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _21da2a686_escapeSeq(_21da2895e_lex* _self_, jule::Slice<jule::U8>* _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if (((*(_60029_txt)).len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ (*(_60029_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_20526e2bc:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_60029_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_20526e201:;
			{
				_60117_seq=_21da27a6d_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_20526de37:;
			{
				_60117_seq=_21da27d37_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_20526de9d:;
			{
				_60117_seq=_21da27ee1_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_20526d6c8:;
			{
				_60117_seq=_21da28277_byteEscape(_60029_txt);
			}
		}
		_match_end_20526dd16:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*(_self_))._field_pos)++;
		_21da29003_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_60117_seq.len();
	return _60117_seq;;
}



inline jule::Str _21da2aa3d_getRune(_21da2895e_lex* _self_, jule::Slice<jule::U8>* _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && ((*(_63027_txt))[0LL] == '\\'))) {
		return _21da2a686_escapeSeq(_self_, _63027_txt);;
	};
	jule::I32 _63414_r = 0;;
	jule::I32 _63417_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cbed6_DecodeRune((*(_63027_txt)));
		_63414_r = __jule_assign_result.__jule_result_arg0;
		_63417_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_63417_n;
	return jule::Str::from_rune(_63414_r);;
}



inline jule::Str _21da2ad4b_lexRune(_21da2895e_lex* _self_, jule::Slice<jule::U8>* _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*(_self_))._field_column)++;
	jule::I32 _64217_n = 0LL;;
	jule::I32 _64317_i = 1LL;;
	for (; (_64317_i < (*(_63927_txt)).len()); (_64317_i)++) {
		{
			if (((*(_63927_txt))[_64317_i] == '\r')) {
				goto _iter_next_2052751c4;
			};
			if (((*(_63927_txt))[_64317_i] == '\n')) {
				_21da29003_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_21da2b500_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _65517_part = (*(_63927_txt)).slice(_64317_i);;
			jule::Str _65617_r = _21da2aa3d_getRune(_self_, &(_65517_part), false);;
			_64017_run+=_65617_r;
			(*(_self_))._field_column+=_21c5cdbca_RuneCountStr(_65617_r);
			if (_65617_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_2052751c4;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_2052751c4:;
	}
	_iter_end_2052751c4:;;
	if ((_64217_n == 0LL)) {
		_21da29003_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_21da29003_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _64017_run;;
}



inline jule::Str _21da2b0b0_lexStr(_21da2895e_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	(_67917_s).append(_68013_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_20527b6a3;
			};
			if ((_68717_ch == '\n')) {
				_21da2b500_newLine(_self_);
				if ((!(_68213_raw))) {
					_21da29003_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69921_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _70017_r = _21da2aa3d_getRune(_self_, &(_69921_part), _68213_raw);;
			_67917_s+=_70017_r;
			(*(_self_))._field_column+=_21c5cdbca_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_20527b6a3;
			};
		}
	_iter_next_20527b6a3:;
	}
	_iter_end_20527b6a3:;;
	return _67917_s;;
}



inline jule::Bool _21da2b324_isFirstTokenOfLine(_21da2895e_lex* _self_) {
	return ((*(_self_))._field_column == 1LL);;
}



inline void _21da2b500_newLine(_21da2895e_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _21da2b9ea_isOp(_21da2895e_lex* _self_, jule::Slice<jule::U8>* _72024_txt, jule::Str _72037_kind, jule::U32 _72048_id, jule::Ptr<_21da1aa0b_Token>* _72066_t) {
	if ((!(_21da23eed_bytesHasPrefix(_72024_txt, _72037_kind)))) {
		return false;;
	};
	(*(_72066_t)).get()._field_Kind=_72037_kind;
	(*(_72066_t)).get()._field_Id=_72048_id;
	(*(_self_))._field_pos+=_72037_kind.len();
	return true;;
}



inline jule::Bool _21da2bda2_lexBasicOps(_21da2895e_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_21da1aa0b_Token>* _73048_tok) {
	{
		auto expr = &(_21da2366d_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205282863:;
		if (it != expr_end) {
			_21da22ded_kindPair *_73116_pair = it;
			{
				if (_21da2b9ea_isOp(_self_, &(_73030_txt), (*(_73116_pair))._field_kind, (*(_73116_pair))._field_id, _73048_tok)) {
					return true;;
				};
			}
			_iter_next_205282863:;
			++it;
			goto _iter_begin_205282863;
		}
		_iter_end_205282863:;
	};
	return false;;
}



inline jule::Bool _21da2c259_lexId(_21da2895e_lex* _self_, jule::Slice<jule::U8>* _74025_txt, jule::Ptr<_21da1aa0b_Token>* _74043_t) {
	jule::Str _74113_lex = _21da2980b_id(_self_, _74025_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	(*(_74043_t)).get()._field_Kind=_74113_lex;
	(*(_74043_t)).get()._field_Id=static_cast<jule::U32>(2LLU);
	return true;;
}



inline jule::Bool _21da2c611_lexNum(_21da2895e_lex* _self_, jule::Slice<jule::U8>* _75026_txt, jule::Ptr<_21da1aa0b_Token>* _75044_t) {
	jule::Str _75113_lex = _21da2a378_num(_self_, _75026_txt);;
	if (_75113_lex.empty()) {
		return false;;
	};
	(*(_75044_t)).get()._field_Kind=_75113_lex;
	(*(_75044_t)).get()._field_Id=static_cast<jule::U32>(6LLU);
	return true;;
}



inline jule::Ptr<_21da1aa0b_Token> _21da2c875_token(_21da2895e_lex* _self_) {
	jule::Ptr<_21da1aa0b_Token> _76217_t = jule::new_ptr<_21da1aa0b_Token>(_21da1aa0b_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _21da29a70_resume(_self_);;
	if ((_76713_txt == nullptr)) {
		return _76217_t;;
	};
	_76217_t.get()._field_Column=(*(_self_))._field_column;
	_76217_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_21da2c611_lexNum(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_20528888b:;
			{
				goto _match_end_205287c86;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_205288da8:;
			{
				_76217_t.get()._field_Kind=_21da2ad4b_lexRune(_self_, &(_76713_txt));
				_76217_t.get()._field_Id=static_cast<jule::U32>(6LLU);
				return _76217_t;;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_2052892d7:;
			{
				_76217_t.get()._field_Kind=_21da2b0b0_lexStr(_self_);
				_76217_t.get()._field_Id=static_cast<jule::U32>(6LLU);
				return _76217_t;;
			}
		}
		else if (_21da23eed_bytesHasPrefix(&(_76713_txt), jule::Str("//", 2))) {
			_case_begin_20528934d:;
			{
				_21da29ce5_lexLineComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_21da23eed_bytesHasPrefix(&(_76713_txt), jule::Str("/*", 2))) {
			_case_begin_2052893b4:;
			{
				_21da2a06a_lexRangeComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_21da2b9ea_isOp(_self_, &(_76713_txt), jule::Str("(", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _21da2b9ea_isOp(_self_, &(_76713_txt), jule::Str(")", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _21da2b9ea_isOp(_self_, &(_76713_txt), jule::Str("{", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _21da2b9ea_isOp(_self_, &(_76713_txt), jule::Str("}", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _21da2b9ea_isOp(_self_, &(_76713_txt), jule::Str("[", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _21da2b9ea_isOp(_self_, &(_76713_txt), jule::Str("]", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _21da2bda2_lexBasicOps(_self_, _76713_txt, &(_76217_t))) {
			_case_begin_205287d52:;
			{
				goto _match_end_205287c86;
			}
		}
		else if (_21da2c259_lexId(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_205287db8:;
			{
				{
					auto expr = &(_21da2332c_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20528e441:;
					if (it != expr_end) {
						_21da22ded_kindPair *_80520_pair = it;
						{
							if (((*(_80520_pair))._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=(*(_80520_pair))._field_id;
								goto _iter_end_20528e441;
							};
						}
						_iter_next_20528e441:;
						++it;
						goto _iter_begin_20528e441;
					}
					_iter_end_20528e441:;
				};
			}
		}
		else {
			_case_begin_205287cdb:;
			{
				jule::I32 _81218_r = 0;;
				jule::I32 _81221_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cbed6_DecodeRune(_76713_txt);
					_81218_r = __jule_assign_result.__jule_result_arg0;
					_81221_sz = __jule_assign_result.__jule_result_arg1;
				});
				_21da29003_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_81218_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_81221_sz;
				return _76217_t;;
			}
		}
		_match_end_205287c86:;
	};
	(*(_self_))._field_column+=_21c5cdbca_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _21da2895e_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21e69e062_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21e69ea02_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21e6b0d32_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21e6a8874_set(_21e6b1805_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _23417_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_2057b634c:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_2057b63c4:;
			{
				(*(_self_))._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_2057b61d7:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_2057b852a:;
					{
						goto _iter_next_2057b7cee;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_2057b85a2:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_2057b7cee;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_2057b8629:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_2057b7cee;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23322_s[_23417_i];
							((*(_self_))._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_2057b7cee;
					}
				}
				_match_end_2057b8409:;
			};
			goto _iter_end_2057b7cee;
		}
	_iter_next_2057b7cee:;
	}
	_iter_end_2057b7cee:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_21e6a4177_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_2057c0c4c;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I32>((((_30721_e * 10LL) + static_cast<jule::I32>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_2057c0c4c:;
		}
		_iter_end_2057c0c4c:;;
		(*(_self_))._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _21e6a8b82_floatBits(_21e6b1805_decimal* _self_, _21e69e062_floatInfo* _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _35421_n = 0LL;;
			if (((*(_self_))._field_dp >= _21e6a8511_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_21e6a8511_powtab[(*(_self_))._field_dp];
			};
			_21e6b1e54_shift(_self_, static_cast<jule::I32>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_2057c75e4:;
	}
	_iter_end_2057c75e4:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _36421_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _21e6a8511_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_21e6a8511_powtab[(-((*(_self_))._field_dp))];
			};
			_21e6b1e54_shift(_self_, _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_2057c8c44:;
	}
	_iter_end_2057c8c44:;;
	(_32817_exp)--;
	if ((_32817_exp < ((*(_32729_flt))._field_bias + 1LL))) {
		jule::I32 _38117_n = (((*(_32729_flt))._field_bias + 1LL) - _32817_exp);;
		_21e6b1e54_shift(_self_, static_cast<jule::I32>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_21e6b1e54_shift(_self_, static_cast<jule::I32>(static_cast<jule::I32>((1LL + (*(_32729_flt))._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_21e6b2938_roundedInteger(_self_));
	if ((_32917_mant == (2LLU << (*(_32729_flt))._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << (*(_32729_flt))._field_mantbits)) == 0LLU)) {
		_32817_exp=(*(_32729_flt))._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I32>(static_cast<jule::I32>((((static_cast<jule::U32>(1LLU) << (*(_32729_flt))._field_expbits) - 1LLU) + static_cast<jule::U32>((*(_32729_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << (*(_32729_flt))._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - (*(_32729_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) << (*(_32729_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_41717_bits|=((1LLU << (*(_32729_flt))._field_mantbits) << (*(_32729_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _21e6b1bce_assign(_21e6b1805_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I32 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_2057d5844:;
	}
	_iter_end_2057d5844:;;
	(*(_self_))._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_33117_buf[_33417_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_2057d62b2:;
	}
	_iter_end_2057d62b2:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_21e6b2edd_trim(_self_);
}



inline void _21e6b1e54_shift(_21e6b1805_decimal* _self_, jule::I32 _35528_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_2057d82e7:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_2057d836e:;
			{
				while ((_35528_k > 60LL)) {
					{
						_21e6b397d_leftShift(_self_, 60LLU);
						_35528_k-=60LL;
					}
				_iter_next_2057d90c8:;
				}
				_iter_end_2057d90c8:;;
				_21e6b397d_leftShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_2057d83e6:;
			{
				while ((_35528_k < -60LL)) {
					{
						_21e6b3296_rightShift(_self_, 60LLU);
						_35528_k+=60LL;
					}
				_iter_next_2057d9ded:;
				}
				_iter_end_2057d9ded:;;
				_21e6b3296_rightShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>((-(_35528_k)))));
			}
		}
		_match_end_2057d81c6:;
	};
}



inline void _21e6b21c9_roundDown(_21e6b1805_decimal* _self_, jule::I32 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_37528_nd;
	_21e6b2edd_trim(_self_);
}



inline void _21e6b244e_roundUp(_21e6b1805_decimal* _self_, jule::I32 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*(_self_))._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*(_self_))._field_d[_39017_i])++;
				(*(_self_))._field_nd=static_cast<jule::I32>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_2057dc8d4:;
	}
	_iter_end_2057dc8d4:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _21e6b26c4_round(_21e6b1805_decimal* _self_, jule::I32 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_21e6b3cbe_shouldRoundUp(_self_, _41124_nd)) {
		_21e6b244e_roundUp(_self_, _41124_nd);
	} else {
		_21e6b21c9_roundDown(_self_, _41124_nd);
	};
}



inline jule::U64 _21e6b2938_roundedInteger(_21e6b1805_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*(_self_))._field_dp) && (_42817_i < (*(_self_))._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_42817_i] - '0'))));
		}
	_iter_next_2057e050d:;
	}
	_iter_end_2057e050d:;;
	for (; (_42817_i < (*(_self_))._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_2057e2103:;
	}
	_iter_end_2057e2103:;;
	if (_21e6b3cbe_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _21e6b1805_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21e6c53da_Const> static__21e6c585d_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_21e6c53da_Const>(_21e6c53da_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_21e6c53da_Const> static__21e6c5b05_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_21e6c53da_Const>(_21e6c53da_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_21e6c53da_Const> static__21e6c5d9c_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_21e6c53da_Const>(_21e6c53da_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_21e6c53da_Const> static__21e6c6144_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_21e6c53da_Const>(_21e6c53da_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_21e6c53da_Const> static__21e6c63db_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_21e6c53da_Const>(_21e6c53da_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_21e6c53da_Const> static__21e6c65d9_NewNil(void) {
	return jule::new_ptr<_21e6c53da_Const>(_21e6c53da_Const{._field_data=nullptr});;
}



inline jule::I64 _21e6c6bd3_ReadI64(_21e6c53da_Const* _self_) {
	if ((!(_21e6c907b_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _21e6c6e47_ReadU64(_21e6c53da_Const* _self_) {
	if ((!(_21e6c92e0_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _21e6c71ab_ReadBool(_21e6c53da_Const* _self_) {
	if ((!(_21e6c9554_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _21e6c7420_ReadStr(_21e6c53da_Const* _self_) {
	if ((!(_21e6c97b8_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _21e6c7684_ReadF64(_21e6c53da_Const* _self_) {
	if ((!(_21e6c9a2c_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _21e6c78e8_AsI64(_21e6c53da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_20586d404:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_20586d46a:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_20586cd2c:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_20586cc83:;
			{
				return 0LL;;
			}
		}
		_match_end_20586cc2d:;
	};
}



inline jule::U64 _21e6c7b5c_AsU64(_21e6c53da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_20586ed2e:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_20586ed95:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_20586e8ab:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_20586d646:;
			{
				return 0LLU;;
			}
		}
		_match_end_20586db74:;
	};
}



inline jule::F64 _21e6c7dc1_AsF64(_21e6c53da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_205871759:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_2058717c0:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_2058712d6:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_205870071:;
			{
				return 0LL;;
			}
		}
		_match_end_20586d6ac:;
	};
}



inline void _21e6c8146_SetI64(_21e6c53da_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _21e6c83bb_SetU64(_21e6c53da_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _21e6c8641_SetBool(_21e6c53da_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _21e6c88b6_SetStr(_21e6c53da_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _21e6c8b3b_SetF64(_21e6c53da_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline void _21e6c8d17_SetNil(_21e6c53da_Const* _self_) {
	(*(_self_))._field_data=nullptr;
}



inline jule::Bool _21e6c907b_IsI64(_21e6c53da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_205875175:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2058753ea:;
			{
				return false;;
			}
		}
		_match_end_205875395:;
	};
}



inline jule::Bool _21e6c92e0_IsU64(_21e6c53da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_205875c9c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_20587561a:;
			{
				return false;;
			}
		}
		_match_end_2058754c7:;
	};
}



inline jule::Bool _21e6c9554_IsBool(_21e6c53da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_205876033:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2058766e8:;
			{
				return false;;
			}
		}
		_match_end_205876693:;
	};
}



inline jule::Bool _21e6c97b8_IsStr(_21e6c53da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_2058769e5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2058771aa:;
			{
				return false;;
			}
		}
		_match_end_205877155:;
	};
}



inline jule::Bool _21e6c9a2c_IsF64(_21e6c53da_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_2058774a7:;
			{
				return true;;
			}
		}
		else {
			_case_begin_205877b6c:;
			{
				return false;;
			}
		}
		_match_end_205877b17:;
	};
}



inline jule::Bool _21e6c9c91_IsNil(_21e6c53da_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _21e6ca09e_AreSameTypes(_21e6c53da_Const* _self_, _21e6c53da_Const _21327_x) {
	{
		
		if ((_21e6c907b_IsI64(_self_) == _21e6c907b_IsI64(&_21327_x))) {
			_case_begin_20587971d:;
			{
				return true;;
			}
		}
		else if ((_21e6c92e0_IsU64(_self_) == _21e6c92e0_IsU64(&_21327_x))) {
			_case_begin_205879025:;
			{
				return true;;
			}
		}
		else if ((_21e6c9a2c_IsF64(_self_) == _21e6c9a2c_IsF64(&_21327_x))) {
			_case_begin_20587909c:;
			{
				return true;;
			}
		}
		else if ((_21e6c9554_IsBool(_self_) == _21e6c9554_IsBool(&_21327_x))) {
			_case_begin_205879124:;
			{
				return true;;
			}
		}
		else if ((_21e6c97b8_IsStr(_self_) == _21e6c97b8_IsStr(&_21327_x))) {
			_case_begin_20587919b:;
			{
				return true;;
			}
		}
		else if ((_21e6c9c91_IsNil(_self_) == _21e6c9c91_IsNil(&_21327_x))) {
			_case_begin_2058793ee:;
			{
				return true;;
			}
		}
		else {
			_case_begin_205878e9d:;
			{
				return false;;
			}
		}
		_match_end_205878dd2:;
	};
}



inline jule::Bool _21e6ca3ac_And(_21e6c53da_Const* _self_, _21e6c53da_Const _23818_x) {
	{
		
		if ((_21e6c9554_IsBool(_self_) && _21e6c9554_IsBool(&_23818_x))) {
			_case_begin_20587c91e:;
			{
				return (_21e6c71ab_ReadBool(_self_) && _21e6c71ab_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_20587c226:;
			{
				return false;;
			}
		}
		_match_end_20587c028:;
	};
}



inline jule::Bool _21e6ca6ba_Or(_21e6c53da_Const* _self_, _21e6c53da_Const _24917_x) {
	{
		
		if ((_21e6c9554_IsBool(_self_) && _21e6c9554_IsBool(&_24917_x))) {
			_case_begin_20587dc83:;
			{
				return (_21e6c71ab_ReadBool(_self_) || _21e6c71ab_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_20587d5ce:;
			{
				return false;;
			}
		}
		_match_end_20587cc4e:;
	};
}



inline jule::Bool _21e6ca9c8_Eq(_21e6c53da_Const* _self_, _21e6c53da_Const _26017_x) {
	{
		
		if (_21e6c9c91_IsNil(_self_)) {
			_case_begin_20588015d:;
			{
				return _21e6c9c91_IsNil(&_26017_x);;
			}
		}
		else if (_21e6c9554_IsBool(_self_)) {
			_case_begin_20587e9ba:;
			{
				return (_21e6c9554_IsBool(&_26017_x) && (_21e6c71ab_ReadBool(_self_) == _21e6c71ab_ReadBool(&_26017_x)));;
			}
		}
		else if (_21e6c97b8_IsStr(_self_)) {
			_case_begin_20587ea31:;
			{
				return (_21e6c97b8_IsStr(&_26017_x) && (_21e6c7420_ReadStr(_self_) == _21e6c7420_ReadStr(&_26017_x)));;
			}
		}
		else if (_21e6c907b_IsI64(_self_)) {
			_case_begin_20587eaa8:;
			{
				return (_21e6c6bd3_ReadI64(_self_) == _21e6c78e8_AsI64(&_26017_x));;
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_20587eb30:;
			{
				return (_21e6c6e47_ReadU64(_self_) == _21e6c7b5c_AsU64(&_26017_x));;
			}
		}
		else if (_21e6c9a2c_IsF64(_self_)) {
			_case_begin_20587ed61:;
			{
				return (_21e6c7684_ReadF64(_self_) == _21e6c7dc1_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_20587e954:;
			{
				return false;;
			}
		}
		_match_end_20587e0a2:;
	};
}



inline jule::Bool _21e6cacd6_Lt(_21e6c53da_Const* _self_, _21e6c53da_Const _28717_x) {
	{
		
		if (_21e6c97b8_IsStr(_self_)) {
			_case_begin_205883e53:;
			{
				return (_21e6c97b8_IsStr(&_28717_x) && (_21e6c7420_ReadStr(_self_) < _21e6c7420_ReadStr(&_28717_x)));;
			}
		}
		else if (_21e6c907b_IsI64(_self_)) {
			_case_begin_205883815:;
			{
				return (_21e6c6bd3_ReadI64(_self_) < _21e6c78e8_AsI64(&_28717_x));;
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_20588387b:;
			{
				return (_21e6c6e47_ReadU64(_self_) < _21e6c7b5c_AsU64(&_28717_x));;
			}
		}
		else if (_21e6c9a2c_IsF64(_self_)) {
			_case_begin_2058838e2:;
			{
				return (_21e6c7684_ReadF64(_self_) < _21e6c7dc1_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_20588048d:;
			{
				return false;;
			}
		}
		_match_end_2058803c2:;
	};
}



inline jule::Bool _21e6cb0e4_LtEq(_21e6c53da_Const* _self_, _21e6c53da_Const _31019_x) {
	{
		
		if (_21e6c97b8_IsStr(_self_)) {
			_case_begin_205886c58:;
			{
				return (_21e6c97b8_IsStr(&_31019_x) && (_21e6c7420_ReadStr(_self_) <= _21e6c7420_ReadStr(&_31019_x)));;
			}
		}
		else if (_21e6c907b_IsI64(_self_)) {
			_case_begin_20588661a:;
			{
				return (_21e6c6bd3_ReadI64(_self_) <= _21e6c78e8_AsI64(&_31019_x));;
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_205886681:;
			{
				return (_21e6c6e47_ReadU64(_self_) <= _21e6c7b5c_AsU64(&_31019_x));;
			}
		}
		else if (_21e6c9a2c_IsF64(_self_)) {
			_case_begin_2058866e7:;
			{
				return (_21e6c7684_ReadF64(_self_) <= _21e6c7dc1_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_2058841c8:;
			{
				return false;;
			}
		}
		_match_end_20588410c:;
	};
}



inline jule::Bool _21e6cb402_Gt(_21e6c53da_Const* _self_, _21e6c53da_Const _33317_x) {
	{
		
		if (_21e6c97b8_IsStr(_self_)) {
			_case_begin_205889a5d:;
			{
				return (_21e6c97b8_IsStr(&_33317_x) && (_21e6c7420_ReadStr(_self_) > _21e6c7420_ReadStr(&_33317_x)));;
			}
		}
		else if (_21e6c907b_IsI64(_self_)) {
			_case_begin_205889420:;
			{
				return (_21e6c6bd3_ReadI64(_self_) > _21e6c78e8_AsI64(&_33317_x));;
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_205889486:;
			{
				return (_21e6c6e47_ReadU64(_self_) > _21e6c7b5c_AsU64(&_33317_x));;
			}
		}
		else if (_21e6c9a2c_IsF64(_self_)) {
			_case_begin_2058894ec:;
			{
				return (_21e6c7684_ReadF64(_self_) > _21e6c7dc1_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_205886ecd:;
			{
				return false;;
			}
		}
		_match_end_205886e12:;
	};
}



inline jule::Bool _21e6cb710_GtEq(_21e6c53da_Const* _self_, _21e6c53da_Const _35619_x) {
	{
		
		if (_21e6c97b8_IsStr(_self_)) {
			_case_begin_20588c863:;
			{
				return (_21e6c97b8_IsStr(&_35619_x) && (_21e6c7420_ReadStr(_self_) >= _21e6c7420_ReadStr(&_35619_x)));;
			}
		}
		else if (_21e6c907b_IsI64(_self_)) {
			_case_begin_20588c225:;
			{
				return (_21e6c6bd3_ReadI64(_self_) >= _21e6c78e8_AsI64(&_35619_x));;
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_20588c28b:;
			{
				return (_21e6c6e47_ReadU64(_self_) >= _21e6c7b5c_AsU64(&_35619_x));;
			}
		}
		else if (_21e6c9a2c_IsF64(_self_)) {
			_case_begin_20588c302:;
			{
				return (_21e6c7684_ReadF64(_self_) >= _21e6c7dc1_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_205889cd3:;
			{
				return false;;
			}
		}
		_match_end_205889c17:;
	};
}



inline jule::Bool _21e6cba1d_Add(_21e6c53da_Const* _self_, _21e6c53da_Const _37722_x) {
	{
		
		if (_21e6c97b8_IsStr(_self_)) {
			_case_begin_205890668:;
			{
				if ((!(_21e6c97b8_IsStr(&_37722_x)))) {
					return false;;
				};
				_21e6c88b6_SetStr(_self_, (_21e6c7420_ReadStr(_self_) + _21e6c7420_ReadStr(&_37722_x)));
			}
		}
		else if (_21e6c9a2c_IsF64(_self_)) {
			_case_begin_20589002a:;
			{
				_21e6c8b3b_SetF64(_self_, static_cast<jule::F64>((_21e6c7684_ReadF64(_self_) + _21e6c7dc1_AsF64(&_37722_x))));
			}
		}
		else if (_21e6c907b_IsI64(_self_)) {
			_case_begin_205890091:;
			{
				if (_21e6c9a2c_IsF64(&_37722_x)) {
					_21e6c8b3b_SetF64(_self_, static_cast<jule::F64>((_21e6c7dc1_AsF64(_self_) + _21e6c7684_ReadF64(&_37722_x))));
				} else {
					_21e6c8146_SetI64(_self_, static_cast<jule::I64>((_21e6c6bd3_ReadI64(_self_) + _21e6c78e8_AsI64(&_37722_x))));
				};
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_205890107:;
			{
				if (_21e6c9a2c_IsF64(&_37722_x)) {
					_21e6c8b3b_SetF64(_self_, static_cast<jule::F64>((_21e6c7dc1_AsF64(_self_) + _21e6c7684_ReadF64(&_37722_x))));
				} else {
					_21e6c83bb_SetU64(_self_, static_cast<jule::U64>((_21e6c6e47_ReadU64(_self_) + _21e6c7b5c_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_20588cad8:;
			{
				return false;;
			}
		}
		_match_end_20588ca1c:;
	};
	return true;;
}



inline jule::Bool _21e6cbd2b_Sub(_21e6c53da_Const* _self_, _21e6c53da_Const _40622_x) {
	{
		
		if (_21e6c9a2c_IsF64(_self_)) {
			_case_begin_2058956c3:;
			{
				_21e6c8b3b_SetF64(_self_, static_cast<jule::F64>((_21e6c7684_ReadF64(_self_) - _21e6c7dc1_AsF64(&_40622_x))));
			}
		}
		else if (_21e6c907b_IsI64(_self_)) {
			_case_begin_205894eec:;
			{
				if (_21e6c9a2c_IsF64(&_40622_x)) {
					_21e6c8b3b_SetF64(_self_, static_cast<jule::F64>((_21e6c7dc1_AsF64(_self_) - _21e6c7684_ReadF64(&_40622_x))));
				} else {
					_21e6c8146_SetI64(_self_, static_cast<jule::I64>((_21e6c6bd3_ReadI64(_self_) - _21e6c78e8_AsI64(&_40622_x))));
				};
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_205895063:;
			{
				if (_21e6c9a2c_IsF64(&_40622_x)) {
					_21e6c8b3b_SetF64(_self_, static_cast<jule::F64>((_21e6c7dc1_AsF64(_self_) - _21e6c7684_ReadF64(&_40622_x))));
				} else {
					_21e6c83bb_SetU64(_self_, static_cast<jule::U64>((_21e6c6e47_ReadU64(_self_) - _21e6c7b5c_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_205894e86:;
			{
				return false;;
			}
		}
		_match_end_20589477c:;
	};
	return true;;
}



inline jule::Bool _21e6cc139_Mul(_21e6c53da_Const* _self_, _21e6c53da_Const _43022_x) {
	{
		
		if (_21e6c9a2c_IsF64(_self_)) {
			_case_begin_20589982b:;
			{
				_21e6c8b3b_SetF64(_self_, static_cast<jule::F64>((_21e6c7684_ReadF64(_self_) * _21e6c7dc1_AsF64(&_43022_x))));
			}
		}
		else if (_21e6c907b_IsI64(_self_)) {
			_case_begin_205899155:;
			{
				if (_21e6c9a2c_IsF64(&_43022_x)) {
					_21e6c8b3b_SetF64(_self_, static_cast<jule::F64>((_21e6c7dc1_AsF64(_self_) * _21e6c7684_ReadF64(&_43022_x))));
				} else {
					_21e6c8146_SetI64(_self_, static_cast<jule::I64>((_21e6c6bd3_ReadI64(_self_) * _21e6c78e8_AsI64(&_43022_x))));
				};
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_2058991bb:;
			{
				if (_21e6c9a2c_IsF64(&_43022_x)) {
					_21e6c8b3b_SetF64(_self_, static_cast<jule::F64>((_21e6c7dc1_AsF64(_self_) * _21e6c7684_ReadF64(&_43022_x))));
				} else {
					_21e6c83bb_SetU64(_self_, static_cast<jule::U64>((_21e6c6e47_ReadU64(_self_) * _21e6c7b5c_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_2058990de:;
			{
				return false;;
			}
		}
		_match_end_205898792:;
	};
	return true;;
}



inline jule::Bool _21e6cc447_Div(_21e6c53da_Const* _self_, _21e6c53da_Const _45822_x) {
	{
		
		if (_21e6c9a2c_IsF64(_self_)) {
			_case_begin_20589d984:;
			{
				jule::F64 _46117_l = _21e6c7dc1_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_21e6c8b3b_SetF64(_self_, static_cast<jule::F64>(jule::div(_21e6c7684_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_21e6c907b_IsI64(_self_)) {
			_case_begin_20589d2ad:;
			{
				jule::F64 _46717_l = _21e6c7dc1_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_21e6c8b3b_SetF64(_self_, static_cast<jule::F64>(jule::div(_21e6c7dc1_AsF64(_self_),_46717_l)));
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_20589d324:;
			{
				jule::F64 _47317_l = _21e6c7dc1_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_21e6c8b3b_SetF64(_self_, static_cast<jule::F64>(jule::div(_21e6c7dc1_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_20589d247:;
			{
				return false;;
			}
		}
		_match_end_20589c8ea:;
	};
	return true;;
}



inline jule::Bool _21e6cc755_Mod(_21e6c53da_Const* _self_, _21e6c53da_Const _48722_x) {
	{
		
		if (_21e6c907b_IsI64(_self_)) {
			_case_begin_2058a2c1e:;
			{
				jule::I64 _49017_l = _21e6c78e8_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_21e6c8146_SetI64(_self_, static_cast<jule::I64>(jule::mod(_21e6c6bd3_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_2058a2559:;
			{
				jule::U64 _49617_l = _21e6c7b5c_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_21e6c83bb_SetU64(_self_, static_cast<jule::U64>(jule::mod(_21e6c6e47_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_2058a24e3:;
			{
				return false;;
			}
		}
		_match_end_2058a11c3:;
	};
	return true;;
}



inline jule::Bool _21e6cca63_BitwiseAnd(_21e6c53da_Const* _self_, _21e6c53da_Const _50929_x) {
	{
		
		if (_21e6c907b_IsI64(_self_)) {
			_case_begin_2058a5c00:;
			{
				_21e6c8146_SetI64(_self_, static_cast<jule::I64>((_21e6c6bd3_ReadI64(_self_) & _21e6c78e8_AsI64(&_50929_x))));
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_2058a553a:;
			{
				_21e6c83bb_SetU64(_self_, static_cast<jule::U64>((_21e6c6e47_ReadU64(_self_) & _21e6c7b5c_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_2058a54c4:;
			{
				return false;;
			}
		}
		_match_end_2058a41a4:;
	};
	return true;;
}



inline jule::Bool _21e6ccd71_BitwiseOr(_21e6c53da_Const* _self_, _21e6c53da_Const _52328_x) {
	{
		
		if (_21e6c907b_IsI64(_self_)) {
			_case_begin_2058a7b36:;
			{
				_21e6c8146_SetI64(_self_, static_cast<jule::I64>((_21e6c6bd3_ReadI64(_self_) | _21e6c78e8_AsI64(&_52328_x))));
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_2058a7471:;
			{
				_21e6c83bb_SetU64(_self_, static_cast<jule::U64>((_21e6c6e47_ReadU64(_self_) | _21e6c7b5c_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_2058a740a:;
			{
				return false;;
			}
		}
		_match_end_2058a733e:;
	};
	return true;;
}



inline jule::Bool _21e6cd17e_Xor(_21e6c53da_Const* _self_, _21e6c53da_Const _53722_x) {
	{
		
		if (_21e6c907b_IsI64(_self_)) {
			_case_begin_2058a9a6c:;
			{
				_21e6c8146_SetI64(_self_, static_cast<jule::I64>((_21e6c6bd3_ReadI64(_self_) ^ _21e6c78e8_AsI64(&_53722_x))));
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_2058a93a7:;
			{
				_21e6c83bb_SetU64(_self_, static_cast<jule::U64>((_21e6c6e47_ReadU64(_self_) ^ _21e6c7b5c_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_2058a9341:;
			{
				return false;;
			}
		}
		_match_end_2058a9275:;
	};
	return true;;
}



inline jule::Bool _21e6cd48c_Lshift(_21e6c53da_Const* _self_, _21e6c53da_Const _55125_x) {
	{
		
		if (_21e6c907b_IsI64(_self_)) {
			_case_begin_2058ab9a3:;
			{
				jule::I64 _55417_l = _21e6c78e8_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _21e6c7b5c_AsU64(&_55125_x);;
					_21e6c8146_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_21e6cdb0d_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_2058ab2dd:;
			{
				_21e6cdb0d_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_2058ab277:;
			{
				return false;;
			}
		}
		_match_end_2058ab1ab:;
	};
	return true;;
}



inline jule::Bool _21e6cd79a_Rshift(_21e6c53da_Const* _self_, _21e6c53da_Const _57125_x) {
	{
		
		if (_21e6c907b_IsI64(_self_)) {
			_case_begin_2058ae126:;
			{
				jule::I64 _57417_l = _21e6c78e8_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _21e6c7b5c_AsU64(&_57125_x);;
					_21e6c8146_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_21e6cde0a_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_21e6c92e0_IsU64(_self_)) {
			_case_begin_2058ad961:;
			{
				_21e6cde0a_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_2058ad8ea:;
			{
				return false;;
			}
		}
		_match_end_2058ad82e:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _21e6c53da_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22117005e_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221170e0b_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221171307_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a478b_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211a51b5_IsPrim(_2211a4d52_IdentTypeDecl* _self_) {
	return ((*(_self_))._field_Token.get()._field_Id == static_cast<jule::U32>(1LLU));;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a4d52_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a54a1_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a5858_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a5b44_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a6040_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a632b_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211a6969_IsUnsafe(_2211a6617_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a6617_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211a7173_AutoSized(_2211a6c99_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a6c99_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a74e7_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a789e_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a8cac_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a9098_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a964d_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a9939_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211aa143_IsNil(_2211a9ce1_LitExpr* _self_) {
	return (*(_self_))._field_Value.equal("nil", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211a9ce1_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211aa4ea_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211aacc0_IsSelf(_2211aa96d_IdentExpr* _self_) {
	return (*(_self_))._field_Ident.equal("self", 4);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211aa96d_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ab177_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ab52e_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ab8d6_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211abc8d_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ac211_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ac684_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211ad102_Unhandled(_2211acc8e_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _2211ad366_Ignored(_2211acc8e_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211acc8e_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211ada70_IsTargeted(_2211ad71d_FieldExprPair* _self_) {
	return ((*(_self_))._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ad71d_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ade6b_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211ae741_IsEmpty(_2211ae3de_BraceLit* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ae3de_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211aebb4_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211b06cb_IsEmpty(_2211b039b_SliceExpr* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b039b_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b0c1a_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b1325_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b1611_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b1a84_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b1e3b_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b22e3_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b25ce_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b2bd9_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b3228_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b4119_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b4724_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211b525d_IsSelf(_2211b4dea_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _2211b54c2_IsRef(_2211b4dea_ParamDecl* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b4dea_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211b656c_IsAnon(_2211b621a_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b621a_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b71e9_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b75a1_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211b8063_IsInf(_2211b7c11_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b7c11_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211b8838_IsWhileNext(_2211b84d6_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b84d6_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b8d77_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b922e_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b95d6_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b9a59_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211b9e11_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ba384_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211baa5a_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211baecd_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211bb6a4_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211bbe46_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211bc71b_AutoExpr(_2211bc3b9_EnumItemDecl* _self_) {
	return ((*(_self_))._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211bc3b9_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211bd475_DefaultTyped(_2211bcde2_EnumDecl* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211bcde2_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211bd8e8_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211be003_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211be201_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211be9a4_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211c017a_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211c0ae8_IsTraitImpl(_2211c0785_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _2211c0d5c_IsStructImpl(_2211c0785_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211c0785_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2211c6bed_FieldIns> _2211c21b0_instance(jule::Ptr<_2211c1d08_Field> _self_) {
	return jule::new_ptr<_2211c6bed_FieldIns>(_2211c6bed_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _2211c1d08_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211c3ab8_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2211c76e3_StructIns> _2211c4d3e_instance(jule::Ptr<_2211c48cc_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_2211c76e3_StructIns> _9917_ins = jule::new_ptr<_2211c76e3_StructIns>(_2211c76e3_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_2211c6bed_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_22126b17c_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__2211e0b3a_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bab005:;
		if (it != expr_end) {
			jule::Ptr<_22126b17c_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_22126b17c_Var>((*(_10621_s))));;
			}
			_iter_next_205bab005:;
			++it;
			goto _iter_begin_205bab005;
		}
		_iter_end_205bab005:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bac468:;
		if (it != expr_end) {
			jule::Ptr<_2211c1d08_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_2211c21b0_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _221454b18_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_205bac468:;
			++it;
			goto _iter_begin_205bac468;
		}
		_iter_end_205bac468:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_2211d9ccc_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_205bae800:;
			if (it != expr_end) {
				jule::Ptr<_2211d9ccc_Fn> _12125_f = *it;
				{
					jule::Ptr<_2211d9ccc_Fn> _12225_fins = jule::new_ptr<_2211d9ccc_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_205bae800:;
				++it;
				goto _iter_begin_205bae800;
			}
			_iter_end_205bae800:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_2211c76e3_StructIns> _2211c5119_appendInstance(_2211c48cc_Struct* _self_, jule::Ptr<_2211c76e3_StructIns>* _13338_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bb1b54:;
		if (it != expr_end) {
			jule::Ptr<_2211c76e3_StructIns> _13921_ains = *it;
			{
				if (_2211c82d7_Same(_13921_ains.ptr(), (*(_13338_ins)))) {
					return _13921_ains;;
				};
			}
			_iter_next_205bb1b54:;
			++it;
			goto _iter_begin_205bb1b54;
		}
		_iter_end_205bb1b54:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_13338_ins)));;
	return nullptr;;
}



inline jule::Ptr<_2211d9ccc_Fn> _2211c54c1_FindMethod(_2211c48cc_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bb3062:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_205bb3062:;
			++it;
			goto _iter_begin_205bb3062;
		}
		_iter_end_205bb3062:;
	};
	return nullptr;;
}



inline jule::Ptr<_22126b17c_Var> _2211c57ce_FindStatic(_2211c48cc_Struct* _self_, jule::Str _16229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bb422d:;
		if (it != expr_end) {
			jule::Ptr<_22126b17c_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_205bb422d:;
			++it;
			goto _iter_begin_205bb422d;
		}
		_iter_end_205bb422d:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211c1d08_Field> _2211c5adc_FindField(_2211c48cc_Struct* _self_, jule::Str _17328_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bb510d:;
		if (it != expr_end) {
			jule::Ptr<_2211c1d08_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_205bb510d:;
			++it;
			goto _iter_begin_205bb510d;
		}
		_iter_end_205bb510d:;
	};
	return nullptr;;
}



inline jule::Bool _2211c5dea_IsImplements(_2211c48cc_Struct* _self_, jule::Ptr<_2211ebeed_Trait> _18327_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bb5edd:;
		if (it != expr_end) {
			jule::Ptr<_2211ebeed_Trait> *_18416_it = it;
			{
				if ((_18327_t == (*(_18416_it)))) {
					return true;;
				};
			}
			_iter_next_205bb5edd:;
			++it;
			goto _iter_begin_205bb5edd;
		}
		_iter_end_205bb5edd:;
	};
	return false;;
}



inline jule::Bool _2211c6208_IsDerives(_2211c48cc_Struct* _self_, jule::Str _19324_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bb654e:;
		if (it != expr_end) {
			jule::Ptr<_221171307_Directive> *_19416_d = it;
			{
				if ((*(_19416_d)).get()._field_Tag.get()._field_Kind.equal("derive", 6)) {
					if ((((*(_19416_d)).get()._field_Args.len() == 1LL) && ((*(_19416_d)).get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_205bb654e:;
			++it;
			goto _iter_begin_205bb654e;
		}
		_iter_end_205bb654e:;
	};
	return false;;
}



inline jule::Bool _2211c6516_IsUses(_2211c48cc_Struct* _self_, jule::Ptr<_2211c48cc_Struct> _20521_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bb8bd3:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> *_20616_u = it;
			{
				while ((_20521_s == (*(_20616_u)))) {
					{
						return true;;
					}
				_iter_next_205bb9431:;
				}
				_iter_end_205bb9431:;;
			}
			_iter_next_205bb8bd3:;
			++it;
			goto _iter_begin_205bb8bd3;
		}
		_iter_end_205bb8bd3:;
	};
	return false;;
}



inline jule::Bool _2211c677a_HasRefAccessible(_2211c48cc_Struct* _self_) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bb95eb:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> *_21616_m = it;
			{
				if ((((*(_21616_m)).get()._field_Params.len() > 0LL) && _2211d8d31_IsRef((*(_21616_m)).get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_205bb95eb:;
			++it;
			goto _iter_begin_205bb95eb;
		}
		_iter_end_205bb95eb:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _2211c48cc_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211c6bed_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211cb692_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211cbb59_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211cc011_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211cc40c_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211cc7b4_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ccac2_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211cd122_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211cd9c4_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211cdd7b_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ce2ee_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ce6a6_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211cea5d_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ceed1_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d0520_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d0a5e_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d1345_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d16db_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d1aa4_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d1d90_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d2401_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d26ed_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d2ac7_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d2eb2_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d32d1_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d36bb_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d3aa6_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d405c_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d4513_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d48ed_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d4c1c_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d503b_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d56e0_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d5a53_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d5e3d_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d623a_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d6526_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d6812_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d6b20_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d6ed8_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d72c4_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d7c86_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2211dbaae_ParamIns> _2211d8858_instance(jule::Ptr<_2211d8490_Param> _self_) {
	return jule::new_ptr<_2211dbaae_ParamIns>(_2211dbaae_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _2211d8abc_IsSelf(_2211d8490_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _2211d8d31_IsRef(_2211d8490_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d8490_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2211da23e_IsVoid(_2211d9ccc_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _2211da4a3_IsMethod(_2211d9ccc_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _2211da717_IsEntryPoint(_2211d9ccc_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _2211da97b_IsInit(_2211d9ccc_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _2211dabe0_IsAnon(_2211d9ccc_Fn* _self_) {
	return _21da1d547_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _2211dae54_AnyVar(_2211d9ccc_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_2211dc97d_FnIns> _2211db1b8_instanceForce(jule::Ptr<_2211d9ccc_Fn> _self_) {
	jule::Ptr<_2211dc97d_FnIns> _10017_ins = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_221224135_Scope>(), ._field_Refers=static__2211e0b3a_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_2211dbaae_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bcdc92:;
		if (it != expr_end) {
			jule::Ptr<_2211d8490_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_2211d8858_instance(_10721_p));;
			}
			_iter_next_205bcdc92:;
			++it;
			goto _iter_begin_205bcdc92;
		}
		_iter_end_205bcdc92:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_2211dc97d_FnIns> _2211db42c_instance(jule::Ptr<_2211d9ccc_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _2211db1b8_instanceForce(_self_);;
}



inline jule::Ptr<_2211dc97d_FnIns> _2211db707_appendInstance(_2211d9ccc_Fn* _self_, jule::Ptr<_2211dc97d_FnIns>* _12838_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bd2a76:;
		if (it != expr_end) {
			jule::Ptr<_2211dc97d_FnIns> _14421_ains = *it;
			{
				if (_2211de386_Same(_14421_ains.ptr(), (*(_12838_ins)))) {
					return _14421_ains;;
				};
			}
			_iter_next_205bd2a76:;
			++it;
			goto _iter_begin_205bd2a76;
		}
		_iter_end_205bd2a76:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _2211d9ccc_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2211dbe88_Str(_2211dbaae_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		(_16617_s).append("mut ", 4);
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		(_16617_s).append("&_:", 3);
	};
	if (_2211d8abc_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_2211d8d31_IsRef((*(_self_))._field_Decl.ptr())) {
			(_16617_s).append("&", 1);
		};
		(_16617_s).append("self", 4);
		return _16617_s;;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		(_16617_s).append("...", 3);
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_16617_s+=_221453793_Str((*(_self_))._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _2211dbaae_ParamIns _Src) {
	_Stream << _2211dbe88_Str(&_Src);
	return _Stream;
}



inline jule::Str _2211dccad_Str(_2211dc97d_FnIns* _self_) {
	;
	return _2211de694_GetKindStr(_self_, false);;
}



inline jule::Bool _2211dd0bb_Equal(jule::Ptr<_2211dc97d_FnIns> _self_, jule::Ptr<_221453397_TypeKind> _21721_other) {
	jule::Ptr<_2211dc97d_FnIns> _21813_f = _221456c80_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _2211dd52d_EqualFn(_self_, &(_21813_f));;
}



inline jule::Bool _2211dd52d_EqualFn(jule::Ptr<_2211dc97d_FnIns> _self_, jule::Ptr<_2211dc97d_FnIns>* _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22824_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22824_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_2211da23e_IsVoid(_self_.get()._field_Decl.ptr()) != _2211da23e_IsVoid((*(_22824_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_2211dbaae_ParamIns>,jule::Ptr<_2211dbaae_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_2211dbaae_ParamIns>,jule::Ptr<_2211dbaae_ParamIns>)>([=](jule::Ptr<_2211dbaae_ParamIns> _23830_p1, jule::Ptr<_2211dbaae_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_2211d8abc_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_2211d8abc_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_2211d8d31_IsRef(_23830_p1.get()._field_Decl.ptr()) != _2211d8d31_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _221453aa1_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if (((*(_22824_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I32 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i], (*(_22824_f)).get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_205be0d09:;
	}
	_iter_end_205be0d09:;;
	if ((!(_2211da23e_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_221453aa1_Equal(_self_.get()._field_Result, (*(_22824_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _2211dd83b_equalTrait(jule::Ptr<_2211dc97d_FnIns> _self_, jule::Ptr<_2211dc97d_FnIns>* _28727_other) {
	if ((_self_.get()._field_Decl.get()._field_Public != (*(_28727_other)).get()._field_Decl.get()._field_Public)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Ident != (*(_28727_other)).get()._field_Decl.get()._field_Ident)) {
		return false;;
	};
	if ((!(_2211dd52d_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28727_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_221453397_TypeKind>> _2211ddaa0_Types(_2211dc97d_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_205be5061:;
			{
				return nullptr;;
			}
		}
		else if ((_221457731_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_205be50c7:;
			{
				return jule::Slice<jule::Ptr<_221453397_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_205be4eea:;
			{
				return _221457731_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_205be4e73:;
	};
}



inline jule::Bool _2211ddd14_IsBuiltin(_2211dc97d_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _2211de078_IsAnon(_2211dc97d_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _2211dabe0_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _2211de386_Same(_2211dc97d_FnIns* _self_, jule::Ptr<_2211dc97d_FnIns> _33019_f) {
	if ((((*(_self_))._field_Decl != _33019_f.get()._field_Decl) || (_33019_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205be8817:;
		if (it != expr_end) {
			jule::I32 _33513_i = it - expr->begin();
			jule::Ptr<_221451b15_InsGeneric> *_33516_g = it;
			{
				jule::Ptr<_221451b15_InsGeneric> _33617_g2 = _33019_f.get()._field_Generics[_33513_i];;
				if ((((*(_33516_g)).get()._field_Kind.get()._field_CppIdent != _33617_g2.get()._field_Kind.get()._field_CppIdent) || (!(_221453aa1_Equal((*(_33516_g)).get()._field_Kind, _33617_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_205be8817:;
			++it;
			_33513_i++;
			goto _iter_begin_205be8817;
		}
		_iter_end_205be8817:;
	};
	return true;;
}



inline jule::Str _2211de694_GetKindStr(_2211dc97d_FnIns* _self_, jule::Bool _34725_ident) {
	jule::Str _34817_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		(_34817_s).append("unsafe ", 7);
	};
	(_34817_s).append("fn", 2);
	if ((_34725_ident && ((*(_self_))._field_Decl != nullptr))) {
		_34817_s+=(jule::Str(" ", 1) + (*(_self_))._field_Decl.get()._field_Ident);
	};
	(_34817_s).append("(", 1);
	jule::I32 _36113_n = (*(_self_))._field_Params.len();;
	if ((_36113_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_205becec0:;
			if (it != expr_end) {
				jule::Ptr<_2211dbaae_ParamIns> *_36320_p = it;
				{
					_34817_s+=_2211dbe88_Str((*(_36320_p)).ptr());
					(_34817_s).append(",", 1);
				}
				_iter_next_205becec0:;
				++it;
				goto _iter_begin_205becec0;
			}
			_iter_end_205becec0:;
		};
		(_34817_s).mut_slice(0LL, (_34817_s.len() - 1LL));;
	};
	(_34817_s).append(")", 1);
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		(_34817_s).append("!", 1);
	};
	if ((!(_2211da23e_IsVoid((*(_self_))._field_Decl.ptr())))) {
		(_34817_s).append(":", 1);
		_34817_s+=_221453793_Str((*(_self_))._field_Result.ptr());
	};
	return _34817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _2211dc97d_FnIns _Src) {
	_Stream << _2211dccad_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_2211e08d7_ReferenceStack> static__2211e0b3a_new(void) {
	return jule::new_ptr<_2211e08d7_ReferenceStack>(_2211e08d7_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I32 _2211e0ec0_Len(_2211e08d7_ReferenceStack* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_buffer.len());;
}



inline jule::Any _2211e12cd_At(_2211e08d7_ReferenceStack* _self_, jule::I32 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _2211e1553_Push(_2211e08d7_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*(_self_))._field_buffer = jule::alloc_for_append((*(_self_))._field_buffer,1);(*(_self_))._field_buffer.__push(_7327_ref);;
}



inline jule::Bool _20640c9ed_Exist(_2211e08d7_ReferenceStack* _self_, jule::Ptr<_2211dc97d_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20640dd0c:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_20640dd0c:;
			++it;
			goto _iter_begin_20640dd0c;
		}
		_iter_end_20640dd0c:;
	};
	return false;;
}

inline jule::Bool _20642176a_Exist(_2211e08d7_ReferenceStack* _self_, jule::Ptr<_22126b17c_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206422a35:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_206422a35:;
			++it;
			goto _iter_begin_206422a35;
		}
		_iter_end_206422a35:;
	};
	return false;;
}

inline jule::Bool _2064a14ba_Exist(_2211e08d7_ReferenceStack* _self_, jule::Ptr<_2211c76e3_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2064a27c9:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_2064a27c9:;
			++it;
			goto _iter_begin_2064a27c9;
		}
		_iter_end_2064a27c9:;
	};
	return false;;
}

inline jule::Bool _206896a58_Exist(_2211e08d7_ReferenceStack* _self_, jule::Ptr<_2211ebeed_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206897c8a:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_206897c8a:;
			++it;
			goto _iter_begin_206897c8a;
		}
		_iter_end_206897c8a:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _2211e08d7_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2211e1c18_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2211e6459_symbolBuilder> _2211e6910_getRoot(jule::Ptr<_2211e6459_symbolBuilder> _self_) {
	jule::Ptr<_2211e6459_symbolBuilder> _32517_root = _self_;;
	while ((_32517_root.get()._field_owner != nullptr)) {
		{
			_32517_root=_32517_root.get()._field_owner;
		}
	_iter_next_205c16736:;
	}
	_iter_end_205c16736:;;
	return _32517_root;;
}



inline void _2211e6cc8_pushErr(_2211e6459_symbolBuilder* _self_, jule::Ptr<_21da1aa0b_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_221248b93_compilerErr(_33227_token, true, _33242_fmt, _33255_args));;
}



inline void _2211e7191_pushErrText(_2211e6459_symbolBuilder* _self_, jule::Ptr<_21da1aa0b_Token>* _33631_token, jule::Str _33646_fmt, jule::Slice<jule::Any> _33659_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_221248b93_compilerErr(_33631_token, false, _33646_fmt, _33659_args));;
}



inline void _2211e74b0_pushSuggestion(_2211e6459_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_22124a128_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _2211e7867_checkCppUseDeclPath(_2211e6459_symbolBuilder* _self_, jule::Ptr<_2211bbe46_UseDecl>* _34539_decl, jule::Str _34555_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _34613_ext = _21d5de767_Ext(_34555_path);;
	if (((!(_21d667d40_IsValidHeaderExt(_34613_ext))) && (!(_21d6680d7_IsValidCppExt(_34613_ext))))) {
		_2211e6cc8_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_34613_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_21c4ed05b_Status> _35313_info = ({
		auto except = static__21d5e159e_Of(_34555_path);
		(except.ok()) ? (except.result) : ({{
			_2211e6cc8_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_21c4ed05b_Status>(nullptr);});
	});;
	if (_21c4ed468_IsDir(_35313_info.ptr())) {
		_2211e6cc8_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_221242a9e_ImportInfo> _2211e7b42_buildCppHeaderImport(_2211e6459_symbolBuilder* _self_, jule::Ptr<_2211bbe46_UseDecl>* _36544_decl) {
	jule::Str _36617_path = (*(_36544_decl)).get()._field_LinkPath;;
	if ((!(_21d667a87_IsStdHeaderPath((*(_36544_decl)).get()._field_LinkPath)))) {
		_36617_path=_21d5de4c0_Join(jule::Slice<jule::Str>::make({_21da2178c_Dir((*(_36544_decl)).get()._field_Token.get()._field_File.ptr()),(*(_36544_decl)).get()._field_LinkPath}));
		jule::Bool _37021_ok = _2211e7867_checkCppUseDeclPath(_self_, _36544_decl, _36617_path);;
		if ((!(_37021_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21d5dea0e_Abs(_36617_path);
			_36617_path = __jule_assign_result.__jule_result_arg0;
			_37021_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37021_ok))) {
			_2211e6cc8_pushErr(_self_, &((*(_36544_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_36544_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_221242a9e_ImportInfo>(_221242a9e_ImportInfo{._field_Token=(*(_36544_decl)).get()._field_Token, ._field_Path=_36617_path, ._field_LinkPath=(*(_36544_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_221242a9e_ImportInfo> _2211e7e50_buildStdImport(_2211e6459_symbolBuilder* _self_, jule::Ptr<_2211bbe46_UseDecl>* _39338_decl) {
	jule::Str _39417_path = (*(_39338_decl)).get()._field_LinkPath.slice(5LL);;
	_39417_path=_21d5da741_Replace(_39417_path, jule::Str("::", 2), jule::Str::from_byte(92LL), -1LL);
	_39417_path=_21d5de4c0_Join(jule::Slice<jule::Str>::make({_21d71a19a_PathStdlib,_39417_path}));
	jule::Bool _39720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21d5dea0e_Abs(_39417_path);
		_39417_path = __jule_assign_result.__jule_result_arg0;
		_39720_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39720_ok))) {
		_2211e6cc8_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21c4ed05b_Status> _40413_info = ({
		auto except = static__21d5e159e_Of(_39417_path);
		(except.ok()) ? (except.result) : ({{
			_2211e6cc8_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_21c4ed05b_Status>(nullptr);});
	});;
	if ((!(_21c4ed468_IsDir(_40413_info.ptr())))) {
		_2211e6cc8_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _41413_i = (_21d5d6033_FindLast((*(_39338_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _41513_ident = (*(_39338_decl)).get()._field_LinkPath.slice(_41413_i);;
	return jule::new_ptr<_221242a9e_ImportInfo>(_221242a9e_ImportInfo{._field_Token=(*(_39338_decl)).get()._field_Token, ._field_Path=_39417_path, ._field_LinkPath=(*(_39338_decl)).get()._field_LinkPath, ._field_Ident=_41513_ident, ._field_Alias=(*(_39338_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=(*(_39338_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_2212456d9_Package>(_2212456d9_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_221242a9e_ImportInfo> _2211e825d_buildIdentImport(jule::Ptr<_2211e6459_symbolBuilder> _self_, jule::Ptr<_2211bbe46_UseDecl>* _43241_decl) {
	jule::Str _43313_modPath = _22123eded_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._22123e062_GetModPath(_self_.get()._field_importer);;
	if ((_43313_modPath.len() == 0LL)) {
		_2211e6cc8_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_2211e74b0_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44017_path = (*(_43241_decl)).get()._field_LinkPath;;
	_44017_path=_21d5da741_Replace(_44017_path, jule::Str("::", 2), jule::Str::from_byte(92LL), -1LL);
	_44017_path=_21d5de4c0_Join(jule::Slice<jule::Str>::make({_43313_modPath,_44017_path}));
	jule::Bool _44420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21d5dea0e_Abs(_44017_path);
		_44017_path = __jule_assign_result.__jule_result_arg0;
		_44420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44420_ok))) {
		_2211e6cc8_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21c4ed05b_Status> _45113_info = ({
		auto except = static__21d5e159e_Of(_44017_path);
		(except.ok()) ? (except.result) : ({{
			_2211e6cc8_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_21c4ed05b_Status>(nullptr);});
	});;
	if ((!(_21c4ed468_IsDir(_45113_info.ptr())))) {
		_2211e6cc8_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _46113_i = (_21d5d6033_FindLast((*(_43241_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _46213_ident = (*(_43241_decl)).get()._field_LinkPath.slice(_46113_i);;
	return jule::new_ptr<_221242a9e_ImportInfo>(_221242a9e_ImportInfo{._field_Token=(*(_43241_decl)).get()._field_Token, ._field_Path=_44017_path, ._field_LinkPath=(*(_43241_decl)).get()._field_LinkPath, ._field_Ident=_46213_ident, ._field_Alias=(*(_43241_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=(*(_43241_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_2212456d9_Package>(_2212456d9_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_221242a9e_ImportInfo> _2211e856b_buildImport(jule::Ptr<_2211e6459_symbolBuilder> _self_, jule::Ptr<_2211bbe46_UseDecl>* _47936_decl) {
	{
		
		if ((*(_47936_decl)).get()._field_CppLinked) {
			_case_begin_205c2d40c:;
			{
				return _2211e7b42_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*(_47936_decl)).get()._field_Std) {
			_case_begin_205c2d64e:;
			{
				return _2211e7e50_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_205c2cc14:;
			{
				return _2211e825d_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_205c2cb48:;
	};
}



inline jule::Bool _2211e8879_checkDuplicateUseDecl(_2211e6459_symbolBuilder* _self_, jule::Ptr<_221242a9e_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_221242a9e_ImportInfo> _49213_lpkg = _22142172d_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)>([=](jule::Ptr<_221242a9e_ImportInfo> _49248_spkg) mutable -> jule::Bool {
		return ((*(_49041_pkg)).get()._field_Path == _49248_spkg.get()._field_Path);;
	}));;
	if ((_49213_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_2211e6cc8_pushErr(_self_, &((*(_49041_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_49041_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_2211e74b0_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _2211e8b98_implImportSelections(_2211e6459_symbolBuilder* _self_, jule::Ptr<_221242a9e_ImportInfo>* _50444_imp, jule::Ptr<_2211bbe46_UseDecl>* _50467_decl) {
	(*(_50444_imp)).get()._field_Selected=(*(_50467_decl)).get()._field_Selected;
	{
		auto expr = &((*(_50444_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c31d8e:;
		if (it != expr_end) {
			jule::Ptr<_21da1aa0b_Token> _50616_item = *it;
			{
				{
					auto expr = &((*(_50444_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205c325cb:;
					if (it != expr_end) {
						jule::Ptr<_21da1aa0b_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_205c325cb;
							} else if ((_50616_item.get()._field_Kind == _50720_citem.get()._field_Kind)) {
								_2211e6cc8_pushErr(_self_, &(_50616_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_50616_item.get()._field_Kind, &__jule_any_type5)}));
								_2211e74b0_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_205c325cb;
							};
						}
						_iter_next_205c325cb:;
						++it;
						goto _iter_begin_205c325cb;
					}
					_iter_end_205c325cb:;
				};
			}
			_iter_next_205c31d8e:;
			++it;
			goto _iter_begin_205c31d8e;
		}
		_iter_end_205c31d8e:;
	};
}



inline jule::Str _2211e8ea6_getAsLinkPath(jule::Ptr<_2211e6459_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_21d5d474b_HasPrefix(_51937_path, _21d71a19a_PathStdlib)) {
		(_51937_path).mut_slice(_21d71a19a_PathStdlib.len());;
		return (jule::Str("std", 3) + _21d5da741_Replace(_51937_path, jule::Str::from_byte(92LL), jule::Str("::", 2), -1LL));;
	};
	jule::Str _52514_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21d5dea0e_Abs(_22123eded_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._22123e062_GetModPath(_self_.get()._field_importer));
		_52514_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_52514_root.len());;
	if ((_51937_path[0LL] == 92LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _21d5da741_Replace(_51937_path, jule::Str::from_byte(92LL), jule::Str("::", 2), -1LL);;
}



inline void _2211e936e_pushCycleError(jule::Ptr<_2211e6459_symbolBuilder> _self_, jule::Ptr<_2211e6459_symbolBuilder>* _53335_sb, jule::Str _53355_path, jule::Str* _53371_message) {
	;
	jule::Str _53513_refersTo = _21d675a2e_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_2211e8ea6_getAsLinkPath(_self_, _21da2178c_Dir((*(_53335_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_2211e8ea6_getAsLinkPath(_self_, _53355_path), &__jule_any_type5)}));;
	((*(_53371_message))).buffer.insert(0, (((_21d5d3ecb_Repeat(jule::Str(" ", 1), 7LL) + _53513_refersTo) + jule::Str("\n", 1))));;
}



inline void _2211e9737_pushCrossCycleError(jule::Ptr<_2211e6459_symbolBuilder> _self_, jule::Ptr<_2211e6459_symbolBuilder>* _54240_target, jule::Ptr<_221242a9e_ImportInfo>* _54265_imp, jule::Ptr<_21da1aa0b_Token>* _54284_errorToken) {
	jule::Str _54317_message = jule::Str();;
	_2211e936e_pushCycleError(_self_, &(_self_), (*(_54265_imp)).get()._field_Path, &(_54317_message));
	jule::Ptr<_2211e6459_symbolBuilder> _54717_owner = _self_.get()._field_owner;;
	jule::Ptr<_2211e6459_symbolBuilder> _54817_old = _self_;;
	while ((_54717_owner.get()._field_owner != nullptr)) {
		{
			_2211e936e_pushCycleError(_self_, &(_54817_old.get()._field_owner), _21da2178c_Dir(_54817_old.get()._field_table.get()._field_File.ptr()), &(_54317_message));
			if ((_54717_owner.get()._field_owner == (*(_54240_target)))) {
				_2211e936e_pushCycleError(_self_, _54240_target, _21da2178c_Dir(_54717_owner.get()._field_table.get()._field_File.ptr()), &(_54317_message));
				goto _iter_end_205c39ca9;
			};
			_54817_old=_54717_owner;
			_54717_owner=_54717_owner.get()._field_owner;
		}
	_iter_next_205c39ca9:;
	}
	_iter_end_205c39ca9:;;
	_2211e6cc8_pushErr(_self_.ptr(), _54284_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_54317_message, &__jule_any_type5)}));
}



inline jule::Bool _2211e9ade_checkImportCycles(jule::Ptr<_2211e6459_symbolBuilder> _self_, jule::Ptr<_221242a9e_ImportInfo> _56537_imp, jule::Ptr<_2211bbe46_UseDecl>* _56556_decl) {
	if ((_56537_imp.get()._field_Path == _21da2178c_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_2211e6cc8_pushErr(_self_.ptr(), &((*(_56556_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_2211e8ea6_getAsLinkPath(_self_, _56537_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_21da2178c_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_2211e9737_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_2211e6459_symbolBuilder> _58017_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_21da2178c_Dir(_58017_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_2211e9737_pushCrossCycleError(_self_, &(_58017_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	if ((_58017_owner.get()._field_owner != nullptr)) {
		_58017_owner=_58017_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _2211e9ec9_checkPackageAccessibility(_2211e6459_symbolBuilder* _self_, jule::Ptr<_2211bbe46_UseDecl>* _60145_decl, jule::Str* _60162_mod, jule::Str* _60173_path) {
	if (((_22123eded_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._22123e062_GetModPath((*(_self_))._field_importer) != (*(_60162_mod))) && _21d5d9498_Contains((*(_60173_path)), jule::Str("internal", 8)))) {
		_2211e6cc8_pushErr(_self_, &((*(_60145_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _2211ea392_importPackage(jule::Ptr<_2211e6459_symbolBuilder> _self_, jule::Ptr<_221242a9e_ImportInfo>* _60738_imp, jule::Ptr<_2211bbe46_UseDecl>* _60761_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_60738_imp)).get()._field_CppLinked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_221242a9e_ImportInfo> _61217_port = _22123eded_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._22123e67d_GetImport(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path);;
	if ((_61217_port != nullptr)) {
		(*(_60738_imp)).get()._field_Package=_61217_port.get()._field_Package;
		(*(_60738_imp)).get()._field_Duplicate=true;
		jule::Str _61717_oldMod = _22123eded_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._22123e062_GetModPath(_self_.get()._field_importer);;
		_22123eded_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._22123dd20_SetModPath(_self_.get()._field_importer, _22123eded_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._22123e370_ModById(_self_.get()._field_importer, (*(_60738_imp)).get()._field_ModId));
		_2211e9ec9_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_61717_oldMod), &(_61217_port.get()._field_Path));
		_22123eded_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._22123dd20_SetModPath(_self_.get()._field_importer, _61717_oldMod);
	} else {
		if ((!(_2211e9ade_checkImportCycles(_self_, (*(_60738_imp)), _60761_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _62617_oldMod = _22123eded_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._22123e062_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_22123eded_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._22123dd20_SetModPath(_self_.get()._field_importer, _62617_oldMod);
		});;
		if ((*(_60738_imp)).get()._field_Std) {
			_22123eded_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._22123dd20_SetModPath(_self_.get()._field_importer, _21d71a19a_PathStdlib);
		};
		jule::Slice<jule::Ptr<_22117005e_Ast>> _63122_asts;;
		jule::Slice<_21d6755de_Log> _63132_errors;;
		({
			__jule_tuple_sx_22117005e_Ast__jule_tuple_s_21d6755de_Log __jule_assign_result = _22123eded_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._22123ea35_ImportPackage(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path, (!((*(_60738_imp)).get()._field_Std)));
			_63122_asts = __jule_assign_result.__jule_result_arg0;
			_63132_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63132_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_63132_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_2211e9ec9_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_62617_oldMod), &((*(_60738_imp)).get()._field_Path));
		{
			auto expr = &(_63122_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_205c47d83:;
			if (it != expr_end) {
				jule::Ptr<_22117005e_Ast> _63925_ast = *it;
				{
					jule::Ptr<_221421222_SymbolTable> _64025_table = nullptr;;
					({
						__jule_tuple_x_221421222_SymbolTable__jule_tuple_s_21d6755de_Log __jule_assign_result = _2214726a2_buildSymbols(&(_63925_ast), &(_self_.get()._field_importer), _self_);
						_64025_table = __jule_assign_result.__jule_result_arg0;
						_63132_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63132_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_63132_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*(_60738_imp)).get()._field_Package.get()._field_Files = jule::alloc_for_append((*(_60738_imp)).get()._field_Package.get()._field_Files,1);(*(_60738_imp)).get()._field_Package.get()._field_Files.__push(_64025_table);;
				}
				_iter_next_205c47d83:;
				++it;
				goto _iter_begin_205c47d83;
			}
			_iter_end_205c47d83:;
		};
	};
	_2211e8b98_implImportSelections(_self_.ptr(), _60738_imp, _60761_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_221242a9e_ImportInfo> _2211ea6a0_importUseDecl(jule::Ptr<_2211e6459_symbolBuilder> _self_, jule::Ptr<_2211bbe46_UseDecl>* _65438_decl) {
	jule::Ptr<_221242a9e_ImportInfo> _65517_imp = _2211e856b_buildImport(_self_, _65438_decl);;
	if ((_65517_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66117_ok = _2211e8879_checkDuplicateUseDecl(_self_.ptr(), &(_65517_imp));;
	if ((!(_66117_ok))) {
		return nullptr;;
	};
	_66117_ok=_2211ea392_importPackage(_self_, &(_65517_imp), _65438_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_65517_imp);;
	if (_66117_ok) {
		_22123eded_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._22123ecaa_Imported(_self_.get()._field_importer, _65517_imp);
		return _65517_imp;;
	};
	return nullptr;;
}



inline void _2211ea87b_importUseDecls(jule::Ptr<_2211e6459_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c4c3d7:;
		if (it != expr_end) {
			jule::Ptr<_2211bbe46_UseDecl> _67621_decl = *it;
			{
				_2211ea6a0_importUseDecl(_self_, &(_67621_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_205c4c3d7;
				};
			}
			_iter_next_205c4c3d7:;
			++it;
			goto _iter_begin_205c4c3d7;
		}
		_iter_end_205c4c3d7:;
	};
}



inline void _2211eab01_appendNode(_2211e6459_symbolBuilder* _self_, _221170e0b_Node* _68534_node) {
	{
		auto &_match_expr{ (*(_68534_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_205c4e9a0:;
			{
				(*(_self_))._field_table.get()._field_Impls = jule::alloc_for_append((*(_self_))._field_table.get()._field_Impls,1);(*(_self_))._field_table.get()._field_Impls.__push(_2211e5e09_buildImpl((*(_68534_node))._field_Data.cast_ptr<_2211c0785_Impl>(&__jule_any_type11)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_205c4d460:;
			{
				jule::Ptr<_22145264e_TypeAlias> _69021_ta = _2211e25ed_buildTypeAlias((*(_68534_node))._field_Data.cast_ptr<_2211baa5a_TypeAliasDecl>(&__jule_any_type12));;
				(*(_self_))._field_table.get()._field_TypeAliases = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeAliases,1);(*(_self_))._field_table.get()._field_TypeAliases.__push(_69021_ta);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_205c4e2eb:;
			{
				jule::Ptr<_2211c48cc_Struct> _69321_srct = _2211e2e5b_buildStruct((*(_68534_node))._field_Data.cast_ptr<_2211be9a4_StructDecl>(&__jule_any_type13));;
				(*(_self_))._field_table.get()._field_Structs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Structs,1);(*(_self_))._field_table.get()._field_Structs.__push(_69321_srct);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_205c4e362:;
			{
				jule::Ptr<_2211d9ccc_Fn> _69621_f = _2211e3ab6_buildFn((*(_68534_node))._field_Data.cast_ptr<_2211b621a_FnDecl>(&__jule_any_type14));;
				(*(_self_))._field_table.get()._field_Funcs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Funcs,1);(*(_self_))._field_table.get()._field_Funcs.__push(_69621_f);;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_205c4e3c8:;
			{
				jule::Ptr<_2211ebeed_Trait> _69921_t = _2211e439c_buildTrait((*(_68534_node))._field_Data.cast_ptr<_2211c017a_TraitDecl>(&__jule_any_type15));;
				(*(_self_))._field_table.get()._field_Traits = jule::alloc_for_append((*(_self_))._field_table.get()._field_Traits,1);(*(_self_))._field_table.get()._field_Traits.__push(_69921_t);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_205c4eb15:;
			{
				jule::Ptr<_22126b17c_Var> _70221_v = _2211e58ba_buildVar((*(_68534_node))._field_Data.cast_ptr<_2211b71e9_VarDecl>(&__jule_any_type16));;
				(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_70221_v);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_205c4eb7b:;
			{
				jule::Ptr<_2211ee781_Enum> _70521_e = _2211e4d3c_buildEnum((*(_68534_node))._field_Data.cast_ptr<_2211bcde2_EnumDecl>(&__jule_any_type17));;
				(*(_self_))._field_table.get()._field_Enums = jule::alloc_for_append((*(_self_))._field_table.get()._field_Enums,1);(*(_self_))._field_table.get()._field_Enums.__push(_70521_e);;
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_205c4ebe2:;
			{
				jule::Ptr<_221200d7b_TypeEnum> _70821_e = _2211e5623_buildTypeEnum((*(_68534_node))._field_Data.cast_ptr<_2211be003_TypeEnumDecl>(&__jule_any_type18));;
				(*(_self_))._field_table.get()._field_TypeEnums = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeEnums,1);(*(_self_))._field_table.get()._field_TypeEnums.__push(_70821_e);;
			}
		}
		else {
			_case_begin_205c4e1db:;
			{
				_2211e6cc8_pushErr(_self_, &((*(_68534_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_205c4e186:;
	};
}



inline void _2211eaccc_appendNodes(_2211e6459_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c5704b:;
		if (it != expr_end) {
			_221170e0b_Node _71621_node = *it;
			{
				_2211eab01_appendNode(_self_, &(_71621_node));
			}
			_iter_next_205c5704b:;
			++it;
			goto _iter_begin_205c5704b;
		}
		_iter_end_205c5704b:;
	};
}



inline void _2211eb052_pushDirectivePass(_2211e6459_symbolBuilder* _self_, jule::Ptr<_221171307_Directive>* _72141_d) {
	if (((*(_72141_d)).get()._field_Args.len() == 0LL)) {
		_2211e6cc8_pushErr(_self_, &((*(_72141_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_72141_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_21da1aa0b_Token> _72617_arg = (*(_72141_d)).get()._field_Args[1LL];;
		_2211e6cc8_pushErr(_self_, &(_72617_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_72141_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_21da1aa0b_Token> _73013_arg = (*(_72141_d)).get()._field_Args[0LL];;
	if ((_73013_arg.get()._field_Id != static_cast<jule::U32>(6LLU))) {
		_2211e6cc8_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_73013_arg.get()._field_Kind[0LL] != '\"')) {
		_2211e6cc8_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_self_))._field_table.get()._field_Passes = jule::alloc_for_append((*(_self_))._field_table.get()._field_Passes,1);(*(_self_))._field_table.get()._field_Passes.__push(_2211e1c18_Pass{._field_Token=(*(_72141_d)).get()._field_Tag, ._field_Text=_73013_arg.get()._field_Kind.slice(1LL, (_73013_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _2211eb22d_appendTopDirectives(_2211e6459_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c5a8e0:;
		if (it != expr_end) {
			jule::Ptr<_221171307_Directive> _74821_d = *it;
			{
				{
					auto &_match_expr{ _74821_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_205c5d9c0:;
						{
							_2211eb052_pushDirectivePass(_self_, &(_74821_d));
						}
					}
					_match_end_205c5d948:;
				};
			}
			_iter_next_205c5a8e0:;
			++it;
			goto _iter_begin_205c5a8e0;
		}
		_iter_end_205c5a8e0:;
	};
}



inline void _2211eb409_build(jule::Ptr<_2211e6459_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_221421222_SymbolTable>(_221421222_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_2211eb22d_appendTopDirectives(_self_.ptr());
	_2211ea87b_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_2211eaccc_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2211e6459_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2211ec3e9_Str(_2211ebeed_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _2211ec707_Equal(jule::Ptr<_2211ebeed_Trait> _self_, jule::Ptr<_221453397_TypeKind> _2621_other) {
	jule::Ptr<_2211ebeed_Trait> _2713_trt = _221457258_Trait(_2621_other.ptr());;
	return (_self_ == _2713_trt);;
}



inline jule::Bool _2211eca8c_IsBuiltin(_2211ebeed_Trait* _self_) {
	return ((*(_self_))._field_Token == nullptr);;
}



inline jule::Ptr<_2211d9ccc_Fn> _2211ecd9a_FindMethod(_2211ebeed_Trait* _self_, jule::Str _4029_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c62474:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_Ident == _4029_ident)) {
					return _4121_f;;
				};
			}
			_iter_next_205c62474:;
			++it;
			goto _iter_begin_205c62474;
		}
		_iter_end_205c62474:;
	};
	return _2211ed4b6_findMethodInherit(_self_, &(_4029_ident));;
}



inline jule::Bool _2211ed1a8_inherits(jule::Ptr<_2211ebeed_Trait> _self_, jule::Ptr<_2211ebeed_Trait>* _4929_t) {
	if ((_self_ == (*(_4929_t)))) {
		return true;;
	};
	{
		auto expr = &(_self_.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c6395e:;
		if (it != expr_end) {
			jule::Ptr<_221459c50_TypeSymbol> _5321_i = *it;
			{
				if (_2211ed1a8_inherits(_221457258_Trait(_5321_i.get()._field_Kind.ptr()), _4929_t)) {
					return true;;
				};
			}
			_iter_next_205c6395e:;
			++it;
			goto _iter_begin_205c6395e;
		}
		_iter_end_205c6395e:;
	};
	return false;;
}



inline jule::Ptr<_2211d9ccc_Fn> _2211ed4b6_findMethodInherit(_2211ebeed_Trait* _self_, jule::Str* _6137_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c64ae7:;
		if (it != expr_end) {
			jule::Ptr<_221459c50_TypeSymbol> _6221_i = *it;
			{
				if ((_6221_i.get()._field_Kind == nullptr)) {
					goto _iter_next_205c64ae7;
				};
				jule::Ptr<_2211ebeed_Trait> _6621_t = _221457258_Trait(_6221_i.get()._field_Kind.ptr());;
				if ((_6621_t != nullptr)) {
					jule::Ptr<_2211d9ccc_Fn> _6825_f2 = _2211ecd9a_FindMethod(_6621_t.ptr(), (*(_6137_ident)));;
					if ((_6825_f2 != nullptr)) {
						return _6825_f2;;
					};
				};
			}
			_iter_next_205c64ae7:;
			++it;
			goto _iter_begin_205c64ae7;
		}
		_iter_end_205c64ae7:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ebeed_Trait _Src) {
	_Stream << _2211ec3e9_Str(&_Src);
	return _Stream;
}



inline jule::Bool _2211ee176_AutoExpr(_2211edc8b_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2211edc8b_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2211eeae4_Str(_2211ee781_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _2211eee02_Equal(jule::Ptr<_2211ee781_Enum> _self_, jule::Ptr<_221453397_TypeKind> _3821_other) {
	jule::Ptr<_2211ee781_Enum> _3913_enm = _2214562ce_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_2211edc8b_EnumItem> _221200342_FindItem(_2211ee781_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c685ce:;
		if (it != expr_end) {
			jule::Ptr<_2211edc8b_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_205c685ce:;
			++it;
			goto _iter_begin_205c685ce;
		}
		_iter_end_205c685ce:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _2211ee781_Enum _Src) {
	_Stream << _2211eeae4_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2212007b5_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2212011ab_Str(_221200d7b_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _2212014b9_Equal(jule::Ptr<_221200d7b_TypeEnum> _self_, jule::Ptr<_221453397_TypeKind> _8021_other) {
	jule::Ptr<_221200d7b_TypeEnum> _8113_tenm = _221456543_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_2212007b5_TypeEnumItem> _2212018b5_FindItem(_221200d7b_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c6a69c:;
		if (it != expr_end) {
			jule::Ptr<_2212007b5_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_205c6a69c:;
			++it;
			goto _iter_begin_205c6a69c;
		}
		_iter_end_205c6a69c:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _221200d7b_TypeEnum _Src) {
	_Stream << _2212011ab_Str(&_Src);
	return _Stream;
}



inline jule::Str _2212033cd_Str(_221202ed2_comptimeRange* _self_) {
	return jule::Str("comptimeRange", 13);;
}



inline jule::Bool _2212036db_Equal(jule::Ptr<_221202ed2_comptimeRange> _self_, jule::Ptr<_221453397_TypeKind> _2521_other) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _221202ed2_comptimeRange _Src) {
	_Stream << _2212033cd_Str(&_Src);
	return _Stream;
}



inline jule::Str _221203d3a_Str(_2212039c7_comptimeStructField* _self_) {
	return jule::Str("comptimeStructField", 19);;
}



inline jule::Bool _221204148_Equal(jule::Ptr<_2212039c7_comptimeStructField> _self_, jule::Ptr<_221453397_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_221425c2c_Data> _221204698__Name(jule::Ptr<_2212039c7_comptimeStructField> _self_, jule::Ptr<_22142779a_Eval>* _3926_e, jule::Ptr<_2211acc8e_FnCallExpr>* _3941_fc) {
	if (((*(_3941_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_3926_e)).ptr(), (*(_3941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _4417_constant = static__21e6c6144_NewStr(_self_.get()._field_field.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("str", 3)), 18)}), ._field_Model=jule::Any(_4417_constant, &__jule_any_type19), ._field_Constant=_4417_constant});;
}



inline jule::Ptr<_221425c2c_Data> _221204a50__Type(jule::Ptr<_2212039c7_comptimeStructField> _self_, jule::Ptr<_22142779a_Eval>* _5430_e, jule::Ptr<_2211acc8e_FnCallExpr>* _5445_fc) {
	if (((*(_5445_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_5430_e)).ptr(), (*(_5445_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _22121a45b_buildComptimeTypeInfoData(&((*(_5430_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind));;
}



inline jule::Ptr<_221425c2c_Data> _221204e07__Public(jule::Ptr<_2212039c7_comptimeStructField> _self_, jule::Ptr<_22142779a_Eval>* _6232_e, jule::Ptr<_2211acc8e_FnCallExpr>* _6247_fc) {
	if (((*(_6247_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_6232_e)).ptr(), (*(_6247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _6717_constant = static__21e6c5d9c_NewBool(_self_.get()._field_field.get()._field_Decl.get()._field_Public);;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_6717_constant, &__jule_any_type19), ._field_Constant=_6717_constant});;
}



inline jule::Ptr<_221425c2c_Data> _2212051d2_subIdent(jule::Ptr<_2212039c7_comptimeStructField> _self_, jule::Str _7728_ident) {
	{
		auto &_match_expr{ _7728_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_205c763cd:;
			{
				jule::Ptr<_2211dc97d_FnIns> _8021_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _8133_e, jule::Ptr<_2211acc8e_FnCallExpr>* _8148_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221204698__Name(_self_, _8133_e, _8148_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_8021_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_205c76444:;
			{
				jule::Ptr<_2211dc97d_FnIns> _8721_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _8833_e, jule::Ptr<_2211acc8e_FnCallExpr>* _8848_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221204e07__Public(_self_, _8833_e, _8848_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_8721_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_205c76202:;
			{
				jule::Ptr<_2211dc97d_FnIns> _9421_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _9533_e, jule::Ptr<_2211acc8e_FnCallExpr>* _9548_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221204a50__Type(_self_, _9533_e, _9548_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_9421_method));;
			}
		}
		else {
			_case_begin_205c75cb2:;
			{
				return nullptr;;
			}
		}
		_match_end_205c75c07:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2212039c7_comptimeStructField _Src) {
	_Stream << _221203d3a_Str(&_Src);
	return _Stream;
}



inline jule::Str _221205875_Str(_2212054bd_comptimeStructFields* _self_) {
	return jule::Str("comptimeStructFields", 20);;
}



inline jule::Bool _221205b83_Equal(jule::Ptr<_2212054bd_comptimeStructFields> _self_, jule::Ptr<_221453397_TypeKind> _11321_other) {
	return false;;
}



inline void _2212060b2_ready(_2212054bd_comptimeStructFields* _self_, jule::Ptr<_22126b17c_Var>* _11729_keyA, jule::Ptr<_22126b17c_Var>* _11746_keyB) {
	if (((*(_11729_keyA)) != nullptr)) {
		(*(_11729_keyA)).get()._field_Constant=true;
		(*(_11729_keyA)).get()._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()});
		(*(_11729_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_11729_keyA)).get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)})});
	};
	if (((*(_11746_keyB)) != nullptr)) {
		(*(_11746_keyB)).get()._field_Constant=true;
		(*(_11746_keyB)).get()._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()});
		(*(_11746_keyB)).get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_2212039c7_comptimeStructField>(), 6)})});
	};
}



inline void _22120647a_step(_2212054bd_comptimeStructFields* _self_, jule::I32 _14323_i, jule::Ptr<_22126b17c_Var>* _14336_keyA, jule::Ptr<_22126b17c_Var>* _14353_keyB) {
	if (((*(_14336_keyA)) != nullptr)) {
		(*(_14336_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_14323_i)));
		(*(_14336_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_14336_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_14353_keyB)) != nullptr)) {
		_221457e6d_comptimeStructField((*(_14353_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_14323_i];
	};
}



inline jule::I32 _2212066de_len(_2212054bd_comptimeStructFields* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _2212054bd_comptimeStructFields _Src) {
	_Stream << _221205875_Str(&_Src);
	return _Stream;
}



inline jule::Str _221206d3d_Str(_2212069ca_comptimeStatic* _self_) {
	return jule::Str("comptimeStatic", 14);;
}



inline jule::Bool _22120714b_Equal(jule::Ptr<_2212069ca_comptimeStatic> _self_, jule::Ptr<_221453397_TypeKind> _16721_other) {
	return false;;
}



inline jule::Ptr<_221425c2c_Data> _221207734__Name(jule::Ptr<_2212069ca_comptimeStatic> _self_, jule::Ptr<_22142779a_Eval>* _17126_e, jule::Ptr<_2211acc8e_FnCallExpr>* _17141_fc) {
	if (((*(_17141_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_17126_e)).ptr(), (*(_17141_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _17617_constant = static__21e6c6144_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("str", 3)), 18)}), ._field_Model=jule::Any(_17617_constant, &__jule_any_type19), ._field_Constant=_17617_constant});;
}



inline jule::Ptr<_221425c2c_Data> _221207adb__Type(jule::Ptr<_2212069ca_comptimeStatic> _self_, jule::Ptr<_22142779a_Eval>* _18630_e, jule::Ptr<_2211acc8e_FnCallExpr>* _18645_fc) {
	if (((*(_18645_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_18630_e)).ptr(), (*(_18645_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _22121a45b_buildComptimeTypeInfoData(&((*(_18630_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind.get()._field_Kind));;
}



inline jule::Ptr<_221425c2c_Data> _221207e93__Public(jule::Ptr<_2212069ca_comptimeStatic> _self_, jule::Ptr<_22142779a_Eval>* _19432_e, jule::Ptr<_2211acc8e_FnCallExpr>* _19447_fc) {
	if (((*(_19447_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_19432_e)).ptr(), (*(_19447_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _19917_constant = static__21e6c5d9c_NewBool(_self_.get()._field_field.get()._field_Public);;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_19917_constant, &__jule_any_type19), ._field_Constant=_19917_constant});;
}



inline jule::Ptr<_221425c2c_Data> _2212082a1_subIdent(jule::Ptr<_2212069ca_comptimeStatic> _self_, jule::Str _20928_ident) {
	{
		auto &_match_expr{ _20928_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_205c89952:;
			{
				jule::Ptr<_2211dc97d_FnIns> _21221_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _21333_e, jule::Ptr<_2211acc8e_FnCallExpr>* _21348_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221207734__Name(_self_, _21333_e, _21348_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_21221_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_205c899b8:;
			{
				jule::Ptr<_2211dc97d_FnIns> _21921_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _22033_e, jule::Ptr<_2211acc8e_FnCallExpr>* _22048_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221207e93__Public(_self_, _22033_e, _22048_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_21921_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_205c89776:;
			{
				jule::Ptr<_2211dc97d_FnIns> _22621_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _22733_e, jule::Ptr<_2211acc8e_FnCallExpr>* _22748_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221207adb__Type(_self_, _22733_e, _22748_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_22621_method));;
			}
		}
		else {
			_case_begin_205c89369:;
			{
				return nullptr;;
			}
		}
		_match_end_205c89237:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2212069ca_comptimeStatic _Src) {
	_Stream << _221206d3d_Str(&_Src);
	return _Stream;
}



inline jule::Str _221208878_Str(_221208515_comptimeStatics* _self_) {
	return jule::Str("comptimeStatics", 15);;
}



inline jule::Bool _221208b86_Equal(jule::Ptr<_221208515_comptimeStatics> _self_, jule::Ptr<_221453397_TypeKind> _24521_other) {
	return false;;
}



inline void _2212090b5_ready(_221208515_comptimeStatics* _self_, jule::Ptr<_22126b17c_Var>* _24929_keyA, jule::Ptr<_22126b17c_Var>* _24946_keyB) {
	if (((*(_24929_keyA)) != nullptr)) {
		(*(_24929_keyA)).get()._field_Constant=true;
		(*(_24929_keyA)).get()._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()});
		(*(_24929_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_24929_keyA)).get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)})});
	};
	if (((*(_24946_keyB)) != nullptr)) {
		(*(_24946_keyB)).get()._field_Constant=true;
		(*(_24946_keyB)).get()._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()});
		(*(_24946_keyB)).get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_2212069ca_comptimeStatic>(), 8)})});
	};
}



inline void _22120947d_step(_221208515_comptimeStatics* _self_, jule::I32 _27523_i, jule::Ptr<_22126b17c_Var>* _27536_keyA, jule::Ptr<_22126b17c_Var>* _27553_keyB) {
	if (((*(_27536_keyA)) != nullptr)) {
		(*(_27536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_27523_i)));
		(*(_27536_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_27536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_27553_keyB)) != nullptr)) {
		_221459634_comptimeStatic((*(_27553_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_27523_i];
	};
}



inline jule::I32 _2212096e2_len(_221208515_comptimeStatics* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _221208515_comptimeStatics _Src) {
	_Stream << _221208878_Str(&_Src);
	return _Stream;
}



inline jule::Str _221209d41_Str(_2212099cd_comptimeEnumField* _self_) {
	return jule::Str("comptimeEnumField", 17);;
}



inline jule::Bool _22120a14e_Equal(jule::Ptr<_2212099cd_comptimeEnumField> _self_, jule::Ptr<_221453397_TypeKind> _29921_other) {
	return false;;
}



inline jule::Ptr<_221425c2c_Data> _22120a605__Name(jule::Ptr<_2212099cd_comptimeEnumField> _self_, jule::Ptr<_22142779a_Eval>* _30326_e, jule::Ptr<_2211acc8e_FnCallExpr>* _30341_fc) {
	if (((*(_30341_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_30326_e)).ptr(), (*(_30341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _30817_constant = static__21e6c6144_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("str", 3)), 18)}), ._field_Model=jule::Any(_30817_constant, &__jule_any_type19), ._field_Constant=_30817_constant});;
}



inline jule::Ptr<_221425c2c_Data> _22120a913_subIdent(jule::Ptr<_2212099cd_comptimeEnumField> _self_, jule::Str _31828_ident) {
	{
		auto &_match_expr{ _31828_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_205c97e9e:;
			{
				jule::Ptr<_2211dc97d_FnIns> _32121_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _32233_e, jule::Ptr<_2211acc8e_FnCallExpr>* _32248_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _22120a605__Name(_self_, _32233_e, _32248_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_32121_method));;
			}
		}
		else {
			_case_begin_205c98785:;
			{
				return nullptr;;
			}
		}
		_match_end_205c98653:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2212099cd_comptimeEnumField _Src) {
	_Stream << _221209d41_Str(&_Src);
	return _Stream;
}



inline jule::Str _22120b172_Str(_22120abee_comptimeEnumFields* _self_) {
	return jule::Str("comptimeEnumFields", 18);;
}



inline jule::Bool _22120b480_Equal(jule::Ptr<_22120abee_comptimeEnumFields> _self_, jule::Ptr<_221453397_TypeKind> _34021_other) {
	return false;;
}



inline void _22120b837_ready(_22120abee_comptimeEnumFields* _self_, jule::Ptr<_22126b17c_Var>* _34429_keyA, jule::Ptr<_22126b17c_Var>* _34446_keyB) {
	if (((*(_34429_keyA)) != nullptr)) {
		(*(_34429_keyA)).get()._field_Constant=true;
		(*(_34429_keyA)).get()._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()});
		(*(_34429_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_34429_keyA)).get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)})});
	};
	if (((*(_34446_keyB)) != nullptr)) {
		(*(_34446_keyB)).get()._field_Constant=true;
		(*(_34446_keyB)).get()._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()});
		(*(_34446_keyB)).get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_2212099cd_comptimeEnumField>(), 10)})});
	};
}



inline void _22120bc00_step(_22120abee_comptimeEnumFields* _self_, jule::I32 _37023_i, jule::Ptr<_22126b17c_Var>* _37036_keyA, jule::Ptr<_22126b17c_Var>* _37053_keyB) {
	if (((*(_37036_keyA)) != nullptr)) {
		(*(_37036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_37023_i)));
		(*(_37036_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_37036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_37053_keyB)) != nullptr)) {
		_221458446_comptimeEnumField((*(_37053_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_37023_i];
	};
}



inline jule::I32 _22120be64_len(_22120abee_comptimeEnumFields* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _22120abee_comptimeEnumFields _Src) {
	_Stream << _22120b172_Str(&_Src);
	return _Stream;
}



inline jule::Str _22120c5b3_Str(_22120c250_comptimeParam* _self_) {
	return jule::Str("comptimeParam", 13);;
}



inline jule::Bool _22120c8c1_Equal(jule::Ptr<_22120c250_comptimeParam> _self_, jule::Ptr<_221453397_TypeKind> _39421_other) {
	return false;;
}



inline jule::Ptr<_221425c2c_Data> _22120d0db__Name(jule::Ptr<_22120c250_comptimeParam> _self_, jule::Ptr<_22142779a_Eval>* _39826_e, jule::Ptr<_2211acc8e_FnCallExpr>* _39841_fc) {
	if (((*(_39841_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_39826_e)).ptr(), (*(_39841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _40317_constant = static__21e6c6144_NewStr(_self_.get()._field_param.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("str", 3)), 18)}), ._field_Model=jule::Any(_40317_constant, &__jule_any_type19), ._field_Constant=_40317_constant});;
}



inline jule::Ptr<_221425c2c_Data> _22120d493__Type(jule::Ptr<_22120c250_comptimeParam> _self_, jule::Ptr<_22142779a_Eval>* _41330_e, jule::Ptr<_2211acc8e_FnCallExpr>* _41345_fc) {
	if (((*(_41345_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_41330_e)).ptr(), (*(_41345_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _22121a45b_buildComptimeTypeInfoData(&((*(_41330_e)).get()._field_s), &(_self_.get()._field_param.get()._field_Kind));;
}



inline jule::Ptr<_221425c2c_Data> _22120d84a__Variadic(jule::Ptr<_22120c250_comptimeParam> _self_, jule::Ptr<_22142779a_Eval>* _42134_e, jule::Ptr<_2211acc8e_FnCallExpr>* _42149_fc) {
	if (((*(_42149_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_42134_e)).ptr(), (*(_42149_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Variadic", 8), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _42617_constant = static__21e6c5d9c_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Variadic);;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_42617_constant, &__jule_any_type19), ._field_Constant=_42617_constant});;
}



inline jule::Ptr<_221425c2c_Data> _22120dc02__Reference(jule::Ptr<_22120c250_comptimeParam> _self_, jule::Ptr<_22142779a_Eval>* _43635_e, jule::Ptr<_2211acc8e_FnCallExpr>* _43650_fc) {
	if (((*(_43650_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_43635_e)).ptr(), (*(_43650_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Reference", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _44117_constant = static__21e6c5d9c_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Reference);;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_44117_constant, &__jule_any_type19), ._field_Constant=_44117_constant});;
}



inline jule::Ptr<_221425c2c_Data> _22120e010_subIdent(jule::Ptr<_22120c250_comptimeParam> _self_, jule::Str _45128_ident) {
	{
		auto &_match_expr{ _45128_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_205caadc4:;
			{
				jule::Ptr<_2211dc97d_FnIns> _45421_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _45533_e, jule::Ptr<_2211acc8e_FnCallExpr>* _45548_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _22120d0db__Name(_self_, _45533_e, _45548_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_45421_method));;
			}
		}
		else if (_match_expr == jule::Str("Variadic", 8)) {
			_case_begin_205caae3a:;
			{
				jule::Ptr<_2211dc97d_FnIns> _46121_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _46233_e, jule::Ptr<_2211acc8e_FnCallExpr>* _46248_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _22120d84a__Variadic(_self_, _46233_e, _46248_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_46121_method));;
			}
		}
		else if (_match_expr == jule::Str("Reference", 9)) {
			_case_begin_205caabe8:;
			{
				jule::Ptr<_2211dc97d_FnIns> _46821_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _46933_e, jule::Ptr<_2211acc8e_FnCallExpr>* _46948_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _22120dc02__Reference(_self_, _46933_e, _46948_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_46821_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_205caac5e:;
			{
				jule::Ptr<_2211dc97d_FnIns> _47521_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _47633_e, jule::Ptr<_2211acc8e_FnCallExpr>* _47648_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _22120d493__Type(_self_, _47633_e, _47648_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_47521_method));;
			}
		}
		else {
			_case_begin_205caa7a8:;
			{
				return nullptr;;
			}
		}
		_match_end_205caa6ed:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22120c250_comptimeParam _Src) {
	_Stream << _22120c5b3_Str(&_Src);
	return _Stream;
}



inline jule::Str _22120e65e_Str(_22120e2eb_comptimeParams* _self_) {
	return jule::Str("comptimeParams", 14);;
}



inline jule::Bool _22120e96c_Equal(jule::Ptr<_22120e2eb_comptimeParams> _self_, jule::Ptr<_221453397_TypeKind> _49421_other) {
	return false;;
}



inline void _22120ed9b_ready(_22120e2eb_comptimeParams* _self_, jule::Ptr<_22126b17c_Var>* _49829_keyA, jule::Ptr<_22126b17c_Var>* _49846_keyB) {
	if (((*(_49829_keyA)) != nullptr)) {
		(*(_49829_keyA)).get()._field_Constant=true;
		(*(_49829_keyA)).get()._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()});
		(*(_49829_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_49829_keyA)).get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)})});
	};
	if (((*(_49846_keyB)) != nullptr)) {
		(*(_49846_keyB)).get()._field_Constant=true;
		(*(_49846_keyB)).get()._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()});
		(*(_49846_keyB)).get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_22120c250_comptimeParam>(), 12)})});
	};
}



inline void _221210264_step(_22120e2eb_comptimeParams* _self_, jule::I32 _52423_i, jule::Ptr<_22126b17c_Var>* _52436_keyA, jule::Ptr<_22126b17c_Var>* _52453_keyB) {
	if (((*(_52436_keyA)) != nullptr)) {
		(*(_52436_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_52423_i)));
		(*(_52436_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_52436_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_52453_keyB)) != nullptr)) {
		_22145891e_comptimeParam((*(_52453_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_param=(*(_self_))._field_params[_52423_i];
	};
}



inline jule::I32 _2212104c8_len(_22120e2eb_comptimeParams* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_params.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _22120e2eb_comptimeParams _Src) {
	_Stream << _22120e65e_Str(&_Src);
	return _Stream;
}



inline jule::Str _221210b27_Str(_2212107b4_comptimeTypeInfos* _self_) {
	return jule::Str("comptimeTypeInfos", 17);;
}



inline jule::Bool _221210e35_Equal(jule::Ptr<_2212107b4_comptimeTypeInfos> _self_, jule::Ptr<_221453397_TypeKind> _54821_other) {
	return false;;
}



inline void _221211364_ready(_2212107b4_comptimeTypeInfos* _self_, jule::Ptr<_22126b17c_Var>* _55229_keyA, jule::Ptr<_22126b17c_Var>* _55246_keyB) {
	if (((*(_55229_keyA)) != nullptr)) {
		(*(_55229_keyA)).get()._field_Constant=true;
		(*(_55229_keyA)).get()._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()});
		(*(_55229_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_55229_keyA)).get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)})});
	};
	if (((*(_55246_keyB)) != nullptr)) {
		(*(_55246_keyB)).get()._field_Constant=true;
		(*(_55246_keyB)).get()._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()});
		(*(_55246_keyB)).get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_221211c7c_comptimeTypeInfo>(), 15)})});
	};
}



inline void _22121172c_step(_2212107b4_comptimeTypeInfos* _self_, jule::I32 _57823_i, jule::Ptr<_22126b17c_Var>* _57836_keyA, jule::Ptr<_22126b17c_Var>* _57853_keyB) {
	if (((*(_57836_keyA)) != nullptr)) {
		(*(_57836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_57823_i)));
		(*(_57836_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_57836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_57853_keyB)) != nullptr)) {
		(*(_57853_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_221452e35_Kind>((*(_self_))._field_types[_57823_i], 15);
	};
}



inline jule::I32 _221211991_len(_2212107b4_comptimeTypeInfos* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_types.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _2212107b4_comptimeTypeInfos _Src) {
	_Stream << _221210b27_Str(&_Src);
	return _Stream;
}



inline jule::Str _2212120e0_Str(_221211c7c_comptimeTypeInfo* _self_) {
	return ((jule::Str("comptimeTypeInfo[", 17) + _221453793_Str((*(_self_))._field_base.ptr())) + jule::Str("]", 1));;
}



inline jule::Bool _2212123ed_Equal(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_221453397_TypeKind> _60221_other) {
	return false;;
}



inline jule::Ptr<_221425c2c_Data> _2212129e7__Str(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _60625_e, jule::Ptr<_2211acc8e_FnCallExpr>* _60640_fc) {
	if (((*(_60640_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_60625_e)).ptr(), (*(_60640_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Str", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _61117_constant = static__21e6c6144_NewStr(_221453793_Str(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("str", 3)), 18)}), ._field_Model=jule::Any(_61117_constant, &__jule_any_type19), ._field_Constant=_61117_constant});;
}



inline jule::Ptr<_221425c2c_Data> _221212d9e__Kind(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _62130_e, jule::Ptr<_2211acc8e_FnCallExpr>* _62145_fc) {
	if (((*(_62145_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_62130_e)).ptr(), (*(_62145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Kind", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2211ee781_Enum> _62617_enm = _221244694_FindEnum(_22121a0e8_findComptimePackage(&((*(_62130_e)).get()._field_s)).ptr(), jule::Str("Kind", 4));;
	jule::Ptr<_2211edc8b_EnumItem> _62717_item = nullptr;;
	{
		
		if (_221454640_Void(_self_.get()._field_base.ptr())) {
			_case_begin_205cc5581:;
			{
				_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Void", 4));
			}
		}
		else if ((_221456ee4_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205cc5240:;
			{
				_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Struct", 6));
			}
		}
		else if ((_221457258_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205cc5042:;
			{
				_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Trait", 5));
			}
		}
		else if ((_22145606a_Ptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205cc50a8:;
			{
				if (_221462d8a_IsUnsafe(_22145606a_Ptr(_self_.get()._field_base.ptr()).ptr())) {
					_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("UnsafePtr", 9));
				} else {
					_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Ptr", 3));
				};
			}
		}
		else if ((_221455d06_Sptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205cc597c:;
			{
				_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Ref", 3));
			}
		}
		else if ((_2214562ce_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205cc59e3:;
			{
				_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Enum", 4));
			}
		}
		else if ((_2214574bc_Map(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205cc5a59:;
			{
				_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Map", 3));
			}
		}
		else if ((_221456a1b_Slc(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205cc5ac0:;
			{
				_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Slice", 5));
			}
		}
		else if ((_2214567a7_Arr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205cc5b36:;
			{
				_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Array", 5));
			}
		}
		else if ((_221456c80_Fn(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205cc5b9c:;
			{
				_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Func", 4));
			}
		}
		else if ((_221457731_Tup(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205cc5c13:;
			{
				_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Tuple", 5));
			}
		}
		else if ((_221455a92_Prim(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205cc5c79:;
			{
				jule::Ptr<_22145a5be_Prim> _65617_prim = _221455a92_Prim(_self_.get()._field_base.ptr());;
				{
					
					if (_22145da67_IsAny(_65617_prim.ptr())) {
						_case_begin_205cce9ec:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Any", 3));
						}
					}
					else if (_22145d58e_IsBool(_65617_prim.ptr())) {
						_case_begin_205ccdcd7:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Bool", 4));
						}
					}
					else if (_22145d803_IsStr(_65617_prim.ptr())) {
						_case_begin_205cce546:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Str", 3));
						}
					}
					else if (_22145c879_IsF32(_65617_prim.ptr())) {
						_case_begin_205ccede8:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("F32", 3));
						}
					}
					else if (_22145cadd_IsF64(_65617_prim.ptr())) {
						_case_begin_205ccee5e:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("F64", 3));
						}
					}
					else if (_22145b427_IsI8(_65617_prim.ptr())) {
						_case_begin_205cceec5:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("I8", 2));
						}
					}
					else if (_22145b68b_IsI16(_65617_prim.ptr())) {
						_case_begin_205cd003b:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("I16", 3));
						}
					}
					else if (_22145b900_IsI32(_65617_prim.ptr())) {
						_case_begin_205cd00a2:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("I32", 3));
						}
					}
					else if (_22145bb64_IsI64(_65617_prim.ptr())) {
						_case_begin_205cd0118:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("I64", 3));
						}
					}
					else if (_22145bdc8_IsU8(_65617_prim.ptr())) {
						_case_begin_205cd017e:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("U8", 2));
						}
					}
					else if (_22145c13c_IsU16(_65617_prim.ptr())) {
						_case_begin_205cd01e5:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("U16", 3));
						}
					}
					else if (_22145c3a1_IsU32(_65617_prim.ptr())) {
						_case_begin_205cd025b:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("U32", 3));
						}
					}
					else if (_22145c615_IsU64(_65617_prim.ptr())) {
						_case_begin_205cd02c2:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("U64", 3));
						}
					}
					else if (_22145cd52_IsInt(_65617_prim.ptr())) {
						_case_begin_205cd0338:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Int", 3));
						}
					}
					else if (_22145d0b6_IsUint(_65617_prim.ptr())) {
						_case_begin_205cd039e:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Uint", 4));
						}
					}
					else if (_22145d32a_IsUintptr(_65617_prim.ptr())) {
						_case_begin_205cd0426:;
						{
							_62717_item=_221200342_FindItem(_62617_enm.ptr(), jule::Str("Uintptr", 7));
						}
					}
					else {
						_case_begin_205cce39d:;
						{
							jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _221453793_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:691:17"));;
						}
					}
					_match_end_205cce337:;
				};
			}
		}
		else {
			_case_begin_205cc4ddd:;
			{
				jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _221453793_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:694:13"));;
			}
		}
		_match_end_205cc4d77:;
	};
	return _221450c57_evalEnumStatic(&(_62617_enm), &(_62717_item));;
}



inline jule::Ptr<_221425c2c_Data> _221213256__Bits(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _69930_e, jule::Ptr<_2211acc8e_FnCallExpr>* _69945_fc) {
	if (((*(_69945_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_69930_e)).ptr(), (*(_69945_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_22145a5be_Prim> _70413_prim = _221455a92_Prim(_self_.get()._field_base.ptr());;
	if ((_70413_prim == nullptr)) {
		_221427ca6_pushErr((*(_69930_e)).ptr(), (*(_69945_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _70913_n = _21e6b7b80_BitsizeOf(_70413_prim.get()._field_Kind);;
	if ((_70913_n == -1LL)) {
		_221427ca6_pushErr((*(_69930_e)).ptr(), (*(_69945_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _71417_constant = static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_70913_n)));;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)}), ._field_Model=jule::Any(_71417_constant, &__jule_any_type19), ._field_Constant=_71417_constant});;
}



inline jule::Ptr<_221425c2c_Data> _22121360d__Elem(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _72430_e, jule::Ptr<_2211acc8e_FnCallExpr>* _72445_fc) {
	if (((*(_72445_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_72430_e)).ptr(), (*(_72445_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2214623b7_Ptr> _72917_ptr = _22145606a_Ptr(_self_.get()._field_base.ptr());;
	if ((_72917_ptr != nullptr)) {
		if (_221462d8a_IsUnsafe(_72917_ptr.ptr())) {
			_221427ca6_pushErr((*(_72430_e)).ptr(), (*(_72445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		return _22121a45b_buildComptimeTypeInfoData(&((*(_72430_e)).get()._field_s), &(_72917_ptr.get()._field_Elem));;
	};
	jule::Ptr<_22145dd53_Sptr> _73717_sptr = _221455d06_Sptr(_self_.get()._field_base.ptr());;
	if ((_73717_sptr != nullptr)) {
		return _22121a45b_buildComptimeTypeInfoData(&((*(_72430_e)).get()._field_s), &(_73717_sptr.get()._field_Elem));;
	};
	jule::Ptr<_22145e7b0_Slc> _74117_slice = _221456a1b_Slc(_self_.get()._field_base.ptr());;
	if ((_74117_slice != nullptr)) {
		return _22121a45b_buildComptimeTypeInfoData(&((*(_72430_e)).get()._field_s), &(_74117_slice.get()._field_Elem));;
	};
	jule::Ptr<_22146195a_Arr> _74517_array = _2214567a7_Arr(_self_.get()._field_base.ptr());;
	if ((_74517_array != nullptr)) {
		return _22121a45b_buildComptimeTypeInfoData(&((*(_72430_e)).get()._field_s), &(_74517_array.get()._field_Elem));;
	};
	jule::Ptr<_2211ee781_Enum> _74917_enm = _2214562ce_Enum(_self_.get()._field_base.ptr());;
	if ((_74917_enm != nullptr)) {
		return _22121a45b_buildComptimeTypeInfoData(&((*(_72430_e)).get()._field_s), &(_74917_enm.get()._field_Kind.get()._field_Kind));;
	};
	_221427ca6_pushErr((*(_72430_e)).ptr(), (*(_72445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_221425c2c_Data> _2212139b5__Size(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _75730_e, jule::Ptr<_2211acc8e_FnCallExpr>* _75745_fc) {
	if (((*(_75745_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_75730_e)).ptr(), (*(_75745_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_22146195a_Arr> _76217_arr = _2214567a7_Arr(_self_.get()._field_base.ptr());;
	if ((_76217_arr == nullptr)) {
		_221427ca6_pushErr((*(_75730_e)).ptr(), (*(_75745_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _76717_constant = static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_76217_arr.get()._field_N)));;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)}), ._field_Model=jule::Any(_76717_constant, &__jule_any_type19), ._field_Constant=_76717_constant});;
}



inline jule::Ptr<_221425c2c_Data> _221213d6c__Key(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _77729_e, jule::Ptr<_2211acc8e_FnCallExpr>* _77744_fc) {
	if (((*(_77744_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_77729_e)).ptr(), (*(_77744_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_221460d66_Map> _78217_m = _2214574bc_Map(_self_.get()._field_base.ptr());;
	if ((_78217_m == nullptr)) {
		_221427ca6_pushErr((*(_77729_e)).ptr(), (*(_77744_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	return _22121a45b_buildComptimeTypeInfoData(&((*(_77729_e)).get()._field_s), &(_78217_m.get()._field_Key));;
}



inline jule::Ptr<_221425c2c_Data> _221214224__Value(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _79031_e, jule::Ptr<_2211acc8e_FnCallExpr>* _79046_fc) {
	if (((*(_79046_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_79031_e)).ptr(), (*(_79046_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_221460d66_Map> _79517_m = _2214574bc_Map(_self_.get()._field_base.ptr());;
	if ((_79517_m == nullptr)) {
		_221427ca6_pushErr((*(_79031_e)).ptr(), (*(_79046_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	return _22121a45b_buildComptimeTypeInfoData(&((*(_79031_e)).get()._field_s), &(_79517_m.get()._field_Val));;
}



inline jule::Ptr<_221425c2c_Data> _2212145cb__Fields(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _80332_e, jule::Ptr<_2211acc8e_FnCallExpr>* _80347_fc) {
	if (((*(_80347_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_80332_e)).ptr(), (*(_80347_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2211c76e3_StructIns> _80817_s = _221456ee4_Struct(_self_.get()._field_base.ptr());;
	if ((_80817_s != nullptr)) {
		return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_2212054bd_comptimeStructFields>(_2212054bd_comptimeStructFields{._field_fields=_80817_s.get()._field_Fields}), 7)}), });;
	};
	jule::Ptr<_2211ee781_Enum> _81817_enm = _2214562ce_Enum(_self_.get()._field_base.ptr());;
	if ((_81817_enm != nullptr)) {
		return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_22120abee_comptimeEnumFields>(_22120abee_comptimeEnumFields{._field_fields=_81817_enm.get()._field_Items}), 11)}), });;
	};
	_221427ca6_pushErr((*(_80332_e)).ptr(), (*(_80347_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_221425c2c_Data> _221214983__Statics(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _83233_e, jule::Ptr<_2211acc8e_FnCallExpr>* _83248_fc) {
	if (((*(_83248_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_83233_e)).ptr(), (*(_83248_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Statics", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2211c76e3_StructIns> _83717_s = _221456ee4_Struct(_self_.get()._field_base.ptr());;
	if ((_83717_s == nullptr)) {
		_221427ca6_pushErr((*(_83233_e)).ptr(), (*(_83248_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_221208515_comptimeStatics>(_221208515_comptimeStatics{._field_fields=_83717_s.get()._field_Statics}), 9)}), });;
}



inline jule::Ptr<_221425c2c_Data> _221214d3a__Public(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _85132_e, jule::Ptr<_2211acc8e_FnCallExpr>* _85147_fc) {
	if (((*(_85147_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_85132_e)).ptr(), (*(_85147_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Bool _85617_public = false;;
	{
		
		if ((_221456ee4_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205d0cc4a:;
			{
				_85617_public=_221456ee4_Struct(_self_.get()._field_base.ptr()).get()._field_Decl.get()._field_Public;
			}
		}
		else if ((_221457258_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205d0ccb1:;
			{
				_85617_public=_221457258_Trait(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_2214562ce_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205d0cab3:;
			{
				_85617_public=_2214562ce_Enum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_221456543_TypeEnum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_205d0cb29:;
			{
				_85617_public=_221456543_TypeEnum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else {
			_case_begin_205d0a8c4:;
			{
				_221427ca6_pushErr((*(_85132_e)).ptr(), (*(_85147_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205d0bb6c:;
	};
	jule::Ptr<_21e6c53da_Const> _87017_constant = static__21e6c5d9c_NewBool(_85617_public);;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_87017_constant, &__jule_any_type19), ._field_Constant=_87017_constant});;
}



inline jule::Ptr<_221425c2c_Data> _2212151e2__Binded(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _88032_e, jule::Ptr<_2211acc8e_FnCallExpr>* _88047_fc) {
	if (((*(_88047_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_88032_e)).ptr(), (*(_88047_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Binded", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _88517_constant = static__21e6c5d9c_NewBool(_221454167_CppLinked(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_88517_constant, &__jule_any_type19), ._field_Constant=_88517_constant});;
}



inline jule::Ptr<_221425c2c_Data> _221215599__Ordered(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _89529_e, jule::Ptr<_2211acc8e_FnCallExpr>* _89544_fc) {
	if (((*(_89544_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_89529_e)).ptr(), (*(_89544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Ordered", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _90017_constant = static__21e6c5d9c_NewBool(_221454d7c_Ordered(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("str", 3)), 18)}), ._field_Model=jule::Any(_90017_constant, &__jule_any_type19), ._field_Constant=_90017_constant});;
}



inline jule::Ptr<_221425c2c_Data> _221215951__Comparable(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _91032_e, jule::Ptr<_2211acc8e_FnCallExpr>* _91047_fc) {
	if (((*(_91047_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_91032_e)).ptr(), (*(_91047_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Comparable", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _91517_constant = static__21e6c5d9c_NewBool(_2214548a4_Comparable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("str", 3)), 18)}), ._field_Model=jule::Any(_91517_constant, &__jule_any_type19), ._field_Constant=_91517_constant});;
}



inline jule::Ptr<_221425c2c_Data> _221215d08__Mutable(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _92529_e, jule::Ptr<_2211acc8e_FnCallExpr>* _92544_fc) {
	if (((*(_92544_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_92529_e)).ptr(), (*(_92544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _93017_constant = static__21e6c5d9c_NewBool(_221454b18_Mutable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_93017_constant, &__jule_any_type19), ._field_Constant=_93017_constant});;
}



inline jule::Ptr<_221425c2c_Data> _2212161b0__Types(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _94031_e, jule::Ptr<_2211acc8e_FnCallExpr>* _94046_fc) {
	if (((*(_94046_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_94031_e)).ptr(), (*(_94046_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_22146033d_Tuple> _94517_tup = _221457731_Tup(_self_.get()._field_base.ptr());;
	if ((_94517_tup == nullptr)) {
		_221427ca6_pushErr((*(_94031_e)).ptr(), (*(_94046_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2212107b4_comptimeTypeInfos> _95017_infos = jule::new_ptr<_2212107b4_comptimeTypeInfos>(_2212107b4_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_221211c7c_comptimeTypeInfo>>::alloc(0LL, _94517_tup.get()._field_Types.len())});;
	{
		auto expr = &(_94517_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d1deae:;
		if (it != expr_end) {
			jule::Ptr<_221453397_TypeKind> _95321_t = *it;
			{
				_95017_infos.get()._field_types = jule::alloc_for_append(_95017_infos.get()._field_types,1);_95017_infos.get()._field_types.__push(_22124a7dd_pushComptimeTypeInfo((*(_94031_e)).get()._field_s.get()._field_meta.ptr(), &(_95321_t)));;
			}
			_iter_next_205d1deae:;
			++it;
			goto _iter_begin_205d1deae;
		}
		_iter_end_205d1deae:;
	};
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_95017_infos, 14)}), });;
}



inline jule::Ptr<_221425c2c_Data> _221216567__Exceptional(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _96337_e, jule::Ptr<_2211acc8e_FnCallExpr>* _96352_fc) {
	if (((*(_96352_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_96337_e)).ptr(), (*(_96352_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2211dc97d_FnIns> _96817_f = _221456c80_Fn(_self_.get()._field_base.ptr());;
	if ((_96817_f == nullptr)) {
		_221427ca6_pushErr((*(_96337_e)).ptr(), (*(_96352_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _97317_constant = static__21e6c5d9c_NewBool(((_96817_f.get()._field_Decl != nullptr) && _96817_f.get()._field_Decl.get()._field_Exceptional));;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_97317_constant, &__jule_any_type19), ._field_Constant=_97317_constant});;
}



inline jule::Ptr<_221425c2c_Data> _22121691e__CanNil(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _98332_e, jule::Ptr<_2211acc8e_FnCallExpr>* _98347_fc) {
	if (((*(_98347_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_98332_e)).ptr(), (*(_98347_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("CanNil", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _98817_constant = static__21e6c5d9c_NewBool(_2214550e1_NilCompatible(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_98817_constant, &__jule_any_type19), ._field_Constant=_98817_constant});;
}



inline jule::Ptr<_221425c2c_Data> _221216cc6__Result(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _99832_e, jule::Ptr<_2211acc8e_FnCallExpr>* _99847_fc) {
	if (((*(_99847_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_99832_e)).ptr(), (*(_99847_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2211dc97d_FnIns> _100317_f = _221456c80_Fn(_self_.get()._field_base.ptr());;
	if ((_100317_f == nullptr)) {
		_221427ca6_pushErr((*(_99832_e)).ptr(), (*(_99847_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	if ((_100317_f.get()._field_Result == nullptr)) {
		jule::Ptr<_221453397_TypeKind> _100921_void = _22146e902_buildVoidType();;
		return _22121a45b_buildComptimeTypeInfoData(&((*(_99832_e)).get()._field_s), &(_100921_void));;
	};
	return _22121a45b_buildComptimeTypeInfoData(&((*(_99832_e)).get()._field_s), &(_100317_f.get()._field_Result));;
}



inline jule::Ptr<_221425c2c_Data> _22121717d__Params(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Ptr<_22142779a_Eval>* _101532_e, jule::Ptr<_2211acc8e_FnCallExpr>* _101547_fc) {
	if (((*(_101547_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_101532_e)).ptr(), (*(_101547_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2211dc97d_FnIns> _102017_f = _221456c80_Fn(_self_.get()._field_base.ptr());;
	if ((_102017_f == nullptr)) {
		_221427ca6_pushErr((*(_101532_e)).ptr(), (*(_101547_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_22120e2eb_comptimeParams>(_22120e2eb_comptimeParams{._field_params=_102017_f.get()._field_Params}), 13)}), });;
}



inline jule::Ptr<_221425c2c_Data> _22121748b_subIdent(jule::Ptr<_221211c7c_comptimeTypeInfo> _self_, jule::Str _103228_ident) {
	{
		auto &_match_expr{ _103228_ident };
		
		if (_match_expr == jule::Str("Str", 3)) {
			_case_begin_205d2ba16:;
			{
				jule::Ptr<_2211dc97d_FnIns> _103521_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _103633_e, jule::Ptr<_2211acc8e_FnCallExpr>* _103648_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _2212129e7__Str(_self_, _103633_e, _103648_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_103521_method));;
			}
		}
		else if (_match_expr == jule::Str("Bits", 4)) {
			_case_begin_205d2d7d7:;
			{
				jule::Ptr<_2211dc97d_FnIns> _104221_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _104333_e, jule::Ptr<_2211acc8e_FnCallExpr>* _104348_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221213256__Bits(_self_, _104333_e, _104348_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_104221_method));;
			}
		}
		else if (_match_expr == jule::Str("Elem", 4)) {
			_case_begin_205d2d84d:;
			{
				jule::Ptr<_2211dc97d_FnIns> _104921_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _105033_e, jule::Ptr<_2211acc8e_FnCallExpr>* _105048_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _22121360d__Elem(_self_, _105033_e, _105048_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_104921_method));;
			}
		}
		else if (_match_expr == jule::Str("Size", 4)) {
			_case_begin_205d2d331:;
			{
				jule::Ptr<_2211dc97d_FnIns> _105621_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _105733_e, jule::Ptr<_2211acc8e_FnCallExpr>* _105748_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _2212139b5__Size(_self_, _105733_e, _105748_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_105621_method));;
			}
		}
		else if (_match_expr == jule::Str("Key", 3)) {
			_case_begin_205d2d397:;
			{
				jule::Ptr<_2211dc97d_FnIns> _106321_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _106433_e, jule::Ptr<_2211acc8e_FnCallExpr>* _106448_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221213d6c__Key(_self_, _106433_e, _106448_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_106321_method));;
			}
		}
		else if (_match_expr == jule::Str("Value", 5)) {
			_case_begin_205d2d41e:;
			{
				jule::Ptr<_2211dc97d_FnIns> _107021_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _107133_e, jule::Ptr<_2211acc8e_FnCallExpr>* _107148_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221214224__Value(_self_, _107133_e, _107148_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_107021_method));;
			}
		}
		else if (_match_expr == jule::Str("Fields", 6)) {
			_case_begin_205d2d496:;
			{
				jule::Ptr<_2211dc97d_FnIns> _107721_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _107833_e, jule::Ptr<_2211acc8e_FnCallExpr>* _107848_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _2212145cb__Fields(_self_, _107833_e, _107848_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_107721_method));;
			}
		}
		else if (_match_expr == jule::Str("Statics", 7)) {
			_case_begin_205d2d8c5:;
			{
				jule::Ptr<_2211dc97d_FnIns> _108421_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _108533_e, jule::Ptr<_2211acc8e_FnCallExpr>* _108548_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221214983__Statics(_self_, _108533_e, _108548_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_108421_method));;
			}
		}
		else if (_match_expr == jule::Str("Params", 6)) {
			_case_begin_205d2d94c:;
			{
				jule::Ptr<_2211dc97d_FnIns> _109121_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _109233_e, jule::Ptr<_2211acc8e_FnCallExpr>* _109248_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _22121717d__Params(_self_, _109233_e, _109248_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_109121_method));;
			}
		}
		else if (_match_expr == jule::Str("Types", 5)) {
			_case_begin_205d2d9c4:;
			{
				jule::Ptr<_2211dc97d_FnIns> _109821_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _109933_e, jule::Ptr<_2211acc8e_FnCallExpr>* _109948_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _2212161b0__Types(_self_, _109933_e, _109948_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_109821_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_205d2da4b:;
			{
				jule::Ptr<_2211dc97d_FnIns> _110521_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _110633_e, jule::Ptr<_2211acc8e_FnCallExpr>* _110648_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221214d3a__Public(_self_, _110633_e, _110648_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_110521_method));;
			}
		}
		else if (_match_expr == jule::Str("Binded", 6)) {
			_case_begin_205d2dac3:;
			{
				jule::Ptr<_2211dc97d_FnIns> _111221_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _111333_e, jule::Ptr<_2211acc8e_FnCallExpr>* _111348_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _2212151e2__Binded(_self_, _111333_e, _111348_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_111221_method));;
			}
		}
		else if (_match_expr == jule::Str("Ordered", 7)) {
			_case_begin_205d2db4a:;
			{
				jule::Ptr<_2211dc97d_FnIns> _111921_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _112033_e, jule::Ptr<_2211acc8e_FnCallExpr>* _112048_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221215599__Ordered(_self_, _112033_e, _112048_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_111921_method));;
			}
		}
		else if (_match_expr == jule::Str("Comparable", 10)) {
			_case_begin_205d2dbc2:;
			{
				jule::Ptr<_2211dc97d_FnIns> _112621_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _112733_e, jule::Ptr<_2211acc8e_FnCallExpr>* _112748_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221215951__Comparable(_self_, _112733_e, _112748_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_112621_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_205d2dc49:;
			{
				jule::Ptr<_2211dc97d_FnIns> _113321_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _113433_e, jule::Ptr<_2211acc8e_FnCallExpr>* _113448_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221215d08__Mutable(_self_, _113433_e, _113448_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_113321_method));;
			}
		}
		else if (_match_expr == jule::Str("Exceptional", 11)) {
			_case_begin_205d2dcc1:;
			{
				jule::Ptr<_2211dc97d_FnIns> _114021_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _114133_e, jule::Ptr<_2211acc8e_FnCallExpr>* _114148_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221216567__Exceptional(_self_, _114133_e, _114148_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_114021_method));;
			}
		}
		else if (_match_expr == jule::Str("CanNil", 6)) {
			_case_begin_205d2dd48:;
			{
				jule::Ptr<_2211dc97d_FnIns> _114721_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _114833_e, jule::Ptr<_2211acc8e_FnCallExpr>* _114848_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _22121691e__CanNil(_self_, _114833_e, _114848_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_114721_method));;
			}
		}
		else if (_match_expr == jule::Str("Result", 6)) {
			_case_begin_205d2ddc0:;
			{
				jule::Ptr<_2211dc97d_FnIns> _115421_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _115533_e, jule::Ptr<_2211acc8e_FnCallExpr>* _115548_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221216cc6__Result(_self_, _115533_e, _115548_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_115421_method));;
			}
		}
		else if (_match_expr == jule::Str("Kind", 4)) {
			_case_begin_205d2de47:;
			{
				jule::Ptr<_2211dc97d_FnIns> _116121_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _116233_e, jule::Ptr<_2211acc8e_FnCallExpr>* _116248_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221212d9e__Kind(_self_, _116233_e, _116248_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_116121_method));;
			}
		}
		else {
			_case_begin_205d2d1bb:;
			{
				return nullptr;;
			}
		}
		_match_end_205d2cd8b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _221211c7c_comptimeTypeInfo _Src) {
	_Stream << _2212120e0_Str(&_Src);
	return _Stream;
}



inline jule::Str _221217ada_Str(_221217777_comptimeValue* _self_) {
	return jule::Str("comptimeValue", 13);;
}



inline jule::Bool _221217de8_Equal(jule::Ptr<_221217777_comptimeValue> _self_, jule::Ptr<_221453397_TypeKind> _118021_other) {
	return false;;
}



inline jule::Ptr<_221425c2c_Data> _221218404__Unwrap(jule::Ptr<_221217777_comptimeValue> _self_, jule::Ptr<_22142779a_Eval>* _118432_e, jule::Ptr<_2211acc8e_FnCallExpr>* _118447_fc) {
	if (((*(_118447_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_118432_e)).ptr(), (*(_118447_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Unwrap", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return _self_.get()._field_data;;
}



inline jule::Ptr<_221425c2c_Data> _2212187ab__Type(jule::Ptr<_221217777_comptimeValue> _self_, jule::Ptr<_22142779a_Eval>* _119230_e, jule::Ptr<_2211acc8e_FnCallExpr>* _119245_fc) {
	if (((*(_119245_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_119230_e)).ptr(), (*(_119245_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _22121a45b_buildComptimeTypeInfoData(&((*(_119230_e)).get()._field_s), &(_self_.get()._field_data.get()._field_Kind));;
}



inline jule::Ptr<_221425c2c_Data> _221218b63__Lvalue(jule::Ptr<_221217777_comptimeValue> _self_, jule::Ptr<_22142779a_Eval>* _120032_e, jule::Ptr<_2211acc8e_FnCallExpr>* _120047_fc) {
	if (((*(_120047_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_120032_e)).ptr(), (*(_120047_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Lvalue", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _120517_constant = static__21e6c5d9c_NewBool(_self_.get()._field_data.get()._field_Lvalue);;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_120517_constant, &__jule_any_type19), ._field_Constant=_120517_constant});;
}



inline jule::Ptr<_221425c2c_Data> _22121901a__Mutable(jule::Ptr<_221217777_comptimeValue> _self_, jule::Ptr<_22142779a_Eval>* _121533_e, jule::Ptr<_2211acc8e_FnCallExpr>* _121548_fc) {
	if (((*(_121548_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_121533_e)).ptr(), (*(_121548_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _122017_constant = static__21e6c5d9c_NewBool(_self_.get()._field_data.get()._field_Mutable);;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_122017_constant, &__jule_any_type19), ._field_Constant=_122017_constant});;
}



inline jule::Ptr<_221425c2c_Data> _2212193c2__Const(jule::Ptr<_221217777_comptimeValue> _self_, jule::Ptr<_22142779a_Eval>* _123031_e, jule::Ptr<_2211acc8e_FnCallExpr>* _123046_fc) {
	if (((*(_123046_fc)).get()._field_Args.len() > 0LL)) {
		_221427ca6_pushErr((*(_123031_e)).ptr(), (*(_123046_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Const", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_21e6c53da_Const> _123517_constant = static__21e6c5d9c_NewBool(_2214265e0_IsConst(_self_.get()._field_data.ptr()));;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_123517_constant, &__jule_any_type19), ._field_Constant=_123517_constant});;
}



inline jule::Ptr<_221425c2c_Data> _221219779__Field(jule::Ptr<_221217777_comptimeValue> _self_, jule::Ptr<_22142779a_Eval>* _124531_e, jule::Ptr<_2211acc8e_FnCallExpr>* _124546_fc) {
	if (((*(_124546_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_124531_e)).ptr(), (*(_124546_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2211c76e3_StructIns> _125017_s = _221456ee4_Struct(_self_.get()._field_data.get()._field_Kind.ptr());;
	if ((_125017_s == nullptr)) {
		_221427ca6_pushErr((*(_124531_e)).ptr(), (*(_124546_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_self_.get()._field_data.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2211a8cac_Expr> _125517_arg = (*(_124546_fc)).get()._field_Args[0LL];;
	jule::Ptr<_221425c2c_Data> _125617_d = _221444267_evalExpr((*(_124531_e)), _125517_arg);;
	if ((_125617_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_2214265e0_IsConst(_125617_d.ptr())))) {
		_221427ca6_pushErr((*(_124531_e)).ptr(), _125517_arg.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_22145a5be_Prim> _126413_prim = _221455a92_Prim(_125617_d.get()._field_Kind.ptr());;
	if (((_126413_prim == nullptr) || (!(_22145d803_IsStr(_126413_prim.ptr()))))) {
		_221427ca6_pushErr((*(_124531_e)).ptr(), _125517_arg.get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_221453793_Str(_125617_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Str _126913_ident = _21e6c7420_ReadStr(_125617_d.get()._field_Constant.ptr());;
	jule::Ptr<_2211c6bed_FieldIns> _127017_f = _2211c899c_FindField(_125017_s.ptr(), _126913_ident);;
	if ((_127017_f == nullptr)) {
		_221427ca6_pushErr((*(_124531_e)).ptr(), _125517_arg.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_125017_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_126913_ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_125617_d=jule::new_ptr<_221425c2c_Data>((*(_self_.get()._field_data)));
	_125617_d=_22143c88c_evalStructSubIdentField((*(_124531_e)).ptr(), &(_125617_d), &(_125017_s), &(_125517_arg.get()._field_Token), &(_127017_f));
	return _22121a78b_buildComptimeValue(&(_125617_d));;
}



inline jule::Ptr<_221425c2c_Data> _221219a87_subIdent(jule::Ptr<_221217777_comptimeValue> _self_, jule::Str _128028_ident) {
	{
		auto &_match_expr{ _128028_ident };
		
		if (_match_expr == jule::Str("Unwrap", 6)) {
			_case_begin_205d6857a:;
			{
				jule::Ptr<_2211dc97d_FnIns> _128321_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _128433_e, jule::Ptr<_2211acc8e_FnCallExpr>* _128448_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221218404__Unwrap(_self_, _128433_e, _128448_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_128321_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_205d685e1:;
			{
				jule::Ptr<_2211dc97d_FnIns> _129021_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _129133_e, jule::Ptr<_2211acc8e_FnCallExpr>* _129148_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _2212187ab__Type(_self_, _129133_e, _129148_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_129021_method));;
			}
		}
		else if (_match_expr == jule::Str("Lvalue", 6)) {
			_case_begin_205d683c1:;
			{
				jule::Ptr<_2211dc97d_FnIns> _129721_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _129833_e, jule::Ptr<_2211acc8e_FnCallExpr>* _129848_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221218b63__Lvalue(_self_, _129833_e, _129848_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_129721_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_205d68448:;
			{
				jule::Ptr<_2211dc97d_FnIns> _130421_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _130533_e, jule::Ptr<_2211acc8e_FnCallExpr>* _130548_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _22121901a__Mutable(_self_, _130533_e, _130548_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_130421_method));;
			}
		}
		else if (_match_expr == jule::Str("Const", 5)) {
			_case_begin_205d684c0:;
			{
				jule::Ptr<_2211dc97d_FnIns> _131121_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _131233_e, jule::Ptr<_2211acc8e_FnCallExpr>* _131248_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _2212193c2__Const(_self_, _131233_e, _131248_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_131121_method));;
			}
		}
		else if (_match_expr == jule::Str("Field", 5)) {
			_case_begin_205d680b3:;
			{
				jule::Ptr<_2211dc97d_FnIns> _131821_method = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>([=](jule::Ptr<_22142779a_Eval>* _131933_e, jule::Ptr<_2211acc8e_FnCallExpr>* _131948_fc, jule::Ptr<_221425c2c_Data>* ) mutable -> jule::Ptr<_221425c2c_Data> {
					return _221219779__Field(_self_, _131933_e, _131948_fc);;
				}), });;
				return _221219e0b_buildAsComptimeMethodData(&(_131821_method));;
			}
		}
		else {
			_case_begin_205d67e5e:;
			{
				return nullptr;;
			}
		}
		_match_end_205d67db5:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _221217777_comptimeValue _Src) {
	_Stream << _221217ada_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_22124ad71_Sema>*,jule::Slice<jule::Ptr<_22145264e_TypeAlias>>*)> _22121c65b_readyFn(jule::Ptr<_22121c22c_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_22124ad71_Sema>*,jule::Slice<jule::Ptr<_22145264e_TypeAlias>>*)>([=](jule::Ptr<_22124ad71_Sema>* _6321_sema, jule::Slice<jule::Ptr<_22145264e_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_205d7c10a:;
			if (it != expr_end) {
				jule::I32 _6418_i = it - expr->begin();
				jule::Ptr<_2211b1a84_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_221451b15_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_205d7c10a;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_221453397_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_205d7e0c9:;
						if (it != expr_end) {
							jule::Ptr<_2211a478b_TypeDecl> _7029_mask = *it;
							{
								jule::I32 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_221453397_TypeKind> _7229_kind = _221253241_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_22147198c_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_205d812c9:;
											{
												jule::Ptr<_2211a4d52_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_2211a4d52_IdentTypeDecl>(&__jule_any_type20);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _22121d7e4_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(_7637_itd.get()._field_Ident), 18)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_205d81274:;
									};
									return false;;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_205d7e0c9:;
							++it;
							goto _iter_begin_205d7e0c9;
						}
						_iter_end_205d7e0c9:;
					};
				}
				_iter_next_205d7c10a:;
				++it;
				_6418_i++;
				goto _iter_begin_205d7c10a;
			}
			_iter_end_205d7c10a:;
		};
		return true;;
	});;
}



inline jule::Bool _22121c8c0_readyFi(jule::Ptr<_22121c22c_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _22125781c_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _22121c65b_readyFn(_self_)));;
}



inline jule::Bool _22121cb34_readySi(jule::Ptr<_22121c22c_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _22121c65b_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _22121cd98_ready(jule::Ptr<_22121c22c_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _22121c8c0_readyFi(_self_);;
	};
	return _22121cb34_readySi(_self_);;
}



inline jule::Bool _22121d10c_check(jule::Ptr<_22121c22c_constraintChecker> _self_) {
	if ((!(_22121cd98_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d87eb2:;
		if (it != expr_end) {
			jule::I32 _11914_i = it - expr->begin();
			jule::Ptr<_221451b15_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_205d87eb2;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205d88ad9:;
					if (it != expr_end) {
						jule::Ptr<_221453397_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_22145a5be_Prim> _12425_prim = _221455a92_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _22145b1b3_IsConstraint(_12425_prim.ptr()))) {
								if (_22121d508_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_205d87eb2;
								};
								goto _iter_next_205d88ad9;
							};
							if (_221453aa1_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_205d87eb2;
							};
						}
						_iter_next_205d88ad9:;
						++it;
						goto _iter_begin_205d88ad9;
					}
					_iter_end_205d88ad9:;
				};
				_22124d747_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_205d87eb2:;
			++it;
			_11914_i++;
			goto _iter_begin_205d87eb2;
		}
		_iter_end_205d87eb2:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _22121c22c_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _22121e4c6_IsTraitImpl(_22121e0ca_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _22121e73a_IsStructImpl(_22121e0ca_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _22121e0ca_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221224135_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221224531_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22122481c_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221224b91_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221224e7c_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221225796_IsWhileNext(_221225400_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _221225400_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221225cd5_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2212261d1_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221226588_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221226874_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221226b60_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221227017_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22122748a_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221227842_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221228458_IsGenericTypeMatch(_221227e4c_Match* _self_) {
	return (((*(_self_))._field_TypeMatch && ((*(_self_))._field_Expr != nullptr)) && (*(_self_))._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _221227e4c_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221228c61_isDefault(_221228997_Case* _self_) {
	return ((*(_self_))._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _221228997_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22122904c_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2212293c1_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2212299cb_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221229e4e_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_221242a9e_ImportInfo> _22122b1d6_SelectPackage(_22122ac63_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)> _45632_selector) {
	return _22124b2e4_SelectPackage((*(_self_))._field_s.ptr(), _45632_selector);;
}



inline jule::Ptr<_22126b17c_Var> _22122b58d_FindVar(_22122ac63_scopeChecker* _self_, jule::Str _46726_ident, jule::Bool _46738_cpp_linked) {
	;
	jule::Ptr<_22126b17c_Var> _47017_v = _221423697_findVar((*(_self_))._field_table.ptr(), _46726_ident, _46738_cpp_linked, true);;
	if ((_47017_v != nullptr)) {
		return _47017_v;;
	};
	jule::Ptr<_22122ac63_scopeChecker> _47517_parent = (*(_self_))._field_parent;;
	while ((_47517_parent != nullptr)) {
		{
			_47017_v=_221423697_findVar(_47517_parent.get()._field_table.ptr(), _46726_ident, _46738_cpp_linked, true);
			if ((_47017_v != nullptr)) {
				return _47017_v;;
			};
			_47517_parent=_47517_parent.get()._field_parent;
		}
	_iter_next_205db1b89:;
	}
	_iter_end_205db1b89:;;
	return _22124b69b_FindVar((*(_self_))._field_s.ptr(), _46726_ident, _46738_cpp_linked);;
}



inline jule::Ptr<_22145264e_TypeAlias> _22122b945_FindTypeAlias(_22122ac63_scopeChecker* _self_, jule::Str _49432_ident, jule::Bool _49444_cppLinked) {
	;
	jule::Ptr<_22145264e_TypeAlias> _49717_ta = _221423ae8_findTypeAlias((*(_self_))._field_table.ptr(), _49432_ident, _49444_cppLinked, true);;
	if ((_49717_ta != nullptr)) {
		return _49717_ta;;
	};
	jule::Ptr<_22122ac63_scopeChecker> _50217_parent = (*(_self_))._field_parent;;
	while ((_50217_parent != nullptr)) {
		{
			_49717_ta=_221423ae8_findTypeAlias(_50217_parent.get()._field_table.ptr(), _49432_ident, _49444_cppLinked, true);
			if ((_49717_ta != nullptr)) {
				return _49717_ta;;
			};
			_50217_parent=_50217_parent.get()._field_parent;
		}
	_iter_next_205db47e6:;
	}
	_iter_end_205db47e6:;;
	return _22124ba53_FindTypeAlias((*(_self_))._field_s.ptr(), _49432_ident, _49444_cppLinked);;
}



inline jule::Ptr<_2211c48cc_Struct> _22122bcec_FindStruct(_22122ac63_scopeChecker* _self_, jule::Str _51929_ident, jule::Bool _51941_cppLinked) {
	return _22124be0a_FindStruct((*(_self_))._field_s.ptr(), _51929_ident, _51941_cppLinked);;
}



inline jule::Ptr<_2211d9ccc_Fn> _22122c1a4_FindFn(_22122ac63_scopeChecker* _self_, jule::Str _52825_ident, jule::Bool _52837_cppLinked) {
	return _22124c2b2_FindFn((*(_self_))._field_s.ptr(), _52825_ident, _52837_cppLinked);;
}



inline jule::Ptr<_2211ebeed_Trait> _22122c4b2_FindTrait(_22122ac63_scopeChecker* _self_, jule::Str _53728_ident) {
	return _22124c5c0_FindTrait((*(_self_))._field_s.ptr(), _53728_ident);;
}



inline jule::Ptr<_2211ee781_Enum> _22122c7c0_FindEnum(_22122ac63_scopeChecker* _self_, jule::Str _54627_ident) {
	return _22124c8cd_FindEnum((*(_self_))._field_s.ptr(), _54627_ident);;
}



inline jule::Ptr<_221200d7b_TypeEnum> _22122cacd_FindTypeEnum(_22122ac63_scopeChecker* _self_, jule::Str _55531_ident) {
	return _22124cbdb_FindTypeEnum((*(_self_))._field_s.ptr(), _55531_ident);;
}



inline jule::Bool _22122ce0d_isUnsafe(jule::Ptr<_22122ac63_scopeChecker> _self_) {
	jule::Ptr<_22122ac63_scopeChecker> _56317_scope = _self_;;
	_julec_label_iter:;
	if (_56317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_56317_scope.get()._field_parent != nullptr)) {
		_56317_scope=_56317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _22122d172_isRoot(_22122ac63_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _22122d34d_stop(_22122ac63_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _22122d5b2_stopped(_22122ac63_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _22122d826_isDeferred(jule::Ptr<_22122ac63_scopeChecker> _self_) {
	jule::Ptr<_22122ac63_scopeChecker> _59617_scope = _self_;;
	_julec_label_iter:;
	if (_59617_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_59617_scope.get()._field_parent != nullptr)) {
		_59617_scope=_59617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_22122ac63_scopeChecker> _22122da8a_getRoot(jule::Ptr<_22122ac63_scopeChecker> _self_) {
	jule::Ptr<_22122ac63_scopeChecker> _61417_root = _self_;;
	while (((_61417_root.get()._field_parent != nullptr) && (_61417_root.get()._field_owner == nullptr))) {
		{
			_61417_root=_61417_root.get()._field_parent;
		}
	_iter_next_205dbdc40:;
	}
	_iter_end_205dbdc40:;;
	return _61417_root;;
}



inline jule::Ptr<_22122ac63_scopeChecker> _22122dcee_getHardRoot(jule::Ptr<_22122ac63_scopeChecker> _self_) {
	jule::Ptr<_22122ac63_scopeChecker> _62417_root = _self_;;
	while ((_62417_root.get()._field_parent != nullptr)) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_205dbee61:;
	}
	_iter_end_205dbee61:;;
	return _62417_root;;
}



inline jule::Ptr<_221226874_Label> _22122e10c_findLabel(_22122ac63_scopeChecker* _self_, jule::Str _63428_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205dc099a:;
		if (it != expr_end) {
			jule::Any _63521_st = *it;
			{
				{
					auto &_match_expr{ _63521_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_205dc14b2:;
						{
							jule::Ptr<_221226874_Label> _63825_label = _63521_st.cast_ptr<_221226874_Label>(&__jule_any_type21);;
							if ((_63825_label.get()._field_Ident == _63428_ident)) {
								return _63825_label;;
							};
						}
					}
					_match_end_205dc13b3:;
				};
			}
			_iter_next_205dc099a:;
			++it;
			goto _iter_begin_205dc099a;
		}
		_iter_end_205dc099a:;
	};
	return nullptr;;
}



inline jule::Ptr<_2212299cb_scopeLabel> _22122e41a_findLabelScope(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Str _65034_ident) {
	jule::Ptr<_2212299cb_scopeLabel> _65117_label = _22122e728_findLabelAll(_self_.ptr(), _65034_ident);;
	if (((_65117_label != nullptr) && (_65117_label.get()._field_scope == _self_))) {
		return _65117_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_2212299cb_scopeLabel> _22122e728_findLabelAll(_22122ac63_scopeChecker* _self_, jule::Str _66231_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205dc36e5:;
		if (it != expr_end) {
			jule::Ptr<_2212299cb_scopeLabel> _66321_lbl = *it;
			{
				if ((_66321_lbl.get()._field_label.get()._field_Ident == _66231_ident)) {
					return _66321_lbl;;
				};
			}
			_iter_next_205dc36e5:;
			++it;
			goto _iter_begin_205dc36e5;
		}
		_iter_end_205dc36e5:;
	};
	return nullptr;;
}



inline jule::Bool _22122ead0_isDuplicatedIdent(_22122ac63_scopeChecker* _self_, jule::Uintptr _67436_itself, jule::Str _67453_ident) {
	jule::Ptr<_22126b17c_Var> _67513_v = _22122b58d_FindVar(_self_, _67453_ident, false);;
	if (((_67513_v != nullptr) && (static_cast<jule::Uintptr>(_67513_v) != _67436_itself))) {
		if ((_67513_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_67513_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_22124d109_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_22145264e_TypeAlias> _68313_ta = _22122b945_FindTypeAlias(_self_, _67453_ident, false);;
	if (((_68313_ta != nullptr) && (static_cast<jule::Uintptr>(_68313_ta) != _67436_itself))) {
		if ((_68313_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_22124d109_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _22122ed55_checkVarDecl(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b71e9_VarDecl> _69436_decl) {
	jule::Ptr<_22126b17c_Var> _69517_v = _2211e58ba_buildVar(_69436_decl);;
	_69517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_69517_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_69517_v, &__jule_any_type8));;
	});;
	if (_22122ead0_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69517_v)), _69517_v.get()._field_Ident)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _69517_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_69517_v.get()._field_Ident, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_22122d34d_stop(_self_.ptr());
		return;;
	};
	_22125e8e0_checkVarDecl(_self_.get()._field_s, &(_69517_v), jule::Trait<_22147198c_Lookup>(_self_, 0));
	if (((!(_22126b7a9_IsTypeInferred(_69517_v.ptr()))) && ((_69517_v.get()._field_Kind == nullptr) || (_69517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_2212635b4_checkTypeVar(_self_.get()._field_s, &(_69517_v), jule::Trait<_22147198c_Lookup>(_self_, 0));
}



inline void _2212300ca_checkTypeAliasDecl(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211baa5a_TypeAliasDecl> _71842_decl) {
	jule::Ptr<_22145264e_TypeAlias> _71917_ta = _2211e25ed_buildTypeAlias(_71842_decl);;
	if (_22122ead0_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_71917_ta)), _71917_ta.get()._field_Ident)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _71917_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_71917_ta.get()._field_Ident, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_22122d34d_stop(_self_.ptr());
		return;;
	};
	_2212590d2_checkTypeAliasDecl(_self_.get()._field_s, &(_71917_ta), jule::Trait<_22147198c_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_71917_ta);;
	if ((_71917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_22122d34d_stop(_self_.ptr());
	};
}



inline jule::Ptr<_221224135_Scope> _22123033e_getChild(_22122ac63_scopeChecker* _self_) {
	return jule::new_ptr<_221224135_Scope>(_221224135_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _221230707_checkChildSsc(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b4724_ScopeTree>* _74238_tree, jule::Ptr<_221224135_Scope>* _74261_s, jule::Ptr<_22122ac63_scopeChecker>* _74277_ssc) {
	(*(_74277_ssc)).get()._field_parent=_self_;
	_22123aba7_check((*(_74277_ssc)), _74238_tree, _74261_s);
}



inline jule::Ptr<_221224135_Scope> _221230aae_checkChildSc(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b4724_ScopeTree>* _74737_tree, jule::Ptr<_22122ac63_scopeChecker>* _74760_ssc) {
	jule::Ptr<_221224135_Scope> _74817_s = _22123033e_getChild(_self_.ptr());;
	_221230707_checkChildSsc(_self_, _74737_tree, &(_74817_s), _74760_ssc);
	return _74817_s;;
}



inline jule::Ptr<_221224135_Scope> _221230dbc_checkChild(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b4724_ScopeTree>* _75335_tree) {
	jule::Ptr<_22122ac63_scopeChecker> _75417_ssc = _22123ae1b_newChildChecker(_self_);;
	return _221230aae_checkChildSc(_self_, _75335_tree, &(_75417_ssc));;
}



inline void _221231142_checkAnonScope(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b4724_ScopeTree> _75838_tree) {
	jule::Ptr<_221224135_Scope> _75917_s = _221230dbc_checkChild(_self_, &(_75838_tree));;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_75917_s, &__jule_any_type22));;
}



inline void _221231461_processErrorCall(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211d5e3d_BuiltinErrorCallExprModel>* _76341_m, jule::Ptr<_21da1aa0b_Token> _76372_err) {
	if (_22122d826_isDeferred(_self_)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_22122ac63_scopeChecker> _76817_root = _22122da8a_getRoot(_self_);;
	if ((!(_76817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_22124da66_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_76341_m)).get()._field_Func=_76817_root.get()._field_owner;
}



inline void _2212316d6_checkExpr(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211a8cac_Expr> _77633_expr) {
	jule::Ptr<_22142779a_Eval> _77717_eval = _2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0));;
	_77717_eval.get()._field_ignored=true;
	jule::Ptr<_221425c2c_Data> _77917_d = _221444267_evalExpr(_77717_eval, _77633_expr);;
	if ((_77917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _77917_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_205dd8793:;
			{
				jule::Ptr<_2211d5e3d_BuiltinErrorCallExprModel> _78621_m = _77917_d.get()._field_Model.cast_ptr<_2211d5e3d_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_221231461_processErrorCall(_self_, &(_78621_m), _77633_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_77917_d, &__jule_any_type24));;
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35) {
			_case_begin_205dd89a2:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_77917_d, &__jule_any_type24));;
			}
		}
		else {
			_case_begin_205dd88e7:;
			{
				_22124d747_pushErr(_self_.get()._field_s.ptr(), _77633_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_205dd870a:;
	};
}



inline jule::Ptr<_221224531_If> _2212319e4_checkIf(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b9a59_If> _80631_i) {
	jule::Ptr<_221224135_Scope> _80717_s = _221230dbc_checkChild(_self_, &(_80631_i.get()._field_Scope));;
	jule::Ptr<_221425c2c_Data> _80917_d = _221444267_evalExpr(_2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0)), _80631_i.get()._field_Expr);;
	if ((_80917_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_22145a5be_Prim> _81417_prim = _221455a92_Prim(_80917_d.get()._field_Kind.ptr());;
	if (((_81417_prim == nullptr) || (!(_22145d58e_IsBool(_81417_prim.ptr()))))) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _80631_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_221224531_If>(_221224531_If{._field_Expr=_80917_d.get()._field_Model, ._field_Scope=_80717_s});;
}



inline jule::Ptr<_22122481c_Else> _221231d02_checkElse(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b9e11_Else> _82633_e) {
	return jule::new_ptr<_22122481c_Else>(_22122481c_Else{._field_Scope=_221230dbc_checkChild(_self_, &(_82633_e.get()._field_Scope))});;
}



inline void _221232077_checkConditional(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211ba384_Conditional> _83240_conditional) {
	jule::Ptr<_221224b91_Conditional> _83317_c = jule::new_ptr<_221224b91_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_83317_c, &__jule_any_type36));;
	_83317_c.get()._field_Elifs=jule::Slice<jule::Ptr<_221224531_If>>::alloc(0LL, (_83240_conditional.get()._field_Tail.len() + 1LL));
	_83317_c.get()._field_Elifs = jule::alloc_for_append(_83317_c.get()._field_Elifs,1);_83317_c.get()._field_Elifs.__push(_2212319e4_checkIf(_self_, _83240_conditional.get()._field_Head));;
	{
		auto expr = &(_83240_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205de2b54:;
		if (it != expr_end) {
			jule::Ptr<_2211b9a59_If> _83921_elif = *it;
			{
				_83317_c.get()._field_Elifs = jule::alloc_for_append(_83317_c.get()._field_Elifs,1);_83317_c.get()._field_Elifs.__push(_2212319e4_checkIf(_self_, _83921_elif));;
			}
			_iter_next_205de2b54:;
			++it;
			goto _iter_begin_205de2b54;
		}
		_iter_end_205de2b54:;
	};
	if ((_83240_conditional.get()._field_Default != nullptr)) {
		_83317_c.get()._field_Default=_221231d02_checkElse(_self_, _83240_conditional.get()._field_Default);
	};
}



inline void _2212324d9_checkIterScopeSsc(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Uintptr _84837_it, jule::Ptr<_2211b4724_ScopeTree> _84854_tree, jule::Ptr<_221224135_Scope>* _84877_s, jule::Ptr<_22122ac63_scopeChecker> _84892_ssc) {
	_84892_ssc.get()._field_it=_84837_it;
	_221230707_checkChildSsc(_self_, &(_84854_tree), _84877_s, &(_84892_ssc));
}



inline jule::Ptr<_221224135_Scope> _22123293a_checkIterScopeSc(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Uintptr _85336_it, jule::Ptr<_2211b4724_ScopeTree> _85353_tree, jule::Ptr<_22122ac63_scopeChecker> _85375_ssc) {
	jule::Ptr<_221224135_Scope> _85417_scope = _22123033e_getChild(_self_.ptr());;
	_2212324d9_checkIterScopeSsc(_self_, _85336_it, _85353_tree, &(_85417_scope), _85375_ssc);
	return _85417_scope;;
}



inline jule::Ptr<_221224135_Scope> _221232ce2_checkIterScope(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Uintptr _85934_it, jule::Ptr<_2211b4724_ScopeTree>* _85952_tree) {
	jule::Ptr<_22122ac63_scopeChecker> _86017_ssc = _22123ae1b_newChildChecker(_self_);;
	return _22123293a_checkIterScopeSc(_self_, _85934_it, (*(_85952_tree)), _86017_ssc);;
}



inline void _221233067_checkInfIter(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b7c11_Iter>* _86437_it) {
	jule::Ptr<_221224e7c_InfIter> _86517_kind = jule::new_ptr<_221224e7c_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_86517_kind, &__jule_any_type37));;
	_86517_kind.get()._field_Scope=_221232ce2_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_86517_kind)), &((*(_86437_it)).get()._field_Scope));
}



inline void _2212332dc_checkWhileIter(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b7c11_Iter>* _87039_it) {
	jule::Ptr<_2211b84d6_WhileKind> _87117_wh = (*(_87039_it)).get()._field_Kind.cast_ptr<_2211b84d6_WhileKind>(&__jule_any_type38);;
	if (((_87117_wh.get()._field_Expr == nullptr) && (_87117_wh.get()._field_Next == nullptr))) {
		_221233067_checkInfIter(_self_, _87039_it);
		return;;
	};
	jule::Ptr<_221225400_WhileIter> _87717_kind = jule::new_ptr<_221225400_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_87717_kind, &__jule_any_type39));;
	_87717_kind.get()._field_Scope=_221232ce2_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87717_kind)), &((*(_87039_it)).get()._field_Scope));
	if ((_87117_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_221425c2c_Data> _88221_d = _221444267_evalExpr(_2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0)), _87117_wh.get()._field_Expr);;
		if ((_88221_d == nullptr)) {
			return;;
		};
		jule::Ptr<_22145a5be_Prim> _88717_prim = _221455a92_Prim(_88221_d.get()._field_Kind.ptr());;
		if ((_88717_prim == nullptr)) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_22145d58e_IsBool(_88717_prim.ptr())))) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_87717_kind.get()._field_Expr=_88221_d.get()._field_Model;
	};
	if (_2211b8838_IsWhileNext(_87117_wh.ptr())) {
		if ((!(_221223662_isValidAstStForNextSt(&(_87117_wh.get()._field_Next))))) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _90717_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_221239953_checkNode(_self_, &(_87117_wh.get()._field_Next));
		if ((_90717_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91025_st = _self_.get()._field_scope.get()._field_Stmts[_90717_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _90717_n);
			if ((!(_221223909_isValidStForNextSt(&(_91025_st))))) {
				_22124d747_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_87717_kind.get()._field_Next=_91025_st;
		};
	};
}



inline void _2212336a5_checkComptimeRangeIter(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b7c11_Iter>* _92047_it, jule::Ptr<_221225cd5_RangeIter>* _92063_kind, jule::Ptr<_221425c2c_Data>* _92086_d) {
	if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
		if (((!(_22124d109_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _22122ead0_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyA.get()._field_Ident))) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_22124da66_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
		if (((!(_22124d109_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _22122ead0_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyB.get()._field_Ident))) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_22124da66_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_221202ed2_comptimeRange> _93417_comptime = _221458b83_comptimeRange((*(_92086_d)).get()._field_Kind.ptr());;
	_221202d06_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._221202586_ready(_93417_comptime.get()._field_kind, &((*(_92063_kind)).get()._field_KeyA), &((*(_92063_kind)).get()._field_KeyB));
	jule::I32 _93617_i = 0LL;;
	jule::I32 _93713_errors = _self_.get()._field_s.get()._field_errors.len();;
	for (; (_93617_i < _221202d06_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._221202bb3_len(_93417_comptime.get()._field_kind)); (_93617_i)++) {
		{
			jule::Ptr<_22122ac63_scopeChecker> _93921_ssc = _22123ae1b_newChildChecker(_self_);;
			jule::Ptr<_221224135_Scope> _94021_scope = _22123033e_getChild(_self_.ptr());;
			if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
				(*(_92063_kind)).get()._field_KeyA.get()._field_Scope=_94021_scope;
				_93921_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_93921_ssc.get()._field_table.get()._field_Vars,1);_93921_ssc.get()._field_table.get()._field_Vars.__push((*(_92063_kind)).get()._field_KeyA);;
			};
			if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
				(*(_92063_kind)).get()._field_KeyB.get()._field_Scope=_94021_scope;
				_93921_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_93921_ssc.get()._field_table.get()._field_Vars,1);_93921_ssc.get()._field_table.get()._field_Vars.__push((*(_92063_kind)).get()._field_KeyB);;
			};
			_221202d06_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._22120294e_step(_93417_comptime.get()._field_kind, _93617_i, &((*(_92063_kind)).get()._field_KeyA), &((*(_92063_kind)).get()._field_KeyB));
			_221230707_checkChildSsc(_self_, &((*(_92047_it)).get()._field_Scope), &(_94021_scope), &(_93921_ssc));
			if ((_93713_errors != _self_.get()._field_s.get()._field_errors.len())) {
				goto _iter_end_205e07b14;
			};
			_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_94021_scope, &__jule_any_type22));;
		}
	_iter_next_205e07b14:;
	}
	_iter_end_205e07b14:;;
}



inline void _22123392a_checkRangeIter(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b7c11_Iter>* _95939_it) {
	jule::Ptr<_2211b8d77_RangeKind> _96017_rang = (*(_95939_it)).get()._field_Kind.cast_ptr<_2211b8d77_RangeKind>(&__jule_any_type40);;
	jule::Ptr<_221425c2c_Data> _96217_d = _221443e59_evalExpr1(_2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0)), _96017_rang.get()._field_Expr);;
	if ((_96217_d == nullptr)) {
		return;;
	};
	jule::Ptr<_221225cd5_RangeIter> _96717_kind = jule::new_ptr<_221225cd5_RangeIter>(_221225cd5_RangeIter{._field_Expr=_96217_d, });;
	_22141be87_rangeChecker _97117_rc = _22141be87_rangeChecker{._field_sc=_self_, ._field_rang=_96017_rang, ._field_Kind=_96717_kind, ._field_d=_96217_d};;
	jule::Bool _97713_ok = _22141dcad_check(&_97117_rc);;
	if ((!(_97713_ok))) {
		return;;
	};
	jule::Ptr<_221202ed2_comptimeRange> _98217_comptimeRange = _221458b83_comptimeRange(_96217_d.get()._field_Kind.ptr());;
	if ((_98217_comptimeRange != nullptr)) {
		_2212336a5_checkComptimeRangeIter(_self_, _95939_it, &(_96717_kind), &(_96217_d));
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_96717_kind, &__jule_any_type41));;
	jule::Ptr<_22122ac63_scopeChecker> _99017_ssc = _22123ae1b_newChildChecker(_self_);;
	jule::Ptr<_221224135_Scope> _99117_scope = _22123033e_getChild(_self_.ptr());;
	if ((_96717_kind.get()._field_KeyA != nullptr)) {
		if (((!(_22124d109_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _22122ead0_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyA.get()._field_Ident))) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_22124da66_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyA.get()._field_Scope=_99117_scope;
		_99017_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_99017_ssc.get()._field_table.get()._field_Vars,1);_99017_ssc.get()._field_table.get()._field_Vars.__push(_96717_kind.get()._field_KeyA);;
	};
	if ((_96717_kind.get()._field_KeyB != nullptr)) {
		if (((!(_22124d109_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _22122ead0_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyB.get()._field_Ident))) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_22124da66_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyB.get()._field_Scope=_99117_scope;
		_99017_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_99017_ssc.get()._field_table.get()._field_Vars,1);_99017_ssc.get()._field_table.get()._field_Vars.__push(_96717_kind.get()._field_KeyB);;
	};
	_2212324d9_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96717_kind)), (*(_95939_it)).get()._field_Scope, &(_99117_scope), _99017_ssc);
	_96717_kind.get()._field_Scope=_99117_scope;
}



inline void _221233ba0_checkIter(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b7c11_Iter> _101533_it) {
	if (_2211b8063_IsInf(_101533_it.ptr())) {
		_221233067_checkInfIter(_self_, &(_101533_it));
		return;;
	};
	{
		auto &_match_expr{ _101533_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type38) {
			_case_begin_205e17c78:;
			{
				_2212332dc_checkWhileIter(_self_, &(_101533_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_205e1885b:;
			{
				_22123392a_checkRangeIter(_self_, &(_101533_it));
			}
		}
		else {
			_case_begin_205e17b57:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_205e17b02:;
	};
}



inline jule::Bool _221233ead_checkValidContLabel(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Uintptr _103139_it) {
	jule::Ptr<_22122ac63_scopeChecker> _103217_scope = _self_;;
	_julec_label_iter:;
	if ((_103217_scope.get()._field_it == _103139_it)) {
		return true;;
	};
	if ((_103217_scope.get()._field_parent != nullptr)) {
		_103217_scope=_103217_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _2212342bb_checkValidBreakLabel(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Uintptr _104740_ptr) {
	jule::Ptr<_22122ac63_scopeChecker> _104817_scope = _self_;;
	_julec_label_iter:;
	if ((_104817_scope.get()._field_it == _104740_ptr)) {
		return true;;
	};
	if ((_104817_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _105617_mtch = static_cast<jule::Uintptr>(((_221228997_Case*)(_104817_scope.get()._field_cse))->_field_Owner);;
		if ((_105617_mtch == _104740_ptr)) {
			return true;;
		};
	};
	if ((_104817_scope.get()._field_parent != nullptr)) {
		_104817_scope=_104817_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_2212261d1_ContSt> _2212345c9_checkContValidScope(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b95d6_ContSt> _107039_c) {
	if (_22122d826_isDeferred(_self_)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_107039_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_2212261d1_ContSt>();;
	};
	jule::Ptr<_22122ac63_scopeChecker> _108017_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_108017_scope.get()._field_it == 0LLU) && (_108017_scope.get()._field_parent != nullptr)) && (_108017_scope.get()._field_owner == nullptr))) {
			_case_begin_205e206cb:;
			{
				_108017_scope=_108017_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_108017_scope.get()._field_it != 0LLU)) {
			_case_begin_205e20753:;
			{
				return jule::new_ptr<_2212261d1_ContSt>(_2212261d1_ContSt{._field_It=_108017_scope.get()._field_it});;
			}
		}
		_match_end_205e20621:;
	};
	_22124d747_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _22123484e_checkCont(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b95d6_ContSt> _109429_c) {
	jule::Ptr<_2212261d1_ContSt> _109517_cont = _2212345c9_checkContValidScope(_self_, _109429_c);;
	if ((_109517_cont == nullptr)) {
		return;;
	};
	if ((_109429_c.get()._field_Label != nullptr)) {
		jule::Ptr<_2212299cb_scopeLabel> _110121_label = _22122183b_findLabelParent(_109429_c.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
		if ((_110121_label == nullptr)) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_110121_label.get()._field_used=true;
		if (((_110121_label.get()._field_pos + 1LL) >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I32 _111417_i = (_110121_label.get()._field_pos + 1LL);;
		if ((_111417_i >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _111825_st = _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_111417_i];;
			{
				auto &_match_expr{ _111825_st };
				
				if (_match_expr.type == &__jule_any_type37) {
					_case_begin_205e271e9:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_221224e7c_InfIter>(&__jule_any_type37)));
					}
				}
				else if (_match_expr.type == &__jule_any_type41) {
					_case_begin_205e28a14:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_221225cd5_RangeIter>(&__jule_any_type41)));
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_205e28a7a:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_221225400_WhileIter>(&__jule_any_type39)));
					}
				}
				else {
					_case_begin_205e2888d:;
					{
						_22124d747_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_205e28838:;
			};
		};
	};
	if ((_109517_cont.get()._field_It != 0LLU)) {
		if ((!(_221233ead_checkValidContLabel(_self_, _109517_cont.get()._field_It)))) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_109517_cont, &__jule_any_type42));;
}



inline void _221234ac4_checkLabel(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b1e3b_LabelSt> _114134_l) {
	if ((_22122e10c_findLabel(_self_.ptr(), _114134_l.get()._field_Ident) != nullptr)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _114134_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_114134_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_221226874_Label> _114717_label = jule::new_ptr<_221226874_Label>(_221226874_Label{._field_Ident=_114134_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_114717_label, &__jule_any_type21));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_2212299cb_scopeLabel>>::make({jule::new_ptr<_2212299cb_scopeLabel>(_2212299cb_scopeLabel{._field_token=_114134_l.get()._field_Token, ._field_label=_114717_label, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _221234d49_pushGoto(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b22e3_GotoSt> _116032_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_221226b60_GotoSt>(_221226b60_GotoSt{._field_Ident=_116032_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type43));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_221229e4e_scopeGoto>>::make({jule::new_ptr<_221229e4e_scopeGoto>(_221229e4e_scopeGoto{._field_gt=_116032_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _2212350be_checkPostfix(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b3228_AssignSt> _117236_a) {
	if ((_117236_a.get()._field_Left.len() > 1LL)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2211a8cac_Expr> _117817_expr = _117236_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_221425c2c_Data> _117917_d = _221444267_evalExpr(_2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0)), _117817_expr);;
	if ((_117917_d == nullptr)) {
		return;;
	};
	_2212233ba_checkAssign(&(_self_.get()._field_s), &(_117917_d), nullptr, _117236_a.get()._field_Setter);
	if ((_22145606a_Ptr(_117917_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_2214623b7_Ptr> _118721_ptr = _22145606a_Ptr(_117917_d.get()._field_Kind.ptr());;
		if (_221462d8a_IsUnsafe(_118721_ptr.ptr())) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_221455a92_Prim(_117917_d.get()._field_Kind.ptr()) == nullptr) || (!(_21e6c4e9a_IsNum(_221455a92_Prim(_117917_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_221227017_Postfix>(_221227017_Postfix{._field_Expr=_117917_d.get()._field_Model, ._field_Op=_117236_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type44));;
}



inline jule::Bool _2212353cc_isNewAssignIdent(_22122ac63_scopeChecker* _self_, jule::Str _120535_ident) {
	if ((_21da1d2a0_IsIgnoreIdent(_120535_ident) || _120535_ident.empty())) {
		return false;;
	};
	return (_221423ea0_defByIdent((*(_self_))._field_table.ptr(), _120535_ident, false) == nullptr);;
}



inline jule::Bool _22123582d_checkStructureAssignOp(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211c76e3_StructIns>* _121247_s, jule::Ptr<_2211b3228_AssignSt>* _121267_a, jule::Ptr<_221425c2c_Data>* _121286_r) {
	jule::Ptr<_2211dc97d_FnIns> _121517_overload = nullptr;;
	{
		auto &_match_expr{ (*(_121267_a)).get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_205e3a350:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_205e3b7c4:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_205e3b83a:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_205e3a790:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_205e3a806:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_205e3a86c:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_205e3a8d3:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_205e3b8d4:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_205e3b94a:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_205e3b9b1:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_205e3a729:;
			{
				_22124d747_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_2211c7a9a_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_205e3a196:;
	};
	if ((_121517_overload == nullptr)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_2211c7a9a_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_2211dbaae_ParamIns> _124717_p = _121517_overload.get()._field_Params[1LL];;
	return _2212559d5_checkAssignType(_self_.get()._field_s, _124717_p.get()._field_Decl.get()._field_Reference, &(_124717_p.get()._field_Kind), _121286_r, (*(_121267_a)).get()._field_Setter);;
}



inline void _221235aa3_checkSingleAssign(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b3228_AssignSt>* _125142_a) {
	jule::Ptr<_221425c2c_Data> _125217_l = nullptr;;
	if ((!(_21da1d2a0_IsIgnoreIdent((*(_125142_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_2211a8cac_Expr> _125521_expr = (*(_125142_a)).get()._field_Left[0LL].get()._field_Expr;;
		_125217_l=_221444267_evalExpr(_2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0)), _125521_expr);
		if ((_125217_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_22142779a_Eval> _126217_eval = nullptr;;
	if ((_125217_l != nullptr)) {
		_126217_eval=_2212551cc_evalp(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0), _125217_l.get()._field_Kind);
	} else {
		_126217_eval=_2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0));
	};
	_126217_eval.get()._field_unsafety=_22122ce0d_isUnsafe(_self_);
	jule::Ptr<_221425c2c_Data> _126917_r = _221444267_evalExpr(_126217_eval, (*(_125142_a)).get()._field_Right);;
	if ((_126917_r == nullptr)) {
		return;;
	};
	if ((_125217_l == nullptr)) {
		if (_221454640_Void(_126917_r.get()._field_Kind.ptr())) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_126917_r, &__jule_any_type24));;
		return;;
	};
	if ((!(_2212233ba_checkAssign(&(_self_.get()._field_s), &(_125217_l), _126917_r, (*(_125142_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_221457731_Tup(_126917_r.get()._field_Kind.ptr()) != nullptr)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2211cb692_OperandExprModel> _129117_lm = jule::new_ptr<_2211cb692_OperandExprModel>(_2211cb692_OperandExprModel{._field_Kind=_125217_l.get()._field_Kind, ._field_Model=_125217_l.get()._field_Model});;
	jule::Ptr<_2211cb692_OperandExprModel> _129517_rm = jule::new_ptr<_2211cb692_OperandExprModel>(_2211cb692_OperandExprModel{._field_Kind=_126917_r.get()._field_Kind, ._field_Model=_126917_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_22122748a_Assign>(_22122748a_Assign{._field_L=_129117_lm, ._field_R=_129517_rm, ._field_Op=(*(_125142_a)).get()._field_Setter}), &__jule_any_type45));;
	if ((!(*(_125142_a)).get()._field_Setter.get()._field_Kind.equal("=", 1))) {
		jule::Ptr<_2211c76e3_StructIns> _130221_strct = _221456ee4_Struct(_125217_l.get()._field_Kind.ptr());;
		if ((_130221_strct != nullptr)) {
			_22123582d_checkStructureAssignOp(_self_, &(_130221_strct), _125142_a, &(_126917_r));
			return;;
		};
		(*(_125142_a)).get()._field_Setter.get()._field_Kind=(*(_125142_a)).get()._field_Setter.get()._field_Kind.slice(0LL, ((*(_125142_a)).get()._field_Setter.get()._field_Kind.len() - 1LL));
		_221446478_binaryEval _130921_solver = static__221446d91_new(_126217_eval, (*(_125142_a)).get()._field_Setter);;
		_126917_r=_22144bbed_solveExplicit(&_130921_solver, &(_125217_l), &(_126917_r));
		if ((_126917_r == nullptr)) {
			return;;
		};
		((*(_125142_a)).get()._field_Setter.get()._field_Kind).append("=", 1);
		return;;
	};
	_2214115ec_assignTypeChecker _131817_checker = _2214115ec_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_125217_l.get()._field_Kind, ._field_d=_126917_r, ._field_errorToken=(*(_125142_a)).get()._field_Setter};;
	if (_221412774_check(&_131817_checker)) {
		_129517_rm.get()._field_Model=_126917_r.get()._field_Model;
		_129117_lm.get()._field_Model=_125217_l.get()._field_Model;
	};
}



inline void _2212360d1_processEndPartOfMultiAssign(_22122ac63_scopeChecker* _self_, jule::Ptr<_221227842_MultiAssign>* _133051_st, jule::Ptr<_2211b3228_AssignSt>* _133114_a, jule::Ptr<_2211b2bd9_AssignLeft>* _133133_lexpr, jule::Ptr<_221425c2c_Data>* _133158_l, jule::Ptr<_221425c2c_Data>* _133173_r) {
	if (((!((*(_133133_lexpr)).get()._field_Reference)) && _21da1d2a0_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident))) {
		if (_221454640_Void((*(_133173_r)).get()._field_Kind.ptr())) {
			_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_133114_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*(_133051_st)).get()._field_L = jule::alloc_for_append((*(_133051_st)).get()._field_L,1);(*(_133051_st)).get()._field_L.__push(nullptr);;
		return;;
	};
	if (((*(_133114_a)).get()._field_Declarative && ((*(_133133_lexpr)).get()._field_Reference || _2212353cc_isNewAssignIdent(_self_, (*(_133133_lexpr)).get()._field_Ident)))) {
		if (_22122ead0_isDuplicatedIdent(_self_, 0LLU, (*(_133133_lexpr)).get()._field_Ident)) {
			_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_22124da66_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_22122d34d_stop(_self_);
			return;;
		};
		if (_21da1d2a0_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident)) {
			_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_22126b17c_Var> _135221_v = jule::new_ptr<_22126b17c_Var>(_22126b17c_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_133133_lexpr)).get()._field_Token, ._field_Ident=(*(_133133_lexpr)).get()._field_Ident, ._field_Mutable=(*(_133133_lexpr)).get()._field_Mutable, ._field_Reference=(*(_133133_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Expr=(*(_133114_a)).get()._field_Right, ._field_Data=(*(_133173_r))}), });;
		_221263295_checkVar((*(_self_))._field_s, &(_135221_v));
		_135221_v.get()._field_Value=nullptr;
		(*(_133051_st)).get()._field_L = jule::alloc_for_append((*(_133051_st)).get()._field_L,1);(*(_133051_st)).get()._field_L.__push(jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=_135221_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_135221_v.get()._field_Mutable, ._field_Reference=_135221_v.get()._field_Reference, ._field_Lvalue=(!(_135221_v.get()._field_Constant)), ._field_Model=jule::Any(_135221_v, &__jule_any_type8), }));;
		(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_135221_v);;
		(*(_self_))._field_scope.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_scope.get()._field_Stmts,1);(*(_self_))._field_scope.get()._field_Stmts.__push(jule::Any(_135221_v, &__jule_any_type8));;
		return;;
	};
	if (((*(_133133_lexpr)).get()._field_Mutable || (*(_133133_lexpr)).get()._field_Reference)) {
		_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_22124da66_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_2212233ba_checkAssign(&((*(_self_))._field_s), _133158_l, (*(_133173_r)), (*(_133114_a)).get()._field_Setter)))) {
		return;;
	};
	;
	_2212588ea_checkValidityForInitExpr((*(_self_))._field_s, (*(_133158_l)).get()._field_Mutable, false, &((*(_133158_l)).get()._field_Kind), _133173_r, &((*(_133114_a)).get()._field_Setter));
	_2214115ec_assignTypeChecker _139517_checker = _2214115ec_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_133158_l)).get()._field_Kind, ._field_d=(*(_133173_r)), ._field_errorToken=(*(_133114_a)).get()._field_Setter};;
	_221412774_check(&_139517_checker);
	(*(_133051_st)).get()._field_L = jule::alloc_for_append((*(_133051_st)).get()._field_L,1);(*(_133051_st)).get()._field_L.__push((*(_133158_l)));;
}



inline void _221236367_checkMultiAssign(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b3228_AssignSt>* _140541_a) {
	jule::Ptr<_221425c2c_Data> _140617_rd = _221444267_evalExpr(_2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0)), (*(_140541_a)).get()._field_Right);;
	if ((_140617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_221425c2c_Data>> _141017_right = _2212225ea_getDatasFromTupleData(&(_140617_rd));;
	if ((_141017_right.len() == 1LL)) {
		{
			auto &_match_expr{ _141017_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type46) {
				_case_begin_205e6181b:;
				{
					jule::Ptr<_2211ce2ee_IndexingExprModel> _141425_iem = _141017_right[0LL].get()._field_Model.cast_ptr<_2211ce2ee_IndexingExprModel>(&__jule_any_type46);;
					if ((_2214574bc_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_141017_right=jule::Slice<jule::Ptr<_221425c2c_Data>>::make({jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=_2214574bc_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), })});
					};
				}
			}
			_match_end_205e617b6:;
		};
	};
	{
		
		if (((*(_140541_a)).get()._field_Left.len() > _141017_right.len())) {
			_case_begin_205e61b4b:;
			{
				_22124d747_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_140541_a)).get()._field_Left.len() < _141017_right.len())) {
			_case_begin_205e61bb2:;
			{
				_22124d747_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_205e639e9:;
	};
	jule::Ptr<_221227842_MultiAssign> _143317_st = jule::new_ptr<_221227842_MultiAssign>(_221227842_MultiAssign{._field_R=_140617_rd.get()._field_Model});;
	{
		auto expr = &((*(_140541_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205e65bd8:;
		if (it != expr_end) {
			jule::I32 _143613_i = it - expr->begin();
			{
				jule::Ptr<_2211b2bd9_AssignLeft> _143721_lexpr = (*(_140541_a)).get()._field_Left[_143613_i];;
				jule::Ptr<_221425c2c_Data> _143821_l = nullptr;;
				if (((!(_21da1d2a0_IsIgnoreIdent(_143721_lexpr.get()._field_Ident))) && ((!((*(_140541_a)).get()._field_Declarative)) || (!(_2212353cc_isNewAssignIdent(_self_.ptr(), _143721_lexpr.get()._field_Ident)))))) {
					_143821_l=_221444267_evalExpr(_2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0)), _143721_lexpr.get()._field_Expr);
					if ((_143821_l == nullptr)) {
						goto _iter_next_205e65bd8;
					};
				};
				jule::Ptr<_221425c2c_Data> _144621_r = _141017_right[_143613_i];;
				_2212360d1_processEndPartOfMultiAssign(_self_.ptr(), &(_143317_st), _140541_a, &(_143721_lexpr), &(_143821_l), &(_144621_r));
			}
			_iter_next_205e65bd8:;
			++it;
			_143613_i++;
			goto _iter_begin_205e65bd8;
		}
		_iter_end_205e65bd8:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_143317_st, &__jule_any_type47));;
}



inline void _2212365dc_checkAssignSt(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b3228_AssignSt> _145237_a) {
	{
		
		if (_21da2034b_IsPostfixOp(_145237_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_205e69bba:;
			{
				_2212350be_checkPostfix(_self_, _145237_a);
			}
		}
		else if (((_145237_a.get()._field_Left.len() == 1LL) && (!(_145237_a.get()._field_Declarative)))) {
			_case_begin_205e6a083:;
			{
				_221235aa3_checkSingleAssign(_self_, &(_145237_a));
			}
		}
		else {
			_case_begin_205e66436:;
			{
				_221236367_checkMultiAssign(_self_, &(_145237_a));
			}
		}
		_match_end_205e6636a:;
	};
}



inline jule::Ptr<_221224135_Scope> _221236994_checkCaseScope(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_221228997_Case>* _146335_c, jule::Ptr<_2211b4724_ScopeTree>* _146350_tree) {
	jule::Ptr<_22122ac63_scopeChecker> _146417_ssc = _22123ae1b_newChildChecker(_self_);;
	_146417_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_146335_c))));
	return _221230aae_checkChildSc(_self_, _146350_tree, &(_146417_ssc));;
}



inline jule::Ptr<_221228997_Case> _221236e8e_checkCase(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_221227e4c_Match> _146933_m, jule::I32 _146944_i, jule::Ptr<_2211baecd_Case> _146956_c, jule::Ptr<_221425c2c_Data> _146975_expr) {
	jule::Ptr<_221228997_Case> _147017_case = _146933_m.get()._field_Cases[_146944_i];;
	_147017_case.get()._field_Exprs=jule::Slice<jule::Ptr<_221425c2c_Data>>::alloc(0LL, _146956_c.get()._field_Exprs.len());
	jule::Bool _147217_constMatched = false;;
	jule::Ptr<_22142779a_Eval> _147317_eval = _2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0));;
	{
		auto expr = &(_146956_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205e6e494:;
		if (it != expr_end) {
			jule::Ptr<_2211a8cac_Expr> _147421_e = *it;
			{
				jule::Ptr<_221425c2c_Data> _147521_d = _221443530_evalExprKind(_147317_eval, _147421_e.get()._field_Kind);;
				if ((_147521_d == nullptr)) {
					goto _iter_next_205e6e494;
				};
				if (_146933_m.get()._field_TypeMatch) {
					_147017_case.get()._field_Exprs = jule::alloc_for_append(_147017_case.get()._field_Exprs,1);_147017_case.get()._field_Exprs.__push(_147521_d);;
					if ((_221222353_countMatchType(&(_146933_m), &(_147521_d.get()._field_Kind)) > 1LL)) {
						_22124d747_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_147521_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_146975_expr.get()._field_Kind.get()._field_Generic) {
						_147217_constMatched=(_147217_constMatched || _221453aa1_Equal(_146975_expr.get()._field_Kind, _147521_d.get()._field_Kind));
					} else {
						if ((_221456543_TypeEnum(_146975_expr.get()._field_Kind.ptr()) != nullptr)) {
							_221255e36_checkTypeCompatibility(_self_.get()._field_s, &(_146975_expr.get()._field_Kind), &(_147521_d.get()._field_Kind), &(_147421_e.get()._field_Token));
						} else {
							jule::Ptr<_2211ebeed_Trait> _149029_trt = _221457258_Trait(_146975_expr.get()._field_Kind.ptr());;
							if ((_149029_trt != nullptr)) {
								_221255e36_checkTypeCompatibility(_self_.get()._field_s, &(_146975_expr.get()._field_Kind), &(_147521_d.get()._field_Kind), &(_147421_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_205e6e494;
				} else if (_146933_m.get()._field_Comptime) {
					if ((!(_2214265e0_IsConst(_147521_d.ptr())))) {
						_22124d747_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_147217_constMatched=(_147217_constMatched || _21e6c71ab_ReadBool(_147521_d.get()._field_Constant.ptr()));
					};
				};
				if (_147521_d.get()._field_Decl) {
					_22124d747_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_22124da66_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_205e6e494;
				};
				_147017_case.get()._field_Exprs = jule::alloc_for_append(_147017_case.get()._field_Exprs,1);_147017_case.get()._field_Exprs.__push(_147521_d);;
				_2214115ec_assignTypeChecker _151321_checker = _2214115ec_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_146975_expr.get()._field_Kind, ._field_d=_147521_d, ._field_errorToken=_147421_e.get()._field_Token};;
				_221412774_check(&_151321_checker);
			}
			_iter_next_205e6e494:;
			++it;
			goto _iter_begin_205e6e494;
		}
		_iter_end_205e6e494:;
	};
	if (((!(_146933_m.get()._field_Comptime)) || _147217_constMatched)) {
		_147017_case.get()._field_Scope=_221236994_checkCaseScope(_self_, &(_147017_case), &(_146956_c.get()._field_Scope));
	};
	return _147017_case;;
}



inline void _221237357_checkCases(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211bb6a4_MatchCase>* _152735_m, jule::Ptr<_221227e4c_Match> _152754_rm, jule::Ptr<_221425c2c_Data> _152770_expr) {
	_152754_rm.get()._field_Cases=jule::Slice<jule::Ptr<_221228997_Case>>::alloc(0LL, (*(_152735_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_152735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205e78426:;
		if (it != expr_end) {
			jule::I32 _152913_i = it - expr->begin();
			{
				jule::Ptr<_221228997_Case> _153021_case = jule::new_ptr<_221228997_Case>(_221228997_Case{._field_Owner=_152754_rm, });;
				if ((_152913_i > 0LL)) {
					_152754_rm.get()._field_Cases[(_152913_i - 1LL)].get()._field_Next=_153021_case;
				};
				_152754_rm.get()._field_Cases = jule::alloc_for_append(_152754_rm.get()._field_Cases,1);_152754_rm.get()._field_Cases.__push(_153021_case);;
			}
			_iter_next_205e78426:;
			++it;
			_152913_i++;
			goto _iter_begin_205e78426;
		}
		_iter_end_205e78426:;
	};
	if (((_152754_rm.get()._field_Default != nullptr) && ((*(_152735_m)).get()._field_Cases.len() > 0LL))) {
		_152754_rm.get()._field_Cases[(_152754_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_152754_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_152735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205e7b8e1:;
		if (it != expr_end) {
			jule::I32 _154314_i = it - expr->begin();
			jule::Ptr<_2211baecd_Case> _154321_c = *it;
			{
				_221236e8e_checkCase(_self_, _152754_rm, _154314_i, _154321_c, _152770_expr);
			}
			_iter_next_205e7b8e1:;
			++it;
			_154314_i++;
			goto _iter_begin_205e7b8e1;
		}
		_iter_end_205e7b8e1:;
	};
}



inline jule::Ptr<_221228997_Case> _22123770e_checkDefault(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_221227e4c_Match> _154836_m, jule::Ptr<_2211b9e11_Else> _154851_d) {
	jule::Ptr<_221228997_Case> _154917_def = jule::new_ptr<_221228997_Case>(_221228997_Case{._field_Owner=_154836_m, });;
	_154917_def.get()._field_Scope=_221236994_checkCaseScope(_self_, &(_154917_def), &(_154851_d.get()._field_Scope));
	return _154917_def;;
}



inline void _221237a2d_checkComptimePanic(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_21da1aa0b_Token> _155638_callToken, jule::Ptr<_221224135_Scope>* _155658_s) {
	if (((*(_155658_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _156113_stmt = (*(_155658_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _156113_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_205e7ec24:;
			{
				jule::Ptr<_221425c2c_Data> _156417_d = _156113_stmt.cast_ptr<_221425c2c_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ _156417_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_205e80a7c:;
						{
							jule::Ptr<_2211d3aa6_BuiltinPanicCallExprModel> _156721_m = _156417_d.get()._field_Model.cast_ptr<_2211d3aa6_BuiltinPanicCallExprModel>(&__jule_any_type30);;
							{
								auto &_match_expr{ _156721_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_205e81a17:;
									{
										jule::Ptr<_21e6c53da_Const> _157025_c = _156721_m.get()._field_Expr.cast_ptr<_21e6c53da_Const>(&__jule_any_type19);;
										if (_21e6c97b8_IsStr(_157025_c.ptr())) {
											if ((_155638_callToken == nullptr)) {
												jule::Ptr<_22122ac63_scopeChecker> _157337_root = _22122dcee_getHardRoot(_self_);;
												_22124d747_pushErr(_self_.get()._field_s.ptr(), _157337_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_21e6c7420_ReadStr(_157025_c.ptr()), &__jule_any_type5)}));
											} else {
												_22124d747_pushErr(_self_.get()._field_s.ptr(), _155638_callToken, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_21e6c7420_ReadStr(_157025_c.ptr()), &__jule_any_type5)}));
											};
											_22122d34d_stop(_self_.ptr());
										};
									}
								}
								_match_end_205e81808:;
							};
						}
					}
					_match_end_205e80681:;
				};
			}
		}
		_match_end_205e7ebad:;
	};
}



inline void _221237d4c_processConstMatch(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_221227e4c_Match> _158541_tm, jule::Ptr<_2211bb6a4_MatchCase>* _158558_m) {
	{
		auto expr = &(_158541_tm.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205e80252:;
		if (it != expr_end) {
			jule::I32 _158614_i = it - expr->begin();
			jule::Ptr<_221228997_Case> _158621_c = *it;
			{
				if ((_158621_c.get()._field_Scope != nullptr)) {
					jule::Ptr<_21da1aa0b_Token> _158825_token = nullptr;;
					if ((!(_158541_tm.get()._field_TypeMatch))) {
						_158825_token=(*(_158558_m)).get()._field_Cases[_158614_i].get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
					};
					_221237a2d_checkComptimePanic(_self_, _158825_token, &(_158621_c.get()._field_Scope));
					_158541_tm.get()._field_Default=_158621_c;
					_158541_tm.get()._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_205e80252:;
			++it;
			_158614_i++;
			goto _iter_begin_205e80252;
		}
		_iter_end_205e80252:;
	};
	if (((*(_158558_m)).get()._field_Default != nullptr)) {
		_158541_tm.get()._field_Cases=nullptr;
		_158541_tm.get()._field_Default=_22123770e_checkDefault(_self_, _158541_tm, (*(_158558_m)).get()._field_Default);
		if ((_158541_tm.get()._field_Default != nullptr)) {
			jule::Ptr<_21da1aa0b_Token> _160225_token = nullptr;;
			if ((!(_158541_tm.get()._field_TypeMatch))) {
				_160225_token=(*(_158558_m)).get()._field_Default.get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
			};
			_221237a2d_checkComptimePanic(_self_, _160225_token, &(_158541_tm.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _2212380c2_checkTypeMatch(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211bb6a4_MatchCase>* _161139_m) {
	jule::Ptr<_221425c2c_Data> _161217_d = _221443b4b_eval(_2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0)), (*(_161139_m)).get()._field_Expr);;
	if ((_161217_d == nullptr)) {
		return;;
	};
	if (((!(_161217_d.get()._field_Kind.get()._field_Generic)) && (!(((((_221455a92_Prim(_161217_d.get()._field_Kind.ptr()) != nullptr) && _22145da67_IsAny(_221455a92_Prim(_161217_d.get()._field_Kind.ptr()).ptr())) || (_221457258_Trait(_161217_d.get()._field_Kind.ptr()) != nullptr)) || (_221456543_TypeEnum(_161217_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), (*(_161139_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_221227e4c_Match> _162317_tm = jule::new_ptr<_221227e4c_Match>(_221227e4c_Match{._field_Expr=_161217_d, ._field_TypeMatch=true, });;
	_162317_tm.get()._field_Comptime=_162317_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic;
	if (((!(_162317_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && ((*(_161139_m)).get()._field_Default != nullptr))) {
		_162317_tm.get()._field_Default=_22123770e_checkDefault(_self_, _162317_tm, (*(_161139_m)).get()._field_Default);
	};
	_221237357_checkCases(_self_, _161139_m, _162317_tm, _161217_d);
	if (_162317_tm.get()._field_Comptime) {
		_221237d4c_processConstMatch(_self_, _162317_tm, _161139_m);
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_162317_tm, &__jule_any_type48));;
}



inline void _221238347_checkCommonMatch(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211bb6a4_MatchCase>* _163841_m) {
	jule::Ptr<_221425c2c_Data> _163917_d = nullptr;;
	if (((*(_163841_m)).get()._field_Expr == nullptr)) {
		_163917_d=jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Constant=static__21e6c5d9c_NewBool(true)});
		_163917_d.get()._field_Model=jule::Any(_163917_d.get()._field_Constant, &__jule_any_type19);
	} else {
		_163917_d=_221444267_evalExpr(_2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0)), (*(_163841_m)).get()._field_Expr);
		if ((_163917_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_221227e4c_Match> _165317_mc = jule::new_ptr<_221227e4c_Match>(_221227e4c_Match{._field_Expr=_163917_d, ._field_Comptime=(((((*(_163841_m)).get()._field_Expr != nullptr) && _2214265e0_IsConst(_163917_d.ptr())) && _21e6c9554_IsBool(_163917_d.get()._field_Constant.ptr())) && _21e6c71ab_ReadBool(_163917_d.get()._field_Constant.ptr())), });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_165317_mc, &__jule_any_type48));;
	if (((*(_163841_m)).get()._field_Default != nullptr)) {
		_165317_mc.get()._field_Default=_22123770e_checkDefault(_self_, _165317_mc, (*(_163841_m)).get()._field_Default);
	};
	_221237357_checkCases(_self_, _163841_m, _165317_mc, _163917_d);
	if (_165317_mc.get()._field_Comptime) {
		_221237d4c_processConstMatch(_self_, _165317_mc, _163841_m);
	};
}



inline void _2212385bc_checkMatch(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211bb6a4_MatchCase> _167134_m) {
	if (_167134_m.get()._field_TypeMatch) {
		_2212380c2_checkTypeMatch(_self_, &(_167134_m));
		return;;
	};
	_221238347_checkCommonMatch(_self_, &(_167134_m));
}



inline void _221238842_checkFall(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b25ce_FallSt> _167929_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _22122d826_isDeferred(_self_))) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _167929_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_221228997_Case* _168717_case = ((_221228997_Case*)(_self_.get()._field_cse));;
	if (_168717_case->_field_Owner.get()._field_Comptime) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _167929_f.get()._field_Token, jule::Str("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if ((_168717_case->_field_Next == nullptr)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _167929_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_22124da66_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_22122904c_FallSt>(_22122904c_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_168717_case->_field_Next))}), &__jule_any_type49));;
}



inline jule::Ptr<_221226588_BreakSt> _221238b50_checkBreakWithLabel(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b922e_BreakSt> _170239_b) {
	jule::Ptr<_221226588_BreakSt> _170317_brk = _221238e5d_checkPlainBreak(_self_, _170239_b);;
	if ((_170317_brk == nullptr)) {
		return nullptr;;
	};
	_170317_brk.get()._field_It=0LLU;
	_170317_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_2212299cb_scopeLabel> _171317_label = _22122183b_findLabelParent(_170239_b.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
	if ((_171317_label == nullptr)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _170239_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_170239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_171317_label.get()._field_used=true;
	if (((_171317_label.get()._field_pos + 1LL) >= _171317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _170239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _172613_i = (_171317_label.get()._field_pos + 1LL);;
	if ((_172613_i >= _171317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _170239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _173021_st = _171317_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_172613_i];;
		{
			auto &_match_expr{ _173021_st };
			
			if (_match_expr.type == &__jule_any_type37) {
				_case_begin_205e9e639:;
				{
					_170317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_173021_st.cast_ptr<_221224e7c_InfIter>(&__jule_any_type37)));
				}
			}
			else if (_match_expr.type == &__jule_any_type41) {
				_case_begin_205ea11b8:;
				{
					_170317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_173021_st.cast_ptr<_221225cd5_RangeIter>(&__jule_any_type41)));
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_205ea122e:;
				{
					_170317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_173021_st.cast_ptr<_221225400_WhileIter>(&__jule_any_type39)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_205ea12a6:;
				{
					_170317_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_173021_st.cast_ptr<_221227e4c_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_205ea1042:;
				{
					_22124d747_pushErr(_self_.get()._field_s.ptr(), _170239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_205ea0edc:;
		};
	};
	if ((_170317_brk.get()._field_It != 0LLU)) {
		if ((!(_2212342bb_checkValidBreakLabel(_self_, _170317_brk.get()._field_It)))) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), _170239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_170317_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_2212342bb_checkValidBreakLabel(_self_, _170317_brk.get()._field_Mtch)))) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), _170239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _170317_brk;;
}



inline jule::Ptr<_221226588_BreakSt> _221238e5d_checkPlainBreak(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b922e_BreakSt> _176035_b) {
	if (_22122d826_isDeferred(_self_)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _176035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_22122ac63_scopeChecker> _176617_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_176617_scope.get()._field_it == 0LLU) && (_176617_scope.get()._field_cse == 0LLU)) && (_176617_scope.get()._field_parent != nullptr)) && (_176617_scope.get()._field_owner == nullptr))) {
			_case_begin_205ea7026:;
			{
				_176617_scope=_176617_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_176617_scope.get()._field_it != 0LLU)) {
			_case_begin_205ea709d:;
			{
				return jule::new_ptr<_221226588_BreakSt>(_221226588_BreakSt{._field_It=_176617_scope.get()._field_it, });;
			}
		}
		else if ((_176617_scope.get()._field_cse != 0LLU)) {
			_case_begin_205ea7125:;
			{
				return jule::new_ptr<_221226588_BreakSt>(_221226588_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_221228997_Case*)(_176617_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_205ea6e5a:;
	};
	_22124d747_pushErr(_self_.get()._field_s.ptr(), _176035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _2212391d3_checkBreak(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b922e_BreakSt> _178230_b) {
	if ((_178230_b.get()._field_Label != nullptr)) {
		jule::Ptr<_221226588_BreakSt> _178421_brk = _221238b50_checkBreakWithLabel(_self_, _178230_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_178421_brk, &__jule_any_type50));;
		return;;
	};
	jule::Ptr<_221226588_BreakSt> _178917_brk = _221238e5d_checkPlainBreak(_self_, _178230_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_178917_brk, &__jule_any_type50));;
}



inline void _221239458_checkRet(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b75a1_RetSt> _179332_r) {
	if (_22122d826_isDeferred(_self_)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _179332_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2212293c1_RetSt> _179817_rt = jule::new_ptr<_2212293c1_RetSt>(_2212293c1_RetSt{._field_Func=_22122da8a_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_179817_rt, &__jule_any_type51));;
	jule::Ptr<_22141e484_retTypeChecker> _180317_rtc = jule::new_ptr<_22141e484_retTypeChecker>(_22141e484_retTypeChecker{._field_sc=_self_, ._field_f=_179817_rt.get()._field_Func, ._field_errorToken=_179332_r.get()._field_Token, });;
	jule::Bool _180813_ok = _221420188_check(_180317_rtc.ptr(), &(_179332_r.get()._field_Expr));;
	if ((!(_180813_ok))) {
		return;;
	};
	if ((_179332_r.get()._field_Expr != nullptr)) {
		_179817_rt.get()._field_Expr=_180317_rtc.get()._field_model;
	};
}



inline void _2212396cd_checkUseExpr(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211a964d_UseExpr> _181832_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _181832_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_22122d826_isDeferred(_self_)) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _181832_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _181832_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _221239953_checkNode(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Any* _183434_node) {
	{
		auto &_match_expr{ (*(_183434_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_205eb396c:;
			{
				_221231142_checkAnonScope(_self_, (*(_183434_node)).cast_ptr<_2211b4724_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_205eb4044:;
			{
				_22122ed55_checkVarDecl(_self_, (*(_183434_node)).cast_ptr<_2211b71e9_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_205eb3d68:;
			{
				_2212300ca_checkTypeAliasDecl(_self_, (*(_183434_node)).cast_ptr<_2211baa5a_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_205eb4187:;
			{
				_2212316d6_checkExpr(_self_, (*(_183434_node)).cast_ptr<_2211a8cac_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_205eb41ed:;
			{
				_221232077_checkConditional(_self_, (*(_183434_node)).cast_ptr<_2211ba384_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_205eb431e:;
			{
				_221233ba0_checkIter(_self_, (*(_183434_node)).cast_ptr<_2211b7c11_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_205eb4385:;
			{
				_22123484e_checkCont(_self_, (*(_183434_node)).cast_ptr<_2211b95d6_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_205eb43eb:;
			{
				_221234ac4_checkLabel(_self_, (*(_183434_node)).cast_ptr<_2211b1e3b_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_205eb4462:;
			{
				_221234d49_pushGoto(_self_, (*(_183434_node)).cast_ptr<_2211b22e3_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_205eb44c8:;
			{
				_2212365dc_checkAssignSt(_self_, (*(_183434_node)).cast_ptr<_2211b3228_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_205eb453e:;
			{
				_2212385bc_checkMatch(_self_, (*(_183434_node)).cast_ptr<_2211bb6a4_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_205eb45a5:;
			{
				_221238842_checkFall(_self_, (*(_183434_node)).cast_ptr<_2211b25ce_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_205eb461b:;
			{
				_2212391d3_checkBreak(_self_, (*(_183434_node)).cast_ptr<_2211b922e_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_205eb4682:;
			{
				_221239458_checkRet(_self_, (*(_183434_node)).cast_ptr<_2211b75a1_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_205eb46e8:;
			{
				_2212396cd_checkUseExpr(_self_, (*(_183434_node)).cast_ptr<_2211a964d_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_205eb3ae3:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_205eb3a16:;
	};
}



inline void _221239b2e_checkResult(jule::Ptr<_22122ac63_scopeChecker> _self_) {
	_2211b4119_Stmt _187217_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _187217_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_205ebc080:;
			{
				jule::Ptr<_2211a964d_UseExpr> _187521_ue = _187217_stmt._field_Data.cast_ptr<_2211a964d_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_221425c2c_Data> _187621_d = _221444267_evalExpr(_2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0)), _187521_ue.get()._field_Expr);;
				if ((_187621_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_187621_d, &__jule_any_type24));;
				jule::Ptr<_22141e484_retTypeChecker> _188121_rtc = jule::new_ptr<_22141e484_retTypeChecker>(_22141e484_retTypeChecker{._field_sc=_self_, ._field_types=_2211ddaa0_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_187521_ue.get()._field_Expr.get()._field_Token, });;
				_221420188_check(_188121_rtc.ptr(), &(_187521_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_205ebb843:;
			{
				jule::Ptr<_2211a8cac_Expr> _188821_expr = _187217_stmt._field_Data.cast_ptr<_2211a8cac_Expr>(&__jule_any_type53);;
				jule::Ptr<_221425c2c_Data> _188921_d = _221444267_evalExpr(_2212554da_eval(_self_.get()._field_s, jule::Trait<_22147198c_Lookup>(_self_, 0)), _188821_expr);;
				if ((_188921_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _188921_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_205ec199c:;
						{
							jule::Ptr<_2211d5e3d_BuiltinErrorCallExprModel> _189525_m = _188921_d.get()._field_Model.cast_ptr<_2211d5e3d_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_221231461_processErrorCall(_self_, &(_189525_m), _188821_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_188921_d, &__jule_any_type24));;
						}
					}
					else {
						_case_begin_205ec1590:;
						{
							return;;
						}
					}
					_match_end_205ec1381:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_205ebb8a9:;
			{
				_221239953_checkNode(_self_, &(_187217_stmt._field_Data));
			}
		}
		else {
			_case_begin_205ebb7cc:;
			{
				_221239953_checkNode(_self_, &(_187217_stmt._field_Data));
				return;;
			}
		}
		_match_end_205ebb656:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _221239d0a_checkTree(jule::Ptr<_22122ac63_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I32 _191717_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_191717_n)--;
	};
	for (; (_self_.get()._field_i < _191717_n); (_self_.get()._field_i)++) {
		{
			_2211b4119_Stmt _192521_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_221239953_checkNode(_self_, &(_192521_stmt._field_Data));
			if (_22122d5b2_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_205ec47b3:;
	}
	_iter_end_205ec47b3:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_221239b2e_checkResult(_self_);
	};
}



inline void _22123a129_checkGoto(_22122ac63_scopeChecker* _self_, jule::Ptr<_221229e4e_scopeGoto>* _193633_gt, jule::Ptr<_2212299cb_scopeLabel>* _193654_label) {
	jule::Ptr<_22122ac63_scopeChecker> _193717_gtsc = (*(_193633_gt)).get()._field_scope;;
	while (((_193717_gtsc.get()._field_childIndex - 1LL) > (*(_193654_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_193717_gtsc=_193717_gtsc.get()._field_parent;
		}
	_iter_next_205ec73a9:;
	}
	_iter_end_205ec73a9:;;
	jule::I32 _194217_n = 0LL;;
	if ((_193717_gtsc.get()._field_scope == (*(_193654_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_193633_gt)).get()._field_pos > (*(_193654_label)).get()._field_pos)) {
			return;;
		};
		_194217_n=(*(_193633_gt)).get()._field_pos;
	};
	jule::I32 _195517_i = ((*(_193654_label)).get()._field_pos - 1LL);;
	if ((_194217_n == 0LL)) {
		{
			auto expr = &((*(_193654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_205ec98d9:;
			if (it != expr_end) {
				jule::I32 _195817_j = it - expr->begin();
				jule::Any _195820_stmt = *it;
				{
					if (_221222012_stmtIsGotoScope(&(_195820_stmt), &(_193717_gtsc.get()._field_scope))) {
						_194217_n=_195817_j;
						goto _iter_end_205ec98d9;
					};
				}
				_iter_next_205ec98d9:;
				++it;
				_195817_j++;
				goto _iter_begin_205ec98d9;
			}
			_iter_end_205ec98d9:;
		};
	};
	for (; (_195517_i >= _194217_n); (_195517_i)--) {
		{
			jule::Any _196821_stmt = (*(_193654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_195517_i];;
			if (_221223ba1_stmtIsDef(&(_196821_stmt))) {
				_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_193633_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_193633_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_205eca7ca:;
	}
	_iter_end_205eca7ca:;;
}



inline void _22123a305_checkGotos(_22122ac63_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205eca313:;
		if (it != expr_end) {
			jule::Ptr<_221229e4e_scopeGoto> _197721_gt = *it;
			{
				jule::Ptr<_2212299cb_scopeLabel> _197821_label = _22122e728_findLabelAll(_self_, _197721_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_197821_label == nullptr)) {
					_22124d747_pushErr((*(_self_))._field_s.ptr(), _197721_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_197721_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_205eca313;
				};
				_197821_label.get()._field_used=true;
				_22123a129_checkGoto(_self_, &(_197721_gt), &(_197821_label));
			}
			_iter_next_205eca313:;
			++it;
			goto _iter_begin_205eca313;
		}
		_iter_end_205eca313:;
	};
}



inline void _22123a4d1_checkLabels(_22122ac63_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205ecc634:;
		if (it != expr_end) {
			jule::Ptr<_2212299cb_scopeLabel> _199016_l = *it;
			{
				if ((!(_199016_l.get()._field_used))) {
					_22124d747_pushErr((*(_self_))._field_s.ptr(), _199016_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_199016_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_205ecc634:;
			++it;
			goto _iter_begin_205ecc634;
		}
		_iter_end_205ecc634:;
	};
}



inline void _22123a6ac_checkVars(_22122ac63_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205eceb75:;
		if (it != expr_end) {
			jule::Ptr<_22126b17c_Var> _199816_v = *it;
			{
				if (((((!(_199816_v.get()._field_Used)) && (!(_199816_v.get()._field_Constant))) && (!(_21da1d2a0_IsIgnoreIdent(_199816_v.get()._field_Ident)))) && (!(_21da1d547_IsAnonIdent(_199816_v.get()._field_Ident))))) {
					_22124d747_pushErr((*(_self_))._field_s.ptr(), _199816_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_199816_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_205eceb75:;
			++it;
			goto _iter_begin_205eceb75;
		}
		_iter_end_205eceb75:;
	};
}



inline void _22123a888_checkAliases(_22122ac63_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205ed289d:;
		if (it != expr_end) {
			jule::Ptr<_22145264e_TypeAlias> _200616_a = *it;
			{
				if ((((!(_200616_a.get()._field_Used)) && (!(_21da1d2a0_IsIgnoreIdent(_200616_a.get()._field_Ident)))) && (!(_21da1d547_IsAnonIdent(_200616_a.get()._field_Ident))))) {
					_22124d747_pushErr((*(_self_))._field_s.ptr(), _200616_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_200616_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_205ed289d:;
			++it;
			goto _iter_begin_205ed289d;
		}
		_iter_end_205ed289d:;
	};
}



inline void _22123aba7_check(jule::Ptr<_22122ac63_scopeChecker> _self_, jule::Ptr<_2211b4724_ScopeTree>* _201430_tree, jule::Ptr<_221224135_Scope>* _201453_s) {
	(*(_201453_s)).get()._field_Deferred=(*(_201430_tree)).get()._field_Deferred;
	(*(_201453_s)).get()._field_Unsafety=(*(_201430_tree)).get()._field_Unsafety;
	jule::I32 _201813_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_201430_tree));
	_self_.get()._field_scope=(*(_201453_s));
	_221239d0a_checkTree(_self_);
	if ((_201813_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_22123a6ac_checkVars(_self_.ptr());
		_22123a888_checkAliases(_self_.ptr());
		if (_22122d172_isRoot(_self_.ptr())) {
			_22123a305_checkGotos(_self_.ptr());
			_22123a4d1_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_22122ac63_scopeChecker> _22123ae1b_newChildChecker(jule::Ptr<_22122ac63_scopeChecker> _self_) {
	jule::Ptr<_22122ac63_scopeChecker> _203817_base = _221221165_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_203817_base.get()._field_parent=_self_;
	_203817_base.get()._field_labels=_self_.get()._field_labels;
	_203817_base.get()._field_gotos=_self_.get()._field_gotos;
	_203817_base.get()._field_childIndex=static_cast<jule::I32>((_self_.get()._field_childIndex + 1LL));
	return _203817_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _22122ac63_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _22123be0b_checkCdef(_22123b9bb_directiveChecker* _self_, jule::Ptr<_221171307_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_205ed85da:;
			{
				if ((*(_self_))._field_o.cast_ptr<_2211d9ccc_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					goto _match_end_205ed881b;
				};
				goto _case_begin_205ed8871;
			}
		}
		else {
			_case_begin_205ed8871:;
			{
				_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_205ed881b:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _22123c181_checkTypedef(_22123b9bb_directiveChecker* _self_, jule::Ptr<_221171307_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_205edab70:;
			{
				if ((*(_self_))._field_o.cast_ptr<_2211c48cc_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					goto _match_end_205edad90;
				};
				goto _case_begin_205edade5;
			}
		}
		else {
			_case_begin_205edade5:;
			{
				_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_205edad90:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _22123c406_checkDerive(_22123b9bb_directiveChecker* _self_, jule::Ptr<_221171307_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_205edd227:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_2211c48cc_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					goto _match_end_205edd447;
				};
				goto _case_begin_205edd49c;
			}
		}
		else {
			_case_begin_205edd49c:;
			{
				_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_205edd447:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_22124da66_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type5)}));
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_205ee1bed:;
		}
		else {
			_case_begin_205eddd3d:;
			{
				_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_205ee1835:;
	};
}



inline void _22123c67b_checkNamespace(_22123b9bb_directiveChecker* _self_, jule::Ptr<_221171307_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_205ee3161:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_2211c48cc_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_205ee31c7:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_2211d9ccc_Fn>(&__jule_any_type65).get()._field_CppLinked))) {
					_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_205ee323d:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_22126b17c_Var>(&__jule_any_type8).get()._field_CppLinked))) {
					_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_205ee3084:;
			{
				_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_205ee302e:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_21da1aa0b_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U32>(6LLU))) {
		_22124d747_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_22124d747_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_205eeb1d0:;
			{
				if ((_22144c407_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_221171307_Directive> _11625_typedef = jule::new_ptr<_221171307_Directive>(_221171307_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*(_self_))._field_d))=jule::append((*((*(_self_))._field_d)),jule::Slice<jule::Ptr<_221171307_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_205eeac7e:;
	};
}



inline void _22123c901_checkDeprecated(_22123b9bb_directiveChecker* _self_, jule::Ptr<_221171307_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_205eeb378:;
			{
				if ((*(_self_))._field_o.cast_ptr<_2211c48cc_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_205eed435:;
			{
				if ((*(_self_))._field_o.cast_ptr<_2211d9ccc_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_205eed49b:;
			{
				if ((*(_self_))._field_o.cast_ptr<_22126b17c_Var>(&__jule_any_type8).get()._field_CppLinked) {
					_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_205eecce7:;
			{
				_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_205eecb4e:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_21da1aa0b_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U32>(6LLU))) {
		_22124d747_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_22124d747_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _22123cb76_checkTest(_22123b9bb_directiveChecker* _self_, jule::Ptr<_221171307_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_20600577d:;
			{
				jule::Ptr<_2211d9ccc_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_2211d9ccc_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_2211da97b_IsInit(_16717_f.ptr())))) && (!(_2211da717_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_206006086;
				};
				if (_2211da4a3_IsMethod(_16717_f.ptr())) {
					_22124d747_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_206006086;
				};
				goto _case_begin_2060061c9;
			}
		}
		else {
			_case_begin_2060061c9:;
			{
				_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_206006086:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _22123cdeb_checkDirective(_22123b9bb_directiveChecker* _self_, jule::Ptr<_221171307_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_206009cc1:;
			{
				_22123be0b_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_206009d37:;
			{
				_22123c181_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_206009d9d:;
			{
				_22123c406_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_206009e14:;
			{
				_22123c67b_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_20600a94d:;
			{
				_22123c901_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_20600a9b4:;
			{
				_22123cb76_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_20600aa2a:;
			{
				_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_206009c5a:;
			{
				_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_206009c05:;
	};
}



inline void _22123d0c7_check(_22123b9bb_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20600cc08:;
		if (it != expr_end) {
			jule::Ptr<_221171307_Directive> _20821_d = *it;
			{
				_22123cdeb_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_20600cc08:;
			++it;
			goto _iter_begin_20600cc08;
		}
		_iter_end_20600cc08:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22123b9bb_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_221242a9e_ImportInfo> _2212430aa_SelectPackage(_221242a9e_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_22126b17c_Var> _221243462_FindVar(_221242a9e_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_221244d48_isLookupable(_self_, _18926_ident)))) {
		return nullptr;;
	};
	return _2212402b6_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), _18926_ident, false);;
}



inline jule::Ptr<_22145264e_TypeAlias> _221243819_FindTypeAlias(_221242a9e_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_221244d48_isLookupable(_self_, _20132_ident)))) {
		return nullptr;;
	};
	return _2212406e5_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), _20132_ident, false);;
}



inline jule::Ptr<_2211c48cc_Struct> _221243bc1_FindStruct(_221242a9e_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_221244d48_isLookupable(_self_, _21329_ident)))) {
		return nullptr;;
	};
	return _221240ad0_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), _21329_ident, false);;
}



inline jule::Ptr<_2211d9ccc_Fn> _221244078_FindFn(_221242a9e_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_221244d48_isLookupable(_self_, _22525_ident)))) {
		return nullptr;;
	};
	return _221241042_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), _22525_ident, false);;
}



inline jule::Ptr<_2211ebeed_Trait> _221244386_FindTrait(_221242a9e_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_221244d48_isLookupable(_self_, _23628_ident)))) {
		return nullptr;;
	};
	return _221241350_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), _23628_ident);;
}



inline jule::Ptr<_2211ee781_Enum> _221244694_FindEnum(_221242a9e_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_221244d48_isLookupable(_self_, _24727_ident)))) {
		return nullptr;;
	};
	return _221241691_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _24727_ident);;
}



inline jule::Ptr<_221200d7b_TypeEnum> _2212449a2_FindTypeEnum(_221242a9e_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_221244d48_isLookupable(_self_, _25831_ident)))) {
		return nullptr;;
	};
	return _2212419d2_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _25831_ident);;
}



inline jule::Bool _221244d48_isLookupable(_221242a9e_ImportInfo* _self_, jule::Str _26727_ident) {
	if ((*(_self_))._field_CppLinked) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _221245156_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_221245156_existIdent(_self_, _26727_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _221245156_existIdent(_221242a9e_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206022c51:;
		if (it != expr_end) {
			jule::Ptr<_21da1aa0b_Token> *_28816_sident = it;
			{
				if (((*(_28816_sident)).get()._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_206022c51:;
			++it;
			goto _iter_begin_206022c51;
		}
		_iter_end_206022c51:;
	};
	return false;;
}



inline jule::Bool _2212453dc_isAccessibleViaSelection(_221242a9e_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _221245156_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _221242a9e_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_221242a9e_ImportInfo> _221245ba1_SelectPackage(_2212456d9_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_22126b17c_Var> _221246058_FindVar(_2212456d9_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_cpp_linked) {
	return _2212402b6_findVarInPackage(&((*(_self_))._field_Files), _31426_ident, _31438_cpp_linked);;
}



inline jule::Ptr<_22145264e_TypeAlias> _221246410_FindTypeAlias(_2212456d9_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_cpp_linked) {
	return _2212406e5_findTypeAliasInPackage(&((*(_self_))._field_Files), _32032_ident, _32044_cpp_linked);;
}



inline jule::Ptr<_2211c48cc_Struct> _2212467b7_FindStruct(_2212456d9_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_cpp_linked) {
	return _221240ad0_findStructInPackage(&((*(_self_))._field_Files), _32629_ident, _32641_cpp_linked);;
}



inline jule::Ptr<_2211d9ccc_Fn> _221246b6e_FindFn(_2212456d9_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_cpp_linked) {
	return _221241042_findFnInPackage(&((*(_self_))._field_Files), _33225_ident, _33237_cpp_linked);;
}



inline jule::Ptr<_2211ebeed_Trait> _221246e7c_FindTrait(_2212456d9_Package* _self_, jule::Str _33828_ident) {
	return _221241350_findTraitInPackage(&((*(_self_))._field_Files), _33828_ident);;
}



inline jule::Ptr<_2211ee781_Enum> _22124728a_FindEnum(_2212456d9_Package* _self_, jule::Str _34427_ident) {
	return _221241691_findEnumInPackage(&((*(_self_))._field_Files), _34427_ident);;
}



inline jule::Ptr<_221200d7b_TypeEnum> _221247598_FindTypeEnum(_2212456d9_Package* _self_, jule::Str _35031_ident) {
	return _2212419d2_findTypeEnumInPackage(&((*(_self_))._field_Files), _35031_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _2212456d9_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_221211c7c_comptimeTypeInfo> _22124a7dd_pushComptimeTypeInfo(_22124a359_commonSemaMeta* _self_, jule::Ptr<_221453397_TypeKind>* _21344_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060491d9:;
		if (it != expr_end) {
			jule::Ptr<_221211c7c_comptimeTypeInfo> _21421_t2 = *it;
			{
				if (((_21421_t2.get()._field_base.get()._field_CppIdent == (*(_21344_t)).get()._field_CppIdent) && _221453aa1_Equal(_21421_t2.get()._field_base, (*(_21344_t))))) {
					return _21421_t2;;
				};
			}
			_iter_next_2060491d9:;
			++it;
			goto _iter_begin_2060491d9;
		}
		_iter_end_2060491d9:;
	};
	jule::Ptr<_221211c7c_comptimeTypeInfo> _21917_t1 = jule::new_ptr<_221211c7c_comptimeTypeInfo>(_221211c7c_comptimeTypeInfo{._field_base=(*(_21344_t))});;
	(*(_self_))._field_comptimeTypeInfos = jule::alloc_for_append((*(_self_))._field_comptimeTypeInfos,1);(*(_self_))._field_comptimeTypeInfos.__push(_21917_t1);;
	return _21917_t1;;
}







std::ostream &operator<<(std::ostream &_Stream, _22124a359_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_221242a9e_ImportInfo> _22124b2e4_SelectPackage(_22124ad71_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)> _24232_selector) {
	return _22142172d_SelectPackage((*(_self_))._field_file.ptr(), _24232_selector);;
}



inline jule::Ptr<_22126b17c_Var> _22124b69b_FindVar(_22124ad71_Sema* _self_, jule::Str _25226_ident, jule::Bool _25238_cpp_linked) {
	jule::Ptr<_22126b17c_Var> _25417_v = _2212402b6_findVarInPackage(&((*(_self_))._field_files), _25226_ident, _25238_cpp_linked);;
	if ((_25417_v != nullptr)) {
		return _25417_v;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20604c253:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _26021_imp = *it;
			{
				if ((!(_221248ed4_impIsLookupable(&(_26021_imp), _25226_ident)))) {
					goto _iter_next_20604c253;
				};
				_25417_v=_221243462_FindVar(_26021_imp.ptr(), _25226_ident, _25238_cpp_linked);
				if (((_25417_v != nullptr) && _22124de1d_isAccessibleDefine(_self_, _25417_v.get()._field_Public, _25417_v.get()._field_Token))) {
					return _25417_v;;
				};
			}
			_iter_next_20604c253:;
			++it;
			goto _iter_begin_20604c253;
		}
		_iter_end_20604c253:;
	};
	return nullptr;;
}



inline jule::Ptr<_22145264e_TypeAlias> _22124ba53_FindTypeAlias(_22124ad71_Sema* _self_, jule::Str _27932_ident, jule::Bool _27944_cpp_linked) {
	jule::Ptr<_22145264e_TypeAlias> _28117_ta = _2212406e5_findTypeAliasInPackage(&((*(_self_))._field_files), _27932_ident, _27944_cpp_linked);;
	if ((_28117_ta != nullptr)) {
		return _28117_ta;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20604e9d6:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _28721_imp = *it;
			{
				if ((!(_221248ed4_impIsLookupable(&(_28721_imp), _27932_ident)))) {
					goto _iter_next_20604e9d6;
				};
				_28117_ta=_221243819_FindTypeAlias(_28721_imp.ptr(), _27932_ident, _27944_cpp_linked);
				if (((_28117_ta != nullptr) && _22124de1d_isAccessibleDefine(_self_, _28117_ta.get()._field_Public, _28117_ta.get()._field_Token))) {
					return _28117_ta;;
				};
			}
			_iter_next_20604e9d6:;
			++it;
			goto _iter_begin_20604e9d6;
		}
		_iter_end_20604e9d6:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211c48cc_Struct> _22124be0a_FindStruct(_22124ad71_Sema* _self_, jule::Str _30629_ident, jule::Bool _30641_cppLinked) {
	jule::Ptr<_2211c48cc_Struct> _30817_s = _221240ad0_findStructInPackage(&((*(_self_))._field_files), _30629_ident, _30641_cppLinked);;
	if ((_30817_s != nullptr)) {
		return _30817_s;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206052269:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _31321_imp = *it;
			{
				if ((!(_221248ed4_impIsLookupable(&(_31321_imp), _30629_ident)))) {
					goto _iter_next_206052269;
				};
				_30817_s=_221243bc1_FindStruct(_31321_imp.ptr(), _30629_ident, _30641_cppLinked);
				if (((_30817_s != nullptr) && _22124de1d_isAccessibleDefine(_self_, _30817_s.get()._field_Public, _30817_s.get()._field_Token))) {
					return _30817_s;;
				};
			}
			_iter_next_206052269:;
			++it;
			goto _iter_begin_206052269;
		}
		_iter_end_206052269:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211d9ccc_Fn> _22124c2b2_FindFn(_22124ad71_Sema* _self_, jule::Str _33125_ident, jule::Bool _33137_cpp_linked) {
	jule::Ptr<_2211d9ccc_Fn> _33317_f = _221241042_findFnInPackage(&((*(_self_))._field_files), _33125_ident, _33137_cpp_linked);;
	if ((_33317_f != nullptr)) {
		return _33317_f;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060549ec:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _33921_imp = *it;
			{
				if ((!(_221248ed4_impIsLookupable(&(_33921_imp), _33125_ident)))) {
					goto _iter_next_2060549ec;
				};
				_33317_f=_221244078_FindFn(_33921_imp.ptr(), _33125_ident, _33137_cpp_linked);
				if (((_33317_f != nullptr) && _22124de1d_isAccessibleDefine(_self_, _33317_f.get()._field_Public, _33317_f.get()._field_Token))) {
					return _33317_f;;
				};
			}
			_iter_next_2060549ec:;
			++it;
			goto _iter_begin_2060549ec;
		}
		_iter_end_2060549ec:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211ebeed_Trait> _22124c5c0_FindTrait(_22124ad71_Sema* _self_, jule::Str _35828_ident) {
	jule::Ptr<_2211ebeed_Trait> _36017_t = _221241350_findTraitInPackage(&((*(_self_))._field_files), _35828_ident);;
	if ((_36017_t != nullptr)) {
		return _36017_t;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060573e5:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _36621_imp = *it;
			{
				if ((!(_221248ed4_impIsLookupable(&(_36621_imp), _35828_ident)))) {
					goto _iter_next_2060573e5;
				};
				_36017_t=_221244386_FindTrait(_36621_imp.ptr(), _35828_ident);
				if (((_36017_t != nullptr) && _22124de1d_isAccessibleDefine(_self_, _36017_t.get()._field_Public, _36017_t.get()._field_Token))) {
					return _36017_t;;
				};
			}
			_iter_next_2060573e5:;
			++it;
			goto _iter_begin_2060573e5;
		}
		_iter_end_2060573e5:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211ee781_Enum> _22124c8cd_FindEnum(_22124ad71_Sema* _self_, jule::Str _38527_ident) {
	jule::Ptr<_2211ee781_Enum> _38717_e = _221241691_findEnumInPackage(&((*(_self_))._field_files), _38527_ident);;
	if ((_38717_e != nullptr)) {
		return _38717_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206059925:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _39321_imp = *it;
			{
				if ((!(_221248ed4_impIsLookupable(&(_39321_imp), _38527_ident)))) {
					goto _iter_next_206059925;
				};
				_38717_e=_221244694_FindEnum(_39321_imp.ptr(), _38527_ident);
				if (((_38717_e != nullptr) && _22124de1d_isAccessibleDefine(_self_, _38717_e.get()._field_Public, _38717_e.get()._field_Token))) {
					return _38717_e;;
				};
			}
			_iter_next_206059925:;
			++it;
			goto _iter_begin_206059925;
		}
		_iter_end_206059925:;
	};
	return nullptr;;
}



inline jule::Ptr<_221200d7b_TypeEnum> _22124cbdb_FindTypeEnum(_22124ad71_Sema* _self_, jule::Str _41231_ident) {
	jule::Ptr<_221200d7b_TypeEnum> _41417_e = _2212419d2_findTypeEnumInPackage(&((*(_self_))._field_files), _41231_ident);;
	if ((_41417_e != nullptr)) {
		return _41417_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20605be55:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _42021_imp = *it;
			{
				if ((!(_221248ed4_impIsLookupable(&(_42021_imp), _41231_ident)))) {
					goto _iter_next_20605be55;
				};
				_41417_e=_2212449a2_FindTypeEnum(_42021_imp.ptr(), _41231_ident);
				if (((_41417_e != nullptr) && _22124de1d_isAccessibleDefine(_self_, _41417_e.get()._field_Public, _41417_e.get()._field_Token))) {
					return _41417_e;;
				};
			}
			_iter_next_20605be55:;
			++it;
			goto _iter_begin_20605be55;
		}
		_iter_end_20605be55:;
	};
	return nullptr;;
}



inline jule::Bool _22124d109_isFlag(_22124ad71_Sema* _self_, jule::I32 _43621_flags) {
	return (((*(_self_))._field_flags & _43621_flags) == _43621_flags);;
}



inline void _22124d37e_setCurrentFile(_22124ad71_Sema* _self_, jule::Ptr<_221421222_SymbolTable> _43837_f) {
	(*(_self_))._field_file=_43837_f;
}



inline void _22124d747_pushErr(_22124ad71_Sema* _self_, jule::Ptr<_21da1aa0b_Token> _44026_token, jule::Str _44041_fmt, jule::Slice<jule::Any> _44054_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_221248b93_compilerErr(&(_44026_token), true, _44041_fmt, _44054_args));;
}



inline void _22124da66_pushSuggestion(_22124ad71_Sema* _self_, jule::Str _44533_fmt, jule::Slice<jule::Any> _44546_args) {
	{
		_22124a128_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _44533_fmt, _44546_args);
	};
}



inline jule::Bool _22124de1d_isAccessibleDefine(_22124ad71_Sema* _self_, jule::Bool _45033_public, jule::Ptr<_21da1aa0b_Token> _45047_token) {
	return ((_45033_public || (_45047_token.get()._field_File == nullptr)) || (_21da2178c_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _21da2178c_Dir(_45047_token.get()._field_File.ptr())));;
}



inline jule::Bool _22124e36e_isDuplicatedIdent(_22124ad71_Sema* _self_, jule::Uintptr _45732_itself, jule::Str _45749_ident, jule::Bool _45761_cpp_linked) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206063203:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> *_45816_f = it;
			{
				if (_221424401_isDuplicatedIdent((*(_45816_f)).ptr(), _45732_itself, _45749_ident, _45761_cpp_linked)) {
					return true;;
				};
				{
					auto expr = &((*(_45816_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20606405b:;
					if (it != expr_end) {
						jule::Ptr<_221242a9e_ImportInfo> *_46320_imp = it;
						{
							{
								auto expr = &((*(_46320_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_206064831:;
								if (it != expr_end) {
									jule::Ptr<_21da1aa0b_Token> *_46424_selected = it;
									{
										if (((*(_46424_selected)).get()._field_Kind == _45749_ident)) {
											return true;;
										};
									}
									_iter_next_206064831:;
									++it;
									goto _iter_begin_206064831;
								}
								_iter_end_206064831:;
							};
						}
						_iter_next_20606405b:;
						++it;
						goto _iter_begin_20606405b;
					}
					_iter_end_20606405b:;
				};
			}
			_iter_next_206063203:;
			++it;
			goto _iter_begin_206063203;
		}
		_iter_end_206063203:;
	};
	return false;;
}



inline void _22124e68d_checkDirectives(jule::Ptr<_22124ad71_Sema> _self_, jule::Slice<jule::Ptr<_221171307_Directive>>* _47440_d, jule::Any _47466_o) {
	_22123b9bb_directiveChecker _47517_dc = _22123b9bb_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_221171307_Directive>>>)((&((*(_47440_d)))))), ._field_o=_47466_o};;
	_22123d0c7_check(&_47517_dc);
}



inline jule::Bool _22124eade_checkGenericQuantity(_22124ad71_Sema* _self_, jule::I32 _48339_required, jule::I32 _48354_given, jule::Ptr<_21da1aa0b_Token> _48366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_48339_required == 0LL) && (_48354_given > 0LL))) {
			_case_begin_20606745a:;
			{
				_22124d747_pushErr(_self_, _48366_token, jule::Str("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_48339_required > 0LL) && (_48354_given == 0LL))) {
			_case_begin_206066c73:;
			{
				_22124d747_pushErr(_self_, _48366_token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required < _48354_given)) {
			_case_begin_206066cd9:;
			{
				_22124d747_pushErr(_self_, _48366_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required > _48354_given)) {
			_case_begin_206066d61:;
			{
				_22124d747_pushErr(_self_, _48366_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_206066c0c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_206066b41:;
	};
}



inline jule::Bool _22124eeb8_isDuplicatedImportSelection(_22124ad71_Sema* _self_, jule::Uintptr _50242_itself, jule::Str _50259_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206069da8:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> *_50316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_50316_imp))) == _50242_itself)) {
					goto _iter_end_206069da8;
				};
				if (_221245156_existIdent((*(_50316_imp)).ptr(), _50259_ident)) {
					return true;;
				};
			}
			_iter_next_206069da8:;
			++it;
			goto _iter_begin_206069da8;
		}
		_iter_end_206069da8:;
	};
	return false;;
}



inline jule::Any _221250381_getImportDef(_22124ad71_Sema* _self_, jule::Str _51527_ident, jule::Ptr<_221242a9e_ImportInfo>* _51544_imp) {
	if ((_221518dec_findPackageBuiltinDef((*(_51544_imp)).get()._field_LinkPath, _51527_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_51544_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20606b360:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _51921_f = *it;
			{
				;
				jule::Any _52221_def = _221423ea0_defByIdent(_51921_f.ptr(), _51527_ident, false);;
				if ((_52221_def != nullptr)) {
					return _52221_def;;
				};
			}
			_iter_next_20606b360:;
			++it;
			goto _iter_begin_20606b360;
		}
		_iter_end_20606b360:;
	};
	return nullptr;;
}



inline jule::Bool _206072ca1_checkImportSelection(_22124ad71_Sema* _self_, jule::Ptr<_21da1aa0b_Token>* _53043_ident, jule::Ptr<_22126b17c_Var>* _53059_s) {
	if ((!(_22124de1d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_221241ecc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _206076a0d_checkImportSelection(_22124ad71_Sema* _self_, jule::Ptr<_21da1aa0b_Token>* _53043_ident, jule::Ptr<_22145264e_TypeAlias>* _53059_s) {
	if ((!(_22124de1d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_221241ecc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _20607a5d3_checkImportSelection(_22124ad71_Sema* _self_, jule::Ptr<_21da1aa0b_Token>* _53043_ident, jule::Ptr<_2211c48cc_Struct>* _53059_s) {
	if ((!(_22124de1d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_221241ecc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _20607e560_checkImportSelection(_22124ad71_Sema* _self_, jule::Ptr<_21da1aa0b_Token>* _53043_ident, jule::Ptr<_2211ebeed_Trait>* _53059_s) {
	if ((!(_22124de1d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_221241ecc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _206083135_checkImportSelection(_22124ad71_Sema* _self_, jule::Ptr<_21da1aa0b_Token>* _53043_ident, jule::Ptr<_2211ee781_Enum>* _53059_s) {
	if ((!(_22124de1d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_221241ecc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _206086d1a_checkImportSelection(_22124ad71_Sema* _self_, jule::Ptr<_21da1aa0b_Token>* _53043_ident, jule::Ptr<_221200d7b_TypeEnum>* _53059_s) {
	if ((!(_22124de1d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_221241ecc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _20608aa00_checkImportSelection(_22124ad71_Sema* _self_, jule::Ptr<_21da1aa0b_Token>* _53043_ident, jule::Ptr<_2211d9ccc_Fn>* _53059_s) {
	if ((!(_22124de1d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_221241ecc_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_22124d747_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _221250a68_checkImportSelectedSelections(_22124ad71_Sema* _self_, jule::Ptr<_221242a9e_ImportInfo>* _54453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_54453_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20606d83a:;
		if (it != expr_end) {
			jule::Ptr<_21da1aa0b_Token> _54616_ident = *it;
			{
				if (_54616_ident.get()._field_Kind.equal("self", 4)) {
					goto _iter_next_20606d83a;
				};
				if (_22124eeb8_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_54453_imp)))), _54616_ident.get()._field_Kind)) {
					_22124d747_pushErr(_self_, _54616_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
					_22124da66_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_20606d83a;
				};
				jule::Any _55821_def = _221250381_getImportDef(_self_, _54616_ident.get()._field_Kind, _54453_imp);;
				{
					auto &_match_expr{ _55821_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_206071860:;
						{
							goto _iter_next_20606d83a;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_20606e033:;
						{
							jule::Ptr<_22126b17c_Var> _56425_v = _55821_def.cast_ptr<_22126b17c_Var>(&__jule_any_type8);;
							__jule_func_result=(_206072ca1_checkImportSelection(_self_, &(_54616_ident), &(_56425_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_206071024:;
						{
							jule::Ptr<_22145264e_TypeAlias> _56725_ta = _55821_def.cast_ptr<_22145264e_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_206076a0d_checkImportSelection(_self_, &(_54616_ident), &(_56725_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_20607108a:;
						{
							jule::Ptr<_2211c48cc_Struct> _57025_s = _55821_def.cast_ptr<_2211c48cc_Struct>(&__jule_any_type66);;
							__jule_func_result=(_20607a5d3_checkImportSelection(_self_, &(_54616_ident), &(_57025_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_206071a6e:;
						{
							jule::Ptr<_2211ebeed_Trait> _57325_t = _55821_def.cast_ptr<_2211ebeed_Trait>(&__jule_any_type10);;
							__jule_func_result=(_20607e560_checkImportSelection(_self_, &(_54616_ident), &(_57325_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_206071ad5:;
						{
							jule::Ptr<_2211ee781_Enum> _57625_e = _55821_def.cast_ptr<_2211ee781_Enum>(&__jule_any_type68);;
							__jule_func_result=(_206083135_checkImportSelection(_self_, &(_54616_ident), &(_57625_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_206071b4b:;
						{
							jule::Ptr<_221200d7b_TypeEnum> _57925_e = _55821_def.cast_ptr<_221200d7b_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_206086d1a_checkImportSelection(_self_, &(_54616_ident), &(_57925_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_206071bb2:;
						{
							jule::Ptr<_2211d9ccc_Fn> _58225_f = _55821_def.cast_ptr<_2211d9ccc_Fn>(&__jule_any_type65);;
							__jule_func_result=(_20608aa00_checkImportSelection(_self_, &(_54616_ident), &(_58225_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_206070d59:;
						{
							_22124d747_pushErr(_self_, _54616_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_20606d83a;
						}
					}
					_match_end_206070d04:;
				};
			}
			_iter_next_20606d83a:;
			++it;
			goto _iter_begin_20606d83a;
		}
		_iter_end_20606d83a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20608ec57_checkImportsAllSelectionsFromCollection(_22124ad71_Sema* _self_, jule::Slice<jule::Ptr<_22126b17c_Var>>* _59362_s, jule::Ptr<_21da1aa0b_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206091929:;
		if (it != expr_end) {
			jule::Ptr<_22126b17c_Var> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_206072ca1_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_206091929:;
			++it;
			goto _iter_begin_206091929;
		}
		_iter_end_206091929:;
	};
	return _59417_ok;;
}

inline jule::Bool _2060932aa_checkImportsAllSelectionsFromCollection(_22124ad71_Sema* _self_, jule::Slice<jule::Ptr<_22145264e_TypeAlias>>* _59362_s, jule::Ptr<_21da1aa0b_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206094641:;
		if (it != expr_end) {
			jule::Ptr<_22145264e_TypeAlias> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_206076a0d_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_206094641:;
			++it;
			goto _iter_begin_206094641;
		}
		_iter_end_206094641:;
	};
	return _59417_ok;;
}

inline jule::Bool _206093882_checkImportsAllSelectionsFromCollection(_22124ad71_Sema* _self_, jule::Slice<jule::Ptr<_2211c48cc_Struct>>* _59362_s, jule::Ptr<_21da1aa0b_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206097347:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_20607a5d3_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_206097347:;
			++it;
			goto _iter_begin_206097347;
		}
		_iter_end_206097347:;
	};
	return _59417_ok;;
}

inline jule::Bool _206098bc8_checkImportsAllSelectionsFromCollection(_22124ad71_Sema* _self_, jule::Slice<jule::Ptr<_2211d9ccc_Fn>>* _59362_s, jule::Ptr<_21da1aa0b_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20609a070:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_20608aa00_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_20609a070:;
			++it;
			goto _iter_begin_20609a070;
		}
		_iter_end_20609a070:;
	};
	return _59417_ok;;
}

inline jule::Bool _2060992b1_checkImportsAllSelectionsFromCollection(_22124ad71_Sema* _self_, jule::Slice<jule::Ptr<_2211ebeed_Trait>>* _59362_s, jule::Ptr<_21da1aa0b_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20609cc32:;
		if (it != expr_end) {
			jule::Ptr<_2211ebeed_Trait> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_20607e560_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_20609cc32:;
			++it;
			goto _iter_begin_20609cc32;
		}
		_iter_end_20609cc32:;
	};
	return _59417_ok;;
}

inline jule::Bool _20609be73_checkImportsAllSelectionsFromCollection(_22124ad71_Sema* _self_, jule::Slice<jule::Ptr<_2211ee781_Enum>>* _59362_s, jule::Ptr<_21da1aa0b_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060a08e4:;
		if (it != expr_end) {
			jule::Ptr<_2211ee781_Enum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_206083135_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_2060a08e4:;
			++it;
			goto _iter_begin_2060a08e4;
		}
		_iter_end_2060a08e4:;
	};
	return _59417_ok;;
}

inline jule::Bool _20609eb35_checkImportsAllSelectionsFromCollection(_22124ad71_Sema* _self_, jule::Slice<jule::Ptr<_221200d7b_TypeEnum>>* _59362_s, jule::Ptr<_21da1aa0b_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060a363e:;
		if (it != expr_end) {
			jule::Ptr<_221200d7b_TypeEnum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_206086d1a_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_2060a363e:;
			++it;
			goto _iter_begin_2060a363e;
		}
		_iter_end_2060a363e:;
	};
	return _59417_ok;;
}



inline jule::Bool _221251294_checkImportAllSelections(_22124ad71_Sema* _self_, jule::Ptr<_221242a9e_ImportInfo>* _60344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_60344_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206071dd2:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> *_60516_file = it;
			{
				__jule_func_result=(_20608ec57_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Vars), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_2060932aa_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeAliases), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_206093882_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Structs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_206098bc8_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Funcs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_2060992b1_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Traits), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_20609be73_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Enums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_20609eb35_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeEnums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_206071dd2:;
			++it;
			goto _iter_begin_206071dd2;
		}
		_iter_end_206071dd2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _2212515b3_checkImportSelections(_22124ad71_Sema* _self_, jule::Ptr<_221242a9e_ImportInfo>* _61745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_61745_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _221250a68_checkImportSelectedSelections(_self_, _61745_imp);
		return __jule_func_result;;
	} else if ((*(_61745_imp)).get()._field_ImportAll) {
		__jule_func_result = _221251294_checkImportAllSelections(_self_, _61745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _2212518c1_isUseAliasDuplication(_22124ad71_Sema* _self_, jule::Ptr<_221242a9e_ImportInfo>* _62641_imp) {
	if (((*(_62641_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060aad94:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _63121_imp2 = *it;
			{
				if ((_63121_imp2 == (*(_62641_imp)))) {
					goto _iter_end_2060aad94;
				};
				if ((_63121_imp2.get()._field_Alias == (*(_62641_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_63121_imp2.get()._field_Ident == _63121_imp2.get()._field_LinkPath) && (_63121_imp2.get()._field_Ident == (*(_62641_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_2060aad94:;
			++it;
			goto _iter_begin_2060aad94;
		}
		_iter_end_2060aad94:;
	};
	return false;;
}



inline jule::Bool _221251bce_checkImport(_22124ad71_Sema* _self_, jule::Ptr<_221242a9e_ImportInfo>* _64635_imp) {
	if (((*(_64635_imp)).get()._field_CppLinked || ((*(_64635_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_2212518c1_isUseAliasDuplication(_self_, _64635_imp)) {
		_22124d747_pushErr(_self_, (*(_64635_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_64635_imp)).get()._field_Alias, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_64635_imp)).get()._field_Duplicate))) {
		jule::Ptr<_22124ad71_Sema> _65721_sema = jule::new_ptr<_22124ad71_Sema>(_22124ad71_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_221267a6e_check(_65721_sema, &((*(_64635_imp)).get()._field_Package.get()._field_Files));
		if ((_65721_sema.get()._field_errors.len() != 0LL)) {
			(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_65721_sema.get()._field_errors);
			_65721_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _2212515b3_checkImportSelections(_self_, _64635_imp);;
}



inline void _221251daa_checkImports(_22124ad71_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060b07d3:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _67221_file = *it;
			{
				_22124d37e_setCurrentFile(_self_, _67221_file);
				{
					auto expr = &(_67221_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2060b2153:;
					if (it != expr_end) {
						jule::Ptr<_221242a9e_ImportInfo> _67425_imp = *it;
						{
							jule::Bool _67521_ok = _221251bce_checkImport(_self_, &(_67425_imp));;
							if ((!(_67521_ok))) {
								return;;
							};
						}
						_iter_next_2060b2153:;
						++it;
						goto _iter_begin_2060b2153;
					}
					_iter_end_2060b2153:;
				};
			}
			_iter_next_2060b07d3:;
			++it;
			goto _iter_begin_2060b07d3;
		}
		_iter_end_2060b07d3:;
	};
}



inline void _221252086_implFileImpls(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060b1cac:;
		if (it != expr_end) {
			jule::Ptr<_22121e0ca_Impl> _68521_imp = *it;
			{
				_22125e5c1_implImpl(_self_, &(_68521_imp));
			}
			_iter_next_2060b1cac:;
			++it;
			goto _iter_begin_2060b1cac;
		}
		_iter_end_2060b1cac:;
	};
}



inline void _221252262_implImpls(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060b3682:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _69121_file = *it;
			{
				_22124d37e_setCurrentFile(_self_.ptr(), _69121_file);
				_221252086_implFileImpls(_self_);
			}
			_iter_next_2060b3682:;
			++it;
			goto _iter_begin_2060b3682;
		}
		_iter_end_2060b3682:;
	};
}



inline void _22125243d_checkEnums(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060b4a29:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _69821_file = *it;
			{
				_22124d37e_setCurrentFile(_self_.ptr(), _69821_file);
				{
					
					if ((!(_22125adc5_checkEnumDecls(_self_)))) {
						_case_begin_2060b5596:;
					}
					else if ((!(_22125b139_checkTypeEnumDecls(_self_)))) {
						_case_begin_2060b561d:;
					}
					_match_end_2060b551e:;
				};
			}
			_iter_next_2060b4a29:;
			++it;
			goto _iter_begin_2060b4a29;
		}
		_iter_end_2060b4a29:;
	};
}



inline void _221252619_checkFileInherits(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060b4ed0:;
		if (it != expr_end) {
			jule::Ptr<_2211ebeed_Trait> _70821_t = *it;
			{
				jule::Bool _70917_ok = _22125c877__checkTraitDeclInherits(_self_, &(_70821_t));;
				if ((!(_70917_ok))) {
					return;;
				};
			}
			_iter_next_2060b4ed0:;
			++it;
			goto _iter_begin_2060b4ed0;
		}
		_iter_end_2060b4ed0:;
	};
}



inline void _2212527e5_checkInherits(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060b6355:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _71721_file = *it;
			{
				_22124d37e_setCurrentFile(_self_.ptr(), _71721_file);
				_221252619_checkFileInherits(_self_);
			}
			_iter_next_2060b6355:;
			++it;
			goto _iter_begin_2060b6355;
		}
		_iter_end_2060b6355:;
	};
}



inline _2214641dd_typeChecker _221252c46_typeChecker(jule::Ptr<_22124ad71_Sema> _self_, jule::Trait<_22147198c_Lookup> _72335_l, jule::Slice<jule::Ptr<_22145264e_TypeAlias>> _72350_generics, jule::Ptr<_22146330d_referencer> _72413_referencer) {
	_2214641dd_typeChecker _72517_tc = _2214641dd_typeChecker{._field_s=_self_, ._field_rootLookup=_72335_l, ._field_lookup=_72335_l, ._field_referencer=_72413_referencer, ._field_useGenerics=_72350_generics, };;
	{
		auto &_match_expr{ _72335_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_2060b8ae9:;
			{
				jule::Ptr<_22122ac63_scopeChecker> _73421_hard = _22122dcee_getHardRoot(_72335_l.cast_ptr<_22122ac63_scopeChecker>(0));;
				_72517_tc._field_refers=_73421_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_2060b8a0b:;
	};
	if (((_72413_referencer != nullptr) && (_72413_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _72413_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_2060b9e91:;
				{
					_72517_tc._field_ownerAlias=_72413_referencer.get()._field_owner.cast_ptr<_22145264e_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_2060b9e3b:;
		};
	};
	return _72517_tc;;
}



inline jule::Ptr<_221453397_TypeKind> _221253241_buildTypeWithRefers(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211a478b_TypeDecl>* _75044_t, jule::Trait<_22147198c_Lookup> _75067_l, jule::Slice<jule::Ptr<_22145264e_TypeAlias>> _75113_generics, jule::Ptr<_22146330d_referencer> _75141_referencer) {
	return ({ auto _wrap_copy = _221252c46_typeChecker(_self_, _75067_l, _75113_generics, _75141_referencer); _22146b459_checkDecl(&_wrap_copy, _75044_t); });;
}



inline jule::Bool _22125373b_checkTypeWithRefers(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_221459c50_TypeSymbol>* _75744_t, jule::Trait<_22147198c_Lookup> _75764_l, jule::Slice<jule::Ptr<_22145264e_TypeAlias>> _75813_generics, jule::Ptr<_22146330d_referencer> _75841_referencer) {
	jule::Bool __jule_func_result = false;
	if (_22145a107_checked((*(_75744_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_75744_t)).get()._field_Kind=_221253241_buildTypeWithRefers(_self_, &((*(_75744_t)).get()._field_Decl), _75764_l, _75813_generics, _75841_referencer);
	__jule_func_result = _22145a107_checked((*(_75744_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_22121c22c_constraintChecker> _2212539a0_constraintChecker(jule::Ptr<_22124ad71_Sema> _self_) {
	return jule::new_ptr<_22121c22c_constraintChecker>(_22121c22c_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _221253d57_checkType(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_221459c50_TypeSymbol>* _77234_t, jule::Trait<_22147198c_Lookup> _77254_l) {
	return _22125373b_checkTypeWithRefers(_self_, _77234_t, _77254_l, nullptr, nullptr);;
}



inline jule::Ptr<_221453397_TypeKind> _2212542a8_buildTypeWithGenerics(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211a478b_TypeDecl>* _77846_t, jule::Slice<jule::Ptr<_22145264e_TypeAlias>> _77913_generics, jule::Ptr<_2211e08d7_ReferenceStack> _77941_refers) {
	jule::Ptr<_2214641dd_typeChecker> _78017_tc = jule::new_ptr<_2214641dd_typeChecker>(_2214641dd_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_22147198c_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_22147198c_Lookup>(_self_, 3), ._field_refers=_77941_refers, ._field_useGenerics=_77913_generics, });;
	return _22146b459_checkDecl(_78017_tc.ptr(), _77846_t);;
}



inline jule::Ptr<_221453397_TypeKind> _2212545b6_buildType(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211a478b_TypeDecl>* _79134_t) {
	return _2212542a8_buildTypeWithGenerics(_self_, _79134_t, nullptr, nullptr);;
}



inline jule::Ptr<_221453397_TypeKind> _2212548c4_selectType(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211a478b_TypeDecl>* _79635_t) {
	jule::Ptr<_2214641dd_typeChecker> _79717_tc = jule::new_ptr<_2214641dd_typeChecker>(_2214641dd_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_22147198c_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_22147198c_Lookup>(_self_, 3), ._field_selection=true, });;
	return _22146b459_checkDecl(_79717_tc.ptr(), _79635_t);;
}



inline jule::Ptr<_22142779a_Eval> _221254d25_evalpd(jule::Ptr<_22124ad71_Sema> _self_, jule::Trait<_22147198c_Lookup> _80830_l, jule::Ptr<_221453397_TypeKind> _80845_p, jule::Ptr<_22126b17c_Var> _80863_owner) {
	jule::Ptr<_22142779a_Eval> _80917_e = jule::new_ptr<_22142779a_Eval>(_22142779a_Eval{._field_s=_self_, ._field_lookup=_80830_l, ._field_owner=_80863_owner, });;
	{
		auto &_match_expr{ _80830_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_2060c3131:;
			{
				_80917_e.get()._field_unsafety=_22122ce0d_isUnsafe(_80830_l.cast_ptr<_22122ac63_scopeChecker>(0));
			}
		}
		_match_end_2060c30ba:;
	};
	_80917_e.get()._field_prefix=_80845_p;
	return _80917_e;;
}



inline jule::Ptr<_22142779a_Eval> _2212551cc_evalp(jule::Ptr<_22124ad71_Sema> _self_, jule::Trait<_22147198c_Lookup> _82329_l, jule::Ptr<_221453397_TypeKind> _82344_p) {
	return _221254d25_evalpd(_self_, _82329_l, _82344_p, nullptr);;
}



inline jule::Ptr<_22142779a_Eval> _2212554da_eval(jule::Ptr<_22124ad71_Sema> _self_, jule::Trait<_22147198c_Lookup> _82828_l) {
	return _2212551cc_evalp(_self_, _82828_l, nullptr);;
}



inline jule::Bool _2212559d5_checkAssignType(jule::Ptr<_22124ad71_Sema> _self_, jule::Bool _83235_destIsRef, jule::Ptr<_221453397_TypeKind>* _83257_dest, jule::Ptr<_221425c2c_Data>* _83314_d, jule::Ptr<_21da1aa0b_Token> _83328_errorToken) {
	if ((*(_83314_d)).get()._field_Decl) {
		_22124d747_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_83235_destIsRef) {
		if ((!(_221453aa1_Equal((*(_83257_dest)), (*(_83314_d)).get()._field_Kind)))) {
			_22124d747_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_83257_dest)).ptr()), &__jule_any_type5),jule::Any(_221453793_Str((*(_83314_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_2214115ec_assignTypeChecker> _84421_atc = jule::new_ptr<_2214115ec_assignTypeChecker>(_2214115ec_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_83257_dest)), ._field_d=(*(_83314_d)), ._field_errorToken=_83328_errorToken});;
		jule::Bool _85017_ok = _221412774_check(_84421_atc.ptr());;
		if ((!(_85017_ok))) {
			return false;;
		};
	};
	if (((!(_2214265e0_IsConst((*(_83314_d)).ptr()))) || (_221455a92_Prim((*(_83257_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _86017_kind = _221455a92_Prim((*(_83257_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_21e6c4351_IsSigInt(_86017_kind)) {
			_case_begin_2060c9511:;
			{
				_21e6c8146_SetI64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_21e6c78e8_AsI64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_21e6c463c_IsUnsigInt(_86017_kind)) {
			_case_begin_2060c9588:;
			{
				_21e6c83bb_SetU64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_21e6c7b5c_AsU64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_21e6c4c03_IsFloat(_86017_kind)) {
			_case_begin_2060c9610:;
			{
				_21e6c8b3b_SetF64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_21e6c7dc1_AsF64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_2060c9445:;
	};
	return true;;
}



inline jule::Bool _221255e36_checkTypeCompatibility(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_221453397_TypeKind>* _87447_dest, jule::Ptr<_221453397_TypeKind>* _87514_src, jule::Ptr<_21da1aa0b_Token>* _87535_errorToken) {
	if (((*(_87514_src)) == nullptr)) {
		_22124d747_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_221453793_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_221457731_Tup((*(_87514_src)).ptr()) != nullptr)) {
		_22124d747_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_221453793_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_22140e9c4_typeCompatibilityChecker _88917_tcc = _22140e9c4_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_87447_dest)), ._field_src=(*(_87514_src)), ._field_errorToken=(*(_87535_errorToken))};;
	if (_2214110ad_check(&_88917_tcc)) {
		return true;;
	};
	_22124d747_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_221453793_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_221453397_TypeKind> _2212563a9_buildNonGenericTypeKind(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211a478b_TypeDecl>* _91048_ast, jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>>* _91114_generics, jule::Slice<jule::Ptr<_221453397_TypeKind>>* _91150_ignored) {
	jule::Ptr<_2214641dd_typeChecker> _91217_tc = jule::new_ptr<_2214641dd_typeChecker>(_2214641dd_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_22147198c_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_22147198c_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_91114_generics)), ._field_ignoredGenerics=(&((*(_91150_ignored)))), });;
	return _22146b459_checkDecl(_91217_tc.ptr(), _91048_ast);;
}



inline jule::Bool _221256794_buildFnNonGenericTypeKinds(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211dc97d_FnIns>* _92251_f, jule::Slice<jule::Ptr<_221453397_TypeKind>>* _92267_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>> _92417_generics = nullptr;;
	if (_2211da4a3_IsMethod((*(_92251_f)).get()._field_Decl.ptr())) {
		_92417_generics=jule::append((*(_92251_f)).get()._field_Decl.get()._field_Generics,(*(_92251_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_92417_generics=(*(_92251_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_92251_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060d2c34:;
		if (it != expr_end) {
			jule::Ptr<_2211dbaae_ParamIns> _93121_p = *it;
			{
				if ((!(_2211d8abc_IsSelf(_93121_p.get()._field_Decl.ptr())))) {
					_93121_p.get()._field_Kind=_2212563a9_buildNonGenericTypeKind(_self_, &(_93121_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
					__jule_func_result=(__jule_func_result && (_93121_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_2060d2c34:;
			++it;
			goto _iter_begin_2060d2c34;
		}
		_iter_end_2060d2c34:;
	};
	if ((!(_2211da23e_IsVoid((*(_92251_f)).get()._field_Decl.ptr())))) {
		(*(_92251_f)).get()._field_Result=_2212563a9_buildNonGenericTypeKind(_self_, &((*(_92251_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
		__jule_func_result=(__jule_func_result && ((*(_92251_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_2211dc97d_FnIns> _221256ab3_getTraitCheckFnKind(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211d9ccc_Fn>* _94444_f) {
	if (((*(_94444_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_94444_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_2211dc97d_FnIns> _94817_ins = _2211db1b8_instanceForce((*(_94444_f)));;
	jule::Ptr<_2214641dd_typeChecker> _95017_tc = jule::new_ptr<_2214641dd_typeChecker>(_2214641dd_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_22147198c_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_22147198c_Lookup>(_self_, 3), });;
	{
		auto expr = &(_94817_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060d7453:;
		if (it != expr_end) {
			jule::Ptr<_2211dbaae_ParamIns> _95521_p = *it;
			{
				if ((!(_2211d8abc_IsSelf(_95521_p.get()._field_Decl.ptr())))) {
					_95521_p.get()._field_Kind=_22146b459_checkDecl(_95017_tc.ptr(), &(_95521_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_2060d7453:;
			++it;
			goto _iter_begin_2060d7453;
		}
		_iter_end_2060d7453:;
	};
	if ((!(_2211da23e_IsVoid((*(_94444_f)).ptr())))) {
		_94817_ins.get()._field_Result=_22146b459_checkDecl(_95017_tc.ptr(), &((*(_94444_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _94817_ins;;
}



inline jule::Bool _221257014_checkConstraintsFn(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211dc97d_FnIns>* _96743_f, jule::Ptr<_21da1aa0b_Token>* _96759_et, jule::Ptr<_2211dc97d_FnIns> _96775_exist) {
	jule::Ptr<_22121c22c_constraintChecker> _96817_cc = _2212539a0_constraintChecker(_self_);;
	_96817_cc.get()._field_et=(*(_96759_et));
	_96817_cc.get()._field_fi=(*(_96743_f));
	if ((_96775_exist != nullptr)) {
		{
			auto expr = &(_96775_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2060da753:;
			if (it != expr_end) {
				jule::I32 _97218_i = it - expr->begin();
				jule::Ptr<_221451b15_InsGeneric> _97225_g = *it;
				{
					(*(_96743_f)).get()._field_Generics[_97218_i].get()._field_Constraint=_97225_g.get()._field_Constraint;
				}
				_iter_next_2060da753:;
				++it;
				_97218_i++;
				goto _iter_begin_2060da753;
			}
			_iter_end_2060da753:;
		};
	} else {
		_96817_cc.get()._field_uniq=true;
	};
	return _22121d10c_check(_96817_cc);;
}



inline jule::Bool _221257465_checkConstraintsStruct(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c76e3_StructIns>* _98147_s, jule::Ptr<_21da1aa0b_Token>* _98167_et, jule::Ptr<_2211c76e3_StructIns> _98183_exist) {
	jule::Ptr<_22121c22c_constraintChecker> _98217_cc = _2212539a0_constraintChecker(_self_);;
	_98217_cc.get()._field_et=(*(_98167_et));
	_98217_cc.get()._field_si=(*(_98147_s));
	if ((_98183_exist != nullptr)) {
		{
			auto expr = &(_98183_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2060dd1b2:;
			if (it != expr_end) {
				jule::I32 _98618_i = it - expr->begin();
				jule::Ptr<_221451b15_InsGeneric> _98625_g = *it;
				{
					(*(_98147_s)).get()._field_Generics[_98618_i].get()._field_Constraint=_98625_g.get()._field_Constraint;
				}
				_iter_next_2060dd1b2:;
				++it;
				_98618_i++;
				goto _iter_begin_2060dd1b2;
			}
			_iter_end_2060dd1b2:;
		};
	} else {
		_98217_cc.get()._field_uniq=true;
	};
	return _22121d10c_check(_98217_cc);;
}



inline jule::Bool _22125781c_fnEnvironment(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211dc97d_FnIns>* _99838_f, jule::Fn<jule::Bool(jule::Ptr<_22124ad71_Sema>*,jule::Slice<jule::Ptr<_22145264e_TypeAlias>>*)> _99849_algo) {
	jule::Ptr<_22124ad71_Sema> _99917_sema = (*(_99838_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_221421222_SymbolTable> _100017_old = (*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_22124d37e_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100017_old);
	});;
	jule::Ptr<_221421222_SymbolTable> _100217_file = _221249bb6_findFile(&((*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_99838_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_100217_file != nullptr)) {
		_22124d37e_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100217_file);
	};
	jule::I32 _100717_size = (*(_99838_f)).get()._field_Generics.len();;
	if ((((*(_99838_f)).get()._field_Decl != nullptr) && ((*(_99838_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_100717_size+=(*(_99838_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_22145264e_TypeAlias>> _101217_generics = jule::Slice<jule::Ptr<_22145264e_TypeAlias>>::alloc(0LL, _100717_size);;
	_221249864_appendGenericTypeAliases(&(_101217_generics), _99838_f);
	jule::Bool _101513_ok = _99849_algo(&(_99917_sema), &(_101217_generics));;
	if ((_99917_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_99917_sema.get()._field_errors);
		_99917_sema.get()._field_errors=nullptr;
	};
	return _101513_ok;;
}



inline void _221257a92_checkFnParamKind(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211dbaae_ParamIns>* _102541_p) {
	(*(_102541_p)).get()._field_Kind.get()._field_Variadic=(*(_102541_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_102541_p)).get()._field_Decl.get()._field_Reference && (!(_22146d26e_isValidForRef(&((*(_102541_p)).get()._field_Kind)))))) {
		_22124d747_pushErr(_self_.ptr(), (*(_102541_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_102541_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _221257da0_reloadFnInsTypes(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211dc97d_FnIns> _103240_f) {
	if ((_2211ddd14_IsBuiltin(_103240_f.ptr()) || _2211de078_IsAnon(_103240_f.ptr()))) {
		return true;;
	};
	return _22125781c_fnEnvironment(_self_, &(_103240_f), jule::Fn<jule::Bool(jule::Ptr<_22124ad71_Sema>*,jule::Slice<jule::Ptr<_22145264e_TypeAlias>>*)>([=](jule::Ptr<_22124ad71_Sema>* _103643_sema, jule::Slice<jule::Ptr<_22145264e_TypeAlias>>* _103661_generics) mutable -> jule::Bool {
		jule::Bool _103721_ok = true;;
		{
			auto expr = &(_103240_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2060e8cb1:;
			if (it != expr_end) {
				jule::Ptr<_2211dbaae_ParamIns> _103825_p = *it;
				{
					if (_2211d8abc_IsSelf(_103825_p.get()._field_Decl.ptr())) {
						if (_2211d8d31_IsRef(_103825_p.get()._field_Decl.ptr())) {
							_103825_p.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_22145dd53_Sptr>(_22145dd53_Sptr{._field_Elem=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_103240_f.get()._field_Owner, 0)})}), 19)});
						} else {
							_103825_p.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_103240_f.get()._field_Owner, 0)});
						};
					} else {
						_103825_p.get()._field_Kind=_2212542a8_buildTypeWithGenerics((*(_103643_sema)), &(_103825_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
						if ((_103825_p.get()._field_Kind != nullptr)) {
							_221257a92_checkFnParamKind(_self_, &(_103825_p));
						} else {
							_103721_ok=false;
						};
					};
				}
				_iter_next_2060e8cb1:;
				++it;
				goto _iter_begin_2060e8cb1;
			}
			_iter_end_2060e8cb1:;
		};
		if ((!(_2211da23e_IsVoid(_103240_f.get()._field_Decl.ptr())))) {
			_103240_f.get()._field_Result=_2212542a8_buildTypeWithGenerics((*(_103643_sema)), &(_103240_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
			_103721_ok=((_103240_f.get()._field_Result != nullptr) && _103721_ok);
		};
		return _103721_ok;;
	}));;
}



inline jule::Bool _221258323_checkRefValidityForInitExpr(jule::Ptr<_22124ad71_Sema> _self_, jule::Bool _106847_leftMut, jule::Ptr<_221425c2c_Data>* _106867_d, jule::Ptr<_21da1aa0b_Token>* _106882_errorToken) {
	{
		auto &_match_expr{ (*(_106867_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2060ede81:;
			{
				goto _match_end_2060ed601;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_2060edee7:;
			{
				jule::Ptr<_2211d0a5e_TraitSubIdentExprModel> _107321_model = (*(_106867_d)).get()._field_Model.cast_ptr<_2211d0a5e_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_2212486ed_isValidModelForRef(&(_107321_model.get()._field_Expr))))) {
					_22124d747_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107321_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_2060ee0e6:;
			{
				jule::Ptr<_2211d1345_StructSubIdentExprModel> _107921_model = (*(_106867_d)).get()._field_Model.cast_ptr<_2211d1345_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_2212486ed_isValidModelForRef(&(_107921_model.get()._field_Expr.get()._field_Model))))) {
					_22124d747_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107921_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_2060ee15c:;
			{
				_22124d747_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_2060ed755:;
			{
				jule::Ptr<_2211cc011_UnaryExprModel> _108921_unary = (*(_106867_d)).get()._field_Model.cast_ptr<_2211cc011_UnaryExprModel>(&__jule_any_type74);;
				if (_108921_unary.get()._field_Op.get()._field_Kind.equal("*", 1)) {
					if ((!(_2212486ed_isValidModelForRef(&((*(_106867_d)).get()._field_Model))))) {
						_22124d747_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_2060ed601;
				};
				goto _case_begin_2060ed656;
			}
		}
		else {
			_case_begin_2060ed656:;
			{
				_22124d747_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_2060ed601:;
	};
	if ((_106847_leftMut && (!((*(_106867_d)).get()._field_Mutable)))) {
		_22124d747_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _2212588ea_checkValidityForInitExpr(jule::Ptr<_22124ad71_Sema> _self_, jule::Bool _110944_leftMut, jule::Bool _110959_leftRef, jule::Ptr<_221453397_TypeKind>* _111010_leftKind, jule::Ptr<_221425c2c_Data>* _111036_d, jule::Ptr<_21da1aa0b_Token>* _111051_errorToken) {
	if (((_110944_leftMut && (!((*(_111036_d)).get()._field_Mutable))) && _221454b18_Mutable((*(_111036_d)).get()._field_Kind.ptr()))) {
		_22124d747_pushErr(_self_.ptr(), (*(_111051_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_111036_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	if (_110959_leftRef) {
		if ((!(_221258323_checkRefValidityForInitExpr(_self_, _110944_leftMut, _111036_d, _111051_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_2214115ec_assignTypeChecker> _112017_atc = jule::new_ptr<_2214115ec_assignTypeChecker>(_2214115ec_assignTypeChecker{._field_s=_self_, ._field_d=(*(_111036_d)), ._field_errorToken=(*(_111051_errorToken))});;
	return _221411cc3_checkValidity(_112017_atc.ptr());;
}



inline jule::Bool _221258cb3_checkTypeAliasDeclKind(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22145264e_TypeAlias>* _112847_ta, jule::Trait<_22147198c_Lookup> _112867_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_221421222_SymbolTable> _112917_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_22124d37e_setCurrentFile(_self_.ptr(), _112917_old);
	});;
	if (((*(_112847_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_221421222_SymbolTable> _113421_file = _221249bb6_findFile(&(_self_.get()._field_files), &((*(_112847_ta)).get()._field_Token.get()._field_File));;
		if ((_113421_file != nullptr)) {
			_22124d37e_setCurrentFile(_self_.ptr(), _113421_file);
		};
	};
	__jule_func_result=_22125373b_checkTypeWithRefers(_self_, &((*(_112847_ta)).get()._field_Kind), _112867_l, nullptr, jule::new_ptr<_22146330d_referencer>(_22146330d_referencer{._field_ident=(*(_112847_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_112847_ta)), &__jule_any_type67), ._field_refs=(&((*(_112847_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_2214567a7_Arr((*(_112847_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _2214567a7_Arr((*(_112847_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_22124d747_pushErr(_self_.ptr(), (*(_112847_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _2212590d2_checkTypeAliasDecl(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22145264e_TypeAlias>* _115143_ta, jule::Trait<_22147198c_Lookup> _115163_l) {
	if (_21da1d2a0_IsIgnoreIdent((*(_115143_ta)).get()._field_Ident)) {
		_22124d747_pushErr(_self_.ptr(), (*(_115143_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_221258cb3_checkTypeAliasDeclKind(_self_, _115143_ta, _115163_l);
}



inline void _221259357_checkTypeAliasDeclDup(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22145264e_TypeAlias>* _115946_ta) {
	if (_21da1d2a0_IsIgnoreIdent((*(_115946_ta)).get()._field_Ident)) {
		_22124d747_pushErr(_self_.ptr(), (*(_115946_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_22124e36e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_115946_ta)))), (*(_115946_ta)).get()._field_Ident, (*(_115946_ta)).get()._field_CppLinked)) {
		_22124d747_pushErr(_self_.ptr(), (*(_115946_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115946_ta)).get()._field_Ident, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_221258cb3_checkTypeAliasDeclKind(_self_, _115946_ta, jule::Trait<_22147198c_Lookup>(_self_, 3));
}



inline jule::Bool _2212595bb_checkTypeAliasDecls(jule::Ptr<_22124ad71_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20611002a:;
		if (it != expr_end) {
			jule::Ptr<_22145264e_TypeAlias> _117221_ta = *it;
			{
				_221259357_checkTypeAliasDeclDup(_self_, &(_117221_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_20611002a:;
			++it;
			goto _iter_begin_20611002a;
		}
		_iter_end_20611002a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20613422a_checkEnumItemsDup(_22124ad71_Sema* _self_, jule::Slice<jule::Ptr<_2211edc8b_EnumItem>> _118339_items) {
	{
		auto expr = &(_118339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206135490:;
		if (it != expr_end) {
			jule::Ptr<_2211edc8b_EnumItem> *_118416_item = it;
			{
				if ((*(_118416_item)).get()._field_Ident.empty()) {
					goto _iter_next_206135490;
				} else if (_21da1d2a0_IsIgnoreIdent((*(_118416_item)).get()._field_Ident)) {
					_22124d747_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_206136705:;
						if (it != expr_end) {
							jule::Ptr<_2211edc8b_EnumItem> *_119024_citem = it;
							{
								if (((*(_118416_item)) == (*(_119024_citem)))) {
									goto _iter_end_206136705;
								} else if (((*(_118416_item)).get()._field_Ident == (*(_119024_citem)).get()._field_Ident)) {
									_22124d747_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118416_item)).get()._field_Ident, &__jule_any_type5)}));
									_22124da66_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_206136705;
								};
							}
							_iter_next_206136705:;
							++it;
							goto _iter_begin_206136705;
						}
						_iter_end_206136705:;
					};
				};
			}
			_iter_next_206135490:;
			++it;
			goto _iter_begin_206135490;
		}
		_iter_end_206135490:;
	};
}

inline void _20613db19_checkEnumItemsDup(_22124ad71_Sema* _self_, jule::Slice<jule::Ptr<_2212007b5_TypeEnumItem>> _118339_items) {
	{
		auto expr = &(_118339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20613ed3a:;
		if (it != expr_end) {
			jule::Ptr<_2212007b5_TypeEnumItem> *_118416_item = it;
			{
				if ((*(_118416_item)).get()._field_Ident.empty()) {
					goto _iter_next_20613ed3a;
				} else if (_21da1d2a0_IsIgnoreIdent((*(_118416_item)).get()._field_Ident)) {
					_22124d747_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2061410a0:;
						if (it != expr_end) {
							jule::Ptr<_2212007b5_TypeEnumItem> *_119024_citem = it;
							{
								if (((*(_118416_item)) == (*(_119024_citem)))) {
									goto _iter_end_2061410a0;
								} else if (((*(_118416_item)).get()._field_Ident == (*(_119024_citem)).get()._field_Ident)) {
									_22124d747_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118416_item)).get()._field_Ident, &__jule_any_type5)}));
									_22124da66_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_2061410a0;
								};
							}
							_iter_next_2061410a0:;
							++it;
							goto _iter_begin_2061410a0;
						}
						_iter_end_2061410a0:;
					};
				};
			}
			_iter_next_20613ed3a:;
			++it;
			goto _iter_begin_20613ed3a;
		}
		_iter_end_20613ed3a:;
	};
}



inline void _221259ab6_checkEnumItemsStr(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211ee781_Enum>* _120342_e) {
	jule::Ptr<_22142779a_Eval> _120417_eval = _2212554da_eval(_self_, jule::Trait<_22147198c_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_120342_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061119bb:;
		if (it != expr_end) {
			jule::Ptr<_2211edc8b_EnumItem> _120521_item = *it;
			{
				if (_2211ee176_AutoExpr(_120521_item.ptr())) {
					_120521_item.get()._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Constant=static__21e6c6144_NewStr(_120521_item.get()._field_Ident)})});
					_120521_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_120521_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_221425c2c_Data> _121425_d = _221444267_evalExpr(_120417_eval, _120521_item.get()._field_Value.get()._field_Expr);;
					if ((_121425_d == nullptr)) {
						goto _iter_next_2061119bb;
					};
					if ((!(_2214265e0_IsConst(_121425_d.ptr())))) {
						_22124d747_pushErr(_self_.ptr(), _120521_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_2212559d5_checkAssignType(_self_, false, &((*(_120342_e)).get()._field_Kind.get()._field_Kind), &(_121425_d), _120521_item.get()._field_Token);
					_120521_item.get()._field_Value.get()._field_Data=_121425_d;
				};
			}
			_iter_next_2061119bb:;
			++it;
			goto _iter_begin_2061119bb;
		}
		_iter_end_2061119bb:;
	};
}



inline void _206119e9c_checkEnumItemInt(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22142779a_Eval>* _122946_eval, jule::Ptr<_2211ee781_Enum>* _122964_e, jule::Ptr<_22145a5be_Prim>* _122975_prim, jule::Ptr<_2211edc8b_EnumItem>* _122993_item, jule::U64* _1229115_n) {
	if (_2211ee176_AutoExpr((*(_122993_item)).ptr())) {
		(*(_122993_item)).get()._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()});
		{
			
{
				_case_begin_20611ca71:;
				{
					(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__21e6c5b05_NewU64((*(_1229115_n)));
				}
			}
			_match_end_20611c422:;
		};
		(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_221425c2c_Data> _124421_d = _221444267_evalExpr((*(_122946_eval)), (*(_122993_item)).get()._field_Value.get()._field_Expr);;
		if ((_124421_d == nullptr)) {
			return;;
		};
		if ((!(_2214265e0_IsConst(_124421_d.ptr())))) {
			_22124d747_pushErr(_self_.ptr(), (*(_122993_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_2212559d5_checkAssignType(_self_, false, &((*(_122964_e)).get()._field_Kind.get()._field_Kind), &(_124421_d), (*(_122993_item)).get()._field_Token);
		(*(_122993_item)).get()._field_Value.get()._field_Data=_124421_d;
		{
			
{
				_case_begin_206120d82:;
				{
					(*(_1229115_n))=static_cast<jule::U64>(_21e6c6e47_ReadU64((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_206120c94:;
		};
	};
}

inline void _206127aae_checkEnumItemInt(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22142779a_Eval>* _122946_eval, jule::Ptr<_2211ee781_Enum>* _122964_e, jule::Ptr<_22145a5be_Prim>* _122975_prim, jule::Ptr<_2211edc8b_EnumItem>* _122993_item, jule::I64* _1229115_n) {
	if (_2211ee176_AutoExpr((*(_122993_item)).ptr())) {
		(*(_122993_item)).get()._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()});
		{
			
{
				_case_begin_20612a5b7:;
				{
					(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__21e6c585d_NewI64((*(_1229115_n)));
				}
			}
			_match_end_206129ee0:;
		};
		(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_221425c2c_Data> _124421_d = _221444267_evalExpr((*(_122946_eval)), (*(_122993_item)).get()._field_Value.get()._field_Expr);;
		if ((_124421_d == nullptr)) {
			return;;
		};
		if ((!(_2214265e0_IsConst(_124421_d.ptr())))) {
			_22124d747_pushErr(_self_.ptr(), (*(_122993_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_2212559d5_checkAssignType(_self_, false, &((*(_122964_e)).get()._field_Kind.get()._field_Kind), &(_124421_d), (*(_122993_item)).get()._field_Token);
		(*(_122993_item)).get()._field_Value.get()._field_Data=_124421_d;
		{
			
{
				_case_begin_20612da93:;
				{
					(*(_1229115_n))=static_cast<jule::I64>(_21e6c6bd3_ReadI64((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_20612da2c:;
		};
	};
}



inline void _20611655e_checkEnumItemsInt1(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22145a5be_Prim>* _126444_prim, jule::Ptr<_2211ee781_Enum>* _126462_e) {
	jule::U64 _126517_max = 0LLU;;
	{
		
{
			_case_begin_20611830d:;
			{
				_126517_max=static_cast<jule::U64>(_21e6bde72_MaxU(_22145a932_Str((*(_126444_prim)).ptr())));
			}
		}
		_match_end_206118077:;
	};
	jule::Ptr<_22142779a_Eval> _127517_eval = _2212554da_eval(_self_, jule::Trait<_22147198c_Lookup>(_self_, 3));;
	jule::U64 _127617_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_2211edc8b_EnumItem> _127717_first = (*(_126462_e)).get()._field_Items[0LL];;
	_206119e9c_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_127717_first), &(_127617_n));
	if ((_127717_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_206120ce9:;
				{
					_127617_n=static_cast<jule::U64>(_21e6c7b5c_AsU64(_127717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_20611a2cc:;
		};
	};
	{
		auto expr = (*(_126462_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_20611b0d0:;
		if (it != expr_end) {
			jule::Ptr<_2211edc8b_EnumItem> _128921_item = *it;
			{
				if (((_2211ee176_AutoExpr(_128921_item.ptr()) && (_127617_n > 0LLU)) && ((_126517_max - _127617_n) <= 0LLU))) {
					_22124d747_pushErr(_self_.ptr(), _128921_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_20611b0d0;
				};
				(_127617_n)++;
				_206119e9c_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_128921_item), &(_127617_n));
			}
			_iter_next_20611b0d0:;
			++it;
			goto _iter_begin_20611b0d0;
		}
		_iter_end_20611b0d0:;
	};
}

inline void _20612205e_checkEnumItemsInt1(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22145a5be_Prim>* _126444_prim, jule::Ptr<_2211ee781_Enum>* _126462_e) {
	jule::I64 _126517_max = 0LL;;
	{
		
{
			_case_begin_206125b9a:;
			{
				_126517_max=static_cast<jule::I64>(_21e6bdbca_MaxI(_22145a932_Str((*(_126444_prim)).ptr())));
			}
		}
		_match_end_2061259be:;
	};
	jule::Ptr<_22142779a_Eval> _127517_eval = _2212554da_eval(_self_, jule::Trait<_22147198c_Lookup>(_self_, 3));;
	jule::I64 _127617_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_2211edc8b_EnumItem> _127717_first = (*(_126462_e)).get()._field_Items[0LL];;
	_206127aae_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_127717_first), &(_127617_n));
	if ((_127717_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_206126a9c:;
				{
					_127617_n=static_cast<jule::I64>(_21e6c78e8_AsI64(_127717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_2061284c7:;
		};
	};
	{
		auto expr = (*(_126462_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_20612ece7:;
		if (it != expr_end) {
			jule::Ptr<_2211edc8b_EnumItem> _128921_item = *it;
			{
				if (((_2211ee176_AutoExpr(_128921_item.ptr()) && (_127617_n > 0LL)) && ((_126517_max - _127617_n) <= 0LL))) {
					_22124d747_pushErr(_self_.ptr(), _128921_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_20612ece7;
				};
				(_127617_n)++;
				_206127aae_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_128921_item), &(_127617_n));
			}
			_iter_next_20612ece7:;
			++it;
			goto _iter_begin_20612ece7;
		}
		_iter_end_20612ece7:;
	};
}



inline void _22125a666_checkEnumItemsInt(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211ee781_Enum>* _129942_e) {
	jule::Ptr<_22145a5be_Prim> _130013_prim = _221455a92_Prim((*(_129942_e)).get()._field_Kind.get()._field_Kind.ptr());;
	{
		
		if (_21e6c4351_IsSigInt(_130013_prim.get()._field_Kind)) {
			_case_begin_20612401c:;
			{
				_20612205e_checkEnumItemsInt1(_self_, &(_130013_prim), _129942_e);
			}
		}
		else {
			_case_begin_206115d00:;
			{
				_20611655e_checkEnumItemsInt1(_self_, &(_130013_prim), _129942_e);
			}
		}
		_match_end_206115c9a:;
	};
}



inline void _22125a8db_checkEnumDecl(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211ee781_Enum>* _130938_e) {
	if (_21da1d2a0_IsIgnoreIdent((*(_130938_e)).get()._field_Ident)) {
		_22124d747_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_22124e36e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_130938_e)))), (*(_130938_e)).get()._field_Ident, false)) {
		_22124d747_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_130938_e)).get()._field_Ident, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_130938_e)).get()._field_Items.len() == 0LL)) {
		_22124d747_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_130938_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_20613422a_checkEnumItemsDup(_self_.ptr(), (*(_130938_e)).get()._field_Items);
	if (((*(_130938_e)).get()._field_Kind != nullptr)) {
		if ((!(_221253d57_checkType(_self_, &((*(_130938_e)).get()._field_Kind), jule::Trait<_22147198c_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_130938_e)).get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)})});
	};
	jule::Ptr<_22145a5be_Prim> _133717_t = _221455a92_Prim((*(_130938_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_133717_t == nullptr)) {
		_22124d747_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_22145d803_IsStr(_133717_t.ptr())) {
			_case_begin_20613a044:;
			{
				_221259ab6_checkEnumItemsStr(_self_, _130938_e);
			}
		}
		else if (_21e6c48d4_IsInt(_22145a932_Str(_133717_t.ptr()))) {
			_case_begin_20613a1dc:;
			{
				_22125a666_checkEnumItemsInt(_self_, _130938_e);
			}
		}
		else {
			_case_begin_20613940b:;
			{
				_22124d747_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_206139274:;
	};
}



inline void _22125ab61_checkTypeEnumDecl(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_221200d7b_TypeEnum>* _135442_e) {
	if (_21da1d2a0_IsIgnoreIdent((*(_135442_e)).get()._field_Ident)) {
		_22124d747_pushErr(_self_.ptr(), (*(_135442_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_22124e36e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_135442_e)))), (*(_135442_e)).get()._field_Ident, false)) {
		_22124d747_pushErr(_self_.ptr(), (*(_135442_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_135442_e)).get()._field_Ident, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_135442_e)).get()._field_Items.len() == 0LL)) {
		_22124d747_pushErr(_self_.ptr(), (*(_135442_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_135442_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_20613db19_checkEnumItemsDup(_self_.ptr(), (*(_135442_e)).get()._field_Items);
	{
		auto expr = &((*(_135442_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20613e411:;
		if (it != expr_end) {
			jule::Ptr<_2212007b5_TypeEnumItem> _136821_item = *it;
			{
				if ((_136821_item.get()._field_Kind == nullptr)) {
					_22124d747_pushErr(_self_.ptr(), _136821_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_20613e411;
				};
				jule::Bool _137317_ok = _221253d57_checkType(_self_, &(_136821_item.get()._field_Kind), jule::Trait<_22147198c_Lookup>(_self_, 3));;
				if ((!(_137317_ok))) {
					goto _iter_next_20613e411;
				};
				jule::Ptr<_22145a5be_Prim> _137717_p = _221455a92_Prim(_136821_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_137717_p != nullptr) && _22145da67_IsAny(_137717_p.ptr()))) {
					_22124d747_pushErr(_self_.ptr(), _136821_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_20613e411:;
			++it;
			goto _iter_begin_20613e411;
		}
		_iter_end_20613e411:;
	};
	if (((*(_135442_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_2212007b5_TypeEnumItem> _138321_item = (*(_135442_e)).get()._field_Items[0LL];;
		_221453397_TypeKind _138417_tk = _221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>((*(_135442_e)), 4)};;
		if (((_138321_item.get()._field_Kind.get()._field_Kind != nullptr) && _221453aa1_Equal(_138321_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_221453397_TypeKind>)((&(_138417_tk))))))) {
			_22124d747_pushErr(_self_.ptr(), _138321_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_2212011ab_Str((*(_135442_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _22125adc5_checkEnumDecls(jule::Ptr<_22124ad71_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20614777c:;
		if (it != expr_end) {
			jule::Ptr<_2211ee781_Enum> _139521_e = *it;
			{
				_22125a8db_checkEnumDecl(_self_, &(_139521_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_20614777c:;
			++it;
			goto _iter_begin_20614777c;
		}
		_iter_end_20614777c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _22125b139_checkTypeEnumDecls(jule::Ptr<_22124ad71_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206148b02:;
		if (it != expr_end) {
			jule::Ptr<_221200d7b_TypeEnum> _140721_e = *it;
			{
				_22125ab61_checkTypeEnumDecl(_self_, &(_140721_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_206148b02:;
			++it;
			goto _iter_begin_206148b02;
		}
		_iter_end_206148b02:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _22125b447_checkDeclGenerics(_22124ad71_Sema* _self_, jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>>* _141737_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _141737_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20614a142:;
		if (it != expr_end) {
			jule::I32 _141913_i = it - expr->begin();
			jule::Ptr<_2211b1a84_GenericDecl> *_141916_g = it;
			{
				if (_21da1d2a0_IsIgnoreIdent((*(_141916_g)).get()._field_Ident)) {
					_22124d747_pushErr(_self_, (*(_141916_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_20614a142;
				};
				_julec_label_duplicationLookup:;
				{
					auto expr = _141737_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20614b165:;
					if (it != expr_end) {
						jule::I32 _142817_j = it - expr->begin();
						jule::Ptr<_2211b1a84_GenericDecl> *_142820_ct = it;
						{
							{
								
								if ((_142817_j >= _141913_i)) {
									_case_begin_20614c6e9:;
									{
										goto _iter_end_20614b165;
									}
								}
								else if (((*(_141916_g)).get()._field_Ident == (*(_142820_ct)).get()._field_Ident)) {
									_case_begin_20614c771:;
									{
										_22124d747_pushErr(_self_, (*(_141916_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_141916_g)).get()._field_Ident, &__jule_any_type5)}));
										_22124da66_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_20614b165;
									}
								}
								_match_end_20614c5d9:;
							};
						}
						_iter_next_20614b165:;
						++it;
						_142817_j++;
						goto _iter_begin_20614b165;
					}
					_iter_end_20614b165:;
				};
			}
			_iter_next_20614a142:;
			++it;
			_141913_i++;
			goto _iter_begin_20614a142;
		}
		_iter_end_20614a142:;
	};
	return __jule_func_result;;
}



inline jule::Bool _22125b755_checkFnDeclParamsDup(_22124ad71_Sema* _self_, jule::Ptr<_2211d9ccc_Fn>* _144440_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto expr = &((*(_144440_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20614e8b6:;
		if (it != expr_end) {
			jule::I32 _144713_i = it - expr->begin();
			jule::Ptr<_2211d8490_Param> *_144716_p = it;
			{
				{
					auto expr = &((*(_144440_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_206150543:;
					if (it != expr_end) {
						jule::Ptr<_2211b1a84_GenericDecl> *_144920_g = it;
						{
							if (((*(_144716_p)).get()._field_Ident == (*(_144920_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_22124d747_pushErr(_self_, (*(_144716_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144716_p)).get()._field_Ident, &__jule_any_type5)}));
								_22124da66_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_20614e8b6;
							};
						}
						_iter_next_206150543:;
						++it;
						goto _iter_begin_206150543;
					}
					_iter_end_206150543:;
				};
				_julec_label_paramsLookup:;
				{
					auto expr = &((*(_144440_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_206151016:;
					if (it != expr_end) {
						jule::I32 _145917_j = it - expr->begin();
						jule::Ptr<_2211d8490_Param> *_145920_jp = it;
						{
							{
								
								if ((_145917_j >= _144713_i)) {
									_case_begin_206152a1d:;
									{
										goto _iter_end_206151016;
									}
								}
								else if (_21da1d2a0_IsIgnoreIdent((*(_144716_p)).get()._field_Ident) || _21da1d2a0_IsIgnoreIdent((*(_145920_jp)).get()._field_Ident) || _21da1d547_IsAnonIdent((*(_144716_p)).get()._field_Ident) || _21da1d547_IsAnonIdent((*(_145920_jp)).get()._field_Ident)) {
									_case_begin_206152a95:;
									{
										goto _iter_end_206151016;
									}
								}
								else if (((*(_144716_p)).get()._field_Ident == (*(_145920_jp)).get()._field_Ident)) {
									_case_begin_206152b1c:;
									{
										__jule_func_result=false;
										_22124d747_pushErr(_self_, (*(_144716_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144716_p)).get()._field_Ident, &__jule_any_type5)}));
										_22124da66_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_20614e8b6;
									}
								}
								_match_end_2061528ec:;
							};
						}
						_iter_next_206151016:;
						++it;
						_145917_j++;
						goto _iter_begin_206151016;
					}
					_iter_end_206151016:;
				};
			}
			_iter_next_20614e8b6:;
			++it;
			_144713_i++;
			goto _iter_begin_20614e8b6;
		}
		_iter_end_20614e8b6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _22125ba63_checkFnDeclResultDup(_22124ad71_Sema* _self_, jule::Ptr<_2211d9ccc_Fn>* _148140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_2211da23e_IsVoid((*(_148140_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_148140_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206155933:;
		if (it != expr_end) {
			jule::I32 _148813_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> *_148816_v = it;
			{
				if ((_21da1d2a0_IsIgnoreIdent((*(_148816_v)).get()._field_Kind) || _21da1d547_IsAnonIdent((*(_148816_v)).get()._field_Kind))) {
					goto _iter_next_206155933;
				};
				{
					auto expr = &((*(_148140_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_206156e73:;
					if (it != expr_end) {
						jule::Ptr<_2211b1a84_GenericDecl> *_149320_g = it;
						{
							if (((*(_148816_v)).get()._field_Kind == (*(_149320_g)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_206156e73:;
						++it;
						goto _iter_begin_206156e73;
					}
					_iter_end_206156e73:;
				};
				{
					auto expr = &((*(_148140_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_206158183:;
					if (it != expr_end) {
						jule::Ptr<_2211d8490_Param> *_149920_p = it;
						{
							if (((*(_148816_v)).get()._field_Kind == (*(_149920_p)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_206158183:;
						++it;
						goto _iter_begin_206158183;
					}
					_iter_end_206158183:;
				};
				_julec_label_itself_lookup:;
				{
					auto expr = &((*(_148140_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_206159393:;
					if (it != expr_end) {
						jule::I32 _150717_j = it - expr->begin();
						jule::Ptr<_21da1aa0b_Token> *_150720_jv = it;
						{
							{
								
								if ((_150717_j >= _148813_i)) {
									_case_begin_20615a097:;
									{
										goto _iter_end_206159393;
									}
								}
								else if (((*(_150720_jv)).get()._field_Kind == (*(_148816_v)).get()._field_Kind)) {
									_case_begin_20615a11e:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_206159e87:;
							};
						}
						_iter_next_206159393:;
						++it;
						_150717_j++;
						goto _iter_begin_206159393;
					}
					_iter_end_206159393:;
				};
				goto _iter_next_206155933;
				_julec_label_exist:;
				_22124d747_pushErr(_self_, (*(_148816_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_148816_v)).get()._field_Kind, &__jule_any_type5)}));
				_22124da66_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_206155933:;
			++it;
			_148813_i++;
			goto _iter_begin_206155933;
		}
		_iter_end_206155933:;
	};
	return __jule_func_result;;
}



inline jule::Bool _22125bd71_checkFnVariadicParam(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211d9ccc_Fn>* _152645_f) {
	if (((*(_152645_f)).get()._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_2211d8490_Param> _153017_param = (*(_152645_f)).get()._field_Params[((*(_152645_f)).get()._field_Params.len() - 1LL)];;
	if ((_153017_param.get()._field_Variadic && _153017_param.get()._field_Reference)) {
		_22124d747_pushErr(_self_.ptr(), _153017_param.get()._field_Token, jule::Str("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _22125c0e6_checkFnDeclPrototype(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211d9ccc_Fn>* _153945_f) {
	if (((*(_153945_f)).get()._field_Exceptional && (*(_153945_f)).get()._field_CppLinked)) {
		_22124d747_pushErr(_self_.ptr(), (*(_153945_f)).get()._field_Token, jule::Str("cpp-linked defines cannot be exceptional", 40), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_153945_f)).get()._field_Exceptional) {
		if (_2211da717_IsEntryPoint((*(_153945_f)).ptr())) {
			_22124d747_pushErr(_self_.ptr(), (*(_153945_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_2211da97b_IsInit((*(_153945_f)).ptr())) {
			_22124d747_pushErr(_self_.ptr(), (*(_153945_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_22125b447_checkDeclGenerics(_self_.ptr(), &((*(_153945_f)).get()._field_Generics))))) {
			_case_begin_206160025:;
		}
		else if ((!(_22125b755_checkFnDeclParamsDup(_self_.ptr(), _153945_f)))) {
			_case_begin_20616009c:;
		}
		else if ((!(_22125ba63_checkFnDeclResultDup(_self_.ptr(), _153945_f)))) {
			_case_begin_206161246:;
		}
		else if ((!(_22125bd71_checkFnVariadicParam(_self_, _153945_f)))) {
			_case_begin_2061612bd:;
		}
		_match_end_20615edb0:;
	};
}



inline jule::Bool _22125c547_catchTraitInheritCycle(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211ebeed_Trait> _156142_t1, jule::Ptr<_2211ebeed_Trait> _156158_t2, jule::Str* _156175_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &(_156158_t2.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206163259:;
		if (it != expr_end) {
			jule::Ptr<_221459c50_TypeSymbol> _156321_i = *it;
			{
				if ((_156321_i.get()._field_Kind == nullptr)) {
					goto _iter_next_206163259;
				};
				jule::Ptr<_2211ebeed_Trait> _156721_t3 = _221457258_Trait(_156321_i.get()._field_Kind.ptr());;
				if ((_156142_t1 == _156721_t3)) {
					_221261cbb_pushCycleError(_self_.ptr(), &(_156158_t2.get()._field_Ident), &(_156721_t3.get()._field_Ident), _156175_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_22125c547_catchTraitInheritCycle(_self_, _156142_t1, _156721_t3, _156175_message)))) {
					_221261cbb_pushCycleError(_self_.ptr(), &(_156158_t2.get()._field_Ident), &(_156721_t3.get()._field_Ident), _156175_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_206163259:;
			++it;
			goto _iter_begin_206163259;
		}
		_iter_end_206163259:;
	};
	return __jule_func_result;;
}



inline jule::Bool _22125c877__checkTraitDeclInherits(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211ebeed_Trait>* _158048_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_158048_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206165ea4:;
		if (it != expr_end) {
			jule::I32 _158214_i = it - expr->begin();
			jule::Ptr<_221459c50_TypeSymbol> _158221_it = *it;
			{
				if ((!(_221253d57_checkType(_self_, &(_158221_it), jule::Trait<_22147198c_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_206165ea4;
				};
				jule::Ptr<_2211ebeed_Trait> _158721_t2 = _221457258_Trait(_158221_it.get()._field_Kind.ptr());;
				if ((_158721_t2 == nullptr)) {
					_22124d747_pushErr(_self_.ptr(), _158221_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*(_158048_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_221453793_Str(_158221_it.get()._field_Kind.ptr()), &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_206165ea4;
				};
				{
					auto expr = &((*(_158048_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_206167a22:;
					if (it != expr_end) {
						jule::I32 _159317_j = it - expr->begin();
						jule::Ptr<_221459c50_TypeSymbol> _159320_it2 = *it;
						{
							if ((_159317_j >= _158214_i)) {
								goto _iter_end_206167a22;
							};
							if (((_159320_it2.get()._field_Kind != nullptr) && _221453aa1_Equal(_158221_it.get()._field_Kind, _159320_it2.get()._field_Kind))) {
								_22124d747_pushErr(_self_.ptr(), _158221_it.get()._field_Decl.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_158721_t2.get()._field_Ident, &__jule_any_type5)}));
								__jule_func_result=false;
								goto _iter_end_206167a22;
							};
						}
						_iter_next_206167a22:;
						++it;
						_159317_j++;
						goto _iter_begin_206167a22;
					}
					_iter_end_206167a22:;
				};
				if (((*(_158048_t)) == _158721_t2)) {
					_22124d747_pushErr(_self_.ptr(), _158221_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_158048_t)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				} else {
					jule::Str _160725_message = jule::Str();;
					__jule_func_result=(__jule_func_result && _22125c547_catchTraitInheritCycle(_self_, (*(_158048_t)), _158721_t2, &(_160725_message)));
					if ((_160725_message.len() > 0LL)) {
						jule::Str _161029_errMsg = _160725_message;;
						_160725_message=jule::Str();
						_221261cbb_pushCycleError(_self_.ptr(), &((*(_158048_t)).get()._field_Ident), &(_158721_t2.get()._field_Ident), &(_160725_message));
						_161029_errMsg+=_160725_message;
						_22124d747_pushErr(_self_.ptr(), _158221_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_161029_errMsg, &__jule_any_type5)}));
					};
				};
			}
			_iter_next_206165ea4:;
			++it;
			_158214_i++;
			goto _iter_begin_206165ea4;
		}
		_iter_end_206165ea4:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _22125cb0d_checkTraitDeclInherits(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211ebeed_Trait>* _162147_t) {
	{
		auto expr = &((*(_162147_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20616b6b3:;
		if (it != expr_end) {
			jule::I32 _162214_i = it - expr->begin();
			jule::Ptr<_221459c50_TypeSymbol> _162221_it = *it;
			{
				jule::Ptr<_2211ebeed_Trait> _162321_t1 = _221457258_Trait(_162221_it.get()._field_Kind.ptr());;
				{
					auto expr = &((*(_162147_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20616eab2:;
					if (it != expr_end) {
						jule::I32 _162418_j = it - expr->begin();
						jule::Ptr<_221459c50_TypeSymbol> _162425_it2 = *it;
						{
							if ((_162418_j == _162214_i)) {
								goto _iter_next_20616eab2;
							};
							jule::Ptr<_2211ebeed_Trait> _162825_t2 = _221457258_Trait(_162425_it2.get()._field_Kind.ptr());;
							{
								auto expr = &(_162321_t1.get()._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_206171069:;
								if (it != expr_end) {
									jule::Ptr<_2211d9ccc_Fn> _162929_t1m = *it;
									{
										jule::Ptr<_2211d9ccc_Fn> _163029_t2m = _2211ecd9a_FindMethod(_162825_t2.ptr(), _162929_t1m.get()._field_Ident);;
										if ((_163029_t2m == nullptr)) {
											goto _iter_next_206171069;
										};
										jule::Ptr<_2211dc97d_FnIns> _163425_t1f = _221256ab3_getTraitCheckFnKind(_self_, &(_162929_t1m));;
										jule::Ptr<_2211dc97d_FnIns> _163525_t2f = _221256ab3_getTraitCheckFnKind(_self_, &(_163029_t2m));;
										if ((!(_2211dd83b_equalTrait(_163425_t1f, &(_163525_t2f))))) {
											_22124d747_pushErr(_self_.ptr(), _162221_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*(_162147_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_162825_t2.get()._field_Ident, &__jule_any_type5),jule::Any(_2211de694_GetKindStr(_163425_t1f.ptr(), true), &__jule_any_type5),jule::Any(_2211de694_GetKindStr(_163525_t2f.ptr(), true), &__jule_any_type5)}));
											return;;
										};
									}
									_iter_next_206171069:;
									++it;
									goto _iter_begin_206171069;
								}
								_iter_end_206171069:;
							};
						}
						_iter_next_20616eab2:;
						++it;
						_162418_j++;
						goto _iter_begin_20616eab2;
					}
					_iter_end_20616eab2:;
				};
			}
			_iter_next_20616b6b3:;
			++it;
			_162214_i++;
			goto _iter_begin_20616b6b3;
		}
		_iter_end_20616b6b3:;
	};
}



inline void _22125cd83_checkTraitDeclMethod(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211d9ccc_Fn>* _164645_f) {
	if (_21da1d2a0_IsIgnoreIdent((*(_164645_f)).get()._field_Ident)) {
		_22124d747_pushErr(_self_.ptr(), (*(_164645_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_21da1d547_IsAnonIdent((*(_164645_f)).get()._field_Ident)) {
		_22124d747_pushErr(_self_.ptr(), (*(_164645_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*(_164645_f)).get()._field_sema=_self_;
	_22125c0e6_checkFnDeclPrototype(_self_, _164645_f);
	jule::Ptr<_2211dc97d_FnIns> _165417_ins = _2211db42c_instance((*(_164645_f)));;
	_221257da0_reloadFnInsTypes(_self_, _165417_ins);
	_165417_ins.get()._field_reloaded=true;
	_2211db707_appendInstance((*(_164645_f)).ptr(), &(_165417_ins));
}



inline void _22125d108_checkTraitDeclMethods(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211ebeed_Trait>* _166046_t) {
	{
		auto expr = &((*(_166046_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061764e2:;
		if (it != expr_end) {
			jule::I32 _166114_i = it - expr->begin();
			jule::Ptr<_2211d9ccc_Fn> _166121_f = *it;
			{
				_22125cd83_checkTraitDeclMethod(_self_, &(_166121_f));
				(*(_166046_t)).get()._field_Mutable=((*(_166046_t)).get()._field_Mutable || _166121_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_2211ed4b6_findMethodInherit((*(_166046_t)).ptr(), &(_166121_f.get()._field_Ident)) != nullptr)) {
					_22124d747_pushErr(_self_.ptr(), _166121_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_166121_f.get()._field_Ident, &__jule_any_type5)}));
					_22124da66_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_2061764e2;
				};
				_julec_label_duplicateLookup:;
				{
					auto expr = &((*(_166046_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2061792b4:;
					if (it != expr_end) {
						jule::I32 _167817_j = it - expr->begin();
						jule::Ptr<_2211d9ccc_Fn> _167820_jf = *it;
						{
							{
								
								if ((_167817_j >= _166114_i)) {
									_case_begin_20617a1a5:;
									{
										goto _iter_end_2061792b4;
									}
								}
								else if ((_166121_f.get()._field_Ident == _167820_jf.get()._field_Ident)) {
									_case_begin_20617a22c:;
									{
										_22124d747_pushErr(_self_.ptr(), _166121_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_166121_f.get()._field_Ident, &__jule_any_type5)}));
										_22124da66_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_2061792b4;
									}
								}
								_match_end_20617a095:;
							};
						}
						_iter_next_2061792b4:;
						++it;
						_167817_j++;
						goto _iter_begin_2061792b4;
					}
					_iter_end_2061792b4:;
				};
			}
			_iter_next_2061764e2:;
			++it;
			_166114_i++;
			goto _iter_begin_2061764e2;
		}
		_iter_end_2061764e2:;
	};
}



inline void _22125d37d_checkTraitDecl(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211ebeed_Trait>* _169739_t) {
	if (_21da1d2a0_IsIgnoreIdent((*(_169739_t)).get()._field_Ident)) {
		_22124d747_pushErr(_self_.ptr(), (*(_169739_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_22124e36e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_169739_t)))), (*(_169739_t)).get()._field_Ident, false)) {
		_22124d747_pushErr(_self_.ptr(), (*(_169739_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_169739_t)).get()._field_Ident, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_22125cb0d_checkTraitDeclInherits(_self_, _169739_t);
	_22125d108_checkTraitDeclMethods(_self_, _169739_t);
}



inline jule::Bool _22125d5e2_checkTraitDecls(jule::Ptr<_22124ad71_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20617de12:;
		if (it != expr_end) {
			jule::Ptr<_2211ebeed_Trait> _171121_t = *it;
			{
				_22125d37d_checkTraitDecl(_self_, &(_171121_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_20617de12:;
			++it;
			goto _iter_begin_20617de12;
		}
		_iter_end_20617de12:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _22125d999_checkTraitImplMethods(_22124ad71_Sema* _self_, jule::Ptr<_2211ebeed_Trait>* _172145_base, jule::Ptr<_22121e0ca_Impl>* _172160_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_172160_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20618081a:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> *_172316_f = it;
			{
				if ((_2211ecd9a_FindMethod((*(_172145_base)).ptr(), (*(_172316_f)).get()._field_Ident) == nullptr)) {
					_22124d747_pushErr(_self_, (*(_172316_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_172145_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_172316_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_20618081a:;
			++it;
			goto _iter_begin_20618081a;
		}
		_iter_end_20618081a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _22125dd51_implToStruct(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c48cc_Struct>* _173237_dest, jule::Ptr<_22121e0ca_Impl>* _173257_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_173257_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061829b5:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _173621_f = *it;
			{
				if (((_2211c54c1_FindMethod((*(_173237_dest)).ptr(), _173621_f.get()._field_Ident, _173621_f.get()._field_Statically) != nullptr) || (_2211c5adc_FindField((*(_173237_dest)).ptr(), _173621_f.get()._field_Ident) != nullptr))) {
					_22124d747_pushErr(_self_.ptr(), _173621_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_173237_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_173621_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_2061829b5;
				};
				if ((((*(_173237_dest)).get()._field_Generics.len() > 0LL) && (_173621_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_173621_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_206184e29:;
						if (it != expr_end) {
							jule::Ptr<_2211b1a84_GenericDecl> _174424_fg = *it;
							{
								{
									auto expr = &((*(_173237_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_206185710:;
									if (it != expr_end) {
										jule::Ptr<_2211b1a84_GenericDecl> _174528_dg = *it;
										{
											if ((_174424_fg.get()._field_Ident == _174528_dg.get()._field_Ident)) {
												_22124d747_pushErr(_self_.ptr(), _174424_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_206185710:;
										++it;
										goto _iter_begin_206185710;
									}
									_iter_end_206185710:;
								};
							}
							_iter_next_206184e29:;
							++it;
							goto _iter_begin_206184e29;
						}
						_iter_end_206184e29:;
					};
				};
				_22124e68d_checkDirectives(_self_, &(_173621_f.get()._field_Directives), jule::Any(_173621_f, &__jule_any_type65));
				_173621_f.get()._field_sema=_self_;
				_173621_f.get()._field_Owner=(*(_173237_dest));
				(*(_173237_dest)).get()._field_Methods = jule::alloc_for_append((*(_173237_dest)).get()._field_Methods,1);(*(_173237_dest)).get()._field_Methods.__push(_173621_f);;
			}
			_iter_next_2061829b5:;
			++it;
			goto _iter_begin_2061829b5;
		}
		_iter_end_2061829b5:;
	};
	{
		auto expr = &((*(_173257_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206187d3e:;
		if (it != expr_end) {
			jule::Ptr<_22126b17c_Var> _176121_v = *it;
			{
				;
				if (((_2211c54c1_FindMethod((*(_173237_dest)).ptr(), _176121_v.get()._field_Ident, true) != nullptr) || (_2211c57ce_FindStatic((*(_173237_dest)).ptr(), _176121_v.get()._field_Ident) != nullptr))) {
					_22124d747_pushErr(_self_.ptr(), _176121_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_173237_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_176121_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_206187d3e;
				};
				(*(_173237_dest)).get()._field_Statics = jule::alloc_for_append((*(_173237_dest)).get()._field_Statics,1);(*(_173237_dest)).get()._field_Statics.__push(_176121_v);;
			}
			_iter_next_206187d3e:;
			++it;
			goto _iter_begin_206187d3e;
		}
		_iter_end_206187d3e:;
	};
	return __jule_func_result;;
}



inline void _22125e0c6_implTrait(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22121e0ca_Impl>* _177434_decl) {
	jule::Ptr<_221453397_TypeKind> _177517_base_t = _2212548c4_selectType(_self_, &((*(_177434_decl)).get()._field_Base));;
	if ((_177517_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_2211ebeed_Trait> _177917_base = _221457258_Trait(_177517_base_t.ptr());;
	if ((_177917_base == nullptr)) {
		_22124d747_pushErr(_self_.ptr(), (*(_177434_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_177517_base_t.ptr()), &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_221453397_TypeKind> _178617_destT = _2212548c4_selectType(_self_, &((*(_177434_decl)).get()._field_Dest));;
	if ((_178617_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_2211c76e3_StructIns> _179017_destS = _221456ee4_Struct(_178617_destT.ptr());;
	if ((_179017_destS == nullptr)) {
		_22124d747_pushErr(_self_.ptr(), (*(_177434_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_178617_destT.ptr()), &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2211c48cc_Struct> _179717_dest = _179017_destS.get()._field_Decl;;
	if ((_21da2178c_Dir(_179717_dest.get()._field_Token.get()._field_File.ptr()) != _21da2178c_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_22124d747_pushErr(_self_.ptr(), (*(_177434_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_221269664_pushImplemented(_177917_base, &(_179717_dest));
	_22126991c_pushImplements(&(_179717_dest), _177917_base);
	if (((*(_177434_decl)).get()._field_Statics.len() > 0LL)) {
		_22124d747_pushErr(_self_.ptr(), (*(_177434_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_22125d999_checkTraitImplMethods(_self_.ptr(), &(_177917_base), _177434_decl)))) {
			_case_begin_206191551:;
		}
		else if ((!(_22125dd51_implToStruct(_self_, &(_179717_dest), _177434_decl)))) {
			_case_begin_2061915c8:;
		}
		_match_end_20618e84b:;
	};
}



inline void _22125e34b_implStruct(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22121e0ca_Impl>* _181735_decl) {
	jule::Ptr<_221453397_TypeKind> _181817_destT = _2212548c4_selectType(_self_, &((*(_181735_decl)).get()._field_Dest));;
	if ((_181817_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_2211c76e3_StructIns> _182217_destS = _221456ee4_Struct(_181817_destT.ptr());;
	if ((_182217_destS == nullptr)) {
		_22124d747_pushErr(_self_.ptr(), (*(_181735_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_181817_destT.ptr()), &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2211c48cc_Struct> _182917_dest = _182217_destS.get()._field_Decl;;
	if ((_21da2178c_Dir(_182917_dest.get()._field_Token.get()._field_File.ptr()) != _21da2178c_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_22124d747_pushErr(_self_.ptr(), (*(_181735_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_22125dd51_implToStruct(_self_, &(_182917_dest), _181735_decl)))) {
			_case_begin_206195a50:;
		}
		_match_end_206193597:;
	};
}



inline void _22125e5c1_implImpl(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22121e0ca_Impl>* _184133_decl) {
	{
		
		if (_22121e4c6_IsTraitImpl((*(_184133_decl)).ptr())) {
			_case_begin_20619659a:;
			{
				_22125e0c6_implTrait(_self_, _184133_decl);
			}
		}
		else if (_22121e73a_IsStructImpl((*(_184133_decl)).ptr())) {
			_case_begin_206196622:;
			{
				_22125e34b_implStruct(_self_, _184133_decl);
			}
		}
		_match_end_20619648a:;
	};
}



inline void _22125e8e0_checkVarDecl(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22126b17c_Var>* _185237_decl, jule::Trait<_22147198c_Lookup> _185253_l) {
	if (_21da1d2a0_IsIgnoreIdent((*(_185237_decl)).get()._field_Ident)) {
		_22124d747_pushErr(_self_.ptr(), (*(_185237_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_22126b7a9_IsTypeInferred((*(_185237_decl)).ptr())) {
		if ((!(_22126b545_IsInitialized((*(_185237_decl)).ptr())))) {
			_22124d747_pushErr(_self_.ptr(), (*(_185237_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_221253d57_checkType(_self_, &((*(_185237_decl)).get()._field_Kind), _185253_l);
	};
	if (((*(_185237_decl)).get()._field_Constant && (*(_185237_decl)).get()._field_Reference)) {
		_22124d747_pushErr(_self_.ptr(), (*(_185237_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_22126b545_IsInitialized((*(_185237_decl)).ptr())))) {
		if ((*(_185237_decl)).get()._field_Constant) {
			_22124d747_pushErr(_self_.ptr(), (*(_185237_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_185237_decl)).get()._field_Statically) {
			_22124d747_pushErr(_self_.ptr(), (*(_185237_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_185237_decl)).get()._field_Reference) {
			_22124d747_pushErr(_self_.ptr(), (*(_185237_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _22125eb65_checkGlobalVarDecl(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22126b17c_Var>* _188443_decl) {
	if (_22124e36e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_188443_decl)))), (*(_188443_decl)).get()._field_Ident, (*(_188443_decl)).get()._field_CppLinked)) {
		_22124d747_pushErr(_self_.ptr(), (*(_188443_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_188443_decl)).get()._field_Ident, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_188443_decl)).get()._field_CppLinked && (*(_188443_decl)).get()._field_Constant)) {
		_22124d747_pushErr(_self_.ptr(), (*(_188443_decl)).get()._field_Token, jule::Str("cpp linked variables cannot be constant", 39), jule::Slice<jule::Any>());
	};
	if ((((!((*(_188443_decl)).get()._field_CppLinked)) && (!((*(_188443_decl)).get()._field_Constant))) && (!((*(_188443_decl)).get()._field_Statically)))) {
		_22124d747_pushErr(_self_.ptr(), (*(_188443_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_22124da66_pushSuggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_22124e68d_checkDirectives(_self_, &((*(_188443_decl)).get()._field_Directives), jule::Any((*(_188443_decl)), &__jule_any_type8));
	_22125e8e0_checkVarDecl(_self_, _188443_decl, jule::Trait<_22147198c_Lookup>(_self_, 3));
}



inline jule::Bool _22125edc9_checkGlobalDecls(jule::Ptr<_22124ad71_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061a0087:;
		if (it != expr_end) {
			jule::Ptr<_22126b17c_Var> _190221_decl = *it;
			{
				_22125eb65_checkGlobalVarDecl(_self_, &(_190221_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_2061a0087:;
			++it;
			goto _iter_begin_2061a0087;
		}
		_iter_end_2061a0087:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _221260281_checkStructTraitImpl(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c48cc_Struct>* _191245_strct, jule::Ptr<_2211ebeed_Trait>* _191266_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_191266_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061a1819:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _191321_tf = *it;
			{
				jule::Bool _191421_exist = false;;
				jule::Ptr<_2211d9ccc_Fn> _191521_sf = _2211c54c1_FindMethod((*(_191245_strct)).ptr(), _191321_tf.get()._field_Ident, _191321_tf.get()._field_Statically);;
				jule::Ptr<_2211dc97d_FnIns> _191617_tfK = _221256ab3_getTraitCheckFnKind(_self_, &(_191321_tf));;
				if ((_191521_sf != nullptr)) {
					jule::Ptr<_2211dc97d_FnIns> _191825_sfK = _221256ab3_getTraitCheckFnKind(_self_, &(_191521_sf));;
					_191421_exist=_2211dd83b_equalTrait(_191617_tfK, &(_191825_sfK));
				};
				if (_191421_exist) {
					jule::Ptr<_221171307_Directive> _192221_d = _22144c407_findDirective(&(_191521_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_192221_d != nullptr)) {
						_22124d747_pushErr(_self_.ptr(), _192221_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_22124d747_pushErr(_self_.ptr(), (*(_191245_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_191266_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_2211de694_GetKindStr(_191617_tfK.ptr(), true), &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_2061a1819:;
			++it;
			goto _iter_begin_2061a1819;
		}
		_iter_end_2061a1819:;
	};
	return __jule_func_result;;
}



inline jule::Bool _22126058e_checkStructImpls(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c48cc_Struct>* _193641_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_193641_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061a69b7:;
		if (it != expr_end) {
			jule::Ptr<_2211ebeed_Trait> _193821_trt = *it;
			{
				__jule_func_result=(_221260281_checkStructTraitImpl(_self_, _193641_s, &(_193821_trt)) && __jule_func_result);
			}
			_iter_next_2061a69b7:;
			++it;
			goto _iter_begin_2061a69b7;
		}
		_iter_end_2061a69b7:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _22126089c_checkStructFields(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c48cc_Struct>* _194442_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_194442_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061a7d09:;
		if (it != expr_end) {
			jule::Ptr<_2211c1d08_Field> _194621_f = *it;
			{
				_194621_f.get()._field_Owner=(*(_194442_st));
				{
					auto expr = &((*(_194442_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2061a8854:;
					if (it != expr_end) {
						jule::Ptr<_2211c1d08_Field> _194820_cf = *it;
						{
							if ((_194621_f == _194820_cf)) {
								goto _iter_end_2061a8854;
							} else if ((_194621_f.get()._field_Ident == _194820_cf.get()._field_Ident)) {
								_22124d747_pushErr(_self_.ptr(), _194621_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_194621_f.get()._field_Ident, &__jule_any_type5)}));
								_22124da66_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_2061a8854:;
						++it;
						goto _iter_begin_2061a8854;
					}
					_iter_end_2061a8854:;
				};
			}
			_iter_next_2061a7d09:;
			++it;
			goto _iter_begin_2061a7d09;
		}
		_iter_end_2061a7d09:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _221260b22_checkStructDecl(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c48cc_Struct>* _196140_s) {
	if (_21da1d2a0_IsIgnoreIdent((*(_196140_s)).get()._field_Ident)) {
		_22124d747_pushErr(_self_.ptr(), (*(_196140_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_22124e36e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_196140_s)))), (*(_196140_s)).get()._field_Ident, (*(_196140_s)).get()._field_CppLinked)) {
		_22124d747_pushErr(_self_.ptr(), (*(_196140_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_196140_s)).get()._field_Ident, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_22124e68d_checkDirectives(_self_, &((*(_196140_s)).get()._field_Directives), jule::Any((*(_196140_s)), &__jule_any_type66));
	{
		
		if ((!(_22125b447_checkDeclGenerics(_self_.ptr(), &((*(_196140_s)).get()._field_Generics))))) {
			_case_begin_2061ac160:;
		}
		else if ((!(_22126089c_checkStructFields(_self_, _196140_s)))) {
			_case_begin_2061ac1c6:;
		}
		else if ((!(_22126058e_checkStructImpls(_self_, _196140_s)))) {
			_case_begin_2061ac23c:;
		}
		else if ((!(_22126168e_checkFuncDecls(_self_, &((*(_196140_s)).get()._field_Methods))))) {
			_case_begin_2061ac2a3:;
		}
		_match_end_2061ac050:;
	};
}



inline jule::Bool _221260d86_checkStructDecls(jule::Ptr<_22124ad71_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061ad99c:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> _198121_s = *it;
			{
				_221260b22_checkStructDecl(_self_, &(_198121_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_2061ad99c:;
			++it;
			goto _iter_begin_2061ad99c;
		}
		_iter_end_2061ad99c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _22126110b_checkAnonFnDecl(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211d9ccc_Fn>* _199140_f) {
	(*(_199140_f)).get()._field_sema=_self_;
	_22125c0e6_checkFnDeclPrototype(_self_, _199140_f);
}



inline void _221261381_checkFnDecl(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211d9ccc_Fn>* _199636_f) {
	if (_21da1d2a0_IsIgnoreIdent((*(_199636_f)).get()._field_Ident)) {
		_22124d747_pushErr(_self_.ptr(), (*(_199636_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_2211dabe0_IsAnon((*(_199636_f)).ptr())) {
		_22124d747_pushErr(_self_.ptr(), (*(_199636_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_22124e68d_checkDirectives(_self_, &((*(_199636_f)).get()._field_Directives), jule::Any((*(_199636_f)), &__jule_any_type65));
	_22126110b_checkAnonFnDecl(_self_, _199636_f);
	if ((((*(_199636_f)).get()._field_Owner == nullptr) && _22124e36e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_199636_f)))), (*(_199636_f)).get()._field_Ident, (*(_199636_f)).get()._field_CppLinked))) {
		if ((*(_199636_f)).get()._field_Ident.equal("init", 4)) {
			jule::Ptr<_2211d9ccc_Fn> _200821_init = _22124c2b2_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_200821_init != nullptr)) {
				return;;
			};
		};
		_22124d747_pushErr(_self_.ptr(), (*(_199636_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_199636_f)).get()._field_Ident, &__jule_any_type5)}));
		_22124da66_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _22126168e_checkFuncDecls(jule::Ptr<_22124ad71_Sema> _self_, jule::Slice<jule::Ptr<_2211d9ccc_Fn>>* _201839_funcs) {
	{
		auto expr = _201839_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061b451e:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _201921_f = *it;
			{
				_221261381_checkFnDecl(_self_, &(_201921_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_2061b451e:;
			++it;
			goto _iter_begin_2061b451e;
		}
		_iter_end_2061b451e:;
	};
	return true;;
}



inline jule::Bool _221261903_checkFnDecls(jule::Ptr<_22124ad71_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _22126168e_checkFuncDecls(_self_, &(_self_.get()._field_file.get()._field_Funcs));
	return __jule_func_result;;
}



inline void _221261cbb_pushCycleError(_22124ad71_Sema* _self_, jule::Str* _203430_st1, jule::Str* _203441_st2, jule::Str* _203456_message) {
	;
	jule::Str _203613_refers_to = _21d675a2e_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_203430_st1)), &__jule_any_type5),jule::Any((*(_203441_st2)), &__jule_any_type5)}));;
	((*(_203456_message))).buffer.insert(0, (((_21d5d3ecb_Repeat(jule::Str(" ", 1), 7LL) + _203613_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _22126221c_checkCrossCycle(_22124ad71_Sema* _self_, jule::Ptr<_2211c48cc_Struct>* _204031_st1, jule::Ptr<_2211c48cc_Struct>* _204046_st2, jule::Str* _204065_message) {
	{
		auto expr = &((*(_204046_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061b7d2a:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> *_204116_u = it;
			{
				if (((*(_204116_u)) == (*(_204031_st1)))) {
					_221261cbb_pushCycleError(_self_, &((*(_204046_st2)).get()._field_Ident), &((*(_204116_u)).get()._field_Ident), _204065_message);
					return false;;
				};
				if ((!(_22126221c_checkCrossCycle(_self_, _204031_st1, _204116_u, _204065_message)))) {
					_221261cbb_pushCycleError(_self_, &((*(_204046_st2)).get()._field_Ident), &((*(_204116_u)).get()._field_Ident), _204065_message);
					return false;;
				};
			}
			_iter_next_2061b7d2a:;
			++it;
			goto _iter_begin_2061b7d2a;
		}
		_iter_end_2061b7d2a:;
	};
	return true;;
}



inline jule::Bool _221262690_checkStructDeriveIllegalCycles(_22124ad71_Sema* _self_, jule::Str _205449_derive, jule::Ptr<_2211c48cc_Struct>* _205463_st1, jule::Ptr<_221453397_TypeKind>* _205482_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2211c48cc_Struct> _205517_st2 = _22146de0c_getStructFromKind((*(_205482_k)));;
	if ((_205517_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_205463_st1)) == _205517_st2)) {
		_22124d747_pushErr(_self_, (*(_205463_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_205449_derive, &__jule_any_type5),jule::Any((*(_205463_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _206717_message = jule::Str();;
	if ((!(_22126221c_checkCrossCycle(_self_, _205463_st1, &(_205517_st2), &(_206717_message))))) {
		jule::Str _206921_errMsg = _206717_message;;
		_206717_message=jule::Str();
		_221261cbb_pushCycleError(_self_, &((*(_205463_st1)).get()._field_Ident), &(_205517_st2.get()._field_Ident), &(_206717_message));
		_206921_errMsg+=_206717_message;
		_22124d747_pushErr(_self_, (*(_205463_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_205449_derive, &__jule_any_type5),jule::Any(_206921_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _2212629d1_checkStructInsDeriveClone(_22124ad71_Sema* _self_, jule::Ptr<_2211c76e3_StructIns> _207948_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_2211c6208_IsDerives(_207948_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_207948_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061bd803:;
		if (it != expr_end) {
			jule::Ptr<_2211c6bed_FieldIns> _208321_f = *it;
			{
				if ((_208321_f.get()._field_Kind == nullptr)) {
					goto _iter_next_2061bd803;
				};
				if ((!(_2214555b9_SupportsCloning(_208321_f.get()._field_Kind.ptr())))) {
					_22124d747_pushErr(_self_, _207948_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_208321_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_221262690_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_207948_st.get()._field_Decl), &(_208321_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_2061bd803:;
			++it;
			goto _iter_begin_2061bd803;
		}
		_iter_end_2061bd803:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _221262bbd_checkPackageDecls(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061c12d9:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _210121_f = *it;
			{
				_22124d37e_setCurrentFile(_self_.ptr(), _210121_f);
				if ((!(_2212595bb_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_2061c12d9:;
			++it;
			goto _iter_begin_2061c12d9;
		}
		_iter_end_2061c12d9:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061c1eaa:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _210821_f = *it;
			{
				_22124d37e_setCurrentFile(_self_.ptr(), _210821_f);
				if ((!(_22125d5e2_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_2061c1eaa:;
			++it;
			goto _iter_begin_2061c1eaa;
		}
		_iter_end_2061c1eaa:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061c2b04:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _211521_f = *it;
			{
				_22124d37e_setCurrentFile(_self_.ptr(), _211521_f);
				if ((!(_22125edc9_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_2061c2b04:;
			++it;
			goto _iter_begin_2061c2b04;
		}
		_iter_end_2061c2b04:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061c2494:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _212221_f = *it;
			{
				_22124d37e_setCurrentFile(_self_.ptr(), _212221_f);
				{
					
					if ((!(_221261903_checkFnDecls(_self_)))) {
						_case_begin_2061c4342:;
					}
					else if ((!(_221260d86_checkStructDecls(_self_)))) {
						_case_begin_2061c43a8:;
					}
					else {
						_case_begin_2061c42cb:;
						{
							goto _iter_next_2061c2494;
						}
					}
					_match_end_2061c4265:;
				};
				return;;
			}
			_iter_next_2061c2494:;
			++it;
			goto _iter_begin_2061c2494;
		}
		_iter_end_2061c2494:;
	};
}



inline void _22126300e_checkDataForTypeInference(_22124ad71_Sema* _self_, jule::Ptr<_221425c2c_Data>* _213445_d, jule::Ptr<_21da1aa0b_Token>* _213456_err_token) {
	{
		
		if (_221426117_IsNil((*(_213445_d)).ptr())) {
			_case_begin_2061c52cc:;
			{
				_22124d747_pushErr(_self_, (*(_213456_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_22142637b_IsVoid((*(_213445_d)).ptr())) {
			_case_begin_2061c5354:;
			{
				_22124d747_pushErr(_self_, (*(_213456_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_213445_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_2061c53cb:;
			{
				_22124d747_pushErr(_self_, (*(_213456_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_2061c51ab:;
	};
}



inline void _221263295_checkVar(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22126b17c_Var>* _214533_v) {
	if ((*(_214533_v)).get()._field_CppLinked) {
		return;;
	};
	if (_22126b7a9_IsTypeInferred((*(_214533_v)).ptr())) {
		(*(_214533_v)).get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=(*(_214533_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_22126300e_checkDataForTypeInference(_self_.ptr(), &((*(_214533_v)).get()._field_Value.get()._field_Data), &((*(_214533_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_2212588ea_checkValidityForInitExpr(_self_, (*(_214533_v)).get()._field_Mutable, (*(_214533_v)).get()._field_Reference, &((*(_214533_v)).get()._field_Kind.get()._field_Kind), &((*(_214533_v)).get()._field_Value.get()._field_Data), &((*(_214533_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_22146195a_Arr> _216221_arr = _2214567a7_Arr((*(_214533_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_216221_arr != nullptr)) {
			if (_216221_arr.get()._field_Auto) {
				jule::Ptr<_22146195a_Arr> _216525_dataArr = _2214567a7_Arr((*(_214533_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_216525_dataArr != nullptr)) {
					_216221_arr.get()._field_N=_216525_dataArr.get()._field_N;
				};
			};
		};
		if (_2212559d5_checkAssignType(_self_, (*(_214533_v)).get()._field_Reference, &((*(_214533_v)).get()._field_Kind.get()._field_Kind), &((*(_214533_v)).get()._field_Value.get()._field_Data), (*(_214533_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_2212588ea_checkValidityForInitExpr(_self_, (*(_214533_v)).get()._field_Mutable, (*(_214533_v)).get()._field_Reference, &((*(_214533_v)).get()._field_Kind.get()._field_Kind), &((*(_214533_v)).get()._field_Value.get()._field_Data), &((*(_214533_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_214533_v)).get()._field_Reference && (!(_22146d26e_isValidForRef(&((*(_214533_v)).get()._field_Kind.get()._field_Kind)))))) {
		_22124d747_pushErr(_self_.ptr(), (*(_214533_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_214533_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_214533_v)).get()._field_Constant) {
		jule::Bool _218717_comptime = _221457995_comptime((*(_214533_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
		if (((!(_2214265e0_IsConst((*(_214533_v)).get()._field_Value.get()._field_Data.ptr()))) && (!(_218717_comptime)))) {
			_22124d747_pushErr(_self_.ptr(), (*(_214533_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_218717_comptime && (_221458b83_comptimeRange((*(_214533_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()) != nullptr))) {
			_22124d747_pushErr(_self_.ptr(), (*(_214533_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_214533_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		(*(_214533_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_221457731_Tup((*(_214533_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_214533_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _2212635b4_checkTypeVar(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_22126b17c_Var>* _220437_decl, jule::Trait<_22147198c_Lookup> _220453_l) {
	if (((*(_220437_decl)).get()._field_CppLinked || (!(_22126b545_IsInitialized((*(_220437_decl)).ptr()))))) {
		return;;
	};
	jule::Ptr<_22142779a_Eval> _220917_eval = nullptr;;
	if (((*(_220437_decl)).get()._field_Kind != nullptr)) {
		_220917_eval=_221254d25_evalpd(_self_, _220453_l, (*(_220437_decl)).get()._field_Kind.get()._field_Kind, (*(_220437_decl)));
	} else {
		_220917_eval=_221254d25_evalpd(_self_, _220453_l, nullptr, (*(_220437_decl)));
	};
	_220917_eval.get()._field_immutable=(!((*(_220437_decl)).get()._field_Mutable));
	(*(_220437_decl)).get()._field_Value.get()._field_Data=_221444267_evalExpr(_220917_eval, (*(_220437_decl)).get()._field_Value.get()._field_Expr);
	if (((*(_220437_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_221263295_checkVar(_self_, _220437_decl);
}



inline void _221263790_checkGlobalTypes(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061d583c:;
		if (it != expr_end) {
			jule::Ptr<_22126b17c_Var> _222521_decl = *it;
			{
				if (((_22126b545_IsInitialized(_222521_decl.ptr()) && (_222521_decl.get()._field_Value.get()._field_Data == nullptr)) || (_22126b7a9_IsTypeInferred(_222521_decl.ptr()) && (_222521_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_2212635b4_checkTypeVar(_self_, &(_222521_decl), jule::Trait<_22147198c_Lookup>(_self_, 3));
				};
			}
			_iter_next_2061d583c:;
			++it;
			goto _iter_begin_2061d583c;
		}
		_iter_end_2061d583c:;
	};
}



inline jule::Ptr<_2211dc97d_FnIns> _221263b47_readyToCheckFn(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c76e3_StructIns>* _223639_s, jule::Ptr<_2211d9ccc_Fn>* _223659_f) {
	jule::Ptr<_2211dc97d_FnIns> _223717_ins = _2211db42c_instance((*(_223659_f)));;
	if (((*(_223659_f)).get()._field_Instances.len() != 0LL)) {
		return _223717_ins;;
	};
	_223717_ins.get()._field_Owner=(*(_223639_s));
	_2211db707_appendInstance((*(_223659_f)).ptr(), &(_223717_ins));
	_223717_ins.get()._field_reloaded=true;
	if (_221257da0_reloadFnInsTypes(_self_, _223717_ins)) {
		return _223717_ins;;
	};
	return nullptr;;
}



inline void _221263e66_checkTypeMethod(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c76e3_StructIns>* _225040_s, jule::Ptr<_2211d9ccc_Fn>* _225060_f) {
	if (((*(_225060_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_2211dc97d_FnIns> _225517_ins = (*(_225060_f)).get()._field_Instances[0LL];;
	if ((_225517_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_22126663e_checkFnIns(_self_, &(_225517_ins));
}



inline jule::Ptr<_2211dc97d_FnIns> _2212643b7_checkStructInsOp(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c76e3_StructIns>* _226341_s, jule::Ptr<_2211d9ccc_Fn>* _226361_f, jule::Fn<jule::Bool(jule::Ptr<_2211d9ccc_Fn>)> _226369_p) {
	if (((((*(_226361_f)) == nullptr) || ((*(_226361_f)).get()._field_Generics.len() > 0LL)) || (!(_226369_p((*(_226361_f))))))) {
		return nullptr;;
	};
	return (*(_226361_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _22126476e_checkStructEnv(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c76e3_StructIns>* _227339_s, jule::Ptr<_21da1aa0b_Token> _227358_errorToken) {
	jule::Bool __jule_func_result = false;
	_2214641dd_typeChecker _227417_tc = _2214641dd_typeChecker{._field_s=(*(_227339_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_22147198c_Lookup>((*(_227339_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_22147198c_Lookup>((*(_227339_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_22146330d_referencer>(_22146330d_referencer{._field_ident=(*(_227339_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_227339_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_227339_s)).get()._field_Refers, };;
	if (((*(_227339_s)).get()._field_Generics.len() > 0LL)) {
		_227417_tc._field_useGenerics=jule::Slice<jule::Ptr<_22145264e_TypeAlias>>::alloc(0LL, (*(_227339_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_227339_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2061de3d4:;
			if (it != expr_end) {
				jule::I32 _228718_i = it - expr->begin();
				jule::Ptr<_221451b15_InsGeneric> _228725_g = *it;
				{
					jule::Ptr<_2211b1a84_GenericDecl> _228825_decl = (*(_227339_s)).get()._field_Decl.get()._field_Generics[_228718_i];;
					_227417_tc._field_useGenerics = jule::alloc_for_append(_227417_tc._field_useGenerics,1);_227417_tc._field_useGenerics.__push(jule::new_ptr<_22145264e_TypeAlias>(_22145264e_TypeAlias{._field_Token=_228825_decl.get()._field_Token, ._field_Ident=_228825_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=_228725_g.get()._field_Kind}), }));;
				}
				_iter_next_2061de3d4:;
				++it;
				_228718_i++;
				goto _iter_begin_2061de3d4;
			}
			_iter_end_2061de3d4:;
		};
	};
	jule::Ptr<_221421222_SymbolTable> _229717_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_22124d37e_setCurrentFile(_self_.ptr(), _229717_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_227339_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_221421222_SymbolTable> _230121_file = _221249bb6_findFile(&(_self_.get()._field_files), &((*(_227339_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_230121_file != nullptr)) {
			_22124d37e_setCurrentFile(_self_.ptr(), _230121_file);
		};
	};
	if (((*(_227339_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_22121c22c_constraintChecker> _230821_cc = _2212539a0_constraintChecker(_self_);;
		_230821_cc.get()._field_et=_227358_errorToken;
		_230821_cc.get()._field_si=(*(_227339_s));
		_230821_cc.get()._field_genericsA=_227417_tc._field_useGenerics;
		_230821_cc.get()._field_uniq=true;
		if ((!(_22121d10c_check(_230821_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_227339_s)).get()._field_Statics.len() > 0LL)) {
		jule::I32 _232121_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_227417_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_227339_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2061e6364:;
			if (it != expr_end) {
				jule::Ptr<_22126b17c_Var> _232325_v = *it;
				{
					_22125e8e0_checkVarDecl(_self_, &(_232325_v), jule::Trait<_22147198c_Lookup>(_self_, 3));
					_2212635b4_checkTypeVar(_self_, &(_232325_v), jule::Trait<_22147198c_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _232121_n) == 0LL) && __jule_func_result);
				}
				_iter_next_2061e6364:;
				++it;
				goto _iter_begin_2061e6364;
			}
			_iter_end_2061e6364:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_227417_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_22142779a_Eval> _233417_eval = _2212554da_eval(_self_, jule::Trait<_22147198c_Lookup>(_self_, 3));;
	(*(_227339_s)).get()._field_Comparable=(!((*(_227339_s)).get()._field_Decl.get()._field_CppLinked));
	{
		auto expr = &((*(_227339_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061e8b3b:;
		if (it != expr_end) {
			jule::Ptr<_2211c6bed_FieldIns> _233621_f = *it;
			{
				jule::Ptr<_221453397_TypeKind> _233721_kind = _22146b459_checkDecl(&_227417_tc, &(_233621_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_233721_kind != nullptr) && __jule_func_result);
				if ((_233721_kind == nullptr)) {
					if (((_self_ != (*(_227339_s)).get()._field_Decl.get()._field_sema) && ((*(_227339_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_227339_s)).get()._field_Decl.get()._field_sema.get()._field_errors);
						(*(_227339_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_2061e8b3b;
				};
				_233621_f.get()._field_Kind=_233721_kind;
				(*(_227339_s)).get()._field_Mutable=((*(_227339_s)).get()._field_Mutable || ((!(_233621_f.get()._field_Decl.get()._field_Mutable)) && _221454b18_Mutable(_233621_f.get()._field_Kind.ptr())));
				(*(_227339_s)).get()._field_Comparable=((*(_227339_s)).get()._field_Comparable && _2214548a4_Comparable(_233621_f.get()._field_Kind.ptr()));
				_2212629d1_checkStructInsDeriveClone(_self_.ptr(), (*(_227339_s)));
				if ((_233621_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_2061e8b3b;
				};
				_233417_eval.get()._field_prefix=_233621_f.get()._field_Kind;
				_233417_eval.get()._field_field=_233621_f;
				_233621_f.get()._field_Default=_221444267_evalExpr(_233417_eval, _233621_f.get()._field_Decl.get()._field_Default);
				if ((_233621_f.get()._field_Default == nullptr)) {
					goto _iter_next_2061e8b3b;
				};
				;
				_2212559d5_checkAssignType(_self_, false, &(_233621_f.get()._field_Kind), &(_233621_f.get()._field_Default), _233621_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_2061e8b3b:;
			++it;
			goto _iter_begin_2061e8b3b;
		}
		_iter_end_2061e8b3b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _221264b26_precheckStructIns(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c76e3_StructIns>* _237142_s, jule::Ptr<_21da1aa0b_Token> _237161_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_22126476e_checkStructEnv(_self_, _237142_s, _237161_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_237142_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206200ec8:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _237621_f = *it;
			{
				if ((_237621_f.get()._field_Generics.len() == 0LL)) {
					if ((_221263b47_readyToCheckFn(_self_, _237142_s, &(_237621_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_206200ec8:;
			++it;
			goto _iter_begin_206200ec8;
		}
		_iter_end_206200ec8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _221264d9b_checkStructIns(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c76e3_StructIns>* _238639_s) {
	{
		auto expr = &((*(_238639_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206202826:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _238721_f = *it;
			{
				_221263e66_checkTypeMethod(_self_, _238639_s, &(_238721_f));
			}
			_iter_next_206202826:;
			++it;
			goto _iter_begin_206202826;
		}
		_iter_end_206202826:;
	};
}



inline void _221265121_checkTypeStruct(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c48cc_Struct>* _239240_s) {
	if ((*(_239240_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_239240_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_239240_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2062040ca:;
		if (it != expr_end) {
			jule::Ptr<_2211c76e3_StructIns> _240521_ins = *it;
			{
				_221264d9b_checkStructIns(_self_, &(_240521_ins));
			}
			_iter_next_2062040ca:;
			++it;
			goto _iter_begin_2062040ca;
		}
		_iter_end_2062040ca:;
	};
}



inline void _2212652ec_checkStructTypes(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206204cac:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> _241121_s = *it;
			{
				_221265121_checkTypeStruct(_self_, &(_241121_s));
			}
			_iter_next_206204cac:;
			++it;
			goto _iter_begin_206204cac;
		}
		_iter_end_206204cac:;
	};
}



inline void _221265594_checkStructInsOperators(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c76e3_StructIns> _241647_s) {
	{
		auto expr = &(_241647_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206205890:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _241721_m = *it;
			{
				{
					auto &_match_expr{ _241721_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_2062065e9:;
						{
							_241647_s.get()._field_Operators._field_Eq=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22126ce2b_Eq);
							_241647_s.get()._field_Comparable=(_241647_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_206206660:;
						{
							_241647_s.get()._field_Operators._field_Gt=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22126d1c3_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_2062066c6:;
						{
							_241647_s.get()._field_Operators._field_GtEq=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22126d46a_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_20620674d:;
						{
							_241647_s.get()._field_Operators._field_Lt=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22126d712_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_2062067c5:;
						{
							_241647_s.get()._field_Operators._field_LtEq=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22126d9a9_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_20620684c:;
						{
							_241647_s.get()._field_Operators._field_Shl=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22126e092_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_2062068c4:;
						{
							_241647_s.get()._field_Operators._field_Shr=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22126e339_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_20620694b:;
						{
							_241647_s.get()._field_Operators._field_Add=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22126e5d1_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_2062069c3:;
						{
							_241647_s.get()._field_Operators._field_Sub=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22126e878_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_206206a4a:;
						{
							_241647_s.get()._field_Operators._field_Div=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22126eb20_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_206206ac2:;
						{
							_241647_s.get()._field_Operators._field_Mul=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22126edb7_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_206206b49:;
						{
							_241647_s.get()._field_Operators._field_Mod=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22127015e_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_206206bc1:;
						{
							_241647_s.get()._field_Operators._field_BitAnd=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__221270406_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_206206c48:;
						{
							_241647_s.get()._field_Operators._field_BitOr=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22127069d_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_206206cc0:;
						{
							_241647_s.get()._field_Operators._field_BitXor=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__221270945_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_206206d47:;
						{
							_241647_s.get()._field_Operators._field_Neg=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22127102d_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_206206dbe:;
						{
							_241647_s.get()._field_Operators._field_Pos=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__2212712c5_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_206206e46:;
						{
							_241647_s.get()._field_Operators._field_BitNot=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22127156c_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_206206ebd:;
						{
							_241647_s.get()._field_Operators._field_AddAssign=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__221271b55_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_206207045:;
						{
							_241647_s.get()._field_Operators._field_SubAssign=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__221271dec_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_2062070bc:;
						{
							_241647_s.get()._field_Operators._field_DivAssign=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__221272194_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_206207144:;
						{
							_241647_s.get()._field_Operators._field_MulAssign=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22127243b_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_2062071bb:;
						{
							_241647_s.get()._field_Operators._field_ModAssign=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__2212726d3_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_206207243:;
						{
							_241647_s.get()._field_Operators._field_ShlAssign=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__22127297a_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_2062072ba:;
						{
							_241647_s.get()._field_Operators._field_ShrAssign=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__221272c22_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_206207342:;
						{
							_241647_s.get()._field_Operators._field_BitOrAssign=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__221272eb9_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_2062073b9:;
						{
							_241647_s.get()._field_Operators._field_BitAndAssign=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__221273261_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_206207441:;
						{
							_241647_s.get()._field_Operators._field_BitXorAssign=_2212643b7_checkStructInsOp(_self_, &(_241647_s), &(_241721_m), static__221273508_BitXorAssign);
						}
					}
					_match_end_2062061cb:;
				};
			}
			_iter_next_206205890:;
			++it;
			goto _iter_begin_206205890;
		}
		_iter_end_206205890:;
	};
}



inline void _22126582a_precheckStructType(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211c48cc_Struct>* _248043_s) {
	if ((*(_248043_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_248043_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_248043_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_2211c76e3_StructIns> _249121_ins = _2211c4d3e_instance((*(_248043_s)));;
		_249121_ins.get()._field_Checked=true;
		_2211c5119_appendInstance((*(_248043_s)).ptr(), &(_249121_ins));
		_221264b26_precheckStructIns(_self_, &(_249121_ins), nullptr);
	};
	_221265594_checkStructInsOperators(_self_, (*(_248043_s)).get()._field_Instances[0LL]);
}



inline void _221265a06_precheckStructTypes(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20621e5e0:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> _250121_s = *it;
			{
				_22126582a_precheckStructType(_self_, &(_250121_s));
			}
			_iter_next_20621e5e0:;
			++it;
			goto _iter_begin_20621e5e0;
		}
		_iter_end_20621e5e0:;
	};
}



inline void _221265c7b_checkRets(_22124ad71_Sema* _self_, jule::Ptr<_2211dc97d_FnIns>* _250633_f) {
	if (_2211da23e_IsVoid((*(_250633_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_221267e26_missingRetChecker _251013_mrc = static__2212682de_new();;
	jule::Bool _251113_ok = _221269301_check(&_251013_mrc, (*(_250633_f)).get()._field_Scope);;
	if ((!(_251113_ok))) {
		_22124d747_pushErr(_self_, (*(_250633_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _22126609a_checkFnInsSc(_22124ad71_Sema* _self_, jule::Ptr<_2211dc97d_FnIns>* _251736_f, jule::Ptr<_22122ac63_scopeChecker>* _251752_sc) {
	_2212492d1_appendRetVars(&((*(_251752_sc)).get()._field_table.get()._field_Vars), _251736_f);
	_221249589_appendParamVars(&((*(_251752_sc)).get()._field_table.get()._field_Vars), _251736_f);
	_221249864_appendGenericTypeAliases(&((*(_251752_sc)).get()._field_table.get()._field_TypeAliases), _251736_f);
	_22123aba7_check((*(_251752_sc)), &((*(_251736_f)).get()._field_Decl.get()._field_Scope), &((*(_251736_f)).get()._field_Scope));
	if ((!(_22122d5b2_stopped((*(_251752_sc)).ptr())))) {
		_221265c7b_checkRets(_self_, _251736_f);
	};
}



inline void _2212663b9_checkFnInsCaller(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211dc97d_FnIns>* _253041_f, jule::Ptr<_21da1aa0b_Token> _253056_caller) {
	if ((*(_253041_f)).get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_221421222_SymbolTable> _253517_old = (*(_253041_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_22124d37e_setCurrentFile((*(_253041_f)).get()._field_Decl.get()._field_sema.ptr(), _253517_old);
	});;
	jule::Ptr<_221421222_SymbolTable> _253717_file = _221249bb6_findFile(&((*(_253041_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_253041_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_253717_file != nullptr)) {
		_22124d37e_setCurrentFile((*(_253041_f)).get()._field_Decl.get()._field_sema.ptr(), _253717_file);
	};
	jule::Ptr<_22122ac63_scopeChecker> _254217_sc = _2212214ea_newScopeChecker(&((*(_253041_f)).get()._field_Decl.get()._field_sema), (*(_253041_f)));;
	_254217_sc.get()._field_calledFrom=_253056_caller;
	_22126609a_checkFnInsSc(_self_.ptr(), _253041_f, &(_254217_sc));
	if (((*(_253041_f)).get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_253041_f)).get()._field_Decl.get()._field_sema.get()._field_errors);
		(*(_253041_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _22126663e_checkFnIns(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211dc97d_FnIns>* _255235_f) {
	_2212663b9_checkFnInsCaller(_self_, _255235_f, nullptr);
}



inline void _2212668b4_checkTypeFn(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211d9ccc_Fn>* _255636_f) {
	if ((*(_255636_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_255636_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_255636_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2062293a8:;
		if (it != expr_end) {
			jule::Ptr<_2211dc97d_FnIns> _256621_ins = *it;
			{
				_22126663e_checkFnIns(_self_, &(_256621_ins));
			}
			_iter_next_2062293a8:;
			++it;
			goto _iter_begin_2062293a8;
		}
		_iter_end_2062293a8:;
	};
}



inline void _221266b39_checkTestFn(_22124ad71_Sema* _self_, jule::Ptr<_2211dc97d_FnIns>* _257135_f) {
	if ((*(_257135_f)).get()._field_Decl.get()._field_Public) {
		_22124d747_pushErr(_self_, (*(_257135_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_22124da66_pushSuggestion(_self_, jule::Str("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(_257135_f)).get()._field_Decl.get()._field_Unsafety || (!(_2211da23e_IsVoid((*(_257135_f)).get()._field_Decl.ptr())))) || ((*(_257135_f)).get()._field_Decl.get()._field_Generics.len() != 0LL)) || ((*(_257135_f)).get()._field_Params.len() != 1LL)) || (*(_257135_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable) || (*(_257135_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Reference)) {
		_22124d747_pushErr(_self_, (*(_257135_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_22124da66_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_22145dd53_Sptr> _258917_sptr = _221455d06_Sptr((*(_257135_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_258917_sptr == nullptr)) {
		_22124d747_pushErr(_self_, (*(_257135_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_22124da66_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2211c76e3_StructIns> _259613_s = _221456ee4_Struct(_258917_sptr.get()._field_Elem.ptr());;
	if (((_259613_s == nullptr) || (!(_221247994_isStdPackage(_259613_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("testing", 7)))))) {
		_22124d747_pushErr(_self_, (*(_257135_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_22124da66_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _221266dae_precheckTypeFn(jule::Ptr<_22124ad71_Sema> _self_, jule::Ptr<_2211d9ccc_Fn>* _260439_f) {
	if ((*(_260439_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_260439_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_260439_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_2211dc97d_FnIns> _261521_ins = _2211db1b8_instanceForce((*(_260439_f)));;
		(*(_260439_f)).get()._field_Instances = jule::alloc_for_append((*(_260439_f)).get()._field_Instances,1);(*(_260439_f)).get()._field_Instances.__push(_261521_ins);;
		jule::Bool _261717_ok = _221257da0_reloadFnInsTypes(_self_, _261521_ins);;
		_261521_ins.get()._field_reloaded=true;
		if ((_261717_ok && _22146c911_hasDirective(&((*(_260439_f)).get()._field_Directives), jule::Str("test", 4)))) {
			_221266b39_checkTestFn(_self_.ptr(), &(_261521_ins));
		};
	};
}



inline void _22126708a_precheckFnTypes(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206234759:;
		if (it != expr_end) {
			jule::Ptr<_2211ebeed_Trait> _262821_decl = *it;
			{
				{
					auto expr = &(_262821_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2062350b7:;
					if (it != expr_end) {
						jule::Ptr<_2211d9ccc_Fn> _262925_m = *it;
						{
							_221266dae_precheckTypeFn(_self_, &(_262925_m));
						}
						_iter_next_2062350b7:;
						++it;
						goto _iter_begin_2062350b7;
					}
					_iter_end_2062350b7:;
				};
			}
			_iter_next_206234759:;
			++it;
			goto _iter_begin_206234759;
		}
		_iter_end_206234759:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206234bee:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _263321_decl = *it;
			{
				_221266dae_precheckTypeFn(_self_, &(_263321_decl));
			}
			_iter_next_206234bee:;
			++it;
			goto _iter_begin_206234bee;
		}
		_iter_end_206234bee:;
	};
}



inline void _221267266_checkFnTypes(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206235e0e:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _264021_decl = *it;
			{
				_2212668b4_checkTypeFn(_self_, &(_264021_decl));
			}
			_iter_next_206235e0e:;
			++it;
			goto _iter_begin_206235e0e;
		}
		_iter_end_206235e0e:;
	};
}



inline void _221267442_checkPackageTypes(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206237075:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _264821_f = *it;
			{
				_22124d37e_setCurrentFile(_self_.ptr(), _264821_f);
				_221263790_checkGlobalTypes(_self_);
				_22126708a_precheckFnTypes(_self_);
				_221265a06_precheckStructTypes(_self_);
			}
			_iter_next_206237075:;
			++it;
			goto _iter_begin_206237075;
		}
		_iter_end_206237075:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20623840b:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _265921_f = *it;
			{
				_22124d37e_setCurrentFile(_self_.ptr(), _265921_f);
				_221267266_checkFnTypes(_self_);
				_2212652ec_checkStructTypes(_self_);
			}
			_iter_next_20623840b:;
			++it;
			goto _iter_begin_20623840b;
		}
		_iter_end_20623840b:;
	};
}



inline void _22126761d_setFileSemaFields(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2062394b7:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _266721_f = *it;
			{
				_266721_f.get()._field_sema=_self_;
			}
			_iter_next_2062394b7:;
			++it;
			goto _iter_begin_2062394b7;
		}
		_iter_end_2062394b7:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2062397e7:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> _267021_st = *it;
			{
				_267021_st.get()._field_sema=_self_;
			}
			_iter_next_2062397e7:;
			++it;
			goto _iter_begin_2062397e7;
		}
		_iter_end_2062397e7:;
	};
}



inline void _2212677e9_setSemaFields(jule::Ptr<_22124ad71_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20623a331:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _267621_file = *it;
			{
				_22124d37e_setCurrentFile(_self_.ptr(), _267621_file);
				_22126761d_setFileSemaFields(_self_);
			}
			_iter_next_20623a331:;
			++it;
			goto _iter_begin_20623a331;
		}
		_iter_end_20623a331:;
	};
}



inline void _221267a6e_check(jule::Ptr<_22124ad71_Sema> _self_, jule::Slice<jule::Ptr<_221421222_SymbolTable>>* _268230_files) {
	_self_.get()._field_files=(*(_268230_files));
	_221251daa_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_2212677e9_setSemaFields(_self_);
	_2212527e5_checkInherits(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_221252262_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_22125243d_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_221262bbd_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_221267442_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _22124ad71_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _221267e26_missingRetChecker static__2212682de_new(void) {
	return _221267e26_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _2212685b9_checkConditional(_221267e26_missingRetChecker* _self_, jule::Ptr<_221224b91_Conditional> _273035_c) {
	{
		auto expr = &(_273035_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20623ee5c:;
		if (it != expr_end) {
			jule::Ptr<_221224531_If> _273121_elif = *it;
			{
				if ((_273121_elif == nullptr)) {
					return false;;
				};
				if ((!(_221268ee3_checkScope(_self_, _273121_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_20623ee5c:;
			++it;
			goto _iter_begin_20623ee5c;
		}
		_iter_end_20623ee5c:;
	};
	return ((_273035_c.get()._field_Default != nullptr) && _221268ee3_checkScope(_self_, _273035_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _2212688c7_checkMatch(_221267e26_missingRetChecker* _self_, jule::Ptr<_221227e4c_Match> _274229_m) {
	{
		auto expr = &(_274229_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206241a63:;
		if (it != expr_end) {
			jule::Ptr<_221228997_Case> _274321_c = *it;
			{
				if ((_274321_c == nullptr)) {
					return false;;
				};
				jule::I32 _274717_n = (*(_self_))._field_breaked.len();;
				jule::Bool _274817_ok = _221268ee3_checkScope(_self_, _274321_c.get()._field_Scope);;
				{
					
					if ((_274717_n != (*(_self_))._field_breaked.len())) {
						_case_begin_2062436ad:;
						{
							return false;;
						}
					}
					else if ((!(_274817_ok))) {
						_case_begin_206243724:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_20624379b;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_20624379b:;
						{
							(*(_self_))._field_falled=false;
							if ((_274321_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_206241a63;
						}
					}
					_match_end_206243658:;
				};
			}
			_iter_next_206241a63:;
			++it;
			goto _iter_begin_206241a63;
		}
		_iter_end_206241a63:;
	};
	return ((_274229_m.get()._field_Default != nullptr) && _221268ee3_checkScope(_self_, _274229_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _221268bd5_checkInfIter(_221267e26_missingRetChecker* _self_, jule::Ptr<_221224e7c_InfIter> _276831_it) {
	jule::I32 _276913_n = (*(_self_))._field_breaked.len();;
	if (_221268ee3_checkScope(_self_, _276831_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276913_n);
		return true;;
	};
	if ((_276913_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _277517_itaddr = static_cast<jule::Uintptr>(_276831_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_276913_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_2062474c5:;
			if (it != expr_end) {
				jule::Uintptr _277620_addr = *it;
				{
					if ((_277517_itaddr == _277620_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276913_n);
						return false;;
					};
				}
				_iter_next_2062474c5:;
				++it;
				goto _iter_begin_2062474c5;
			}
			_iter_end_2062474c5:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276913_n);
	};
	return true;;
}



inline jule::Bool _221268ee3_checkScope(_221267e26_missingRetChecker* _self_, jule::Ptr<_221224135_Scope> _278729_s) {
	if ((_278729_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_278729_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206249087:;
		if (it != expr_end) {
			jule::Any _279121_st = *it;
			{
				{
					auto &_match_expr{ _279121_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_2062497c4:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_20624986d:;
						{
							jule::Uintptr _279721_addr = _279121_st.cast_ptr<_221226588_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_279721_addr != 0LLU)) {
								(*(_self_))._field_breaked = jule::alloc_for_append((*(_self_))._field_breaked,1);(*(_self_))._field_breaked.__push(_279721_addr);;
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_2062498d4:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_20624994a:;
						{
							if (_221268bd5_checkInfIter(_self_, _279121_st.cast_ptr<_221224e7c_InfIter>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_2062499b1:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_206249a27:;
						{
							if (_221268ee3_checkScope(_self_, _279121_st.cast_ptr<_221224135_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_206249a8d:;
						{
							{
								auto &_match_expr{ _279121_st.cast_ptr<_221425c2c_Data>(&__jule_any_type24).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type23) {
									_case_begin_20624d4ba:;
									{
										return true;;
									}
								}
								_match_end_20624d212:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_206249b15:;
						{
							if (_2212685b9_checkConditional(_self_, _279121_st.cast_ptr<_221224b91_Conditional>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_206249b8c:;
						{
							if (_2212688c7_checkMatch(_self_, _279121_st.cast_ptr<_221227e4c_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_20624962b:;
				};
			}
			_iter_next_206249087:;
			++it;
			goto _iter_begin_206249087;
		}
		_iter_end_206249087:;
	};
	return false;;
}



inline jule::Bool _221269301_check(_221267e26_missingRetChecker* _self_, jule::Ptr<_221224135_Scope> _283324_s) {
	return _221268ee3_checkScope(_self_, _283324_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _221267e26_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22126a137_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _22126b545_IsInitialized(_22126b17c_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _22126b7a9_IsTypeInferred(_22126b17c_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _22126ba1d_untypedConstant(_22126b17c_Var* _self_) {
	return (_22126b7a9_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _22126b17c_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__22126c59b_Dispose(jule::Ptr<_2211d9ccc_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && _1023_f.get()._field_Ident.equal("Dispose", 7)) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _2211da23e_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_2211d8d31_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__22126c843_Str(jule::Ptr<_2211d9ccc_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (!_2419_f.get()._field_Ident.equal("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _2211da23e_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _2211d8d31_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_2211dc97d_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_22145a5be_Prim> _3913_prim = _221455a92_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _22145d803_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__22126cb84_logical(jule::Ptr<_2211d9ccc_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _2211da23e_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _2211d8d31_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_2211dc97d_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_22145a5be_Prim> _6413_prim = _221455a92_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_22145d58e_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _221456ee4_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__22126ce2b_Eq(jule::Ptr<_2211d9ccc_Fn> _7218_f) {
	return static__22126cb84_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__22126d1c3_Gt(jule::Ptr<_2211d9ccc_Fn> _7718_f) {
	return static__22126cb84_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__22126d46a_GtEq(jule::Ptr<_2211d9ccc_Fn> _8220_f) {
	return static__22126cb84_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__22126d712_Lt(jule::Ptr<_2211d9ccc_Fn> _8718_f) {
	return static__22126cb84_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__22126d9a9_LtEq(jule::Ptr<_2211d9ccc_Fn> _9220_f) {
	return static__22126cb84_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__22126dcea_result(jule::Ptr<_2211d9ccc_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _2211da23e_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _2211d8d31_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_2211dc97d_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_221456ee4_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__22126e092_Shl(jule::Ptr<_2211d9ccc_Fn> _11819_f) {
	return static__22126dcea_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__22126e339_Shr(jule::Ptr<_2211d9ccc_Fn> _12319_f) {
	return static__22126dcea_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__22126e5d1_Add(jule::Ptr<_2211d9ccc_Fn> _12819_f) {
	return static__22126dcea_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__22126e878_Sub(jule::Ptr<_2211d9ccc_Fn> _13319_f) {
	return static__22126dcea_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__22126eb20_Div(jule::Ptr<_2211d9ccc_Fn> _13819_f) {
	return static__22126dcea_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__22126edb7_Mul(jule::Ptr<_2211d9ccc_Fn> _14319_f) {
	return static__22126dcea_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__22127015e_Mod(jule::Ptr<_2211d9ccc_Fn> _14819_f) {
	return static__22126dcea_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__221270406_BitAnd(jule::Ptr<_2211d9ccc_Fn> _15322_f) {
	return static__22126dcea_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__22127069d_BitOr(jule::Ptr<_2211d9ccc_Fn> _15821_f) {
	return static__22126dcea_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__221270945_BitXor(jule::Ptr<_2211d9ccc_Fn> _16322_f) {
	return static__22126dcea_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__221270c86_unary(jule::Ptr<_2211d9ccc_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _2211da23e_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _2211d8d31_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_2211dc97d_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_221456ee4_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__22127102d_Neg(jule::Ptr<_2211d9ccc_Fn> _18719_f) {
	return static__221270c86_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__2212712c5_Pos(jule::Ptr<_2211d9ccc_Fn> _19219_f) {
	return static__221270c86_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__22127156c_BitNot(jule::Ptr<_2211d9ccc_Fn> _19722_f) {
	return static__221270c86_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__2212718ad_assign(jule::Ptr<_2211d9ccc_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_2211da23e_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _2211d8d31_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__221271b55_AddAssign(jule::Ptr<_2211d9ccc_Fn> _22125_f) {
	return static__2212718ad_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__221271dec_SubAssign(jule::Ptr<_2211d9ccc_Fn> _22625_f) {
	return static__2212718ad_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__221272194_DivAssign(jule::Ptr<_2211d9ccc_Fn> _23125_f) {
	return static__2212718ad_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__22127243b_MulAssign(jule::Ptr<_2211d9ccc_Fn> _23625_f) {
	return static__2212718ad_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__2212726d3_ModAssign(jule::Ptr<_2211d9ccc_Fn> _24125_f) {
	return static__2212718ad_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__22127297a_ShlAssign(jule::Ptr<_2211d9ccc_Fn> _24625_f) {
	return static__2212718ad_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__221272c22_ShrAssign(jule::Ptr<_2211d9ccc_Fn> _25125_f) {
	return static__2212718ad_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__221272eb9_BitOrAssign(jule::Ptr<_2211d9ccc_Fn> _25627_f) {
	return static__2212718ad_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__221273261_BitAndAssign(jule::Ptr<_2211d9ccc_Fn> _26128_f) {
	return static__2212718ad_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__221273508_BitXorAssign(jule::Ptr<_2211d9ccc_Fn> _26628_f) {
	return static__2212718ad_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _22126be2a_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _22140eee1_pushErr(_22140e9c4_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11726_fmt, _11739_args);
}



inline jule::Bool _221410255_checkTrait(_22140e9c4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_2214543cb_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_2211ebeed_Trait> _12517_trt = _221457258_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_221455d06_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_20628636b:;
			{
				_12617_ref=true;
				(*(_self_))._field_src=_221455d06_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_221456ee4_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_206285bd9;
			}
		}
		else if ((_221456ee4_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_206285bd9:;
			{
				jule::Ptr<_2211c76e3_StructIns> _13617_s = _221456ee4_Struct((*(_self_))._field_src.ptr());;
				if ((!(_2211c5dea_IsImplements(_13617_s.get()._field_Decl.ptr(), _12517_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _22140d75e_traitHasReferenceReceiver(&(_12517_trt)))) {
					_22140eee1_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_221457258_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_206285c50:;
			{
				jule::Ptr<_2211ebeed_Trait> _14621_base = _221457258_Trait((*(_self_))._field_src.ptr());;
				if ((_12517_trt == _14621_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_lookup:;
				{
					auto expr = &(_14621_base.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20628a282:;
					if (it != expr_end) {
						jule::Ptr<_2211c48cc_Struct> _15120_s1 = *it;
						{
							{
								auto expr = &(_12517_trt.get()._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_20628ae0e:;
								if (it != expr_end) {
									jule::Ptr<_2211c48cc_Struct> _15224_s2 = *it;
									{
										if ((_15120_s1 == _15224_s2)) {
											goto _iter_next_20628a282;
										};
									}
									_iter_next_20628ae0e:;
									++it;
									goto _iter_begin_20628ae0e;
								}
								_iter_end_20628ae0e:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_20628a282:;
						++it;
						goto _iter_begin_20628a282;
					}
					_iter_end_20628a282:;
				};
				{
					auto expr = &(_12517_trt.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20628b55d:;
					if (it != expr_end) {
						jule::Ptr<_2211d9ccc_Fn> _15925_m1 = *it;
						{
							jule::Ptr<_2211d9ccc_Fn> _16025_m2 = _2211ecd9a_FindMethod(_14621_base.ptr(), _15925_m1.get()._field_Ident);;
							if ((_16025_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_2211dc97d_FnIns> _16421_m1k = _221256ab3_getTraitCheckFnKind((*(_self_))._field_s, &(_15925_m1));;
							jule::Ptr<_2211dc97d_FnIns> _16521_m2k = _221256ab3_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m2));;
							if ((!(_2211dd83b_equalTrait(_16421_m1k, &(_16521_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_20628b55d:;
						++it;
						goto _iter_begin_20628b55d;
					}
					_iter_end_20628b55d:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_206285b73:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_206285b0c:;
	};
}



inline jule::Bool _2214104b9_checkPtr(_22140e9c4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_2214543cb_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_2214623b7_Ptr> _18017_dest = _22145606a_Ptr((*(_self_))._field_dest.ptr());;
	if (_221462d8a_IsUnsafe(_18017_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _221453aa1_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _22141072d_checkPrim(_22140e9c4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_22145a5be_Prim> _18917_prim = _221455a92_Prim((*(_self_))._field_dest.ptr());;
		if (((_18917_prim != nullptr) && _22145da67_IsAny(_18917_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _221453aa1_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _221410ad5_typeEnum(_22140e9c4_typeCompatibilityChecker* _self_, jule::Ptr<_221200d7b_TypeEnum>* _19728_e, jule::Ptr<_221453397_TypeKind>* _19747_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_19728_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206292377:;
		if (it != expr_end) {
			jule::Ptr<_2212007b5_TypeEnumItem> _19821_item = *it;
			{
				if (_221453aa1_Equal(_19821_item.get()._field_Kind.get()._field_Kind, (*(_19747_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_221200d7b_TypeEnum> _20221_ke = _221456543_TypeEnum(_19821_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_20221_ke == nullptr)) {
					goto _iter_next_206292377;
				};
				if (_221410ad5_typeEnum(_self_, &(_20221_ke), _19747_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_206292377:;
			++it;
			goto _iter_begin_206292377;
		}
		_iter_end_206292377:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _221410d49_checkTypeEnum(_22140e9c4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_221453aa1_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_221200d7b_TypeEnum> _21717_e = _221456543_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _221410ad5_typeEnum(_self_, &(_21717_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _2214110ad_check(_22140e9c4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_22145606a_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _2214104b9_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_2214550e1_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_2214543cb_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_221455a92_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_206296e5e:;
			{
				__jule_func_result = _22141072d_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_221456543_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_206297349:;
			{
				__jule_func_result = _221410d49_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_221457258_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_2062973b0:;
			{
				__jule_func_result = _221410255_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_20629636a:;
			{
				__jule_func_result = _221453aa1_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_20629605c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22140e9c4_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _221411a5e_pushErr(_2214115ec_assignTypeChecker* _self_, jule::Str _25326_fmt, jule::Slice<jule::Any> _25339_args) {
	_22124d747_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25326_fmt, _25339_args);
}



inline jule::Bool _221411cc3_checkValidity(_2214115ec_assignTypeChecker* _self_) {
	jule::Bool _25817_valid = true;;
	{
		
		if ((_221456c80_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206299d96:;
			{
				jule::Ptr<_2211dc97d_FnIns> _26117_f = _221456c80_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_2211ddd14_IsBuiltin(_26117_f.ptr())) {
						_case_begin_20629b419:;
						{
							_221411a5e_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (_26117_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_20629b491:;
						{
							_221411a5e_pushErr(_self_, jule::Str("cpp-linked functions cannot use as anonymous function", 53), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((!(_26117_f.get()._field_Decl.get()._field_Statically)) && _2211da4a3_IsMethod(_26117_f.get()._field_Decl.ptr()))) {
						_case_begin_20629b518:;
						{
							_221411a5e_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((_26117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_26117_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_20629b590:;
						{
							_221411a5e_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_22124da66_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					_match_end_20629b33c:;
				};
			}
		}
		else if ((_221457731_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206299e1d:;
			{
				_221411a5e_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25817_valid=false;
			}
		}
		_match_end_206299cdb:;
	};
	return _25817_valid;;
}



inline jule::Bool _221412037_checkConst(_2214115ec_assignTypeChecker* _self_) {
	if (((((!(_2214265e0_IsConst((*(_self_))._field_d.ptr()))) || (_221455a92_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_221455a92_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_21e6c4e9a_IsNum(_221455a92_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _29813_kind = _221455a92_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_21e6c4c03_IsFloat(_29813_kind)) {
			_case_begin_2062a361e:;
			{
				if ((!(_22140da06_floatAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_221411a5e_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else if (_21e6c48d4_IsInt(_29813_kind)) {
			_case_begin_2062a2e9d:;
			{
				if ((!(_22140e51d_intAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_221411a5e_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else {
			_case_begin_2062a2e37:;
			{
				return false;;
			}
		}
		_match_end_2062a2dc1:;
	};
	return true;;
}



inline jule::Bool _22141229b_isPrim(_2214115ec_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_221454167_CppLinked((*(_self_))._field_dest.ptr()) || _221454167_CppLinked((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_221455a92_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_221455a92_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _221412510_checkCompatibility(_2214115ec_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_2062a7524:;
			{
				return false;;
			}
		}
		else if ((!(_221411cc3_checkValidity(_self_)))) {
			_case_begin_2062a759b:;
			{
				return false;;
			}
		}
		else if (_221412037_checkConst(_self_)) {
			_case_begin_2062a7623:;
			{
				return true;;
			}
		}
		else if ((_2214562ce_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062a769a:;
			{
				jule::Ptr<_221453397_TypeKind> _34221_dkind = (*(_self_))._field_dest;;
				if ((_2214562ce_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34221_dkind=_2214562ce_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_221455a92_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_2062a73d1;
				};
				if (_21e6c1716_TypesAreCompatible(_221455a92_Prim(_2214562ce_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _221455a92_Prim(_34221_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_22141229b_isPrim(_self_)) {
			_case_begin_2062a7722:;
			{
				jule::Ptr<_22145a5be_Prim> _35217_dest = _221455a92_Prim((*(_self_))._field_dest.ptr());;
				if (_22145da67_IsAny(_35217_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_22145a5be_Prim> _35621_src = _221455a92_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_21e6c1716_TypesAreCompatible(_35217_dest.get()._field_Kind, _35621_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_2062a73d1:;
	};
	return _221255e36_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _221412774_check(_2214115ec_assignTypeChecker* _self_) {
	jule::Bool _36513_ok = _221412510_checkCompatibility(_self_);;
	if ((_36513_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_22146e45c_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _36513_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _2214115ec_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2062bed22_annotateConstraintElem(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_2062c140b:;
			{
				jule::Ptr<_221453397_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_2062c2220:;
						{
							_38821_elem=_2214567a7_Arr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_2062c1c8b:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_2211a6c99_ArrTypeDecl>(&__jule_any_type75).get()._field_Elem;
				return _221414732_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_2062c1351:;
	};
	return false;;
}

inline jule::Bool _2062c0196_annotateConstraintElem(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_2062c48a4:;
			{
				jule::Ptr<_221453397_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_2062c5751:;
						{
							_38821_elem=_221456a1b_Slc((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_2062c5234:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_2211a6040_SlcTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _221414732_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_2062c47e9:;
	};
	return false;;
}

inline jule::Bool _2062be86b_annotateConstraintElem(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_2062c7d4c:;
			{
				jule::Ptr<_221453397_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_2062c8c60:;
						{
							_38821_elem=_22145606a_Ptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_2062c86cc:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_2211a6617_PtrTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _221414732_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_2062c7c92:;
	};
	return false;;
}

inline jule::Bool _2062c7346_annotateConstraintElem(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_2062caec6:;
			{
				jule::Ptr<_221453397_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_2062cbe61:;
						{
							_38821_elem=_221455d06_Sptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_2062cb856:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_2211a5b44_SptrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _221414732_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_2062cae1b:;
	};
	return false;;
}



inline jule::Bool _2214139b7_annotateConstraintMap(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _40545_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_2062aedab:;
			{
				jule::Ptr<_221460d66_Map> _40821_m = _2214574bc_Map((*(_40545_k)).ptr());;
				jule::Ptr<_2211a74e7_MapTypeDecl> _40921_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_2211a74e7_MapTypeDecl>(&__jule_any_type79);;
				(*(_self_))._field_c=_40921_m2.get()._field_Key;
				if ((!(_221414732_annotateConstraint(_self_, &(_40821_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_40921_m2.get()._field_Val;
				__jule_func_result = _221414732_annotateConstraint(_self_, &(_40821_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_2062aed34:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _221413cc5_annotateConstraintTup(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _42045_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_2062b2540:;
			{
				jule::Ptr<_2211a632b_TupleTypeDecl> _42321_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_2211a632b_TupleTypeDecl>(&__jule_any_type80);;
				jule::Ptr<_22146033d_Tuple> _42421_tup2 = _221457731_Tup((*(_42045_k)).ptr());;
				{
					auto expr = &(_42421_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2062b391a:;
					if (it != expr_end) {
						jule::Ptr<_221453397_TypeKind> _42525_t2 = *it;
						{
							{
								auto expr = &(_42321_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_2062b41ce:;
								if (it != expr_end) {
									jule::Ptr<_2211a478b_TypeDecl> _42629_t = *it;
									{
										(*(_self_))._field_c=_42629_t;
										if (_221414732_annotateConstraint(_self_, &(_42525_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_2062b41ce:;
									++it;
									goto _iter_begin_2062b41ce;
								}
								_iter_end_2062b41ce:;
							};
						}
						_iter_next_2062b391a:;
						++it;
						goto _iter_begin_2062b391a;
					}
					_iter_end_2062b391a:;
				};
			}
		}
		_match_end_2062b032e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _2214140d3_annotateConstraintFn(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _43744_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_2062b3de3:;
			{
				jule::Ptr<_2211b621a_FnDecl> _44021_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_2211b621a_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_2211dc97d_FnIns> _44121_f = _221456c80_Fn((*(_43744_k)).ptr());;
				{
					auto expr = &(_44121_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2062b6302:;
					if (it != expr_end) {
						jule::I32 _44218_i = it - expr->begin();
						jule::Ptr<_2211dbaae_ParamIns> _44225_fp = *it;
						{
							(*(_self_))._field_c=_44021_pf.get()._field_Params[_44218_i].get()._field_Kind;
							if (_221414732_annotateConstraint(_self_, &(_44225_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_2062b6302:;
						++it;
						_44218_i++;
						goto _iter_begin_2062b6302;
					}
					_iter_end_2062b6302:;
				};
				if ((_44021_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_44021_pf.get()._field_Result.get()._field_Kind;
					if (_221414732_annotateConstraint(_self_, &(_44121_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_2062b28b4:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _221414413_annotateConstraintIdent(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _45847_k) {
	jule::Ptr<_2211a4d52_IdentTypeDecl> _45917_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_2211a4d52_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_2211c76e3_StructIns> _46017_s = _221456ee4_Struct((*(_45847_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2062b8c50:;
		if (it != expr_end) {
			jule::I32 _46113_i = it - expr->begin();
			jule::Ptr<_2211b1a84_GenericDecl> _46116_g = *it;
			{
				if ((_46116_g.get()._field_Ident == _45917_ident.get()._field_Ident)) {
					jule::Ptr<_221451b15_InsGeneric> _46325_fg = (*(_self_))._field_f.get()._field_Generics[_46113_i];;
					if ((_46325_fg != nullptr)) {
						return false;;
					};
					_221414a51_pushGeneric(_self_, _45847_k, _46113_i);
					return true;;
				};
				if ((_46017_s == nullptr)) {
					goto _iter_next_2062b8c50;
				};
				jule::Ptr<_2211a478b_TypeDecl> _47321_c = (*(_self_))._field_c;;
				{
					auto expr = &(_45917_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2062bb04e:;
					if (it != expr_end) {
						jule::Ptr<_2211a478b_TypeDecl> _47425_ig = *it;
						{
							(*(_self_))._field_c=_47425_ig;
							{
								auto expr = &(_46017_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_2062bc517:;
								if (it != expr_end) {
									jule::Ptr<_221451b15_InsGeneric> _47629_sg = *it;
									{
										if (_221414732_annotateConstraint(_self_, &(_47629_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_2062bc517:;
									++it;
									goto _iter_begin_2062bc517;
								}
								_iter_end_2062bc517:;
							};
						}
						_iter_next_2062bb04e:;
						++it;
						goto _iter_begin_2062bb04e;
					}
					_iter_end_2062bb04e:;
				};
				(*(_self_))._field_c=_47321_c;
			}
			_iter_next_2062b8c50:;
			++it;
			_46113_i++;
			goto _iter_begin_2062b8c50;
		}
		_iter_end_2062b8c50:;
	};
	return false;;
}



inline jule::Bool _221414732_annotateConstraint(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _48742_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_2062bc89c:;
			{
				return _221414413_annotateConstraintIdent(_self_, _48742_k);;
			}
		}
		_match_end_2062bc10a:;
	};
	{
		
		if ((_2214567a7_Arr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_2062b9bb8:;
			{
				return _2062bed22_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_221456a1b_Slc((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_2062bdda9:;
			{
				return _2062c0196_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_22145606a_Ptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_2062bde20:;
			{
				return _2062be86b_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_221455d06_Sptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_2062be01e:;
			{
				return _2062c7346_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_2214574bc_Map((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_2062be085:;
			{
				return _2214139b7_annotateConstraintMap(_self_, _48742_k);;
			}
		}
		else if ((_221456c80_Fn((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_2062bd4d5:;
			{
				return _2214140d3_annotateConstraintFn(_self_, _48742_k);;
			}
		}
		else if ((_221457731_Tup((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_2062bd54b:;
			{
				return _221413cc5_annotateConstraintTup(_self_, _48742_k);;
			}
		}
		else {
			_case_begin_2062bdcdd:;
			{
				return false;;
			}
		}
		_match_end_2062bdc88:;
	};
}



inline void _221414a51_pushGeneric(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _51235_k, jule::I32 _51249_i) {
	(*(_self_))._field_f.get()._field_Generics[_51249_i]=jule::new_ptr<_221451b15_InsGeneric>(_221451b15_InsGeneric{._field_Kind=(*(_51235_k)), });
	jule::Ptr<_2211b1a84_GenericDecl> _51417_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_51249_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2062ce815:;
		if (it != expr_end) {
			jule::Ptr<_221453397_TypeKind> _51521_ignored = *it;
			{
				if ((_51417_gd.get()._field_Ident == _221453793_Str(_51521_ignored.ptr()))) {
					_51521_ignored.get()._field_Kind=(*(_51235_k)).get()._field_Kind;
				};
			}
			_iter_next_2062ce815:;
			++it;
			goto _iter_begin_2062ce815;
		}
		_iter_end_2062ce815:;
	};
	if (((_51417_gd.get()._field_Constraint == nullptr) || (_51417_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_51417_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_221414732_annotateConstraint(_self_, _51235_k);
}



inline jule::Bool _221414d5e_annotatePrim(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _52743_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _221416b85_annotateAny(_self_, _52743_k);
	return __jule_func_result;;
}



inline jule::Bool _22141516c_annotateArr(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_22146195a_Arr> _53217_parr = _2214567a7_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53217_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_22146195a_Arr> _53617_arr = _2214567a7_Arr((*(_53142_k)).ptr());;
	(*(_self_))._field_k=(&(_53217_parr.get()._field_Elem));
	__jule_func_result = _221416e93_annotateKind(_self_, &(_53617_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _22141547a_annotateSlc(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _54142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_22145e7b0_Slc> _54217_pslc = _221456a1b_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54217_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_22145e7b0_Slc> _54617_slc = _221456a1b_Slc((*(_54142_k)).ptr());;
	(*(_self_))._field_k=(&(_54217_pslc.get()._field_Elem));
	__jule_func_result = _221416e93_annotateKind(_self_, &(_54617_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _221415832_checkMapKey(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _55141_k, jule::Ptr<_221453397_TypeKind>* _55161_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_221453397_TypeKind>* _55217_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55141_k;
	__jule_func_result=_221416e93_annotateKind(_self_, _55161_ck);
	(*(_self_))._field_k=_55217_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _221415b40_annotateMap(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _55942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_221460d66_Map> _56017_pmap = _2214574bc_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56017_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_221460d66_Map> _56417_m = _2214574bc_Map((*(_55942_k)).ptr());;
	__jule_func_result = (_221415832_checkMapKey(_self_, (&(_56017_pmap.get()._field_Key)), &(_56417_m.get()._field_Key)) && _221415832_checkMapKey(_self_, (&(_56017_pmap.get()._field_Val)), &(_56417_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _221415e4d_annotateFn(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _56941_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2211dc97d_FnIns> _57017_pf = _221456c80_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57017_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2211dc97d_FnIns> _57417_f = _221456c80_Fn((*(_56941_k)).ptr());;
	{
		
		if ((_57017_pf.get()._field_Params.len() != _57417_f.get()._field_Params.len())) {
			_case_begin_2062da90e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_2211da23e_IsVoid(_57017_pf.get()._field_Decl.ptr()) != _2211da23e_IsVoid(_57417_f.get()._field_Decl.ptr()))) {
			_case_begin_2062da986:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_2062da887:;
	};
	__jule_func_result=true;
	jule::Ptr<_221453397_TypeKind>* _58317_old = (*(_self_))._field_k;;
	{
		auto expr = &(_57417_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2062dc207:;
		if (it != expr_end) {
			jule::I32 _58414_i = it - expr->begin();
			jule::Ptr<_2211dbaae_ParamIns> _58421_fp = *it;
			{
				(*(_self_))._field_k=(&(_57017_pf.get()._field_Params[_58414_i].get()._field_Kind));
				__jule_func_result=(_221416e93_annotateKind(_self_, &(_58421_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_2062dc207:;
			++it;
			_58414_i++;
			goto _iter_begin_2062dc207;
		}
		_iter_end_2062dc207:;
	};
	if ((!(_2211da23e_IsVoid(_57017_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_57017_pf.get()._field_Result));
		__jule_func_result=(_221416e93_annotateKind(_self_, &(_57417_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _22141625b_annotatePtr(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _59842_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2214623b7_Ptr> _59917_pptr = _22145606a_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_59917_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2214623b7_Ptr> _60317_ptr = _22145606a_Ptr((*(_59842_k)).ptr());;
	(*(_self_))._field_k=(&(_59917_pptr.get()._field_Elem));
	__jule_func_result = _221416e93_annotateKind(_self_, &(_60317_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _221416569_annotateSptr(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _60843_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_22145dd53_Sptr> _60917_ssptr = _221455d06_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_60917_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_22145dd53_Sptr> _61317_sptr = _221455d06_Sptr((*(_60843_k)).ptr());;
	(*(_self_))._field_k=(&(_60917_ssptr.get()._field_Elem));
	__jule_func_result = _221416e93_annotateKind(_self_, &(_61317_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _221416877_annotateStruct(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _61845_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2211c76e3_StructIns> _61917_s = _221456ee4_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_61917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2211c76e3_StructIns> _62317_s2 = _221456ee4_Struct((*(_61845_k)).ptr());;
	if ((_61917_s.get()._field_Generics.len() != _62317_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_61917_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2062e4aa0:;
		if (it != expr_end) {
			jule::I32 _62714_i = it - expr->begin();
			jule::Ptr<_221451b15_InsGeneric> _62721_g = *it;
			{
				jule::Ptr<_221451b15_InsGeneric> _62821_g2 = _62317_s2.get()._field_Generics[_62714_i];;
				if (_221453aa1_Equal(_62721_g.get()._field_Kind, _62821_g2.get()._field_Kind)) {
					goto _iter_next_2062e4aa0;
				};
				(*(_self_))._field_k=(&(_62721_g.get()._field_Kind));
				if ((!(_221416e93_annotateKind(_self_, &(_62821_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_2062e4aa0:;
			++it;
			_62714_i++;
			goto _iter_begin_2062e4aa0;
		}
		_iter_end_2062e4aa0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _221416b85_annotateAny(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _64042_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _64113_kind = _221453793_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2062e7ae7:;
		if (it != expr_end) {
			jule::I32 _64213_i = it - expr->begin();
			jule::Ptr<_2211b1a84_GenericDecl> _64216_g = *it;
			{
				if ((_64113_kind != _64216_g.get()._field_Ident)) {
					goto _iter_next_2062e7ae7;
				};
				jule::Ptr<_221451b15_InsGeneric> _64617_t = (*(_self_))._field_f.get()._field_Generics[_64213_i];;
				{
					
					if ((_64617_t == nullptr) || (_64617_t.get()._field_Kind == nullptr)) {
						_case_begin_2062e95cc:;
						{
							_221414a51_pushGeneric(_self_, _64042_k, _64213_i);
						}
					}
					else if ((!(_221453aa1_Equal(_64617_t.get()._field_Kind, (*(_64042_k)))))) {
						_case_begin_2062e9643:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_2062e9489:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_64042_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_2062e7ae7:;
			++it;
			_64213_i++;
			goto _iter_begin_2062e7ae7;
		}
		_iter_end_2062e7ae7:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _221416e93_annotateKind(_2214130d2_dynamicTypeAnnotation* _self_, jule::Ptr<_221453397_TypeKind>* _66143_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_221416b85_annotateAny(_self_, _66143_k)) {
			_case_begin_2062eba41:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_221455a92_Prim((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2062ebaa7:;
			{
				__jule_func_result = _221414d5e_annotatePrim(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_2214567a7_Arr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2062ebb1d:;
			{
				__jule_func_result = _22141516c_annotateArr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_221456a1b_Slc((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2062ebb84:;
			{
				__jule_func_result = _22141547a_annotateSlc(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_2214574bc_Map((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2062ebe09:;
			{
				__jule_func_result = _221415b40_annotateMap(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_221456c80_Fn((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2062ebe70:;
			{
				__jule_func_result = _221415e4d_annotateFn(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_22145606a_Ptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2062ebed6:;
			{
				__jule_func_result = _22141625b_annotatePtr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_221455d06_Sptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2062ec04c:;
			{
				__jule_func_result = _221416569_annotateSptr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_221456ee4_Struct((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2062ec2a0:;
			{
				__jule_func_result = _221416877_annotateStruct(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_2062eb9ca:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_2062eb975:;
	};
}



inline jule::Bool _221417207_annotate(_2214130d2_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _221416e93_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _2214130d2_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _221417ee9_pushErrToken(_221417999_fnCallArgChecker* _self_, jule::Ptr<_21da1aa0b_Token> _70631_token, jule::Str _70646_fmt, jule::Slice<jule::Any> _70659_args) {
	_22124d747_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _70631_token, _70646_fmt, _70659_args);
}



inline void _221418318_pushErr(_221417999_fnCallArgChecker* _self_, jule::Str _71026_fmt, jule::Slice<jule::Any> _71039_args) {
	_221417ee9_pushErrToken(_self_, (*(_self_))._field_errorToken, _71026_fmt, _71039_args);
}



inline jule::Slice<jule::Ptr<_2211dbaae_ParamIns>> _22141857c_getParams(_221417999_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _2211d8abc_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _22141888a_checkCounts(_221417999_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_2211dbaae_ParamIns>>* _72331_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _72417_n = (*(_72331_params)).len();;
	if (((_72417_n > 0LL) && _2211d8abc_IsSelf((*(_72331_params))[0LL].get()._field_Decl.ptr()))) {
		(_72417_n)--;
	};
	jule::I32 _72917_diff = (_72417_n - (*(_self_))._field_args.len());;
	jule::Str _73017_log = jule::Str();;
	{
		
		if ((_72917_diff == 0LL)) {
			_case_begin_2063078b5:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72417_n > 0LL) && (*(_72331_params))[(_72417_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_20630818a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72917_diff < 0LL) || (_72917_diff > (*(_72331_params)).len()))) {
			_case_begin_206307cb1:;
			{
				_73017_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_206307c4a:;
			{
				_73017_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_206307bd4:;
	};
	jule::Str _74117_err = (*(_self_))._field_f.get()._field_Decl.get()._field_Ident;;
	(_74117_err).append("\n       wanted (", 16);
	{
		auto expr = _72331_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206305e02:;
		if (it != expr_end) {
			jule::I32 _74313_i = it - expr->begin();
			jule::Ptr<_2211dbaae_ParamIns> *_74316_p = it;
			{
				_74117_err+=_221453793_Str((*(_74316_p)).get()._field_Kind.ptr());
				if ((((*(_72331_params)).len() - _74313_i) > 1LL)) {
					(_74117_err).append(", ", 2);
				};
			}
			_iter_next_206305e02:;
			++it;
			_74313_i++;
			goto _iter_begin_206305e02;
		}
		_iter_end_206305e02:;
	};
	(_74117_err).append(")", 1);
	_221418318_pushErr(_self_, _73017_log, jule::Slice<jule::Any>::make({jule::Any(_74117_err, &__jule_any_type5)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _221418cdb_checkArg(_221417999_fnCallArgChecker* _self_, jule::Ptr<_2211dbaae_ParamIns>* _75432_p, jule::Ptr<_221425c2c_Data>* _75451_arg, jule::Ptr<_21da1aa0b_Token>* _75468_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _2211dea90_parameterUsesGenerics(_75432_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=(!((*(_75432_p)).get()._field_Decl.get()._field_Variadic));
		if (__jule_func_result) {
			_2214130d2_dynamicTypeAnnotation _75825_dta = _2214130d2_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75432_p)), ._field_a=(*(_75451_arg)), ._field_errorToken=(*(_75468_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_221417207_annotate(&_75825_dta);
		};
		if ((!(__jule_func_result))) {
			_221417ee9_pushErrToken(_self_, (*(_75468_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_2212588ea_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Mutable, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, _75468_errorToken)) {
		_2212559d5_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, (*(_75468_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _221419193_push(_221417999_fnCallArgChecker* _self_, jule::Ptr<_2211dbaae_ParamIns>* _78228_p, jule::Ptr<_2211a8cac_Expr> _78246_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_221453397_TypeKind> _78317_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _78413_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_78228_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_78228_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_78228_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_221425c2c_Data> _79217_d = _221444267_evalExpr((*(_self_))._field_e, _78246_arg);;
	(*(_self_))._field_e.get()._field_prefix=_78317_old;
	(*(_self_))._field_e.get()._field_immutable=_78413_oldImmut;
	if ((_79217_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_221418cdb_checkArg(_self_, _78228_p, &(_79217_d), &(_78246_arg.get()._field_Token));
	(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_79217_d.get()._field_Model);;
	return __jule_func_result;;
}



inline jule::Bool _22141954a_pushVariadic(_221417999_fnCallArgChecker* _self_, jule::Ptr<_2211dbaae_ParamIns>* _80636_p, jule::I32 _80654_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _80817_variadiced = false;;
	jule::Bool _80913_more = ((_80654_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_2211cdd7b_SliceExprModel> _81017_model = jule::new_ptr<_2211cdd7b_SliceExprModel>(_2211cdd7b_SliceExprModel{._field_ElemKind=(*(_80636_p)).get()._field_Kind, });;
	jule::Ptr<_221453397_TypeKind> _81417_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _81913_variadic = (*(_80636_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_80636_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_80636_p)).get()._field_Kind.get()._field_Variadic=_81913_variadic;
	});;
	for (; (_80654_i < (*(_self_))._field_args.len()); (_80654_i)++) {
		{
			jule::Ptr<_2211a8cac_Expr> _82621_arg = (*(_self_))._field_args[_80654_i];;
			{
				auto &_match_expr{ _82621_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type81) {
					_case_begin_206318332:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_22145e7b0_Slc>(_22145e7b0_Slc{._field_Elem=(*(_80636_p)).get()._field_Kind}), 20)});
					}
				}
				else {
					_case_begin_206318b18:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_80636_p)).get()._field_Kind;
					}
				}
				_match_end_206318ab3:;
			};
			jule::Ptr<_221425c2c_Data> _83921_d = _221443b4b_eval((*(_self_))._field_e, _82621_arg);;
			if ((_83921_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_206317793;
			};
			if (_83921_d.get()._field_Kind.get()._field_Variadic) {
				_80817_variadiced=true;
				(*(_80636_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _221418cdb_checkArg(_self_, _80636_p, &(_83921_d), &(_82621_arg.get()._field_Token)));
				{
					auto &_match_expr{ _83921_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_20631ac80:;
						{
							_81017_model=_83921_d.get()._field_Model.cast_ptr<_2211cdd7b_SliceExprModel>(&__jule_any_type82);
							_81017_model.get()._field_ElemKind=(*(_80636_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_20631ba0b:;
						{
							_81017_model=nullptr;
							(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_83921_d.get()._field_Model);;
						}
					}
					_match_end_20631bae9:;
				};
				(_80654_i)++;
				goto _iter_end_206317793;
			};
			__jule_func_result=(__jule_func_result && _221418cdb_checkArg(_self_, _80636_p, &(_83921_d), &(_82621_arg.get()._field_Token)));
			_81017_model.get()._field_Elems = jule::alloc_for_append(_81017_model.get()._field_Elems,1);_81017_model.get()._field_Elems.__push(_83921_d.get()._field_Model);;
		}
	_iter_next_206317793:;
	}
	_iter_end_206317793:;;
	(*(_self_))._field_e.get()._field_prefix=_81417_old;
	if ((_80817_variadiced && _80913_more)) {
		_221417ee9_pushErrToken(_self_, (*(_self_))._field_args[_80654_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81017_model != nullptr)) {
		(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(jule::Any(_81017_model, &__jule_any_type82));;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _221419858_checkArgs(_221417999_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_2211dbaae_ParamIns>>* _88233_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _88313_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I32 _88717_i = 0LL;;
	if ((((*(_88233_params)).len() > 0LL) && _2211d8abc_IsSelf((*(_88233_params))[0LL].get()._field_Decl.ptr()))) {
		(_88717_i)++;
	};
	_julec_label_iter:;
	while ((_88717_i < (*(_88233_params)).len())) {
		{
			jule::Ptr<_2211dbaae_ParamIns> _89421_p = (*(_88233_params))[_88717_i];;
			{
				
				if (_89421_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_206322ced:;
					{
						__jule_func_result=(_22141954a_pushVariadic(_self_, &(_89421_p), _88717_i) && __jule_func_result);
						goto _iter_end_2063213a1;
					}
				}
				else if (((*(_self_))._field_args.len() <= _88717_i)) {
					_case_begin_206322528:;
					{
						__jule_func_result=false;
						goto _iter_end_2063213a1;
					}
				}
				else {
					_case_begin_206322957:;
					{
						__jule_func_result=(_221419193_push(_self_, &(_89421_p), (*(_self_))._field_args[_88717_i]) && __jule_func_result);
					}
				}
				_match_end_2063228e1:;
			};
			(_88717_i)++;
		}
	_iter_next_2063213a1:;
	}
	_iter_end_2063213a1:;;
	(*(_self_))._field_e.get()._field_arg=_88313_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _221419ade_checkDynamicTypeAnnotation(_221417999_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206324c78:;
		if (it != expr_end) {
			jule::Ptr<_221451b15_InsGeneric> _91416_g = *it;
			{
				if ((_91416_g == nullptr)) {
					_221418318_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_206324c78:;
			++it;
			goto _iter_begin_206324c78;
		}
		_iter_end_206324c78:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _221419d64_check(_221417999_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_2211dbaae_ParamIns>> _92417_params = _22141857c_getParams(_self_);;
	__jule_func_result=_22141888a_checkCounts(_self_, &(_92417_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_221419858_checkArgs(_self_, &(_92417_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_221419ade_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _221417999_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _22141a8ae_pushErr(_22141a3a3_structLitChecker* _self_, jule::Ptr<_21da1aa0b_Token> _94526_token, jule::Str _94541_fmt, jule::Slice<jule::Any> _94554_args) {
	_221427ca6_pushErr((*(_self_))._field_e.ptr(), _94526_token, _94541_fmt, _94554_args);
}



inline void _22141abcd_pushSuggestion(_22141a3a3_structLitChecker* _self_, jule::Str _95033_fmt, jule::Slice<jule::Any> _95046_args) {
	_2214280c5_pushSuggestion((*(_self_))._field_e.ptr(), _95033_fmt, _95046_args);
}



inline void _22141b096_pushMatch(_22141a3a3_structLitChecker* _self_, jule::Ptr<_2211c6bed_FieldIns>* _95433_f, jule::Ptr<_221425c2c_Data>* _95452_d, jule::Ptr<_21da1aa0b_Token>* _95467_errorToken) {
	;
	if (_2212588ea_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (!((*(_self_))._field_e.get()._field_immutable)), false, &((*(_95433_f)).get()._field_Kind), _95452_d, _95467_errorToken)) {
		_2212559d5_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_95433_f)).get()._field_Kind), _95452_d, (*(_95467_errorToken)));
	};
	(*(_self_))._field_args = jule::alloc_for_append((*(_self_))._field_args,1);(*(_self_))._field_args.__push(jule::new_ptr<_2211cc40c_StructArgExprModel>(_2211cc40c_StructArgExprModel{._field_Field=(*(_95433_f)), ._field_Expr=(*(_95452_d)).get()._field_Model}));;
}



inline void _22141b3b5_checkPair(_22141a3a3_structLitChecker* _self_, jule::Ptr<_2211ad71d_FieldExprPair>* _96733_pair, jule::Slice<jule::Ptr<_2211a8cac_Expr>>* _96760_exprs) {
	jule::Ptr<_2211c6bed_FieldIns> _96917_f = _2211c899c_FindField((*(_self_))._field_s.ptr(), (*(_96733_pair)).get()._field_Field.get()._field_Kind);;
	if ((_96917_f == nullptr)) {
		_22141a8ae_pushErr(_self_, (*(_96733_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_96733_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _96917_f.get()._field_Decl.get()._field_Public, _96917_f.get()._field_Decl.get()._field_Token)))) {
		_22141a8ae_pushErr(_self_, (*(_96733_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_96733_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_22141abcd_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto expr = _96760_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20632e07e:;
		if (it != expr_end) {
			jule::Ptr<_2211a8cac_Expr> _98121_expr = *it;
			{
				{
					auto &_match_expr{ _98121_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_20632e8dc:;
						{
							jule::Ptr<_2211ad71d_FieldExprPair> _98425_dpair = _98121_expr.get()._field_Kind.cast_ptr<_2211ad71d_FieldExprPair>(&__jule_any_type83);;
							{
								
								if (((*(_96733_pair)) == _98425_dpair)) {
									_case_begin_206330866:;
									{
										goto _iter_end_20632e07e;
									}
								}
								else if (((*(_96733_pair)).get()._field_Field.get()._field_Kind == _98425_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_2063308dd:;
									{
										_22141a8ae_pushErr(_self_, (*(_96733_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_96733_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_20632e07e;
									}
								}
								_match_end_2063307ab:;
							};
						}
					}
					_match_end_20632e733:;
				};
			}
			_iter_next_20632e07e:;
			++it;
			goto _iter_begin_20632e07e;
		}
		_iter_end_20632e07e:;
	};
	jule::Ptr<_221453397_TypeKind> _99517_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_99517_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_96917_f.get()._field_Kind;
	jule::Ptr<_221425c2c_Data> _99917_d = _221444267_evalExpr((*(_self_))._field_e, (*(_96733_pair)).get()._field_Expr);;
	if ((_99917_d == nullptr)) {
		return;;
	};
	_22141b096_pushMatch(_self_, &(_96917_f), &(_99917_d), &((*(_96733_pair)).get()._field_Field));
}



inline jule::Bool _22141b6c3_readyExprs(_22141a3a3_structLitChecker* _self_, jule::Slice<jule::Ptr<_2211a8cac_Expr>>* _100634_exprs) {
	jule::Bool _100717_ok = true;;
	{
		auto expr = _100634_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206333dca:;
		if (it != expr_end) {
			jule::I32 _100814_i = it - expr->begin();
			jule::Ptr<_2211a8cac_Expr> _100821_expr = *it;
			{
				{
					auto &_match_expr{ _100821_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_206334b23:;
						{
							jule::Ptr<_2211aebb4_KeyValPair> _101125_pair = _100821_expr.get()._field_Kind.cast_ptr<_2211aebb4_KeyValPair>(&__jule_any_type84);;
							{
								auto &_match_expr{ _101125_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type85) {
									_case_begin_20633544d:;
									{
										goto _match_end_2063358c1;
									}
								}
								else {
									_case_begin_206335b46:;
									{
										_22141a8ae_pushErr(_self_, _101125_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_100717_ok=false;
										goto _iter_next_206333dca;
									}
								}
								_match_end_2063358c1:;
							};
							(*(_100634_exprs))[_100814_i].get()._field_Kind=jule::Any(jule::new_ptr<_2211ad71d_FieldExprPair>(_2211ad71d_FieldExprPair{._field_Field=_101125_pair.get()._field_Key.get()._field_Token, ._field_Expr=_101125_pair.get()._field_Val}), &__jule_any_type83);
						}
					}
					_match_end_206334969:;
				};
			}
			_iter_next_206333dca:;
			++it;
			_100814_i++;
			goto _iter_begin_206333dca;
		}
		_iter_end_206333dca:;
	};
	return _100717_ok;;
}



inline void _22141b948_check(_22141a3a3_structLitChecker* _self_, jule::Slice<jule::Ptr<_2211a8cac_Expr>>* _103029_exprs) {
	if (((*(_103029_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_22141b6c3_readyExprs(_self_, _103029_exprs)))) {
		return;;
	};
	jule::Bool _103717_paired = false;;
	{
		auto expr = _103029_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2063348ae:;
		if (it != expr_end) {
			jule::I32 _103814_i = it - expr->begin();
			jule::Ptr<_2211a8cac_Expr> _103821_expr = *it;
			{
				{
					auto &_match_expr{ _103821_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_20633d599:;
						{
							jule::Ptr<_2211ad71d_FieldExprPair> _104125_pair = _103821_expr.get()._field_Kind.cast_ptr<_2211ad71d_FieldExprPair>(&__jule_any_type83);;
							if (((_103814_i > 0LL) && (!(_103717_paired)))) {
								_22141a8ae_pushErr(_self_, _104125_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103717_paired=true;
							_22141b3b5_checkPair(_self_, &(_104125_pair), _103029_exprs);
						}
					}
					else {
						_case_begin_206338ac2:;
						{
							if (_103717_paired) {
								_22141a8ae_pushErr(_self_, _103821_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_103814_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_22141a8ae_pushErr(_self_, _103821_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_2063348ae;
							};
							jule::Ptr<_2211c6bed_FieldIns> _105625_field = (*(_self_))._field_s.get()._field_Fields[_103814_i];;
							if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _105625_field.get()._field_Decl.get()._field_Public, _105625_field.get()._field_Decl.get()._field_Token)))) {
								_22141a8ae_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_22141abcd_pushSuggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_221453397_TypeKind> _106425_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_106425_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_105625_field.get()._field_Kind;
							jule::Ptr<_221425c2c_Data> _106825_d = _221444267_evalExpr((*(_self_))._field_e, _103821_expr);;
							if ((_106825_d == nullptr)) {
								goto _iter_next_2063348ae;
							};
							_22141b096_pushMatch(_self_, &(_105625_field), &(_106825_d), &(_103821_expr.get()._field_Token));
						}
					}
					_match_end_20633894b:;
				};
			}
			_iter_next_2063348ae:;
			++it;
			_103814_i++;
			goto _iter_begin_2063348ae;
		}
		_iter_end_2063348ae:;
	};
	if ((!(_103717_paired))) {
		jule::I32 _107917_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I32 _108021_diff = (_107917_n - (*(_103029_exprs)).len());;
		{
			
			if ((_108021_diff <= 0LL)) {
				_case_begin_206340ab8:;
				{
					return;;
				}
			}
			_match_end_206340997:;
		};
		jule::Str _108621_idents = jule::Str();;
		for (; (_108021_diff > 0LL); (_108021_diff)--) {
			{
				_108621_idents+=(jule::Str(", ", 2) + (*(_self_))._field_s.get()._field_Fields[(_107917_n - _108021_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_2063414ae:;
		}
		_iter_end_2063414ae:;;
		(_108621_idents).mut_slice(2LL);;
		_22141a8ae_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_108621_idents, &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22141a3a3_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22126b17c_Var> _22141c44e_buildVar(_22141be87_rangeChecker* _self_, jule::Ptr<_2211b71e9_VarDecl>* _110528_decl) {
	jule::Ptr<_22126b17c_Var> _110617_v = _2211e58ba_buildVar((*(_110528_decl)));;
	return _110617_v;;
}



inline void _22141c62a_setSizeKey(_22141be87_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _21da1d2a0_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_22141c44e_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)})});
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_206344dca:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_22126a137_IterRelation>(_22126a137_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_22126b17c_Var>(&__jule_any_type8)});
			}
		}
		_match_end_206344d75:;
	};
}



inline void _22141c9e3_checkRangeExprValidity(_22141be87_rangeChecker* _self_, jule::Ptr<_221425c2c_Data>* _113646_d, jule::Ptr<_22126b17c_Var>* _113657_key, jule::Ptr<_221453397_TypeKind>* _113673_k) {
	jule::Bool _113717__mut = (*(_113657_key)).get()._field_Mutable;;
	if ((_113717__mut && (!(_221454b18_Mutable((*(_113673_k)).ptr()))))) {
		_113717__mut=false;
	};
	_2212588ea_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _113717__mut, (*(_113657_key)).get()._field_Reference, &((*(_113657_key)).get()._field_Kind.get()._field_Kind), _113646_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _22141cbbe_checkSlice(_22141be87_rangeChecker* _self_) {
	_22141c62a_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _21da1d2a0_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_22145e7b0_Slc> _115517_slc = _221456a1b_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_22141c44e_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=_115517_slc.get()._field_Elem});
	_22141c9e3_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_115517_slc.get()._field_Elem));
}



inline void _22141cd9a_checkArray(_22141be87_rangeChecker* _self_) {
	_22141c62a_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _21da1d2a0_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_22146195a_Arr> _116817_arr = _2214567a7_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_22141c44e_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=_116817_arr.get()._field_Elem});
	_22141c9e3_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_116817_arr.get()._field_Elem));
}



inline void _22141d076_checkMapKeyA(_22141be87_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _21da1d2a0_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_221460d66_Map> _118017_m = _2214574bc_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_22141c44e_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=_118017_m.get()._field_Key});
	jule::Ptr<_221425c2c_Data> _118417_d = jule::new_ptr<_221425c2c_Data>((*((*(_self_))._field_d)));;
	_118417_d.get()._field_Kind=_118017_m.get()._field_Key;
	_22141c9e3_checkRangeExprValidity(_self_, &(_118417_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_118017_m.get()._field_Key));
}



inline void _22141d252_checkMapKeyB(_22141be87_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _21da1d2a0_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_221460d66_Map> _119517_m = _2214574bc_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_22141c44e_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=_119517_m.get()._field_Val});
	jule::Ptr<_221425c2c_Data> _119917_d = jule::new_ptr<_221425c2c_Data>((*((*(_self_))._field_d)));;
	_119917_d.get()._field_Kind=_119517_m.get()._field_Val;
	_22141c9e3_checkRangeExprValidity(_self_, &(_119917_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_119517_m.get()._field_Val));
}



inline void _22141d42d_checkMap(_22141be87_rangeChecker* _self_) {
	_22141d076_checkMapKeyA(_self_);
	_22141d252_checkMapKeyB(_self_);
}



inline void _22141d609_checkStr(_22141be87_rangeChecker* _self_) {
	_22141c62a_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _21da1d2a0_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_22141c44e_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("u8", 2)), 18)})});
}



inline void _22141d7d5_checkComptime(_22141be87_rangeChecker* _self_) {
	_22141c62a_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyA != nullptr) && (*(_self_))._field_rang.get()._field_KeyA.get()._field_Mutable)) {
		_22124d747_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyA.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB != nullptr) && (*(_self_))._field_rang.get()._field_KeyB.get()._field_Mutable)) {
		_22124d747_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyB.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _21da1d2a0_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_22141c44e_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
}



inline jule::Bool _22141da49_checkComptimeRange(_22141be87_rangeChecker* _self_) {
	jule::Ptr<_221202ed2_comptimeRange> _123817_range = _221458b83_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _123817_range.get()._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1)) {
			_case_begin_20635be7a:;
			{
				_22141d7d5_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_20635b70a:;
			{
				_22124d747_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_20635b6a5:;
	};
}



inline jule::Bool _22141dcad_check(_22141be87_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_20635d311:;
		}
		else if ((_221456a1b_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20635d377:;
			{
				_22141cbbe_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_2214567a7_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20635d3dd:;
			{
				_22141cd9a_checkArray(_self_);
				return true;;
			}
		}
		else if ((_2214574bc_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20635d454:;
			{
				_22141d42d_checkMap(_self_);
				return true;;
			}
		}
		else if ((_221458b83_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20635e752:;
			{
				return _22141da49_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_20635c6d9:;
			{
				jule::Ptr<_22145a5be_Prim> _126917_prim = _221455a92_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_126917_prim != nullptr) && _22145d803_IsStr(_126917_prim.ptr()))) {
					_22141d609_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_20635cb18:;
	};
	_22124d747_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _22141be87_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _22141e929_prepareTypes(_22141e484_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_2211ddaa0_Types((*(_self_))._field_f.ptr());
	};
}



inline void _22141eb9e_prepareExprs(_22141e484_retTypeChecker* _self_, jule::Ptr<_2211a8cac_Expr>* _129736_e) {
	if (((*(_129736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_129736_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_206363ed7:;
			{
				(*(_self_))._field_exprs=(*(_129736_e)).get()._field_Kind.cast_ptr<_2211a9939_TupleExpr>(&__jule_any_type86).get()._field_Expr;
			}
		}
		else {
			_case_begin_2063641d5:;
			{
				(*(_self_))._field_exprs = jule::alloc_for_append((*(_self_))._field_exprs,1);(*(_self_))._field_exprs.__push((*(_129736_e)));;
			}
		}
		_match_end_206363d1c:;
	};
}



inline void _22141ed7a_checkExprs(_22141e484_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_221425c2c_Data>> _131317_datas = jule::Slice<jule::Ptr<_221425c2c_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_22142779a_Eval> _131417_eval = _2212554da_eval((*(_self_))._field_sc.get()._field_s, jule::Trait<_22147198c_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20636457b:;
		if (it != expr_end) {
			jule::I32 _131514_i = it - expr->begin();
			jule::Ptr<_2211a8cac_Expr> _131521_expr = *it;
			{
				if ((_131514_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_20636457b;
				};
				jule::Ptr<_221453397_TypeKind> _132021_t = (*(_self_))._field_types[_131514_i];;
				_131417_eval.get()._field_prefix=_132021_t;
				jule::Ptr<_221425c2c_Data> _132321_d = _221444267_evalExpr(_131417_eval, _131521_expr);;
				if ((_132321_d == nullptr)) {
					goto _iter_next_20636457b;
				};
				_131317_datas = jule::alloc_for_append(_131317_datas,1);_131317_datas.__push(_132321_d);;
				if (((!(_132321_d.get()._field_Mutable)) && _221454b18_Mutable(_132321_d.get()._field_Kind.ptr()))) {
					_22124d747_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_2214115ec_assignTypeChecker _133521_ac = _2214115ec_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_132021_t, ._field_d=_132321_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_221412774_check(&_133521_ac);
			}
			_iter_next_20636457b:;
			++it;
			_131514_i++;
			goto _iter_begin_20636457b;
		}
		_iter_end_20636457b:;
	};
	if ((_131317_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_2211d26ed_TupleExprModel>(_2211d26ed_TupleExprModel{._field_Datas=_131317_datas}), &__jule_any_type87);
	} else if ((_131317_datas.len() == 1LL)) {
		(*(_self_))._field_model=_131317_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _221420188_check(_22141e484_retTypeChecker* _self_, jule::Ptr<_2211a8cac_Expr>* _135429_e) {
	_22141e929_prepareTypes(_self_);
	_22141eb9e_prepareExprs(_self_, _135429_e);
	jule::I32 _135813_n = (*(_self_))._field_exprs.len();;
	if (((_135813_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_2211dae54_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_22124d747_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_135813_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _2211da23e_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_22124d747_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_135813_n > (*(_self_))._field_types.len())) {
		_22124d747_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_135813_n < (*(_self_))._field_types.len())) {
		_22124d747_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_22141ed7a_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _22141e484_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_221242a9e_ImportInfo> _22142172d_SelectPackage(_221421222_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206377160:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_206377160:;
			++it;
			goto _iter_begin_206377160;
		}
		_iter_end_206377160:;
	};
	return nullptr;;
}



inline jule::Ptr<_22126b17c_Var> _221421ad5_FindVar(_221421222_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_cppLinked) {
	return _221423697_findVar(_self_, _4126_ident, _4138_cppLinked, false);;
}



inline jule::Ptr<_22145264e_TypeAlias> _221421e8c_FindTypeAlias(_221421222_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_cppLinked) {
	return _221423ae8_findTypeAlias(_self_, _4732_ident, _4744_cppLinked, false);;
}



inline jule::Ptr<_2211c48cc_Struct> _221422344_FindStruct(_221421222_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2063795a2:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> _5421_s = *it;
			{
				if (((_5421_s.get()._field_Ident == _5329_ident) && (_5421_s.get()._field_CppLinked == _5341_cppLinked))) {
					return _5421_s;;
				};
			}
			_iter_next_2063795a2:;
			++it;
			goto _iter_begin_2063795a2;
		}
		_iter_end_2063795a2:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211d9ccc_Fn> _2214226eb_FindFn(_221421222_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20637a99e:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _6521_f = *it;
			{
				if (((_6521_f.get()._field_Ident == _6425_ident) && (_6521_f.get()._field_CppLinked == _6437_cppLinked))) {
					return _6521_f;;
				};
			}
			_iter_next_20637a99e:;
			++it;
			goto _iter_begin_20637a99e;
		}
		_iter_end_20637a99e:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211ebeed_Trait> _221422a09_FindTrait(_221421222_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20637bb6a:;
		if (it != expr_end) {
			jule::Ptr<_2211ebeed_Trait> _7621_t = *it;
			{
				if ((_7621_t.get()._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_20637bb6a:;
			++it;
			goto _iter_begin_20637bb6a;
		}
		_iter_end_20637bb6a:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211ee781_Enum> _221422d17_FindEnum(_221421222_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20637ca4a:;
		if (it != expr_end) {
			jule::Ptr<_2211ee781_Enum> _8721_e = *it;
			{
				if ((_8721_e.get()._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_20637ca4a:;
			++it;
			goto _iter_begin_20637ca4a;
		}
		_iter_end_20637ca4a:;
	};
	return nullptr;;
}



inline jule::Ptr<_221200d7b_TypeEnum> _221423125_FindTypeEnum(_221421222_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20637d92a:;
		if (it != expr_end) {
			jule::Ptr<_221200d7b_TypeEnum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_20637d92a:;
			++it;
			goto _iter_begin_20637d92a;
		}
		_iter_end_20637d92a:;
	};
	return nullptr;;
}



inline jule::Ptr<_22126b17c_Var> _221423697_findVar(_221421222_SymbolTable* _self_, jule::Str _10826_ident, jule::Bool _10838_cppLinked, jule::Bool _10855_reverse) {
	if (_10855_reverse) {
		jule::I32 _11021_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_22126b17c_Var> _11225_v = (*(_self_))._field_Vars[_11021_i];;
				if (((_11225_v.get()._field_Ident == _10826_ident) && (_11225_v.get()._field_CppLinked == _10838_cppLinked))) {
					return _11225_v;;
				};
			}
		_iter_next_2063808e9:;
		}
		_iter_end_2063808e9:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_206380465:;
			if (it != expr_end) {
				jule::Ptr<_22126b17c_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_Ident == _10826_ident) && (_11825_v.get()._field_CppLinked == _10838_cppLinked))) {
						return _11825_v;;
					};
				}
				_iter_next_206380465:;
				++it;
				goto _iter_begin_206380465;
			}
			_iter_end_206380465:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_22145264e_TypeAlias> _221423ae8_findTypeAlias(_221421222_SymbolTable* _self_, jule::Str _12732_ident, jule::Bool _12744_cppLinked, jule::Bool _12761_reverse) {
	if (_12761_reverse) {
		jule::I32 _12921_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_22145264e_TypeAlias> _13125_ta = (*(_self_))._field_TypeAliases[_12921_i];;
				if (((_13125_ta.get()._field_Ident == _12732_ident) && (_13125_ta.get()._field_CppLinked == _12744_cppLinked))) {
					return _13125_ta;;
				};
			}
		_iter_next_206383a1d:;
		}
		_iter_end_206383a1d:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_206383589:;
			if (it != expr_end) {
				jule::Ptr<_22145264e_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_Ident == _12732_ident) && (_13725_ta.get()._field_CppLinked == _12744_cppLinked))) {
						return _13725_ta;;
					};
				}
				_iter_next_206383589:;
				++it;
				goto _iter_begin_206383589;
			}
			_iter_end_206383589:;
		};
	};
	return nullptr;;
}



inline jule::Any _221423ea0_defByIdent(_221421222_SymbolTable* _self_, jule::Str _14829_ident, jule::Bool _14841_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206385cc8:;
		if (it != expr_end) {
			jule::Ptr<_22126b17c_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_Ident == _14829_ident) && (_14921_v.get()._field_CppLinked == _14841_cppLinked))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_206385cc8:;
			++it;
			goto _iter_begin_206385cc8;
		}
		_iter_end_206385cc8:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206385338:;
		if (it != expr_end) {
			jule::Ptr<_22145264e_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_Ident == _14829_ident) && (_15521_ta.get()._field_CppLinked == _14841_cppLinked))) {
					return jule::Any(_15521_ta, &__jule_any_type67);;
				};
			}
			_iter_next_206385338:;
			++it;
			goto _iter_begin_206385338;
		}
		_iter_end_206385338:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206386c30:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_Ident == _14829_ident) && (_16121_s.get()._field_CppLinked == _14841_cppLinked))) {
					return jule::Any(_16121_s, &__jule_any_type66);;
				};
			}
			_iter_next_206386c30:;
			++it;
			goto _iter_begin_206386c30;
		}
		_iter_end_206386c30:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20638835d:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_Ident == _14829_ident) && (_16721_f.get()._field_CppLinked == _14841_cppLinked))) {
					return jule::Any(_16721_f, &__jule_any_type65);;
				};
			}
			_iter_next_20638835d:;
			++it;
			goto _iter_begin_20638835d;
		}
		_iter_end_20638835d:;
	};
	if (_14841_cppLinked) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2063897c1:;
		if (it != expr_end) {
			jule::Ptr<_2211ebeed_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_Ident == _14829_ident)) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_2063897c1:;
			++it;
			goto _iter_begin_2063897c1;
		}
		_iter_end_2063897c1:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20638a3c6:;
		if (it != expr_end) {
			jule::Ptr<_2211ee781_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18321_e, &__jule_any_type68);;
				};
			}
			_iter_next_20638a3c6:;
			++it;
			goto _iter_begin_20638a3c6;
		}
		_iter_end_20638a3c6:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206387c0e:;
		if (it != expr_end) {
			jule::Ptr<_221200d7b_TypeEnum> _18921_te = *it;
			{
				if ((_18921_te.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18921_te, &__jule_any_type69);;
				};
			}
			_iter_next_206387c0e:;
			++it;
			goto _iter_begin_206387c0e;
		}
		_iter_end_206387c0e:;
	};
	return nullptr;;
}



inline jule::Bool _221424401_isDuplicatedIdent(_221421222_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str _20149_ident, jule::Bool _20161_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20638bb7a:;
		if (it != expr_end) {
			jule::Ptr<_22126b17c_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*(_20216_v)).get()._field_Ident == _20149_ident)) && ((*(_20216_v)).get()._field_CppLinked == _20161_cppLinked))) {
					return true;;
				};
			}
			_iter_next_20638bb7a:;
			++it;
			goto _iter_begin_20638bb7a;
		}
		_iter_end_20638bb7a:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20638bb36:;
		if (it != expr_end) {
			jule::Ptr<_22145264e_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*(_20816_ta)).get()._field_Ident == _20149_ident)) && ((*(_20816_ta)).get()._field_CppLinked == _20161_cppLinked))) {
					return true;;
				};
			}
			_iter_next_20638bb36:;
			++it;
			goto _iter_begin_20638bb36;
		}
		_iter_end_20638bb36:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20638cb48:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*(_21416_s)).get()._field_Ident == _20149_ident)) && ((*(_21416_s)).get()._field_CppLinked == _20161_cppLinked))) {
					return true;;
				};
			}
			_iter_next_20638cb48:;
			++it;
			goto _iter_begin_20638cb48;
		}
		_iter_end_20638cb48:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20638e298:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*(_22016_f)).get()._field_Ident == _20149_ident)) && ((*(_22016_f)).get()._field_CppLinked == _20161_cppLinked))) {
					return true;;
				};
			}
			_iter_next_20638e298:;
			++it;
			goto _iter_begin_20638e298;
		}
		_iter_end_20638e298:;
	};
	if (_20161_cppLinked) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20639170c:;
		if (it != expr_end) {
			jule::Ptr<_2211ebeed_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*(_23016_t)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_20639170c:;
			++it;
			goto _iter_begin_20639170c;
		}
		_iter_end_20639170c:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206391cd4:;
		if (it != expr_end) {
			jule::Ptr<_2211ee781_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*(_23616_e)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_206391cd4:;
			++it;
			goto _iter_begin_206391cd4;
		}
		_iter_end_206391cd4:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206392ed3:;
		if (it != expr_end) {
			jule::Ptr<_221200d7b_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*(_24216_te)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_206392ed3:;
			++it;
			goto _iter_begin_206392ed3;
		}
		_iter_end_206392ed3:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _221421222_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221426117_IsNil(_221425c2c_Data* _self_) {
	return _2214543cb_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _22142637b_IsVoid(_221425c2c_Data* _self_) {
	return _221454640_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _2214265e0_IsConst(_221425c2c_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _2214268ed_GoodOperand(_221425c2c_Data* _self_, jule::Ptr<_221425c2c_Data>* _10031_other) {
	if ((_221456543_TypeEnum((*(_10031_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_221455a92_Prim((*(_10031_other)).get()._field_Kind.ptr()) == nullptr) || (!(_22145da67_IsAny(_221455a92_Prim((*(_10031_other)).get()._field_Kind.ptr()).ptr())))) && (_221457258_Trait((*(_10031_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_2214543cb_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _221425c2c_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221426ca5_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _221427ca6_pushErr(_22142779a_Eval* _self_, jule::Ptr<_21da1aa0b_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_22124d747_pushErr((*(_self_))._field_s.ptr(), _13126_token, _13141_fmt, _13154_args);
}



inline void _2214280c5_pushSuggestion(_22142779a_Eval* _self_, jule::Str _13633_fmt, jule::Slice<jule::Any> _13646_args) {
	_22124da66_pushSuggestion((*(_self_))._field_s.ptr(), _13633_fmt, _13646_args);
}



inline void _2214282a1_allowBuiltin(_22142779a_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _22142847c_disallowBuiltin(_22142779a_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _2214286e1_isUnsafe(_22142779a_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _221428955_isGlobal(_22142779a_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_2063c4b91:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2063c409c:;
			{
				return false;;
			}
		}
		_match_end_2063c461e:;
	};
}



inline jule::Bool _221428c30_applyNumericPrefix(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data>* _16342_d) {
	if ((((((*(_16342_d)) == nullptr) || (!(_2214265e0_IsConst((*(_16342_d)).ptr())))) || (_221455a92_Prim((*(_16342_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_22145a5be_Prim> _17013_prim = _221455a92_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_21e6c4c03_IsFloat(_22145a932_Str(_17013_prim.ptr()))) {
			_case_begin_2063c6d80:;
			{
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_221453397_TypeKind>((*((*(_self_))._field_prefix)));
				_21e6c8b3b_SetF64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_21e6c7dc1_AsF64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_21e6c4351_IsSigInt(_22145a932_Str(_17013_prim.ptr()))) {
			_case_begin_2063c6de6:;
			{
				if ((!(_22140dd47_sigAssignable(_22145a932_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_221453397_TypeKind>((*((*(_self_))._field_prefix)));
				_21e6c8146_SetI64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_21e6c78e8_AsI64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_21e6c463c_IsUnsigInt(_22145a932_Str(_17013_prim.ptr()))) {
			_case_begin_2063c6e5c:;
			{
				if ((!(_22140e1cc_unsigAssignable(_22145a932_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_221453397_TypeKind>((*((*(_self_))._field_prefix)));
				_21e6c83bb_SetU64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_21e6c7b5c_AsU64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_2063c6b60:;
	};
	return true;;
}



inline jule::Ptr<_221425c2c_Data> _221428e94_litNil(_22142779a_Eval* _self_) {
	jule::Ptr<_21e6c53da_Const> _20217_constant = static__21e6c65d9_NewNil();;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type19), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_221425c2c_Data> _2214292a2_litStr(_22142779a_Eval* _self_, jule::Ptr<_2211a9ce1_LitExpr>* _21122_l) {
	jule::Str _21217_s = (*(_21122_l)).get()._field_Value.slice(1LL, ((*(_21122_l)).get()._field_Value.len() - 1LL));;
	if (_21da1bd5e_IsRawStr((*(_21122_l)).get()._field_Value)) {
		_21217_s=_22129ba3c_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_22129bd5b_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_21e6c53da_Const> _21817_constant = static__21e6c6144_NewStr(_21217_s);;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("str", 3)), 18)}), ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type19), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_221425c2c_Data> _2214295b0_litBool(_22142779a_Eval* _self_, jule::Ptr<_2211a9ce1_LitExpr>* _23023_l) {
	jule::Ptr<_21e6c53da_Const> _23117_constant = static__21e6c5d9c_NewBool((*(_23023_l)).get()._field_Value.equal("true", 4));;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Mutable=true, ._field_Model=jule::Any(_23117_constant, &__jule_any_type19), ._field_Constant=_23117_constant});;
}



inline jule::Ptr<_221425c2c_Data> _2214298bd_litRune(_22142779a_Eval* _self_, jule::Ptr<_2211a9ce1_LitExpr>* _24223_l) {
	;
	;
	jule::Str _24713_lt = (*(_24223_l)).get()._field_Value.slice(1LL, ((*(_24223_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _24813_r = _221284a36_ToRune(static_cast<jule::Slice<jule::U8>>(_24713_lt));;
	jule::Ptr<_221425c2c_Data> _24917_data = jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24813_r)))});;
	jule::Bool _25313_isAscii = _221284904_IsAscii(_24813_r);;
	if (_25313_isAscii) {
		_24917_data.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("u8", 2)), 18)});
	} else {
		_24917_data.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("i32", 3)), 18)});
	};
	_24917_data.get()._field_Mutable=true;
	_24917_data.get()._field_Model=jule::Any(jule::new_ptr<_2211d6812_RuneExprModel>(_2211d6812_RuneExprModel{._field_Code=_24813_r}), &__jule_any_type88);
	_24917_data.get()._field_IsRune=true;
	_24917_data.get()._field_untyped=true;
	return _24917_data;;
}



inline jule::Ptr<_221425c2c_Data> _221429bcb_litFloat(_22142779a_Eval* _self_, jule::Ptr<_2211a9ce1_LitExpr>* _27124_l) {
	;
	jule::F64 _27313_f = ({
		auto except = _21e6ab3e3_ParseFloat((*(_27124_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_21e6c53da_Const> _27417_constant = static__21e6c63db_NewF64(_27313_f);;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("f64", 3)), 18)}), ._field_Mutable=true, ._field_Model=jule::Any(_27417_constant, &__jule_any_type19), ._field_Constant=_27417_constant});;
}



inline jule::Ptr<_221425c2c_Data> _221429ed9_litInt(_22142779a_Eval* _self_, jule::Ptr<_2211a9ce1_LitExpr>* _28626_l) {
	;
	jule::Str _28917_lit = (*(_28626_l)).get()._field_Value;;
	jule::I32 _29017_base = 0LL;;
	{
		
		if (_21d5d474b_HasPrefix(_28917_lit, jule::Str("0x", 2))) {
			_case_begin_2063d8435:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=16LLU;
			}
		}
		else if (_21d5d474b_HasPrefix(_28917_lit, jule::Str("0b", 2))) {
			_case_begin_2063d849b:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=2LLU;
			}
		}
		else if (_21d5d474b_HasPrefix(_28917_lit, jule::Str("0o", 2))) {
			_case_begin_2063d8149:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=8LLU;
			}
		}
		else if (((_28917_lit[0LL] == '0') && (_28917_lit.len() > 1LL))) {
			_case_begin_2063d81b0:;
			{
				(_28917_lit).mut_slice(1LL);;
				_29017_base=8LLU;
			}
		}
		else {
			_case_begin_2063d80d3:;
			{
				_29017_base=10LLU;
			}
		}
		_match_end_2063d806c:;
	};
	jule::Ptr<_221425c2c_Data> _31017_d = jule::new_ptr<_221425c2c_Data>();;
	jule::Bool _31217_ok = true;;
	jule::I64 _31313_sig = ({
		auto except = _21e6a4e03_ParseInt(_28917_lit, _29017_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_31217_ok=false;

			0LL;
		});
	});;
	if (_31217_ok) {
		_31017_d.get()._field_Constant=static__21e6c585d_NewI64(_31313_sig);
		_31017_d.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)});
	} else {
		jule::U64 _32317_unsig = ({
			auto except = _21e6a4991_ParseUint(_28917_lit, _29017_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_221427ca6_pushErr(_self_, (*(_28626_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_2214280c5_pushSuggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_31017_d.get()._field_Constant=static__21e6c5b05_NewU64(_32317_unsig);
		_31017_d.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("uint", 4)), 18)});
	};
	_31017_d.get()._field_Model=jule::Any(_31017_d.get()._field_Constant, &__jule_any_type19);
	if ((!(_221428c30_applyNumericPrefix(_self_, &(_31017_d))))) {
		_22144c99b_fitBitsize(&(_31017_d));
	};
	_31017_d.get()._field_Mutable=true;
	_31017_d.get()._field_untyped=true;
	return _31017_d;;
}



inline jule::Ptr<_221425c2c_Data> _22142a2e7_litNum(_22142779a_Eval* _self_, jule::Ptr<_2211a9ce1_LitExpr>* _34626_l) {
	{
		
		if (_21da1c9b9_IsFloat((*(_34626_l)).get()._field_Value)) {
			_case_begin_2063e1262:;
			{
				return _221429bcb_litFloat(_self_, _34626_l);;
			}
		}
		else {
			_case_begin_2063e0a69:;
			{
				return _221429ed9_litInt(_self_, _34626_l);;
			}
		}
		_match_end_2063e099d:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22142a605_evalLit(_22142779a_Eval* _self_, jule::Ptr<_2211a9ce1_LitExpr> _35526_lit) {
	{
		
		if (_2211aa143_IsNil(_35526_lit.ptr())) {
			_case_begin_2063e2373:;
			{
				return _221428e94_litNil(_self_);;
			}
		}
		else if (_21da1bab7_IsStr(_35526_lit.get()._field_Value)) {
			_case_begin_2063e1c9b:;
			{
				return _2214292a2_litStr(_self_, &(_35526_lit));;
			}
		}
		else if (_21da1c722_IsBool(_35526_lit.get()._field_Value)) {
			_case_begin_2063e1d23:;
			{
				return _2214295b0_litBool(_self_, &(_35526_lit));;
			}
		}
		else if (_21da1c106_IsRune(_35526_lit.get()._field_Value)) {
			_case_begin_2063e1d9a:;
			{
				return _2214298bd_litRune(_self_, &(_35526_lit));;
			}
		}
		else if (_21da1cc61_IsNum(_35526_lit.get()._field_Value)) {
			_case_begin_2063e2098:;
			{
				return _22142a2e7_litNum(_self_, &(_35526_lit));;
			}
		}
		else {
			_case_begin_2063e17b2:;
			{
				return nullptr;;
			}
		}
		_match_end_2063e16e6:;
	};
}



inline jule::Any _22142a913_findBuiltins(_22142779a_Eval* _self_, jule::Str _37231_ident) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_2063e4199:;
			{
				jule::Any _37521_def = _22144c78c_findBuiltinsImport(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_221242a9e_ImportInfo>(1));;
				if ((_37521_def != nullptr)) {
					return _37521_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_2063e461c:;
			{
				jule::Any _38021_def = _22144d42a_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_22124ad71_Sema>(3));;
				if ((_38021_def != nullptr)) {
					return _38021_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_2063e4683:;
			{
				jule::Any _38521_def = _22144d42a_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_22122ac63_scopeChecker>(0).get()._field_s);;
				if ((_38521_def != nullptr)) {
					return _38521_def;;
				};
			}
		}
		_match_end_2063e4144:;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _221517d63_findBuiltinDef(_37231_ident);;
}



inline jule::Any _22142acba_getDef(_22142779a_Eval* _self_, jule::Str _39625_ident, jule::Bool _39637_cppLinked) {
	jule::Ptr<_22126b17c_Var> _40117_v = _22147198c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._221470309_FindVar((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40117_v != nullptr)) {
		return jule::Any(_40117_v, &__jule_any_type8);;
	};
	jule::Ptr<_22145264e_TypeAlias> _40617_ta = _22147198c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2214706b1_FindTypeAlias((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40617_ta != nullptr)) {
		return jule::Any(_40617_ta, &__jule_any_type67);;
	};
	if ((!(_39637_cppLinked))) {
		jule::Ptr<_2211ee781_Enum> _41221_enm = _22147198c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._22147153b_FindEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41221_enm != nullptr)) {
			return jule::Any(_41221_enm, &__jule_any_type68);;
		};
		jule::Ptr<_221200d7b_TypeEnum> _41721_tenm = _22147198c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._221471849_FindTypeEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41721_tenm != nullptr)) {
			return jule::Any(_41721_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_2211d9ccc_Fn> _42317_f = _22147198c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._221470e20_FindFn((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42317_f != nullptr)) {
		return jule::Any(_42317_f, &__jule_any_type65);;
	};
	jule::Ptr<_2211c48cc_Struct> _42817_s = _22147198c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._221470a68_FindStruct((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42817_s != nullptr)) {
		return jule::Any(_42817_s, &__jule_any_type66);;
	};
	return _22142a913_findBuiltins(_self_, _39625_ident);;
}



inline void _206409e6d_pushReference(_22142779a_Eval* _self_, jule::Ptr<_2211dc97d_FnIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_20640b9b9:;
			{
				jule::Ptr<_22122ac63_scopeChecker> _43921_sc = _22122dcee_getHardRoot((*(_self_))._field_lookup.cast_ptr<_22122ac63_scopeChecker>(0));;
				if ((!(_20640c9ed_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_2211e1553_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_20640b326:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_20640c9ed_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_2211e1553_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_20640b2c1:;
	};
}

inline void _20641dc73_pushReference(_22142779a_Eval* _self_, jule::Ptr<_22126b17c_Var>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_206420736:;
			{
				jule::Ptr<_22122ac63_scopeChecker> _43921_sc = _22122dcee_getHardRoot((*(_self_))._field_lookup.cast_ptr<_22122ac63_scopeChecker>(0));;
				if ((!(_20642176a_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_2211e1553_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_206420093:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_20642176a_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_2211e1553_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_20642003d:;
	};
}

inline void _20649d8d5_pushReference(_22142779a_Eval* _self_, jule::Ptr<_2211c76e3_StructIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_2064a0486:;
			{
				jule::Ptr<_22122ac63_scopeChecker> _43921_sc = _22122dcee_getHardRoot((*(_self_))._field_lookup.cast_ptr<_22122ac63_scopeChecker>(0));;
				if ((!(_2064a14ba_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_2211e1553_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_20649ece3:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_2064a14ba_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_2211e1553_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_20649ec8d:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22142b34d__evalEnum(_22142779a_Eval* _self_, jule::Ptr<_2211ee781_Enum> _45328_enm) {
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_45328_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_221425c2c_Data> _22142b705_evalEnum(_22142779a_Eval* _self_, jule::Ptr<_2211ee781_Enum> _46231_enm, jule::Ptr<_21da1aa0b_Token> _46243_errorToken) {
	if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), _46231_enm.get()._field_Public, _46231_enm.get()._field_Token)))) {
		_221427ca6_pushErr(_self_, _46243_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_46231_enm.get()._field_Ident, &__jule_any_type5)}));
		_2214280c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _22142b34d__evalEnum(_self_, _46231_enm);;
}



inline jule::Ptr<_221425c2c_Data> _22142ba13__evalTypeEnum(_22142779a_Eval* _self_, jule::Ptr<_221200d7b_TypeEnum> _47132_enm) {
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_47132_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_221425c2c_Data> _22142bdba_evalTypeEnum(_22142779a_Eval* _self_, jule::Ptr<_221200d7b_TypeEnum> _48035_enm, jule::Ptr<_21da1aa0b_Token> _48051_errorToken) {
	if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), _48035_enm.get()._field_Public, _48035_enm.get()._field_Token)))) {
		_221427ca6_pushErr(_self_, _48051_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_48035_enm.get()._field_Ident, &__jule_any_type5)}));
		_2214280c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _22142ba13__evalTypeEnum(_self_, _48035_enm);;
}



inline jule::Ptr<_221425c2c_Data> _22142c1c8__evalStruct(_22142779a_Eval* _self_, jule::Ptr<_2211c76e3_StructIns> _48930_s) {
	jule::Ptr<_221425c2c_Data> _49017_d = jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_48930_s, 0)}), ._field_Model=jule::Any(_48930_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_48930_s.get()._field_Decl != nullptr) && _48930_s.get()._field_Decl.get()._field_CppLinked)) {
		_49017_d.get()._field_Kind.get()._field_CppIdent=_48930_s.get()._field_Decl.get()._field_Ident;
	};
	return _49017_d;;
}



inline jule::Ptr<_221425c2c_Data> _22142c580_evalStruct(_22142779a_Eval* _self_, jule::Ptr<_2211c76e3_StructIns> _50333_s, jule::Ptr<_21da1aa0b_Token> _50348_errorToken) {
	if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), _50333_s.get()._field_Decl.get()._field_Public, _50333_s.get()._field_Decl.get()._field_Token)))) {
		_221427ca6_pushErr(_self_, _50348_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_50333_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_2214280c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_22142cbac_checkDeprecated(_self_, &(_50333_s.get()._field_Decl.get()._field_Directives), _50348_errorToken);
	return _22142c1c8__evalStruct(_self_, _50333_s);;
}



inline jule::Ptr<_221425c2c_Data> _22142c88d_evalFnIns(_22142779a_Eval* _self_, jule::Ptr<_2211dc97d_FnIns> _51328_f) {
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_51328_f, 1)}), ._field_Model=jule::Any(_51328_f, &__jule_any_type7), });;
}



inline void _22142cbac_checkDeprecated(_22142779a_Eval* _self_, jule::Slice<jule::Ptr<_221171307_Directive>>* _52239_directives, jule::Ptr<_21da1aa0b_Token> _52270_tok) {
	if (_2214286e1_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_221171307_Directive> _52713_d = _22144c407_findDirective(_52239_directives, jule::Str("deprecated", 10));;
	if ((_52713_d != nullptr)) {
		if ((_52713_d.get()._field_Args.len() == 0LL)) {
			_221427ca6_pushErr(_self_, _52270_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_221427ca6_pushErr(_self_, _52270_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_52713_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_2214280c5_pushSuggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_221425c2c_Data> _22142d064_evalFn(_22142779a_Eval* _self_, jule::Ptr<_2211d9ccc_Fn> _53829_f, jule::Ptr<_21da1aa0b_Token> _53837_errorToken) {
	if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), _53829_f.get()._field_Public, _53829_f.get()._field_Token)))) {
		_221427ca6_pushErr(_self_, _53837_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_53829_f.get()._field_Ident, &__jule_any_type5)}));
		_2214280c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_22142cbac_checkDeprecated(_self_, &(_53829_f.get()._field_Directives), _53837_errorToken);
	jule::Ptr<_2211dc97d_FnIns> _54717_ins = _2211db42c_instance(_53829_f);;
	_206409e6d_pushReference(_self_, &(_54717_ins));
	return _22142c88d_evalFnIns(_self_, _54717_ins);;
}



inline void _22142d42c_pushIllegalCycleError(_22142779a_Eval* _self_, jule::Ptr<_22126b17c_Var>* _55241_v1, jule::Ptr<_22126b17c_Var>* _55252_v2, jule::Str* _55267_message) {
	;
	jule::Str _55413_refers_to = _21d675a2e_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_55241_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_55252_v2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_55267_message))).buffer.insert(0, (((_21d5d3ecb_Repeat(jule::Str(" ", 1), 7LL) + _55413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _22142d7d4_checkCrossCycle(_22142779a_Eval* _self_, jule::Ptr<_22126b17c_Var>* _55835_v, jule::Str* _55849_message) {
	{
		auto expr = &((*(_55835_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20641287c:;
		if (it != expr_end) {
			jule::Ptr<_22126b17c_Var> *_55916_d = it;
			{
				if (((*(_55916_d)) == (*(_self_))._field_owner)) {
					_22142d42c_pushIllegalCycleError(_self_, _55835_v, _55916_d, _55849_message);
					return false;;
				};
				if ((!(_22142d7d4_checkCrossCycle(_self_, _55916_d, _55849_message)))) {
					_22142d42c_pushIllegalCycleError(_self_, _55835_v, _55916_d, _55849_message);
					return false;;
				};
			}
			_iter_next_20641287c:;
			++it;
			goto _iter_begin_20641287c;
		}
		_iter_end_20641287c:;
	};
	return true;;
}



inline jule::Bool _22142db8b_checkIllegalCycles(_22142779a_Eval* _self_, jule::Ptr<_22126b17c_Var>* _57742_v, jule::Ptr<_21da1aa0b_Token> _57751_decl_token) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*(_self_))._field_owner.get()._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_57742_v)))) {
		_221427ca6_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _59017_message = jule::Str();;
	if ((!(_22142d7d4_checkCrossCycle(_self_, _57742_v, &(_59017_message))))) {
		jule::Str _59321_errMsg = _59017_message;;
		_59017_message=jule::Str();
		_22142d42c_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _57742_v, &(_59017_message));
		_59321_errMsg+=_59017_message;
		_221427ca6_pushErr(_self_, _57751_decl_token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_59321_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*(_self_))._field_owner.get()._field_Depends = jule::alloc_for_append((*(_self_))._field_owner.get()._field_Depends,1);(*(_self_))._field_owner.get()._field_Depends.__push((*(_57742_v)));;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_221425c2c_Data> _22142e043_evalVar(_22142779a_Eval* _self_, jule::Ptr<_22126b17c_Var> _60530_v, jule::Ptr<_21da1aa0b_Token> _60539_errorToken) {
	if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), _60530_v.get()._field_Public, _60530_v.get()._field_Token)))) {
		_221427ca6_pushErr(_self_, _60539_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_60530_v.get()._field_Ident, &__jule_any_type5)}));
		_2214280c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_22142cbac_checkDeprecated(_self_, &(_60530_v.get()._field_Directives), _60539_errorToken);
	_60530_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_206419c08:;
			{
				jule::Bool _61917_ok = _22142db8b_checkIllegalCycles(_self_, &(_60530_v), _60539_errorToken);;
				if ((!(_61917_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_206419cb3:;
			{
				if (((!(_60530_v.get()._field_Reference)) || _2214286e1_isUnsafe(_self_))) {
					goto _match_end_206419ba3;
				};
				jule::Ptr<_22122ac63_scopeChecker> _62721_s = (*(_self_))._field_lookup.cast_ptr<_22122ac63_scopeChecker>(0);;
				while (((_62721_s.get()._field_owner == nullptr) && (_62721_s.get()._field_parent != nullptr))) {
					{
						_62721_s=_62721_s.get()._field_parent;
					}
				_iter_next_20641bc93:;
				}
				_iter_end_20641bc93:;;
				if ((((_62721_s.get()._field_owner != nullptr) && _62721_s.get()._field_owner.get()._field_Anon) && (_60530_v.get()._field_Scope != _62721_s.get()._field_owner.get()._field_Scope))) {
					_221427ca6_pushErr(_self_, _60539_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_60530_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_206419ba3:;
	};
	if ((_60530_v.get()._field_Scope == nullptr)) {
		_20641dc73_pushReference(_self_, &(_60530_v));
	};
	if (((!(_60530_v.get()._field_CppLinked)) && ((_60530_v.get()._field_Value == nullptr) || (_60530_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_60530_v.get()._field_Constant) {
			_2212635b4_checkTypeVar((*(_self_))._field_s, &(_60530_v), jule::Trait<_22147198c_Lookup>((*(_self_))._field_s, 3));
			if (((_60530_v.get()._field_Value == nullptr) || (_60530_v.get()._field_Value.get()._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if (((_60530_v.get()._field_Kind == nullptr) || (_60530_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_60530_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_2212635b4_checkTypeVar((*(_self_))._field_s, &(_60530_v), (*(_self_))._field_lookup);
		if (((_60530_v.get()._field_Kind == nullptr) || (_60530_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_221425c2c_Data> _67017_d = jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=_60530_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_60530_v.get()._field_Mutable, ._field_Reference=_60530_v.get()._field_Reference, ._field_Lvalue=(!(_60530_v.get()._field_Constant)), ._field_Model=jule::Any(_60530_v, &__jule_any_type8), });;
	if ((((!(_60530_v.get()._field_CppLinked)) && _22126b545_IsInitialized(_60530_v.ptr())) && (_60530_v.get()._field_Value.get()._field_Data != nullptr))) {
		_67017_d.get()._field_IsRune=_60530_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_60530_v.get()._field_Constant && (_60530_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_67017_d.get()._field_Constant=jule::new_ptr<_21e6c53da_Const>((*(_60530_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_67017_d.get()._field_Model=jule::Any(_67017_d.get()._field_Constant, &__jule_any_type19);
		if (_22126ba1d_untypedConstant(_60530_v.ptr())) {
			_221428c30_applyNumericPrefix(_self_, &(_67017_d));
			_67017_d.get()._field_untyped=true;
		};
	};
	return _67017_d;;
}



inline jule::Ptr<_221425c2c_Data> _22142e3ea_evalTypeAlias(_22142779a_Eval* _self_, jule::Ptr<_22145264e_TypeAlias> _69436_ta, jule::Ptr<_21da1aa0b_Token> _69452_errorToken) {
	if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), _69436_ta.get()._field_Public, _69436_ta.get()._field_Token)))) {
		_221427ca6_pushErr(_self_, _69452_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_69436_ta.get()._field_Ident, &__jule_any_type5)}));
		_2214280c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_69436_ta.get()._field_Used=true;
	jule::Trait<_221452e35_Kind> _70317_kind = _69436_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_221425c2c_Data> _70417_d = nullptr;;
	{
		auto &_match_expr{ _70317_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_20643036c:;
			{
				_70417_d=_22142c1c8__evalStruct(_self_, _70317_kind.cast_ptr<_2211c76e3_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_20642de4d:;
			{
				_70417_d=_22142b34d__evalEnum(_self_, _70317_kind.cast_ptr<_2211ee781_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_20642deb4:;
			{
				_70417_d=_22142ba13__evalTypeEnum(_self_, _70317_kind.cast_ptr<_221200d7b_TypeEnum>(4));
			}
		}
		else {
			_case_begin_20642dd2c:;
			{
				_70417_d=jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=_69436_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_69436_ta.get()._field_CppLinked) {
					_70417_d.get()._field_Kind.get()._field_CppIdent=_69436_ta.get()._field_Ident;
				} else {
					_70417_d.get()._field_Kind.get()._field_CppIdent=_69436_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_70417_d.get()._field_Model=jule::Any(_70417_d.get()._field_Kind, &__jule_any_type89);
			}
		}
		_match_end_20642dcc7:;
	};
	_70417_d.get()._field_Kind.get()._field_Generic=_69436_ta.get()._field_Generic;
	return _70417_d;;
}



inline jule::Ptr<_221425c2c_Data> _22142e7a2_evalDef(_22142779a_Eval* _self_, jule::Any _73030_def, jule::Ptr<_21da1aa0b_Token> _73040_ident) {
	{
		auto &_match_expr{ _73030_def };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_206432b00:;
			{
				return _22142e043_evalVar(_self_, _73030_def.cast_ptr<_22126b17c_Var>(&__jule_any_type8), _73040_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_206432b66:;
			{
				return _22142b705_evalEnum(_self_, _73030_def.cast_ptr<_2211ee781_Enum>(&__jule_any_type68), _73040_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_206432bcc:;
			{
				return _22142bdba_evalTypeEnum(_self_, _73030_def.cast_ptr<_221200d7b_TypeEnum>(&__jule_any_type69), _73040_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_206432c54:;
			{
				return _22142c580_evalStruct(_self_, _2211c4d3e_instance(_73030_def.cast_ptr<_2211c48cc_Struct>(&__jule_any_type66)), _73040_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_206432cba:;
			{
				jule::Ptr<_2211d9ccc_Fn> _74121_f = _73030_def.cast_ptr<_2211d9ccc_Fn>(&__jule_any_type65);;
				if ((!_74121_f.get()._field_Ident.equal("init", 4))) {
					return _22142d064_evalFn(_self_, _74121_f, _73040_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_206432d31:;
			{
				return _22142c88d_evalFnIns(_self_, _73030_def.cast_ptr<_2211dc97d_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_206432da8:;
			{
				return _22142e3ea_evalTypeAlias(_self_, _73030_def.cast_ptr<_22145264e_TypeAlias>(&__jule_any_type67), _73040_ident);;
			}
		}
		_match_end_206432a12:;
	};
	_221427ca6_pushErr(_self_, _73040_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_73040_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_221425c2c_Data> _22142eab0_evalIdent(_22142779a_Eval* _self_, jule::Ptr<_2211aa96d_IdentExpr> _75428_ident) {
	jule::Any _75517_def = _22142acba_getDef(_self_, _75428_ident.get()._field_Ident, _75428_ident.get()._field_CppLinked);;
	return _22142e7a2_evalDef(_self_, _75517_def, _75428_ident.get()._field_Token);;
}



inline jule::Ptr<_221425c2c_Data> _22142edbd_evalUnary(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211ab177_UnaryExpr> _75933_u) {
	_2214446da_unaryEval _76017_unary = static__221444b91_new(_self_);;
	return _221445e39_eval(&_76017_unary, _75933_u);;
}



inline jule::Ptr<_221425c2c_Data> _2214301cb_evalVariadic(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211ab52e_VariadicExpr> _76436_v) {
	if ((_76436_v.get()._field_Expr == nullptr)) {
		_221427ca6_pushErr(_self_.ptr(), _76436_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_221453397_TypeKind> _77017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_77017_prefix;
	});;
	jule::Ptr<_221425c2c_Data> _77417_d = _221444267_evalExpr(_self_, _76436_v.get()._field_Expr);;
	if ((_77417_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_22145582d_Variadicable(_77417_d.get()._field_Kind.ptr())))) {
		_221427ca6_pushErr(_self_.ptr(), _76436_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_77417_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_22145e7b0_Slc> _78413_slc = _221456a1b_Slc(_77417_d.get()._field_Kind.ptr());;
	_77417_d.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_CppIdent=_78413_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_78413_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_78413_slc.get()._field_Elem.get()._field_Kind});
	return _77417_d;;
}



inline jule::Ptr<_221425c2c_Data> _2214304d9_evalUnsafe(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211aa4ea_UnsafeExpr> _79434_u) {
	jule::Bool _79513_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_221425c2c_Data> _79717_d = _221444267_evalExpr(_self_, _79434_u.get()._field_Expr);;
	_self_.get()._field_unsafety=_79513_unsafety;
	return _79717_d;;
}



inline jule::Ptr<_221425c2c_Data> _2214307e7_evalArr(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211b039b_SliceExpr> _80231_s) {
	jule::Ptr<_22146195a_Arr> _80417_pt = _2214567a7_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_22146195a_Arr> _80617_arr = jule::new_ptr<_22146195a_Arr>(_22146195a_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_80417_pt.get()._field_Elem});;
	jule::Bool _81217_filled = false;;
	if ((_80231_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _80231_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_206441548:;
				{
					if ((_80231_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_2211ab52e_VariadicExpr>(&__jule_any_type81).get()._field_Expr != nullptr)) {
						goto _match_end_2064414e3;
					};
					if (_80417_pt.get()._field_Auto) {
						_221427ca6_pushErr(_self_.ptr(), _80231_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_81217_filled=true;
					_80231_s.get()._field_Exprs=_80231_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_2064414e3:;
		};
	};
	_80617_arr.get()._field_N=static_cast<jule::I32>(_80231_s.get()._field_Exprs.len());
	if ((!(_80417_pt.get()._field_Auto))) {
		if ((_80617_arr.get()._field_N > _80417_pt.get()._field_N)) {
			_221427ca6_pushErr(_self_.ptr(), _80231_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_80617_arr.get()._field_N < _80417_pt.get()._field_N)) {
			_80617_arr.get()._field_N=_80417_pt.get()._field_N;
		};
	};
	jule::Ptr<_2211d1aa4_ArrayExprModel> _84117_model = jule::new_ptr<_2211d1aa4_ArrayExprModel>(_2211d1aa4_ArrayExprModel{._field_Kind=_80617_arr, });;
	if (_81217_filled) {
		_84117_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_84117_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _80231_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_221453397_TypeKind> _85017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_80617_arr.get()._field_Elem;
	{
		auto expr = &(_80231_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206445e32:;
		if (it != expr_end) {
			jule::Ptr<_2211a8cac_Expr> _85221_elem = *it;
			{
				jule::Ptr<_221425c2c_Data> _85321_d = _221444267_evalExpr(_self_, _85221_elem);;
				if ((_85321_d == nullptr)) {
					goto _iter_next_206445e32;
				};
				_2212559d5_checkAssignType(_self_.get()._field_s, false, &(_80617_arr.get()._field_Elem), &(_85321_d), _80231_s.get()._field_Token);
				_84117_model.get()._field_Elems = jule::alloc_for_append(_84117_model.get()._field_Elems,1);_84117_model.get()._field_Elems.__push(_85321_d.get()._field_Model);;
			}
			_iter_next_206445e32:;
			++it;
			goto _iter_begin_206445e32;
		}
		_iter_end_206445e32:;
	};
	_self_.get()._field_prefix=_85017_prefix;
	if (_81217_filled) {
		_84117_model.get()._field_Elems = jule::alloc_for_append(_84117_model.get()._field_Elems,1);_84117_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_80617_arr, 23)}), ._field_Mutable=true, ._field_Model=jule::Any(_84117_model, &__jule_any_type90), });;
}



inline jule::Ptr<_221425c2c_Data> _221430c48_evalExpSlc(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211b039b_SliceExpr> _87634_s, jule::Ptr<_221453397_TypeKind> _87653_t, jule::Any _87671_first) {
	jule::Ptr<_22145e7b0_Slc> _87717_slc = jule::new_ptr<_22145e7b0_Slc>(_22145e7b0_Slc{._field_Elem=_87653_t});;
	jule::I32 _88117_i = 0LL;;
	jule::Ptr<_2211cdd7b_SliceExprModel> _88217_model = jule::new_ptr<_2211cdd7b_SliceExprModel>(_2211cdd7b_SliceExprModel{._field_ElemKind=_87653_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _87634_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_87671_first != nullptr)) {
		_88217_model.get()._field_Elems = jule::alloc_for_append(_88217_model.get()._field_Elems,1);_88217_model.get()._field_Elems.__push(_87671_first);;
		_88117_i=1LL;
	};
	jule::Ptr<_221453397_TypeKind> _89117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_87717_slc.get()._field_Elem;
	{
		auto expr = _87634_s.get()._field_Exprs.slice(_88117_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_20644ba3c:;
		if (it != expr_end) {
			jule::Ptr<_2211a8cac_Expr> _89321_elem = *it;
			{
				jule::Ptr<_221425c2c_Data> _89421_d = _221444267_evalExpr(_self_, _89321_elem);;
				if ((_89421_d == nullptr)) {
					goto _iter_next_20644ba3c;
				};
				_2212559d5_checkAssignType(_self_.get()._field_s, false, &(_87717_slc.get()._field_Elem), &(_89421_d), _87634_s.get()._field_Token);
				_88217_model.get()._field_Elems = jule::alloc_for_append(_88217_model.get()._field_Elems,1);_88217_model.get()._field_Elems.__push(_89421_d.get()._field_Model);;
			}
			_iter_next_20644ba3c:;
			++it;
			goto _iter_begin_20644ba3c;
		}
		_iter_end_20644ba3c:;
	};
	_self_.get()._field_prefix=_89117_prefix;
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_87717_slc, 20)}), ._field_Mutable=true, ._field_Model=jule::Any(_88217_model, &__jule_any_type82), });;
}



inline jule::Ptr<_221425c2c_Data> _221431056_evalSliceExpr(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211b039b_SliceExpr> _91237_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_2214567a7_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_20644e59a:;
				{
					return _2214307e7_evalArr(_self_, _91237_s);;
				}
			}
			else if ((_221456a1b_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_20644e622:;
				{
					jule::Ptr<_22145e7b0_Slc> _91825_pt = _221456a1b_Slc(_self_.get()._field_prefix.ptr());;
					return _221430c48_evalExpSlc(_self_, _91237_s, _91825_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_20644e48a:;
		};
	};
	jule::Ptr<_221453397_TypeKind> _92317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_91237_s.get()._field_Exprs.len() == 0LL)) {
		_221427ca6_pushErr(_self_.ptr(), _91237_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_221425c2c_Data> _93117_firstElem = _221444267_evalExpr(_self_, _91237_s.get()._field_Exprs[0LL]);;
	if ((_93117_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_221425c2c_Data> _93617_d = _221430c48_evalExpSlc(_self_, _91237_s, _93117_firstElem.get()._field_Kind, _93117_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_92317_prefix;
	return _93617_d;;
}



inline void _221431397_checkIntegerIndexingByData(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data>* _94250_d, jule::Ptr<_21da1aa0b_Token> _94260_token) {
	jule::Str _94313_err_key = _22144e89e_checkDataForIntegerIndexing(_94250_d);;
	{
		auto &_match_expr{ _94313_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_206454391:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_206454e96:;
			{
				_221427ca6_pushErr(_self_, _94260_token, _94313_err_key, jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_94250_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_206454715:;
			{
				_221427ca6_pushErr(_self_, _94260_token, _94313_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_206454638:;
	};
}



inline void _221431771_indexingPtr(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data>* _95435_d, jule::Ptr<_221425c2c_Data>* _95450_index, jule::Ptr<_2211b0c1a_IndexingExpr>* _95465_i) {
	_221431397_checkIntegerIndexingByData(_self_, _95450_index, (*(_95465_i)).get()._field_Token);
	jule::Ptr<_2214623b7_Ptr> _95717_ptr = _22145606a_Ptr((*(_95435_d)).get()._field_Kind.ptr());;
	{
		
		if (_221462d8a_IsUnsafe(_95717_ptr.ptr())) {
			_case_begin_206456d22:;
			{
				_221427ca6_pushErr(_self_, (*(_95465_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_2214286e1_isUnsafe(_self_)))) {
			_case_begin_206456d88:;
			{
				_221427ca6_pushErr(_self_, (*(_95465_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_206456c01:;
	};
	(*(_95435_d)).get()._field_Kind=_95717_ptr.get()._field_Elem;
}



inline void _221431b39_indexingArr(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data>* _96935_d, jule::Ptr<_221425c2c_Data>* _96950_index, jule::Ptr<_2211b0c1a_IndexingExpr>* _96965_i) {
	jule::Ptr<_22146195a_Arr> _97017_arr = _2214567a7_Arr((*(_96935_d)).get()._field_Kind.ptr());;
	(*(_96935_d)).get()._field_Kind=_97017_arr.get()._field_Elem;
	_221431397_checkIntegerIndexingByData(_self_, _96950_index, (*(_96965_i)).get()._field_Token);
	if ((_2214265e0_IsConst((*(_96950_index)).ptr()) && (_21e6c7dc1_AsF64((*(_96950_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_97017_arr.get()._field_N)))) {
		_221427ca6_pushErr(_self_, (*(_96965_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _221432002_indexingSlc(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data>* _97835_d, jule::Ptr<_221425c2c_Data>* _97850_index, jule::Ptr<_2211b0c1a_IndexingExpr>* _97865_i) {
	jule::Ptr<_22145e7b0_Slc> _97917_slc = _221456a1b_Slc((*(_97835_d)).get()._field_Kind.ptr());;
	(*(_97835_d)).get()._field_Kind=_97917_slc.get()._field_Elem;
	_221431397_checkIntegerIndexingByData(_self_, _97850_index, (*(_97865_i)).get()._field_Token);
	if ((!(_2214265e0_IsConst((*(_97850_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_97835_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_20645c223:;
			{
				jule::Ptr<_2211cdd7b_SliceExprModel> _98921_m = (*(_97835_d)).get()._field_Model.cast_ptr<_2211cdd7b_SliceExprModel>(&__jule_any_type82);;
				jule::F64 _99017_indx = _21e6c7dc1_AsF64((*(_97850_index)).get()._field_Constant.ptr());;
				if ((_99017_indx >= static_cast<jule::F64>(_98921_m.get()._field_Elems.len()))) {
					_221427ca6_pushErr(_self_, (*(_97865_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_97835_d)).get()._field_Model=_98921_m.get()._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_99017_indx))];
					(*(_97835_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_20645c18a:;
	};
}



inline void _2214323ba_indexingMap(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data>* _100035_d, jule::Ptr<_221425c2c_Data>* _100050_index, jule::Ptr<_2211b0c1a_IndexingExpr>* _100069_i) {
	if (((*(_100050_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_221460d66_Map> _100417_m = _2214574bc_Map((*(_100035_d)).get()._field_Kind.ptr());;
	_2214115ec_assignTypeChecker _100517_atc = _2214115ec_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_100417_m.get()._field_Key, ._field_d=(*(_100050_index)), ._field_errorToken=(*(_100069_i)).get()._field_Token};;
	_221412774_check(&_100517_atc);
	(*(_100035_d)).get()._field_Kind=_100417_m.get()._field_Val;
}



inline void _221432783_indexingStr(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data>* _101535_d, jule::Ptr<_221425c2c_Data>* _101550_index, jule::Ptr<_2211b0c1a_IndexingExpr>* _101565_i) {
	;
	(*(_101535_d)).get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("u8", 2)), 18)});
	if (((*(_101550_index)) == nullptr)) {
		return;;
	};
	_221431397_checkIntegerIndexingByData(_self_, _101550_index, (*(_101565_i)).get()._field_Token);
	if ((!(_2214265e0_IsConst((*(_101550_index)).ptr())))) {
		(*(_101535_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_2214265e0_IsConst((*(_101535_d)).ptr())) {
		jule::Ptr<_21da1aa0b_Token> _103117_errorToken = (*(_101565_i)).get()._field_Token;;
		jule::I64 _103217_j = _21e6c78e8_AsI64((*(_101550_index)).get()._field_Constant.ptr());;
		jule::Str _103317_s = _21e6c7420_ReadStr((*(_101535_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I32>(_103217_j) >= _103317_s.len())) {
			_221427ca6_pushErr(_self_, _103117_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_21e6c83bb_SetU64((*(_101535_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_103317_s[static_cast<jule::I32>(_103217_j)])));
		};
	};
}



inline void _221432b4b_toIndexing(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data>* _104234_d, jule::Ptr<_221425c2c_Data>* _104249_index, jule::Ptr<_2211b0c1a_IndexingExpr>* _104268_i) {
	{
		
		if ((_22145606a_Ptr((*(_104234_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_203e823dd:;
			{
				_221431771_indexingPtr(_self_, _104234_d, _104249_index, _104268_i);
				return;;
			}
		}
		else if ((_2214567a7_Arr((*(_104234_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_203e82465:;
			{
				_221431b39_indexingArr(_self_, _104234_d, _104249_index, _104268_i);
				return;;
			}
		}
		else if ((_221456a1b_Slc((*(_104234_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_203e824dc:;
			{
				_221432002_indexingSlc(_self_, _104234_d, _104249_index, _104268_i);
				return;;
			}
		}
		else if ((_2214574bc_Map((*(_104234_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_203e82564:;
			{
				_2214323ba_indexingMap(_self_, _104234_d, _104249_index, _104268_i);
				return;;
			}
		}
		else if ((_221455a92_Prim((*(_104234_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_203e825db:;
			{
				jule::Ptr<_22145a5be_Prim> _105717_prim = _221455a92_Prim((*(_104234_d)).get()._field_Kind.ptr());;
				{
					
					if (_22145d803_IsStr(_105717_prim.ptr())) {
						_case_begin_203e8628d:;
						{
							_221432783_indexingStr(_self_, _104234_d, _104249_index, _104268_i);
							return;;
						}
					}
					_match_end_203e861e4:;
				};
			}
		}
		_match_end_203e8229a:;
	};
	_221427ca6_pushErr(_self_, (*(_104268_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_104234_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _2214330be_pushGenericsFromExprSubIdent(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211ac211_SubIdentExpr>* _106753_sexpr, jule::Slice<jule::Ptr<_2211a478b_TypeDecl>>* _106814_generics, jule::Ptr<_2211a8cac_Expr>* _106842_expr) {
	jule::Ptr<_2211a54a1_SubIdentTypeDecl> _106917_t = jule::new_ptr<_2211a54a1_SubIdentTypeDecl>();;
	if ((!(_22145066e_pushSubIdentFromExpr(jule::Any((*(_106753_sexpr)), &__jule_any_type91), &(_106917_t))))) {
		_221427ca6_pushErr(_self_.ptr(), (*(_106842_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	(*(_106814_generics)) = jule::alloc_for_append((*(_106814_generics)),1);(*(_106814_generics)).__push(jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Kind=jule::Any(_106917_t, &__jule_any_type92)}));;
	return true;;
}



inline jule::Bool _221433487_pushGenericsFromData(jule::Ptr<_22142779a_Eval> _self_, jule::Slice<jule::Ptr<_2211a478b_TypeDecl>>* _107845_generics, jule::Ptr<_2211a8cac_Expr>* _107873_expr) {
	{
		auto &_match_expr{ (*(_107873_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_203e89abb:;
			{
				jule::Ptr<_2211ab177_UnaryExpr> _108121_u = (*(_107873_expr)).get()._field_Kind.cast_ptr<_2211ab177_UnaryExpr>(&__jule_any_type93);;
				{
					auto &_match_expr{ _108121_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_203e8b21b:;
						{
							jule::Ptr<_2211a6617_PtrTypeDecl> _108425_kind = jule::new_ptr<_2211a6617_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _108525__generics = jule::Slice<jule::Ptr<_2211a478b_TypeDecl>>::alloc(0LL, 1LL);;
							_221433487_pushGenericsFromData(_self_, &(_108525__generics), &(_108121_u.get()._field_Expr));
							_108425_kind.get()._field_Elem=_108525__generics[0LL];
							(*(_107845_generics)) = jule::alloc_for_append((*(_107845_generics)),1);(*(_107845_generics)).__push(jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=(*(_107873_expr)).get()._field_Token, ._field_Kind=jule::Any(_108425_kind, &__jule_any_type77)}));;
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_203e8b5c3:;
						{
							jule::Ptr<_2211a5b44_SptrTypeDecl> _109325_kind = jule::new_ptr<_2211a5b44_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _109425__generics = jule::Slice<jule::Ptr<_2211a478b_TypeDecl>>::alloc(0LL, 1LL);;
							_221433487_pushGenericsFromData(_self_, &(_109425__generics), &(_108121_u.get()._field_Expr));
							_109325_kind.get()._field_Elem=_109425__generics[0LL];
							(*(_107845_generics)) = jule::alloc_for_append((*(_107845_generics)),1);(*(_107845_generics)).__push(jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=(*(_107873_expr)).get()._field_Token, ._field_Kind=jule::Any(_109325_kind, &__jule_any_type78)}));;
						}
					}
					else {
						_case_begin_203e8abbb:;
						{
							_221427ca6_pushErr(_self_.ptr(), _108121_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_203e8a946:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_203e89c42:;
			{
				(*(_107845_generics)) = jule::alloc_for_append((*(_107845_generics)),1);(*(_107845_generics)).__push((*(_107873_expr)).get()._field_Kind.cast_ptr<_2211a478b_TypeDecl>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_203e89d41:;
			{
				jule::Ptr<_2211ac211_SubIdentExpr> _110821_sexpr = (*(_107873_expr)).get()._field_Kind.cast_ptr<_2211ac211_SubIdentExpr>(&__jule_any_type91);;
				return _2214330be_pushGenericsFromExprSubIdent(_self_, &(_110821_sexpr), _107845_generics, _107873_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_203e89da7:;
			{
				jule::Ptr<_2211aa96d_IdentExpr> _111121_ident = (*(_107873_expr)).get()._field_Kind.cast_ptr<_2211aa96d_IdentExpr>(&__jule_any_type85);;
				(*(_107845_generics)) = jule::alloc_for_append((*(_107845_generics)),1);(*(_107845_generics)).__push(jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_2211a4d52_IdentTypeDecl>(_2211a4d52_IdentTypeDecl{._field_Token=_111121_ident.get()._field_Token, ._field_Ident=_111121_ident.get()._field_Ident, ._field_CppLinked=_111121_ident.get()._field_CppLinked, }), &__jule_any_type20)}));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_203e893a1:;
			{
				{
					auto expr = &((*(_107873_expr)).get()._field_Kind.cast_ptr<_2211a9939_TupleExpr>(&__jule_any_type86).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_206467849:;
					if (it != expr_end) {
						jule::Ptr<_2211a8cac_Expr> _112025_texpr = *it;
						{
							if ((!(_221433487_pushGenericsFromData(_self_, _107845_generics, &(_112025_texpr))))) {
								return false;;
							};
						}
						_iter_next_206467849:;
						++it;
						goto _iter_begin_206467849;
					}
					_iter_end_206467849:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_203e89417:;
			{
				jule::Ptr<_2211abc8d_NsSelectionExpr> _112621_ns = (*(_107873_expr)).get()._field_Kind.cast_ptr<_2211abc8d_NsSelectionExpr>(&__jule_any_type95);;
				jule::Ptr<_2211a4d52_IdentTypeDecl> _112721_decl = jule::new_ptr<_2211a4d52_IdentTypeDecl>(_2211a4d52_IdentTypeDecl{._field_Token=_112621_ns.get()._field_Ident, ._field_Ident=_112621_ns.get()._field_Ident.get()._field_Kind, });;
				(*(_107845_generics)) = jule::alloc_for_append((*(_107845_generics)),1);(*(_107845_generics)).__push(jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=_112721_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_2211a5858_NamespaceTypeDecl>(_2211a5858_NamespaceTypeDecl{._field_Idents=_112621_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=_112721_decl.get()._field_Token, ._field_Kind=jule::Any(_112721_decl, &__jule_any_type20)})}), &__jule_any_type96)}));;
			}
		}
		else {
			_case_begin_203e89307:;
			{
				_221427ca6_pushErr(_self_.ptr(), (*(_107873_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_203e8915e:;
	};
	return true;;
}



inline void _2214337c8_evalIdentDeclFromIndexing(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_221425c2c_Data>* _114850_d, jule::Ptr<_2211b0c1a_IndexingExpr>* _114865_i) {
	jule::Ptr<_2211c76e3_StructIns> _114917_s = _221456ee4_Struct((*(_114850_d)).get()._field_Kind.ptr());;
	if ((_114917_s == nullptr)) {
		_221427ca6_pushErr(_self_.ptr(), (*(_114865_i)).get()._field_Expr.get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_114850_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_114850_d))=nullptr;
		return;;
	};
	jule::Ptr<_2211a4d52_IdentTypeDecl> _115617_decl = nullptr;;
	{
		auto &_match_expr{ (*(_114865_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_20646cd5a:;
			{
				jule::Ptr<_2211aa96d_IdentExpr> _115921_expr = (*(_114865_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_2211aa96d_IdentExpr>(&__jule_any_type85);;
				_115617_decl=jule::new_ptr<_2211a4d52_IdentTypeDecl>(_2211a4d52_IdentTypeDecl{._field_Token=_115921_expr.get()._field_Token, ._field_Ident=_115921_expr.get()._field_Ident, ._field_CppLinked=_115921_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_20646dd39:;
			{
				jule::Ptr<_2211abc8d_NsSelectionExpr> _116621_expr = (*(_114865_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_2211abc8d_NsSelectionExpr>(&__jule_any_type95);;
				_115617_decl=jule::new_ptr<_2211a4d52_IdentTypeDecl>(_2211a4d52_IdentTypeDecl{._field_Token=_116621_expr.get()._field_Ident, ._field_Ident=_116621_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_20646d212:;
			{
				_221427ca6_pushErr(_self_.ptr(), (*(_114865_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_114850_d))=nullptr;
				return;;
			}
		}
		_match_end_20646d1ac:;
	};
	if ((!(_221433487_pushGenericsFromData(_self_, &(_115617_decl.get()._field_Generics), &((*(_114865_i)).get()._field_Index))))) {
		(*(_114850_d))=nullptr;
		return;;
	};
	_114917_s=({ auto _wrap_copy = _221439a32_typeChecker(_self_.ptr()); _22146806b_fromStruct(&_wrap_copy, &(_115617_decl), &(_114917_s.get()._field_Decl)); });
	if ((_114917_s == nullptr)) {
		(*(_114850_d))=nullptr;
		return;;
	};
	(*(_114850_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_221452e35_Kind>(_114917_s, 0);
}



inline jule::Bool _221433c3a_checkGenericFn(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211dc97d_FnIns>* _119139_f, jule::Ptr<_21da1aa0b_Token>* _119155_et, jule::Any* _119172_model) {
	jule::Bool _119213_ok = _221257da0_reloadFnInsTypes(_self_.get()._field_s, (*(_119139_f)));;
	(*(_119139_f)).get()._field_reloaded=true;
	if ((!(_119213_ok))) {
		return false;;
	};
	jule::Ptr<_2211dc97d_FnIns> _119717_existInstance = _2211db707_appendInstance((*(_119139_f)).get()._field_Decl.ptr(), _119139_f);;
	if ((!(_221257014_checkConstraintsFn(_self_.get()._field_s, _119139_f, _119155_et, _119717_existInstance)))) {
		return false;;
	};
	if ((_119717_existInstance != nullptr)) {
		(*(_119139_f))=_119717_existInstance;
		_22145042c_updateModelToGenericIns(_119172_model, &(_119717_existInstance));
	} else {
		_2212663b9_checkFnInsCaller(_self_.get()._field_s, _119139_f, (*(_119155_et)));
	};
	return true;;
}



inline void _22143407b_evalFnGenericFromIndexing(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_221425c2c_Data>* _121650_d, jule::Ptr<_2211b0c1a_IndexingExpr>* _121665_i) {
	jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _121717_generics = jule::Slice<jule::Ptr<_2211a478b_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_221433487_pushGenericsFromData(_self_, &(_121717_generics), &((*(_121665_i)).get()._field_Index))))) {
		(*(_121650_d))=nullptr;
		return;;
	};
	jule::Ptr<_2211dc97d_FnIns> _122317_f = _221456c80_Fn((*(_121650_d)).get()._field_Kind.ptr());;
	jule::I32 _122417_genericsLen = 0LL;;
	if ((_122317_f.get()._field_Decl != nullptr)) {
		_122417_genericsLen=static_cast<jule::I32>(_122317_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_22124eade_checkGenericQuantity(_self_.get()._field_s.ptr(), _122417_genericsLen, static_cast<jule::I32>(_121717_generics.len()), (*(_121665_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_121650_d))=nullptr;
		return;;
	};
	_122317_f.get()._field_Generics=jule::Slice<jule::Ptr<_221451b15_InsGeneric>>::alloc(0LL, _122317_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_121717_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206478096:;
		if (it != expr_end) {
			jule::Ptr<_2211a478b_TypeDecl> _123521_g = *it;
			{
				jule::Ptr<_221425c2c_Data> _123621_k = _221439d40_evalType(_self_.ptr(), _123521_g);;
				if ((_123621_k == nullptr)) {
					(*(_121650_d))=nullptr;
					return;;
				};
				_122317_f.get()._field_Generics = jule::alloc_for_append(_122317_f.get()._field_Generics,1);_122317_f.get()._field_Generics.__push(jule::new_ptr<_221451b15_InsGeneric>(_221451b15_InsGeneric{._field_Kind=_123621_k.get()._field_Kind, }));;
			}
			_iter_next_206478096:;
			++it;
			goto _iter_begin_206478096;
		}
		_iter_end_206478096:;
	};
	if (_2211ddd14_IsBuiltin(_122317_f.ptr())) {
		return;;
	};
	if (_221433c3a_checkGenericFn(_self_, &(_122317_f), &((*(_121665_i)).get()._field_Expr.get()._field_Token), &((*(_121650_d)).get()._field_Model))) {
		(*(_121650_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_221452e35_Kind>(_122317_f, 1);
	} else {
		(*(_121650_d))=nullptr;
	};
}



inline jule::Ptr<_221425c2c_Data> _22143439a_evalIndexing(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211b0c1a_IndexingExpr> _125536_i) {
	jule::Ptr<_221453397_TypeKind> _125617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_125617_prefix;
	});;
	jule::Ptr<_221425c2c_Data> _126017_d = _221443530_evalExprKind(_self_, _125536_i.get()._field_Expr.get()._field_Kind);;
	if ((_126017_d == nullptr)) {
		return nullptr;;
	};
	if (_126017_d.get()._field_Decl) {
		_2214337c8_evalIdentDeclFromIndexing(_self_, &(_126017_d), &(_125536_i));
		return _126017_d;;
	};
	if ((_221456c80_Fn(_126017_d.get()._field_Kind.ptr()) != nullptr)) {
		_22143407b_evalFnGenericFromIndexing(_self_, &(_126017_d), &(_125536_i));
		return _126017_d;;
	};
	_221425c2c_Data _127617_old_d = (*(_126017_d));;
	jule::Ptr<_221425c2c_Data> _127817_index = _221444267_evalExpr(_self_, _125536_i.get()._field_Index);;
	if ((_127817_index == nullptr)) {
		return nullptr;;
	};
	_126017_d.get()._field_Decl=false;
	_221432b4b_toIndexing(_self_.ptr(), &(_126017_d), &(_127817_index), &(_125536_i));
	if (_2214265e0_IsConst(_126017_d.ptr())) {
		_126017_d.get()._field_Decl=false;
		_126017_d.get()._field_Model=jule::Any(_126017_d.get()._field_Constant, &__jule_any_type19);
	} else if (_126017_d.get()._field_Decl) {
		_126017_d.get()._field_Decl=false;
	} else {
		_126017_d.get()._field_Model=jule::Any(jule::new_ptr<_2211ce2ee_IndexingExprModel>(_2211ce2ee_IndexingExprModel{._field_Token=_125536_i.get()._field_Token, ._field_Expr=jule::new_ptr<_221425c2c_Data>(_127617_old_d), ._field_Index=_127817_index}), &__jule_any_type46);
	};
	return _126017_d;;
}



inline __jule_tuple_x_221425c2c_Data__jule_tuple_x_221425c2c_Data _2214346a8_evalSlicingExprs(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211b1325_SlicingExpr>* _130941_s) {
	__jule_tuple_x_221425c2c_Data__jule_tuple_x_221425c2c_Data __jule_func_result;
	jule::Ptr<_221453397_TypeKind> _131017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_131017_prefix;
	});;
	jule::Ptr<_221425c2c_Data> _131417_l = nullptr;;
	jule::Ptr<_221425c2c_Data> _131517_r = nullptr;;
	if (((*(_130941_s)).get()._field_Start != nullptr)) {
		_131417_l=_221444267_evalExpr(_self_, (*(_130941_s)).get()._field_Start);
		if ((_131417_l != nullptr)) {
			_221431397_checkIntegerIndexingByData(_self_.ptr(), &(_131417_l), (*(_130941_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_131417_l=jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)}), ._field_Constant=static__21e6c585d_NewI64(0LL)});
		_131417_l.get()._field_Model=jule::Any(_131417_l.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_130941_s)).get()._field_To != nullptr)) {
		_131517_r=_221444267_evalExpr(_self_, (*(_130941_s)).get()._field_To);
		if ((_131517_r != nullptr)) {
			_221431397_checkIntegerIndexingByData(_self_.ptr(), &(_131517_r), (*(_130941_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _131417_l;
	__jule_func_result.__jule_result_arg1 = _131517_r;
	return __jule_func_result;;
}



inline void _22143492d_slicingArr(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data>* _134430_d) {
	jule::Ptr<_221453397_TypeKind> _134517_elemType = _2214567a7_Arr((*(_134430_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_134430_d)).get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_22145e7b0_Slc>(_22145e7b0_Slc{._field_Elem=_134517_elemType}), 20)});
	(*(_134430_d)).get()._field_Lvalue=false;
	(*(_134430_d)).get()._field_Mutable=((*(_134430_d)).get()._field_Mutable || (!(_221454b18_Mutable(_134517_elemType.ptr()))));
}



inline void _221434ce6_slicingStr(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data>* _135930_d, jule::Ptr<_221425c2c_Data>* _135941_l, jule::Ptr<_221425c2c_Data>* _135952_r) {
	(*(_135930_d)).get()._field_Lvalue=false;
	(*(_135930_d)).get()._field_Mutable=true;
	if ((!(_2214265e0_IsConst((*(_135930_d)).ptr())))) {
		return;;
	};
	if ((((*(_135941_l)) == nullptr) || ((*(_135952_r)) == nullptr))) {
		(*(_135930_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_2214265e0_IsConst((*(_135941_l)).ptr()) && _2214265e0_IsConst((*(_135952_r)).ptr()))) {
		jule::I64 _137217_left = _21e6c78e8_AsI64((*(_135941_l)).get()._field_Constant.ptr());;
		if ((_137217_left < 0LL)) {
			return;;
		};
		jule::Str _137717_s = _21e6c7420_ReadStr((*(_135930_d)).get()._field_Constant.ptr());;
		jule::I64 _137821_right = 0LL;;
		if (((*(_135952_r)) == nullptr)) {
			_137821_right=static_cast<jule::I64>(static_cast<jule::I64>(_137717_s.len()));
		} else {
			_137821_right=static_cast<jule::I64>(_21e6c78e8_AsI64((*(_135952_r)).get()._field_Constant.ptr()));
		};
		if ((_137217_left > _137821_right)) {
			return;;
		};
		_21e6c88b6_SetStr((*(_135930_d)).get()._field_Constant.ptr(), _137717_s.slice(static_cast<jule::I32>(_137217_left), static_cast<jule::I32>(_137821_right)));
		(*(_135930_d)).get()._field_Decl=true;
	} else {
		(*(_135930_d)).get()._field_Constant=nullptr;
	};
}



inline void _221435258_checkSlicing(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data>* _139536_d, jule::Ptr<_221425c2c_Data>* _139547_l, jule::Ptr<_221425c2c_Data>* _139558_r, jule::Ptr<_2211b1325_SlicingExpr>* _139569_s) {
	{
		
		if ((_2214567a7_Arr((*(_139536_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20648e354:;
			{
				_22143492d_slicingArr(_self_, _139536_d);
				return;;
			}
		}
		else if ((_221456a1b_Slc((*(_139536_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20648e3cb:;
			{
				return;;
			}
		}
		else if ((_221455a92_Prim((*(_139536_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20648e453:;
			{
				jule::Ptr<_22145a5be_Prim> _140317_prim = _221455a92_Prim((*(_139536_d)).get()._field_Kind.ptr());;
				{
					
					if (_22145d803_IsStr(_140317_prim.ptr())) {
						_case_begin_206491796:;
						{
							_221434ce6_slicingStr(_self_, _139536_d, _139547_l, _139558_r);
							return;;
						}
					}
					_match_end_2064916ec:;
				};
			}
		}
		_match_end_20648e233:;
	};
	_221427ca6_pushErr(_self_, (*(_139569_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_139536_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_221425c2c_Data> _221435566_evalSlicing(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211b1325_SlicingExpr> _141435_s) {
	jule::Ptr<_221425c2c_Data> _141517_d = _221444267_evalExpr(_self_, _141435_s.get()._field_Expr);;
	if ((_141517_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_221425c2c_Data> _142018_l;;
	jule::Ptr<_221425c2c_Data> _142025_r;;
	({
		__jule_tuple_x_221425c2c_Data__jule_tuple_x_221425c2c_Data __jule_assign_result = _2214346a8_evalSlicingExprs(_self_, &(_141435_s));
		_142018_l = __jule_assign_result.__jule_result_arg0;
		_142025_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_142018_l == nullptr)) {
		return _141517_d;;
	};
	_141517_d.get()._field_Decl=false;
	_221435258_checkSlicing(_self_.ptr(), &(_141517_d), &(_142018_l), &(_142025_r), &(_141435_s));
	if (_2214265e0_IsConst(_141517_d.ptr())) {
		_141517_d.get()._field_Decl=false;
		_141517_d.get()._field_Model=jule::Any(_141517_d.get()._field_Constant, &__jule_any_type19);
	} else if (_141517_d.get()._field_Decl) {
		_141517_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_2211d0520_SlicingExprModel> _143821_model = jule::new_ptr<_2211d0520_SlicingExprModel>(_2211d0520_SlicingExprModel{._field_Token=_141435_s.get()._field_Token, ._field_Expr=_141517_d.get()._field_Model, ._field_Left=_142018_l.get()._field_Model, });;
		if ((_142025_r != nullptr)) {
			_143821_model.get()._field_Right=_142025_r.get()._field_Model;
		};
		_141517_d.get()._field_Model=jule::Any(_143821_model, &__jule_any_type97);
	};
	return _141517_d;;
}



inline void _22143592e_castPtr(_22142779a_Eval* _self_, jule::Ptr<_221453397_TypeKind> _145130_t, jule::Ptr<_221425c2c_Data> _145148_d, jule::Ptr<_21da1aa0b_Token> _145158_errorToken) {
	_145148_d.get()._field_Constant=nullptr;
	jule::Ptr<_22145dd53_Sptr> _145313_sptr = _221455d06_Sptr(_145148_d.get()._field_Kind.ptr());;
	if ((_145313_sptr != nullptr)) {
		if ((!(_221453aa1_Equal(_22145606a_Ptr(_145130_t.ptr()).get()._field_Elem, _145313_sptr.get()._field_Elem)))) {
			_221427ca6_pushErr(_self_, _145158_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_145148_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_145130_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_2214286e1_isUnsafe(_self_)))) {
		_221427ca6_pushErr(_self_, _145158_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_22145a5be_Prim> _146613_prim = _221455a92_Prim(_145148_d.get()._field_Kind.ptr());;
	if (((_22145606a_Ptr(_145148_d.get()._field_Kind.ptr()) == nullptr) && ((_146613_prim == nullptr) || (!(_21e6c48d4_IsInt(_22145a932_Str(_146613_prim.ptr()))))))) {
		_221427ca6_pushErr(_self_, _145158_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_145148_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_145130_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _221435ce7_castStruct(_22142779a_Eval* _self_, jule::Ptr<_221453397_TypeKind> _147233_t, jule::Ptr<_221425c2c_Data> _147251_d, jule::Ptr<_21da1aa0b_Token> _147261_errorToken) {
	_147251_d.get()._field_Constant=nullptr;
	jule::Ptr<_2211ebeed_Trait> _147417_tr = _221457258_Trait(_147251_d.get()._field_Kind.ptr());;
	if ((_147417_tr == nullptr)) {
		_221427ca6_pushErr(_self_, _147261_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_147251_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_147233_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_2211c76e3_StructIns> _148017_s = _221456ee4_Struct(_147233_t.ptr());;
	_20649d8d5_pushReference(_self_, &(_148017_s));
	if ((!(_2211c5dea_IsImplements(_148017_s.get()._field_Decl.ptr(), _147417_tr)))) {
		_221427ca6_pushErr(_self_, _147261_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_147251_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_147233_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _2214361b0_castRef(_22142779a_Eval* _self_, jule::Ptr<_221453397_TypeKind> _148830_t, jule::Ptr<_221425c2c_Data> _148848_d, jule::Ptr<_21da1aa0b_Token> _148858_errorToken) {
	_148848_d.get()._field_Constant=nullptr;
	jule::Ptr<_22145dd53_Sptr> _149017_sptr = _221455d06_Sptr(_148830_t.ptr());;
	jule::Ptr<_2214623b7_Ptr> _149217_ptr = _22145606a_Ptr(_148848_d.get()._field_Kind.ptr());;
	if (((_149217_ptr != nullptr) && _221453aa1_Equal(_149017_sptr.get()._field_Elem, _149217_ptr.get()._field_Elem))) {
		if ((!(_2214286e1_isUnsafe(_self_)))) {
			_221427ca6_pushErr(_self_, _148858_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_221456ee4_Struct(_149017_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_221435ce7_castStruct(_self_, _149017_sptr.get()._field_Elem, _148848_d, _148858_errorToken);
		return;;
	};
	_221427ca6_pushErr(_self_, _148858_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_148848_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_148830_t.ptr()), &__jule_any_type5)}));
}



inline void _221436578_castSlc(_22142779a_Eval* _self_, jule::Ptr<_221453397_TypeKind> _151030_t, jule::Ptr<_221425c2c_Data> _151048_d, jule::Ptr<_21da1aa0b_Token> _151058_errorToken) {
	_151048_d.get()._field_Constant=nullptr;
	if ((_2214562ce_Enum(_151048_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_221455a92_Prim(_2214562ce_Enum(_151048_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_22145d803_IsStr(_221455a92_Prim(_2214562ce_Enum(_151048_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_221427ca6_pushErr(_self_, _151058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_151048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_151030_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_221455a92_Prim(_151048_d.get()._field_Kind.ptr()) == nullptr) || (!(_22145d803_IsStr(_221455a92_Prim(_151048_d.get()._field_Kind.ptr()).ptr()))))) {
		_221427ca6_pushErr(_self_, _151058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_151048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_151030_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_151030_t=_221456a1b_Slc(_151030_t.ptr()).get()._field_Elem;
	jule::Ptr<_22145a5be_Prim> _152313_prim = _221455a92_Prim(_151030_t.ptr());;
	if (((_152313_prim == nullptr) || ((!(_22145bdc8_IsU8(_152313_prim.ptr()))) && (!(_22145b900_IsI32(_152313_prim.ptr())))))) {
		_221427ca6_pushErr(_self_, _151058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_151048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_151030_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _221436897_castStr(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data> _152930_d, jule::Ptr<_21da1aa0b_Token> _152940_errorToken) {
	_152930_d.get()._field_Constant=nullptr;
	if ((_2214562ce_Enum(_152930_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_2211ee781_Enum> _153221_e = _2214562ce_Enum(_152930_d.get()._field_Kind.ptr());;
		if (((_221455a92_Prim(_153221_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _22145d803_IsStr(_221455a92_Prim(_153221_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_221455a92_Prim(_152930_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_22145a5be_Prim> _153917_prim = _221455a92_Prim(_152930_d.get()._field_Kind.ptr());;
		if (((!(_22145bdc8_IsU8(_153917_prim.ptr()))) && (!(_22145b900_IsI32(_153917_prim.ptr()))))) {
			_221427ca6_pushErr(_self_, _152940_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_221453793_Str(_152930_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_221456a1b_Slc(_152930_d.get()._field_Kind.ptr()) == nullptr)) {
		_221427ca6_pushErr(_self_, _152940_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_221453793_Str(_152930_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_221453397_TypeKind> _155117_t = _221456a1b_Slc(_152930_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_22145a5be_Prim> _155213_prim = _221455a92_Prim(_155117_t.ptr());;
	if (((_155213_prim == nullptr) || ((!(_22145bdc8_IsU8(_155213_prim.ptr()))) && (!(_22145b900_IsI32(_155213_prim.ptr())))))) {
		_221427ca6_pushErr(_self_, _152940_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_221453793_Str(_152930_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline void _221436c60_castInt(_22142779a_Eval* _self_, jule::Ptr<_221453397_TypeKind> _155830_t, jule::Ptr<_221425c2c_Data> _155848_d, jule::Ptr<_21da1aa0b_Token> _155858_errorToken) {
	if (_2214265e0_IsConst(_155848_d.ptr())) {
		jule::Ptr<_22145a5be_Prim> _156017_prim = _221455a92_Prim(_155830_t.ptr());;
		{
			
			if (_21e6c4351_IsSigInt(_156017_prim.get()._field_Kind)) {
				_case_begin_2064b7a97:;
				{
					_21e6c8146_SetI64(_155848_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_21e6c78e8_AsI64(_155848_d.get()._field_Constant.ptr())));
				}
			}
			else if (_21e6c463c_IsUnsigInt(_156017_prim.get()._field_Kind)) {
				_case_begin_2064b7b1e:;
				{
					_21e6c83bb_SetU64(_155848_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_21e6c7b5c_AsU64(_155848_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_2064b79dc:;
		};
	} else {
		_155848_d.get()._field_Constant=nullptr;
	};
	if ((_2214562ce_Enum(_155848_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_2211ee781_Enum> _157217_e = _2214562ce_Enum(_155848_d.get()._field_Kind.ptr());;
		if (_21e6c4e9a_IsNum(_221453793_Str(_157217_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_221455d06_Sptr(_155848_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_22145a5be_Prim> _157917_prim = _221455a92_Prim(_155830_t.ptr());;
		if ((!(_22145d32a_IsUintptr(_157917_prim.ptr())))) {
			_221427ca6_pushErr(_self_, _155858_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_155848_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_155830_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_22145606a_Ptr(_155848_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_22145a5be_Prim> _158617_prim = _221455a92_Prim(_155830_t.ptr());;
		if (_22145d32a_IsUintptr(_158617_prim.ptr())) {
		} else if ((!(_2214286e1_isUnsafe(_self_)))) {
			_221427ca6_pushErr(_self_, _155858_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_22145a5be_Prim> _159513_prim = _221455a92_Prim(_155848_d.get()._field_Kind.ptr());;
	if (((_159513_prim != nullptr) && _21e6c4e9a_IsNum(_22145a932_Str(_159513_prim.ptr())))) {
		return;;
	};
	_221427ca6_pushErr(_self_, _155858_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_155848_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_155830_t.ptr()), &__jule_any_type5)}));
}



inline void _221437128_castNum(_22142779a_Eval* _self_, jule::Ptr<_221453397_TypeKind> _160330_t, jule::Ptr<_221425c2c_Data> _160348_d, jule::Ptr<_21da1aa0b_Token> _160358_errorToken) {
	if (_2214265e0_IsConst(_160348_d.ptr())) {
		jule::Ptr<_22145a5be_Prim> _160517_prim = _221455a92_Prim(_160330_t.ptr());;
		{
			
			if (_21e6c4c03_IsFloat(_160517_prim.get()._field_Kind)) {
				_case_begin_2064c11aa:;
				{
					_21e6c8b3b_SetF64(_160348_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_21e6c7dc1_AsF64(_160348_d.get()._field_Constant.ptr())));
				}
			}
			else if (_21e6c4351_IsSigInt(_160517_prim.get()._field_Kind)) {
				_case_begin_2064c1232:;
				{
					_21e6c8146_SetI64(_160348_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_21e6c78e8_AsI64(_160348_d.get()._field_Constant.ptr())));
				}
			}
			else if (_21e6c463c_IsUnsigInt(_160517_prim.get()._field_Kind)) {
				_case_begin_2064c12a9:;
				{
					_21e6c83bb_SetU64(_160348_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_21e6c7b5c_AsU64(_160348_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_2064c10de:;
		};
	} else {
		_160348_d.get()._field_Constant=nullptr;
	};
	if ((_2214562ce_Enum(_160348_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_2211ee781_Enum> _161917_e = _2214562ce_Enum(_160348_d.get()._field_Kind.ptr());;
		if (_21e6c4e9a_IsNum(_221453793_Str(_161917_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_22145a5be_Prim> _162513_prim = _221455a92_Prim(_160348_d.get()._field_Kind.ptr());;
	if (((_162513_prim != nullptr) && _21e6c4e9a_IsNum(_22145a932_Str(_162513_prim.ptr())))) {
		return;;
	};
	_221427ca6_pushErr(_self_, _160358_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_160348_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_160330_t.ptr()), &__jule_any_type5)}));
}



inline void _2214374e1_castPrim(_22142779a_Eval* _self_, jule::Ptr<_221453397_TypeKind> _163331_t, jule::Ptr<_221425c2c_Data> _163349_d, jule::Ptr<_21da1aa0b_Token> _163359_errorToken) {
	jule::Ptr<_22145a5be_Prim> _163413_prim = _221455a92_Prim(_163331_t.ptr());;
	{
		
		if (_22145da67_IsAny(_163413_prim.ptr())) {
			_case_begin_2064cb69e:;
			{
				_163349_d.get()._field_Constant=nullptr;
			}
		}
		else if (_22145d803_IsStr(_163413_prim.ptr())) {
			_case_begin_2064cbc10:;
			{
				_221436897_castStr(_self_, _163349_d, _163359_errorToken);
			}
		}
		else if (_21e6c48d4_IsInt(_22145a932_Str(_163413_prim.ptr()))) {
			_case_begin_2064cbc76:;
			{
				_221436c60_castInt(_self_, _163331_t, _163349_d, _163359_errorToken);
			}
		}
		else if (_21e6c4e9a_IsNum(_22145a932_Str(_163413_prim.ptr()))) {
			_case_begin_2064cbced:;
			{
				_221437128_castNum(_self_, _163331_t, _163349_d, _163359_errorToken);
			}
		}
		else {
			_case_begin_2064cbb99:;
			{
				_221427ca6_pushErr(_self_, _163359_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_163331_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_2064cbb33:;
	};
}



inline void _221437810_castConstant(_22142779a_Eval* _self_, jule::Ptr<_221453397_TypeKind>* _165036_t, jule::Ptr<_221425c2c_Data>* _165055_d) {
	if ((((*(_165055_d)) == nullptr) || (!(_2214265e0_IsConst((*(_165055_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_22145a5be_Prim> _165413_prim = _221455a92_Prim((*(_165036_t)).ptr());;
	_22144ee21_castConstByType(&(_165413_prim.get()._field_Kind), _165055_d);
	(*(_165055_d)).get()._field_Model=jule::Any((*(_165055_d)).get()._field_Constant, &__jule_any_type19);
}



inline void _221437bc8_castTypeEnum(_22142779a_Eval* _self_, jule::Ptr<_221453397_TypeKind>* _165936_t, jule::Ptr<_221425c2c_Data>* _165955_d, jule::Ptr<_21da1aa0b_Token>* _165970_errorToken) {
	jule::I32 _166013_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_221255e36_checkTypeCompatibility((*(_self_))._field_s, &((*(_165955_d)).get()._field_Kind), _165936_t, _165970_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _166013_n);
		_221427ca6_pushErr(_self_, (*(_165970_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_165955_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str((*(_165936_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_165955_d)).get()._field_Constant=nullptr;
}



inline void _221438091_castTypeEnumT(_22142779a_Eval* _self_, jule::Ptr<_221453397_TypeKind>* _166837_t, jule::Ptr<_221425c2c_Data>* _166856_d, jule::Ptr<_21da1aa0b_Token>* _166871_errorToken) {
	jule::I32 _166913_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_221255e36_checkTypeCompatibility((*(_self_))._field_s, _166837_t, &((*(_166856_d)).get()._field_Kind), _166871_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _166913_n);
		_221427ca6_pushErr(_self_, (*(_166871_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_166856_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str((*(_166837_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_166856_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_221425c2c_Data> _2214384e2_evalCastByTypeNData(_22142779a_Eval* _self_, jule::Ptr<_221453397_TypeKind> _167742_t, jule::Ptr<_221425c2c_Data> _167760_d, jule::Ptr<_21da1aa0b_Token> _167774_errorToken) {
	if (((_167760_d != nullptr) && _167760_d.get()._field_Decl)) {
		_221427ca6_pushErr(_self_, _167774_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_221426117_IsNil(_167760_d.ptr())) {
			_case_begin_2064d77cb:;
			{
				if ((!(_2214550e1_NilCompatible(_167742_t.ptr())))) {
					_221427ca6_pushErr(_self_, _167774_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_221453793_Str(_167742_t.ptr()), &__jule_any_type5)}));
				};
				_167760_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_221455a92_Prim(_167760_d.get()._field_Kind.ptr()) != nullptr) && _22145da67_IsAny(_221455a92_Prim(_167760_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2064d7017:;
			{
				if ((_2214562ce_Enum(_167742_t.ptr()) != nullptr)) {
					_221427ca6_pushErr(_self_, _167774_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_2214280c5_pushSuggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_221456543_TypeEnum(_167742_t.ptr()) != nullptr)) {
					_221427ca6_pushErr(_self_, _167774_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_167760_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_221456543_TypeEnum(_167760_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2064d6c92:;
			{
				_221437bc8_castTypeEnum(_self_, &(_167742_t), &(_167760_d), &(_167774_errorToken));
			}
		}
		else if ((_221456543_TypeEnum(_167742_t.ptr()) != nullptr)) {
			_case_begin_2064d6d08:;
			{
				_221438091_castTypeEnumT(_self_, &(_167742_t), &(_167760_d), &(_167774_errorToken));
			}
		}
		else if ((_22145606a_Ptr(_167742_t.ptr()) != nullptr)) {
			_case_begin_2064d6d6e:;
			{
				_22143592e_castPtr(_self_, _167742_t, _167760_d, _167774_errorToken);
			}
		}
		else if ((_221455d06_Sptr(_167742_t.ptr()) != nullptr)) {
			_case_begin_2064d791e:;
			{
				_2214361b0_castRef(_self_, _167742_t, _167760_d, _167774_errorToken);
			}
		}
		else if ((_221456a1b_Slc(_167742_t.ptr()) != nullptr)) {
			_case_begin_2064d7985:;
			{
				_221436578_castSlc(_self_, _167742_t, _167760_d, _167774_errorToken);
			}
		}
		else if ((_221456ee4_Struct(_167742_t.ptr()) != nullptr)) {
			_case_begin_2064d79eb:;
			{
				_221435ce7_castStruct(_self_, _167742_t, _167760_d, _167774_errorToken);
			}
		}
		else if ((_221455a92_Prim(_167742_t.ptr()) != nullptr)) {
			_case_begin_2064d7a73:;
			{
				_2214374e1_castPrim(_self_, _167742_t, _167760_d, _167774_errorToken);
				_221437810_castConstant(_self_, &(_167742_t), &(_167760_d));
			}
		}
		else {
			_case_begin_2064d6b71:;
			{
				_221427ca6_pushErr(_self_, _167774_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_167742_t.ptr()), &__jule_any_type5)}));
				_167760_d=nullptr;
			}
		}
		_match_end_2064d6b1b:;
	};
	if ((_167760_d == nullptr)) {
		return nullptr;;
	};
	_167760_d.get()._field_Mutable=(_167760_d.get()._field_Mutable || ((!(_221454b18_Mutable(_167760_d.get()._field_Kind.ptr()))) && _221454b18_Mutable(_167742_t.ptr())));
	_167760_d.get()._field_Lvalue=false;
	_167760_d.get()._field_Decl=false;
	if (((_2214562ce_Enum(_167760_d.get()._field_Kind.ptr()) == nullptr) || (!(_221453aa1_Equal(_2214562ce_Enum(_167760_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _167742_t))))) {
		_22144e3d7_applyCastKind(&(_167760_d), &(_167742_t));
		_167760_d.get()._field_Model.cast_ptr<_2211cd122_CastingExprModel>(&__jule_any_type98).get()._field_Token=_167774_errorToken;
	} else {
		_167760_d.get()._field_Kind=_167742_t;
	};
	_167760_d.get()._field_untyped=false;
	if (_2214265e0_IsConst(_167760_d.ptr())) {
		_167760_d.get()._field_Constant.get()._field_Kind=_221455a92_Prim(_167742_t.ptr()).get()._field_Kind;
	};
	return _167760_d;;
}



inline jule::Ptr<_221425c2c_Data> _221438943_evalCastT(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_221453397_TypeKind>* _174234_t, jule::Ptr<_2211a8cac_Expr>* _174253_e, jule::Ptr<_21da1aa0b_Token>* _174268_et) {
	jule::Ptr<_221453397_TypeKind> _174317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_174317_prefix;
	});;
	if ((_221456a1b_Slc((*(_174234_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_174253_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_2064e4ad5:;
				{
					_self_.get()._field_prefix=(*(_174234_t));
				}
			}
			_match_end_2064e4a3b:;
		};
	};
	jule::Ptr<_221425c2c_Data> _175217_d = _221444267_evalExpr(_self_, (*(_174253_e)));;
	if (((_175217_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _175217_d;;
	};
	return _2214384e2_evalCastByTypeNData(_self_.ptr(), (*(_174234_t)), _175217_d, (*(_174268_et)));;
}



inline jule::Ptr<_221425c2c_Data> _221438c51_evalCast(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211ab8d6_CastExpr> _175932_c) {
	jule::Ptr<_221459c50_TypeSymbol> _176017_t = _2211e206a_buildType(_175932_c.get()._field_Kind);;
	jule::Bool _176113_ok = _221253d57_checkType(_self_.get()._field_s, &(_176017_t), _self_.get()._field_lookup);;
	if ((!(_176113_ok))) {
		return nullptr;;
	};
	return _221438943_evalCastT(_self_, &(_176017_t.get()._field_Kind), &(_175932_c.get()._field_Expr), &(_175932_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_221425c2c_Data> _22143905e_evalNsSelection(_22142779a_Eval* _self_, jule::Ptr<_2211abc8d_NsSelectionExpr> _176834_s) {
	jule::Str _176913_path = _22146d7ad_buildLinkPathByTokens(&(_176834_s.get()._field_Ns));;
	jule::Ptr<_221242a9e_ImportInfo> _177017_imp = _22147198c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._22146ee52_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)>([=](jule::Ptr<_221242a9e_ImportInfo> _177052_imp) mutable -> jule::Bool {
		if (((_176834_s.get()._field_Ns.len() == 1LL) && (_177052_imp.get()._field_Alias == _176913_path))) {
			return true;;
		};
		return ((_177052_imp.get()._field_LinkPath == _176913_path) && _2212453dc_isAccessibleViaSelection(_177052_imp.ptr()));;
	}));;
	if ((_177017_imp == nullptr)) {
		_221427ca6_pushErr(_self_, _176834_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_176913_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_22147198c_Lookup> _178217_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_22147198c_Lookup>(_177017_imp, 1);
	;
	_22142847c_disallowBuiltin(_self_);
	jule::Any _178717_def = _22142acba_getDef(_self_, _176834_s.get()._field_Ident.get()._field_Kind, false);;
	_2214282a1_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_178217_lookup;
	jule::Ptr<_221425c2c_Data> _179017_d = _22142e7a2_evalDef(_self_, _178717_def, _176834_s.get()._field_Ident);;
	return _179017_d;;
}



inline jule::Ptr<_221425c2c_Data> _2214394b0_evalStructLitExplicit(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211c76e3_StructIns> _179445_s, jule::Slice<jule::Ptr<_2211a8cac_Expr>> _179513_exprs, jule::Ptr<_21da1aa0b_Token> _179533_errorToken) {
	jule::Bool _179613_ok = _22124eade_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_179445_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_179445_s.get()._field_Generics.len()), _179533_errorToken);;
	if ((!(_179613_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _179445_s.get()._field_Decl))) {
		_221427ca6_pushErr(_self_.ptr(), _179533_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_179445_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_20649d8d5_pushReference(_self_.ptr(), &(_179445_s));
	_22142cbac_checkDeprecated(_self_.ptr(), &(_179445_s.get()._field_Decl.get()._field_Directives), _179533_errorToken);
	_22141a3a3_structLitChecker _180917_slc = _22141a3a3_structLitChecker{._field_e=_self_, ._field_errorToken=_179533_errorToken, ._field_s=_179445_s, };;
	_22141b948_check(&_180917_slc, &(_179513_exprs));
	jule::Ptr<_221425c2c_Data> _181617_d = jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_179445_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_2211cc7b4_StructLitExprModel>(_2211cc7b4_StructLitExprModel{._field_Strct=_179445_s, ._field_Args=_180917_slc._field_args}), &__jule_any_type100), });;
	if (_179445_s.get()._field_Decl.get()._field_CppLinked) {
		_181617_d.get()._field_Kind.get()._field_CppIdent=_179445_s.get()._field_Decl.get()._field_Ident;
	};
	return _181617_d;;
}



inline jule::Ptr<_221425c2c_Data> _2214397bd_evalStructLit(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211ade6b_StructLit> _183237_lit) {
	jule::Ptr<_221459c50_TypeSymbol> _183317_t = _2211e206a_buildType(_183237_lit.get()._field_Kind);;
	jule::Bool _183413_ok = _221253d57_checkType(_self_.get()._field_s, &(_183317_t), _self_.get()._field_lookup);;
	if ((!(_183413_ok))) {
		return nullptr;;
	};
	jule::Ptr<_2211c76e3_StructIns> _183917_s = _221456ee4_Struct(_183317_t.get()._field_Kind.ptr());;
	if ((_183917_s == nullptr)) {
		if ((_221455d06_Sptr(_183317_t.get()._field_Kind.ptr()) != nullptr)) {
			_183917_s=_221456ee4_Struct(_221455d06_Sptr(_183317_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_183917_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_221427ca6_pushErr(_self_.ptr(), _183237_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_221425c2c_Data> _185217_d = _2214394b0_evalStructLitExplicit(_self_, _183917_s, _183237_lit.get()._field_Exprs, _183237_lit.get()._field_Kind.get()._field_Token);;
	if ((_221455d06_Sptr(_183317_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_2211cc7b4_StructLitExprModel> _185421_model = _185217_d.get()._field_Model.cast_ptr<_2211cc7b4_StructLitExprModel>(&__jule_any_type100);;
		_22144cc98_makeStructLitAlloc(&(_185217_d), &(_185421_model));
	};
	return _185217_d;;
}



inline _2214641dd_typeChecker _221439a32_typeChecker(_22142779a_Eval* _self_) {
	return _221252c46_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_221425c2c_Data> _221439d40_evalType(_22142779a_Eval* _self_, jule::Ptr<_2211a478b_TypeDecl> _186431_t) {
	jule::Ptr<_221459c50_TypeSymbol> _186517_tk = _2211e206a_buildType(_186431_t);;
	jule::Bool _186613_ok = _221253d57_checkType((*(_self_))._field_s, &(_186517_tk), (*(_self_))._field_lookup);;
	if ((!(_186613_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=_186517_tk.get()._field_Kind, ._field_Model=jule::Any(_186517_tk.get()._field_Kind, &__jule_any_type89), ._field_Decl=true, });;
}



inline void _22143a15e_callTypeFn(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211acc8e_FnCallExpr>* _187735_fc, jule::Ptr<_221425c2c_Data>* _187757_d) {
	if (((*(_187735_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr(_self_.ptr(), (*(_187735_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_187735_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr(_self_.ptr(), (*(_187735_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_187757_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if ((*(_187735_fc)).get()._field_IsCo) {
		_221427ca6_pushErr(_self_.ptr(), (*(_187735_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_187757_d))=nullptr;
		return;;
	} else if (((*(_187735_fc)).get()._field_Exception != nullptr)) {
		_221427ca6_pushErr(_self_.ptr(), (*(_187735_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_187757_d))=nullptr;
		return;;
	};
	if (((*(_187735_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_2211a8cac_Expr> _189321_arg = (*(_187735_fc)).get()._field_Args[0LL];;
		(*(_187757_d))=_221438943_evalCastT(_self_, &((*(_187757_d)).get()._field_Kind), &(_189321_arg), &(_189321_arg.get()._field_Token));
		return;;
	};
	if (((*(_187757_d)) != nullptr)) {
		(*(_187757_d)).get()._field_Decl=false;
	};
}



inline void _22143a47d_callBuiltinFn(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211acc8e_FnCallExpr>* _190338_fc, jule::Ptr<_221425c2c_Data>* _190360_d) {
	(*(_190360_d))=_221456c80_Fn((*(_190360_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _190338_fc, _190360_d);
	if (((*(_190360_d)) == nullptr)) {
		return;;
	};
	(*(_190360_d)).get()._field_Mutable=true;
}



inline void _22143a7be_checkFnOfConcurrentCall(_22142779a_Eval* _self_, jule::Ptr<_2211dc97d_FnIns>* _191143_f, jule::Ptr<_21da1aa0b_Token> _191154_errorToken) {
	if (_2214286e1_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_191143_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206513a38:;
		if (it != expr_end) {
			jule::Ptr<_2211dbaae_ParamIns> *_191516_p = it;
			{
				if (_2211d8abc_IsSelf((*(_191516_p)).get()._field_Decl.ptr())) {
					if ((!(_2211d8d31_IsRef((*(_191516_p)).get()._field_Decl.ptr())))) {
						_221427ca6_pushErr(_self_, _191154_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_2214280c5_pushSuggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_191516_p)).get()._field_Decl.get()._field_Reference) {
					_221427ca6_pushErr(_self_, _191154_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_2214280c5_pushSuggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_206513a38:;
			++it;
			goto _iter_begin_206513a38;
		}
		_iter_end_206513a38:;
	};
}



inline void _22143abba_processExceptionalHandler(_22142779a_Eval* _self_, jule::Ptr<_2211dc97d_FnIns>* _193049_f, jule::Ptr<_2211acc8e_FnCallExpr>* _193065_fc, jule::Ptr<_221425c2c_Data>* _193087_d) {
	jule::Bool _193113_resultNeeded = ((!(_2211da23e_IsVoid((*(_193049_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_22122ac63_scopeChecker> _193217_csc = nullptr;;
	jule::Ptr<_221224135_Scope> _193317_ch = nullptr;;
	jule::Ptr<_2211cd9c4_FnCallExprModel> _193517_model = (*(_193087_d)).get()._field_Model.cast_ptr<_2211cd9c4_FnCallExprModel>(&__jule_any_type35);;
	jule::Ptr<_22122ac63_scopeChecker> _193917_sc = (*(_self_))._field_lookup.cast_ptr<_22122ac63_scopeChecker>(0);;
	_193217_csc=_22123ae1b_newChildChecker(_193917_sc);
	if (_193113_resultNeeded) {
		_193217_csc.get()._field_result=(*(_193049_f));
	};
	_193317_ch=_22123033e_getChild(_193917_sc.ptr());
	(*(_193065_fc)).get()._field_Exception.get()._field_Parent=_193917_sc.get()._field_tree;
	_193217_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_193217_csc.get()._field_table.get()._field_Vars,1);_193217_csc.get()._field_table.get()._field_Vars.__push(_22144d0d9_buildErrorVar(&(_193317_ch), _193065_fc));;
	_221230707_checkChildSsc(_193917_sc, &((*(_193065_fc)).get()._field_Exception), &(_193317_ch), &(_193217_csc));
	_193517_model.get()._field_Assigned=_193113_resultNeeded;
	_193517_model.get()._field_Except=_193317_ch;
	if ((_193113_resultNeeded && (_193217_csc.get()._field_result != nullptr))) {
		_221427ca6_pushErr(_self_, (*(_193065_fc)).get()._field_Token, jule::Str("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _22143aeea_callFn(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211acc8e_FnCallExpr>* _195731_fc, jule::Ptr<_221425c2c_Data>* _195753_d) {
	jule::Ptr<_2211dc97d_FnIns> _195817_f = _221456c80_Fn((*(_195753_d)).get()._field_Kind.ptr());;
	if (_2211ddd14_IsBuiltin(_195817_f.ptr())) {
		_22143a47d_callBuiltinFn(_self_, _195731_fc, _195753_d);
		return;;
	};
	if ((_221428955_isGlobal(_self_.ptr()) && _195817_f.get()._field_Decl.get()._field_Exceptional)) {
		_221427ca6_pushErr(_self_.ptr(), (*(_195731_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_2214280c5_pushSuggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_195753_d))=nullptr;
		return;;
	};
	if (((!(_2211da4a3_IsMethod(_195817_f.get()._field_Decl.ptr()))) && _22146c911_hasDirective(&(_195817_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_221427ca6_pushErr(_self_.ptr(), (*(_195731_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_195753_d))=nullptr;
		return;;
	};
	if (((((!((*(_195753_d)).get()._field_Mutable)) && _2211da4a3_IsMethod(_195817_f.get()._field_Decl.ptr())) && (!(_195817_f.get()._field_Decl.get()._field_Statically))) && _195817_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_221427ca6_pushErr(_self_.ptr(), (*(_195731_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	} else if (((!(_2214286e1_isUnsafe(_self_.ptr()))) && _195817_f.get()._field_Decl.get()._field_Unsafety)) {
		_221427ca6_pushErr(_self_.ptr(), (*(_195731_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _198217_dynamicAnnotation = (((_195817_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_195817_f.get()._field_Generics.len() == 0LL)) && (_195817_f.get()._field_Params.len() > 0LL));;
	if (_198217_dynamicAnnotation) {
		_195817_f.get()._field_Generics=jule::Slice<jule::Ptr<_221451b15_InsGeneric>>::alloc(_195817_f.get()._field_Decl.get()._field_Generics.len(), _195817_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_195817_f.get()._field_Generics.len() != _195817_f.get()._field_Decl.get()._field_Generics.len())) {
		_22124eade_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_195817_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_195817_f.get()._field_Generics.len()), (*(_195731_fc)).get()._field_Token);
		(*(_195753_d))=nullptr;
		return;;
	};
	jule::Ptr<_22124ad71_Sema> _199117_old = _self_.get()._field_s;;
	if ((_195817_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_195817_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_199117_old != _self_.get()._field_s)) {
			_199117_old.get()._field_errors=jule::append(_199117_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_199117_old;
	});;
	_221417999_fnCallArgChecker _200417_fcac = _221417999_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_195731_fc)).get()._field_Args, ._field_errorToken=(*(_195731_fc)).get()._field_Token, ._field_dynamicAnnotation=_198217_dynamicAnnotation, };;
	if ((!(_198217_dynamicAnnotation))) {
		if ((!(_195817_f.get()._field_reloaded))) {
			jule::Bool _201321_ok = _221257da0_reloadFnInsTypes(_self_.get()._field_s, _195817_f);;
			_195817_f.get()._field_reloaded=true;
			if ((!(_201321_ok))) {
				(*(_195753_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_2211dc97d_FnIns> _202021_existInstance = _2211db707_appendInstance(_195817_f.get()._field_Decl.ptr(), &(_195817_f));;
		if ((_202021_existInstance != nullptr)) {
			_195817_f=_202021_existInstance;
		};
	} else if ((!(_221256794_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_195817_f), &(_200417_fcac._field_ignored))))) {
		(*(_195753_d))=nullptr;
		return;;
	};
	_200417_fcac._field_f=_195817_f;
	jule::Bool _203117_ok = false;;
	if ((_195817_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_22124ad71_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_22124ad71_Sema> _1___jule_assign_arg = _199117_old;
			_199117_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_203117_ok=_221419d64_check(&_200417_fcac);
		({
			jule::Ptr<_22124ad71_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_22124ad71_Sema> _1___jule_assign_arg = _199117_old;
			_199117_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_203117_ok=_221419d64_check(&_200417_fcac);
	};
	if (_198217_dynamicAnnotation) {
		if ((!(_203117_ok))) {
			(*(_195753_d))=nullptr;
			return;;
		};
		if ((!(_221433c3a_checkGenericFn(_self_, &(_195817_f), &((*(_195731_fc)).get()._field_Token), &((*(_195753_d)).get()._field_Model))))) {
			(*(_195753_d))=nullptr;
			return;;
		};
	};
	jule::Any _205117_callModel = (*(_195753_d)).get()._field_Model;;
	if (_2211da23e_IsVoid(_195817_f.get()._field_Decl.ptr())) {
		(*(_195753_d))=_22144e5d5_buildVoidData();
	} else {
		(*(_195753_d)).get()._field_Kind=_195817_f.get()._field_Result;
		(*(_195753_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_2211cd9c4_FnCallExprModel> _206017_model = jule::new_ptr<_2211cd9c4_FnCallExprModel>(_2211cd9c4_FnCallExprModel{._field_Token=(*(_195731_fc)).get()._field_Token, ._field_Func=_195817_f, ._field_IsCo=(*(_195731_fc)).get()._field_IsCo, ._field_Expr=_205117_callModel, ._field_Args=_200417_fcac._field_argModels, });;
	(*(_195753_d)).get()._field_Model=jule::Any(_206017_model, &__jule_any_type35);
	(*(_195753_d)).get()._field_Mutable=true;
	if (_195817_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_195731_fc)).get()._field_IsCo) {
			_22124d747_pushErr(_self_.get()._field_s.ptr(), (*(_195731_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_22124da66_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_2211ad102_Unhandled((*(_195731_fc)).ptr())) {
				_case_begin_20653035c:;
				{
					_221427ca6_pushErr(_self_.ptr(), (*(_195731_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_2214280c5_pushSuggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_2211ad366_Ignored((*(_195731_fc)).ptr())) {
				_case_begin_206530703:;
				{
					goto _match_end_20652e5e2;
				}
			}
			else {
				_case_begin_20652e647:;
				{
					_22143abba_processExceptionalHandler(_self_.ptr(), &(_195817_f), _195731_fc, _195753_d);
				}
			}
			_match_end_20652e5e2:;
		};
	} else if ((!(_2211ad102_Unhandled((*(_195731_fc)).ptr())))) {
		_221427ca6_pushErr(_self_.ptr(), (*(_195731_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_195731_fc)).get()._field_IsCo) {
		_22143a7be_checkFnOfConcurrentCall(_self_.ptr(), &(_206017_model.get()._field_Func), (*(_195731_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_221425c2c_Data> _22143b308_evalFnCall(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211acc8e_FnCallExpr> _209534_fc) {
	jule::Ptr<_221453397_TypeKind> _209617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_209617_prefix;
	});;
	{
		auto &_match_expr{ _209534_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_206533041:;
			{
				if (_209534_fc.get()._field_Expr.get()._field_Token.get()._field_Kind.equal("error", 5)) {
					return _221519da9_builtinCallerError(&(_self_), &(_209534_fc));;
				};
			}
		}
		_match_end_206532edb:;
	};
	jule::Ptr<_221425c2c_Data> _210917_d = _221443530_evalExprKind(_self_, _209534_fc.get()._field_Expr.get()._field_Kind);;
	if ((_210917_d == nullptr)) {
		return nullptr;;
	};
	if (_210917_d.get()._field_Decl) {
		_22143a15e_callTypeFn(_self_, &(_209534_fc), &(_210917_d));
		return _210917_d;;
	};
	if ((_221456c80_Fn(_210917_d.get()._field_Kind.ptr()) == nullptr)) {
		_221427ca6_pushErr(_self_.ptr(), _209534_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_22143aeea_callFn(_self_, &(_209534_fc), &(_210917_d));
	return _210917_d;;
}



inline jule::Ptr<_221425c2c_Data> _22143b6b0_evalEnumStatic(_22142779a_Eval* _self_, jule::Ptr<_2211ee781_Enum> _212837_enm, jule::Ptr<_21da1aa0b_Token> _212849_ident) {
	jule::Ptr<_2211edc8b_EnumItem> _212917_item = _221200342_FindItem(_212837_enm.ptr(), _212849_ident.get()._field_Kind);;
	if ((_212917_item == nullptr)) {
		_221427ca6_pushErr(_self_, _212849_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_212837_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_212849_ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _221450c57_evalEnumStatic(&(_212837_enm), &(_212917_item));;
}



inline jule::Ptr<_221425c2c_Data> _22143ba67_evalTypeEnumStatic(_22142779a_Eval* _self_, jule::Ptr<_221200d7b_TypeEnum> _213641_enm, jule::Ptr<_21da1aa0b_Token> _213657_ident) {
	jule::Ptr<_2212007b5_TypeEnumItem> _213717_item = _2212018b5_FindItem(_213641_enm.ptr(), _213657_ident.get()._field_Kind);;
	if ((_213717_item == nullptr)) {
		_221427ca6_pushErr(_self_, _213657_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_213641_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_213657_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_2214562ce_Enum(_213717_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2065396da:;
			{
				return _22142b34d__evalEnum(_self_, _2214562ce_Enum(_213717_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_221456543_TypeEnum(_213717_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206539d7d:;
			{
				return _22142ba13__evalTypeEnum(_self_, _221456543_TypeEnum(_213717_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_221456ee4_Struct(_213717_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206539201:;
			{
				return _22142c1c8__evalStruct(_self_, _221456ee4_Struct(_213717_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_206538662:;
			{
				jule::Ptr<_221425c2c_Data> _215021_d = jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=_213717_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_215021_d.get()._field_Model=jule::Any(_215021_d.get()._field_Kind, &__jule_any_type89);
				return _215021_d;;
			}
		}
		_match_end_206539047:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22143be1e_evalStructStatic(_22142779a_Eval* _self_, jule::Ptr<_2211c76e3_StructIns> _215939_s, jule::Ptr<_21da1aa0b_Token> _215954_ident) {
	jule::Ptr<_221425c2c_Data> _216017_d = jule::new_ptr<_221425c2c_Data>();;
	;
	jule::Ptr<_2211d9ccc_Fn> _216417_method = _2211c868e_FindMethod(_215939_s.ptr(), _215954_ident.get()._field_Kind, true);;
	if ((_216417_method != nullptr)) {
		if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), _216417_method.get()._field_Public, _216417_method.get()._field_Token)))) {
			_221427ca6_pushErr(_self_, _215954_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_215954_ident.get()._field_Kind, &__jule_any_type5)}));
			_2214280c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_2211dc97d_FnIns> _217121_ins = _2211db42c_instance(_216417_method);;
		_217121_ins.get()._field_Owner=_215939_s;
		_206409e6d_pushReference(_self_, &(_217121_ins));
		_216017_d.get()._field_Model=jule::Any(jule::new_ptr<_2211d16db_StructStaticIdentExprModel>(_2211d16db_StructStaticIdentExprModel{._field_Structure=_215939_s, ._field_Expr=_216017_d.get()._field_Model, ._field_Method=_217121_ins}), &__jule_any_type101);
		_216017_d.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_217121_ins, 1)});
		return _216017_d;;
	};
	jule::Ptr<_22126b17c_Var> _218517_sttc = _2211c8caa_FindStatic(_215939_s.ptr(), _215954_ident.get()._field_Kind);;
	if ((_218517_sttc != nullptr)) {
		return _22142e043_evalVar(_self_, _218517_sttc, _215954_ident);;
	};
	_221427ca6_pushErr(_self_, _215954_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_215939_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_215954_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_221425c2c_Data> _22143c370_evalTraitSubIdent(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data> _219440_d, jule::Ptr<_2211ebeed_Trait> _219454_trt, jule::Ptr<_21da1aa0b_Token> _219471_ident) {
	jule::Ptr<_2211d9ccc_Fn> _219517_f = _2211ecd9a_FindMethod(_219454_trt.ptr(), _219471_ident.get()._field_Kind);;
	if ((_219517_f == nullptr)) {
		_221427ca6_pushErr(_self_, _219471_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_219454_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_219471_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_2211db42c_instance(_219517_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_2211d0a5e_TraitSubIdentExprModel>(_2211d0a5e_TraitSubIdentExprModel{._field_Token=_219471_ident, ._field_Expr=_219440_d.get()._field_Model, ._field_Method=_219517_f, ._field_Trt=_219454_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_221425c2c_Data> _22143c88c_evalStructSubIdentField(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data>* _221447_d, jule::Ptr<_2211c76e3_StructIns>* _221462_s, jule::Ptr<_21da1aa0b_Token>* _221482_tok, jule::Ptr<_2211c6bed_FieldIns>* _2214100_f) {
	jule::Ptr<_2211d1345_StructSubIdentExprModel> _221517_model = jule::new_ptr<_2211d1345_StructSubIdentExprModel>(_2211d1345_StructSubIdentExprModel{._field_Token=(*(_221482_tok)), ._field_Expr=jule::new_ptr<_221425c2c_Data>((*((*(_221447_d))))), ._field_Field=(*(_2214100_f)), ._field_Owner=(*(_221462_s))});;
	(*(_221447_d)).get()._field_Model=jule::Any(_221517_model, &__jule_any_type71);
	(*(_221447_d)).get()._field_Kind=(*(_2214100_f)).get()._field_Kind;
	(*(_221447_d)).get()._field_Lvalue=true;
	if (((*(_2214100_f)).get()._field_Decl.get()._field_Mutable && (!((*(_221447_d)).get()._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_206547c37:;
				{
					jule::Ptr<_22122ac63_scopeChecker> _222921_scope = _22122da8a_getRoot((*(_self_))._field_lookup.cast_ptr<_22122ac63_scopeChecker>(0));;
					(*(_221447_d)).get()._field_Mutable=((_222921_scope.get()._field_owner != nullptr) && (_222921_scope.get()._field_owner.get()._field_Owner == (*(_221462_s))));
				}
			}
			_match_end_206547bd2:;
		};
	};
	return (*(_221447_d));;
}



inline jule::Ptr<_221425c2c_Data> _22143cd98_evalStructSubIdent(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data> _223741_d, jule::Ptr<_2211c76e3_StructIns> _223755_s, jule::Ptr<_2211ac211_SubIdentExpr> _223774_si, jule::Bool _223793_ref) {
	jule::Ptr<_2211c6bed_FieldIns> _223817_f = _2211c899c_FindField(_223755_s.ptr(), _223774_si.get()._field_Ident.get()._field_Kind);;
	if ((_223817_f != nullptr)) {
		if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), _223817_f.get()._field_Decl.get()._field_Public, _223817_f.get()._field_Decl.get()._field_Token)))) {
			_221427ca6_pushErr(_self_, _223774_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_223817_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_2214280c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _22143c88c_evalStructSubIdentField(_self_, &(_223741_d), &(_223755_s), &(_223774_si.get()._field_Ident), &(_223817_f));;
	};
	;
	jule::Ptr<_2211d9ccc_Fn> _224817_m = _2211c868e_FindMethod(_223755_s.ptr(), _223774_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_224817_m == nullptr)) {
		_221427ca6_pushErr(_self_, _223774_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_223755_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_223774_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), _224817_m.get()._field_Public, _224817_m.get()._field_Token)))) {
		_221427ca6_pushErr(_self_, _223774_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_224817_m.get()._field_Ident, &__jule_any_type5)}));
		_2214280c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_2211d8d31_IsRef(_224817_m.get()._field_Params[0LL].ptr()) && (!(_223793_ref)))) {
		_221427ca6_pushErr(_self_, _223774_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_22142cbac_checkDeprecated(_self_, &(_224817_m.get()._field_Directives), _223774_si.get()._field_Ident);
	jule::Ptr<_2211dc97d_FnIns> _226417_ins = _2211db42c_instance(_224817_m);;
	_226417_ins.get()._field_Owner=_223755_s;
	_206409e6d_pushReference(_self_, &(_226417_ins));
	jule::Ptr<_221425c2c_Data> _226717_model = jule::new_ptr<_221425c2c_Data>((*(_223741_d)));;
	_223741_d.get()._field_Model=jule::Any(jule::new_ptr<_2211d1345_StructSubIdentExprModel>(_2211d1345_StructSubIdentExprModel{._field_Token=_223774_si.get()._field_Ident, ._field_Expr=_226717_model, ._field_Method=_226417_ins, ._field_Owner=_223755_s}), &__jule_any_type71);
	_223741_d.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_226417_ins, 1)});
	return _223741_d;;
}



inline jule::Ptr<_221425c2c_Data> _22143d250_evalSliceSubIdent(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data> _227840_d, jule::Ptr<_21da1aa0b_Token> _227854_ident) {
	{
		auto &_match_expr{ _227854_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_20655368d:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_Params=jule::Slice<jule::Ptr<_2211dbaae_ParamIns>>::make({jule::new_ptr<_2211dbaae_ParamIns>(_2211dbaae_ParamIns{._field_Decl=jule::new_ptr<_2211d8490_Param>(_2211d8490_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)})}),jule::new_ptr<_2211dbaae_ParamIns>(_2211dbaae_ParamIns{._field_Decl=jule::new_ptr<_2211d8490_Param>(_2211d8490_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)})})}), ._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_221519a68_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227840_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_2211d2401_CommonSubIdentExprModel>(_2211d2401_CommonSubIdentExprModel{._field_ExprKind=_227840_d.get()._field_Kind, ._field_Expr=_227840_d.get()._field_Model, ._field_Token=_227854_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_206553968:;
			{
				_221427ca6_pushErr(_self_, _227854_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_227840_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_227854_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_206553726:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22143d607_evalArraySubIdent(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data> _231540_d, jule::Ptr<_21da1aa0b_Token> _231554_ident) {
	{
		auto &_match_expr{ _231554_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_206554b34:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_Params=jule::Slice<jule::Ptr<_2211dbaae_ParamIns>>::make({jule::new_ptr<_2211dbaae_ParamIns>(_2211dbaae_ParamIns{._field_Decl=jule::new_ptr<_2211d8490_Param>(_2211d8490_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)})}),jule::new_ptr<_2211dbaae_ParamIns>(_2211dbaae_ParamIns{._field_Decl=jule::new_ptr<_2211d8490_Param>(_2211d8490_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)})})}), ._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_221519a68_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_231540_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_2211d2401_CommonSubIdentExprModel>(_2211d2401_CommonSubIdentExprModel{._field_ExprKind=_231540_d.get()._field_Kind, ._field_Expr=_231540_d.get()._field_Model, ._field_Token=_231554_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_206556b58:;
			{
				_221427ca6_pushErr(_self_, _231554_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_231540_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_231554_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_206556aae:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22143d915_evalIntTypeStatic(_22142779a_Eval* _self_, jule::Ptr<_21da1aa0b_Token> _235236_ident) {
	;
	{
		auto &_match_expr{ _235236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_20655aca0:;
			{
				jule::Ptr<_21e6c53da_Const> _235621_c = static__21e6c585d_NewI64(static_cast<jule::I64>(_21e6bdbca_MaxI(jule::Str("int", 3))));;
				_235621_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)}), ._field_Model=jule::Any(_235621_c, &__jule_any_type19), ._field_Constant=_235621_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_20655ad16:;
			{
				jule::Ptr<_21e6c53da_Const> _236421_c = static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_21e6be181_Min(jule::Str("int", 3)))));;
				_236421_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)}), ._field_Model=jule::Any(_236421_c, &__jule_any_type19), ._field_Constant=_236421_c});;
			}
		}
		else {
			_case_begin_20655a101:;
			{
				_221427ca6_pushErr(_self_, _235236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_235236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_206559e58:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22143dc23_evalUintTypeStatic(_22142779a_Eval* _self_, jule::Ptr<_21da1aa0b_Token> _237737_ident) {
	;
	{
		auto &_match_expr{ _237737_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_20655adc1:;
			{
				jule::Ptr<_21e6c53da_Const> _238121_c = static__21e6c5b05_NewU64(static_cast<jule::U64>(_21e6bde72_MaxU(jule::Str("uint", 4))));;
				_238121_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("uint", 4)), 18)}), ._field_Model=jule::Any(_238121_c, &__jule_any_type19), ._field_Constant=_238121_c});;
			}
		}
		else {
			_case_begin_20655dab6:;
			{
				_221427ca6_pushErr(_self_, _237737_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_237737_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20655d91d:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22143e031_evalI8TypeStatic(_22142779a_Eval* _self_, jule::Ptr<_21da1aa0b_Token> _239435_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _239435_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_206562515:;
			{
				jule::Ptr<_21e6c53da_Const> _240021_c = static__21e6c585d_NewI64(127LL);;
				_240021_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("i8", 2)), 18)}), ._field_Model=jule::Any(_240021_c, &__jule_any_type19), ._field_Constant=_240021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_206561e71:;
			{
				jule::Ptr<_21e6c53da_Const> _240821_c = static__21e6c585d_NewI64(-128LL);;
				_240821_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("i8", 2)), 18)}), ._field_Model=jule::Any(_240821_c, &__jule_any_type19), ._field_Constant=_240821_c});;
			}
		}
		else {
			_case_begin_2065618dd:;
			{
				_221427ca6_pushErr(_self_, _239435_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_239435_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_206560601:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22143e33e_evalI16TypeStatic(_22142779a_Eval* _self_, jule::Ptr<_21da1aa0b_Token> _242136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _242136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_206639774:;
			{
				jule::Ptr<_21e6c53da_Const> _242721_c = static__21e6c585d_NewI64(32767LL);;
				_242721_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("i16", 3)), 18)}), ._field_Model=jule::Any(_242721_c, &__jule_any_type19), ._field_Constant=_242721_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2066391d0:;
			{
				jule::Ptr<_21e6c53da_Const> _243521_c = static__21e6c585d_NewI64(-32768LL);;
				_243521_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("i16", 3)), 18)}), ._field_Model=jule::Any(_243521_c, &__jule_any_type19), ._field_Constant=_243521_c});;
			}
		}
		else {
			_case_begin_206638b4c:;
			{
				_221427ca6_pushErr(_self_, _242136_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_242136_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2066380be:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22143e64c_evalI32TypeStatic(_22142779a_Eval* _self_, jule::Ptr<_21da1aa0b_Token> _244836_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _244836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_20663c359:;
			{
				jule::Ptr<_21e6c53da_Const> _245421_c = static__21e6c585d_NewI64(2147483647LL);;
				_245421_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("i32", 3)), 18)}), ._field_Model=jule::Any(_245421_c, &__jule_any_type19), ._field_Constant=_245421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_20663d635:;
			{
				jule::Ptr<_21e6c53da_Const> _246221_c = static__21e6c585d_NewI64(-2147483648LL);;
				_246221_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("i32", 3)), 18)}), ._field_Model=jule::Any(_246221_c, &__jule_any_type19), ._field_Constant=_246221_c});;
			}
		}
		else {
			_case_begin_20663cb1d:;
			{
				_221427ca6_pushErr(_self_, _244836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_244836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20663ca1e:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22143e95a_evalI64TypeStatic(_22142779a_Eval* _self_, jule::Ptr<_21da1aa0b_Token> _247536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _247536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_206641209:;
			{
				jule::Ptr<_21e6c53da_Const> _248121_c = static__21e6c585d_NewI64(jule::MAX_I64);;
				_248121_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("i64", 3)), 18)}), ._field_Model=jule::Any(_248121_c, &__jule_any_type19), ._field_Constant=_248121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2066424d5:;
			{
				jule::Ptr<_21e6c53da_Const> _248921_c = static__21e6c585d_NewI64(jule::MIN_I64);;
				_248921_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("i64", 3)), 18)}), ._field_Model=jule::Any(_248921_c, &__jule_any_type19), ._field_Constant=_248921_c});;
			}
		}
		else {
			_case_begin_2066419bd:;
			{
				_221427ca6_pushErr(_self_, _247536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_247536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2066418be:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22143ec68_evalU8TypeStatic(_22142779a_Eval* _self_, jule::Ptr<_21da1aa0b_Token> _250235_ident) {
	;
	;
	{
		auto &_match_expr{ _250235_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_20664572a:;
			{
				jule::Ptr<_21e6c53da_Const> _250721_c = static__21e6c5b05_NewU64(255LLU);;
				_250721_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("u8", 2)), 18)}), ._field_Model=jule::Any(_250721_c, &__jule_any_type19), ._field_Constant=_250721_c});;
			}
		}
		else {
			_case_begin_2066450a9:;
			{
				_221427ca6_pushErr(_self_, _250235_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_250235_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2066452eb:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221440076_evalU16TypeStatic(_22142779a_Eval* _self_, jule::Ptr<_21da1aa0b_Token> _252036_ident) {
	;
	;
	{
		auto &_match_expr{ _252036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_206648112:;
			{
				jule::Ptr<_21e6c53da_Const> _252521_c = static__21e6c5b05_NewU64(65535LLU);;
				_252521_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("u16", 3)), 18)}), ._field_Model=jule::Any(_252521_c, &__jule_any_type19), ._field_Constant=_252521_c});;
			}
		}
		else {
			_case_begin_206647991:;
			{
				_221427ca6_pushErr(_self_, _252036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_252036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_206647bd3:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221440384_evalU32TypeStatic(_22142779a_Eval* _self_, jule::Ptr<_21da1aa0b_Token> _253836_ident) {
	;
	;
	{
		auto &_match_expr{ _253836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_20664a9e9:;
			{
				jule::Ptr<_21e6c53da_Const> _254321_c = static__21e6c5b05_NewU64(4294967295LLU);;
				_254321_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("u32", 3)), 18)}), ._field_Model=jule::Any(_254321_c, &__jule_any_type19), ._field_Constant=_254321_c});;
			}
		}
		else {
			_case_begin_20664a378:;
			{
				_221427ca6_pushErr(_self_, _253836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_253836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20664a5ba:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221440692_evalU64TypeStatic(_22142779a_Eval* _self_, jule::Ptr<_21da1aa0b_Token> _255636_ident) {
	;
	;
	{
		auto &_match_expr{ _255636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_20664d3d1:;
			{
				jule::Ptr<_21e6c53da_Const> _256121_c = static__21e6c5b05_NewU64(jule::MAX_U64);;
				_256121_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("u64", 3)), 18)}), ._field_Model=jule::Any(_256121_c, &__jule_any_type19), ._field_Constant=_256121_c});;
			}
		}
		else {
			_case_begin_20664cc60:;
			{
				_221427ca6_pushErr(_self_, _255636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_255636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20664cea2:;
	};
}



inline jule::Ptr<_221425c2c_Data> _2214409a0_evalF32TypeStatic(_22142779a_Eval* _self_, jule::Ptr<_21da1aa0b_Token> _257436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _257436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_206651c42:;
			{
				jule::Ptr<_21e6c53da_Const> _258121_c = static__21e6c63db_NewF64(340282346638528860000000000000000000000.0);;
				_258121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("f32", 3)), 18)}), ._field_Model=jule::Any(_258121_c, &__jule_any_type19), ._field_Constant=_258121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_20665169d:;
			{
				jule::Ptr<_21e6c53da_Const> _258921_c = static__21e6c63db_NewF64(-340282346638528860000000000000000000000.0);;
				_258921_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("f32", 3)), 18)}), ._field_Model=jule::Any(_258921_c, &__jule_any_type19), ._field_Constant=_258921_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_206651d30:;
			{
				jule::Ptr<_21e6c53da_Const> _259721_c = static__21e6c63db_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_259721_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("f32", 3)), 18)}), ._field_Model=jule::Any(_259721_c, &__jule_any_type19), ._field_Constant=_259721_c});;
			}
		}
		else {
			_case_begin_20665115e:;
			{
				_221427ca6_pushErr(_self_, _257436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type5),jule::Any(_257436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_206651109:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221440cad_evalF64TypeStatic(_22142779a_Eval* _self_, jule::Ptr<_21da1aa0b_Token> _261036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_206657011:;
			{
				jule::Ptr<_21e6c53da_Const> _261721_c = static__21e6c63db_NewF64(jule::MAX_F64);;
				_261721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("f64", 3)), 18)}), ._field_Model=jule::Any(_261721_c, &__jule_any_type19), ._field_Constant=_261721_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_20665696c:;
			{
				jule::Ptr<_21e6c53da_Const> _262521_c = static__21e6c63db_NewF64(jule::MIN_F64);;
				_262521_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("f64", 3)), 18)}), ._field_Model=jule::Any(_262521_c, &__jule_any_type19), ._field_Constant=_262521_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_2066570ee:;
			{
				jule::Ptr<_21e6c53da_Const> _263321_c = static__21e6c63db_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_263321_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("f64", 3)), 18)}), ._field_Model=jule::Any(_263321_c, &__jule_any_type19), ._field_Constant=_263321_c});;
			}
		}
		else {
			_case_begin_20665642d:;
			{
				_221427ca6_pushErr(_self_, _261036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type5),jule::Any(_261036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2066563c8:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221441165_evalPrimStatic(_22142779a_Eval* _self_, jule::Str _264633_kind, jule::Ptr<_21da1aa0b_Token> _264644_ident) {
	{
		auto &_match_expr{ _264633_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_20665a047:;
			{
				return _22143d915_evalIntTypeStatic(_self_, _264644_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_20665b301:;
			{
				return _22143dc23_evalUintTypeStatic(_self_, _264644_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_20665b3de:;
			{
				return _22143e031_evalI8TypeStatic(_self_, _264644_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_20665b455:;
			{
				return _22143e33e_evalI16TypeStatic(_self_, _264644_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_20665a9d7:;
			{
				return _22143e64c_evalI32TypeStatic(_self_, _264644_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_20665aa4d:;
			{
				return _22143e95a_evalI64TypeStatic(_self_, _264644_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_20665b4bb:;
			{
				return _22143ec68_evalU8TypeStatic(_self_, _264644_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_20665b532:;
			{
				return _221440076_evalU16TypeStatic(_self_, _264644_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_20665b598:;
			{
				return _221440384_evalU32TypeStatic(_self_, _264644_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_20665b60e:;
			{
				return _221440692_evalU64TypeStatic(_self_, _264644_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_20665b675:;
			{
				return _2214409a0_evalF32TypeStatic(_self_, _264644_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_20665b6db:;
			{
				return _221440cad_evalF64TypeStatic(_self_, _264644_ident);;
			}
		}
		else {
			_case_begin_20665730d:;
			{
				_221427ca6_pushErr(_self_, _264644_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_264633_kind, &__jule_any_type5),jule::Any(_264644_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2066572a8:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22144151c_evalTypeStatic(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data> _267837_d, jule::Ptr<_2211ac211_SubIdentExpr> _267851_si) {
	{
		
		if ((_221455a92_Prim(_267837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206661647:;
			{
				return _221441165_evalPrimStatic(_self_, _22145a932_Str(_221455a92_Prim(_267837_d.get()._field_Kind.ptr()).ptr()), _267851_si.get()._field_Ident);;
			}
		}
		else if ((_2214562ce_Enum(_267837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2066616ad:;
			{
				return _22143b6b0_evalEnumStatic(_self_, _2214562ce_Enum(_267837_d.get()._field_Kind.ptr()), _267851_si.get()._field_Ident);;
			}
		}
		else if ((_221456543_TypeEnum(_267837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2066614b0:;
			{
				return _22143ba67_evalTypeEnumStatic(_self_, _221456543_TypeEnum(_267837_d.get()._field_Kind.ptr()), _267851_si.get()._field_Ident);;
			}
		}
		else if ((_221456ee4_Struct(_267837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206661526:;
			{
				return _22143be1e_evalStructStatic(_self_, _221456ee4_Struct(_267837_d.get()._field_Kind.ptr()), _267851_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_206660756:;
			{
				_221427ca6_pushErr(_self_, _267851_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_267837_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2066606ac:;
	};
}



inline jule::Ptr<_221425c2c_Data> _2066674a5_comptimeObjSubIdent(_22142779a_Eval* _self_, jule::Ptr<_221211c7c_comptimeTypeInfo>* _269457_ct, jule::Ptr<_221425c2c_Data>* _269477_d, jule::Ptr<_2211ac211_SubIdentExpr>* _269488_si) {
	jule::Ptr<_221425c2c_Data> _269517_cd = _22121748b_subIdent((*(_269457_ct)), (*(_269488_si)).get()._field_Ident.get()._field_Kind);;
	if ((_269517_cd == nullptr)) {
		_221427ca6_pushErr(_self_, (*(_269488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_269477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_269488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _269517_cd;;
}

inline jule::Ptr<_221425c2c_Data> _20666ac39_comptimeObjSubIdent(_22142779a_Eval* _self_, jule::Ptr<_2212039c7_comptimeStructField>* _269457_ct, jule::Ptr<_221425c2c_Data>* _269477_d, jule::Ptr<_2211ac211_SubIdentExpr>* _269488_si) {
	jule::Ptr<_221425c2c_Data> _269517_cd = _2212051d2_subIdent((*(_269457_ct)), (*(_269488_si)).get()._field_Ident.get()._field_Kind);;
	if ((_269517_cd == nullptr)) {
		_221427ca6_pushErr(_self_, (*(_269488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_269477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_269488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _269517_cd;;
}

inline jule::Ptr<_221425c2c_Data> _20666e457_comptimeObjSubIdent(_22142779a_Eval* _self_, jule::Ptr<_2212099cd_comptimeEnumField>* _269457_ct, jule::Ptr<_221425c2c_Data>* _269477_d, jule::Ptr<_2211ac211_SubIdentExpr>* _269488_si) {
	jule::Ptr<_221425c2c_Data> _269517_cd = _22120a913_subIdent((*(_269457_ct)), (*(_269488_si)).get()._field_Ident.get()._field_Kind);;
	if ((_269517_cd == nullptr)) {
		_221427ca6_pushErr(_self_, (*(_269488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_269477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_269488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _269517_cd;;
}

inline jule::Ptr<_221425c2c_Data> _206672e3e_comptimeObjSubIdent(_22142779a_Eval* _self_, jule::Ptr<_22120c250_comptimeParam>* _269457_ct, jule::Ptr<_221425c2c_Data>* _269477_d, jule::Ptr<_2211ac211_SubIdentExpr>* _269488_si) {
	jule::Ptr<_221425c2c_Data> _269517_cd = _22120e010_subIdent((*(_269457_ct)), (*(_269488_si)).get()._field_Ident.get()._field_Kind);;
	if ((_269517_cd == nullptr)) {
		_221427ca6_pushErr(_self_, (*(_269488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_269477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_269488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _269517_cd;;
}

inline jule::Ptr<_221425c2c_Data> _20667665c_comptimeObjSubIdent(_22142779a_Eval* _self_, jule::Ptr<_2212069ca_comptimeStatic>* _269457_ct, jule::Ptr<_221425c2c_Data>* _269477_d, jule::Ptr<_2211ac211_SubIdentExpr>* _269488_si) {
	jule::Ptr<_221425c2c_Data> _269517_cd = _2212082a1_subIdent((*(_269457_ct)), (*(_269488_si)).get()._field_Ident.get()._field_Kind);;
	if ((_269517_cd == nullptr)) {
		_221427ca6_pushErr(_self_, (*(_269488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_269477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_269488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _269517_cd;;
}

inline jule::Ptr<_221425c2c_Data> _206679d7a_comptimeObjSubIdent(_22142779a_Eval* _self_, jule::Ptr<_221217777_comptimeValue>* _269457_ct, jule::Ptr<_221425c2c_Data>* _269477_d, jule::Ptr<_2211ac211_SubIdentExpr>* _269488_si) {
	jule::Ptr<_221425c2c_Data> _269517_cd = _221219a87_subIdent((*(_269457_ct)), (*(_269488_si)).get()._field_Ident.get()._field_Kind);;
	if ((_269517_cd == nullptr)) {
		_221427ca6_pushErr(_self_, (*(_269488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_269477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_269488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _269517_cd;;
}



inline jule::Ptr<_221425c2c_Data> _221441d25_evalObjSubIdent(_22142779a_Eval* _self_, jule::Ptr<_221425c2c_Data> _270238_d, jule::Ptr<_2211ac211_SubIdentExpr> _270252_si) {
	if (_21da1d2a0_IsIgnoreIdent(_270252_si.get()._field_Ident.get()._field_Kind)) {
		_221427ca6_pushErr(_self_, _270252_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if ((_22145915b_comptimeTypeInfo(_270238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206665b13:;
			{
				jule::Ptr<_221211c7c_comptimeTypeInfo> _271021_ct = _22145915b_comptimeTypeInfo(_270238_d.get()._field_Kind.ptr());;
				return _2066674a5_comptimeObjSubIdent(_self_, &(_271021_ct), &(_270238_d), &(_270252_si));;
			}
		}
		else if ((_221457e6d_comptimeStructField(_270238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206665b79:;
			{
				jule::Ptr<_2212039c7_comptimeStructField> _271321_ct = _221457e6d_comptimeStructField(_270238_d.get()._field_Kind.ptr());;
				return _20666ac39_comptimeObjSubIdent(_self_, &(_271321_ct), &(_270238_d), &(_270252_si));;
			}
		}
		else if ((_221458446_comptimeEnumField(_270238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206665be0:;
			{
				jule::Ptr<_2212099cd_comptimeEnumField> _271621_ct = _221458446_comptimeEnumField(_270238_d.get()._field_Kind.ptr());;
				return _20666e457_comptimeObjSubIdent(_self_, &(_271621_ct), &(_270238_d), &(_270252_si));;
			}
		}
		else if ((_22145891e_comptimeParam(_270238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206665c56:;
			{
				jule::Ptr<_22120c250_comptimeParam> _271921_ct = _22145891e_comptimeParam(_270238_d.get()._field_Kind.ptr());;
				return _206672e3e_comptimeObjSubIdent(_self_, &(_271921_ct), &(_270238_d), &(_270252_si));;
			}
		}
		else if ((_221459634_comptimeStatic(_270238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206665cbc:;
			{
				jule::Ptr<_2212069ca_comptimeStatic> _272221_ct = _221459634_comptimeStatic(_270238_d.get()._field_Kind.ptr());;
				return _20667665c_comptimeObjSubIdent(_self_, &(_272221_ct), &(_270238_d), &(_270252_si));;
			}
		}
		else if ((_221459898_comptimeValue(_270238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206665d44:;
			{
				jule::Ptr<_221217777_comptimeValue> _272521_ct = _221459898_comptimeValue(_270238_d.get()._field_Kind.ptr());;
				return _206679d7a_comptimeObjSubIdent(_self_, &(_272521_ct), &(_270238_d), &(_270252_si));;
			}
		}
		_match_end_2066651d9:;
	};
	jule::Ptr<_221453397_TypeKind> _272917_kind = _270238_d.get()._field_Kind;;
	{
		
		if ((_22145606a_Ptr(_270238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20667b91a:;
			{
				jule::Ptr<_2214623b7_Ptr> _273217_ptr = _22145606a_Ptr(_270238_d.get()._field_Kind.ptr());;
				if (_221462d8a_IsUnsafe(_273217_ptr.ptr())) {
					goto _match_end_20667a320;
				};
				if (((!(_270252_si.get()._field_IsSelf)) && (!(_2214286e1_isUnsafe(_self_))))) {
					_221427ca6_pushErr(_self_, _270252_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_272917_kind=_22145606a_Ptr(_270238_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_221455d06_Sptr(_270238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206677691:;
			{
				_272917_kind=_221455d06_Sptr(_270238_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_20667a320:;
	};
	{
		
		if ((_221457258_Trait(_270238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20668004a:;
			{
				return _22143c370_evalTraitSubIdent(_self_, _270238_d, _221457258_Trait(_270238_d.get()._field_Kind.ptr()), _270252_si.get()._field_Ident);;
			}
		}
		else if ((_221456ee4_Struct(_272917_kind.ptr()) != nullptr)) {
			_case_begin_2066800c2:;
			{
				jule::Ptr<_2211c76e3_StructIns> _274817_s = _221456ee4_Struct(_272917_kind.ptr());;
				if (_22144da79_isInstancedStruct(_274817_s)) {
					jule::Bool _275025_usedReferenceElem = (_221455d06_Sptr(_270238_d.get()._field_Kind.ptr()) != nullptr);;
					return _22143cd98_evalStructSubIdent(_self_, _270238_d, _221456ee4_Struct(_272917_kind.ptr()), _270252_si, _275025_usedReferenceElem);;
				};
			}
		}
		else if ((_221456a1b_Slc(_272917_kind.ptr()) != nullptr)) {
			_case_begin_206680149:;
			{
				return _22143d250_evalSliceSubIdent(_self_, _270238_d, _270252_si.get()._field_Ident);;
			}
		}
		else if ((_2214567a7_Arr(_272917_kind.ptr()) != nullptr)) {
			_case_begin_2066801c1:;
			{
				return _22143d607_evalArraySubIdent(_self_, _270238_d, _270252_si.get()._field_Ident);;
			}
		}
		_match_end_20667ee6d:;
	};
	_221427ca6_pushErr(_self_, _270252_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_270238_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_221425c2c_Data> _221442133_evalSubIdent(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211ac211_SubIdentExpr> _276236_si) {
	jule::Ptr<_221453397_TypeKind> _276317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_276317_prefix;
	});;
	jule::Ptr<_221425c2c_Data> _276617_d = _221443530_evalExprKind(_self_, _276236_si.get()._field_Expr.get()._field_Kind);;
	if ((_276617_d == nullptr)) {
		return nullptr;;
	};
	if (_276617_d.get()._field_Decl) {
		return _22144151c_evalTypeStatic(_self_.ptr(), _276617_d, _276236_si);;
	};
	return _221441d25_evalObjSubIdent(_self_.ptr(), _276617_d, _276236_si);;
}



inline jule::Ptr<_221425c2c_Data> _221442441_evalTuple(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211a9939_TupleExpr> _277633_tup) {
	jule::Ptr<_22146033d_Tuple> _277717_tupT = jule::new_ptr<_22146033d_Tuple>();;
	_277717_tupT.get()._field_Types=jule::Slice<jule::Ptr<_221453397_TypeKind>>::alloc(0LL, _277633_tup.get()._field_Expr.len());
	jule::Ptr<_2211d26ed_TupleExprModel> _278017_model = jule::new_ptr<_2211d26ed_TupleExprModel>(_2211d26ed_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_221425c2c_Data>>::alloc(0LL, _277633_tup.get()._field_Expr.len())});;
	jule::Bool _278417_ok = true;;
	{
		auto expr = &(_277633_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20668898d:;
		if (it != expr_end) {
			jule::Ptr<_2211a8cac_Expr> _278521_expr = *it;
			{
				jule::Ptr<_221425c2c_Data> _278621_d = _221444267_evalExpr(_self_, _278521_expr);;
				if ((_278621_d == nullptr)) {
					_278417_ok=false;
					goto _iter_next_20668898d;
				};
				_277717_tupT.get()._field_Types = jule::alloc_for_append(_277717_tupT.get()._field_Types,1);_277717_tupT.get()._field_Types.__push(_278621_d.get()._field_Kind);;
				_278017_model.get()._field_Datas = jule::alloc_for_append(_278017_model.get()._field_Datas,1);_278017_model.get()._field_Datas.__push(_278621_d);;
			}
			_iter_next_20668898d:;
			++it;
			goto _iter_begin_20668898d;
		}
		_iter_end_20668898d:;
	};
	if ((!(_278417_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_277717_tupT, 21)}), ._field_Model=jule::Any(_278017_model, &__jule_any_type87), });;
}



inline jule::Ptr<_221425c2c_Data> _2214427e8_evalMap(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_221460d66_Map> _280531_m, jule::Ptr<_2211ae3de_BraceLit> _280544_lit) {
	jule::Ptr<_2211ceed1_MapExprModel> _280617_model = jule::new_ptr<_2211ceed1_MapExprModel>(_2211ceed1_MapExprModel{._field_KeyKind=_280531_m.get()._field_Key, ._field_ValKind=_280531_m.get()._field_Val, });;
	{
		auto expr = &(_280544_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20668b96e:;
		if (it != expr_end) {
			jule::Ptr<_2211a8cac_Expr> _281121_expr = *it;
			{
				{
					auto &_match_expr{ _281121_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_20668c189:;
						{
							goto _match_end_20668c233;
						}
					}
					else {
						_case_begin_20668c3ba:;
						{
							_221427ca6_pushErr(_self_.ptr(), _280544_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_20668c233:;
				};
				jule::Ptr<_2211aebb4_KeyValPair> _282121_pair = _281121_expr.get()._field_Kind.cast_ptr<_2211aebb4_KeyValPair>(&__jule_any_type84);;
				jule::Ptr<_221425c2c_Data> _282321_key = _221444267_evalExpr(_self_, _282121_pair.get()._field_Key);;
				if ((_282321_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_221425c2c_Data> _282821_val = _221444267_evalExpr(_self_, _282121_pair.get()._field_Val);;
				if ((_282821_val == nullptr)) {
					return nullptr;;
				};
				_2212559d5_checkAssignType(_self_.get()._field_s, false, &(_280531_m.get()._field_Key), &(_282321_key), _282121_pair.get()._field_Colon);
				_2212559d5_checkAssignType(_self_.get()._field_s, false, &(_280531_m.get()._field_Val), &(_282821_val), _282121_pair.get()._field_Colon);
				_280617_model.get()._field_Entries = jule::alloc_for_append(_280617_model.get()._field_Entries,1);_280617_model.get()._field_Entries.__push(jule::new_ptr<_2211cea5d_KeyValPairExprModel>(_2211cea5d_KeyValPairExprModel{._field_Key=_282321_key.get()._field_Model, ._field_Val=_282821_val.get()._field_Model}));;
			}
			_iter_next_20668b96e:;
			++it;
			goto _iter_begin_20668b96e;
		}
		_iter_end_20668b96e:;
	};
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_280531_m, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_280617_model, &__jule_any_type102), });;
}



inline jule::Ptr<_221425c2c_Data> _221442b06_evalBraceLit(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211ae3de_BraceLit> _284936_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_206691c60:;
			{
				_221427ca6_pushErr(_self_.ptr(), _284936_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_2214574bc_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_206692117:;
			{
				return _2214427e8_evalMap(_self_, _2214574bc_Map(_self_.get()._field_prefix.ptr()), _284936_lit);;
			}
		}
		else if ((_221456ee4_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_206692216:;
			{
				return _2214394b0_evalStructLitExplicit(_self_, _221456ee4_Struct(_self_.get()._field_prefix.ptr()), _284936_lit.get()._field_Exprs, _284936_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_206691633:;
			{
				_221427ca6_pushErr(_self_.ptr(), _284936_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_206691567:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221442e14_evalAnonFn(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211b621a_FnDecl> _286434_decl) {
	_2214641dd_typeChecker _286517_tc = _2214641dd_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_2211dc97d_FnIns> _287017_ins = _22146aa30_buildFn(&_286517_tc, _286434_decl);;
	if ((_287017_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_206695c53:;
			{
				jule::Ptr<_22122ac63_scopeChecker> _287621_sc = _self_.get()._field_lookup.cast_ptr<_22122ac63_scopeChecker>(0);;
				jule::Ptr<_22122ac63_scopeChecker> _287721_scc = _22123ae1b_newChildChecker(_287621_sc);;
				_287721_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2212299cb_scopeLabel>>>(nullptr);
				_287721_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_221229e4e_scopeGoto>>>(nullptr);
				_287721_scc.get()._field_owner=nullptr;
				_287721_scc.get()._field_childIndex=0LL;
				_287721_scc.get()._field_it=0LLU;
				_287721_scc.get()._field_cse=0LLU;
				_287721_scc.get()._field_owner=_287017_ins;
				_22126609a_checkFnInsSc(_self_.get()._field_s.ptr(), &(_287017_ins), &(_287721_scc));
			}
		}
		else {
			_case_begin_206695a99:;
			{
				_22126663e_checkFnIns(_self_.get()._field_s, &(_287017_ins));
			}
		}
		_match_end_206695769:;
	};
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_287017_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_2211ce6a6_AnonFnExprModel>(_2211ce6a6_AnonFnExprModel{._field_Func=_287017_ins, ._field_Global=_221428955_isGlobal(_self_.ptr())}), &__jule_any_type103), });;
}



inline jule::Ptr<_221425c2c_Data> _221443222_evalBinop(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211ac684_BinopExpr> _289933_op) {
	_221446478_binaryEval _290017_bs = static__221446a50_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_22145a5be_Prim> _290317_prim = _221455a92_Prim(_self_.get()._field_prefix.ptr());;
		if (((_290317_prim == nullptr) || (!(_21e6c4e9a_IsNum(_22145a932_Str(_290317_prim.ptr())))))) {
			jule::Ptr<_221453397_TypeKind> _290525_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_290525_prefix;
			});;
			return _22144c00b_eval(&_290017_bs, &(_289933_op));;
		};
	};
	return _22144c00b_eval(&_290017_bs, &(_289933_op));;
}



inline jule::Ptr<_221425c2c_Data> _221443530_evalExprKind(jule::Ptr<_22142779a_Eval> _self_, jule::Any _291436_kind) {
	{
		auto &_match_expr{ _291436_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_20669a043:;
			{
				jule::Ptr<_2211a9098_RangeExpr> _291721_e = _291436_kind.cast_ptr<_2211a9098_RangeExpr>(&__jule_any_type104);;
				return _221443530_evalExprKind(_self_, _291721_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_20669cd37:;
			{
				return _22142a605_evalLit(_self_.ptr(), _291436_kind.cast_ptr<_2211a9ce1_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_20669cd9d:;
			{
				return _22142eab0_evalIdent(_self_.ptr(), _291436_kind.cast_ptr<_2211aa96d_IdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_20669c8b4:;
			{
				return _22142edbd_evalUnary(_self_, _291436_kind.cast_ptr<_2211ab177_UnaryExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_20669c92a:;
			{
				return _2214301cb_evalVariadic(_self_, _291436_kind.cast_ptr<_2211ab52e_VariadicExpr>(&__jule_any_type81));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_20669c9a2:;
			{
				return _2214304d9_evalUnsafe(_self_, _291436_kind.cast_ptr<_2211aa4ea_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_20669ca29:;
			{
				return _221431056_evalSliceExpr(_self_, _291436_kind.cast_ptr<_2211b039b_SliceExpr>(&__jule_any_type99));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_20669ce25:;
			{
				return _22143439a_evalIndexing(_self_, _291436_kind.cast_ptr<_2211b0c1a_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_20669ce9c:;
			{
				return _221435566_evalSlicing(_self_, _291436_kind.cast_ptr<_2211b1325_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_20669d024:;
			{
				return _221438c51_evalCast(_self_, _291436_kind.cast_ptr<_2211ab8d6_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_20669d09b:;
			{
				return _22143905e_evalNsSelection(_self_.ptr(), _291436_kind.cast_ptr<_2211abc8d_NsSelectionExpr>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_20669d123:;
			{
				return _2214397bd_evalStructLit(_self_, _291436_kind.cast_ptr<_2211ade6b_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_20669d19a:;
			{
				return _221439d40_evalType(_self_.ptr(), _291436_kind.cast_ptr<_2211a478b_TypeDecl>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_20669d222:;
			{
				return _22143b308_evalFnCall(_self_, _291436_kind.cast_ptr<_2211acc8e_FnCallExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_20669d299:;
			{
				return _221442133_evalSubIdent(_self_, _291436_kind.cast_ptr<_2211ac211_SubIdentExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_20669d321:;
			{
				return _221442441_evalTuple(_self_, _291436_kind.cast_ptr<_2211a9939_TupleExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_20669d398:;
			{
				return _221442b06_evalBraceLit(_self_, _291436_kind.cast_ptr<_2211ae3de_BraceLit>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_20669d420:;
			{
				return _221442e14_evalAnonFn(_self_, _291436_kind.cast_ptr<_2211b621a_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_20669d497:;
			{
				return _221443222_evalBinop(_self_, _291436_kind.cast_ptr<_2211ac684_BinopExpr>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_20669c760:;
			{
				return nullptr;;
			}
		}
		_match_end_20669c672:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22144383d_eval1(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211a8cac_Expr> _296229_expr) {
	jule::Ptr<_221425c2c_Data> _296317_d = _221443530_evalExprKind(_self_, _296229_expr.get()._field_Kind);;
	if (((_296317_d == nullptr) || (_296317_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_221456c80_Fn(_296317_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2066a7c32:;
			{
				jule::Ptr<_2211dc97d_FnIns> _297021_f = _221456c80_Fn(_296317_d.get()._field_Kind.ptr());;
				if (_2211ddd14_IsBuiltin(_297021_f.ptr())) {
					_22124d747_pushErr(_self_.get()._field_s.ptr(), _296229_expr.get()._field_Token, jule::Str("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_2066a7b00;
				};
				if ((_297021_f.get()._field_Generics.len() != _297021_f.get()._field_Decl.get()._field_Generics.len())) {
					_22124d747_pushErr(_self_.get()._field_s.ptr(), _296229_expr.get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!(_297021_f.get()._field_Decl.get()._field_Statically)) && _2211da4a3_IsMethod(_297021_f.get()._field_Decl.ptr()))) {
					_22124d747_pushErr(_self_.get()._field_s.ptr(), _296229_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_2066a7b00:;
	};
	return _296317_d;;
}



inline jule::Ptr<_221425c2c_Data> _221443b4b_eval(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211a8cac_Expr> _298928_expr) {
	jule::Ptr<_221425c2c_Data> _299017_d = _22144383d_eval1(_self_, _298928_expr);;
	if ((_299017_d == nullptr)) {
		return nullptr;;
	};
	if ((((_self_.get()._field_owner == nullptr) || (!(_self_.get()._field_owner.get()._field_Constant))) && _221457995_comptime(_299017_d.get()._field_Kind.ptr()))) {
		_22124d747_pushErr(_self_.get()._field_s.ptr(), _298928_expr.get()._field_Token, jule::Str("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _299017_d;;
}



inline jule::Ptr<_221425c2c_Data> _221443e59_evalExpr1(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211a8cac_Expr> _300433_expr) {
	jule::Ptr<_221425c2c_Data> _300517_d = _22144383d_eval1(_self_, _300433_expr);;
	{
		
		if ((_300517_d == nullptr)) {
			_case_begin_2066adc49:;
			{
				return nullptr;;
			}
		}
		else if (_300517_d.get()._field_Decl) {
			_case_begin_2066adcc1:;
			{
				_221427ca6_pushErr(_self_.ptr(), _300433_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_2066adb7d:;
			{
				return _300517_d;;
			}
		}
		_match_end_2066adb17:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221444267_evalExpr(jule::Ptr<_22142779a_Eval> _self_, jule::Ptr<_2211a8cac_Expr> _302032_expr) {
	jule::Ptr<_221425c2c_Data> _302117_d = _221443b4b_eval(_self_, _302032_expr);;
	{
		
		if ((_302117_d == nullptr)) {
			_case_begin_2066b0883:;
			{
				return nullptr;;
			}
		}
		else if (_302117_d.get()._field_Decl) {
			_case_begin_2066b090a:;
			{
				_221427ca6_pushErr(_self_.ptr(), _302032_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_2066b07b7:;
			{
				return _302117_d;;
			}
		}
		_match_end_2066b0751:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22142779a_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _2214446da_unaryEval static__221444b91_new(jule::Ptr<_22142779a_Eval> _304123_e) {
	return _2214446da_unaryEval{._field_e=_304123_e, };;
}



inline void _221444d6c_minus(_2214446da_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_2066b2335:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_221455a92_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2066b2005:;
			{
				if ((!(_21e6c4e9a_IsNum(_221453793_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_221456ee4_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2066b206b:;
			{
				if ((_221456ee4_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2066b1e8e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2066b1b81:;
	};
	if (_2214265e0_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_21e6c9a2c_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2066b5899:;
				{
					_21e6c8b3b_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_21e6c7684_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_21e6c907b_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2066b5921:;
				{
					_21e6c8146_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_21e6c6bd3_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_21e6c92e0_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2066b5998:;
				{
					_21e6c8146_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_21e6c78e8_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_2066b57ab:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_2211cc011_UnaryExprModel>(_2211cc011_UnaryExprModel{._field_Expr=jule::new_ptr<_221425c2c_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _221445048_plus(_2214446da_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_2066b9bde:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_221455a92_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2066b98ae:;
			{
				if ((!(_21e6c4e9a_IsNum(_221453793_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_221456ee4_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2066b9925:;
			{
				if ((_221456ee4_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2066b9848:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2066b977c:;
	};
	if (_2214265e0_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_21e6c9a2c_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2066bd253:;
				{
					_21e6c8b3b_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_21e6c7684_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_21e6c907b_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2066bd2ca:;
				{
					_21e6c8146_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_21e6c6bd3_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_21e6c92e0_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2066bd352:;
				{
					_21e6c8146_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_21e6c78e8_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_2066bd165:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_2211cc011_UnaryExprModel>(_2211cc011_UnaryExprModel{._field_Expr=jule::new_ptr<_221425c2c_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _221445224_caret(_2214446da_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_2066c2576:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_221455a92_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2066c2246:;
			{
				if ((!(_21e6c48d4_IsInt(_221453793_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_221456ee4_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2066c22ac:;
			{
				if ((_221456ee4_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2066c21d0:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2066c2114:;
	};
	if (_2214265e0_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_21e6c907b_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2066c5ac9:;
				{
					_21e6c8146_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_21e6c6bd3_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_21e6c92e0_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2066c5b51:;
				{
					_21e6c83bb_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_21e6c6e47_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_2066c59ec:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_2211cc011_UnaryExprModel>(_2211cc011_UnaryExprModel{._field_Expr=jule::new_ptr<_221425c2c_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _221445400_excl(_2214446da_unaryEval* _self_) {
	jule::Ptr<_22145a5be_Prim> _316013_t = _221455a92_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_316013_t == nullptr) || (!(_22145d58e_IsBool(_316013_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	if (_2214265e0_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_21e6c9554_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2066ca2d7:;
				{
					_21e6c8641_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_21e6c71ab_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_2066ca1d8:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_2211cc011_UnaryExprModel>(_2211cc011_UnaryExprModel{._field_Expr=jule::new_ptr<_221425c2c_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _2214455cb_star(_2214446da_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_2211cc011_UnaryExprModel>(_2211cc011_UnaryExprModel{._field_Expr=jule::new_ptr<_221425c2c_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_22145606a_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2066cd0dc:;
			{
				if ((!(_2214286e1_isUnsafe((*(_self_))._field_e.ptr())))) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_2214623b7_Ptr> _319221_t = _22145606a_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_221462d8a_IsUnsafe(_319221_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_319221_t.get()._field_Elem;
			}
		}
		else if ((_221455d06_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2066cccac:;
			{
				(*(_self_))._field_d.get()._field_Kind=_221455d06_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_2066ccc46:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2066ccbd0:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _2214457a7_amper(_2214446da_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_2066d2872:;
			{
				jule::Ptr<_2211cc7b4_StructLitExprModel> _321221_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_2211cc7b4_StructLitExprModel>(&__jule_any_type100);;
				_22144cc98_makeStructLitAlloc(&((*(_self_))._field_d), &(_321221_lit));
			}
		}
		else {
			_case_begin_2066d2267:;
			{
				{
					
					if (_22146cba8_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_2066d2db1:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_2214623b7_Ptr>(_2214623b7_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 24)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_2211cc011_UnaryExprModel>(_2211cc011_UnaryExprModel{._field_Expr=jule::new_ptr<_221425c2c_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_2066d280b:;
						{
							(*(_self_))._field_d=nullptr;
						}
					}
					_match_end_2066d2740:;
				};
			}
		}
		_match_end_2066d21e0:;
	};
	if (((*(_self_))._field_d != nullptr)) {
		(*(_self_))._field_d.get()._field_Constant=nullptr;
		(*(_self_))._field_d.get()._field_Lvalue=false;
	};
}



inline void _221445983_typeDecl(_2214446da_unaryEval* _self_) {
	_2214641dd_typeChecker _323617_tc = _2214641dd_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2066d5db4:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_2214693be_buildPtrFromType(&_323617_tc, &((*(_self_))._field_d.get()._field_Kind)), 24)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2066d83e4:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_221468ca3_buildSptrFromType(&_323617_tc, &((*(_self_))._field_d.get()._field_Kind)), 19)});
			}
		}
		else {
			_case_begin_2066d6d60:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2066d6d0a:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _221445b5e_evalData(_2214446da_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_2066da748:;
			{
				jule::Ptr<_221453397_TypeKind> _325921_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_221444267_evalExpr((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
				(*(_self_))._field_e.get()._field_prefix=_325921_prefix;
			}
		}
		else {
			_case_begin_2066da319:;
			{
				(*(_self_))._field_d=_221444267_evalExpr((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
			}
		}
		_match_end_2066da2b4:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221445e39_eval(_2214446da_unaryEval* _self_, jule::Ptr<_2211ab177_UnaryExpr> _326827_u) {
	(*(_self_))._field_u=_326827_u;
	_221445b5e_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_221445983_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_221453397_TypeKind> _327913_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_2066de5d7:;
			{
				_221444d6c_minus(_self_);
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2066de0cb:;
			{
				_221445048_plus(_self_);
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_2066de142:;
			{
				_221445224_caret(_self_);
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_2066de1a8:;
			{
				_221445400_excl(_self_);
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2066de21e:;
			{
				_2214455cb_star(_self_);
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2066de780:;
			{
				_2214457a7_amper(_self_);
			}
		}
		else {
			_case_begin_2066de065:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_2066de010:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_2066de7e6:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str(_327913_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_2214265e0_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_2066e1562:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_2066e1298:;
	};
	(*(_self_))._field_d.get()._field_Mutable=true;
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _2214446da_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _221446478_binaryEval static__221446a50_newPlain(jule::Ptr<_22142779a_Eval> _331728_e) {
	return _221446478_binaryEval{._field_e=_331728_e, };;
}



inline _221446478_binaryEval static__221446d91_new(jule::Ptr<_22142779a_Eval> _332323_e, jule::Ptr<_21da1aa0b_Token> _332337_op) {
	return _221446478_binaryEval{._field_e=_332323_e, ._field_op=_332337_op};;
}



inline jule::Bool _221447105_checkTypeCompatibility(_221446478_binaryEval* _self_) {
	return _221255e36_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _22144739c_checkStructCommonOperatorCompatibility(_221446478_binaryEval* _self_) {
	jule::Ptr<_2211dc97d_FnIns> _333717_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_2066e5423:;
			{
				_333717_overload=_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_2066e6952:;
			{
				_333717_overload=_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2066e58da:;
			{
				_333717_overload=_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_2066e5951:;
			{
				_333717_overload=_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_2066e59b7:;
			{
				_333717_overload=_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2066e5a2d:;
			{
				_333717_overload=_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2066e6b61:;
			{
				_333717_overload=_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2066e6bc7:;
			{
				_333717_overload=_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_2066e6c3d:;
			{
				_333717_overload=_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_2066e6ca4:;
			{
				_333717_overload=_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_2066e5874:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_2066e57ec:;
	};
	if ((_333717_overload == nullptr)) {
		_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_2211dbaae_ParamIns> _336917_p = _333717_overload.get()._field_Params[1LL];;
	return _2212559d5_checkAssignType((*(_self_))._field_e.get()._field_s, _336917_p.get()._field_Decl.get()._field_Reference, &(_336917_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_221425c2c_Data> _221447644_evalComptimeTypeInfo(_221446478_binaryEval* _self_) {
	jule::Ptr<_221211c7c_comptimeTypeInfo> _337417_r = _22145915b_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((_337417_r == nullptr)) {
		_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("comptimeTypeInfo", 16), &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_221211c7c_comptimeTypeInfo> _337917_l = _22145915b_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_206637695:;
			{
				jule::Ptr<_21e6c53da_Const> _338221_constant = static__21e6c5d9c_NewBool(_221453aa1_Equal(_337917_l.get()._field_base, _337417_r.get()._field_base));;
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_338221_constant, &__jule_any_type19), ._field_Constant=_338221_constant});;
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_206702562:;
			{
				jule::Ptr<_21e6c53da_Const> _339121_constant = static__21e6c5d9c_NewBool((!(_221453aa1_Equal(_337917_l.get()._field_base, _337417_r.get()._field_base))));;
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), ._field_Model=jule::Any(_339121_constant, &__jule_any_type19), ._field_Constant=_339121_constant});;
			}
		}
		else {
			_case_begin_206701473:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2067013c9:;
	};
}



inline jule::Ptr<_221425c2c_Data> _2214478a8_evalNil(_221446478_binaryEval* _self_) {
	if ((!(_2214550e1_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_203dc9852:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else {
			_case_begin_203dca9a7:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_203dca90d:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221447b1c_evalEnum(_221446478_binaryEval* _self_) {
	jule::Ptr<_2211ee781_Enum> _342617_enm = _2214562ce_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_203dcca20:;
			{
				jule::Ptr<_221453397_TypeKind> _343021_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_2214562ce_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_343021_rkind=_2214562ce_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_221255e36_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_342617_enm.get()._field_Kind.get()._field_Kind), &(_343021_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		_match_end_203dcc9ba:;
	};
	if (((_2214562ce_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_342617_enm != _2214562ce_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_342617_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_203dcc37c:;
			{
				if ((!(_21e6c4e9a_IsNum(_221453793_Str(_342617_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_342617_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_203dd2a7a:;
			{
				jule::Ptr<_2211edc8b_EnumItem> _346417_first = _342617_enm.get()._field_Items[0LL];;
				{
					
					if (_21e6c907b_IsI64(_346417_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_203dd56e8:;
						{
							if ((_21e6c6bd3_ReadI64(_346417_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else if (_21e6c92e0_IsU64(_346417_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_203dd4c25:;
						{
							if ((_21e6c6e47_ReadU64(_346417_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else {
						_case_begin_203dd5352:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3477:17"));;
						}
					}
					_match_end_203dd52db:;
				};
				_julec_label_err:;
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any(_342617_enm.get()._field_Ident, &__jule_any_type5),jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				_2214280c5_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_next:;
				goto _case_begin_203dd2ae1;
			}
		}
		else if (_match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_203dd2ae1:;
			{
				if (((_221455a92_Prim(_342617_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_21e6c48d4_IsInt(_22145a932_Str(_221455a92_Prim(_342617_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_342617_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_203dd1b78:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_342617_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_203dd1a8a:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221447d81_evalTypeEnum(_221446478_binaryEval* _self_) {
	jule::Ptr<_221200d7b_TypeEnum> _349717_enm = _221456543_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_221447105_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_203ddc9ca:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else {
			_case_begin_203ddc58a:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2212011ab_Str(_349717_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_203ddc25a:;
	};
}



inline jule::Ptr<_221425c2c_Data> _2214480e5_evalSptr(_221446478_binaryEval* _self_) {
	if ((!(_221447105_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_206792c2e:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else {
			_case_begin_206792de9:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_206792d94:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221448359_evalPtr(_221446478_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_2067949cd:;
			{
				if ((!(_221447105_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_206796617:;
			{
				if ((_22145606a_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_221425c2c_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_221425c2c_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_221462d8a_IsUnsafe(_22145606a_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_22144dddc_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_206794e73:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_206795517:;
	};
}



inline jule::Ptr<_221425c2c_Data> _2214485bd_evalArr(_221446478_binaryEval* _self_) {
	if ((!(_221447105_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_20679b3a8:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else {
			_case_begin_20679b485:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_206796e75:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221448832_evalSlc(_221446478_binaryEval* _self_) {
	if ((!(_221447105_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_20679b6d8:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else {
			_case_begin_20679ca80:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20679ca2a:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221448a96_evalStruct(_221446478_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_20679eb70:;
			{
				if ((_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_20679ebd6:;
			{
				if ((_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_2067a0302:;
			{
				if ((_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_2067a0368:;
			{
				if ((_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2067a03ce:;
			{
				if ((!(_221447105_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		_match_end_2067a019d:;
	};
	if ((!(_22144739c_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_221425c2c_Data> _221448d0a_evalTrait(_221446478_binaryEval* _self_) {
	if ((!(_221447105_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2067a8e65:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else {
			_case_begin_2067a9086:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2067a8cab:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22144906e_evalAny(_221446478_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2067aa186:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else {
			_case_begin_2067aa62b:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2067aabc0:;
	};
}



inline jule::Ptr<_221425c2c_Data> _2214492d3_evalBool(_221446478_binaryEval* _self_) {
	if ((!(_221447105_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_2067ac8c5:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_2067ac012:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2067abeac:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221449547_evalStr(_221446478_binaryEval* _self_) {
	jule::Str _372017_rk = _221453793_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((!_372017_rk.equal("str", 3))) {
		_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_372017_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2067b16ba:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_2067b17a8:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		else {
			_case_begin_2067ae399:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2067aec29:;
	};
}



inline void _221449723_setTypeToGreater(_221446478_binaryEval* _self_) {
	jule::Ptr<_22145a5be_Prim> _374713_lp = _221455a92_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_22145a5be_Prim> _374813_rp = _221455a92_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_2214265e0_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_2214265e0_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_374813_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_2214265e0_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_374713_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_2214265e0_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_374813_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_21e6c331c_IsGreater(_374813_rp.get()._field_Kind, _374713_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_2214265e0_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_374813_rp.get()._field_Kind;
		};
	};
}



inline void _221449965_checkModData(_221446478_binaryEval* _self_, jule::Ptr<_221425c2c_Data>* _378036_d) {
	if ((!(_2214265e0_IsConst((*(_378036_d)).ptr())))) {
		if (((_221455a92_Prim((*(_378036_d)).get()._field_Kind.ptr()) == nullptr) || (!(_21e6c48d4_IsInt(_221455a92_Prim((*(_378036_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_22140dd47_sigAssignable(jule::Str("i64", 3), _378036_d)) {
			_case_begin_2067bad89:;
			{
				_21e6c8146_SetI64((*(_378036_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_21e6c78e8_AsI64((*(_378036_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_22140e1cc_unsigAssignable(jule::Str("u64", 3), _378036_d)) {
			_case_begin_2067baa6a:;
			{
				_21e6c83bb_SetU64((*(_378036_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_21e6c7b5c_AsU64((*(_378036_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_2067baa04:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_2067b9508:;
	};
}



inline void _221449b41_mod(_221446478_binaryEval* _self_) {
	_221449965_checkModData(_self_, &((*(_self_))._field_l));
	_221449965_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _221449ee8_numbersAreCompatibile(_221446478_binaryEval* _self_, jule::Str* _380237_lk, jule::Str* _380247_rk) {
	if ((!(_21e6c4e9a_IsNum((*(_380247_rk)))))) {
		return false;;
	};
	if ((_2214265e0_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((*(_380237_lk)).equal("f32", 3)) {
		if ((_2214265e0_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_380247_rk)).equal("f32", 3);;
	};
	if ((*(_380237_lk)).equal("f64", 3)) {
		if ((_2214265e0_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_380247_rk)).equal("f64", 3);;
	};
	if ((_2214265e0_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_380237_lk)) == (*(_380247_rk)));;
}



inline jule::Ptr<_221425c2c_Data> _22144a25c_evalFloat(_221446478_binaryEval* _self_) {
	jule::Str _382813_lk = _221455a92_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _382913_rk = _221455a92_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_221449ee8_numbersAreCompatibile(_self_, &(_382813_lk), &(_382913_rk))))) {
		_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_382813_lk, &__jule_any_type5),jule::Any(_382913_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_2067c3974:;
			{
				if (((!(_2214265e0_IsConst((*(_self_))._field_l.ptr()))) || (!(_22140e51d_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_382813_lk, &__jule_any_type5),jule::Any(_382913_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_2214265e0_IsConst((*(_self_))._field_r.ptr()))) || (!(_22140e51d_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_382813_lk, &__jule_any_type5),jule::Any(_382913_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_21e6c8146_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_21e6c78e8_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_21e6c83bb_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_21e6c7b5c_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_22144d6c2_isOkForShifting(&((*(_self_))._field_r))))) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_2067c2e3a:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_2067c8061:;
			{
				_221449723_setTypeToGreater(_self_);
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		_match_end_2067c800b:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_2067c2c3c:;
			{
				_221449723_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2067ca096:;
			{
				if ((!(_21e6c48d4_IsInt(_382913_rk)))) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_382813_lk, &__jule_any_type5),jule::Any(_382913_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_221449b41_mod(_self_);
				_221449723_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_2067c8b44:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2067c956d:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22144a4c1_evalInt(_221446478_binaryEval* _self_) {
	jule::Str _389413_lk = _221455a92_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _389513_rk = _221455a92_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_2067c9e42:;
			{
				if (((!(_21e6c48d4_IsInt(_389413_lk))) || (!(_21e6c48d4_IsInt(_389513_rk))))) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_389413_lk, &__jule_any_type5),jule::Any(_389513_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_22144d6c2_isOkForShifting(&((*(_self_))._field_r))))) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_2067cce12:;
	};
	if ((!(_221449ee8_numbersAreCompatibile(_self_, &(_389413_lk), &(_389513_rk))))) {
		_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_389413_lk, &__jule_any_type5),jule::Any(_389513_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_2067d0b07:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("bool", 4)), 18)}), });;
			}
		}
		_match_end_2067d0233:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_2067cd044:;
			{
				_221449723_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2067d28a6:;
			{
				_221449b41_mod(_self_);
				_221449723_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_2067d18c7:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2067d17d9:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22144a735_evalPrim(_221446478_binaryEval* _self_) {
	jule::Ptr<_22145a5be_Prim> _395313_prim = _221455a92_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_22145d58e_IsBool(_395313_prim.ptr())) {
			_case_begin_2067d47ba:;
			{
				return _2214492d3_evalBool(_self_);;
			}
		}
		else if (_22145d803_IsStr(_395313_prim.ptr())) {
			_case_begin_2067d4842:;
			{
				return _221449547_evalStr(_self_);;
			}
		}
		_match_end_2067d4710:;
	};
	if ((_221455a92_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_22145a932_Str(_395313_prim.ptr()), &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_21e6c4c03_IsFloat(_395313_prim.get()._field_Kind)) {
			_case_begin_2067d6e82:;
			{
				return _22144a25c_evalFloat(_self_);;
			}
		}
		else if (_21e6c48d4_IsInt(_395313_prim.get()._field_Kind)) {
			_case_begin_2067d6855:;
			{
				return _22144a4c1_evalInt(_self_);;
			}
		}
		else {
			_case_begin_2067d67de:;
			{
				return nullptr;;
			}
		}
		_match_end_2067d4db4:;
	};
}



inline void _22144a911_checkSpecialCases(_221446478_binaryEval* _self_) {
	if (((!(_2214548a4_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_2214543cb_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_2214548a4_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_2214543cb_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_221425c2c_Data> _22144ab75_evalOp(_221446478_binaryEval* _self_) {
	_22144a911_checkSpecialCases(_self_);
	{
		
		if (_221454640_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_2067dacaa:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if ((_22145915b_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067da5e5:;
			{
				({
					jule::Ptr<_221425c2c_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_221425c2c_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2067dbc23;
			}
		}
		else if ((_22145915b_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dbc23:;
			{
				return _221447644_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_221455a92_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _22145da67_IsAny(_221455a92_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2067dbd11:;
			{
				({
					jule::Ptr<_221425c2c_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_221425c2c_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2067dbdcc;
			}
		}
		else if (_2214543cb_IsNil((*(_self_))._field_r.get()._field_Kind.ptr())) {
			_case_begin_2067dbdcc:;
			{
				({
					jule::Ptr<_221425c2c_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_221425c2c_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2067dbe43;
			}
		}
		else if (_2214543cb_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_2067dbe43:;
			{
				return _2214478a8_evalNil(_self_);;
			}
		}
		else if (((_221455a92_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _22145da67_IsAny(_221455a92_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2067dbea9:;
			{
				return _22144906e_evalAny(_self_);;
			}
		}
		else if ((_221456543_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc020:;
			{
				({
					jule::Ptr<_221425c2c_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_221425c2c_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2067dc086;
			}
		}
		else if ((_221456543_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc086:;
			{
				return _221447d81_evalTypeEnum(_self_);;
			}
		}
		else if ((_2214562ce_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc0ec:;
			{
				({
					jule::Ptr<_221425c2c_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_221425c2c_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2067dc163;
			}
		}
		else if ((_2214562ce_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc163:;
			{
				return _221447b1c_evalEnum(_self_);;
			}
		}
		else if ((_221455d06_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc1c9:;
			{
				({
					jule::Ptr<_221425c2c_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_221425c2c_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2067dc240;
			}
		}
		else if ((_221455d06_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc240:;
			{
				return _2214480e5_evalSptr(_self_);;
			}
		}
		else if ((_22145606a_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc2a6:;
			{
				({
					jule::Ptr<_221425c2c_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_221425c2c_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2067dc31c;
			}
		}
		else if ((_22145606a_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc31c:;
			{
				return _221448359_evalPtr(_self_);;
			}
		}
		else if ((_2214567a7_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc383:;
			{
				return _2214485bd_evalArr(_self_);;
			}
		}
		else if ((_221456a1b_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc3e9:;
			{
				return _221448832_evalSlc(_self_);;
			}
		}
		else if ((_221457258_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc460:;
			{
				({
					jule::Ptr<_221425c2c_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_221425c2c_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2067dc4c6;
			}
		}
		else if ((_221457258_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc4c6:;
			{
				return _221448d0a_evalTrait(_self_);;
			}
		}
		else if ((_221456ee4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc53c:;
			{
				return _221448a96_evalStruct(_self_);;
			}
		}
		else if ((_221455a92_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2067dc5a3:;
			{
				return _22144a735_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_2067daaac:;
			{
				_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_221453793_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2067daa46:;
	};
}



inline void _22144adea_evalConst(_221446478_binaryEval* _self_, jule::Ptr<_221425c2c_Data>* _404433_d) {
	{
		
		if (((*(_404433_d)) == nullptr) || ((*(_self_))._field_l.get()._field_Model == nullptr) || ((*(_self_))._field_r.get()._field_Model == nullptr)) {
			_case_begin_2067ed152:;
			{
				return;;
			}
		}
		else if ((!(_2214265e0_IsConst((*(_self_))._field_l.ptr()))) || (!(_2214265e0_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_2067ed1b8:;
			{
				(*(_404433_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_2067ec9c0:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_2068000aa:;
			{
				(*(_404433_d)).get()._field_Constant=static__21e6c5d9c_NewBool(_21e6ca9c8_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_206800121:;
			{
				(*(_404433_d)).get()._field_Constant=static__21e6c5d9c_NewBool((!(_21e6ca9c8_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_206800187:;
			{
				(*(_404433_d)).get()._field_Constant=static__21e6c5d9c_NewBool(_21e6ca6ba_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_2068001ed:;
			{
				(*(_404433_d)).get()._field_Constant=static__21e6c5d9c_NewBool(_21e6ca3ac_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_206800264:;
			{
				(*(_404433_d)).get()._field_Constant=static__21e6c5d9c_NewBool(_21e6cb402_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_2068002ca:;
			{
				(*(_404433_d)).get()._field_Constant=static__21e6c5d9c_NewBool(_21e6cacd6_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_206800341:;
			{
				(*(_404433_d)).get()._field_Constant=static__21e6c5d9c_NewBool(_21e6cb710_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_2068003a7:;
			{
				(*(_404433_d)).get()._field_Constant=static__21e6c5d9c_NewBool(_21e6cb0e4_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_20680041d:;
			{
				_21e6cba1d_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_206800484:;
			{
				_21e6cbd2b_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2068004ea:;
			{
				_21e6cc139_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_206800561:;
			{
				jule::Bool _408317_ok = _21e6cc447_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_408317_ok)) && (_21e6c7dc1_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_404433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_22145a5be_Prim> _408821_prim = _221455a92_Prim((*(_404433_d)).get()._field_Kind.ptr());;
				{
					
					if (_21e6c4351_IsSigInt(_408821_prim.get()._field_Kind)) {
						_case_begin_20680bb33:;
						{
							_21e6c8146_SetI64((*(_404433_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_21e6c78e8_AsI64((*(_404433_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_21e6c463c_IsUnsigInt(_408821_prim.get()._field_Kind)) {
						_case_begin_20680bbaa:;
						{
							_21e6c83bb_SetU64((*(_404433_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_21e6c7b5c_AsU64((*(_404433_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_20680ba78:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2068005d8:;
			{
				jule::Bool _409617_ok = _21e6cc755_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_409617_ok)) && (_21e6c7dc1_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_404433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_206800660:;
			{
				_21e6ccd71_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2068006d7:;
			{
				_21e6cca63_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_20680075e:;
			{
				_21e6cd17e_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_2068007d6:;
			{
				_21e6cd48c_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_20680085d:;
			{
				_21e6cd79a_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_2067ee86d:;
	};
	(*(_404433_d)).get()._field_Model=jule::Any((*(_404433_d)).get()._field_Constant, &__jule_any_type19);
	_22144eb68_applyCastModelByEnum(_404433_d, _2214562ce_Enum((*(_404433_d)).get()._field_Kind.ptr()));
}



inline void _22144b170_checkData(_221446478_binaryEval* _self_, jule::Ptr<_221425c2c_Data>* _412133_d) {
	jule::Ptr<_2211dc97d_FnIns> _412213_f = _221456c80_Fn((*(_412133_d)).get()._field_Kind.ptr());;
	if ((((_412213_f != nullptr) && (_412213_f.get()._field_Decl != nullptr)) && _2211da4a3_IsMethod(_412213_f.get()._field_Decl.ptr()))) {
		_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _22144b34b_checkDatas(_221446478_binaryEval* _self_) {
	_22144b170_checkData(_self_, &((*(_self_))._field_l));
	_22144b170_checkData(_self_, &((*(_self_))._field_r));
}



inline void _22144b5c1_setModel(_221446478_binaryEval* _self_, jule::Ptr<_221425c2c_Data>* _413332_d) {
	if (_2214265e0_IsConst((*(_413332_d)).ptr())) {
		if (((_2214265e0_IsConst((*(_self_))._field_l.ptr()) && _2214265e0_IsConst((*(_self_))._field_r.ptr())) || (((*(_self_))._field_l.get()._field_Model == nullptr) && ((*(_self_))._field_r.get()._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_221425c2c_Data> _414218_l;;
	jule::Ptr<_221425c2c_Data> _414225_r;;
	({
		jule::Ptr<_221425c2c_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_221425c2c_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_414218_l = ___jule_assign_arg;
		_414225_r = _1___jule_assign_arg;
	});
	if ((!(_2214268ed_GoodOperand(_414218_l.ptr(), &(_414225_r))))) {
		({
			jule::Ptr<_221425c2c_Data> ___jule_assign_arg = _414225_r;
			jule::Ptr<_221425c2c_Data> _1___jule_assign_arg = _414218_l;
			_414218_l = ___jule_assign_arg;
			_414225_r = _1___jule_assign_arg;
		});
	};
	(*(_413332_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211cbb59_BinopExprModel>(_2211cbb59_BinopExprModel{._field_Left=jule::new_ptr<_2211cb692_OperandExprModel>(_2211cb692_OperandExprModel{._field_Kind=_414218_l.get()._field_Kind, ._field_Model=_414218_l.get()._field_Model}), ._field_Right=jule::new_ptr<_2211cb692_OperandExprModel>(_2211cb692_OperandExprModel{._field_Kind=_414225_r.get()._field_Kind, ._field_Model=_414225_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _22144b846_postEval(_221446478_binaryEval* _self_, jule::Ptr<_221425c2c_Data>* _416032_d) {
	(*(_416032_d)).get()._field_Lvalue=false;
	_22144b5c1_setModel(_self_, _416032_d);
}



inline jule::Ptr<_221425c2c_Data> _22144bbed_solveExplicit(_221446478_binaryEval* _self_, jule::Ptr<_221425c2c_Data>* _416537_l, jule::Ptr<_221425c2c_Data>* _416552_r) {
	({
		jule::Ptr<_221425c2c_Data> ___jule_assign_arg = (*(_416537_l));
		jule::Ptr<_221425c2c_Data> _1___jule_assign_arg = (*(_416552_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_22144b34b_checkDatas(_self_);
	jule::Ptr<_221425c2c_Data> _417017_d = _22144ab75_evalOp(_self_);;
	({
		jule::Ptr<_221425c2c_Data> ___jule_assign_arg = (*(_416537_l));
		jule::Ptr<_221425c2c_Data> _1___jule_assign_arg = (*(_416552_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_22144adea_evalConst(_self_, &(_417017_d));
	if ((_417017_d != nullptr)) {
		_417017_d.get()._field_Mutable=true;
		_22144b846_postEval(_self_, &(_417017_d));
	};
	return _417017_d;;
}



inline jule::Ptr<_221425c2c_Data> _22144c00b_eval(_221446478_binaryEval* _self_, jule::Ptr<_2211ac684_BinopExpr>* _418528_op) {
	if ((*(_418528_op)).get()._field_Op.get()._field_Kind.equal("=", 1)) {
		_221427ca6_pushErr((*(_self_))._field_e.ptr(), (*(_418528_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_2214280c5_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_221425c2c_Data> _419217_l = _221443e59_evalExpr1((*(_self_))._field_e, (*(_418528_op)).get()._field_Left);;
	if (((_419217_l == nullptr) || (_419217_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_221453397_TypeKind> _419717_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_419217_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_419717_prefix;
	});;
	jule::Ptr<_221425c2c_Data> _420017_r = _221443e59_evalExpr1((*(_self_))._field_e, (*(_418528_op)).get()._field_Right);;
	if (((_420017_r == nullptr) || (_420017_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_418528_op)).get()._field_Op;
	jule::Ptr<_221425c2c_Data> _420717_d = _22144bbed_solveExplicit(_self_, &(_419217_l), &(_420017_r));;
	if ((((_420717_d != nullptr) && _419217_l.get()._field_IsRune) && _420017_r.get()._field_IsRune)) {
		_420717_d.get()._field_IsRune=true;
	};
	return _420717_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _221446478_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221451b15_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22145264e_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _221453793_Str(_221453397_TypeKind* _self_) {
	if (_2214543cb_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*(_self_))._field_Variadic) {
		(_7417_kind).append("...", 3);
	};
	if (_221454167_CppLinked(_self_)) {
		(_7417_kind).append("cpp.", 4);
		_7417_kind+=(*(_self_))._field_CppIdent;
	} else {
		_7417_kind+=_221452e35_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._2214529d4_Str((*(_self_))._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _221453aa1_Equal(jule::Ptr<_221453397_TypeKind> _self_, jule::Ptr<_221453397_TypeKind> _9021_other) {
	if (_2214543cb_IsNil(_self_.ptr())) {
		return _2214543cb_IsNil(_9021_other.ptr());;
	};
	if (_221454167_CppLinked(_self_.ptr())) {
		return (_221454167_CppLinked(_9021_other.ptr()) && (_self_.get()._field_CppIdent == _9021_other.get()._field_CppIdent));;
	};
	return _221452e35_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._221452ce2_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _221454167_CppLinked(_221453397_TypeKind* _self_) {
	return ((*(_self_))._field_CppIdent.len() != 0LL);;
}



inline jule::Bool _2214543cb_IsNil(_221453397_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _221454640_Void(_221453397_TypeKind* _self_) {
	jule::Ptr<_22145a5be_Prim> _11113_prim = _221455a92_Prim(_self_);;
	return ((_11113_prim != nullptr) && _11113_prim.get()._field_Kind.equal("void", 4));;
}



inline jule::Bool _2214548a4_Comparable(_221453397_TypeKind* _self_) {
	{
		_221453397_TypeKind* _11821__self = (&((*(_self_))));;
		if ((_221456ee4_Struct(_11821__self) != nullptr)) {
			return _221456ee4_Struct(_11821__self).get()._field_Comparable;;
		};
		return (((_2214574bc_Map(_11821__self) == nullptr) && (_221456a1b_Slc(_11821__self) == nullptr)) && (_221456c80_Fn(_11821__self) == nullptr));;
	};
}



inline jule::Bool _221454b18_Mutable(_221453397_TypeKind* _self_) {
	{
		_221453397_TypeKind* _12921__self = (&((*(_self_))));;
		if ((_221456ee4_Struct(_12921__self) != nullptr)) {
			return _221456ee4_Struct(_12921__self).get()._field_Mutable;;
		};
		if ((_221457258_Trait(_12921__self) != nullptr)) {
			return _221457258_Trait(_12921__self).get()._field_Mutable;;
		};
		if ((_221455a92_Prim(_12921__self) != nullptr)) {
			jule::Ptr<_22145a5be_Prim> _13721_p = _221455a92_Prim(_12921__self);;
			return _22145da67_IsAny(_13721_p.ptr());;
		};
		if ((_2214567a7_Arr(_12921__self) != nullptr)) {
			return _221454b18_Mutable(_2214567a7_Arr(_12921__self).get()._field_Elem.ptr());;
		};
		return (((_221456a1b_Slc(_12921__self) != nullptr) || (_22145606a_Ptr(_12921__self) != nullptr)) || (_221455d06_Sptr(_12921__self) != nullptr));;
	};
}



inline jule::Bool _221454d7c_Ordered(_221453397_TypeKind* _self_) {
	{
		_221453397_TypeKind* _15221__self = (&((*(_self_))));;
		jule::Ptr<_22145a5be_Prim> _15317_prim = _221455a92_Prim(_15221__self);;
		if ((_15317_prim != nullptr)) {
			return (_21e6c4e9a_IsNum(_15317_prim.get()._field_Kind) || _22145d803_IsStr(_15317_prim.ptr()));;
		};
		if ((_22145606a_Ptr(_15221__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_2211c76e3_StructIns> _16017_s = _221456ee4_Struct(_15221__self);;
		if ((_16017_s != nullptr)) {
			return ((((_16017_s.get()._field_Operators._field_Gt != nullptr) && (_16017_s.get()._field_Operators._field_GtEq != nullptr)) && (_16017_s.get()._field_Operators._field_Lt != nullptr)) && (_16017_s.get()._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_2211ee781_Enum> _16717_enm = _2214562ce_Enum(_15221__self);;
		if ((_16717_enm != nullptr)) {
			return _21e6c4e9a_IsNum(_221453793_Str(_16717_enm.get()._field_Kind.get()._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _2214550e1_NilCompatible(_221453397_TypeKind* _self_) {
	{
		_221453397_TypeKind* _17821__self = (&((*(_self_))));;
		jule::Ptr<_22145a5be_Prim> _18017_prim = _221455a92_Prim(_17821__self);;
		if (((_18017_prim != nullptr) && _22145da67_IsAny(_18017_prim.ptr()))) {
			return true;;
		};
		return (((((((_2214543cb_IsNil(_17821__self) || (_221456c80_Fn(_17821__self) != nullptr)) || (_221455d06_Sptr(_17821__self) != nullptr)) || (_22145606a_Ptr(_17821__self) != nullptr)) || (_221457258_Trait(_17821__self) != nullptr)) || (_221456a1b_Slc(_17821__self) != nullptr)) || (_2214574bc_Map(_17821__self) != nullptr)) || (_221456543_TypeEnum(_17821__self) != nullptr));;
	};
}



inline jule::Bool _221455355_PerformsRC(_221453397_TypeKind* _self_) {
	{
		_221453397_TypeKind* _19921__self = (&((*(_self_))));;
		jule::Ptr<_22145a5be_Prim> _20017_prim = _221455a92_Prim(_19921__self);;
		if ((_20017_prim != nullptr)) {
			return _22145da67_IsAny(_20017_prim.ptr());;
		};
		return (((_221455d06_Sptr(_19921__self) != nullptr) || (_221456a1b_Slc(_19921__self) != nullptr)) || (_221457258_Trait(_19921__self) != nullptr));;
	};
}



inline jule::Bool _2214555b9_SupportsCloning(_221453397_TypeKind* _self_) {
	{
		_221453397_TypeKind* _21121__self = (&((*(_self_))));;
		{
			
			if ((_221455a92_Prim(_21121__self) != nullptr)) {
				_case_begin_206850171:;
				{
					return (!(_22145da67_IsAny(_221455a92_Prim(_21121__self).ptr())));;
				}
			}
			else if ((_2214562ce_Enum(_21121__self) != nullptr)) {
				_case_begin_2068521d9:;
				{
					return true;;
				}
			}
			else if ((_221456c80_Fn(_21121__self) != nullptr)) {
				_case_begin_206852250:;
				{
					return true;;
				}
			}
			else if ((_22145606a_Ptr(_21121__self) != nullptr)) {
				_case_begin_2068522b6:;
				{
					return true;;
				}
			}
			else if ((_221456a1b_Slc(_21121__self) != nullptr)) {
				_case_begin_206851d10:;
				{
					return _2214555b9_SupportsCloning(_221456a1b_Slc(_21121__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_2214574bc_Map(_21121__self) != nullptr)) {
				_case_begin_206851d76:;
				{
					jule::Ptr<_221460d66_Map> _22421_m = _2214574bc_Map(_21121__self);;
					return (_2214555b9_SupportsCloning(_22421_m.get()._field_Key.ptr()) && _2214555b9_SupportsCloning(_22421_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_2214567a7_Arr(_21121__self) != nullptr)) {
				_case_begin_206851ddc:;
				{
					return _2214555b9_SupportsCloning(_2214567a7_Arr(_21121__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_221455d06_Sptr(_21121__self) != nullptr)) {
				_case_begin_206851e53:;
				{
					return _2214555b9_SupportsCloning(_221455d06_Sptr(_21121__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_221456ee4_Struct(_21121__self) != nullptr)) {
				_case_begin_2068524e7:;
				{
					jule::Ptr<_2211c76e3_StructIns> _23125_s = _221456ee4_Struct(_21121__self);;
					return (((_23125_s.get()._field_Decl != nullptr) && (!(_23125_s.get()._field_Decl.get()._field_CppLinked))) && _2211c6208_IsDerives(_23125_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_206851c99:;
				{
					return false;;
				}
			}
			_match_end_206851c33:;
		};
	};
}



inline jule::Bool _22145582d_Variadicable(_221453397_TypeKind* _self_) {
	{
		_221453397_TypeKind* _24421__self = (&((*(_self_))));;
		return (_221456a1b_Slc(_24421__self) != nullptr);;
	};
}



inline jule::Ptr<_22145a5be_Prim> _221455a92_Prim(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_20685047e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_22145a5be_Prim>(18);;
			}
		}
		else {
			_case_begin_2068515c3:;
			{
				return nullptr;;
			}
		}
		_match_end_20685156d:;
	};
}



inline jule::Ptr<_22145dd53_Sptr> _221455d06_Sptr(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_20685165b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_22145dd53_Sptr>(19);;
			}
		}
		else {
			_case_begin_206859d5c:;
			{
				return nullptr;;
			}
		}
		_match_end_20685a28b:;
	};
}



inline jule::Ptr<_2214623b7_Ptr> _22145606a_Ptr(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_206859e17:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2214623b7_Ptr>(24);;
			}
		}
		else {
			_case_begin_20685aab6:;
			{
				return nullptr;;
			}
		}
		_match_end_20685aa61:;
	};
}



inline jule::Ptr<_2211ee781_Enum> _2214562ce_Enum(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_20685ab4e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2211ee781_Enum>(3);;
			}
		}
		else {
			_case_begin_20685b7a9:;
			{
				return nullptr;;
			}
		}
		_match_end_20685b754:;
	};
}



inline jule::Ptr<_221200d7b_TypeEnum> _221456543_TypeEnum(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_20685b842:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_221200d7b_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_20685c49c:;
			{
				return nullptr;;
			}
		}
		_match_end_20685c447:;
	};
}



inline jule::Ptr<_22146195a_Arr> _2214567a7_Arr(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_20685c535:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_22146195a_Arr>(23);;
			}
		}
		else {
			_case_begin_20685d190:;
			{
				return nullptr;;
			}
		}
		_match_end_20685d13a:;
	};
}



inline jule::Ptr<_22145e7b0_Slc> _221456a1b_Slc(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_20685d228:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_22145e7b0_Slc>(20);;
			}
		}
		else {
			_case_begin_20685dd83:;
			{
				return nullptr;;
			}
		}
		_match_end_20685dd2d:;
	};
}



inline jule::Ptr<_2211dc97d_FnIns> _221456c80_Fn(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_20685de1b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2211dc97d_FnIns>(1);;
			}
		}
		else {
			_case_begin_20685ea76:;
			{
				return nullptr;;
			}
		}
		_match_end_20685ea21:;
	};
}



inline jule::Ptr<_2211c76e3_StructIns> _221456ee4_Struct(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_20685eb0e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2211c76e3_StructIns>(0);;
			}
		}
		else {
			_case_begin_206860769:;
			{
				return nullptr;;
			}
		}
		_match_end_206860714:;
	};
}



inline jule::Ptr<_2211ebeed_Trait> _221457258_Trait(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_206860802:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2211ebeed_Trait>(2);;
			}
		}
		else {
			_case_begin_20686145c:;
			{
				return nullptr;;
			}
		}
		_match_end_206861407:;
	};
}



inline jule::Ptr<_221460d66_Map> _2214574bc_Map(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_2068614e5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_221460d66_Map>(22);;
			}
		}
		else {
			_case_begin_206862150:;
			{
				return nullptr;;
			}
		}
		_match_end_2068620ea:;
	};
}



inline jule::Ptr<_22146033d_Tuple> _221457731_Tup(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_2068621d8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_22146033d_Tuple>(21);;
			}
		}
		else {
			_case_begin_206862d43:;
			{
				return nullptr;;
			}
		}
		_match_end_206862cdd:;
	};
}



inline jule::Bool _221457995_comptime(_221453397_TypeKind* _self_) {
	return ((((((((((((_221458de7_comptimeTypeInfos(_self_) != nullptr) || (_22145915b_comptimeTypeInfo(_self_) != nullptr)) || (_221457c09_comptimeStructFields(_self_) != nullptr)) || (_221457e6d_comptimeStructField(_self_) != nullptr)) || (_2214581d2_comptimeEnumFields(_self_) != nullptr)) || (_221458446_comptimeEnumField(_self_) != nullptr)) || (_2214593c0_comptimeStatics(_self_) != nullptr)) || (_221459634_comptimeStatic(_self_) != nullptr)) || (_2214586aa_comptimeParams(_self_) != nullptr)) || (_22145891e_comptimeParam(_self_) != nullptr)) || (_221458b83_comptimeRange(_self_) != nullptr)) || (_221459898_comptimeValue(_self_) != nullptr));;
}



inline jule::Ptr<_2212054bd_comptimeStructFields> _221457c09_comptimeStructFields(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_20686399d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2212054bd_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_206867c9e:;
			{
				return nullptr;;
			}
		}
		_match_end_206867b06:;
	};
}



inline jule::Ptr<_2212039c7_comptimeStructField> _221457e6d_comptimeStructField(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_206867d6a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2212039c7_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_206868651:;
			{
				return nullptr;;
			}
		}
		_match_end_2068685eb:;
	};
}



inline jule::Ptr<_22120abee_comptimeEnumFields> _2214581d2_comptimeEnumFields(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_2068686d9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_22120abee_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_206869344:;
			{
				return nullptr;;
			}
		}
		_match_end_2068692de:;
	};
}



inline jule::Ptr<_2212099cd_comptimeEnumField> _221458446_comptimeEnumField(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_2068693cc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2212099cd_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_20686a037:;
			{
				return nullptr;;
			}
		}
		_match_end_206869ed2:;
	};
}



inline jule::Ptr<_22120e2eb_comptimeParams> _2214586aa_comptimeParams(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_20686a0c0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_22120e2eb_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_20686ac2a:;
			{
				return nullptr;;
			}
		}
		_match_end_20686abc5:;
	};
}



inline jule::Ptr<_22120c250_comptimeParam> _22145891e_comptimeParam(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_20686acb3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_22120c250_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_20686b91d:;
			{
				return nullptr;;
			}
		}
		_match_end_20686b8b8:;
	};
}



inline jule::Ptr<_221202ed2_comptimeRange> _221458b83_comptimeRange(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_20686b9a6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_221202ed2_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_20686c611:;
			{
				return nullptr;;
			}
		}
		_match_end_20686c5ab:;
	};
}



inline jule::Ptr<_2212107b4_comptimeTypeInfos> _221458de7_comptimeTypeInfos(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_20686c699:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2212107b4_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_20686d304:;
			{
				return nullptr;;
			}
		}
		_match_end_20686d29e:;
	};
}



inline jule::Ptr<_221211c7c_comptimeTypeInfo> _22145915b_comptimeTypeInfo(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_20686d38c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_221211c7c_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_20686dee7:;
			{
				return nullptr;;
			}
		}
		_match_end_20686de92:;
	};
}



inline jule::Ptr<_221208515_comptimeStatics> _2214593c0_comptimeStatics(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_20686e080:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_221208515_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_20686ebda:;
			{
				return nullptr;;
			}
		}
		_match_end_20686eb85:;
	};
}



inline jule::Ptr<_2212069ca_comptimeStatic> _221459634_comptimeStatic(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_20686ec73:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2212069ca_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_2068708cd:;
			{
				return nullptr;;
			}
		}
		_match_end_206870878:;
	};
}



inline jule::Ptr<_221217777_comptimeValue> _221459898_comptimeValue(_221453397_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_206870966:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_221217777_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_2068715c1:;
			{
				return nullptr;;
			}
		}
		_match_end_20687156b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _221453397_TypeKind _Src) {
	_Stream << _221453793_Str(&_Src);
	return _Stream;
}



inline jule::Bool _22145a107_checked(_221459c50_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}



inline void _22145a2d3_removeKind(_221459c50_TypeSymbol* _self_) {
	(*(_self_))._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _221459c50_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _22145a932_Str(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _22145ac40_Equal(jule::Ptr<_22145a5be_Prim> _self_, jule::Ptr<_221453397_TypeKind> _52121_other) {
	jule::Ptr<_22145a5be_Prim> _52213_prim = _221455a92_Prim(_52121_other.ptr());;
	if ((_52213_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _52213_prim.get()._field_Kind);;
}



inline jule::Bool _22145b1b3_IsConstraint(_22145a5be_Prim* _self_) {
	return ((((!(_22145d803_IsStr(_self_))) && (!(_22145da67_IsAny(_self_)))) && (!(_22145d58e_IsBool(_self_)))) && (!(_21e6c4e9a_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _22145b427_IsI8(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _22145b68b_IsI16(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _22145b900_IsI32(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _22145bb64_IsI64(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _22145bdc8_IsU8(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _22145c13c_IsU16(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _22145c3a1_IsU32(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _22145c615_IsU64(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _22145c879_IsF32(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _22145cadd_IsF64(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _22145cd52_IsInt(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _22145d0b6_IsUint(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _22145d32a_IsUintptr(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _22145d58e_IsBool(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _22145d803_IsStr(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _22145da67_IsAny(_22145a5be_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _22145a5be_Prim _Src) {
	_Stream << _22145a932_Str(&_Src);
	return _Stream;
}



inline jule::Str _22145e1b6_Str(_22145dd53_Sptr* _self_) {
	return (jule::Str("&", 1) + _221453793_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _22145e4c4_Equal(jule::Ptr<_22145dd53_Sptr> _self_, jule::Ptr<_221453397_TypeKind> _59821_other) {
	jule::Ptr<_22145dd53_Sptr> _59913_sptr = _221455d06_Sptr(_59821_other.ptr());;
	if ((_59913_sptr == nullptr)) {
		return false;;
	};
	return _221453aa1_Equal(_self_.get()._field_Elem, _59913_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _22145dd53_Sptr _Src) {
	_Stream << _22145e1b6_Str(&_Src);
	return _Stream;
}



inline jule::Str _22145ecbb_Str(_22145e7b0_Slc* _self_) {
	return (jule::Str("[]", 2) + _221453793_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _2214600c9_Equal(jule::Ptr<_22145e7b0_Slc> _self_, jule::Ptr<_221453397_TypeKind> _61721_other) {
	jule::Ptr<_22145e7b0_Slc> _61813_slc = _221456a1b_Slc(_61721_other.ptr());;
	if ((_61813_slc == nullptr)) {
		return false;;
	};
	return _221453aa1_Equal(_self_.get()._field_Elem, _61813_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _22145e7b0_Slc _Src) {
	_Stream << _22145ecbb_Str(&_Src);
	return _Stream;
}



inline jule::Str _2214606a1_Str(_22146033d_Tuple* _self_) {
	jule::Str _63417_s = jule::Str("(", 1);;
	_63417_s+=_221453793_Str((*(_self_))._field_Types[0LL].ptr());
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_206880987:;
		if (it != expr_end) {
			jule::Ptr<_221453397_TypeKind> *_63616_t = it;
			{
				(_63417_s).append(",", 1);
				_63417_s+=_221453793_Str((*(_63616_t)).ptr());
			}
			_iter_next_206880987:;
			++it;
			goto _iter_begin_206880987;
		}
		_iter_end_206880987:;
	};
	(_63417_s).append(")", 1);
	return _63417_s;;
}



inline jule::Bool _2214609ae_Equal(jule::Ptr<_22146033d_Tuple> _self_, jule::Ptr<_221453397_TypeKind> _64521_other) {
	jule::Ptr<_22146033d_Tuple> _64613_tup = _221457731_Tup(_64521_other.ptr());;
	if ((_64613_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _64613_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I32 _65317_i = 0LL;;
	for (; (_65317_i < _self_.get()._field_Types.len()); (_65317_i)++) {
		{
			if ((!(_221453aa1_Equal(_self_.get()._field_Types[_65317_i], _64613_tup.get()._field_Types[_65317_i])))) {
				return false;;
			};
		}
	_iter_next_2068834a1:;
	}
	_iter_end_2068834a1:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _22146033d_Tuple _Src) {
	_Stream << _2214606a1_Str(&_Src);
	return _Stream;
}



inline jule::Str _2214611c9_Str(_221460d66_Map* _self_) {
	jule::Str _67317_s = jule::Str("map[", 4);;
	_67317_s+=_221453793_Str((*(_self_))._field_Key.ptr());
	(_67317_s).append("]", 1);
	_67317_s+=_221453793_Str((*(_self_))._field_Val.ptr());
	return _67317_s;;
}



inline jule::Bool _2214614d7_Equal(jule::Ptr<_221460d66_Map> _self_, jule::Ptr<_221453397_TypeKind> _68121_other) {
	jule::Ptr<_221460d66_Map> _68213_m = _2214574bc_Map(_68121_other.ptr());;
	if ((_68213_m == nullptr)) {
		return false;;
	};
	return (_221453aa1_Equal(_self_.get()._field_Key, _68213_m.get()._field_Key) && _221453aa1_Equal(_self_.get()._field_Val, _68213_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _221460d66_Map _Src) {
	_Stream << _2214611c9_Str(&_Src);
	return _Stream;
}



inline jule::Str _221461cbd_Str(_22146195a_Arr* _self_) {
	jule::Str _70017_s = jule::Str("[", 1);;
	_70017_s+=_21e6b5a18_Itoa((*(_self_))._field_N);
	(_70017_s).append("]", 1);
	_70017_s+=_221453793_Str((*(_self_))._field_Elem.ptr());
	return _70017_s;;
}



inline jule::Bool _2214620cb_Equal(jule::Ptr<_22146195a_Arr> _self_, jule::Ptr<_221453397_TypeKind> _70821_other) {
	jule::Ptr<_22146195a_Arr> _70913_arr = _2214567a7_Arr(_70821_other.ptr());;
	if ((_70913_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _70913_arr.get()._field_N) && _221453aa1_Equal(_self_.get()._field_Elem, _70913_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _22146195a_Arr _Src) {
	_Stream << _221461cbd_Str(&_Src);
	return _Stream;
}



inline jule::Str _22146272a_Str(_2214623b7_Ptr* _self_) {
	if (_221462d8a_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _221453793_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _221462a38_Equal(jule::Ptr<_2214623b7_Ptr> _self_, jule::Ptr<_221453397_TypeKind> _73221_other) {
	jule::Ptr<_2214623b7_Ptr> _73313_ptr = _22145606a_Ptr(_73221_other.ptr());;
	if ((_73313_ptr == nullptr)) {
		return false;;
	};
	return _221453aa1_Equal(_self_.get()._field_Elem, _73313_ptr.get()._field_Elem);;
}



inline jule::Bool _221462d8a_IsUnsafe(_2214623b7_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2214623b7_Ptr _Src) {
	_Stream << _22146272a_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22146330d_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _2214648e7_pushErr(_2214641dd_typeChecker* _self_, jule::Ptr<_21da1aa0b_Token> _81826_token, jule::Str _81841_fmt, jule::Slice<jule::Any> _81854_args) {
	_22124d747_pushErr((*(_self_))._field_s.ptr(), _81826_token, _81841_fmt, _81854_args);
}



inline void _221464ac3_allowBuiltin(_2214641dd_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _221464c9e_disallowBuiltin(_2214641dd_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Ptr<_22145a5be_Prim> _2214650ac_buildPrim(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a4d52_IdentTypeDecl>* _83029_decl) {
	if ((!(_22146e1a4_isPrim((*(_83029_decl)).get()._field_Ident)))) {
		_2214648e7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_83029_decl)).get()._field_Generics.len() > 0LL)) {
		_2214648e7_pushErr(_self_, (*(_83029_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_83029_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return _22146db65_buildPrimType((*(_83029_decl)).get()._field_Ident);;
}



inline void _2068921b3_pushReference(_2214641dd_typeChecker* _self_, jule::Ptr<_2211c76e3_StructIns>* _84440_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_2064a14ba_Exist((*(_self_))._field_refers.ptr(), (*(_84440_t)))) {
		return;;
	};
	_2211e1553_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84440_t)), &__jule_any_type9));
}

inline void _206894dca_pushReference(_2214641dd_typeChecker* _self_, jule::Ptr<_2211ebeed_Trait>* _84440_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_206896a58_Exist((*(_self_))._field_refers.ptr(), (*(_84440_t)))) {
		return;;
	};
	_2211e1553_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84440_t)), &__jule_any_type10));
}



inline void _2214655a7_pushReferenceByKind(_2214641dd_typeChecker* _self_, jule::Ptr<_221453397_TypeKind>* _85443_k) {
	{
		
		if ((_221456ee4_Struct((*(_85443_k)).ptr()) != nullptr)) {
			_case_begin_206890d71:;
			{
				jule::Ptr<_2211c76e3_StructIns> _85721_t = _221456ee4_Struct((*(_85443_k)).ptr());;
				_2068921b3_pushReference(_self_, &(_85721_t));
			}
		}
		else if ((_221457258_Trait((*(_85443_k)).ptr()) != nullptr)) {
			_case_begin_206890de8:;
			{
				jule::Ptr<_2211ebeed_Trait> _86021_t = _221457258_Trait((*(_85443_k)).ptr());;
				_206894dca_pushReference(_self_, &(_86021_t));
			}
		}
		_match_end_206890c61:;
	};
}



inline void _221465970_pushCycleError(_2214641dd_typeChecker* _self_, jule::Any _86529_def1, jule::Any _86540_def2, jule::Str* _86556_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _86713_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _86728_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_86728_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_206899e35:;
				{
					return (*(_86728_def)).cast_ptr<_22145264e_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_206899e9b:;
				{
					return (*(_86728_def)).cast_ptr<_2211c48cc_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_2068997e7:;
				{
					return jule::Str();;
				}
			}
			_match_end_20689971a:;
		};
	});;
	jule::Str _87713_def1Ident = _86713_getIdent(&(_86529_def1));;
	jule::Str _87813_def2Ident = _86713_getIdent(&(_86540_def2));;
	jule::Str _87913_refersTo = _21d675a2e_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_87713_def1Ident, &__jule_any_type5),jule::Any(_87813_def2Ident, &__jule_any_type5)}));;
	((*(_86556_message))).buffer.insert(0, (((_21d5d3ecb_Repeat(jule::Str(" ", 1), 7LL) + _87913_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _221465d27_checkCrossCycle(_2214641dd_typeChecker* _self_, jule::Any _88330_decl, jule::Str* _88346_message) {
	{
		auto &_match_expr{ _88330_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_20689c0e1:;
			{
				jule::Ptr<_22145264e_TypeAlias> _88617_ta = _88330_decl.cast_ptr<_22145264e_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_88617_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20689caa3:;
					if (it != expr_end) {
						jule::Any *_88720_d = it;
						{
							{
								
								if (((*(_88720_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_20689d796:;
									{
										_221465970_pushCycleError(_self_, jule::Any(_88617_ta, &__jule_any_type67), (*(_88720_d)), _88346_message);
										return false;;
									}
								}
								else if ((!(_221465d27_checkCrossCycle(_self_, (*(_88720_d)), _88346_message)))) {
									_case_begin_20689d81d:;
									{
										_221465970_pushCycleError(_self_, jule::Any(_88617_ta, &__jule_any_type67), (*(_88720_d)), _88346_message);
										return false;;
									}
								}
								_match_end_20689d686:;
							};
						}
						_iter_next_20689caa3:;
						++it;
						goto _iter_begin_20689caa3;
					}
					_iter_end_20689caa3:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_20689c157:;
			{
				jule::Ptr<_2211c48cc_Struct> _89817_s = _88330_decl.cast_ptr<_2211c48cc_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_89817_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20689e08d:;
					if (it != expr_end) {
						jule::Ptr<_2211c48cc_Struct> *_89920_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_89920_d))))) {
									_case_begin_2068a0930:;
									{
										_221465970_pushCycleError(_self_, jule::Any(_89817_s, &__jule_any_type66), jule::Any((*(_89920_d)), &__jule_any_type66), _88346_message);
										return false;;
									}
								}
								else if ((!(_221465d27_checkCrossCycle(_self_, jule::Any((*(_89920_d)), &__jule_any_type66), _88346_message)))) {
									_case_begin_2068a09a7:;
									{
										_221465970_pushCycleError(_self_, jule::Any(_89817_s, &__jule_any_type66), jule::Any((*(_89920_d)), &__jule_any_type66), _88346_message);
										return false;;
									}
								}
								_match_end_2068a0820:;
							};
						}
						_iter_next_20689e08d:;
						++it;
						goto _iter_begin_20689e08d;
					}
					_iter_end_20689e08d:;
				};
			}
		}
		_match_end_20689c003:;
	};
	return true;;
}



inline jule::Bool _2214661ce_checkIllegalCycles(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a4d52_IdentTypeDecl>* _91738_ident, jule::Any _91765_decl) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _91765_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2068a05de:;
			{
				if (((*(_self_))._field_notPlain || _91765_decl.cast_ptr<_2211c48cc_Struct>(&__jule_any_type66).get()._field_CppLinked)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_2068a2712:;
			{
				if (_91765_decl.cast_ptr<_22145264e_TypeAlias>(&__jule_any_type67).get()._field_CppLinked) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_2068a048a:;
	};
	if ((_91765_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_2214648e7_pushErr(_self_, (*(_91738_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _94017_message = jule::Str();;
	if ((!(_221465d27_checkCrossCycle(_self_, _91765_decl, &(_94017_message))))) {
		jule::Str _94321_errMsg = _94017_message;;
		_94017_message=jule::Str();
		_221465970_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _91765_decl, &(_94017_message));
		_94321_errMsg+=_94017_message;
		_2214648e7_pushErr(_self_, (*(_91738_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_94321_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_2068a4bed:;
			{
				{
					(*((*(_self_))._field_referencer.get()._field_refs))=jule::append((*((*(_self_))._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({_91765_decl}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2068a4c75:;
			{
				{
					auto &_match_expr{ _91765_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_2068a6b67:;
						{
							jule::Ptr<_2211c48cc_Struct> _95925_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_2211c48cc_Struct>(&__jule_any_type66);;
							_95925_s.get()._field_Depends = jule::alloc_for_append(_95925_s.get()._field_Depends,1);_95925_s.get()._field_Depends.__push(_91765_decl.cast_ptr<_2211c48cc_Struct>(&__jule_any_type66));;
						}
					}
					_match_end_2068a6a79:;
				};
			}
		}
		_match_end_2068a4b98:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_221452e35_Kind> _221466586_fromTypeAlias(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a4d52_IdentTypeDecl>* _96733_decl, jule::Ptr<_22145264e_TypeAlias>* _96760_ta) {
	if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_96760_ta)).get()._field_Public, (*(_96760_ta)).get()._field_Token)))) {
		_2214648e7_pushErr(_self_, (*(_96733_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_96733_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_96760_ta)).get()._field_Used=true;
	if (((*(_96733_decl)).get()._field_Generics.len() > 0LL)) {
		_2214648e7_pushErr(_self_, (*(_96733_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_96733_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2068aadd0:;
			if (it != expr_end) {
				jule::Ptr<_22145264e_TypeAlias> _98420_bg = *it;
				{
					if (((_98420_bg == (*(_96760_ta))) || (((*(_96760_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _221453aa1_Equal((*(_96760_ta)).get()._field_Kind.get()._field_Kind, _98420_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_2068aadd0;
					};
				}
				_iter_next_2068aadd0:;
				++it;
				goto _iter_begin_2068aadd0;
			}
			_iter_end_2068aadd0:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2068ab72c:;
			if (it != expr_end) {
				jule::Ptr<_22145264e_TypeAlias> _99520_bg = *it;
				{
					if ((_99520_bg == (*(_96760_ta)))) {
						_2214648e7_pushErr(_self_, (*(_96733_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_96733_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_96760_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2068ad80b:;
						if (it != expr_end) {
							jule::Ptr<_22145264e_TypeAlias> _100024_dg = *it;
							{
								if ((_99520_bg == _100024_dg)) {
									_2214648e7_pushErr(_self_, (*(_96733_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_96733_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_2068ad80b:;
							++it;
							goto _iter_begin_2068ad80b;
						}
						_iter_end_2068ad80b:;
					};
				}
				_iter_next_2068ab72c:;
				++it;
				goto _iter_begin_2068ab72c;
			}
			_iter_end_2068ab72c:;
		};
	};
	jule::Bool _100917_ok = _2214661ce_checkIllegalCycles(_self_, _96733_decl, jule::Any((*(_96760_ta)), &__jule_any_type67));;
	if ((!(_100917_ok))) {
		return nullptr;;
	};
	if (((*(_96760_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_100917_ok=_221258cb3_checkTypeAliasDeclKind((*(_self_))._field_s, _96760_ta, (*(_self_))._field_lookup);
		if ((!(_100917_ok))) {
			return nullptr;;
		};
	};
	if (((*(_96760_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(_self_))._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*(_self_))._field_ownerAlias.get()._field_Generics,1);(*(_self_))._field_ownerAlias.get()._field_Generics.__push((*(_96760_ta)));;
	};
	jule::Ptr<_221453397_TypeKind> _102817_tk = jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Generic=(*(_96760_ta)).get()._field_Generic, ._field_Kind=(*(_96760_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_2214655a7_pushReferenceByKind(_self_, &(_102817_tk));
	if ((*(_96760_ta)).get()._field_CppLinked) {
		_102817_tk.get()._field_CppIdent=(*(_96760_ta)).get()._field_Ident;
	} else {
		_102817_tk.get()._field_CppIdent=(*(_96760_ta)).get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_221452e35_Kind>(_102817_tk, 17);;
}



inline jule::Ptr<_2211ee781_Enum> _22146693d_fromEnum(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a4d52_IdentTypeDecl>* _104128_decl, jule::Ptr<_2211ee781_Enum>* _104155_e) {
	if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_104155_e)).get()._field_Public, (*(_104155_e)).get()._field_Token)))) {
		_2214648e7_pushErr(_self_, (*(_104128_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_104128_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_104128_decl)).get()._field_Generics.len() > 0LL)) {
		_2214648e7_pushErr(_self_, (*(_104128_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_104128_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_104155_e));;
}



inline jule::Ptr<_221200d7b_TypeEnum> _221466ce5_fromTypeEnum(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a4d52_IdentTypeDecl>* _105332_decl, jule::Ptr<_221200d7b_TypeEnum>* _105359_e) {
	if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_105359_e)).get()._field_Public, (*(_105359_e)).get()._field_Token)))) {
		_2214648e7_pushErr(_self_, (*(_105332_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_105332_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_105332_decl)).get()._field_Generics.len() > 0LL)) {
		_2214648e7_pushErr(_self_, (*(_105332_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_105332_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_105359_e));;
}



inline jule::Ptr<_2211ebeed_Trait> _22146719c_fromTrait(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a4d52_IdentTypeDecl>* _106529_decl, jule::Ptr<_2211ebeed_Trait>* _106556_t) {
	if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_106556_t)).get()._field_Public, (*(_106556_t)).get()._field_Token)))) {
		_2214648e7_pushErr(_self_, (*(_106529_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_106529_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_106529_decl)).get()._field_Generics.len() > 0LL)) {
		_2214648e7_pushErr(_self_, (*(_106529_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_106529_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_206894dca_pushReference(_self_, _106556_t);
	return (*(_106556_t));;
}



inline jule::Bool _221467554_checkStructIns(_2214641dd_typeChecker* _self_, jule::Ptr<_2211c76e3_StructIns>* _107838_ins, jule::Ptr<_21da1aa0b_Token>* _107860_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_107838_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_107838_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_107838_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_221264b26_precheckStructIns((*(_self_))._field_s, _107838_ins, (*(_107860_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_107838_ins)).get()._field_Generics.len() > 0LL)) {
		_221265594_checkStructInsOperators((*(_self_))._field_s, (*(_107838_ins)));
		_221264d9b_checkStructIns((*(_self_))._field_s, _107838_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _2214677eb_appendUsedStructReference(_2214641dd_typeChecker* _self_, jule::Ptr<_2211c48cc_Struct>* _109949_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2068bd9d6:;
			{
				jule::Ptr<_2211c48cc_Struct> _110521_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_2211c48cc_Struct>(&__jule_any_type66);;
				if ((!(_2211c6516_IsUses(_110521_refS.ptr(), (*(_109949_s)))))) {
					_110521_refS.get()._field_Uses = jule::alloc_for_append(_110521_refS.get()._field_Uses,1);_110521_refS.get()._field_Uses.__push((*(_109949_s)));;
				};
			}
		}
		_match_end_2068bd981:;
	};
}



inline jule::Ptr<_2211c76e3_StructIns> _221467bb4_buildStructInstance(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a4d52_IdentTypeDecl>* _111243_decl, jule::Ptr<_2211c48cc_Struct>* _111270_s) {
	jule::Ptr<_22146330d_referencer> _111417_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_22145264e_TypeAlias>> _111617_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_2068c15aa:;
				{
					jule::Ptr<_22122ac63_scopeChecker> _112325_sc = (*(_self_))._field_lookup.cast_ptr<_22122ac63_scopeChecker>(0);;
					jule::Ptr<_22122ac63_scopeChecker> _112425_hard = _22122dcee_getHardRoot(_112325_sc);;
					if (((_112425_hard.get()._field_owner.get()._field_Owner == nullptr) || (_112425_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_111270_s))))) {
						goto _match_end_2068c1555;
					};
					jule::I32 _112821_n = (_112425_hard.get()._field_owner.get()._field_Generics.len() + _112425_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_112425_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _112821_n);
				}
			}
			_match_end_2068c1555:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_22147198c_Lookup> _113817_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_2211c76e3_StructIns> _114217_ins = _2211c4d3e_instance((*(_111270_s)));;
	_114217_ins.get()._field_Generics=jule::Slice<jule::Ptr<_221451b15_InsGeneric>>::alloc(0LL, (*(_111243_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_111243_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2068c5900:;
		if (it != expr_end) {
			jule::Ptr<_2211a478b_TypeDecl> _114421_g = *it;
			{
				jule::Ptr<_221453397_TypeKind> _114521_kind = _22146b14b_build(_self_, &(_114421_g.get()._field_Kind));;
				if ((_114521_kind == nullptr)) {
					return nullptr;;
				};
				_114217_ins.get()._field_Generics = jule::alloc_for_append(_114217_ins.get()._field_Generics,1);_114217_ins.get()._field_Generics.__push(jule::new_ptr<_221451b15_InsGeneric>(_221451b15_InsGeneric{._field_Kind=_114521_kind, }));;
			}
			_iter_next_2068c5900:;
			++it;
			goto _iter_begin_2068c5900;
		}
		_iter_end_2068c5900:;
	};
	(*(_self_))._field_lookup=_113817_lookup;
	(*(_self_))._field_bannedGenerics=_111617_bannedGenerics;
	(*(_self_))._field_referencer=_111417_referencer;
	return _114217_ins;;
}



inline jule::Ptr<_2211c76e3_StructIns> _22146806b_fromStruct(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a4d52_IdentTypeDecl>* _116034_decl, jule::Ptr<_2211c48cc_Struct>* _116061_s) {
	if ((!(_22124de1d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_116061_s)).get()._field_Public, (*(_116061_s)).get()._field_Token)))) {
		_2214648e7_pushErr(_self_, (*(_116034_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_116034_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_116034_decl)).get()._field_Generics.len() > 0LL)) {
			_2214648e7_pushErr(_self_, (*(_116034_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_2211c76e3_StructIns>(_2211c76e3_StructIns{._field_Decl=(*(_116061_s)), });;
	};
	jule::Bool _117817_ok = ((*(_self_))._field_notPlain || _2214661ce_checkIllegalCycles(_self_, _116034_decl, jule::Any((*(_116061_s)), &__jule_any_type66)));;
	if ((!(_117817_ok))) {
		return nullptr;;
	};
	_2214677eb_appendUsedStructReference(_self_, _116061_s);
	jule::Ptr<_2211c76e3_StructIns> _118417_ins = _221467bb4_buildStructInstance(_self_, _116034_decl, _116061_s);;
	if ((_118417_ins == nullptr)) {
		return nullptr;;
	};
	_117817_ok=_22124eade_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I32>(_118417_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_118417_ins.get()._field_Generics.len()), (*(_116034_decl)).get()._field_Token);
	if ((!(_117817_ok))) {
		return nullptr;;
	};
	jule::Ptr<_2211c76e3_StructIns> _119417_existInstance = _2211c5119_appendInstance((*(_116061_s)).ptr(), &(_118417_ins));;
	if ((_119417_existInstance != nullptr)) {
		if ((!(_221257465_checkConstraintsStruct((*(_self_))._field_s, &(_118417_ins), &((*(_116034_decl)).get()._field_Token), _119417_existInstance)))) {
			return nullptr;;
		};
		_2068921b3_pushReference(_self_, &(_119417_existInstance));
		return _119417_existInstance;;
	};
	if ((!(_221467554_checkStructIns(_self_, &(_118417_ins), &((*(_116034_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_2068921b3_pushReference(_self_, &(_118417_ins));
	return _118417_ins;;
}



inline jule::Trait<_221452e35_Kind> _221468379_getDef(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a4d52_IdentTypeDecl>* _121830_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2068cec06:;
		if (it != expr_end) {
			jule::Ptr<_2211b1a84_GenericDecl> _121916_g = *it;
			{
				if ((_121916_g.get()._field_Ident == (*(_121830_decl)).get()._field_Ident)) {
					return jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(_121916_g.get()._field_Ident), 18);;
				};
			}
			_iter_next_2068cec06:;
			++it;
			goto _iter_begin_2068cec06;
		}
		_iter_end_2068cec06:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2068d0b08:;
		if (it != expr_end) {
			jule::Ptr<_22145264e_TypeAlias> _122521_g = *it;
			{
				if ((_122521_g.get()._field_Ident == (*(_121830_decl)).get()._field_Ident)) {
					if (((*(_121830_decl)).get()._field_Generics.len() > 0LL)) {
						_2214648e7_pushErr(_self_, (*(_121830_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_121830_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_2211c76e3_StructIns> _123125_st = _221456ee4_Struct(_122521_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_123125_st != nullptr)) {
						jule::Bool _123325_ok = _2214661ce_checkIllegalCycles(_self_, _121830_decl, jule::Any(_123125_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_123325_ok))) {
							return nullptr;;
						};
					};
					return _122521_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_2068d0b08:;
			++it;
			goto _iter_begin_2068d0b08;
		}
		_iter_end_2068d0b08:;
	};
	if ((!((*(_121830_decl)).get()._field_CppLinked))) {
		jule::Ptr<_2211ee781_Enum> _124321_e = _22147198c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._22147153b_FindEnum((*(_self_))._field_lookup, (*(_121830_decl)).get()._field_Ident);;
		if ((_124321_e != nullptr)) {
			return jule::Trait<_221452e35_Kind>(_22146693d_fromEnum(_self_, _121830_decl, &(_124321_e)), 3);;
		};
		jule::Ptr<_221200d7b_TypeEnum> _124821_te = _22147198c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._221471849_FindTypeEnum((*(_self_))._field_lookup, (*(_121830_decl)).get()._field_Ident);;
		if ((_124821_te != nullptr)) {
			return jule::Trait<_221452e35_Kind>(_221466ce5_fromTypeEnum(_self_, _121830_decl, &(_124821_te)), 4);;
		};
		jule::Ptr<_2211ebeed_Trait> _125321_t = _22147198c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._22147122d_FindTrait((*(_self_))._field_lookup, (*(_121830_decl)).get()._field_Ident);;
		if ((_125321_t != nullptr)) {
			return jule::Trait<_221452e35_Kind>(_22146719c_fromTrait(_self_, _121830_decl, &(_125321_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_2214648e7_pushErr(_self_, (*(_121830_decl)).get()._field_Token, jule::Str("cpp-linked definitions are not allowed in this scope", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2211c48cc_Struct> _126217_s = _22147198c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._221470a68_FindStruct((*(_self_))._field_lookup, (*(_121830_decl)).get()._field_Ident, (*(_121830_decl)).get()._field_CppLinked);;
	if ((_126217_s != nullptr)) {
		return jule::Trait<_221452e35_Kind>(_22146806b_fromStruct(_self_, _121830_decl, &(_126217_s)), 0);;
	};
	jule::Ptr<_22145264e_TypeAlias> _126717_ta = _22147198c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2214706b1_FindTypeAlias((*(_self_))._field_lookup, (*(_121830_decl)).get()._field_Ident, (*(_121830_decl)).get()._field_CppLinked);;
	if (((_126717_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_126717_ta=_221517abb_findBuiltinTypeAlias((*(_121830_decl)).get()._field_Ident);
	};
	if ((_126717_ta != nullptr)) {
		return _221466586_fromTypeAlias(_self_, _121830_decl, &(_126717_ta));;
	};
	_2214648e7_pushErr(_self_, (*(_121830_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_121830_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_221452e35_Kind> _221468687_buildIdent(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a4d52_IdentTypeDecl> _127933_decl) {
	{
		
		if (_22146e1a4_isPrim(_127933_decl.get()._field_Ident)) {
			_case_begin_2068da66d:;
			{
				return jule::Trait<_221452e35_Kind>(_2214650ac_buildPrim(_self_, &(_127933_decl)), 18);;
			}
		}
		else {
			_case_begin_2068d9e75:;
			{
				return _221468379_getDef(_self_, &(_127933_decl));;
			}
		}
		_match_end_2068d9da9:;
	};
}



inline jule::Trait<_221452e35_Kind> _221468995_buildSubIdent(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a54a1_SubIdentTypeDecl> _128836_decl) {
	jule::Trait<_221452e35_Kind> _128917_ident = _221468687_buildIdent(_self_, _128836_decl.get()._field_Idents[0LL]);;
	if ((_128917_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _128917_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_2068dc230:;
			{
				goto _match_end_2068dbd56;
			}
		}
		else {
			_case_begin_2068dbc24:;
			{
				_2214648e7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2068dbd56:;
	};
	jule::Ptr<_221200d7b_TypeEnum> _130017_t = _128917_ident.cast_ptr<_221200d7b_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_2211a4d52_IdentTypeDecl>> _130117_idents = _128836_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_130117_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2068dd253:;
		if (it != expr_end) {
			jule::I32 _130213_i = it - expr->begin();
			jule::Ptr<_2211a4d52_IdentTypeDecl> _130216_id = *it;
			{
				jule::Ptr<_2212007b5_TypeEnumItem> _130321_item = _2212018b5_FindItem(_130017_t.ptr(), _130216_id.get()._field_Ident);;
				if ((_130321_item == nullptr)) {
					_2214648e7_pushErr(_self_, _130216_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_130017_t.get()._field_Ident, &__jule_any_type5),jule::Any(_130216_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_130117_idents.len() - _130213_i) == 1LL)) {
					_2214655a7_pushReferenceByKind(_self_, &(_130321_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_221452e35_Kind>(_130321_item.get()._field_Kind.get()._field_Kind, 17);;
				};
				_130017_t=_221456543_TypeEnum(_130321_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_130017_t == nullptr)) {
					_2214648e7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_2068dd253:;
			++it;
			_130213_i++;
			goto _iter_begin_2068dd253;
		}
		_iter_end_2068dd253:;
	};
	return nullptr;;
}



inline jule::Ptr<_22145dd53_Sptr> _221468ca3_buildSptrFromType(_2214641dd_typeChecker* _self_, jule::Ptr<_221453397_TypeKind>* _132241_elem) {
	{
		
		if (((*(_132241_elem)) == nullptr)) {
			_case_begin_2068e1ce5:;
			{
				return nullptr;;
			}
		}
		else if ((_221456ee4_Struct((*(_132241_elem)).ptr()) != nullptr)) {
			_case_begin_2068e1d6c:;
			{
				jule::Ptr<_2211c76e3_StructIns> _132817_s = _221456ee4_Struct((*(_132241_elem)).ptr());;
				if (((_132817_s.get()._field_Decl != nullptr) && _132817_s.get()._field_Decl.get()._field_CppLinked)) {
					_2214648e7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_2214567a7_Arr((*(_132241_elem)).ptr()) != nullptr) && _2214567a7_Arr((*(_132241_elem)).ptr()).get()._field_Auto)) {
			_case_begin_2068e1de4:;
			{
				_2214648e7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2068e150e:;
	};
	return jule::new_ptr<_22145dd53_Sptr>(_22145dd53_Sptr{._field_Elem=(*(_132241_elem))});;
}



inline jule::Ptr<_22145dd53_Sptr> _2214690b1_buildSptr(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a5b44_SptrTypeDecl> _134232_decl) {
	jule::Bool _134313_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_134313_notPlain;
	});;
	jule::Ptr<_221453397_TypeKind> _134717_elem = _22146b459_checkDecl(_self_, &(_134232_decl.get()._field_Elem));;
	return _221468ca3_buildSptrFromType(_self_, &(_134717_elem));;
}



inline jule::Ptr<_2214623b7_Ptr> _2214693be_buildPtrFromType(_2214641dd_typeChecker* _self_, jule::Ptr<_221453397_TypeKind>* _135140_elem) {
	{
		
		if (((*(_135140_elem)) == nullptr)) {
			_case_begin_2068e6965:;
			{
				return nullptr;;
			}
		}
		else if (((_2214567a7_Arr((*(_135140_elem)).ptr()) != nullptr) && _2214567a7_Arr((*(_135140_elem)).ptr()).get()._field_Auto)) {
			_case_begin_2068e69dc:;
			{
				_2214648e7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_2214623b7_Ptr>();;
			}
		}
		_match_end_2068e6855:;
	};
	return jule::new_ptr<_2214623b7_Ptr>(_2214623b7_Ptr{._field_Elem=(*(_135140_elem))});;
}



inline jule::Ptr<_2214623b7_Ptr> _2214696cc_buildPtr(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a6617_PtrTypeDecl> _136631_decl) {
	jule::Bool _136713_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_136713_notPlain;
	});;
	jule::Ptr<_221453397_TypeKind> _137117_elem = nullptr;;
	if ((!(_2211a6969_IsUnsafe(_136631_decl.ptr())))) {
		_137117_elem=_22146b459_checkDecl(_self_, &(_136631_decl.get()._field_Elem));
		return _2214693be_buildPtrFromType(_self_, &(_137117_elem));;
	};
	return jule::new_ptr<_2214623b7_Ptr>(_2214623b7_Ptr{._field_Elem=_137117_elem});;
}



inline jule::Ptr<_22145e7b0_Slc> _2214699da_buildSlc(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a6040_SlcTypeDecl> _138331_decl) {
	jule::Bool _138413_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_138413_notPlain;
	});;
	jule::Ptr<_221453397_TypeKind> _138817_elem = _22146b459_checkDecl(_self_, &(_138331_decl.get()._field_Elem));;
	{
		
		if ((_138817_elem == nullptr)) {
			_case_begin_20750be70:;
			{
				return nullptr;;
			}
		}
		else if (((_2214567a7_Arr(_138817_elem.ptr()) != nullptr) && _2214567a7_Arr(_138817_elem.ptr()).get()._field_Auto)) {
			_case_begin_20750bee7:;
			{
				_2214648e7_pushErr(_self_, _138331_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_20750bdb5:;
	};
	return jule::new_ptr<_22145e7b0_Slc>(_22145e7b0_Slc{._field_Elem=_138817_elem});;
}



inline jule::Ptr<_22146195a_Arr> _221469ce8_buildArr(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a6c99_ArrTypeDecl> _140431_decl) {
	jule::Bool _140513_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_140513_notPlain;
	});;
	jule::I32 _140917_n = 0LL;;
	if ((!(_2211a7173_AutoSized(_140431_decl.ptr())))) {
		jule::Ptr<_221425c2c_Data> _141221_size = _221444267_evalExpr(_2212554da_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _140431_decl.get()._field_Size);;
		if ((_141221_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_2214265e0_IsConst(_141221_size.ptr())))) {
			_2214648e7_pushErr(_self_, _140431_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_221455a92_Prim(_141221_size.get()._field_Kind.ptr()) == nullptr) || (!(_21e6c48d4_IsInt(_221455a92_Prim(_141221_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_2214648e7_pushErr(_self_, _140431_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_140917_n=static_cast<jule::I32>(static_cast<jule::I32>(_21e6c78e8_AsI64(_141221_size.get()._field_Constant.ptr())));
		if ((_140917_n < 0LL)) {
			_2214648e7_pushErr(_self_, _140431_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _143021_max = _21e6bdbca_MaxI(jule::Str("int", 3));;
			if (((_21e6b6bc3_BitSize != 64LL) && (static_cast<jule::I64>(_140917_n) > _143021_max))) {
				_2214648e7_pushErr(_self_, _140431_decl.get()._field_Size.get()._field_Token, jule::Str("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_221450916_constoa(&(_141221_size.get()._field_Constant)), &__jule_any_type5),jule::Any(_21e6b5771_FmtInt(_143021_max, 10LL), &__jule_any_type5)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_221453397_TypeKind> _143917_elem = _22146b459_checkDecl(_self_, &(_140431_decl.get()._field_Elem));;
	{
		
		if ((_143917_elem == nullptr)) {
			_case_begin_207515b27:;
			{
				return nullptr;;
			}
		}
		else if (((_2214567a7_Arr(_143917_elem.ptr()) != nullptr) && _2214567a7_Arr(_143917_elem.ptr()).get()._field_Auto)) {
			_case_begin_207515b8d:;
			{
				_2214648e7_pushErr(_self_, _140431_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_207515929:;
	};
	return jule::new_ptr<_22146195a_Arr>(_22146195a_Arr{._field_Auto=_2211a7173_AutoSized(_140431_decl.ptr()), ._field_N=_140917_n, ._field_Elem=_143917_elem});;
}



inline jule::Ptr<_221460d66_Map> _22146a106_buildMap(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a74e7_MapTypeDecl> _145731_decl) {
	jule::Bool _145813_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_145813_notPlain;
	});;
	jule::Ptr<_221453397_TypeKind> _146217_key = _22146b459_checkDecl(_self_, &(_145731_decl.get()._field_Key));;
	if ((_146217_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_221453397_TypeKind> _146717_val = _22146b459_checkDecl(_self_, &(_145731_decl.get()._field_Val));;
	if ((_146717_val == nullptr)) {
		return nullptr;;
	};
	if ((_2214562ce_Enum(_146717_val.ptr()) != nullptr)) {
		_2214648e7_pushErr(_self_, _145731_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_221460d66_Map>(_221460d66_Map{._field_Key=_146217_key, ._field_Val=_146717_val});;
}



inline jule::Ptr<_22146033d_Tuple> _22146a414_buildTuple(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a632b_TupleTypeDecl> _148133_decl) {
	jule::Slice<jule::Ptr<_221453397_TypeKind>> _148217_types = jule::Slice<jule::Ptr<_221453397_TypeKind>>::alloc(0LL, _148133_decl.get()._field_Types.len());;
	{
		auto expr = &(_148133_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20751b479:;
		if (it != expr_end) {
			jule::Ptr<_2211a478b_TypeDecl> _148321_t = *it;
			{
				jule::Ptr<_221453397_TypeKind> _148421_kind = _22146b459_checkDecl(_self_, &(_148321_t));;
				if ((_148421_kind == nullptr)) {
					return nullptr;;
				};
				_148217_types = jule::alloc_for_append(_148217_types,1);_148217_types.__push(_148421_kind);;
			}
			_iter_next_20751b479:;
			++it;
			goto _iter_begin_20751b479;
		}
		_iter_end_20751b479:;
	};
	return jule::new_ptr<_22146033d_Tuple>(_22146033d_Tuple{._field_Types=_148217_types});;
}



inline jule::Bool _22146a722_checkFnTypes(_2214641dd_typeChecker* _self_, jule::Ptr<_2211dc97d_FnIns>* _149436_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_149436_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20751cd3d:;
		if (it != expr_end) {
			jule::Ptr<_2211dbaae_ParamIns> _149521_p = *it;
			{
				_149521_p.get()._field_Kind=_22146b14b_build(_self_, &(_149521_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_149521_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_221257a92_checkFnParamKind((*(_self_))._field_s, &(_149521_p));
			}
			_iter_next_20751cd3d:;
			++it;
			goto _iter_begin_20751cd3d;
		}
		_iter_end_20751cd3d:;
	};
	if ((!(_2211da23e_IsVoid((*(_149436_f)).get()._field_Decl.ptr())))) {
		(*(_149436_f)).get()._field_Result=_22146b14b_build(_self_, &((*(_149436_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_149436_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_2211dc97d_FnIns> _22146aa30_buildFn(_2214641dd_typeChecker* _self_, jule::Ptr<_2211b621a_FnDecl> _151230_decl) {
	if ((_151230_decl.get()._field_Generics.len() > 0LL)) {
		_2214648e7_pushErr(_self_, _151230_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2211d9ccc_Fn> _151817_f = _2211e3ab6_buildFn(_151230_decl);;
	jule::I32 _152013_n = (*(_self_))._field_s.get()._field_errors.len();;
	_22126110b_checkAnonFnDecl((*(_self_))._field_s, &(_151817_f));
	if ((_152013_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_2211dc97d_FnIns> _152617_ins = _2211db1b8_instanceForce(_151817_f);;
	_152617_ins.get()._field_Anon=true;
	jule::Bool _152913_ok = _22146a722_checkFnTypes(_self_, &(_152617_ins));;
	if ((!(_152913_ok))) {
		return nullptr;;
	};
	return _152617_ins;;
}



inline jule::Trait<_221452e35_Kind> _22146ad3d_buildByNamespace(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a5858_NamespaceTypeDecl> _153739_decl) {
	jule::Str _153813_path = _22146d7ad_buildLinkPathByTokens(&(_153739_decl.get()._field_Idents));;
	jule::Ptr<_221242a9e_ImportInfo> _153917_imp = _22147198c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._22146ee52_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)>([=](jule::Ptr<_221242a9e_ImportInfo> _153952_imp) mutable -> jule::Bool {
		if (((_153739_decl.get()._field_Idents.len() == 1LL) && (_153952_imp.get()._field_Alias == _153813_path))) {
			return true;;
		};
		return ((_153952_imp.get()._field_LinkPath == _153813_path) && _2212453dc_isAccessibleViaSelection(_153952_imp.ptr()));;
	}));;
	if (((_153917_imp == nullptr) || (!(_221244d48_isLookupable(_153917_imp.ptr(), jule::Str("self", 4)))))) {
		_2214648e7_pushErr(_self_, _153739_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_153813_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_221464c9e_disallowBuiltin(_self_);
	jule::Trait<_22147198c_Lookup> _155217_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_22147198c_Lookup>(_153917_imp, 1);
	jule::Ptr<_221453397_TypeKind> _155417_kind = _22146b459_checkDecl(_self_, &(_153739_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_155217_lookup;
	_221464ac3_allowBuiltin(_self_);
	return jule::Trait<_221452e35_Kind>(_155417_kind, 17);;
}



inline jule::Ptr<_221453397_TypeKind> _22146b14b_build(_2214641dd_typeChecker* _self_, jule::Any* _156029_declKind) {
	jule::Trait<_221452e35_Kind> _156117_kind = nullptr;;
	{
		auto &_match_expr{ (*(_156029_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_207529454:;
			{
				jule::Trait<_221452e35_Kind> _156421_t = _221468687_buildIdent(_self_, (*(_156029_declKind)).cast_ptr<_2211a4d52_IdentTypeDecl>(&__jule_any_type20));;
				if ((_156421_t != nullptr)) {
					_156117_kind=_156421_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_20752a2ce:;
			{
				jule::Trait<_221452e35_Kind> _156921_t = _221468995_buildSubIdent(_self_, (*(_156029_declKind)).cast_ptr<_2211a54a1_SubIdentTypeDecl>(&__jule_any_type92));;
				if ((_156921_t != nullptr)) {
					_156117_kind=_156921_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_20752a345:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_22145dd53_Sptr> _157521_t = _2214690b1_buildSptr(_self_, (*(_156029_declKind)).cast_ptr<_2211a5b44_SptrTypeDecl>(&__jule_any_type78));;
				if ((_157521_t != nullptr)) {
					_156117_kind=jule::Trait<_221452e35_Kind>(_157521_t, 19);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_20752992c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2214623b7_Ptr> _158121_t = _2214696cc_buildPtr(_self_, (*(_156029_declKind)).cast_ptr<_2211a6617_PtrTypeDecl>(&__jule_any_type77));;
				if ((_158121_t != nullptr)) {
					_156117_kind=jule::Trait<_221452e35_Kind>(_158121_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_207529993:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_22145e7b0_Slc> _158721_t = _2214699da_buildSlc(_self_, (*(_156029_declKind)).cast_ptr<_2211a6040_SlcTypeDecl>(&__jule_any_type76));;
				if ((_158721_t != nullptr)) {
					_156117_kind=jule::Trait<_221452e35_Kind>(_158721_t, 20);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_207529a09:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_22146195a_Arr> _159321_t = _221469ce8_buildArr(_self_, (*(_156029_declKind)).cast_ptr<_2211a6c99_ArrTypeDecl>(&__jule_any_type75));;
				if ((_159321_t != nullptr)) {
					_156117_kind=jule::Trait<_221452e35_Kind>(_159321_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_207529a70:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_221460d66_Map> _159921_t = _22146a106_buildMap(_self_, (*(_156029_declKind)).cast_ptr<_2211a74e7_MapTypeDecl>(&__jule_any_type79));;
				if ((_159921_t != nullptr)) {
					_156117_kind=jule::Trait<_221452e35_Kind>(_159921_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_20752a3ab:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_22146033d_Tuple> _160521_t = _22146a414_buildTuple(_self_, (*(_156029_declKind)).cast_ptr<_2211a632b_TupleTypeDecl>(&__jule_any_type80));;
				if ((_160521_t != nullptr)) {
					_156117_kind=jule::Trait<_221452e35_Kind>(_160521_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_20752a422:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2211dc97d_FnIns> _161121_t = _22146aa30_buildFn(_self_, (*(_156029_declKind)).cast_ptr<_2211b621a_FnDecl>(&__jule_any_type14));;
				if ((_161121_t != nullptr)) {
					_156117_kind=jule::Trait<_221452e35_Kind>(_161121_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_20752a488:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_221452e35_Kind> _161721_t = _22146ad3d_buildByNamespace(_self_, (*(_156029_declKind)).cast_ptr<_2211a5858_NamespaceTypeDecl>(&__jule_any_type96));;
				if ((_161721_t != nullptr)) {
					_156117_kind=_161721_t;
				};
			}
		}
		else {
			_case_begin_2075297c8:;
			{
				_2214648e7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2075296da:;
	};
	if ((_156117_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _156117_kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_207535c57:;
			{
				return _156117_kind.cast_ptr<_221453397_TypeKind>(17);;
			}
		}
		else {
			_case_begin_20753663c:;
			{
				jule::Ptr<_221453397_TypeKind> _163221_tk = jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=_156117_kind});;
				{
					auto &_match_expr{ _156117_kind };
					
					if (_match_expr.type_is(true, 18)) {
						_case_begin_207537077:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									(*((*(_self_))._field_ignoredGenerics))=jule::append((*((*(_self_))._field_ignoredGenerics)),jule::Slice<jule::Ptr<_221453397_TypeKind>>::make({_163221_tk}));
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_2075370ee:;
						{
							jule::Ptr<_2211c76e3_StructIns> _163921_s = _156117_kind.cast_ptr<_2211c76e3_StructIns>(0);;
							if (((_163921_s.get()._field_Decl != nullptr) && _163921_s.get()._field_Decl.get()._field_CppLinked)) {
								_163221_tk.get()._field_CppIdent=_163921_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_207536e67:;
				};
				return _163221_tk;;
			}
		}
		_match_end_2075365d7:;
	};
}



inline jule::Ptr<_221453397_TypeKind> _22146b459_checkDecl(_2214641dd_typeChecker* _self_, jule::Ptr<_2211a478b_TypeDecl>* _164833_decl) {
	jule::Ptr<_21da1aa0b_Token> _165017_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_164833_decl)).get()._field_Token;
	jule::Ptr<_221453397_TypeKind> _165317_kind = _22146b14b_build(_self_, &((*(_164833_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_165017_errorToken;
	return _165317_kind;;
}



inline void _22146b6ce_check(_2214641dd_typeChecker* _self_, jule::Ptr<_221459c50_TypeSymbol>* _165929_t) {
	if (((*(_165929_t)).get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_221453397_TypeKind> _166317_kind = _22146b459_checkDecl(_self_, &((*(_165929_t)).get()._field_Decl));;
	if ((_166317_kind == nullptr)) {
		_22145a2d3_removeKind((*(_165929_t)).ptr());
		return;;
	};
	(*(_165929_t)).get()._field_Kind=_166317_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _2214641dd_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__22146bd3e_prim(jule::Str* _167521_ident, jule::Ptr<_22145a5be_Prim> _167533_t) {
	return (_167533_t.get()._field_Kind == (*(_167521_ident)));;
}



inline jule::Bool static__22146c180_exist(jule::Str* _167922_ident, jule::Ptr<_221453397_TypeKind>* _167939_k) {
	{
		
		if ((_221455a92_Prim((*(_167939_k)).ptr()) != nullptr)) {
			_case_begin_20753ccc5:;
			{
				return static__22146bd3e_prim(_167922_ident, _221455a92_Prim((*(_167939_k)).ptr()));;
			}
		}
		else if ((_221455d06_Sptr((*(_167939_k)).ptr()) != nullptr)) {
			_case_begin_20753cd3b:;
			{
				jule::Ptr<_22145dd53_Sptr> _168421_sptr = _221455d06_Sptr((*(_167939_k)).ptr());;
				return static__22146c180_exist(_167922_ident, &(_168421_sptr.get()._field_Elem));;
			}
		}
		else if ((_22145606a_Ptr((*(_167939_k)).ptr()) != nullptr)) {
			_case_begin_20753cda2:;
			{
				jule::Ptr<_2214623b7_Ptr> _168721_ptr = _22145606a_Ptr((*(_167939_k)).ptr());;
				return static__22146c180_exist(_167922_ident, &(_168721_ptr.get()._field_Elem));;
			}
		}
		else if ((_221456a1b_Slc((*(_167939_k)).ptr()) != nullptr)) {
			_case_begin_20753ce18:;
			{
				jule::Ptr<_22145e7b0_Slc> _169021_slc = _221456a1b_Slc((*(_167939_k)).ptr());;
				return static__22146c180_exist(_167922_ident, &(_169021_slc.get()._field_Elem));;
			}
		}
		else if ((_2214567a7_Arr((*(_167939_k)).ptr()) != nullptr)) {
			_case_begin_20753d19e:;
			{
				jule::Ptr<_22146195a_Arr> _169321_arr = _2214567a7_Arr((*(_167939_k)).ptr());;
				return static__22146c180_exist(_167922_ident, &(_169321_arr.get()._field_Elem));;
			}
		}
		else if ((_2214574bc_Map((*(_167939_k)).ptr()) != nullptr)) {
			_case_begin_20753d215:;
			{
				jule::Ptr<_221460d66_Map> _169621_m = _2214574bc_Map((*(_167939_k)).ptr());;
				return (static__22146c180_exist(_167922_ident, &(_169621_m.get()._field_Key)) || static__22146c180_exist(_167922_ident, &(_169621_m.get()._field_Val)));;
			}
		}
		else if ((_221456ee4_Struct((*(_167939_k)).ptr()) != nullptr)) {
			_case_begin_20753d27b:;
			{
				jule::Ptr<_2211c76e3_StructIns> _170021_s = _221456ee4_Struct((*(_167939_k)).ptr());;
				{
					auto expr = &(_170021_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207544282:;
					if (it != expr_end) {
						jule::Ptr<_221451b15_InsGeneric> _170125_g = *it;
						{
							if (static__22146c180_exist(_167922_ident, &(_170125_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_207544282:;
						++it;
						goto _iter_begin_207544282;
					}
					_iter_end_207544282:;
				};
				return false;;
			}
		}
		else if ((_221456c80_Fn((*(_167939_k)).ptr()) != nullptr)) {
			_case_begin_20753d2e2:;
			{
				jule::Ptr<_2211dc97d_FnIns> _170821_f = _221456c80_Fn((*(_167939_k)).ptr());;
				{
					auto expr = &(_170821_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207545aad:;
					if (it != expr_end) {
						jule::Ptr<_2211dbaae_ParamIns> _170925_p = *it;
						{
							if (_2211d8abc_IsSelf(_170925_p.get()._field_Decl.ptr())) {
								goto _iter_next_207545aad;
							};
							if (static__22146c180_exist(_167922_ident, &(_170925_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_207545aad:;
						++it;
						goto _iter_begin_207545aad;
					}
					_iter_end_207545aad:;
				};
				if ((_170821_f.get()._field_Result != nullptr)) {
					return static__22146c180_exist(_167922_ident, &(_170821_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_221457731_Tup((*(_167939_k)).ptr()) != nullptr)) {
			_case_begin_20753d545:;
			{
				jule::Ptr<_22146033d_Tuple> _172221_tup = _221457731_Tup((*(_167939_k)).ptr());;
				{
					auto expr = &(_172221_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207547be2:;
					if (it != expr_end) {
						jule::Ptr<_221453397_TypeKind> _172325_t = *it;
						{
							if (static__22146c180_exist(_167922_ident, &(_172325_t))) {
								return true;;
							};
						}
						_iter_next_207547be2:;
						++it;
						goto _iter_begin_207547be2;
					}
					_iter_end_207547be2:;
				};
				return false;;
			}
		}
		else {
			_case_begin_20753cc5e:;
			{
				return false;;
			}
		}
		_match_end_20753cb93:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22146b8ee_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _203186a99_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2031d06c5_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _2031d1682_stop(_2031d1000_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _2031d18e6_stopped(_2031d1000_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _2031d1b5a_finished(_2031d1000_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _2031d1dbe_isLastSt(_2031d1000_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _2031d21dd_pushErr(_2031d1000_scopeParser* _self_, jule::Ptr<_21da1aa0b_Token> _19126_token, jule::Str _19141_fmt) {
	_2031ed171_pushErr((*(_self_))._field_p.ptr(), _19126_token, _19141_fmt, jule::Slice<jule::Any>());
}



inline void _2031d250c_pushSuggestion(_2031d1000_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_2031ed490_pushSuggestion((*(_self_))._field_p.ptr(), _19633_fmt, _19646_args);
}



inline void _2031d2782_insertAsNext(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _20036_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_2031d06c5_stmt>(_2031d06c5_stmt{._field_tokens=(*(_20036_tokens)), });
}



inline jule::Ptr<_2031d06c5_stmt> _2031d29e6_next(_2031d1000_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_2211b4724_ScopeTree> _2031d2d9d_buildScope(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _21034_tokens, jule::Ptr<_21da1aa0b_Token> _21056_end) {
	jule::Ptr<_2211b4724_ScopeTree> _21117_s = _2031ce5c5_newScope();;
	_21117_s.get()._field_Parent=(*(_self_))._field_s;
	_21117_s.get()._field_End=_21056_end;
	_2031d1000_scopeParser _21417_ssp = _2031d1000_scopeParser{._field_p=(*(_self_))._field_p, };;
	_2031dba88_build(&_21417_ssp, _21034_tokens, &(_21117_s));
	return _21117_s;;
}



inline jule::Ptr<_2211b71e9_VarDecl> _2031d31ab_buildVarSt(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _22134_tokens) {
	jule::Ptr<_2211b71e9_VarDecl> _22217_v = _203200bac_buildVar((*(_self_))._field_p, (*(_22134_tokens)));;
	_22217_v.get()._field_Scope=(*(_self_))._field_s;
	return _22217_v;;
}



inline jule::Ptr<_2211b75a1_RetSt> _2031d34b9_buildRetSt(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _22733_tokens) {
	jule::Ptr<_2211b75a1_RetSt> _22817_st = jule::new_ptr<_2211b75a1_RetSt>(_2211b75a1_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_2031ed79d_buildExpr((*(_self_))._field_p, &(_22733_tokens));
	};
	return _22817_st;;
}



inline jule::Ptr<_2211b7c11_Iter> _2031d37c7_buildWhileNextIter(_2031d1000_scopeParser* _self_, jule::Ptr<_2031d06c5_stmt>* _23842_s) {
	jule::Ptr<_2211b7c11_Iter> _23917_it = jule::new_ptr<_2211b7c11_Iter>(_2211b7c11_Iter{._field_Token=(*(_23842_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _24217_tokens = (*(_23842_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_2211b84d6_WhileKind> _24317_kind = jule::new_ptr<_2211b84d6_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_2031ed79d_buildExpr((*(_self_))._field_p, &(_24217_tokens));
	};
	if (_2031d1dbe_isLastSt(_self_)) {
		_2031d21dd_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_2031d29e6_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _25517_stTokens = _2031e77db_getBlockExpr(&(_24217_tokens));;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_2031d06c5_stmt> _25721_stmt = jule::new_ptr<_2031d06c5_stmt>(_2031d06c5_stmt{._field_tokens=_25517_stTokens, ._field_terminated=(*(_23842_s)).get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_2031db769_buildSt(_self_, &(_25721_stmt));
	};
	jule::I32 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _26617_blockTokens = _2031ea8aa_range(&(_26517_i), jule::Str("{", 1), jule::Str("}", 1), &(_24217_tokens));;
	if ((_26617_blockTokens == nullptr)) {
		_2031d1682_stop(_self_);
		_2031d21dd_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("body is not exist", 17));
		_2031d250c_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_2031d21dd_pushErr(_self_, _24217_tokens[_26517_i], jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_2031d2d9d_buildScope(_self_, &(_26617_blockTokens), _24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type38);
	return _23917_it;;
}



inline jule::Ptr<_2211b84d6_WhileKind> _2031d3ad5_buildWhileIterKind(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _28342_tokens) {
	return jule::new_ptr<_2211b84d6_WhileKind>(_2211b84d6_WhileKind{._field_Expr=_2031ed79d_buildExpr((*(_self_))._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _2031d3de3_getRangeKindKeysTokens(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _29018_vars;;
	jule::Slice<_21d6755de_Log> _29024_errs;;
	({
		__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_assign_result = _2031eb427_parts(_28946_toks, static_cast<jule::U32>(8LLU), true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;;
}



inline jule::Ptr<_2211b71e9_VarDecl> _2031d4201_buildRangeKindKey(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _29541_tokens) {
	if (((*(_29541_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_2211b71e9_VarDecl> _29917_key = jule::new_ptr<_2211b71e9_VarDecl>(_2211b71e9_VarDecl{._field_Token=(*(_29541_tokens))[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U32>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if (((*(_29541_tokens)).len() == 1LL)) {
			_2031d21dd_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=(*(_29541_tokens))[1LL];
	} else if (((*(_29541_tokens)).len() > 1LL)) {
		_2031d21dd_pushErr(_self_, (*(_29541_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_2031d21dd_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_2031d250c_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_2211b71e9_VarDecl>> _2031d450e_buildRangeKindKeys(_2031d1000_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>>* _32042_parts) {
	jule::Slice<jule::Ptr<_2211b71e9_VarDecl>> _32117_keys = nullptr;;
	{
		auto expr = _32042_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207734a9e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_2031d4201_buildRangeKindKey(_self_, &(_32221_tokens)));;
			}
			_iter_next_207734a9e:;
			++it;
			goto _iter_begin_207734a9e;
		}
		_iter_end_207734a9e:;
	};
	return _32117_keys;;
}



inline void _2031d4850_setupRangeKindKeysPlain(_2031d1000_scopeParser* _self_, jule::Ptr<_2211b8d77_RangeKind>* _32847_rng, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _32917_keyTokens = _2031d3de3_getRangeKindKeysTokens(_self_, _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_2031d21dd_pushErr(_self_, (*(_32847_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_2211b71e9_VarDecl>> _33617_keys = _2031d450e_buildRangeKindKeys(_self_, &(_32917_keyTokens));;
	(*(_32847_rng)).get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		(*(_32847_rng)).get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _2031d4ba2_setupRangeKindKeysExplicit(_2031d1000_scopeParser* _self_, jule::Ptr<_2211b8d77_RangeKind>* _34350_rng, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _34372_tokens) {
	jule::I32 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _34517_rang = _2031ea8aa_range(&(_34417_i), jule::Str("(", 1), jule::Str(")", 1), _34372_tokens);;
	if ((_34417_i < (*(_34372_tokens)).len())) {
		_2031d21dd_pushErr(_self_, (*(_34350_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_2031d4850_setupRangeKindKeysPlain(_self_, _34350_rng, &(_34517_rang));
}



inline void _2031d4ed2_setupRangeKindKeys(_2031d1000_scopeParser* _self_, jule::Ptr<_2211b8d77_RangeKind>* _35242_rng, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _35264_tokens) {
	if (((*(_35264_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(3LLU))) {
		if ((!(*(_35264_tokens))[0LL].get()._field_Kind.equal("(", 1))) {
			_2031d21dd_pushErr(_self_, (*(_35264_tokens))[0LL], jule::Str("invalid syntax", 14));
			return;;
		};
		_2031d4ba2_setupRangeKindKeysExplicit(_self_, _35242_rng, _35264_tokens);
		return;;
	};
	_2031d4850_setupRangeKindKeysPlain(_self_, _35242_rng, _35264_tokens);
}



inline jule::Ptr<_2211b8d77_RangeKind> _2031d5433_buildRangeIterKind(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _36442_var_tokens, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _36514_exprTokens, jule::Ptr<_21da1aa0b_Token>* _36541_inToken) {
	jule::Ptr<_2211b8d77_RangeKind> _36617_rng = jule::new_ptr<_2211b8d77_RangeKind>(_2211b8d77_RangeKind{._field_InToken=(*(_36541_inToken)), });;
	if (((*(_36514_exprTokens)).len() == 0LL)) {
		_2031d21dd_pushErr(_self_, _36617_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_2031ed79d_buildExpr((*(_self_))._field_p, _36514_exprTokens);
	if (((*(_36442_var_tokens)).len() > 0LL)) {
		_2031d4ed2_setupRangeKindKeys(_self_, &(_36617_rng), _36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _2031d57da_buildCommonIterKind(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _38043_tokens, jule::Ptr<_21da1aa0b_Token>* _38062_err_tok) {
	jule::I32 _38117_braceN = 0LL;;
	{
		auto expr = _38043_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20773ec1e:;
		if (it != expr_end) {
			jule::I32 _38214_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_207741308:;
							{
								(_38117_braceN)++;
								goto _iter_next_20773ec1e;
							}
						}
						else {
							_case_begin_207740e0c:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_207740bed:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_20773ec1e;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(15LLU)) {
						_case_begin_2077413a2:;
						{
							jule::Slice<jule::Ptr<_21da1aa0b_Token>> _39925_declTokens = (*(_38043_tokens)).slice(0LL, _38214_i);;
							jule::Slice<jule::Ptr<_21da1aa0b_Token>> _40025_exprTokens = (*(_38043_tokens)).slice((_38214_i + 1LL));;
							return jule::Any(_2031d5433_buildRangeIterKind(_self_, &(_39925_declTokens), &(_40025_exprTokens), &(_38221_tok)), &__jule_any_type40);;
						}
					}
					_match_end_207741b66:;
				};
			}
			_iter_next_20773ec1e:;
			++it;
			_38214_i++;
			goto _iter_begin_20773ec1e;
		}
		_iter_end_20773ec1e:;
	};
	return jule::Any(_2031d3ad5_buildWhileIterKind(_self_, _38043_tokens), &__jule_any_type38);;
}



inline jule::Ptr<_2211b7c11_Iter> _2031d5ae8_buildCommonIter(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _40738_tokens) {
	jule::Ptr<_2211b7c11_Iter> _40817_it = jule::new_ptr<_2211b7c11_Iter>(_2211b7c11_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_2031d1682_stop(_self_);
		_2031d21dd_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_2031d250c_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _41817_exprTokens = _2031e77db_getBlockExpr(&(_40738_tokens));;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_2031d57da_buildCommonIterKind(_self_, &(_41817_exprTokens), &(_40817_it.get()._field_Token));
	};
	jule::I32 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _42317_scopeTokens = _2031ea8aa_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_40738_tokens));;
	if ((_42317_scopeTokens == nullptr)) {
		_2031d1682_stop(_self_);
		_2031d21dd_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_2031d250c_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_2031d21dd_pushErr(_self_, _40738_tokens[_42217_i], jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_2031d2d9d_buildScope(_self_, &(_42317_scopeTokens), _40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_2211b7c11_Iter> _2031d5e06_buildIterSt(_2031d1000_scopeParser* _self_, jule::Ptr<_2031d06c5_stmt>* _43735_st) {
	if ((*(_43735_st)).get()._field_terminated) {
		return _2031d37c7_buildWhileNextIter(_self_, _43735_st);;
	};
	return _2031d5ae8_buildCommonIter(_self_, (*(_43735_st)).get()._field_tokens);;
}



inline jule::Ptr<_2211b922e_BreakSt> _2031d6214_buildBreakSt(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _44436_tokens) {
	jule::Ptr<_2211b922e_BreakSt> _44517_brk = jule::new_ptr<_2211b922e_BreakSt>(_2211b922e_BreakSt{._field_Token=(*(_44436_tokens))[0LL], });;
	if (((*(_44436_tokens)).len() > 1LL)) {
		if (((*(_44436_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(2LLU))) {
			_2031d21dd_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			_2031d250c_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=(*(_44436_tokens))[1LL];
			if (((*(_44436_tokens)).len() > 2LL)) {
				_2031d21dd_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_2211b95d6_ContSt> _2031d6522_buildContSt(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _46235_tokens) {
	jule::Ptr<_2211b95d6_ContSt> _46317_cont = jule::new_ptr<_2211b95d6_ContSt>(_2211b95d6_ContSt{._field_Token=(*(_46235_tokens))[0LL], });;
	if (((*(_46235_tokens)).len() > 1LL)) {
		if (((*(_46235_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(2LLU))) {
			_2031d21dd_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			_2031d250c_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=(*(_46235_tokens))[1LL];
			if (((*(_46235_tokens)).len() > 2LL)) {
				_2031d21dd_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_2211b9a59_If> _2031d6830_buildIf(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _48031_tokens) {
	jule::Ptr<_2211b9a59_If> _48117_model = jule::new_ptr<_2211b9a59_If>(_2211b9a59_If{._field_Token=(*(_48031_tokens))[0LL], });;
	(*(_48031_tokens))=(*(_48031_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _48517_exprTokens = _2031e77db_getBlockExpr(_48031_tokens);;
	jule::I32 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_2031d21dd_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I32>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _49217_scopeTokens = _2031ea8aa_range(&(_48617_i), jule::Str("{", 1), jule::Str("}", 1), _48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_2031d1682_stop(_self_);
		_2031d21dd_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("body is not exist", 17));
		_2031d250c_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21da1aa0b_Token> _49917_end = (*(_48031_tokens))[(_48617_i - 1LL)];;
	if ((_48617_i < (*(_48031_tokens)).len())) {
		if (((*(_48031_tokens))[_48617_i].get()._field_Id == static_cast<jule::U32>(17LLU))) {
			(*(_48031_tokens))=(*(_48031_tokens)).slice(_48617_i);
		} else {
			_2031d21dd_pushErr(_self_, (*(_48031_tokens))[_48617_i], jule::Str("invalid syntax", 14));
			(*(_48031_tokens))=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_2031ed79d_buildExpr((*(_self_))._field_p, &(_48517_exprTokens));
	_48117_model.get()._field_Scope=_2031d2d9d_buildScope(_self_, &(_49217_scopeTokens), _49917_end);
	return _48117_model;;
}



inline jule::Ptr<_2211b9e11_Else> _2031d6b3d_buildElse(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _51333_tokens) {
	jule::Ptr<_2211b9e11_Else> _51417_els = jule::new_ptr<_2211b9e11_Else>(_2211b9e11_Else{._field_Token=(*(_51333_tokens))[0LL], });;
	(*(_51333_tokens))=(*(_51333_tokens)).slice(1LL);
	jule::I32 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _51917_scopeTokens = _2031ea8aa_range(&(_51817_i), jule::Str("{", 1), jule::Str("}", 1), _51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < (*(_51333_tokens)).len())) {
			_2031d21dd_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_2031d1682_stop(_self_);
			_2031d21dd_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("body is not exist", 17));
			_2031d250c_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < (*(_51333_tokens)).len())) {
		_2031d21dd_pushErr(_self_, (*(_51333_tokens))[_51817_i], jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_2031d2d9d_buildScope(_self_, &(_51917_scopeTokens), (*(_51333_tokens))[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_2211ba384_Conditional> _2031d6e4b_buildIfElseChain(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _53739_tokens) {
	jule::Ptr<_2211ba384_Conditional> _53817_chain = jule::new_ptr<_2211ba384_Conditional>(_2211ba384_Conditional{._field_Head=_2031d6830_buildIf(_self_, &(_53739_tokens)), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U32>(17LLU))) {
				goto _iter_end_20775aad6;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U32>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_2211b9a59_If> _55025_elif = _2031d6830_buildIf(_self_, &(_53739_tokens));;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_20775aad6;
			};
			_53817_chain.get()._field_Default=_2031d6b3d_buildElse(_self_, &(_53739_tokens));
			goto _iter_end_20775aad6;
		}
	_iter_next_20775aad6:;
	}
	_iter_end_20775aad6:;;
	return _53817_chain;;
}



inline jule::Ptr<_2211a8cac_Expr> _2031d7259_buildCoCallSt(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _56036_tokens) {
	jule::Ptr<_21da1aa0b_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_2211a8cac_Expr> _56317_e = _2031ed79d_buildExpr((*(_self_))._field_p, &(_56036_tokens));;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_2077600b3:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_2211acc8e_FnCallExpr>(&__jule_any_type111).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_20775eb84:;
			{
				_2031d21dd_pushErr(_self_, _56113_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_20775e854:;
	};
	return _56317_e;;
}



inline jule::Ptr<_2211b22e3_GotoSt> _2031d7567_buildGotoSt(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _57635_tokens) {
	jule::Ptr<_2211b22e3_GotoSt> _57717_gt = jule::new_ptr<_2211b22e3_GotoSt>(_2211b22e3_GotoSt{._field_Token=(*(_57635_tokens))[0LL], });;
	if (((*(_57635_tokens)).len() == 1LL)) {
		_2031d21dd_pushErr(_self_, _57717_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57635_tokens)).len() > 2LL)) {
		_2031d21dd_pushErr(_self_, (*(_57635_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_21da1aa0b_Token> _58617_identToken = (*(_57635_tokens))[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_2031d21dd_pushErr(_self_, _58617_identToken, jule::Str("invalid syntax", 14));
		_2031d250c_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_2211b25ce_FallSt> _2031d7875_buildFallSt(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _59635_tokens) {
	jule::Ptr<_2211b25ce_FallSt> _59717_fll = jule::new_ptr<_2211b25ce_FallSt>(_2211b25ce_FallSt{._field_Token=(*(_59635_tokens))[0LL]});;
	if (((*(_59635_tokens)).len() > 1LL)) {
		_2031d21dd_pushErr(_self_, (*(_59635_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_2211baa5a_TypeAliasDecl> _2031d7b83_buildTypeAliasSt(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _60640_tokens) {
	jule::Ptr<_2211baa5a_TypeAliasDecl> _60717_tad = _2031eed98_buildTypeAliasDecl((*(_self_))._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60717_tad;;
}



inline void _2031d80e5_pushCaseExpr(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _61235_tokens, jule::Ptr<_21da1aa0b_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_2211a8cac_Expr>>* _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I32 _61921_i = 0LL;;
		jule::Ptr<_2211a478b_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType((*(_self_))._field_p, &(_61235_tokens), (&(_61921_i)), true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(jule::new_ptr<_2211a8cac_Expr>(_2211a8cac_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type94)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_2031d21dd_pushErr(_self_, _61235_tokens[_61921_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(_2031ed79d_buildExpr((*(_self_))._field_p, &(_61235_tokens)));;
}



inline jule::Slice<jule::Ptr<_2211a8cac_Expr>> _2031d8546_buildCaseExprs(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _63638_tokens, jule::Ptr<_21da1aa0b_Token>* _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_2211a8cac_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_2211a8cac_Expr>>::alloc(0LL, 1LL);;
	jule::I32 _63917_braceN = 0LL;;
	jule::I32 _64017_j = 0LL;;
	{
		auto expr = _63638_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20776a783:;
		if (it != expr_end) {
			jule::I32 _64114_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_20776cba3:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_20776c7a7:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_20776c598:;
					};
					goto _iter_next_20776a783;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_20776a783;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U32>(7LLU)) && _64121_tok.get()._field_Kind.equal("|", 1))) {
						_case_begin_20776d49a:;
						{
							jule::Slice<jule::Ptr<_21da1aa0b_Token>> _65721_exprTokens = (*(_63638_tokens)).slice(_64017_j, _64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_2031d21dd_pushErr(_self_, _64121_tok, jule::Str("expression missing", 18));
							} else {
								_2031d80e5_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							};
							_64017_j=static_cast<jule::I32>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U32>(11LLU))) {
						_case_begin_20776d511:;
						{
							(*(_63661_colon))=_64121_tok;
							_2031d80e5_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							(*(_63638_tokens))=(*(_63638_tokens)).slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_20776d016:;
				};
			}
			_iter_next_20776a783:;
			++it;
			_64114_i++;
			goto _iter_begin_20776a783;
		}
		_iter_end_20776a783:;
	};
	_2031d21dd_pushErr(_self_, (*(_63638_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63638_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_2211b4724_ScopeTree> _2031d8854_buildCaseScope(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _67638_tokens) {
	jule::I32 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I32 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _68022_next;;
			({
				__jule_tuple_sx_21da1aa0b_Token__jule_tuple_bool __jule_assign_result = _2031d03c8_skipSt(&(_67921_i), (*(_67638_tokens)).slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_207771b30;
			};
			jule::Ptr<_21da1aa0b_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U32>(7LLU)) || (!_68417_tok.get()._field_Kind.equal("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_207771b30;
			};
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _68921_scopeTokens = (*(_67638_tokens)).slice(0LL, _67717_n);;
			jule::Ptr<_2211b4724_ScopeTree> _69021_scope = _2031d2d9d_buildScope(_self_, &(_68921_scopeTokens), (*(_67638_tokens))[_67717_n]);;
			(*(_67638_tokens))=(*(_67638_tokens)).slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_207771b30:;
	}
	_iter_end_207771b30:;;
	jule::Ptr<_21da1aa0b_Token> _69417_end;;
	if (((*(_67638_tokens)).len() > 0LL)) {
		_69417_end=(*(_67638_tokens))[((*(_67638_tokens)).len() - 1LL)];
	};
	jule::Ptr<_2211b4724_ScopeTree> _69817_scope = _2031d2d9d_buildScope(_self_, _67638_tokens, _69417_end);;
	(*(_67638_tokens))=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_2211baecd_Case__jule_tuple_bool _2031d8c0b_buildCase(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_2211baecd_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_2211baecd_Case> _70417_c = jule::new_ptr<_2211baecd_Case>(_2211baecd_Case{._field_Token=(*(_70333_tokens))[0LL], });;
	(*(_70333_tokens))=(*(_70333_tokens)).slice(1LL);
	jule::Ptr<_21da1aa0b_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_2031d8546_buildCaseExprs(_self_, _70333_tokens, &(_70817_colon), _70351_typeMatch);
	_70417_c.get()._field_Scope=_2031d8854_buildCaseScope(_self_, _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_2211baecd_Case__jule_tuple_x_2211b9e11_Else _2031d90b3_buildCases(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_2211baecd_Case__jule_tuple_x_2211b9e11_Else __jule_func_result;
	jule::Slice<jule::Ptr<_2211baecd_Case>> _71917_cases = nullptr;;
	jule::Ptr<_2211b9e11_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_21da1aa0b_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U32>(7LLU)) || (!_72321_tok.get()._field_Kind.equal("|", 1)))) {
				_2031d21dd_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_20777a30e;
			};
			jule::Ptr<_2211baecd_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_2211baecd_Case__jule_tuple_bool __jule_assign_result = _2031d8c0b_buildCase(_self_, &(_71833_tokens), _71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_2211b9e11_Else>(_2211b9e11_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_2031d21dd_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_20777a30e:;
	}
	_iter_end_20777a30e:;;
	if (_72117_defNotLast) {
		_2031d21dd_pushErr(_self_, _72017_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_2211bb6a4_MatchCase> _2031d93c1_buildMatchCase(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _75237_tokens) {
	jule::Ptr<_2211bb6a4_MatchCase> _75317_m = jule::new_ptr<_2211bb6a4_MatchCase>(_2211bb6a4_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U32>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _76317_exprTokens = _2031e77db_getBlockExpr(&(_75237_tokens));;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_2031ed79d_buildExpr((*(_self_))._field_p, &(_76317_exprTokens));
	} else if (_75317_m.get()._field_TypeMatch) {
		_2031d21dd_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I32 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _77117_blockToks = _2031ea8aa_range(&(_77017_i), jule::Str("{", 1), jule::Str("}", 1), &(_75237_tokens));;
	if ((_77117_blockToks == nullptr)) {
		_2031d1682_stop(_self_);
		_2031d21dd_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("body is not exist", 17));
		_2031d250c_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_2031d21dd_pushErr(_self_, _75237_tokens[_77017_i], jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_2211baecd_Case__jule_tuple_x_2211b9e11_Else __jule_assign_result = _2031d90b3_buildCases(_self_, _77117_blockToks, _75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_2211b4724_ScopeTree> _2031d96ce_buildScopeSt(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_21da1aa0b_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_2031d21dd_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U32>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_2031d21dd_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U32>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_2031d21dd_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I32 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _81517_scopeTokens = _2031ea8aa_range(&(_81417_i), jule::Str("{", 1), jule::Str("}", 1), &(_78535_tokens));;
	if ((_81517_scopeTokens == nullptr)) {
		_2031d21dd_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_2031d21dd_pushErr(_self_, _78535_tokens[_81417_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_2211b4724_ScopeTree> _82217_scope = _2031d2d9d_buildScope(_self_, &(_81517_scopeTokens), _78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_2211b1e3b_LabelSt> _2031d99dc_buildLabelSt(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _82836_tokens) {
	jule::Ptr<_2211b1e3b_LabelSt> _82917_lbl = jule::new_ptr<_2211b1e3b_LabelSt>(_2211b1e3b_LabelSt{._field_Token=(*(_82836_tokens))[0LL], ._field_Ident=(*(_82836_tokens))[0LL].get()._field_Kind});;
	if (((*(_82836_tokens)).len() > 2LL)) {
		(*(_82836_tokens))=(*(_82836_tokens)).slice(2LL);
		_2031d2782_insertAsNext(_self_, _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__2211b3dd8_StmtData__jule_tuple_bool _2031d9cea_buildIdSt(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _84333_tokens) {
	__jule_tuple__2211b3dd8_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84333_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_21da1aa0b_Token> _84817_token = (*(_84333_tokens))[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_20779081e:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_2031d99dc_buildLabelSt(_self_, _84333_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_2077907b9:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_2031e8d1a_assignInfo> _2031da108_buildAssignInfo(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _85739_tokens) {
	jule::Ptr<_2031e8d1a_assignInfo> _85817_info = jule::new_ptr<_2031e8d1a_assignInfo>(_2031e8d1a_assignInfo{._field_ok=true});;
	jule::I32 _86117_braceN = 0LL;;
	{
		auto expr = _85739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20779207e:;
		if (it != expr_end) {
			jule::I32 _86214_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_20779368a:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_20779328e:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_207793080:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_207793976:;
						{
							goto _iter_next_20779207e;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U32>(7LLU))) {
						_case_begin_2077939dc:;
						{
							goto _iter_next_20779207e;
						}
					}
					else if ((!(_21da205e3_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_207793a64:;
						{
							goto _iter_next_20779207e;
						}
					}
					_match_end_207793734:;
				};
				_85817_info.get()._field_l=(*(_85739_tokens)).slice(0LL, _86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= (*(_85739_tokens)).len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_21da2034b_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_20779207e;
				};
				_85817_info.get()._field_r=(*(_85739_tokens)).slice((_86214_i + 1LL));
				if (_21da2034b_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_2031d21dd_pushErr(_self_, _85817_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_20779207e;
			}
			_iter_next_20779207e:;
			++it;
			_86214_i++;
			goto _iter_begin_20779207e;
		}
		_iter_end_20779207e:;
	};
	return _85817_info;;
}



inline jule::Ptr<_2211b2bd9_AssignLeft> _2031da416_buildAssignL(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _90536_tokens) {
	jule::Ptr<_2211b2bd9_AssignLeft> _90617_l = jule::new_ptr<_2211b2bd9_AssignLeft>(_2211b2bd9_AssignLeft{._field_Token=(*(_90536_tokens))[0LL], });;
	if (((*(_90536_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_2031ed79d_buildExpr((*(_self_))._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_2211b2bd9_AssignLeft>> _2031da724_buildAssignLs(_2031d1000_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>>* _91637_parts) {
	jule::Slice<jule::Ptr<_2211b2bd9_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto expr = _91637_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20779a4c7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _91821_part = *it;
			{
				jule::Ptr<_2211b2bd9_AssignLeft> _91921_l = _2031da416_buildAssignL(_self_, &(_91821_part));;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_20779a4c7:;
			++it;
			goto _iter_begin_20779a4c7;
		}
		_iter_end_20779a4c7:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_2211b3228_AssignSt__jule_tuple_bool _2031daa32_buildPlainAssign(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _92640_tokens) {
	__jule_tuple_x_2211b3228_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_2031e8d1a_assignInfo> _92717_info = _2031da108_buildAssignInfo(_self_, _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2211b3228_AssignSt> _93217_assign = jule::new_ptr<_2211b3228_AssignSt>(_2211b3228_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _93618_parts;;
	jule::Slice<_21d6755de_Log> _93625_errs;;
	({
		__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_assign_result = _2031eb427_parts(&(_92717_info.get()._field_l), static_cast<jule::U32>(8LLU), true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_93625_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_2031da724_buildAssignLs(_self_, &(_93618_parts));
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_2031ed79d_buildExpr((*(_self_))._field_p, &(_92717_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_2211b3228_AssignSt__jule_tuple_bool _2031dad40_buildDeclAssign(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _95038_tokens) {
	__jule_tuple_x_2211b3228_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_21da1aa0b_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_95617_token.get()._field_Kind.equal("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2211b3228_AssignSt> _96117_assign = jule::new_ptr<_2211b3228_AssignSt>(_2211b3228_AssignSt{._field_Declarative=true, });;
	jule::I32 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _96617_rang = _2031ea8aa_range(&(_96517_i), jule::Str("(", 1), jule::Str(")", 1), &(_95038_tokens));;
	if ((_96617_rang == nullptr)) {
		_2031d21dd_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_21da1aa0b_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_2031ed79d_buildExpr((*(_self_))._field_p, &(_97321_exprTokens));
	};
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _97818_parts;;
	jule::Slice<_21d6755de_Log> _97825_errs;;
	({
		__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_assign_result = _2031eb427_parts(&(_96617_rang), static_cast<jule::U32>(8LLU), true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_97825_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_97818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2077a63b2:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U32>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_2031d21dd_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_2077a63b2;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U32>(7LLU)) && _98421_part[0LL].get()._field_Kind.equal("&", 1))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_2031d21dd_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_2077a63b2;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U32>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U32>(3LLU))) && (!_98421_part[0LL].get()._field_Kind.equal("(", 1)))) {
					_2031d21dd_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
					goto _iter_next_2077a63b2;
				};
				jule::Ptr<_2211b2bd9_AssignLeft> _101421_l = _2031da416_buildAssignL(_self_, &(_98421_part));;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_2077a63b2:;
			++it;
			goto _iter_begin_2077a63b2;
		}
		_iter_end_2077a63b2:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_2211b3228_AssignSt__jule_tuple_bool _2031db14d_buildAssignSt(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _102337_tokens) {
	__jule_tuple_x_2211b3228_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_2031e91b1_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_102337_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_2077ae530:;
			{
				({
					__jule_tuple_x_2211b3228_AssignSt__jule_tuple_bool __jule_assign_result = _2031dad40_buildDeclAssign(_self_, (*(_102337_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_2077ae123:;
			{
				({
					__jule_tuple_x_2211b3228_AssignSt__jule_tuple_bool __jule_assign_result = _2031daa32_buildPlainAssign(_self_, _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_2077ae0bd:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_2211a964d_UseExpr> _2031db45b_buildUseExpr(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _103836_tokens) {
	if (((*(_103836_tokens)).len() == 1LL)) {
		_2031d21dd_pushErr(_self_, (*(_103836_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_2211a964d_UseExpr> _104317_ue = jule::new_ptr<_2211a964d_UseExpr>(_2211a964d_UseExpr{._field_Token=(*(_103836_tokens))[0LL], });;
	(*(_103836_tokens))=(*(_103836_tokens)).slice(1LL);
	_104317_ue.get()._field_Expr=_2031ed79d_buildExpr((*(_self_))._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _2031db769_buildSt(_2031d1000_scopeParser* _self_, jule::Ptr<_2031d06c5_stmt>* _105131_st) {
	jule::Ptr<_21da1aa0b_Token> _105217_token = (*(_105131_st)).get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__2211b3dd8_StmtData__jule_tuple_bool __jule_assign_result = _2031d9cea_buildIdSt(_self_, &((*(_105131_st)).get()._field_tokens));
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_2211b3228_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_2211b3228_AssignSt__jule_tuple_bool __jule_assign_result = _2031db14d_buildAssignSt(_self_, &((*(_105131_st)).get()._field_tokens));
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_2077b459b:;
			{
				return jule::Any(_2031db45b_buildUseExpr(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU) || _match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(33LLU) || _match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_2077b4612:;
			{
				return jule::Any(_2031d31ab_buildVarSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_2077b439d:;
			{
				return jule::Any(_2031d34b9_buildRetSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(12LLU)) {
			_case_begin_2077b4425:;
			{
				return jule::Any(_2031d5e06_buildIterSt(_self_, _105131_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_2077b46ab:;
			{
				return jule::Any(_2031d6214_buildBreakSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(14LLU)) {
			_case_begin_2077b4722:;
			{
				return jule::Any(_2031d6522_buildContSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_2077b4788:;
			{
				return jule::Any(_2031d6e4b_buildIfElseChain(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_2077b4810:;
			{
				return jule::Any(_2031d7259_buildCoCallSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_2077b4887:;
			{
				return jule::Any(_2031d7567_buildGotoSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_2077b490e:;
			{
				return jule::Any(_2031d7875_buildFallSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_2077b4986:;
			{
				return jule::Any(_2031d7b83_buildTypeAliasSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_2077b4a0d:;
			{
				return jule::Any(_2031d93c1_buildMatchCase(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_2077b4a85:;
			{
				return jule::Any(_2031d96ce_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_2077b4b0c:;
			{
				if (_105217_token.get()._field_Kind.equal("{", 1)) {
					return jule::Any(_2031d96ce_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_2077b4337:;
	};
	jule::Ptr<_2211a8cac_Expr> _110117_expr = _2031ed79d_buildExpr((*(_self_))._field_p, &((*(_105131_st)).get()._field_tokens));;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type53);;
	};
	_2031d21dd_pushErr(_self_, _105217_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _2031dba88_build(_2031d1000_scopeParser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _110929_tokens, jule::Ptr<_2211b4724_ScopeTree>* _110952_s) {
	if (((*(_110952_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_2031d0a6b_splitStmts(_110929_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_110952_s));
	while (((!(_2031d1dbe_isLastSt(_self_))) && (!(_2031d1b5a_finished(_self_))))) {
		{
			jule::Ptr<_2031d06c5_stmt> _111721_st = _2031d29e6_next(_self_);;
			jule::Any _111821_data = _2031db769_buildSt(_self_, &(_111721_st));;
			if ((_111821_data != nullptr)) {
				(*(_self_))._field_s.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_s.get()._field_Stmts,1);(*(_self_))._field_s.get()._field_Stmts.__push(_2211b4119_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_2031d18e6_stopped(_self_)) {
				goto _iter_end_2077c2367;
			};
		}
	_iter_next_2077c2367:;
	}
	_iter_end_2077c2367:;;
}







std::ostream &operator<<(std::ostream &_Stream, _2031d1000_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _2031dcca9_pushErr(_2031dc4d4_exprBuilder* _self_, jule::Ptr<_21da1aa0b_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_2031ed171_pushErr((*(_self_))._field_p.ptr(), _4426_token, _4441_fmt, _4454_args);
}



inline void _2031dd0c8_pushSuggestion(_2031dc4d4_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_2031ed490_pushSuggestion((*(_self_))._field_p.ptr(), _4933_fmt, _4946_args);
}



inline jule::Ptr<_2211a9939_TupleExpr> _2031dd3d6_buildTuple(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>>* _5334_parts) {
	jule::Ptr<_2211a9939_TupleExpr> _5417_tuple = jule::new_ptr<_2211a9939_TupleExpr>(_2211a9939_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_2211a8cac_Expr>>::alloc(0LL, (*(_5334_parts)).len())});;
	{
		auto expr = _5334_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2077e2321:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_2031e6e06_buildFromTokens(_self_, _5721_part));;
			}
			_iter_next_2077e2321:;
			++it;
			goto _iter_begin_2077e2321;
		}
		_iter_end_2077e2321:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_2211a9ce1_LitExpr> _2031dd6e4_buildLit(_2031dc4d4_exprBuilder* _self_, jule::Ptr<_21da1aa0b_Token> _6327_token) {
	return jule::new_ptr<_2211a9ce1_LitExpr>(_2211a9ce1_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_2211a478b_TypeDecl> _2031dda02_buildPrimitiveType(_2031dc4d4_exprBuilder* _self_, jule::Ptr<_21da1aa0b_Token>* _7038_token) {
	return _20320cea5_buildPrimType((*(_7038_token)));;
}



inline jule::Any _2031ddd10_buildSingle(_2031dc4d4_exprBuilder* _self_, jule::Ptr<_21da1aa0b_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_2077e3cb2:;
			{
				return jule::Any(_2031dd6e4_buildLit(_self_, _7434_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_2077e3d28:;
			{
				if (_7434_token.get()._field_Kind.equal("...", 3)) {
					return jule::Any(jule::new_ptr<_2211ab52e_VariadicExpr>(_2211ab52e_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type81);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU) || _match_expr == static_cast<jule::U32>(27LLU) || _match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_2077e3da0:;
			{
				return jule::Any(_2031e81b0_buildIdentExpr(&(_7434_token)), &__jule_any_type85);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_2077e3e27:;
			{
				return jule::Any(_2031dda02_buildPrimitiveType(_self_, &(_7434_token)), &__jule_any_type94);;
			}
		}
		_match_end_2077e3960:;
	};
	_2031dcca9_pushErr(_self_, _7434_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_2211aa96d_IdentExpr> _2031de11d_buildCppLinkedIdent(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _9543_tokens) {
	if (((*(_9543_tokens))[0LL].get()._field_Id != static_cast<jule::U32>(30LLU))) {
		return nullptr;;
	} else if (((*(_9543_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(20LLU))) {
		_2031dcca9_pushErr(_self_, (*(_9543_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031dd0c8_pushSuggestion(_self_, jule::Str("use dot (.) to access cpp-linked defines", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21da1aa0b_Token> _10317_token = (*(_9543_tokens))[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_2031dcca9_pushErr(_self_, (*(_9543_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031dd0c8_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2211aa96d_IdentExpr> _10917_expr = _2031e81b0_buildIdentExpr(&(_10317_token));;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;;
}



inline jule::Ptr<_2211ab177_UnaryExpr> _2031de42b_buildUnary(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _11433_tokens) {
	jule::Ptr<_21da1aa0b_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_2031dcca9_pushErr(_self_, _11517_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_21da1b215_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_2031dcca9_pushErr(_self_, _11517_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_2211ab177_UnaryExpr>(_2211ab177_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_2031e6e06_buildFromTokens(_self_, _11433_tokens)});;
}



inline jule::Ptr<_2211ac211_SubIdentExpr> _2031de739_buildObjSubIdent(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _13539_tokens) {
	jule::I32 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_21da1aa0b_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL, _13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_2031dcca9_pushErr(_self_, _13717_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_2211ac211_SubIdentExpr>(_2211ac211_SubIdentExpr{._field_Expr=_2031e6e06_buildFromTokens(_self_, _13539_tokens), ._field_Ident=_13717_identToken});;
}



inline jule::Ptr<_2211abc8d_NsSelectionExpr> _2031dea47_buildNsSubIdent(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _15039_tokens) {
	jule::Ptr<_2211abc8d_NsSelectionExpr> _15117_ns = jule::new_ptr<_2211abc8d_NsSelectionExpr>();;
	{
		auto expr = _15039_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2077ee6a2:;
		if (it != expr_end) {
			jule::I32 _15214_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
						_2031dcca9_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_2031dd0c8_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_2031dcca9_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_2031dd0c8_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_2077ee6a2:;
			++it;
			_15214_i++;
			goto _iter_begin_2077ee6a2;
		}
		_iter_end_2077ee6a2:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL, (_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;;
}



inline jule::Ptr<_2211a478b_TypeDecl> _2031ded55_buildType(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _16933_tokens) {
	jule::I32 _17017_i = 0LL;;
	jule::Ptr<_2211a478b_TypeDecl> _17118_t;;
	jule::Bool _17121_ok = false;;
	({
		__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType((*(_self_))._field_p, _16933_tokens, (&(_17017_i)), false);
		_17118_t = __jule_assign_result.__jule_result_arg0;
		_17121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17121_ok))) {
		_2031dcca9_pushErr(_self_, (*(_16933_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17017_i < (*(_16933_tokens)).len())) {
		_2031dcca9_pushErr(_self_, (*(_16933_tokens))[_17017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17118_t;;
}



inline jule::Any _2031e0163_buildSubIdent(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _18337_tokens) {
	jule::I32 _18413_i = ((*(_18337_tokens)).len() - 2LL);;
	jule::Ptr<_21da1aa0b_Token> _18513_token = (*(_18337_tokens))[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_207806599:;
			{
				return jule::Any(_2031de739_buildObjSubIdent(_self_, (*(_18337_tokens))), &__jule_any_type91);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_207806a94:;
			{
				return jule::Any(_2031dea47_buildNsSubIdent(_self_, _18337_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_207806b0a:;
			{
				if (_18513_token.get()._field_Kind.equal("]", 1)) {
					return jule::Any(_2031ded55_buildType(_self_, _18337_tokens), &__jule_any_type94);;
				};
			}
		}
		_match_end_20780692e:;
	};
	_2031dcca9_pushErr(_self_, _18513_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_2211ab52e_VariadicExpr> _2031e0471_buildVariadic(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _20136_tokens) {
	jule::Ptr<_21da1aa0b_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL, (_20136_tokens.len() - 1LL));
	return jule::new_ptr<_2211ab52e_VariadicExpr>(_2211ab52e_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_2031e6e06_buildFromTokens(_self_, _20136_tokens)});;
}



inline jule::Any _2031e077e_buildOpRight(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _21036_tokens) {
	jule::Ptr<_21da1aa0b_Token> _21117_token = (*(_21036_tokens))[((*(_21036_tokens)).len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_20780a933:;
			{
				(*(_21036_tokens))=(*(_21036_tokens)).slice(0LL, ((*(_21036_tokens)).len() - 1LL));
				jule::Any _21521_d = _2031e67da_build(_self_, _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_20780beea:;
						{
							_21521_d.cast_ptr<_2211acc8e_FnCallExpr>(&__jule_any_type111).get()._field_Exception=jule::new_ptr<_2211b4724_ScopeTree>(_2211b4724_ScopeTree{._field_Deferred=true, });
							return _21521_d;;
						}
					}
					_match_end_20780c12c:;
				};
			}
		}
		_match_end_20780a779:;
	};
	_2031dcca9_pushErr(_self_, _21117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_2211a9098_RangeExpr> _2031e0aae_buildBetweenParentheses(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_2031dcca9_pushErr(_self_, _23146_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_2031dd0c8_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_23146_tokens=_23146_tokens.slice(1LL, (_23146_tokens.len() - 1LL));
	return jule::new_ptr<_2211a9098_RangeExpr>(_2211a9098_RangeExpr{._field_Expr=_2031e6e06_buildFromTokens(_self_, _23146_tokens)});;
}



inline jule::Ptr<_2211ab8d6_CastExpr> _2031e0dcd_tryBuildCast(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _24336_tokens) {
	jule::I32 _24417_rangeN = 0LL;;
	{
		auto expr = _24336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207810130:;
		if (it != expr_end) {
			jule::I32 _24513_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_2078116e7:;
							{
								(_24417_rangeN)++;
								goto _iter_next_207810130;
							}
						}
						else {
							_case_begin_2078112eb:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_2078110dc:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_207810130;
				} else if (((_24513_i + 1LL) == (*(_24336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_21da1aa0b_Token>> _26421_typeTokens = (*(_24336_tokens)).slice(0LL, (_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_21da1aa0b_Token>> _26521_exprTokens = (*(_24336_tokens)).slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_21da1aa0b_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_27217_tok.get()._field_Kind.equal("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_2211ab8d6_CastExpr> _27721_cast = jule::new_ptr<_2211ab8d6_CastExpr>(_2211ab8d6_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_2031dcca9_pushErr(_self_, _26521_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_2031dd0c8_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_2031dcca9_pushErr(_self_, _26421_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_2031dd0c8_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL, (_26421_typeTokens.len() - 1LL));
					jule::I32 _29125_typeIndex = 0LL;;
					jule::Ptr<_2211a478b_TypeDecl> _29226_t;;
					jule::Bool _29229_ok = false;;
					({
						__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType((*(_self_))._field_p, &(_26421_typeTokens), (&(_29125_typeIndex)), true);
						_29226_t = __jule_assign_result.__jule_result_arg0;
						_29229_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_2031dcca9_pushErr(_self_, _26421_typeTokens[_29125_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I32 _30229_j = 0LL;;
						_2031ea8aa_range(&(_30229_j), jule::Str("(", 1), jule::Str(")", 1), &(_26521_exprTokens));
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL, _30229_j);
						_27721_cast.get()._field_Expr=_2031e6e06_buildFromTokens(_self_, _26521_exprTokens);
					};
				};
				return _27721_cast;;
			}
			_iter_next_207810130:;
			++it;
			_24513_i++;
			goto _iter_begin_207810130;
		}
		_iter_end_207810130:;
	};
	return nullptr;;
}



inline void _2031e1296_pushArg(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_2211a8cac_Expr>>* _31731_args, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _31750_tokens, jule::Ptr<_21da1aa0b_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_2031dcca9_pushErr(_self_, _31768_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031dd0c8_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_31731_args)) = jule::alloc_for_append((*(_31731_args)),1);(*(_31731_args)).__push(_2031e6e06_buildFromTokens(_self_, _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_2211a8cac_Expr>> _2031e15a4_buildArgs(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2211a8cac_Expr>> _33217_args = nullptr;;
	jule::I32 _33317_last = 0LL;;
	jule::I32 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL, (_32632_tokens.len() - 1LL));
	{
		auto expr = &(_32632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20781d748:;
		if (it != expr_end) {
			jule::I32 _33613_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_20781eeca:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_20781eace:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_20781e8c0:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_20781d748;
				};
				_2031e1296_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last, _33613_i), _33616_token);
				_33317_last=static_cast<jule::I32>((_33613_i + 1LL));
			}
			_iter_next_20781d748:;
			++it;
			_33613_i++;
			goto _iter_begin_20781d748;
		}
		_iter_end_20781d748:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_2031e1296_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[_33317_last]);
			};
		} else {
			_2031e1296_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;;
}



inline jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _2031e18b2_buildCallGenerics(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36840_tokens=_36840_tokens.slice(1LL, (_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _37418_parts;;
	jule::Slice<_21d6755de_Log> _37425_errs;;
	({
		__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_assign_result = _2031eb427_parts(&(_36840_tokens), static_cast<jule::U32>(8LLU), true);
		_37418_parts = __jule_assign_result.__jule_result_arg0;
		_37425_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_2211a478b_TypeDecl>>::alloc(0LL, _37418_parts.len());;
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_37425_errs);
	{
		auto expr = &(_37418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207824892:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_207824892;
				};
				jule::I32 _38121_j = 0LL;;
				jule::Ptr<_2211a478b_TypeDecl> _38222_generic;;
				({
					__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType((*(_self_))._field_p, &(_37721_part), (&(_38121_j)), true);
					_38222_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_38121_j < _37721_part.len())) {
					_2031dcca9_pushErr(_self_, _37721_part[_38121_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_207824892:;
			++it;
			goto _iter_begin_207824892;
		}
		_iter_end_207824892:;
	};
	return _37517_generics;;
}



inline jule::Ptr<_2211acc8e_FnCallExpr> _2031e1d13_buildFnCall(_2031dc4d4_exprBuilder* _self_, jule::Ptr<_21da1aa0b_Token>* _39235_token, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _39255_expr, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _39276_args) {
	return jule::new_ptr<_2211acc8e_FnCallExpr>(_2211acc8e_FnCallExpr{._field_Token=(*(_39235_token)), ._field_Expr=_2031e6e06_buildFromTokens(_self_, (*(_39255_expr))), ._field_Args=_2031e15a4_buildArgs(_self_, (*(_39276_args))), });;
}



inline jule::Any _2031e2121_buildParenthesesRange(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _40045_tokens) {
	jule::Ptr<_21da1aa0b_Token> _40117_token = (*(_40045_tokens))[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_2078289b7:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_207829336:;
						{
							jule::Ptr<_2211ab8d6_CastExpr> _40625_expr = _2031e0dcd_tryBuildCast(_self_, _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return jule::Any(_40625_expr, &__jule_any_type109);;
							};
						}
					}
					_match_end_20782916b:;
				};
			}
		}
		_match_end_20782880d:;
	};
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _41234_args_tokens;;
	({
		__jule_tuple_sx_21da1aa0b_Token__jule_tuple_sx_21da1aa0b_Token __jule_assign_result = _2031eab52_rangeLast(_40045_tokens);
		_41218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41218_exprTokens.len() == 0LL)) {
		return jule::Any(_2031e0aae_buildBetweenParentheses(_self_, _41234_args_tokens), &__jule_any_type104);;
	};
	return jule::Any(_2031e1d13_buildFnCall(_self_, &(_40117_token), &(_41218_exprTokens), &(_41234_args_tokens)), &__jule_any_type111);;
}



inline jule::Ptr<_2211aa4ea_UnsafeExpr> _2031e242e_buildUnsafeExpr(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _42138_tokens) {
	jule::Ptr<_21da1aa0b_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I32 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _42517_rangeTokens = _2031ea8aa_range(&(_42417_i), jule::Str("{", 1), jule::Str("}", 1), &(_42138_tokens));;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_2031dcca9_pushErr(_self_, _42138_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_2211aa4ea_UnsafeExpr>(_2211aa4ea_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_2031e6e06_buildFromTokens(_self_, _42517_rangeTokens)});;
}



inline jule::Ptr<_2211b621a_FnDecl> _2031e273c_buildAnonFn(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _43635_tokens) {
	jule::Ptr<_2211b621a_FnDecl> _43717_f = _203203bd2_buildFn((*(_self_))._field_p, _43635_tokens, false, false);;
	if ((!(_2211b656c_IsAnon(_43717_f.ptr())))) {
		_2031dcca9_pushErr(_self_, _43717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031dd0c8_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _43717_f;;
}



inline jule::Any _2031e2a4a_buildUnsafe(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _44535_tokens) {
	{
		auto &_match_expr{ (*(_44535_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_207830161:;
			{
				return jule::Any(_2031e273c_buildAnonFn(_self_, _44535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_2078305d4:;
			{
				return jule::Any(_2031e242e_buildUnsafeExpr(_self_, (*(_44535_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_20783055c:;
	};
}



inline void _2031e2e13_pushRangeLitPart(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _45539_part, jule::Ptr<_21da1aa0b_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>>* _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_2031dcca9_pushErr(_self_, _4569_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031dd0c8_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_45634_parts)) = jule::alloc_for_append((*(_45634_parts)),1);(*(_45634_parts)).__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _2031e3243_getBraceRangeLitExprParts(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _47217_parts = nullptr;;
	jule::I32 _47417_last = 0LL;;
	jule::I32 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL, (_46648_tokens.len() - 1LL));
	{
		auto expr = &(_46648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2078345d8:;
		if (it != expr_end) {
			jule::I32 _47713_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_207835d6a:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_20783596e:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_207835760:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_2078345d8;
				};
				_2031e2e13_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last, _47713_i), _47716_token, &(_47217_parts));
				_47417_last=static_cast<jule::I32>((_47713_i + 1LL));
			}
			_iter_next_2078345d8:;
			++it;
			_47713_i++;
			goto _iter_begin_2078345d8;
		}
		_iter_end_2078345d8:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_2031e2e13_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[_47417_last], &(_47217_parts));
			};
		} else {
			_2031e2e13_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[(_47417_last - 1LL)], &(_47217_parts));
		};
	};
	return _47217_parts;;
}



inline jule::Ptr<_2211ad71d_FieldExprPair> _2031e3562_buildFieldExprPair(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_2031dcca9_pushErr(_self_, _50841_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2211ad71d_FieldExprPair> _51317_pair = jule::new_ptr<_2211ad71d_FieldExprPair>(_2211ad71d_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_2031e6e06_buildFromTokens(_self_, _50841_tokens);
	return _51317_pair;;
}



inline jule::Ptr<_2211a8cac_Expr> _2031e3870_buildStructLitExpr(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _52142_tokens) {
	jule::Ptr<_21da1aa0b_Token> _52217_token = (*(_52142_tokens))[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U32>(2LLU)) && ((*(_52142_tokens)).len() > 1LL))) {
		_52217_token=(*(_52142_tokens))[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U32>(11LLU))) {
			return jule::new_ptr<_2211a8cac_Expr>(_2211a8cac_Expr{._field_Token=_52217_token, ._field_End=(*(_52142_tokens))[((*(_52142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_2031e3562_buildFieldExprPair(_self_, (*(_52142_tokens))), &__jule_any_type83)});;
		};
	};
	return _2031e6e06_buildFromTokens(_self_, (*(_52142_tokens)));;
}



inline jule::Slice<jule::Ptr<_2211a8cac_Expr>> _2031e3b7d_buildStructLitExprs(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _53717_parts = _2031e3243_getBraceRangeLitExprParts(_self_, (*(_53643_tokens)));;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2211a8cac_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_2211a8cac_Expr>>::alloc(0LL, _53717_parts.len());;
	{
		auto expr = &(_53717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20783d966:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_2031e3870_buildStructLitExpr(_self_, &(_54321_part)));;
			}
			_iter_next_20783d966:;
			++it;
			goto _iter_begin_20783d966;
		}
		_iter_end_20783d966:;
	};
	return _54217_pairs;;
}



inline jule::Ptr<_2211ade6b_StructLit> _2031e3ead_buildTypedStructLiteral(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _54946_tokens) {
	jule::I32 _55017_i = 0LL;;
	jule::Ptr<_2211a478b_TypeDecl> _55118_t;;
	jule::Bool _55121_ok = false;;
	({
		__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType((*(_self_))._field_p, &(_54946_tokens), (&(_55017_i)), true);
		_55118_t = __jule_assign_result.__jule_result_arg0;
		_55121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_55121_ok))) {
		return nullptr;;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_2031dcca9_pushErr(_self_, _54946_tokens[_55017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_21da1aa0b_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_56013_token.get()._field_Kind.equal("{", 1)))) {
		_2031dcca9_pushErr(_self_, _56013_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_2211ade6b_StructLit>(_2211ade6b_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_2031e3b7d_buildStructLitExprs(_self_, &(_54946_tokens))});;
}



inline jule::Ptr<_2211a8cac_Expr> _2031e42cc_buildBraceLitPart(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _57341_tokens) {
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _57425_r;;
	({
		__jule_tuple_sx_21da1aa0b_Token__jule_tuple_sx_21da1aa0b_Token __jule_assign_result = _2031e7b71_splitDelim(_57341_tokens, static_cast<jule::U32>(11LLU));
		_57418_l = __jule_assign_result.__jule_result_arg0;
		_57425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_2211a8cac_Expr>(_2211a8cac_Expr{._field_Token=(*(_57341_tokens))[0LL], ._field_End=(*(_57341_tokens))[((*(_57341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_2211aebb4_KeyValPair>(_2211aebb4_KeyValPair{._field_Key=_2031e6e06_buildFromTokens(_self_, _57418_l), ._field_Val=_2031e6e06_buildFromTokens(_self_, _57425_r), ._field_Colon=(*(_57341_tokens))[_57418_l.len()]}), &__jule_any_type84)});;
	};
	return _2031e6e06_buildFromTokens(_self_, (*(_57341_tokens)));;
}



inline jule::Ptr<_2211ae3de_BraceLit> _2031e45da_buildBraceLit(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _59037_tokens) {
	jule::Ptr<_2211ae3de_BraceLit> _59117_lit = jule::new_ptr<_2211ae3de_BraceLit>(_2211ae3de_BraceLit{._field_Token=(*(_59037_tokens))[0LL], ._field_End=(*(_59037_tokens))[((*(_59037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _59617_parts = _2031e3243_getBraceRangeLitExprParts(_self_, (*(_59037_tokens)));;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_2211a8cac_Expr>>::alloc(0LL, _59617_parts.len());
	{
		auto expr = &(_59617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207848168:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_2031e42cc_buildBraceLitPart(_self_, &(_60221_part)));;
			}
			_iter_next_207848168:;
			++it;
			goto _iter_begin_207848168;
		}
		_iter_end_207848168:;
	};
	return _59117_lit;;
}



inline jule::Any _2031e48e8_buildBraceRange(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _60939_tokens) {
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _61018_exprTokens;;
	jule::I32 _61030_rangeN = 0;;
	({
		__jule_tuple_sx_21da1aa0b_Token__jule_tuple_int __jule_assign_result = _2031e8457_getRangeExprTokens(_60939_tokens);
		_61018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_61030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_207849a93:;
			{
				return jule::Any(_2031e45da_buildBraceLit(_self_, _60939_tokens), &__jule_any_type112);;
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_207849b1a:;
			{
				_2031dcca9_pushErr(_self_, (*(_60939_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_207848a3c:;
	};
	jule::Ptr<_21da1aa0b_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U32>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL, (_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _2031e67da_build(_self_, &(_61018_exprTokens));;
		if ((_62421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type == &__jule_any_type111) {
				_case_begin_20784cb0c:;
				{
					(*(_60939_tokens))=(*(_60939_tokens)).slice((_61018_exprTokens.len() + 1LL));
					jule::I32 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_21da1aa0b_Token>> _63225_rangeTokens = _2031ea8aa_range(&(_63125_i), jule::Str("{", 1), jule::Str("}", 1), _60939_tokens);;
					jule::Ptr<_2211acc8e_FnCallExpr> _63325_model = _62421_d.cast_ptr<_2211acc8e_FnCallExpr>(&__jule_any_type111);;
					if (_2211ad366_Ignored(_63325_model.ptr())) {
						_2031dcca9_pushErr(_self_, _62113_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_2031dd0c8_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_2031ee1d8_buildScope((*(_self_))._field_p, &(_63225_rangeTokens), (*(_60939_tokens))[(_63125_i - 1LL)]);
					return _62421_d;;
				}
			}
			else {
				_case_begin_20784ccd8:;
				{
					_2031dcca9_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_20784cc1c:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_20785243b:;
			{
				return _2031e2a4a_buildUnsafe(_self_, _60939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_2078524a2:;
			{
				return jule::Any(_2031e273c_buildAnonFn(_self_, _60939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_2078522c6:;
			{
				return jule::Any(_2031e3ead_buildTypedStructLiteral(_self_, (*(_60939_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_20784eee9:;
			{
				_2031dcca9_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2078516d2:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _2031e4c06_getEnumerableParts(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL, (_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _66318_parts;;
	jule::Slice<_21d6755de_Log> _66325_errors;;
	({
		__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_assign_result = _2031eb427_parts(&(_66141_tokens), static_cast<jule::U32>(8LLU), true);
		_66318_parts = __jule_assign_result.__jule_result_arg0;
		_66325_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;;
}



inline jule::Ptr<_2211b039b_SliceExpr> _2031e5014_buildSlice(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _66833_tokens) {
	jule::Ptr<_2211b039b_SliceExpr> _66917_slc = jule::new_ptr<_2211b039b_SliceExpr>(_2211b039b_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _67417_parts = _2031e4c06_getEnumerableParts(_self_, _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_2211a8cac_Expr>>::alloc(0LL, _67417_parts.len());
	{
		auto expr = &(_67417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20785686e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_20785686e;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_2031e6e06_buildFromTokens(_self_, _68021_p));;
			}
			_iter_next_20785686e:;
			++it;
			goto _iter_begin_20785686e;
		}
		_iter_end_20785686e:;
	};
	return _66917_slc;;
}



inline jule::Ptr<_2211b0c1a_IndexingExpr> _2031e5465_buildIndexing(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _69113_tokens, jule::Ptr<_21da1aa0b_Token> _69135_errorToken) {
	jule::Ptr<_21da1aa0b_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL, (_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_2031dcca9_pushErr(_self_, _69135_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2211a8cac_Expr> _69817_expr = _2031e6e06_buildFromTokens(_self_, _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2211a8cac_Expr> _70217_index = _2031e6e06_buildFromTokens(_self_, _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_2211b0c1a_IndexingExpr>(_2211b0c1a_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});;
}



inline jule::Ptr<_2211b1325_SlicingExpr> _2031e5a09_buildSlicing(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _71436_exprTokens, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _71463_start, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _71514_to, jule::Ptr<_21da1aa0b_Token>* _71533_errorToken, jule::Ptr<_21da1aa0b_Token> _71557_end) {
	jule::Ptr<_2211b1325_SlicingExpr> _71617_slc = jule::new_ptr<_2211b1325_SlicingExpr>(_2211b1325_SlicingExpr{._field_Token=(*(_71533_errorToken)), ._field_End=_71557_end, ._field_Expr=_2031e6e06_buildFromTokens(_self_, (*(_71436_exprTokens))), });;
	if (((*(_71463_start)).len() > 0LL)) {
		_71617_slc.get()._field_Start=_2031e6e06_buildFromTokens(_self_, (*(_71463_start)));
	};
	if (((*(_71514_to)).len() > 0LL)) {
		_71617_slc.get()._field_To=_2031e6e06_buildFromTokens(_self_, (*(_71514_to)));
	};
	return _71617_slc;;
}



inline jule::Any _2031e5d17_buildBracketRange(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _73040_tokens) {
	jule::Ptr<_21da1aa0b_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _73218_exprTokens;;
	jule::I32 _73230_rangeN = 0;;
	({
		__jule_tuple_sx_21da1aa0b_Token__jule_tuple_int __jule_assign_result = _2031e8457_getRangeExprTokens(&(_73040_tokens));
		_73218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73218_exprTokens.len() == 0LL)) {
		return jule::Any(_2031e5014_buildSlice(_self_, _73040_tokens), &__jule_any_type99);;
	} else if ((_73230_rangeN > 0LL)) {
		_2031dcca9_pushErr(_self_, _73117_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _74717_splitTokens = _73040_tokens.slice(1LL, (_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _74829_to;;
	({
		__jule_tuple_sx_21da1aa0b_Token__jule_tuple_sx_21da1aa0b_Token __jule_assign_result = _2031e7b71_splitDelim(&(_74717_splitTokens), static_cast<jule::U32>(11LLU));
		_74818_start = __jule_assign_result.__jule_result_arg0;
		_74829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return jule::Any(_2031e5a09_buildSlicing(_self_, &(_73218_exprTokens), &(_74818_start), &(_74829_to), &(_73117_errorToken), _73040_tokens[(_73040_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_2031e5465_buildIndexing(_self_, _73218_exprTokens, _73040_tokens, _73117_errorToken), &__jule_any_type107);;
}



inline jule::Any _2031e6125_buildData(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _75533_tokens) {
	{
		auto _match_expr{ (*(_75533_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_207863480:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_207863518:;
			{
				return _2031ddd10_buildSingle(_self_, (*(_75533_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_20786357e:;
			{
				if (((*(_75533_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(30LLU))) {
					return jule::Any(_2031de11d_buildCppLinkedIdent(_self_, _75533_tokens), &__jule_any_type85);;
				};
			}
		}
		_match_end_207863282:;
	};
	jule::Ptr<_21da1aa0b_Token> _76717_token = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U32>(7LLU)) && _76717_token.get()._field_Kind.equal("...", 3))) {
		return jule::Any(_2031e0471_buildVariadic(_self_, (*(_75533_tokens))), &__jule_any_type81);;
	};
	_76717_token=(*(_75533_tokens))[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_20786672a:;
			{
				if ((((*(_75533_tokens)).len() > 1LL) && _76717_token.get()._field_Kind.equal("*", 1))) {
					_76717_token=(*(_75533_tokens))[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U32>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U32>(34LLU)))) {
						return jule::Any(_2031ded55_buildType(_self_, _75533_tokens), &__jule_any_type94);;
					};
				};
				return jule::Any(_2031de42b_buildUnary(_self_, (*(_75533_tokens))), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_2078667a2:;
			{
				if (((*(_75533_tokens)).len() < 3LL)) {
					goto _match_end_20786664d;
				};
				if (((*(_75533_tokens)).len() > 3LL)) {
					jule::Ptr<_21da1aa0b_Token> _78921_t = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U32>(3LLU)) && _78921_t.get()._field_Kind.equal(")", 1))) {
						goto _match_end_20786664d;
					};
				};
				jule::Ptr<_21da1aa0b_Token> _79517_next = (*(_75533_tokens))[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_79517_next.get()._field_Kind.equal("]", 1)))) {
					goto _match_end_20786664d;
				};
				return jule::Any(_2031ded55_buildType(_self_, _75533_tokens), &__jule_any_type94);;
			}
		}
		_match_end_20786664d:;
	};
	_76717_token=(*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_207866cad:;
			{
				return _2031e0163_buildSubIdent(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_20786c214:;
			{
				return jule::Any(_2031ded55_buildType(_self_, _75533_tokens), &__jule_any_type94);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_20786c27a:;
			{
				return _2031e077e_buildOpRight(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_20786c2e1:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_20786da40:;
						{
							return _2031e2121_buildParenthesesRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_20786dab7:;
						{
							return _2031e48e8_buildBraceRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_20786db3e:;
						{
							return _2031e5d17_buildBracketRange(_self_, (*(_75533_tokens)));;
						}
					}
					_match_end_20786d545:;
				};
			}
		}
		_match_end_207866c58:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U32>(32LLU))) {
		return jule::Any(_2031ded55_buildType(_self_, _75533_tokens), &__jule_any_type94);;
	};
	_2031dcca9_pushErr(_self_, _76717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _2031e64cc_buildBinop(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _83134_tokens, jule::I32 _83152_i) {
	jule::Ptr<_21da1aa0b_Token> _83217_op = (*(_83134_tokens))[_83152_i];;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _83317_leftTokens = (*(_83134_tokens)).slice(0LL, _83152_i);;
	if ((_2031e7258_isTypeOp(&(_83217_op.get()._field_Kind)) && _2031e7544_isTypeRange(&(_83317_leftTokens)))) {
		return jule::Any(_2031ded55_buildType(_self_, _83134_tokens), &__jule_any_type94);;
	};
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _83817_rightTokens = (*(_83134_tokens)).slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_2031dcca9_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031dd0c8_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_2031dcca9_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031dd0c8_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_2211ac684_BinopExpr>(_2211ac684_BinopExpr{._field_Left=_2031e6e06_buildFromTokens(_self_, _83317_leftTokens), ._field_Right=_2031e6e06_buildFromTokens(_self_, _83817_rightTokens), ._field_Op=_83217_op}), &__jule_any_type113);;
}



inline jule::Any _2031e67da_build(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _85629_tokens) {
	if (((*(_85629_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(40LLU))) {
		return jule::Any(_2031ded55_buildType(_self_, _85629_tokens), &__jule_any_type94);;
	};
	jule::I32 _86013_i = _2031e7e18_findLowestPrecOp(_85629_tokens);;
	if ((_86013_i == -1LL)) {
		return _2031e6125_buildData(_self_, _85629_tokens);;
	};
	return _2031e64cc_buildBinop(_self_, _85629_tokens, _86013_i);;
}



inline jule::Any _2031e6ae8_buildKind(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _86733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _86818_parts;;
	jule::Slice<_21d6755de_Log> _86825_errors;;
	({
		__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_assign_result = _2031eb427_parts(_86733_tokens, static_cast<jule::U32>(8LLU), true);
		_86818_parts = __jule_assign_result.__jule_result_arg0;
		_86825_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86825_errors != nullptr)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_86825_errors);
		return nullptr;;
	} else if ((_86818_parts.len() > 1LL)) {
		return jule::Any(_2031dd3d6_buildTuple(_self_, &(_86818_parts)), &__jule_any_type86);;
	};
	return _2031e67da_build(_self_, _86733_tokens);;
}



inline jule::Ptr<_2211a8cac_Expr> _2031e6e06_buildFromTokens(_2031dc4d4_exprBuilder* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _87838_tokens) {
	if ((_87838_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _88217_kind = _2031e6ae8_buildKind(_self_, &(_87838_tokens));;
	if ((_88217_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_2211a8cac_Expr>(_2211a8cac_Expr{._field_Token=_87838_tokens[0LL], ._field_End=_87838_tokens[(_87838_tokens.len() - 1LL)], ._field_Kind=_88217_kind});;
}







std::ostream &operator<<(std::ostream &_Stream, _2031dc4d4_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2031e8d1a_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _2031eca44_stop(_2031ec714_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _2031ecca8_stopped(_2031ec714_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _2031ed171_pushErr(_2031ec714_parser* _self_, jule::Ptr<_21da1aa0b_Token> _28326_token, jule::Str _28341_fmt, jule::Slice<jule::Any> _28354_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_2031ebaa9_compilerErr(&(_28326_token), &(_28341_fmt), _28354_args));;
}



inline void _2031ed490_pushSuggestion(_2031ec714_parser* _self_, jule::Str _28833_fmt, jule::Slice<jule::Any> _28846_args) {
	{
		_2031ebed8_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _28833_fmt, _28846_args);
	};
}



inline jule::Ptr<_2211a8cac_Expr> _2031ed79d_buildExpr(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _29234_tokens) {
	return _2031e6e06_buildFromTokens(_self_.get()._field_ep.ptr(), (*(_29234_tokens)));;
}



inline jule::Ptr<_221171307_Directive> _2031edaab_buildDirective(_2031ec714_parser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _29637_tokens) {
	if ((_29637_tokens.len() == 1LL)) {
		_2031ed171_pushErr(_self_, _29637_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29637_tokens[1LL].get()._field_Column != (_29637_tokens[0LL].get()._field_Column + 1LL))) {
		_2031ed171_pushErr(_self_, _29637_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_221171307_Directive>(_221171307_Directive{._field_Tag=_29637_tokens[1LL], ._field_Args=_29637_tokens.slice(2LL)});;
}



inline void _2031edd31_pushDirective(_2031ec714_parser* _self_, jule::Ptr<_221171307_Directive> _31136_d) {
	if ((_31136_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2078a1b61:;
		if (it != expr_end) {
			jule::Ptr<_221171307_Directive> _31616_pd = *it;
			{
				if ((_31136_d.get()._field_Tag.get()._field_Kind == _31616_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_2078a1b61:;
			++it;
			goto _iter_begin_2078a1b61;
		}
		_iter_end_2078a1b61:;
	};
	(*(_self_))._field_directives = jule::alloc_for_append((*(_self_))._field_directives,1);(*(_self_))._field_directives.__push(_31136_d);;
}



inline jule::Ptr<_2211b4724_ScopeTree> _2031ee1d8_buildScope(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _32435_tokens, jule::Ptr<_21da1aa0b_Token> _32457_end) {
	jule::Ptr<_2211b4724_ScopeTree> _32517_s = _2031ce5c5_newScope();;
	_32517_s.get()._field_End=_32457_end;
	_2031d1000_scopeParser _32717_sp = _2031d1000_scopeParser{._field_p=_self_, };;
	_2031dba88_build(&_32717_sp, _32435_tokens, &(_32517_s));
	return _32517_s;;
}



inline __jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool _2031ee639__buildType(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _33442_tokens, jule::I32* _33513_i, jule::Bool _33522_err) {
	__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_20320d439_typeBuilder _33617_tb = _20320d439_typeBuilder{._field_p=_self_, ._field_tokens=(*(_33442_tokens)), ._field_i=_33513_i, ._field_err=_33522_err};;
	jule::Ptr<_2211a478b_TypeDecl> _34218_decl;;
	jule::Bool _34224_ok = false;;
	({
		__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2032116d4_build(&_33617_tb);
		_34218_decl = __jule_assign_result.__jule_result_arg0;
		_34224_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34218_decl;
	__jule_func_result.__jule_result_arg1 = _34224_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool _2031eea8a_buildType(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _34741_tokens, jule::I32* _34813_i, jule::Bool _34822_err) {
	__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_21da1aa0b_Token> _34913_token = (*(_34741_tokens))[(*(_34813_i))];;
	jule::Ptr<_2211a478b_TypeDecl> _35018_t;;
	jule::Bool _35021_ok = false;;
	({
		__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031ee639__buildType(_self_, _34741_tokens, _34813_i, _34822_err);
		_35018_t = __jule_assign_result.__jule_result_arg0;
		_35021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_34822_err && (!(_35021_ok)))) {
		_2031ed171_pushErr(_self_.ptr(), _34913_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35018_t;
	__jule_func_result.__jule_result_arg1 = _35021_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_2211baa5a_TypeAliasDecl> _2031eed98_buildTypeAliasDecl(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _35743_tokens) {
	jule::I32 _35817_i = 1LL;;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_2031ed171_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2211baa5a_TypeAliasDecl> _36317_tad = jule::new_ptr<_2211baa5a_TypeAliasDecl>(_2211baa5a_TypeAliasDecl{._field_Token=(*(_35743_tokens))[1LL], ._field_Ident=(*(_35743_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_21da1aa0b_Token> _36717_token = (*(_35743_tokens))[_35817_i];;
	if ((_36717_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_2031ed171_pushErr(_self_.ptr(), _36717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_35817_i)++;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_2031ed171_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	_36717_token=(*(_35743_tokens))[_35817_i];
	if ((_36717_token.get()._field_Id != static_cast<jule::U32>(11LLU))) {
		_2031ed171_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	(_35817_i)++;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_2031ed171_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	jule::Ptr<_2211a478b_TypeDecl> _38818_t;;
	jule::Bool _38821_ok = false;;
	({
		__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType(_self_, _35743_tokens, (&(_35817_i)), true);
		_38818_t = __jule_assign_result.__jule_result_arg0;
		_38821_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36317_tad.get()._field_Kind=_38818_t;
	if ((_38821_ok && (_35817_i < (*(_35743_tokens)).len()))) {
		_2031ed171_pushErr(_self_.ptr(), (*(_35743_tokens))[_35817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_36317_tad.get()._field_Public=_20320c3c2_isPub(&(_36317_tad.get()._field_Ident));
	return _36317_tad;;
}



inline void _2032001b7_buildVarTypeAndExpr(jule::Ptr<_2031ec714_parser> _self_, jule::Ptr<_2211b71e9_VarDecl>* _39744_v, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _39762_tokens) {
	jule::I32 _39817_i = 0LL;;
	jule::Ptr<_21da1aa0b_Token> _39917_tok = (*(_39762_tokens))[_39817_i];;
	if ((_39917_tok.get()._field_Id == static_cast<jule::U32>(11LLU))) {
		(_39817_i)++;
		if (((_39817_i >= (*(_39762_tokens)).len()) || (((*(_39762_tokens))[_39817_i].get()._field_Id == static_cast<jule::U32>(7LLU)) && (*(_39762_tokens))[_39817_i].get()._field_Kind.equal("=", 1)))) {
			_2031ed171_pushErr(_self_.ptr(), _39917_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_2211a478b_TypeDecl> _40722_t;;
		jule::Bool _40725_ok = false;;
		({
			__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType(_self_, _39762_tokens, (&(_39817_i)), true);
			_40722_t = __jule_assign_result.__jule_result_arg0;
			_40725_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40725_ok) {
			(*(_39744_v)).get()._field_Kind=_40722_t;
			if ((_39817_i >= (*(_39762_tokens)).len())) {
				return;;
			};
			_39917_tok=(*(_39762_tokens))[_39817_i];
		};
	};
	if ((_39917_tok.get()._field_Id == static_cast<jule::U32>(7LLU))) {
		if ((!_39917_tok.get()._field_Kind.equal("=", 1))) {
			_2031ed171_pushErr(_self_.ptr(), _39917_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_21da1aa0b_Token>> _42221_exprTokens = (*(_39762_tokens)).slice((_39817_i + 1LL));;
		if ((_42221_exprTokens.len() == 0LL)) {
			_2031ed171_pushErr(_self_.ptr(), _39917_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return;;
		};
		(*(_39744_v)).get()._field_Expr=_2031ed79d_buildExpr(_self_, &(_42221_exprTokens));
	} else {
		_2031ed171_pushErr(_self_.ptr(), _39917_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _2032004d6_buildVarCommon(jule::Ptr<_2031ec714_parser> _self_, jule::Ptr<_2211b71e9_VarDecl>* _43339_v, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _43356_tokens) {
	(*(_43339_v)).get()._field_Token=_43356_tokens[0LL];
	if (((*(_43339_v)).get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_2031ed171_pushErr(_self_.ptr(), (*(_43339_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_43339_v)).get()._field_Ident=(*(_43339_v)).get()._field_Token.get()._field_Kind;
	(*(_43339_v)).get()._field_Public=_20320c3c2_isPub(&((*(_43339_v)).get()._field_Ident));
	(*(_43339_v)).get()._field_Kind=nullptr;
	if ((_43356_tokens.len() > 1LL)) {
		_43356_tokens=_43356_tokens.slice(1LL);
		_2032001b7_buildVarTypeAndExpr(_self_, _43339_v, &(_43356_tokens));
	};
}



inline void _20320089e_buildVarBegin(_2031ec714_parser* _self_, jule::Ptr<_2211b71e9_VarDecl>* _44937_v, jule::I32* _44955_i, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _44964_tokens) {
	jule::Ptr<_21da1aa0b_Token> _45013_tok = (*(_44964_tokens))[(*(_44955_i))];;
	{
		auto &_match_expr{ _45013_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_2078b9904:;
			{
				(*(_44937_v)).get()._field_Statically=true;
				goto _case_begin_2078ba691;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_2078ba691:;
			{
				((*(_44955_i)))++;
				if (((*(_44955_i)) >= (*(_44964_tokens)).len())) {
					_2031ed171_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_44964_tokens))[(*(_44955_i))].get()._field_Id == static_cast<jule::U32>(35LLU))) {
					(*(_44937_v)).get()._field_Mutable=true;
					((*(_44955_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_2078b9e21:;
			{
				((*(_44955_i)))++;
				(*(_44937_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_2078b9d66:;
			{
				_2031ed171_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_2078b9be0:;
	};
	if (((*(_44955_i)) >= (*(_44964_tokens)).len())) {
		_2031ed171_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_2211b71e9_VarDecl> _203200bac_buildVar(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _47932_tokens) {
	jule::I32 _48017_i = 0LL;;
	jule::Ptr<_2211b71e9_VarDecl> _48117_v = jule::new_ptr<_2211b71e9_VarDecl>(_2211b71e9_VarDecl{._field_Token=_47932_tokens[0LL], });;
	_20320089e_buildVarBegin(_self_.ptr(), &(_48117_v), &(_48017_i), &(_47932_tokens));
	if ((_48017_i >= _47932_tokens.len())) {
		return nullptr;;
	};
	_47932_tokens=_47932_tokens.slice(_48017_i);
	if (((_47932_tokens[0LL].get()._field_Id == static_cast<jule::U32>(7LLU)) && _47932_tokens[0LL].get()._field_Kind.equal("&", 1))) {
		_48117_v.get()._field_Reference=true;
		if ((_47932_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_47932_tokens=_47932_tokens.slice(1LL);
	};
	_2032004d6_buildVarCommon(_self_, &(_48117_v), _47932_tokens);
	return _48117_v;;
}



inline jule::Ptr<_2211b1a84_GenericDecl> _203200eba_buildGeneric(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _50137_tokens) {
	jule::Ptr<_2211b1a84_GenericDecl> _50217_g = jule::new_ptr<_2211b1a84_GenericDecl>(_2211b1a84_GenericDecl{._field_Token=(*(_50137_tokens))[0LL], });;
	if ((_50217_g.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_2031ed171_pushErr(_self_.ptr(), _50217_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_50217_g.get()._field_Ident=_50217_g.get()._field_Token.get()._field_Kind;
	if (((*(_50137_tokens)).len() > 1LL)) {
		if (((*(_50137_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(11LLU))) {
			_2031ed171_pushErr(_self_.ptr(), (*(_50137_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_50137_tokens)).len() == 2LL)) {
			_2031ed171_pushErr(_self_.ptr(), (*(_50137_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_21da1aa0b_Token>> _51921_constraintTokens = (*(_50137_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _52022_parts;;
		jule::Slice<_21d6755de_Log> _52029_errors;;
		({
			__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_assign_result = _2031eb03c_partsKind(&(_51921_constraintTokens), jule::Str("|", 1), true);
			_52022_parts = __jule_assign_result.__jule_result_arg0;
			_52029_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52029_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52029_errors);
			return nullptr;;
		};
		_50217_g.get()._field_Constraint=jule::new_ptr<_2211b1611_Constraint>(_2211b1611_Constraint{._field_Mask=jule::Slice<jule::Ptr<_2211a478b_TypeDecl>>::alloc(0LL, _52022_parts.len())});
		{
			auto expr = &(_52022_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2078c6d73:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_21da1aa0b_Token>> _52625_part = *it;
				{
					jule::I32 _52725_i = 0LL;;
					jule::Ptr<_2211a478b_TypeDecl> _52826_kind;;
					({
						__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType(_self_, &(_52625_part), (&(_52725_i)), true);
						_52826_kind = __jule_assign_result.__jule_result_arg0;
					});
					_50217_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50217_g.get()._field_Constraint.get()._field_Mask,1);_50217_g.get()._field_Constraint.get()._field_Mask.__push(_52826_kind);;
					if ((_52725_i < _52625_part.len())) {
						_2031ed171_pushErr(_self_.ptr(), _52625_part[_52725_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_2078c6d73:;
				++it;
				goto _iter_begin_2078c6d73;
			}
			_iter_end_2078c6d73:;
		};
	};
	return _50217_g;;
}



inline jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>> _203201372_buildGenerics(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _53838_tokens, jule::Ptr<_21da1aa0b_Token>* _53857_errorToken) {
	if (((*(_53838_tokens)).len() == 0LL)) {
		_2031ed171_pushErr(_self_.ptr(), (*(_53857_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _54418_parts;;
	jule::Slice<_21d6755de_Log> _54425_errors;;
	({
		__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_assign_result = _2031eb427_parts(_53838_tokens, static_cast<jule::U32>(8LLU), true);
		_54418_parts = __jule_assign_result.__jule_result_arg0;
		_54425_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54425_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54425_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>> _55017_generics = jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>>::alloc(0LL, _54418_parts.len());;
	{
		auto expr = &(_54418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2078cad22:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _55121_part = *it;
			{
				_55017_generics = jule::alloc_for_append(_55017_generics,1);_55017_generics.__push(_203200eba_buildGeneric(_self_, &(_55121_part)));;
			}
			_iter_next_2078cad22:;
			++it;
			goto _iter_begin_2078cad22;
		}
		_iter_end_2078cad22:;
	};
	return _55017_generics;;
}



inline jule::Ptr<_2211b4dea_ParamDecl> _203201680_buildSelfParam(_2031ec714_parser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _55837_tokens) {
	if ((_55837_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_2211b4dea_ParamDecl> _56317_param = jule::new_ptr<_2211b4dea_ParamDecl>();;
	jule::I32 _56617_i = 0LL;;
	if ((_55837_tokens[_56617_i].get()._field_Id == static_cast<jule::U32>(35LLU))) {
		_56317_param.get()._field_Mutable=true;
		(_56617_i)++;
		if ((_56617_i >= _55837_tokens.len())) {
			_2031ed171_pushErr(_self_, _55837_tokens[(_56617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (_55837_tokens[_56617_i].get()._field_Kind.equal("&", 1)) {
		_56317_param.get()._field_Ident=jule::Str("&", 1);
		(_56617_i)++;
		if ((_56617_i >= _55837_tokens.len())) {
			_2031ed171_pushErr(_self_, _55837_tokens[(_56617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_55837_tokens[_56617_i].get()._field_Id == static_cast<jule::U32>(27LLU))) {
		(_56317_param.get()._field_Ident).append("self", 4);
		_56317_param.get()._field_Token=_55837_tokens[_56617_i];
		(_56617_i)++;
		if ((_56617_i < _55837_tokens.len())) {
			_2031ed171_pushErr(_self_, _55837_tokens[_56617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	return _56317_param;;
}



inline void _203201a48_paramTypeBegin(_2031ec714_parser* _self_, jule::Ptr<_2211b4dea_ParamDecl>* _59738_param, jule::I32* _59762_i, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _59771_tokens) {
	for (; ((*(_59762_i)) < (*(_59771_tokens)).len()); ((*(_59762_i)))++) {
		{
			jule::Ptr<_21da1aa0b_Token> _59917_token = (*(_59771_tokens))[(*(_59762_i))];;
			if ((_59917_token.get()._field_Id != static_cast<jule::U32>(7LLU))) {
				return;;
			} else if ((!_59917_token.get()._field_Kind.equal("...", 3))) {
				return;;
			};
			if ((*(_59738_param)).get()._field_Variadic) {
				_2031ed171_pushErr(_self_, _59917_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_2078d2a2c;
			};
			(*(_59738_param)).get()._field_Variadic=true;
		}
	_iter_next_2078d2a2c:;
	}
	_iter_end_2078d2a2c:;;
}



inline void _203201d67_buildParamType(jule::Ptr<_2031ec714_parser> _self_, jule::Ptr<_2211b4dea_ParamDecl>* _61439_param, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _61463_tokens) {
	jule::I32 _61517_i = 0LL;;
	_203201a48_paramTypeBegin(_self_.ptr(), _61439_param, &(_61517_i), _61463_tokens);
	if ((_61517_i >= (*(_61463_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType(_self_, _61463_tokens, (&(_61517_i)), true);
		(*(_61439_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61517_i < (*(_61463_tokens)).len())) {
		_2031ed171_pushErr(_self_.ptr(), (*(_61463_tokens))[_61517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _203202186_buildParamBody(jule::Ptr<_2031ec714_parser> _self_, jule::Ptr<_2211b4dea_ParamDecl>* _62739_param, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _62762_tokens) {
	jule::Ptr<_21da1aa0b_Token> _62817_tok = _62762_tokens[0LL];;
	if ((_62762_tokens.len() == 1LL)) {
		(*(_62739_param)).get()._field_Ident=_62817_tok.get()._field_Kind;
		return;;
	} else if ((_62762_tokens.len() < 3LL)) {
		_2031ed171_pushErr(_self_.ptr(), _62817_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_62762_tokens[1LL].get()._field_Id != static_cast<jule::U32>(11LLU))) {
		(*(_62739_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_203201d67_buildParamType(_self_, _62739_param, &(_62762_tokens));
		return;;
	};
	(*(_62739_param)).get()._field_Ident=_62817_tok.get()._field_Kind;
	_62762_tokens=_62762_tokens.slice(2LL);
	_203201d67_buildParamType(_self_, _62739_param, &(_62762_tokens));
}



inline jule::Ptr<_2211b4dea_ParamDecl> _203202494_buildParam(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _64734_tokens) {
	jule::Ptr<_2211b4dea_ParamDecl> _64817_param = jule::new_ptr<_2211b4dea_ParamDecl>(_2211b4dea_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U32>(35LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_2031ed171_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U32>(7LLU)) && _64817_param.get()._field_Token.get()._field_Kind.equal("&", 1))) {
			if ((_64734_tokens.len() == 1LL)) {
				_2031ed171_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U32>(2LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U32>(11LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_203201d67_buildParamType(_self_, &(_64817_param), &(_64734_tokens));
	} else {
		_203202186_buildParamBody(_self_, &(_64817_param), _64734_tokens);
	};
	return _64817_param;;
}



inline void _203202719_checkParams(_2031ec714_parser* _self_, jule::Slice<jule::Ptr<_2211b4dea_ParamDecl>>* _69035_params) {
	{
		auto expr = _69035_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2078e19d6:;
		if (it != expr_end) {
			jule::Ptr<_2211b4dea_ParamDecl> _69121_param = *it;
			{
				if ((_2211b525d_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_2078e19d6;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_2031ed171_pushErr(_self_, _69121_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_2211a4d52_IdentTypeDecl>(_2211a4d52_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type20)});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_2078e19d6:;
			++it;
			goto _iter_begin_2078e19d6;
		}
		_iter_end_2078e19d6:;
	};
}



inline jule::Slice<jule::Ptr<_2211b4dea_ParamDecl>> _203202ac1_buildParams(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _71118_parts;;
	jule::Slice<_21d6755de_Log> _71125_errs;;
	({
		__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_assign_result = _2031eb427_parts(_71036_tokens, static_cast<jule::U32>(8LLU), true);
		_71118_parts = __jule_assign_result.__jule_result_arg0;
		_71125_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71125_errs);
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2211b4dea_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_2211b4dea_ParamDecl> _71921_param = _203201680_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _2211b525d_IsSelf(_71921_param.ptr()))) {
			_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_71921_param);;
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_71118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2078e604b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _72621_part = *it;
			{
				jule::Ptr<_2211b4dea_ParamDecl> _72721_param = _203202494_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_72721_param);;
				};
			}
			_iter_next_2078e604b:;
			++it;
			goto _iter_begin_2078e604b;
		}
		_iter_end_2078e604b:;
	};
	_203202719_checkParams(_self_.ptr(), &(_71717_params));
	return _71717_params;;
}



inline __jule_tuple_x_2211a789e_RetTypeDecl__jule_tuple_bool _203202e78_buildMultiRetType(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _73742_tokens, jule::I32* _73765_i) {
	__jule_tuple_x_2211a789e_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_2211a789e_RetTypeDecl>();
	((*(_73765_i)))++;
	if (((*(_73765_i)) >= (*(_73742_tokens)).len())) {
		((*(_73765_i)))--;
		({
			__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType(_self_, _73742_tokens, (&((*(_73765_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_73765_i)))--;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _74717_rangeTokens = _2031ea8aa_range(_73765_i, jule::Str("(", 1), jule::Str(")", 1), _73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _74918_parts;;
	jule::Slice<_21d6755de_Log> _74925_errs;;
	({
		__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_assign_result = _2031eb427_parts(&(_74717_rangeTokens), static_cast<jule::U32>(8LLU), true);
		_74918_parts = __jule_assign_result.__jule_result_arg0;
		_74925_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_74925_errs);
	if ((_74918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_2211a478b_TypeDecl>>::alloc(0LL, _74918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_21da1aa0b_Token>>::alloc(0LL, _74918_parts.len());
	{
		auto expr = &(_74918_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2078ec250:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _75721_part = *it;
			{
				jule::Ptr<_21da1aa0b_Token> _75821_token = _75721_part[0LL];;
				jule::I32 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U32>(11LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_2031ed171_pushErr(_self_.ptr(), _75821_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_2078ec250;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_21da1aa0b_Token> _77525_newToken = jule::new_ptr<_21da1aa0b_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_77525_newToken);;
				} else {
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_75821_token);;
				};
				jule::Ptr<_2211a478b_TypeDecl> _78222_tk;;
				({
					__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType(_self_, &(_75721_part), (&(_75921_offset)), true);
					_78222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_75921_offset < _75721_part.len())) {
					_2031ed171_pushErr(_self_.ptr(), _75721_part[_75921_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_75517_types = jule::alloc_for_append(_75517_types,1);_75517_types.__push(_78222_tk);;
			}
			_iter_next_2078ec250:;
			++it;
			goto _iter_begin_2078ec250;
		}
		_iter_end_2078ec250:;
	};
	if ((_75517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=(*(_73742_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_2211a632b_TupleTypeDecl>(_2211a632b_TupleTypeDecl{._field_Types=_75517_types}), &__jule_any_type80)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_2211a789e_RetTypeDecl__jule_tuple_bool _203203330_buildRetType(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _80537_tokens, jule::I32* _80560_i) {
	__jule_tuple_x_2211a789e_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_2211a789e_RetTypeDecl>();
	if (((*(_80560_i)) >= (*(_80537_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_21da1aa0b_Token> _81117_token = (*(_80537_tokens))[(*(_80560_i))];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_2079056dc:;
			{
				if (_81117_token.get()._field_Kind.equal("{", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_207905753:;
			{
				if (_81117_token.get()._field_Kind.equal("=", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_2079057b9:;
			{
				if ((((*(_80560_i)) + 1LL) >= (*(_80537_tokens)).len())) {
					_2031ed171_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_80560_i)))++;
				_81117_token=(*(_80537_tokens))[(*(_80560_i))];
				if ((_81117_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_20758ca39:;
							{
								({
									__jule_tuple_x_2211a789e_RetTypeDecl__jule_tuple_bool __jule_assign_result = _203202e78_buildMultiRetType(_self_, _80537_tokens, _80560_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_20758caa0:;
							{
								_2031ed171_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_20758c93a:;
					};
				};
				({
					__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType(_self_, _80537_tokens, (&((*(_80560_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_2079055dd:;
	};
	((*(_80560_i)))++;
	_2031ed171_pushErr(_self_.ptr(), _81117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_2211b621a_FnDecl> _203203781_buildFnPrototype(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _85041_tokens, jule::I32* _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_2211b621a_FnDecl> _85117_f = jule::new_ptr<_2211b621a_FnDecl>(_2211b621a_FnDecl{._field_Token=(*(_85041_tokens))[(*(_85064_i))], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U32>(37LLU))) {
		_85117_f.get()._field_Statically=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_2031ed171_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		_85117_f.get()._field_Unsafety=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_2031ed171_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	((*(_85064_i)))++;
	if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
		_2031ed171_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21da1aa0b_Token> _88413_tok = (*(_85041_tokens))[(*(_85064_i))];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U32>(2LLU))) {
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_2031ed171_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_21da1aa0b_Token> _89613_errorToken = (*(_85041_tokens))[(*(_85064_i))];;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _89717_genericsTokens = _2031ea8aa_range(_85064_i, jule::Str("[", 1), jule::Str("]", 1), _85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_203201372_buildGenerics(_self_, &(_89717_genericsTokens), &(_89613_errorToken));
	};
	if ((!(*(_85041_tokens))[(*(_85064_i))].get()._field_Kind.equal("(", 1))) {
		_2031ed171_pushErr(_self_.ptr(), (*(_85041_tokens))[(*(_85064_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _90717_paramsToks = _2031ea8aa_range(_85064_i, jule::Str("(", 1), jule::Str(")", 1), _85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_203202ac1_buildParams(_self_, &(_90717_paramsToks), _85072_method);
	};
	if (((*(_85064_i)) < (*(_85041_tokens)).len())) {
		jule::Ptr<_21da1aa0b_Token> _91317_token = (*(_85041_tokens))[(*(_85064_i))];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U32>(7LLU)) && _91317_token.get()._field_Kind.equal("!", 1))) {
			_85117_f.get()._field_Exceptional=true;
			((*(_85064_i)))++;
		};
	};
	_85117_f.get()._field_Public=_20320c3c2_isPub(&(_85117_f.get()._field_Ident));
	({
		__jule_tuple_x_2211a789e_RetTypeDecl__jule_tuple_bool __jule_assign_result = _203203330_buildRetType(_self_, _85041_tokens, _85064_i);
		_85117_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85117_f;;
}



inline jule::Ptr<_2211b621a_FnDecl> _203203bd2_buildFn(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I32 _92817_i = 0LL;;
	jule::Ptr<_2211b621a_FnDecl> _92917_f = _203203781_buildFnPrototype(_self_, _92732_tokens, &(_92817_i), _92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_2031ed171_pushErr(_self_.ptr(), (*(_92732_tokens))[(_92817_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _92917_f;;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;;
	};
	if ((_92817_i >= (*(_92732_tokens)).len())) {
		_2031eca44_stop(_self_.ptr());
		_2031ed171_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _94517_blockTokens = _2031ea8aa_range(&(_92817_i), jule::Str("{", 1), jule::Str("}", 1), _92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_2031ee1d8_buildScope(_self_, &(_94517_blockTokens), (*(_92732_tokens))[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_2031ed171_pushErr(_self_.ptr(), (*(_92732_tokens))[_92817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_2031eca44_stop(_self_.ptr());
		_2031ed171_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _92917_f;;
}



inline jule::Slice<jule::Ptr<_21da1aa0b_Token>> _203203ee0_getUseDeclSelectors(_2031ec714_parser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _96142_tokens) {
	jule::I32 _96217_i = 0LL;;
	_96142_tokens=_2031ea8aa_range(&(_96217_i), jule::Str("{", 1), jule::Str("}", 1), &(_96142_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _96418_parts;;
	jule::Slice<_21d6755de_Log> _96425_errs;;
	({
		__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_assign_result = _2031eb427_parts(&(_96142_tokens), static_cast<jule::U32>(8LLU), true);
		_96418_parts = __jule_assign_result.__jule_result_arg0;
		_96425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96425_errs.len() > 0LL)) {
		(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_96425_errs);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _97017_selectors = jule::Slice<jule::Ptr<_21da1aa0b_Token>>::alloc(0LL, _96418_parts.len());;
	{
		auto expr = &(_96418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2075a3203:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_2031ed171_pushErr(_self_, _97121_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_21da1aa0b_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U32>(2LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U32>(27LLU)))) {
					_2031ed171_pushErr(_self_, _97521_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_2031ed490_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_2075a3203;
				};
				_97017_selectors = jule::alloc_for_append(_97017_selectors,1);_97017_selectors.__push(_97521_tok);;
			}
			_iter_next_2075a3203:;
			++it;
			goto _iter_begin_2075a3203;
		}
		_iter_end_2075a3203:;
	};
	return _97017_selectors;;
}



inline void _20320430e_buildCppUseDecl(_2031ec714_parser* _self_, jule::Ptr<_2211bbe46_UseDecl>* _98639_decl, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _98656_tokens) {
	if (((*(_98656_tokens)).len() > 1LL)) {
		_2031ed171_pushErr(_self_, (*(_98656_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_21da1aa0b_Token> _99013_token = (*(_98656_tokens))[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U32>(6LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_2031ed171_pushErr(_self_, _99013_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_98639_decl)).get()._field_CppLinked=true;
	(*(_98639_decl)).get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL, (_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _20320462d_buildStdUseDecl(_2031ec714_parser* _self_, jule::Ptr<_2211bbe46_UseDecl>* _99939_decl, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _99959_tokens) {
	(*(_99939_decl)).get()._field_Std=true;
	jule::Ptr<_21da1aa0b_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_2031ed171_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_2075aba58:;
			{
				_2031ed171_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_2075abad0:;
			{
				if ((!_100217_token.get()._field_Kind.equal("}", 1))) {
					_2031ed171_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_21da1aa0b_Token>> _101921_selectors = nullptr;;
				({
					__jule_tuple_sx_21da1aa0b_Token__jule_tuple_sx_21da1aa0b_Token __jule_assign_result = _2031eab52_rangeLast(&(_99959_tokens));
					_99959_tokens = __jule_assign_result.__jule_result_arg0;
					_101921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_99939_decl)).get()._field_Selected=_203203ee0_getUseDeclSelectors(_self_, _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_2031ed171_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_2031ed171_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_2031ed171_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_2075abb57:;
			{
				if ((!_100217_token.get()._field_Kind.equal("*", 1))) {
					_2031ed171_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_2031ed171_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_2031ed171_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_2031ed171_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_99939_decl)).get()._field_Full=true;
			}
		}
		_match_end_2075ab9d1:;
	};
	(*(_99939_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _2031ec280_tokstoa(&(_99959_tokens)));
}



inline void _20320494c_buildIdentUseDecl(_2031ec714_parser* _self_, jule::Ptr<_2211bbe46_UseDecl>* _106141_decl, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _106161_tokens) {
	(*(_106141_decl)).get()._field_Std=false;
	jule::Ptr<_21da1aa0b_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_2075b5a84:;
			{
				_2031ed171_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_2075b615b:;
			{
				if ((!_106417_token.get()._field_Kind.equal("}", 1))) {
					_2031ed171_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_21da1aa0b_Token>> _107521_selectors = nullptr;;
				({
					__jule_tuple_sx_21da1aa0b_Token__jule_tuple_sx_21da1aa0b_Token __jule_assign_result = _2031eab52_rangeLast(&(_106161_tokens));
					_106161_tokens = __jule_assign_result.__jule_result_arg0;
					_107521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_106141_decl)).get()._field_Selected=_203203ee0_getUseDeclSelectors(_self_, _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_2031ed171_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_2031ed171_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_2031ed171_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_2075b6304:;
			{
				if ((!_106417_token.get()._field_Kind.equal("*", 1))) {
					_2031ed171_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_2031ed171_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_2031ed171_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_2031ed171_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_106141_decl)).get()._field_Full=true;
			}
		}
		_match_end_2075b6106:;
	};
	(*(_106141_decl)).get()._field_LinkPath=_2031ec280_tokstoa(&(_106161_tokens));
}



inline void _203204c6b_parseUseDecl(_2031ec714_parser* _self_, jule::Ptr<_2211bbe46_UseDecl>* _112436_decl, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _112456_tokens) {
	if ((*(_112436_decl)).get()._field_CppLinked) {
		_20320430e_buildCppUseDecl(_self_, _112436_decl, &(_112456_tokens));
		return;;
	};
	jule::Ptr<_21da1aa0b_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_2031ed171_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U32>(12LLU)))) {
		(*(_112436_decl)).get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U32>(2LLU))) {
			_2031ed171_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_2031ed490_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if (_113017_token.get()._field_Kind.equal("std", 3)) {
			_case_begin_2075c1ba0:;
			{
				_20320462d_buildStdUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		else {
			_case_begin_2075c3ad6:;
			{
				_20320494c_buildIdentUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		_match_end_2075c3a70:;
	};
}



inline jule::Ptr<_2211bbe46_UseDecl> _203205123_buildUseDecl(_2031ec714_parser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _115835_tokens, jule::Bool _115853_cpp_linked) {
	jule::Ptr<_2211bbe46_UseDecl> _115917_decl = jule::new_ptr<_2211bbe46_UseDecl>(_2211bbe46_UseDecl{._field_Token=_115835_tokens[0LL], ._field_CppLinked=_115853_cpp_linked, });;
	if ((_115835_tokens.len() < 2LL)) {
		_2031ed171_pushErr(_self_, _115917_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_203204c6b_parseUseDecl(_self_, &(_115917_decl), _115835_tokens);
	return _115917_decl;;
}



inline jule::Ptr<_2211a478b_TypeDecl> _2032054ca_buildTypeEnumItemKind(jule::Ptr<_2031ec714_parser> _self_, jule::I32* _117246_i, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _117259_tokens) {
	jule::I32 _117317_braceN = 0LL;;
	jule::I32 _117413_exprStart = (*(_117246_i));;
	for (; ((*(_117246_i)) < (*(_117259_tokens)).len()); ((*(_117246_i)))++) {
		{
			jule::Ptr<_21da1aa0b_Token> _117617_t = (*(_117259_tokens))[(*(_117246_i))];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_2075c8932:;
						{
							(_117317_braceN)++;
							goto _iter_next_2075c749c;
						}
					}
					else {
						_case_begin_2075c8536:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_2075c8327:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_2075c749c;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U32>(8LLU)) || (((*(_117246_i)) + 1LL) >= (*(_117259_tokens)).len()))) {
				jule::Slice<jule::Ptr<_21da1aa0b_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U32>(8LLU))) {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart, (*(_117246_i)));
				} else {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart);
				};
				jule::I32 _119825_j = 0LL;;
				jule::Ptr<_2211a478b_TypeDecl> _119926_kind;;
				({
					__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType(_self_, &(_119225_kindTokens), (&(_119825_j)), true);
					_119926_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_119825_j < _119225_kindTokens.len())) {
					_2031ed171_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _119926_kind;;
			};
		}
	_iter_next_2075c749c:;
	}
	_iter_end_2075c749c:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_2211bd8e8_TypeEnumItemDecl>> _2032057d8_buildTypeEnumItems(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _120943_tokens) {
	jule::Slice<jule::Ptr<_2211bd8e8_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_2211bd8e8_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _121117_i = 0LL;;
	for (; (_121117_i < (*(_120943_tokens)).len()); (_121117_i)++) {
		{
			jule::Ptr<_21da1aa0b_Token> _121321_t = (*(_120943_tokens))[_121117_i];;
			jule::Ptr<_2211bd8e8_TypeEnumItemDecl> _121421_item = jule::new_ptr<_2211bd8e8_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U32>(2LLU)) && (((*(_120943_tokens)).len() - _121117_i) > 2LL))) {
				_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
				_121321_t=(*(_120943_tokens))[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U32>(11LLU))) {
					_121117_i+=2LL;
					if (((_121117_i >= (*(_120943_tokens)).len()) || ((*(_120943_tokens))[_121117_i].get()._field_Id == static_cast<jule::U32>(8LLU)))) {
						_2031ed171_pushErr(_self_.ptr(), _121321_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_2075cd162;
					};
				};
			};
			_121421_item.get()._field_Kind=_2032054ca_buildTypeEnumItemKind(_self_, &(_121117_i), _120943_tokens);
			_121017_items = jule::alloc_for_append(_121017_items,1);_121017_items.__push(_121421_item);;
		}
	_iter_next_2075cd162:;
	}
	_iter_end_2075cd162:;;
	return _121017_items;;
}



inline jule::Ptr<_2211be003_TypeEnumDecl> _203205ae6_buildTypeEnumDecl(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _123342_tokens) {
	jule::I32 _123417_i = 1LL;;
	jule::Ptr<_2211be003_TypeEnumDecl> _123517_e = jule::new_ptr<_2211be003_TypeEnumDecl>(_2211be003_TypeEnumDecl{._field_Token=(*(_123342_tokens))[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_2031ed171_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _124517_itemTokens = _2031ea8aa_range(&(_123417_i), jule::Str("{", 1), jule::Str("}", 1), _123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_2031eca44_stop(_self_.ptr());
		_2031ed171_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _123517_e;;
	} else if ((_123417_i < (*(_123342_tokens)).len())) {
		_2031ed171_pushErr(_self_.ptr(), (*(_123342_tokens))[_123417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_20320c3c2_isPub(&(_123517_e.get()._field_Ident));
	_123517_e.get()._field_End=(*(_123342_tokens))[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_2032057d8_buildTypeEnumItems(_self_, &(_124517_itemTokens));
	return _123517_e;;
}



inline jule::Ptr<_2211a8cac_Expr> _203205e9d_buildEnumItemExpr(jule::Ptr<_2031ec714_parser> _self_, jule::I32* _126042_i, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _126055_tokens) {
	jule::I32 _126117_braceN = 0LL;;
	jule::I32 _126213_exprStart = (*(_126042_i));;
	for (; ((*(_126042_i)) < (*(_126055_tokens)).len()); ((*(_126042_i)))++) {
		{
			jule::Ptr<_21da1aa0b_Token> _126417_t = (*(_126055_tokens))[(*(_126042_i))];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_2075d91e5:;
						{
							(_126117_braceN)++;
							goto _iter_next_2075d7c60;
						}
					}
					else {
						_case_begin_2075d8ce9:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_2075d8ada:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_2075d7c60;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U32>(8LLU)) || (((*(_126042_i)) + 1LL) >= (*(_126055_tokens)).len()))) {
				jule::Slice<jule::Ptr<_21da1aa0b_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U32>(8LLU))) {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart, (*(_126042_i)));
				} else {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart);
				};
				return _2031ed79d_buildExpr(_self_, &(_128025_exprTokens));;
			};
		}
	_iter_next_2075d7c60:;
	}
	_iter_end_2075d7c60:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_2211bc3b9_EnumItemDecl>> _2032062ab_buildEnumItems(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _129239_tokens) {
	jule::Slice<jule::Ptr<_2211bc3b9_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_2211bc3b9_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _129417_i = 0LL;;
	for (; (_129417_i < (*(_129239_tokens)).len()); (_129417_i)++) {
		{
			jule::Ptr<_21da1aa0b_Token> _129621_t = (*(_129239_tokens))[_129417_i];;
			jule::Ptr<_2211bc3b9_EnumItemDecl> _129721_item = jule::new_ptr<_2211bc3b9_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
				_2031ed171_pushErr(_self_.ptr(), _129721_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U32>(8LLU)))) {
				if (((_129417_i + 1LL) < (*(_129239_tokens)).len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_2075dc649;
			};
			(_129417_i)++;
			_129621_t=(*(_129239_tokens))[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U32>(11LLU))) {
				_2031ed171_pushErr(_self_.ptr(), _129621_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_2075dc649;
			};
			if (((_129417_i >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[_129417_i].get()._field_Id == static_cast<jule::U32>(8LLU)))) {
				_2031ed171_pushErr(_self_.ptr(), _129621_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_2075dc649;
			};
			_129721_item.get()._field_Expr=_203205e9d_buildEnumItemExpr(_self_, &(_129417_i), _129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_2075dc649:;
	}
	_iter_end_2075dc649:;;
	return _129317_items;;
}



inline jule::Ptr<_2211bcde2_EnumDecl> _2032065b9_buildEnumDecl(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _132938_tokens) {
	if (((*(_132938_tokens)).len() < 3LL)) {
		_2031ed171_pushErr(_self_.ptr(), (*(_132938_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2211bcde2_EnumDecl> _133417_e = jule::new_ptr<_2211bcde2_EnumDecl>(_2211bcde2_EnumDecl{._field_Token=(*(_132938_tokens))[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_2031ed171_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I32 _134217_i = 2LL;;
	if (((*(_132938_tokens))[_134217_i].get()._field_Id == static_cast<jule::U32>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_2031ed171_pushErr(_self_.ptr(), (*(_132938_tokens))[(_134217_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _133417_e;;
		};
		({
			__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType(_self_, _132938_tokens, (&(_134217_i)), true);
			_133417_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_2031eca44_stop(_self_.ptr());
			_2031ed171_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _133417_e;;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _135917_itemTokens = _2031ea8aa_range(&(_134217_i), jule::Str("{", 1), jule::Str("}", 1), _132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_2031eca44_stop(_self_.ptr());
		_2031ed171_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _133417_e;;
	} else if ((_134217_i < (*(_132938_tokens)).len())) {
		_2031ed171_pushErr(_self_.ptr(), (*(_132938_tokens))[_134217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_20320c3c2_isPub(&(_133417_e.get()._field_Ident));
	_133417_e.get()._field_End=(*(_132938_tokens))[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_2032062ab_buildEnumItems(_self_, &(_135917_itemTokens));
	return _133417_e;;
}



inline jule::Any _2032068c7_buildNodeEnumDecl(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _137442_tokens) {
	if ((((*(_137442_tokens)).len() > 3LL) && ((*(_137442_tokens))[2LL].get()._field_Id == static_cast<jule::U32>(11LLU)))) {
		if (((*(_137442_tokens))[3LL].get()._field_Id == static_cast<jule::U32>(10LLU))) {
			return jule::Any(_203205ae6_buildTypeEnumDecl(_self_, _137442_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_2032065b9_buildEnumDecl(_self_, _137442_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_2211be201_FieldDecl> _203206bd5_buildField(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _138334_tokens) {
	jule::Ptr<_2211be201_FieldDecl> _138417_f = jule::new_ptr<_2211be201_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U32>(35LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_2031ed171_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_2031ed171_pushErr(_self_.ptr(), _138417_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_2031ed171_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U32>(11LLU))) {
		_2031ed171_pushErr(_self_.ptr(), _138334_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I32 _141217_i = 0LL;;
	({
		__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType(_self_, &(_138334_tokens), (&(_141217_i)), true);
		_138417_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_21da1aa0b_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U32>(7LLU)) || (!_141517_token.get()._field_Kind.equal("=", 1)))) {
			_2031ed171_pushErr(_self_.ptr(), _138334_tokens[_141217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_2031ed171_pushErr(_self_.ptr(), _141517_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_2031ed79d_buildExpr(_self_, &(_138334_tokens));
	};
	_138417_f.get()._field_Public=_20320c3c2_isPub(&(_138417_f.get()._field_Ident));
	return _138417_f;;
}



inline jule::Slice<jule::Ptr<_2211be201_FieldDecl>> _203206ee3_buildStructDeclFields(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_2211be201_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_2031d06c5_stmt>> _143417_stmts = _2031d0a6b_splitStmts(&(_143245_tokens));;
	{
		auto expr = &(_143417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207607b5e:;
		if (it != expr_end) {
			jule::Ptr<_2031d06c5_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_2211be201_FieldDecl> _143721_f = _203206bd5_buildField(_self_, _143245_tokens);;
				_143317_fields = jule::alloc_for_append(_143317_fields,1);_143317_fields.__push(_143721_f);;
			}
			_iter_next_207607b5e:;
			++it;
			goto _iter_begin_207607b5e;
		}
		_iter_end_207607b5e:;
	};
	return _143317_fields;;
}



inline jule::Ptr<_2211be9a4_StructDecl> _203207301_buildStructDecl(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _144340_tokens) {
	if (((*(_144340_tokens)).len() < 3LL)) {
		_2031ed171_pushErr(_self_.ptr(), (*(_144340_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _144917_i = 1LL;;
	jule::Ptr<_2211be9a4_StructDecl> _145017_s = jule::new_ptr<_2211be9a4_StructDecl>(_2211be9a4_StructDecl{._field_Token=(*(_144340_tokens))[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_2031ed171_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_2031ed171_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_21da1aa0b_Token> _146413_errorToken = (*(_144340_tokens))[_144917_i];;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _146517_genericsTokens = _2031ea8aa_range(&(_144917_i), jule::Str("[", 1), jule::Str("]", 1), _144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_203201372_buildGenerics(_self_, &(_146517_genericsTokens), &(_146413_errorToken));
	};
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_2031ed171_pushErr(_self_.ptr(), (*(_144340_tokens))[(_144917_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _147517_bodyTokens = _2031ea8aa_range(&(_144917_i), jule::Str("{", 1), jule::Str("}", 1), _144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_2031eca44_stop(_self_.ptr());
		_2031ed171_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	if ((_144917_i < (*(_144340_tokens)).len())) {
		_2031ed171_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_20320c3c2_isPub(&(_145017_s.get()._field_Ident));
	_145017_s.get()._field_Fields=_203206ee3_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=(*(_144340_tokens))[(_144917_i - 1LL)];
	return _145017_s;;
}



inline void _203207576_checkMethodReceiver(_2031ec714_parser* _self_, jule::Ptr<_2211b621a_FnDecl>* _149139_f) {
	if ((*(_149139_f)).get()._field_Statically) {
		if ((((*(_149139_f)).get()._field_Params.len() > 0LL) && _2211b525d_IsSelf((*(_149139_f)).get()._field_Params[0LL].ptr()))) {
			_2031ed171_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_149139_f)).get()._field_Params.len() == 0LL)) {
		_2031ed171_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2211b4dea_ParamDecl> _150313_param = (*(_149139_f)).get()._field_Params[0LL];;
	if ((!(_2211b525d_IsSelf(_150313_param.ptr())))) {
		_2031ed171_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _203207895_buildTraitBody(jule::Ptr<_2031ec714_parser> _self_, jule::Ptr<_2211c017a_TraitDecl>* _151039_t, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _151058_tokens) {
	jule::Slice<jule::Ptr<_2031d06c5_stmt>> _151117_stmts = _2031d0a6b_splitStmts(&(_151058_tokens));;
	{
		auto expr = &(_151117_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207615c9e:;
		if (it != expr_end) {
			jule::Ptr<_2031d06c5_stmt> _151221_stmt = *it;
			{
				_151058_tokens=_151221_stmt.get()._field_tokens;
				if ((_151058_tokens.len() == 0LL)) {
					goto _iter_next_207615c9e;
				};
				{
					auto &_match_expr{ _151058_tokens[0LL].get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(32LLU)) {
						_case_begin_207618763:;
						{
							jule::Ptr<_2211b621a_FnDecl> _151925_f = _203203bd2_buildFn(_self_, &(_151058_tokens), true, true);;
							if ((_151925_f == nullptr)) {
								goto _match_end_207616ee2;
							};
							_203207576_checkMethodReceiver(_self_.ptr(), &(_151925_f));
							if ((_151925_f.get()._field_Generics.len() > 0LL)) {
								_2031ed171_pushErr(_self_.ptr(), _151925_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							(*(_151039_t)).get()._field_Methods = jule::alloc_for_append((*(_151039_t)).get()._field_Methods,1);(*(_151039_t)).get()._field_Methods.__push(_151925_f);;
						}
					}
					else {
						_case_begin_207616a80:;
						{
							jule::I32 _152925_i = 0LL;;
							jule::Ptr<_2211a478b_TypeDecl> _153026_ti;;
							jule::Bool _153030_ok = false;;
							({
								__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType(_self_, &(_151058_tokens), (&(_152925_i)), true);
								_153026_ti = __jule_assign_result.__jule_result_arg0;
								_153030_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_153030_ok))) {
								goto _match_end_207616ee2;
							};
							if ((_152925_i < _151058_tokens.len())) {
								_2031ed171_pushErr(_self_.ptr(), _151058_tokens[_152925_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							(*(_151039_t)).get()._field_Inherits = jule::alloc_for_append((*(_151039_t)).get()._field_Inherits,1);(*(_151039_t)).get()._field_Inherits.__push(_153026_ti);;
						}
					}
					_match_end_207616ee2:;
				};
			}
			_iter_next_207615c9e:;
			++it;
			goto _iter_begin_207615c9e;
		}
		_iter_end_207615c9e:;
	};
}



inline jule::Ptr<_2211c017a_TraitDecl> _203207ba3_buildTraitDecl(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _154239_tokens) {
	if (((*(_154239_tokens)).len() < 3LL)) {
		_2031ed171_pushErr(_self_.ptr(), (*(_154239_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2211c017a_TraitDecl> _154717_t = jule::new_ptr<_2211c017a_TraitDecl>(_2211c017a_TraitDecl{._field_Token=(*(_154239_tokens))[1LL], });;
	if ((_154717_t.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_2031ed171_pushErr(_self_.ptr(), _154717_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_154717_t.get()._field_Ident=_154717_t.get()._field_Token.get()._field_Kind;
	jule::I32 _155517_i = 2LL;;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _155617_bodyTokens = _2031ea8aa_range(&(_155517_i), jule::Str("{", 1), jule::Str("}", 1), _154239_tokens);;
	if ((_155617_bodyTokens == nullptr)) {
		_2031eca44_stop(_self_.ptr());
		_2031ed171_pushErr(_self_.ptr(), _154717_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_155517_i < (*(_154239_tokens)).len())) {
		_2031ed171_pushErr(_self_.ptr(), (*(_154239_tokens))[_155517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_154717_t.get()._field_Public=_20320c3c2_isPub(&(_154717_t.get()._field_Ident));
	_203207895_buildTraitBody(_self_, &(_154717_t), _155617_bodyTokens);
	_154717_t.get()._field_End=(*(_154239_tokens))[(_155517_i - 1LL)];
	return _154717_t;;
}



inline jule::Ptr<_2211b621a_FnDecl> _203207eb1_buildCppLinkFn(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _157238_tokens) {
	_157238_tokens=_157238_tokens.slice(1LL);
	jule::Ptr<_2211b621a_FnDecl> _157417_f = _203203bd2_buildFn(_self_, &(_157238_tokens), false, true);;
	if ((_157417_f != nullptr)) {
		_157417_f.get()._field_Public=false;
		_157417_f.get()._field_CppLinked=true;
	};
	return _157417_f;;
}



inline jule::Ptr<_2211b71e9_VarDecl> _2032082be_buildCppLinkVar(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _158239_tokens) {
	_158239_tokens=_158239_tokens.slice(1LL);
	jule::Ptr<_2211b71e9_VarDecl> _158417_v = _203200bac_buildVar(_self_, _158239_tokens);;
	if ((_158417_v != nullptr)) {
		_158417_v.get()._field_Public=false;
		_158417_v.get()._field_CppLinked=true;
		if ((_158417_v.get()._field_Expr != nullptr)) {
			_2031ed171_pushErr(_self_.ptr(), _158417_v.get()._field_Token, jule::Str("cpp linked variables cannot have expression", 43), jule::Slice<jule::Any>());
		};
	};
	return _158417_v;;
}



inline jule::Ptr<_2211be9a4_StructDecl> _2032085cc_buildCppLinkStruct(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _159542_tokens) {
	_159542_tokens=_159542_tokens.slice(1LL);
	jule::Ptr<_2211be9a4_StructDecl> _159717_s = _203207301_buildStructDecl(_self_, &(_159542_tokens));;
	if ((_159717_s != nullptr)) {
		_159717_s.get()._field_Public=false;
		{
			auto expr = &(_159717_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_207626122:;
			if (it != expr_end) {
				jule::Ptr<_2211be201_FieldDecl> _160025_f = *it;
				{
					_160025_f.get()._field_Public=true;
				}
				_iter_next_207626122:;
				++it;
				goto _iter_begin_207626122;
			}
			_iter_end_207626122:;
		};
		_159717_s.get()._field_CppLinked=true;
	};
	return _159717_s;;
}



inline jule::Ptr<_2211baa5a_TypeAliasDecl> _2032088da_buildCppLinkTypeAlias(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _160945_tokens) {
	_160945_tokens=_160945_tokens.slice(1LL);
	jule::Ptr<_2211baa5a_TypeAliasDecl> _161117_t = _2031eed98_buildTypeAliasDecl(_self_, &(_160945_tokens));;
	if ((_161117_t != nullptr)) {
		_161117_t.get()._field_Public=false;
		_161117_t.get()._field_CppLinked=true;
	};
	return _161117_t;;
}



inline jule::Ptr<_2211bbe46_UseDecl> _203208be8_buildCppLinkUse(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _161939_tokens) {
	if ((_161939_tokens.len() == 1LL)) {
		_2031ed171_pushErr(_self_.ptr(), _161939_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161939_tokens=_161939_tokens.slice(1LL);
	;
	return _203205123_buildUseDecl(_self_.ptr(), _161939_tokens, true);;
}



inline jule::Any _203209006_buildCppLink(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _163037_tokens) {
	jule::Ptr<_21da1aa0b_Token> _163117_token = (*(_163037_tokens))[0LL];;
	if (((*(_163037_tokens)).len() == 1LL)) {
		_2031ed171_pushErr(_self_.ptr(), _163117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_163117_token=(*(_163037_tokens))[1LL];
	{
		auto &_match_expr{ _163117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_20762ab60:;
			{
				return jule::Any(_203207eb1_buildCppLinkFn(_self_, (*(_163037_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_20762b765:;
			{
				return jule::Any(_2032082be_buildCppLinkVar(_self_, (*(_163037_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(24LLU)) {
			_case_begin_20762b7cb:;
			{
				return jule::Any(_2032085cc_buildCppLinkStruct(_self_, (*(_163037_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_20762b842:;
			{
				return jule::Any(_2032088da_buildCppLinkTypeAlias(_self_, (*(_163037_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_20762b611:;
			{
				_2031ed171_pushErr(_self_.ptr(), _163117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_20762b6ee:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211b621a_FnDecl> _203209314_getMethod(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _165434_tokens) {
	jule::I32 _165517_i = 0LL;;
	jule::Ptr<_21da1aa0b_Token> _165617_token = (*(_165434_tokens))[_165517_i];;
	if ((_165617_token.get()._field_Id == static_cast<jule::U32>(37LLU))) {
		if (((_165517_i + 1LL) >= (*(_165434_tokens)).len())) {
			_2031ed171_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165517_i)++;
		_165617_token=(*(_165434_tokens))[_165517_i];
	};
	if ((_165617_token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_165517_i + 1LL) >= (*(_165434_tokens)).len())) {
			_2031ed171_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165517_i)++;
		_165617_token=(*(_165434_tokens))[_165517_i];
	};
	if ((_165617_token.get()._field_Id != static_cast<jule::U32>(32LLU))) {
		_2031ed171_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _203203bd2_buildFn(_self_, _165434_tokens, true, false);;
}



inline void _203209633_parseImplBody(jule::Ptr<_2031ec714_parser> _self_, jule::Ptr<_2211c0785_Impl>* _168338_ipl, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _168355_tokens) {
	jule::Slice<jule::Ptr<_2031d06c5_stmt>> _168417_stmts = _2031d0a6b_splitStmts(_168355_tokens);;
	{
		auto expr = &(_168417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207633360:;
		if (it != expr_end) {
			jule::Ptr<_2031d06c5_stmt> _168521_stmt = *it;
			{
				(*(_168355_tokens))=_168521_stmt.get()._field_tokens;
				jule::Ptr<_21da1aa0b_Token> _168721_token = (*(_168355_tokens))[0LL];;
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(38LLU)) {
						_case_begin_2076339ae:;
						{
							_2031edd31_pushDirective(_self_.ptr(), _2031edaab_buildDirective(_self_.ptr(), (*(_168355_tokens))));
							goto _iter_next_207633360;
						}
					}
					_match_end_207634493:;
				};
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(9LLU)) {
						_case_begin_2076345e7:;
						{
							jule::Ptr<_2211b71e9_VarDecl> _169625_v = _203200bac_buildVar(_self_, (*(_168355_tokens)));;
							if ((_169625_v != nullptr)) {
								(*(_168338_ipl)).get()._field_Statics = jule::alloc_for_append((*(_168338_ipl)).get()._field_Statics,1);(*(_168338_ipl)).get()._field_Statics.__push(_169625_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(37LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
						_case_begin_20763520d:;
						{
							jule::Ptr<_2211b621a_FnDecl> _170325_f = _203209314_getMethod(_self_, _168355_tokens);;
							if ((_170325_f != nullptr)) {
								_203207576_checkMethodReceiver(_self_.ptr(), &(_170325_f));
								_203209ec4_applyFnMeta(_self_.ptr(), &(_170325_f));
								(*(_168338_ipl)).get()._field_Methods = jule::alloc_for_append((*(_168338_ipl)).get()._field_Methods,1);(*(_168338_ipl)).get()._field_Methods.__push(_170325_f);;
							};
						}
					}
					else {
						_case_begin_2076349b0:;
						{
							_2031ed171_pushErr(_self_.ptr(), _168721_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_207633360;
						}
					}
					_match_end_20763495a:;
				};
			}
			_iter_next_207633360:;
			++it;
			goto _iter_begin_207633360;
		}
		_iter_end_207633360:;
	};
}



inline jule::Ptr<_2211c0785_Impl> _203209941_buildImpl(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _171633_tokens) {
	jule::Ptr<_21da1aa0b_Token> _171717_token = _171633_tokens[0LL];;
	if ((_171633_tokens.len() < 2LL)) {
		_2031ed171_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _172317_i = 1LL;;
	jule::Ptr<_2211a478b_TypeDecl> _172518_base;;
	jule::Bool _172528_ok = false;;
	({
		__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_172518_base = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_2031ed171_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2211c0785_Impl> _173417_ipl = jule::new_ptr<_2211c0785_Impl>(_2211c0785_Impl{._field_Base=_172518_base, });;
	_171717_token=_171633_tokens[_172317_i];
	if ((_171717_token.get()._field_Id != static_cast<jule::U32>(12LLU))) {
		if (((_171717_token.get()._field_Id == static_cast<jule::U32>(3LLU)) && _171717_token.get()._field_Kind.equal("{", 1))) {
			({
				jule::Ptr<_2211a478b_TypeDecl> ___jule_assign_arg = _173417_ipl.get()._field_Dest;
				jule::Ptr<_2211a478b_TypeDecl> _1___jule_assign_arg = _173417_ipl.get()._field_Base;
				_173417_ipl.get()._field_Base = ___jule_assign_arg;
				_173417_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_2031eca44_stop(_self_.ptr());
		_2031ed171_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172317_i)++;
	if ((_172317_i >= _171633_tokens.len())) {
		_2031eca44_stop(_self_.ptr());
		_2031ed171_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_173417_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_2031eca44_stop(_self_.ptr());
		_2031ed171_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _177217_bodyTokens = _2031ea8aa_range(&(_172317_i), jule::Str("{", 1), jule::Str("}", 1), &(_171633_tokens));;
	if ((_177217_bodyTokens == nullptr)) {
		_2031eca44_stop(_self_.ptr());
		_2031ed171_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172317_i < _171633_tokens.len())) {
		_2031ed171_pushErr(_self_.ptr(), _171633_tokens[_172317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_173417_ipl.get()._field_End=_171633_tokens[(_172317_i - 1LL)];
	_203209633_parseImplBody(_self_, &(_173417_ipl), &(_177217_bodyTokens));
	return _173417_ipl;;
}



inline jule::Any _203209c4e_buildNodeData(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _178738_tokens) {
	jule::Ptr<_21da1aa0b_Token> _178817_token = (*(_178738_tokens))[0LL];;
	{
		auto &_match_expr{ _178817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_207643c11:;
			{
				jule::Ptr<_2211b621a_FnDecl> _179221_f = _203203bd2_buildFn(_self_, _178738_tokens, false, false);;
				if ((_179221_f != nullptr)) {
					_179221_f.get()._field_Global=true;
				};
				return jule::Any(_179221_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU) || _match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(35LLU) || _match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_207644ad0:;
			{
				return jule::Any(_203200bac_buildVar(_self_, (*(_178738_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_207644b46:;
			{
				return jule::Any(_2031eed98_buildTypeAliasDecl(_self_, _178738_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_207644382:;
			{
				return _2032068c7_buildNodeEnumDecl(_self_, _178738_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(24LLU)) {
			_case_begin_2076443e8:;
			{
				return jule::Any(_203207301_buildStructDecl(_self_, _178738_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_20764445e:;
			{
				return jule::Any(_203207ba3_buildTraitDecl(_self_, _178738_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_2076444c5:;
			{
				return jule::Any(_203209941_buildImpl(_self_, (*(_178738_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_207644d22:;
			{
				return _203209006_buildCppLink(_self_, _178738_tokens);;
			}
		}
		else {
			_case_begin_2076442e9:;
			{
				_2031ed171_pushErr(_self_.ptr(), _178817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_207644151:;
	};
}



inline void _203209ec4_applyFnMeta(_2031ec714_parser* _self_, jule::Ptr<_2211b621a_FnDecl>* _182035_f) {
	(*(_182035_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _20320a249_applyMeta(_2031ec714_parser* _self_, _221170e0b_Node* _182533_node) {
	{
		auto &_match_expr{ (*(_182533_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_207649a91:;
			{
				jule::Ptr<_2211b71e9_VarDecl> _182821_v = (*(_182533_node))._field_Data.cast_ptr<_2211b71e9_VarDecl>(&__jule_any_type16);;
				if ((_182821_v == nullptr)) {
					return;;
				};
				_182821_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_207649b07:;
			{
				jule::Ptr<_2211b621a_FnDecl> _183521_f = (*(_182533_node))._field_Data.cast_ptr<_2211b621a_FnDecl>(&__jule_any_type14);;
				if ((_183521_f == nullptr)) {
					return;;
				};
				_203209ec4_applyFnMeta(_self_, &(_183521_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_207649b6d:;
			{
				jule::Ptr<_2211be9a4_StructDecl> _184121_sd = (*(_182533_node))._field_Data.cast_ptr<_2211be9a4_StructDecl>(&__jule_any_type13);;
				if ((_184121_sd == nullptr)) {
					return;;
				};
				_184121_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_207649882:;
	};
}



inline void _20320a4be_pushUseDecl(jule::Ptr<_2031ec714_parser> _self_, jule::Ptr<_2211bbe46_UseDecl>* _185036_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push((*(_185036_decl)));;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_2031ed171_pushErr(_self_.ptr(), (*(_185036_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_2031ed490_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _20320a7cc_pushMetaNodes(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _185838_tokens) {
	{
		auto &_match_expr{ (*(_185838_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_20765036b:;
			{
				;
				jule::Ptr<_2211bbe46_UseDecl> _186221_decl = _203205123_buildUseDecl(_self_.ptr(), (*(_185838_tokens)), false);;
				_20320a4be_pushUseDecl(_self_, &(_186221_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_2076503e3:;
			{
				if ((((*(_185838_tokens)).len() > 1LL) && ((*(_185838_tokens))[1LL].get()._field_Id == static_cast<jule::U32>(19LLU)))) {
					jule::Ptr<_2211bbe46_UseDecl> _186725_decl = _203208be8_buildCppLinkUse(_self_, (*(_185838_tokens)));;
					_20320a4be_pushUseDecl(_self_, &(_186725_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(38LLU)) {
			_case_begin_20765046a:;
			{
				_2031edd31_pushDirective(_self_.ptr(), _2031edaab_buildDirective(_self_.ptr(), (*(_185838_tokens))));
				return true;;
			}
		}
		_match_end_20765028e:;
	};
	return false;;
}



inline _221170e0b_Node _20320aada_parseNode(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _187834_st) {
	_221170e0b_Node _187917_node = _221170e0b_Node{._field_Token=(*(_187834_st))[0LL], };;
	if (_20320a7cc_pushMetaNodes(_self_, _187834_st)) {
		return _187917_node;;
	};
	jule::Any _188717_data = _203209c4e_buildNodeData(_self_, _187834_st);;
	if ((_188717_data == nullptr)) {
		return _187917_node;;
	};
	_187917_node._field_Data=_188717_data;
	_20320a249_applyMeta(_self_.ptr(), &(_187917_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_2031ed171_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _187917_node;;
}



inline void _20320ad60_appendNode(jule::Ptr<_2031ec714_parser> _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _190235_st) {
	if (((*(_190235_st)).len() == 0LL)) {
		return;;
	};
	_221170e0b_Node _190617_node = _20320aada_parseNode(_self_, _190235_st);;
	if (((_190617_node._field_Data == nullptr) || _2031ecca8_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190617_node);;
}



inline void _20320b2c2_removeRange(_2031ec714_parser* _self_, jule::I32 _191330_i, jule::Str _191338_kind, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _191350_tokens, jule::Slice<jule::I32>* _191373_ranges) {
	jule::Str _191413_close = _2031eb6be_getCloseKindOfBrace(_191338_kind);;
	for (; (_191330_i >= 0LL); (_191330_i)--) {
		{
			jule::Ptr<_21da1aa0b_Token> _191617_tok = (*(_191350_tokens))[(*(_191373_ranges))[_191330_i]];;
			if ((_191617_tok.get()._field_Kind != _191413_close)) {
				goto _iter_next_207659562;
			};
			(*(_191373_ranges))=jule::append((*(_191373_ranges)).slice(0LL, _191330_i),(*(_191373_ranges)).slice((_191330_i + 1LL)));
			goto _iter_end_207659562;
		}
	_iter_next_207659562:;
	}
	_iter_end_207659562:;;
}



inline void _20320b68a_pushWrongOrderCloseErr(_2031ec714_parser* _self_, jule::Ptr<_21da1aa0b_Token>* _192542_t, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _192554_tokens, jule::Slice<jule::I32>* _192573_ranges) {
	{
		auto &_match_expr{ (*(_192554_tokens))[(*(_192573_ranges))[((*(_192573_ranges)).len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_20765b5ec:;
			{
				_2031ed171_pushErr(_self_, (*(_192542_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_20765b674:;
			{
				_2031ed171_pushErr(_self_, (*(_192542_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_20765b6eb:;
			{
				_2031ed171_pushErr(_self_, (*(_192542_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_20765b4cb:;
	};
}



inline void _20320baec_pushRangeClose(_2031ec714_parser* _self_, jule::Ptr<_21da1aa0b_Token> _193633_t, jule::Str _193644_left, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _193656_tokens, jule::Slice<jule::I32>* _193679_ranges) {
	jule::I32 _193713_n = (*(_193679_ranges)).len();;
	if ((_193713_n == 0LL)) {
		{
			auto &_match_expr{ _193633_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_20765dee5:;
				{
					_2031ed171_pushErr(_self_, _193633_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_20765e06c:;
				{
					_2031ed171_pushErr(_self_, _193633_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_20765e0e4:;
				{
					_2031ed171_pushErr(_self_, _193633_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_20765dcb4:;
		};
		return;;
	} else if (((*(_193656_tokens))[(*(_193679_ranges))[(_193713_n - 1LL)]].get()._field_Kind != _193644_left)) {
		_20320b68a_pushWrongOrderCloseErr(_self_, &(_193633_t), _193656_tokens, _193679_ranges);
	};
	_20320b2c2_removeRange(_self_, static_cast<jule::I32>((_193713_n - 1LL)), _193633_t.get()._field_Kind, _193656_tokens, _193679_ranges);
}



inline void _20320bd72_checkRanges(_2031ec714_parser* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _195431_tokens) {
	jule::Slice<jule::I32> _195517_ranges = nullptr;;
	{
		auto expr = _195431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20792d1c6:;
		if (it != expr_end) {
			jule::I32 _195713_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> *_195716_token = it;
			{
				if (((*(_195716_token)).get()._field_Id != static_cast<jule::U32>(3LLU))) {
					goto _iter_next_20792d1c6;
				};
				{
					auto &_match_expr{ (*(_195716_token)).get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_20792e43b:;
						{
							_195517_ranges = jule::alloc_for_append(_195517_ranges,1);_195517_ranges.__push(_195713_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_20792e4d5:;
						{
							_20320baec_pushRangeClose(_self_, (*(_195716_token)), jule::Str("(", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_20792e54b:;
						{
							_20320baec_pushRangeClose(_self_, (*(_195716_token)), jule::Str("{", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_20792e5b2:;
						{
							_20320baec_pushRangeClose(_self_, (*(_195716_token)), jule::Str("[", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					_match_end_20792deb8:;
				};
			}
			_iter_next_20792d1c6:;
			++it;
			_195713_i++;
			goto _iter_begin_20792d1c6;
		}
		_iter_end_20792d1c6:;
	};
	{
		auto expr = &(_195517_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20793077d:;
		if (it != expr_end) {
			jule::I32 _197516_i = *it;
			{
				jule::Ptr<_21da1aa0b_Token> _197617_token = (*(_195431_tokens))[_197516_i];;
				{
					auto &_match_expr{ _197617_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_207931905:;
						{
							_2031ed171_pushErr(_self_, _197617_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_20793197c:;
						{
							_2031ed171_pushErr(_self_, _197617_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_207931a04:;
						{
							_2031ed171_pushErr(_self_, _197617_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_207931729:;
				};
			}
			_iter_next_20793077d:;
			++it;
			goto _iter_begin_20793077d;
		}
		_iter_end_20793077d:;
	};
}



inline void _20320c0e7_parse(jule::Ptr<_2031ec714_parser> _self_, jule::Ptr<_21da20d96_File>* _198830_f) {
	_self_.get()._field_ast=jule::new_ptr<_22117005e_Ast>(_22117005e_Ast{._field_File=(*(_198830_f)), });
	_self_.get()._field_ep=jule::new_ptr<_2031dc4d4_exprBuilder>(_2031dc4d4_exprBuilder{._field_p=_self_});
	_20320bd72_checkRanges(_self_.ptr(), &((*(_198830_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_2031d06c5_stmt>> _200117_stmts = _2031d0a6b_splitStmts(&((*(_198830_f)).get()._field_Tokens));;
	jule::I32 _200417_i = 0LL;;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_2031d06c5_stmt> _200621_stmt = _200117_stmts[_200417_i];;
			if ((_200621_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200621_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U32>(38LLU))) {
				goto _iter_end_207934a7e;
			};
			if ((!(_21d6774c0_IsTopDirective(_200621_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_207934a7e;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_2031edaab_buildDirective(_self_.ptr(), _200621_stmt.get()._field_tokens));;
		}
	_iter_next_207934a7e:;
	}
	_iter_end_207934a7e:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_2031d06c5_stmt> _202321_stmt = _200117_stmts[_200417_i];;
			_20320ad60_appendNode(_self_, &(_202321_stmt.get()._field_tokens));
			if (_2031ecca8_stopped(_self_.ptr())) {
				goto _iter_end_207934e69;
			};
		}
	_iter_next_207934e69:;
	}
	_iter_end_207934e69:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_2031ed171_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2031ec714_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _20320da11_pushErr(_20320d439_typeBuilder* _self_, jule::Ptr<_21da1aa0b_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_2031ed171_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _20320dd30_pushSuggestion(_20320d439_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_2031ed490_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_2211a478b_TypeDecl> _20320e094_buildPrim(_20320d439_typeBuilder* _self_) {
	jule::Ptr<_2211a478b_TypeDecl> _5517_t = _20320cea5_buildPrimType((*(_self_))._field_tokens[(*((*(_self_))._field_i))]);;
	((*((*(_self_))._field_i)))++;
	return _5517_t;;
}



inline jule::Ptr<_2211a478b_TypeDecl> _20320e308_buildNamespace(_20320d439_typeBuilder* _self_) {
	jule::Ptr<_2211a478b_TypeDecl> _6117_t = jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_2211a5858_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_2211a5858_NamespaceTypeDecl>();;
	jule::I32 _6617_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_21da1aa0b_Token> _6821_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
					_20320da11_pushErr(_self_, _6821_token, jule::Str("invalid syntax", 14));
					_20320dd30_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
				goto _iter_end_20793d280;
			};
			(_6617_n)++;
		}
	_iter_next_20793d280:;
	}
	_iter_end_20793d280:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL, (_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_6517_nst.get()._field_Kind=_20320ea45_buildIdent(_self_);
	_6117_t.get()._field_Kind=jule::Any(_6517_nst, &__jule_any_type96);
	return _6117_t;;
}



inline jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _20320e56c_buildGenerics(_20320d439_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_21da1aa0b_Token> _9413_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_9413_token.get()._field_Kind.equal("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _9917_parts = _20320e7d1_identGenerics(_self_);;
	if ((_9917_parts.len() == 0LL)) {
		_20320da11_pushErr(_self_, _9413_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2211a478b_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_2211a478b_TypeDecl>>::alloc(0LL, _9917_parts.len());;
	{
		auto expr = &(_9917_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207945771:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _10621_part = *it;
			{
				jule::I32 _10721_j = 0LL;;
				jule::Ptr<_2211a478b_TypeDecl> _10822_t;;
				({
					__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType((*(_self_))._field_p, &(_10621_part), (&(_10721_j)), true);
					_10822_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10721_j < _10621_part.len())) {
					_20320da11_pushErr(_self_, _10621_part[_10721_j], jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_207945771:;
			++it;
			goto _iter_begin_207945771;
		}
		_iter_end_207945771:;
	};
	return _10517_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _20320e7d1_identGenerics(_20320d439_typeBuilder* _self_) {
	jule::I32 _11813_first = (*((*(_self_))._field_i));;
	jule::I32 _11917_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_21da1aa0b_Token> _12117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_20794917b:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_207949203:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_207948e5b:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_207947d8e;
			};
		}
	_iter_next_207947d8e:;
	}
	_iter_end_207947d8e:;;
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _13517_tokens = (*(_self_))._field_tokens.slice((_11813_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _13618_parts;;
	jule::Slice<_21d6755de_Log> _13625_errors;;
	({
		__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_assign_result = _2031eb427_parts(&(_13517_tokens), static_cast<jule::U32>(8LLU), true);
		_13618_parts = __jule_assign_result.__jule_result_arg0;
		_13625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;;
}



inline jule::Ptr<_2211a478b_TypeDecl> _20320ea45_buildIdent(_20320d439_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_14417_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U32>(22LLU)))) {
		return _20320e308_buildNamespace(_self_);;
	};
	jule::Ptr<_21da1aa0b_Token> _14817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_2211a4d52_IdentTypeDecl> _14917_it = jule::new_ptr<_2211a4d52_IdentTypeDecl>(_2211a4d52_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_2211a478b_TypeDecl> _15517_itd = jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_14917_it, &__jule_any_type20)});;
	if (((!(_14417_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U32>(20LLU)))) {
		_14917_it.get()._field_Generics=_20320e56c_buildGenerics(_self_);
		return _15517_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_20320da11_pushErr(_self_, _14817_token, jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_20320da11_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	jule::Ptr<_2211a54a1_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_2211a54a1_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_2211a478b_TypeDecl> _17417_ident = _20320ea45_buildIdent(_self_);;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_207953c68:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.cast_ptr<_2211a4d52_IdentTypeDecl>(&__jule_any_type20));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_207953d23:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.cast_ptr<_2211a54a1_SubIdentTypeDecl>(&__jule_any_type92).get()._field_Idents);
			}
		}
		_match_end_207953c13:;
	};
	return jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_17217_sit, &__jule_any_type92)});;
}



inline jule::Ptr<_2211a478b_TypeDecl> _20320eca9_buildCppLink(_20320d439_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U32>(20LLU)))) {
		_20320da11_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_2211a478b_TypeDecl> _19317_t = _20320ea45_buildIdent(_self_);;
	_19317_t.get()._field_Kind.cast_ptr<_2211a4d52_IdentTypeDecl>(&__jule_any_type20).get()._field_CppLinked=true;
	return _19317_t;;
}



inline jule::Ptr<_2211a478b_TypeDecl> _20321001d_buildFn(_20320d439_typeBuilder* _self_) {
	jule::Ptr<_21da1aa0b_Token> _19917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_2211b621a_FnDecl> _20017_f = _203203781_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_20017_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_2211b656c_IsAnon(_20017_f.ptr())))) {
		_20320da11_pushErr(_self_, _20017_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=_19917_token, ._field_Kind=jule::Any(_20017_f, &__jule_any_type14)});;
}



inline jule::Ptr<_2211a478b_TypeDecl> _203210282_buildPtr(_20320d439_typeBuilder* _self_) {
	jule::Ptr<_21da1aa0b_Token> _21417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_20320da11_pushErr(_self_, _21417_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U32>(34LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_2211a6617_PtrTypeDecl>(_2211a6617_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type77)});;
	};
	jule::Ptr<_2211a478b_TypeDecl> _23117_elem = _203211470_step(_self_);;
	if ((_23117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_2211a6617_PtrTypeDecl>(_2211a6617_PtrTypeDecl{._field_Elem=_23117_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_2211a478b_TypeDecl> _2032104e6_buildSptr(_20320d439_typeBuilder* _self_) {
	jule::Ptr<_21da1aa0b_Token> _24517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_20320da11_pushErr(_self_, _24517_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_2211a478b_TypeDecl> _25217_elem = _203211470_step(_self_);;
	if ((_25217_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=_24517_token, ._field_Kind=jule::Any(jule::new_ptr<_2211a5b44_SptrTypeDecl>(_2211a5b44_SptrTypeDecl{._field_Elem=_25217_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_2211a478b_TypeDecl> _20321075a_buildOp(_20320d439_typeBuilder* _self_) {
	jule::Ptr<_21da1aa0b_Token> _26617_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_20796114e:;
			{
				return _203210282_buildPtr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2079620b7:;
			{
				return _2032104e6_buildSptr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_2079621a5:;
			{
				return jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_2211a5b44_SptrTypeDecl>(_2211a5b44_SptrTypeDecl{._field_Elem=_2032104e6_buildSptr(_self_)}), &__jule_any_type78)});;
			}
		}
		else {
			_case_begin_2079617d1:;
			{
				_20320da11_pushErr(_self_, _26617_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_20796165a:;
	};
}



inline jule::Ptr<_2211a478b_TypeDecl> _2032109be_buildSlc(_20320d439_typeBuilder* _self_) {
	jule::Ptr<_21da1aa0b_Token> _28517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_2211a478b_TypeDecl> _28717_elem = _203211470_step(_self_);;
	if ((_28717_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=_28517_token, ._field_Kind=jule::Any(jule::new_ptr<_2211a6040_SlcTypeDecl>(_2211a6040_SlcTypeDecl{._field_Elem=_28717_elem}), &__jule_any_type76)});;
}



inline jule::Ptr<_2211a478b_TypeDecl> _203210c33_buildArr(_20320d439_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _30017_exprTokens = _2031ea8aa_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_20320da11_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_2211a478b_TypeDecl> _30617_elem = _203211470_step(_self_);;
	if ((_30617_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2211a6c99_ArrTypeDecl> _31117_arrt = jule::new_ptr<_2211a6c99_ArrTypeDecl>(_2211a6c99_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_21da1aa0b_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U32>(7LLU))) && _31517_token.get()._field_Kind.equal("...", 3))) {
	} else {
		_31117_arrt.get()._field_Size=_2031ed79d_buildExpr((*(_self_))._field_p, &(_30017_exprTokens));
	};
	return jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=_31517_token, ._field_Kind=jule::Any(_31117_arrt, &__jule_any_type75)});;
}



inline jule::Ptr<_2211a478b_TypeDecl> _203210e97_buildMap(_20320d439_typeBuilder* _self_) {
	jule::Ptr<_21da1aa0b_Token> _32917_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_20320da11_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _33717_keyTokens = _2031ea8aa_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_20320da11_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_20320da11_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_2211a74e7_MapTypeDecl> _34617_mapt = jule::new_ptr<_2211a74e7_MapTypeDecl>();;
	jule::I32 _34717_j = 0LL;;
	jule::Ptr<_2211a478b_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok = false;;
	({
		__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType((*(_self_))._field_p, &(_33717_keyTokens), (&(_34717_j)), (*(_self_))._field_err);
		_34818_keyt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_20320da11_pushErr(_self_, _33717_keyTokens[_34717_j], jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_2211a478b_TypeDecl> _35618_valt;;
	({
		__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_assign_result = _2031eea8a_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_35618_valt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=jule::Any(_34617_mapt, &__jule_any_type79)});;
}



inline jule::Ptr<_2211a478b_TypeDecl> _20321120b_buildEnumerable(_20320d439_typeBuilder* _self_) {
	jule::Ptr<_21da1aa0b_Token> _36817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U32>(3LLU))) || (!_36817_token.get()._field_Kind.equal("[", 1)))) {
		_20320da11_pushErr(_self_, _36817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_36817_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U32>(3LLU)) && _36817_token.get()._field_Kind.equal("]", 1))) {
		return _2032109be_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _203210c33_buildArr(_self_);;
}



inline jule::Ptr<_2211a478b_TypeDecl> _203211470_step(_20320d439_typeBuilder* _self_) {
	jule::Ptr<_21da1aa0b_Token> _38513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_207974dcc:;
			{
				return _20320e094_buildPrim(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_2079751b8:;
			{
				return _20320ea45_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_207975509:;
			{
				return _20320eca9_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_207975570:;
			{
				return _20321001d_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_2079755d6:;
			{
				return _20321075a_buildOp(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_2079749c0:;
			{
				return _20321120b_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_207974a36:;
			{
				return _203210e97_buildMap(_self_);;
			}
		}
		else {
			_case_begin_207974959:;
			{
				((*((*(_self_))._field_i)))++;
				_20320da11_pushErr(_self_, _38513_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_2079747d3:;
	};
}



inline __jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool _2032116d4_build(_20320d439_typeBuilder* _self_) {
	__jule_tuple_x_2211a478b_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_2211a478b_TypeDecl> _41117_root = _203211470_step(_self_);;
	if ((_41117_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _20320cc63_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _41117_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _20320d439_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22160b42e_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _22160ccd2_pushErr(_22160c782_directiveEval* _self_, jule::Ptr<_21da1aa0b_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*(_self_))._field_logs = jule::alloc_for_append((*(_self_))._field_logs,1);(*(_self_))._field_logs.__push(_21d6755de_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_21d675a2e_Logf(_2137_fmt, _2150_args), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _22160d189_splitOperans(_22160c782_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>>::alloc(0LL, 10LL);;
	jule::I32 _3617_i = 0LL;;
	jule::I32 _3717_rangeN = 0LL;;
	jule::I32 _3817_last = 0LL;;
	for (; (_3617_i < ((*(_3351_tokens)).len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_21da1aa0b_Token> _4017_b = (*(_3351_tokens))[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_20799a30e:;
						{
							(_3717_rangeN)++;
							goto _iter_next_207998494;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_20799a375:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_20799a0de:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U32>(7LLU)))) {
				goto _iter_next_207998494;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last, _3617_i));;
				_3817_last=static_cast<jule::I32>((_3617_i + 1LL));
			};
		}
	_iter_next_207998494:;
	}
	_iter_end_207998494:;;
	if ((_3817_last < (*(_3351_tokens)).len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last));;
	} else {
		_22160ccd2_pushErr(_self_, (*(_3351_tokens))[(_3817_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _22160d497_evalDirectiveIdent(_22160c782_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20799d279:;
		if (it != expr_end) {
			jule::Str *_7716_var = it;
			{
				if (((*(_7716_var)) == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_20799d279:;
			++it;
			goto _iter_begin_20799d279;
		}
		_iter_end_20799d279:;
	};
	return false;;
}



inline jule::Bool _22160d7a5_evalDirectivePart(_22160c782_directiveEval* _self_, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U32>(7LLU)) && _8740_part[0LL].get()._field_Kind.equal("!", 1));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_22160ccd2_pushErr(_self_, _8740_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _22160d497_evalDirectiveIdent(_self_, _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _22160da19_eval(_22160c782_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_22160ccd2_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _11317_logicalOrParts = _22160d189_splitOperans(_self_, jule::Str("||", 2), &((*(_self_))._field_d.get()._field_Args));;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_11317_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079a446c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _12021_logicalAndParts = _22160d189_splitOperans(_self_, jule::Str("&&", 2), &(_11821_part));;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_12021_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2079a566b:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_21da1aa0b_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_21da1aa0b_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U32>(3LLU)) && _12621_first.get()._field_Kind.equal("(", 1))) {
								jule::Ptr<_21da1aa0b_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_12825_end.get()._field_Kind.equal(")", 1)))) {
									_22160ccd2_pushErr(_self_, _12621_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL, (_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _22160d7a5_evalDirectivePart(_self_, _12525_andPart));
						}
						_iter_next_2079a566b:;
						++it;
						goto _iter_begin_2079a566b;
					}
					_iter_end_2079a566b:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_2079a446c:;
			++it;
			goto _iter_begin_2079a446c;
		}
		_iter_end_2079a446c:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _22160c782_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2032126a2_JuleImporter> static__203212ad1_New(_22160b42e_CompileInfo _5819_info) {
	jule::Ptr<_2032126a2_JuleImporter> _5917_imp = jule::new_ptr<_2032126a2_JuleImporter>(_2032126a2_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_21d71a19a_PathStdlib}), });;
	_22160bc48_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_221242a9e_ImportInfo>> _203212d45_AllPackages(_2032126a2_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _20321320d_SetModPath(_2032126a2_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _203213472_GetModPath(_2032126a2_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _203213780_ModById(_2032126a2_JuleImporter* _self_, jule::I32 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_221242a9e_ImportInfo> _203213a8d_GetImport(_2032126a2_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079ac552:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_2079ac552:;
			++it;
			goto _iter_begin_2079ac552;
		}
		_iter_end_2079ac552:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_22117005e_Ast__jule_tuple_s_21d6755de_Log _203213e45_ImportPackage(_2032126a2_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_22117005e_Ast__jule_tuple_s_21d6755de_Log __jule_func_result;
	jule::Slice<jule::Ptr<_21c4ddbd9_DirEntry>> _9717_dirents = ({
		auto except = static__21d5e0823_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_21d6755de_Log>::make({_20321221d_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_21c4ddbd9_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _22161ca17_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_21d6755de_Log> _10525_errs = _22161cc15_CheckModuleFile((*(_self_))._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_22117005e_Ast>> _11217_asts = jule::Slice<jule::Ptr<_22117005e_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079b1589:;
		if (it != expr_end) {
			jule::Ptr<_21c4ddbd9_DirEntry> _11316_dirent = *it;
			{
				if ((_21c4ed468_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_21d5d4ebb_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_2079b1589;
				};
				jule::Str _11917__path = _21d5de4c0_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_21da20d96_File> _12021_file = _21da223c5_NewFileSet(_11917__path);;
				_21da21528_Fill(_12021_file.ptr(), _203211e65_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_21d6755de_Log> _12221_errors = _21da2cc71_Lex(_12021_file, static_cast<jule::I32>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_203186a99_FileInfo> _12721_finfo = _2031cd618_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_2215e1ba6_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_2079b1589;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_21d6755de_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_21d6755de_Log __jule_assign_result = _20321460a_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_2079b1589;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_2079b1589:;
			++it;
			goto _iter_begin_2079b1589;
		}
		_iter_end_2079b1589:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _2032141ba_Imported(_2032126a2_JuleImporter* _self_, jule::Ptr<_221242a9e_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079b6a01:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_2079b6a01:;
			++it;
			goto _iter_begin_2079b6a01;
		}
		_iter_end_2079b6a01:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2079b82c7:;
			if (it != expr_end) {
				jule::I32 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_2079b82c7:;
				++it;
				_16217_i++;
				goto _iter_begin_2079b82c7;
			}
			_iter_end_2079b82c7:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I32>((*(_self_))._field_mods.len());
		(*(_self_))._field_mods = jule::alloc_for_append((*(_self_))._field_mods,1);(*(_self_))._field_mods.__push((*(_self_))._field_mod);;
		_julec_label_setted:;
	};
	(*(_self_))._field_pkgs = jule::alloc_for_append((*(_self_))._field_pkgs,1);(*(_self_))._field_pkgs.__push(_15331_imp);;
}



inline __jule_tuple_bool__jule_tuple_s_21d6755de_Log _20321460a_isPassBuildDirectives(_2032126a2_JuleImporter* _self_, jule::Ptr<_22117005e_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_21d6755de_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079bb3eb:;
		if (it != expr_end) {
			jule::Ptr<_221171307_Directive> _18021_td = *it;
			{
				if ((!_18021_td.get()._field_Tag.get()._field_Kind.equal("build", 5))) {
					goto _iter_next_2079bb3eb;
				};
				_22160c782_directiveEval _18421_de = _22160c782_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _22160da19_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_2079bb3eb:;
			++it;
			goto _iter_begin_2079bb3eb;
		}
		_iter_end_2079bb3eb:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _2032126a2_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _203217454_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2079db905_isCommonOrdered(jule::Slice<jule::Ptr<_2211c48cc_Struct>> _1834_s, jule::Ptr<_2211c48cc_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079dc9a0:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2079dd2b9:;
					if (it != expr_end) {
						jule::Ptr<_2211c48cc_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_2079dd2b9:;
						++it;
						goto _iter_begin_2079dd2b9;
					}
					_iter_end_2079dd2b9:;
				};
			}
			_iter_next_2079dc9a0:;
			++it;
			goto _iter_begin_2079dc9a0;
		}
		_iter_end_2079dc9a0:;
	};
	return true;;
}

inline jule::Bool _2079e170c_isCommonOrdered(jule::Slice<jule::Ptr<_22126b17c_Var>> _1834_s, jule::Ptr<_22126b17c_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079e2763:;
		if (it != expr_end) {
			jule::Ptr<_22126b17c_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2079e307c:;
					if (it != expr_end) {
						jule::Ptr<_22126b17c_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_2079e307c:;
						++it;
						goto _iter_begin_2079e307c;
					}
					_iter_end_2079e307c:;
				};
			}
			_iter_next_2079e2763:;
			++it;
			goto _iter_begin_2079e2763;
		}
		_iter_end_2079e2763:;
	};
	return true;;
}



inline void _2079d81b5_orderCommon(jule::Slice<jule::Ptr<_2211c48cc_Struct>>* _3135_s) {
	jule::I32 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079d96c2:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I32 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_2079db905_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I32>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_2079da508:;
				}
				_iter_end_2079da508:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_2079d96c2;
				};
				(_3217_n)--;
			}
			_iter_next_2079d96c2:;
			++it;
			goto _iter_begin_2079d96c2;
		}
		_iter_end_2079d96c2:;
	};
}

inline void _2079d8a01_orderCommon(jule::Slice<jule::Ptr<_22126b17c_Var>>* _3135_s) {
	jule::I32 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079de4c9:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I32 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_2079e170c_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I32>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_2079e0310:;
				}
				_iter_end_2079e0310:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_2079de4c9;
				};
				(_3217_n)--;
			}
			_iter_next_2079de4c9:;
			++it;
			goto _iter_begin_2079de4c9;
		}
		_iter_end_2079de4c9:;
	};
}



inline void static__20321808c_orderStructures(jule::Slice<jule::Ptr<_2211c48cc_Struct>>* _5136_structs) {
	_2079d81b5_orderCommon(_5136_structs);
}



inline void static__20321829b_orderVars(jule::Slice<jule::Ptr<_22126b17c_Var>>* _5730_vars) {
	_2079d8a01_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _2032176b8_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _203310096_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _20334631e_optimizeChild(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Ptr<_221224135_Scope>* _3938_s) {
	jule::Ptr<_203345d46_scopeDeadCode> _4017_sdc = jule::new_ptr<_203345d46_scopeDeadCode>(_203345d46_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_20334895e_optimizeStmts(_4017_sdc);
	};
}



inline void _2033465b6_optimizeBodyChildExceptional(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Ptr<_221224135_Scope>* _5053_s) {
	jule::Ptr<_203345d46_scopeDeadCode> _5117_sdc = jule::new_ptr<_203345d46_scopeDeadCode>(_203345d46_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_20334895e_optimizeStmts(_5117_sdc);
	};
}



inline void _20334684c_optimizeBodyChild(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Ptr<_221224135_Scope>* _6142_s) {
	jule::Ptr<_203345d46_scopeDeadCode> _6217_sdc = jule::new_ptr<_203345d46_scopeDeadCode>(_203345d46_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_20334895e_optimizeStmts(_6217_sdc);
	};
}



inline void _203346ac2_optimizeExprModel(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_203349ca1_exprDeadCode _7213_edc = static__20334a3cd_new(&(_self_));;
	_2033510e8_optimize(&_7213_edc, _7142_model);
}



inline void _203346c9d_eliminateFollowed(_203345d46_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_203345d46_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_20792362d:;
	}
	_iter_end_20792362d:;;
}



inline void _203347023_pushGoto(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Ptr<_221226b60_GotoSt> _9232_gt) {
	jule::I32 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_207a86ebc:;
	}
	_iter_end_207a86ebc:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_221226b60_GotoSt>>::make({_9232_gt}));
}



inline void _203347298_pushLabel(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Ptr<_221226874_Label> _10233_l) {
	jule::I32 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_207a8872c;
			};
			(_10317_i)++;
		}
	_iter_next_207a8872c:;
	}
	_iter_end_207a8872c:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_221226874_Label>>::make({_10233_l}));
}



inline void _20334751d_optimizeRangeIter(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Ptr<_221225cd5_RangeIter> _11541_it) {
	_203346ac2_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_20334684c_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _203347793_optimizeWhileIter(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Ptr<_221225400_WhileIter> _12041_it) {
	_203346ac2_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_203348783_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_20334684c_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _203347a18_optimizeInfIter(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Ptr<_221224e7c_InfIter> _12839_it) {
	_20334684c_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _203347c8d_optimizeConditional(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Ptr<_221224b91_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a8e39d:;
		if (it != expr_end) {
			jule::Ptr<_221224531_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_203346ac2_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_20334684c_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_207a8e39d:;
			++it;
			goto _iter_begin_207a8e39d;
		}
		_iter_end_207a8e39d:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_20334631e_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_20334684c_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _203348013_optimizeMatch(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Ptr<_221227e4c_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a91b86:;
		if (it != expr_end) {
			jule::Ptr<_221228997_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207a924b1:;
					if (it != expr_end) {
						jule::Ptr<_221425c2c_Data> _15225_expr = *it;
						{
							_203346ac2_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_207a924b1:;
						++it;
						goto _iter_begin_207a924b1;
					}
					_iter_end_207a924b1:;
				};
				_20334684c_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_207a91b86:;
			++it;
			goto _iter_begin_207a91b86;
		}
		_iter_end_207a91b86:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_20334631e_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_20334684c_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _203348288_optimizeAssign(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Ptr<_22122748a_Assign> _16838_assign) {
	_203346ac2_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_203346ac2_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _20334850d_optimizeMultiAssign(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Ptr<_221227842_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a95470:;
		if (it != expr_end) {
			jule::Ptr<_221425c2c_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_203346ac2_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_207a95470:;
			++it;
			goto _iter_begin_207a95470;
		}
		_iter_end_207a95470:;
	};
	_203346ac2_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _203348783_optimizeStmt(jule::Ptr<_203345d46_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_207a969b0:;
			{
				jule::Ptr<_221224135_Scope> _18521_scope = _18236_st.cast_ptr<_221224135_Scope>(&__jule_any_type22);;
				if (_18521_scope.get()._field_Deferred) {
					_203348c4a_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_20334631e_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_207a96b36:;
			{
				_20334751d_optimizeRangeIter(_self_, _18236_st.cast_ptr<_221225cd5_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_207a96b9c:;
			{
				_203347793_optimizeWhileIter(_self_, _18236_st.cast_ptr<_221225400_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_207a96c13:;
			{
				_203347a18_optimizeInfIter(_self_, _18236_st.cast_ptr<_221224e7c_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_207a96c8a:;
			{
				_203347c8d_optimizeConditional(_self_, _18236_st.cast_ptr<_221224b91_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_207a96d12:;
			{
				_203348013_optimizeMatch(_self_, _18236_st.cast_ptr<_221227e4c_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_207a96d89:;
			{
				_203348288_optimizeAssign(_self_, _18236_st.cast_ptr<_22122748a_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_207a96e11:;
			{
				_20334850d_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_221227842_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_207a96e88:;
			{
				jule::Ptr<_221425c2c_Data> _20621_d = _18236_st.cast_ptr<_221425c2c_Data>(&__jule_any_type24);;
				if (_self_.get()._field_except) {
					goto _match_end_207a96ac0;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type30) {
						_case_begin_207a9c60e:;
						{
							_203346c9d_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_207a9bed2:;
						{
							_203346ac2_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_207a9be7c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_207a97010:;
			{
				_203346c9d_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_207a97087:;
			{
				_203347023_pushGoto(_self_, _18236_st.cast_ptr<_221226b60_GotoSt>(&__jule_any_type43));
				_203346c9d_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_207a9710e:;
			{
				_203347298_pushLabel(_self_, _18236_st.cast_ptr<_221226874_Label>(&__jule_any_type21));
			}
		}
		_match_end_207a96ac0:;
	};
}



inline void _20334895e_optimizeStmts(jule::Ptr<_203345d46_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_203348783_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_207a9e08e:;
	}
	_iter_end_207a9e08e:;;
}







std::ostream &operator<<(std::ostream &_Stream, _203345d46_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _203349ca1_exprDeadCode static__20334a3cd_new(jule::Ptr<_203345d46_scopeDeadCode>* _5024_s) {
	return _203349ca1_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _20334a653_binary(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211cbb59_BinopExprModel> _5625_m) {
	_2033510e8_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_2033510e8_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _20334a8c8_unary(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211cc011_UnaryExprModel> _6124_m) {
	_2033510e8_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _20334ab4d_structureLit(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211cc7b4_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207aa1e1b:;
		if (it != expr_end) {
			jule::Ptr<_2211cc40c_StructArgExprModel> _6621_arg = *it;
			{
				_2033510e8_optimize(_self_, &(_6621_arg.get()._field_Expr));
			}
			_iter_next_207aa1e1b:;
			++it;
			goto _iter_begin_207aa1e1b;
		}
		_iter_end_207aa1e1b:;
	};
}



inline void _20334adc3_allocStructure(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211ccac2_AllocStructLitExprModel> _7133_m) {
	_20334ab4d_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _20334b148_casting(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211cd122_CastingExprModel> _7526_m) {
	_2033510e8_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _20334b3bd_args(_203349ca1_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207aa3e1d:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_2033510e8_optimize(_self_, &(_8021_arg));
			}
			_iter_next_207aa3e1d:;
			++it;
			goto _iter_begin_207aa3e1d;
		}
		_iter_end_207aa3e1d:;
	};
}



inline void _20334b643_funcCall(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211cd9c4_FnCallExprModel> _8527_m) {
	_2033510e8_optimize(_self_, &(_8527_m.get()._field_Expr));
	_20334b3bd_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_2033465b6_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _20334b8b8_slice(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211cdd7b_SliceExprModel> _9324_m) {
	_20334b3bd_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _20334bb3d_array(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d1aa4_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_2033510e8_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_20334b3bd_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _20334bdb3_indexing(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211ce2ee_IndexingExprModel> _10427_m) {
	_2033510e8_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_2033510e8_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _20334c138_anonFunc(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211ce6a6_AnonFnExprModel> _10927_m) {
	_203348c4a_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _20334c3ad_mapExpr(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211ceed1_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207aa95a5:;
		if (it != expr_end) {
			jule::Ptr<_2211cea5d_KeyValPairExprModel> _11421_pair = *it;
			{
				_2033510e8_optimize(_self_, &(_11421_pair.get()._field_Key));
				_2033510e8_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_207aa95a5:;
			++it;
			goto _iter_begin_207aa95a5;
		}
		_iter_end_207aa95a5:;
	};
}



inline void _20334c633_slicing(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d0520_SlicingExprModel> _12026_m) {
	_2033510e8_optimize(_self_, &(_12026_m.get()._field_Expr));
	_2033510e8_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_2033510e8_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _20334c8a8_traitSub(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d0a5e_TraitSubIdentExprModel> _12827_m) {
	_2033510e8_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _20334cb2d_structureSub(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d1345_StructSubIdentExprModel> _13231_m) {
	_2033510e8_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _20334cda3_commonSub(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d2401_CommonSubIdentExprModel> _13628_m) {
	_2033510e8_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _20334d128_tuple(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d26ed_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207aad433:;
		if (it != expr_end) {
			jule::Ptr<_221425c2c_Data> _14121_d = *it;
			{
				_2033510e8_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_207aad433:;
			++it;
			goto _iter_begin_207aad433;
		}
		_iter_end_207aad433:;
	};
}



inline void _20334d39d_newCall(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d36bb_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_2033510e8_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _20334d623_outCall(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d2ac7_BuiltinOutCallExprModel> _15226_m) {
	_2033510e8_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _20334d898_outlnCall(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d2eb2_BuiltinOutlnCallExprModel> _15628_m) {
	_2033510e8_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _20334db1d_panicCall(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d3aa6_BuiltinPanicCallExprModel> _16028_m) {
	_2033510e8_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _20334dd93_assertCall(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d405c_BuiltinAssertCallExprModel> _16429_m) {
	_2033510e8_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _20334e118_errorCall(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d5e3d_BuiltinErrorCallExprModel> _16828_m) {
	_2033510e8_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _20334e38d_makeCall(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d4513_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_2033510e8_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_2033510e8_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _20334e613_appendCall(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d48ed_BuiltinAppendCallExprModel> _18129_m) {
	_2033510e8_optimize(_self_, &(_18129_m.get()._field_Dest));
	_2033510e8_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _20334e888_lenCall(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d4c1c_BuiltinLenCallExprModel> _18626_m) {
	_2033510e8_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _20334eb0d_capCall(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d503b_BuiltinCapCallExprModel> _19026_m) {
	_2033510e8_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _20334ed83_cloneCall(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d32d1_BuiltinCloneCallExprModel> _19428_m) {
	_2033510e8_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _203350108_deleteCall(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d56e0_BuiltinDeleteCallExprModel> _19829_m) {
	_2033510e8_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_2033510e8_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _20335037d_sizeof(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d623a_SizeofExprModel> _20525_m) {
	_2033510e8_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _203350603_alignof(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d6526_AlignofExprModel> _20926_m) {
	_2033510e8_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _203350878_integratedToStr(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d6b20_IntegratedToStrExprModel> _21334_m) {
	_2033510e8_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _203350aed_free(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d72c4_FreeExprModel> _21723_m) {
	_2033510e8_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _203350d73_backendEmit(_203349ca1_exprDeadCode* _self_, jule::Ptr<_2211d6ed8_BackendEmitExprModel> _22130_m) {
	_20334b3bd_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _2033510e8_optimize(_203349ca1_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_207ab9d13:;
			{
				_20334a653_binary(_self_, (*(_22528_model)).cast_ptr<_2211cbb59_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_207ab9d8a:;
			{
				_20334a8c8_unary(_self_, (*(_22528_model)).cast_ptr<_2211cc011_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_207ab9e12:;
			{
				_20334ab4d_structureLit(_self_, (*(_22528_model)).cast_ptr<_2211cc7b4_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_207aba2db:;
			{
				_20334adc3_allocStructure(_self_, (*(_22528_model)).cast_ptr<_2211ccac2_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_207aba352:;
			{
				_20334b148_casting(_self_, (*(_22528_model)).cast_ptr<_2211cd122_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_207aba3c9:;
			{
				_20334b643_funcCall(_self_, (*(_22528_model)).cast_ptr<_2211cd9c4_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_207aba451:;
			{
				_20334b8b8_slice(_self_, (*(_22528_model)).cast_ptr<_2211cdd7b_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_207aba4c8:;
			{
				_20334bb3d_array(_self_, (*(_22528_model)).cast_ptr<_2211d1aa4_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_207aba550:;
			{
				_20334bdb3_indexing(_self_, (*(_22528_model)).cast_ptr<_2211ce2ee_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_207aba5c7:;
			{
				_20334c138_anonFunc(_self_, (*(_22528_model)).cast_ptr<_2211ce6a6_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_207aba64e:;
			{
				_20334c3ad_mapExpr(_self_, (*(_22528_model)).cast_ptr<_2211ceed1_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_207aba6c6:;
			{
				_20334c633_slicing(_self_, (*(_22528_model)).cast_ptr<_2211d0520_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_207aba74d:;
			{
				_20334c8a8_traitSub(_self_, (*(_22528_model)).cast_ptr<_2211d0a5e_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_207aba7c5:;
			{
				_20334cb2d_structureSub(_self_, (*(_22528_model)).cast_ptr<_2211d1345_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_207aba84c:;
			{
				_20334cda3_commonSub(_self_, (*(_22528_model)).cast_ptr<_2211d2401_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_207aba8c4:;
			{
				_20334d128_tuple(_self_, (*(_22528_model)).cast_ptr<_2211d26ed_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_207aba94b:;
			{
				_20334d623_outCall(_self_, (*(_22528_model)).cast_ptr<_2211d2ac7_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_207aba9c3:;
			{
				_20334d898_outlnCall(_self_, (*(_22528_model)).cast_ptr<_2211d2eb2_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_207abaa4a:;
			{
				_20334d39d_newCall(_self_, (*(_22528_model)).cast_ptr<_2211d36bb_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_207abaac2:;
			{
				_20334db1d_panicCall(_self_, (*(_22528_model)).cast_ptr<_2211d3aa6_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_207abab49:;
			{
				_20334dd93_assertCall(_self_, (*(_22528_model)).cast_ptr<_2211d405c_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_207ababc1:;
			{
				_20334e118_errorCall(_self_, (*(_22528_model)).cast_ptr<_2211d5e3d_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_207abac48:;
			{
				_20334e38d_makeCall(_self_, (*(_22528_model)).cast_ptr<_2211d4513_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_207abacc0:;
			{
				_20334e613_appendCall(_self_, (*(_22528_model)).cast_ptr<_2211d48ed_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_207abad47:;
			{
				_20334e888_lenCall(_self_, (*(_22528_model)).cast_ptr<_2211d4c1c_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_207abadbe:;
			{
				_20334eb0d_capCall(_self_, (*(_22528_model)).cast_ptr<_2211d503b_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_207abae46:;
			{
				_20334ed83_cloneCall(_self_, (*(_22528_model)).cast_ptr<_2211d32d1_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_207abaebd:;
			{
				_203350108_deleteCall(_self_, (*(_22528_model)).cast_ptr<_2211d56e0_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_207abb045:;
			{
				_20335037d_sizeof(_self_, (*(_22528_model)).cast_ptr<_2211d623a_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_207abb0bc:;
			{
				_203350603_alignof(_self_, (*(_22528_model)).cast_ptr<_2211d6526_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_207abb144:;
			{
				_203350878_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_2211d6b20_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_207abb1bb:;
			{
				_203350aed_free(_self_, (*(_22528_model)).cast_ptr<_2211d72c4_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_207abb243:;
			{
				_203350d73_backendEmit(_self_, (*(_22528_model)).cast_ptr<_2211d6ed8_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_207aba011:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _203349ca1_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221523775_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221523b3d_StrAppendExprModel _Src) {
	_Stream << "StrAppendExprModel{";
	_Stream << "Str:" << _Src._field_Str << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221523e29_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2215242ae_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221524644_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221524b83_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22152505c_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22152626c_scopeOptimizer> static__2215267cd_new(jule::Ptr<_221224135_Scope> _4623_scope) {
	return jule::new_ptr<_22152626c_scopeOptimizer>(_22152626c_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _221526a53_setCurrentStmt(_22152626c_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _221526cc8_optimizeData(_22152626c_scopeOptimizer* _self_, jule::Ptr<_221425c2c_Data> _5635_d) {
	{
		auto &_match_expr{ _5635_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_207b0636b:;
			{
				jule::Ptr<_2211cd9c4_FnCallExprModel> _5921_m = _5635_d.get()._field_Model.cast_ptr<_2211cd9c4_FnCallExprModel>(&__jule_any_type35);;
				if (_21b538b25_Production) {
					if (((!(_2211ddd14_IsBuiltin(_5921_m.get()._field_Func.ptr()))) && _221529e41_isStdPackage(_5921_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("debug", 5)))) {
						_221526a53_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_207b0615c:;
	};
	static__22152c196_optimize(&(_5635_d.get()._field_Model));
}



inline void _22152704d_optimizeVar(_22152626c_scopeOptimizer* _self_, jule::Ptr<_22126b17c_Var> _7134_v) {
	if ((_7134_v.get()._field_Value != nullptr)) {
		static__22152c196_optimize(&(_7134_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _2215272c3_optimizeConditional(_22152626c_scopeOptimizer* _self_, jule::Ptr<_221224b91_Conditional> _7742_c) {
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b09160:;
		if (it != expr_end) {
			jule::Ptr<_221224531_If> _7821_elif = *it;
			{
				static__22152c196_optimize(&(_7821_elif.get()._field_Expr));
				_221529869_optimizeChild(_self_, _7821_elif.get()._field_Scope);
			}
			_iter_next_207b09160:;
			++it;
			goto _iter_begin_207b09160;
		}
		_iter_end_207b09160:;
	};
	if ((_7742_c.get()._field_Default != nullptr)) {
		_221529869_optimizeChild(_self_, _7742_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_221535600_Cond))) {
		return;;
	};
	jule::Bool _9017_constCase = false;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b0ac77:;
		if (it != expr_end) {
			jule::I32 _9314_i = it - expr->begin();
			jule::Ptr<_221224531_If> _9321_elif = *it;
			{
				if ((!(_22152a24e_isConstantValidConditionalCase(&(_9321_elif))))) {
					goto _iter_next_207b0ac77;
				};
				_9017_constCase=true;
				_7742_c.get()._field_Elifs=_7742_c.get()._field_Elifs.slice(0LL, _9314_i);
				_7742_c.get()._field_Default=jule::new_ptr<_22122481c_Else>(_22122481c_Else{._field_Scope=_9321_elif.get()._field_Scope});
				goto _iter_end_207b0ac77;
			}
			_iter_next_207b0ac77:;
			++it;
			_9314_i++;
			goto _iter_begin_207b0ac77;
		}
		_iter_end_207b0ac77:;
	};
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_221224531_If>* _11017_i = (&(_7742_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_221224531_If>* _11113_end = (&(_7742_c.get()._field_Elifs[(_7742_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_11017_i <= _11113_end); (_11017_i)++) {
		{
			{
				if (_22152aae0_isUnreachableConditionalCase(&((*(_11017_i))))) {
					(*(_11017_i))=nullptr;
				};
			};
		}
	_iter_next_207b0de12:;
	}
	_iter_end_207b0de12:;;
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9017_constCase))) {
		return;;
	};
	jule::I32 _12917_only = -1LL;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b10562:;
		if (it != expr_end) {
			jule::I32 _13013_j = it - expr->begin();
			jule::Ptr<_221224531_If> _13016_elif = *it;
			{
				if ((_13016_elif != nullptr)) {
					if ((_12917_only != -1LL)) {
						return;;
					};
					_12917_only=_13013_j;
				};
			}
			_iter_next_207b10562:;
			++it;
			_13013_j++;
			goto _iter_begin_207b10562;
		}
		_iter_end_207b10562:;
	};
	if ((_12917_only != -1LL)) {
		_221526a53_setCurrentStmt(_self_, jule::Any(_7742_c.get()._field_Elifs[_12917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _2215276ad_buildDefaultConstatTrueCase(_22152626c_scopeOptimizer* _self_, jule::Ptr<_221228997_Case> _14650_case, jule::I32* _14668_i, jule::Ptr<_221227e4c_Match>* _14681_m) {
	_14650_case.get()._field_Exprs=nullptr;
	jule::I32 _14813_start = (*(_14668_i));;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14650_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_207b12e38;
			};
			jule::Any *_15422_stmt = &(_14650_case.get()._field_Scope.get()._field_Stmts[(_14650_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15422_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_207b13444:;
					{
						((*(_14668_i)))++;
						if (((*(_14668_i)) >= (*(_14681_m)).get()._field_Cases.len())) {
							(*(_15422_stmt))=jule::Any((*(_14681_m)).get()._field_Default.get()._field_Scope, &__jule_any_type22);
							goto _iter_end_207b12e38;
						};
						_14650_case=(*(_14681_m)).get()._field_Cases[(*(_14668_i))];
						(*(_15422_stmt))=jule::Any(_14650_case.get()._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_207b14973:;
					{
						goto _iter_end_207b12e38;
					}
				}
				_match_end_207b14885:;
			};
		}
	_iter_next_207b12e38:;
	}
	_iter_end_207b12e38:;;
	(*(_14681_m)).get()._field_Default=(*(_14681_m)).get()._field_Cases[_14813_start];
	(*(_14681_m)).get()._field_Cases=(*(_14681_m)).get()._field_Cases.slice(0LL, _14813_start);
}



inline void _2215278bc_optimizeMatch(_22152626c_scopeOptimizer* _self_, jule::Ptr<_221227e4c_Match> _17236_m) {
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b169ca:;
		if (it != expr_end) {
			jule::Ptr<_221228997_Case> _17321_case = *it;
			{
				{
					auto expr = &(_17321_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207b17316:;
					if (it != expr_end) {
						jule::Ptr<_221425c2c_Data> _17425_expr = *it;
						{
							static__22152c196_optimize(&(_17425_expr.get()._field_Model));
						}
						_iter_next_207b17316:;
						++it;
						goto _iter_begin_207b17316;
					}
					_iter_end_207b17316:;
				};
				_221529869_optimizeChild(_self_, _17321_case.get()._field_Scope);
			}
			_iter_next_207b169ca:;
			++it;
			goto _iter_begin_207b169ca;
		}
		_iter_end_207b169ca:;
	};
	if ((_17236_m.get()._field_Default != nullptr)) {
		_221529869_optimizeChild(_self_, _17236_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_221535600_Cond))) {
		return;;
	};
	jule::Bool _18717_constCase = false;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b18c30:;
		if (it != expr_end) {
			jule::I32 _19018_i = it - expr->begin();
			jule::Ptr<_221228997_Case> _19025_case = *it;
			{
				if ((!(_22152a848_isConstantValidMatchCase(&(_19025_case))))) {
					goto _iter_next_207b18c30;
				};
				_18717_constCase=true;
				_2215276ad_buildDefaultConstatTrueCase(_self_, _19025_case, &(_19018_i), &(_17236_m));
				goto _iter_end_207b18c30;
			}
			_iter_next_207b18c30:;
			++it;
			_19018_i++;
			goto _iter_begin_207b18c30;
		}
		_iter_end_207b18c30:;
	};
	if ((_17236_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_221228997_Case>* _20417_i = (&(_17236_m.get()._field_Cases[0LL]));;
	jule::Ptr<_221228997_Case>* _20513_end = (&(_17236_m.get()._field_Cases[(_17236_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20417_i <= _20513_end); (_20417_i)++) {
		{
			{
				if (_22152ad98_isUnreachableMatchCase(&((*(_20417_i))))) {
					(*(_20417_i))=nullptr;
				};
			};
		}
	_iter_next_207b1b837:;
	}
	_iter_end_207b1b837:;;
	if ((!(_18717_constCase))) {
		return;;
	};
	jule::I32 _21917_only = -1LL;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b1c8e3:;
		if (it != expr_end) {
			jule::I32 _22013_j = it - expr->begin();
			jule::Ptr<_221228997_Case> _22016_case = *it;
			{
				if ((_22016_case != nullptr)) {
					if ((_21917_only != -1LL)) {
						return;;
					};
					_21917_only=_22013_j;
				};
			}
			_iter_next_207b1c8e3:;
			++it;
			_22013_j++;
			goto _iter_begin_207b1c8e3;
		}
		_iter_end_207b1c8e3:;
	};
	if ((_21917_only != -1LL)) {
		_221526a53_setCurrentStmt(_self_, jule::Any(_17236_m.get()._field_Cases[_21917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _221527b42_optimizeRangeIter(_22152626c_scopeOptimizer* _self_, jule::Ptr<_221225cd5_RangeIter> _23640_it) {
	static__22152c196_optimize(&(_23640_it.get()._field_Expr.get()._field_Model));
	_221529869_optimizeChild(_self_, _23640_it.get()._field_Scope);
}



inline void _221527db7_optimizeWhileIter(_22152626c_scopeOptimizer* _self_, jule::Ptr<_221225400_WhileIter> _24140_it) {
	static__22152c196_optimize(&(_24140_it.get()._field_Expr));
	_2215295e4_optimizeStmt(_self_, _24140_it.get()._field_Next);
	_221529869_optimizeChild(_self_, _24140_it.get()._field_Scope);
}



inline jule::Bool _2215281c5_substr(_22152626c_scopeOptimizer* _self_, jule::Ptr<_22122748a_Assign> _24729_a) {
	if ((!_24729_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _24729_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_207b21b6c:;
			{
				jule::Ptr<_2211d0520_SlicingExprModel> _25321_sem = _24729_a.get()._field_R.get()._field_Model.cast_ptr<_2211d0520_SlicingExprModel>(&__jule_any_type97);;
				if ((_25321_sem.get()._field_Expr == _24729_a.get()._field_L.get()._field_Model)) {
					_221526a53_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_221524b83_MutSlicingExprModel>(_221524b83_MutSlicingExprModel{._field_Token=_25321_sem.get()._field_Token, ._field_Expr=_25321_sem.get()._field_Expr, ._field_Left=_25321_sem.get()._field_Left, ._field_Right=_25321_sem.get()._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_207b21ae5:;
	};
	return false;;
}



inline jule::Bool _2215284d3_strInsert(_22152626c_scopeOptimizer* _self_, jule::Ptr<_22122748a_Assign> _26732_a) {
	if ((!_26732_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _26732_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_207b24510:;
			{
				jule::Ptr<_2211cbb59_BinopExprModel> _27321_m = _26732_a.get()._field_R.get()._field_Model.cast_ptr<_2211cbb59_BinopExprModel>(&__jule_any_type114);;
				if ((_27321_m.get()._field_Right.get()._field_Model == _26732_a.get()._field_L.get()._field_Model)) {
					_221526a53_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_22152505c_StrInsertBeginExprModel>(_22152505c_StrInsertBeginExprModel{._field_Dest=_26732_a.get()._field_L.get()._field_Model, ._field_Expr=_27321_m.get()._field_Left.get()._field_Model}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_207b24488:;
	};
	return false;;
}



inline jule::Bool _2215287e1_strAppend(_22152626c_scopeOptimizer* _self_, jule::Ptr<_22122748a_Assign> _28532_a) {
	if ((!_28532_a.get()._field_Op.get()._field_Kind.equal("+=", 2))) {
		return false;;
	};
	{
		auto &_match_expr{ _28532_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_207b26da3:;
			{
				_221526a53_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_221523b3d_StrAppendExprModel>(_221523b3d_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_28532_a.get()._field_R.get()._field_Model}), &__jule_any_type125));
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_207b26e19:;
			{
				jule::Ptr<_2211cd122_CastingExprModel> _30021_c = _28532_a.get()._field_R.get()._field_Model.cast_ptr<_2211cd122_CastingExprModel>(&__jule_any_type98);;
				jule::Ptr<_22145a5be_Prim> _30121_prim = _221455a92_Prim(_30021_c.get()._field_ExprKind.ptr());;
				if (((_30121_prim == nullptr) && (_221456a1b_Slc(_30021_c.get()._field_ExprKind.ptr()) != nullptr))) {
					_30121_prim=_221455a92_Prim(_221456a1b_Slc(_30021_c.get()._field_ExprKind.ptr()).get()._field_Elem.ptr());
				};
				if (((_30121_prim == nullptr) || ((!(_22145bdc8_IsU8(_30121_prim.ptr()))) && (!(_22145b900_IsI32(_30121_prim.ptr())))))) {
					goto _match_end_207b26d2b;
				};
				_221526a53_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_221523b3d_StrAppendExprModel>(_221523b3d_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_30021_c.get()._field_Expr}), &__jule_any_type125));
				return true;;
			}
		}
		_match_end_207b26d2b:;
	};
	return false;;
}



inline jule::Bool _221528aee_strAssign(_22152626c_scopeOptimizer* _self_, jule::Ptr<_22122748a_Assign> _31732_a) {
	if ((!(_2215358b9_Str))) {
		return false;;
	};
	jule::Ptr<_22145a5be_Prim> _32113_lp = _221455a92_Prim(_31732_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_32113_lp == nullptr) || (!(_22145d803_IsStr(_32113_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_2215281c5_substr(_self_, _31732_a) || _2215284d3_strInsert(_self_, _31732_a) || _2215287e1_strAppend(_self_, _31732_a)) {
			_case_begin_207b2c936:;
			{
				return true;;
			}
		}
		_match_end_207b2c88c:;
	};
	return false;;
}



inline void _221528d74_optimizeAssign(_22152626c_scopeOptimizer* _self_, jule::Ptr<_22122748a_Assign> _33437_assign) {
	if (_221528aee_strAssign(_self_, _33437_assign)) {
		return;;
	};
	static__22152c196_optimize(&(_33437_assign.get()._field_L.get()._field_Model));
	static__22152c196_optimize(&(_33437_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _33437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_207b2e817:;
			{
				if ((_2215348c9_Math && (_221456ee4_Struct(_33437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_33437_assign.get()._field_Op.get()._field_Kind=_33437_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_33437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _34725_model = jule::Any(jule::new_ptr<_2211cbb59_BinopExprModel>(_2211cbb59_BinopExprModel{._field_Left=_33437_assign.get()._field_L, ._field_Right=_33437_assign.get()._field_R, ._field_Op=_33437_assign.get()._field_Op}), &__jule_any_type114);;
					static__22152c196_optimize(&(_34725_model));
					{
						auto &_match_expr{ _34725_model };
						
						if (_match_expr.type == &__jule_any_type114) {
							_case_begin_207b31d36:;
							{
								_33437_assign.get()._field_R=jule::new_ptr<_2211cb692_OperandExprModel>((*(_33437_assign.get()._field_R)));
								_33437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_33437_assign.get()._field_R.get()._field_Model=_34725_model;
								return;;
							}
						}
						_match_end_207b31cd1:;
					};
					(_33437_assign.get()._field_Op.get()._field_Kind).append("=", 1);
					return;;
				};
			}
		}
		_match_end_207b2e7b2:;
	};
	if (_2215345bb_Append) {
		{
			auto &_match_expr{ _33437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_207b33695:;
				{
					jule::Ptr<_2211d48ed_BuiltinAppendCallExprModel> _36825_m = _33437_assign.get()._field_R.get()._field_Model.cast_ptr<_2211d48ed_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					{
						auto &_match_expr{ _36825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type82) {
							_case_begin_207b3470c:;
							{
								{
									auto &_match_expr{ _36825_m.get()._field_Dest };
									
									if (_match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type71) {
										_case_begin_207b34e8d:;
										{
											_221526a53_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_221524644_PushToSliceExprModel>(_221524644_PushToSliceExprModel{._field_Dest=_36825_m.get()._field_Dest, ._field_Elems=_36825_m.get()._field_Elements.cast_ptr<_2211cdd7b_SliceExprModel>(&__jule_any_type82)}), &__jule_any_type126));
										}
									}
									_match_end_207b34e38:;
								};
							}
						}
						_match_end_207b344ed:;
					};
				}
			}
			_match_end_207b303b7:;
		};
	};
}



inline void _2215290e9_optimizeMultiAssign(_22152626c_scopeOptimizer* _self_, jule::Ptr<_221227842_MultiAssign> _38442_assign) {
	{
		auto expr = &(_38442_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b33a91:;
		if (it != expr_end) {
			jule::Ptr<_221425c2c_Data> _38521_l = *it;
			{
				if ((_38521_l != nullptr)) {
					static__22152c196_optimize(&(_38521_l.get()._field_Model));
				};
			}
			_iter_next_207b33a91:;
			++it;
			goto _iter_begin_207b33a91;
		}
		_iter_end_207b33a91:;
	};
	static__22152c196_optimize(&(_38442_assign.get()._field_R));
}



inline void _22152936e_optimizeRet(_22152626c_scopeOptimizer* _self_, jule::Ptr<_2212293c1_RetSt> _39334_r) {
	static__22152c196_optimize(&(_39334_r.get()._field_Expr));
}



inline void _2215295e4_optimizeStmt(_22152626c_scopeOptimizer* _self_, jule::Any _39735_stmt) {
	{
		auto &_match_expr{ _39735_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_207b37127:;
			{
				_221529869_optimizeChild(_self_, _39735_stmt.cast_ptr<_221224135_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_207b3719e:;
			{
				_221526cc8_optimizeData(_self_, _39735_stmt.cast_ptr<_221425c2c_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_207b37226:;
			{
				_22152704d_optimizeVar(_self_, _39735_stmt.cast_ptr<_22126b17c_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_207b3729d:;
			{
				_2215272c3_optimizeConditional(_self_, _39735_stmt.cast_ptr<_221224b91_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_207b37325:;
			{
				_221527b42_optimizeRangeIter(_self_, _39735_stmt.cast_ptr<_221225cd5_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_207b3739c:;
			{
				_221527db7_optimizeWhileIter(_self_, _39735_stmt.cast_ptr<_221225400_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_207b37424:;
			{
				_221529869_optimizeChild(_self_, _39735_stmt.cast_ptr<_221224e7c_InfIter>(&__jule_any_type37).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_207b3749b:;
			{
				_221528d74_optimizeAssign(_self_, _39735_stmt.cast_ptr<_22122748a_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_207b37523:;
			{
				_2215290e9_optimizeMultiAssign(_self_, _39735_stmt.cast_ptr<_221227842_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_207b3759a:;
			{
				_2215278bc_optimizeMatch(_self_, _39735_stmt.cast_ptr<_221227e4c_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_207b37622:;
			{
				_22152936e_optimizeRet(_self_, _39735_stmt.cast_ptr<_2212293c1_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_207b36e6d:;
	};
}



inline void _221529869_optimizeChild(_22152626c_scopeOptimizer* _self_, jule::Ptr<_221224135_Scope> _42436_child) {
	jule::Ptr<_22152626c_scopeOptimizer> _42517_so = static__2215267cd_new(_42436_child);;
	_221529a45_optimize(_42517_so.ptr());
}



inline void _221529a45_optimize(_22152626c_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b3cdca:;
		if (it != expr_end) {
			jule::I32 _43114_i = it - expr->begin();
			jule::Any _43121_stmt = *it;
			{
				(*(_self_))._field_i=_43114_i;
				_2215295e4_optimizeStmt(_self_, _43121_stmt);
			}
			_iter_next_207b3cdca:;
			++it;
			_43114_i++;
			goto _iter_begin_207b3cdca;
		}
		_iter_end_207b3cdca:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22152626c_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__22152c196_optimize(jule::Any* _5829_model) {
	if (_20335169d_exprEnabled) {
		jule::Ptr<_22152bb68_exprOptimizer> _6121_exop = jule::new_ptr<_22152bb68_exprOptimizer>(_22152bb68_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_22153339a_do(_6121_exop.ptr());
	};
}



inline jule::Bool _22152c4a4_strCond(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211cbb59_BinopExprModel> _6826_m) {
	jule::Ptr<_22145a5be_Prim> _6913_lp = _221455a92_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_22145d803_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((!_6826_m.get()._field_Op.get()._field_Kind.equal("==", 2)) && (!_6826_m.get()._field_Op.get()._field_Kind.equal("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_207b466ec:;
			{
				({
					jule::Ptr<_2211cb692_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_2211cb692_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_207b46697:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_207b45e6b:;
			{
				goto _match_end_207b471e2;
			}
		}
		else {
			_case_begin_207b47786:;
			{
				return true;;
			}
		}
		_match_end_207b471e2:;
	};
	_julec_label_opt:;
	jule::Ptr<_21e6c53da_Const> _8817_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_21e6c53da_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_207b48853:;
			{
				if (_21e6c7420_ReadStr(_8817_c.ptr()).empty()) {
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_2211d2401_CommonSubIdentExprModel>(_2211d2401_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
					goto _match_end_207b487ed;
				};
				jule::Any _9921_model = jule::Any(jule::new_ptr<_221523775_StrCompExprModel>(_221523775_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=false}), &__jule_any_type127);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9921_model))))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_207b488b9:;
			{
				if (_21e6c7420_ReadStr(_8817_c.ptr()).empty()) {
					jule::Ptr<_21da1aa0b_Token> _10725_op = _6826_m.get()._field_Op;;
					_10725_op.get()._field_Kind=jule::Str("!", 1);
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_2211cc011_UnaryExprModel>(_2211cc011_UnaryExprModel{._field_Expr=jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Model=jule::Any(jule::new_ptr<_2211d2401_CommonSubIdentExprModel>(_2211d2401_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10725_op}), &__jule_any_type74);
					goto _match_end_207b487ed;
				};
				jule::Any _12121_model = jule::Any(jule::new_ptr<_221523775_StrCompExprModel>(_221523775_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=true}), &__jule_any_type127);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_12121_model))))));
			}
		}
		_match_end_207b487ed:;
	};
	return true;;
}



inline void _22152c729_binary(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211cbb59_BinopExprModel> _13125_m) {
	static__22152c196_optimize(&(_13125_m.get()._field_Left.get()._field_Model));
	static__22152c196_optimize(&(_13125_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _13125_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_207b5030a:;
			{
				goto _match_end_207b4ed32;
			}
		}
		else {
			_case_begin_207b4edcb:;
			{
				return;;
			}
		}
		_match_end_207b4ed32:;
	};
	if ((_221535600_Cond && _22152c4a4_strCond(_self_, _13125_m))) {
		return;;
	};
	if ((!(_2215348c9_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _13125_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_207b50ddd:;
			{
				jule::Bool _15118_ok = false;;
				jule::U64 _15122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _221533796_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15118_ok = __jule_assign_result.__jule_result_arg0;
					_15122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15118_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_21e6c53da_Const> _15425_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_21e6c53da_Const>(&__jule_any_type19);;
					_21e6c83bb_SetU64(_15425_c.ptr(), _15122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_207b50e54:;
			{
				jule::Bool _15918_ok = false;;
				jule::U64 _15922_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _221533796_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15918_ok = __jule_assign_result.__jule_result_arg0;
					_15922_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15918_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_21e6c53da_Const> _16225_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_21e6c53da_Const>(&__jule_any_type19);;
					_21e6c83bb_SetU64(_16225_c.ptr(), _15922_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_207b50ecb:;
			{
				jule::Ptr<_21e6c53da_Const> _16721_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_21e6c53da_Const>(&__jule_any_type19);;
				jule::F64 _16817_d = _21e6c7dc1_AsF64(_16721_c.ptr());;
				if ((_16817_d == 2LL)) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_21e6c8146_SetI64(_16721_c.ptr(), 1LL);
				};
			}
		}
		_match_end_207b50d88:;
	};
	jule::Any _17417_model = jule::Any(jule::new_ptr<_221523e29_UnsafeBinopExprModel>(_221523e29_UnsafeBinopExprModel{._field_Node=_13125_m}), &__jule_any_type128);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17417_model))))));
}



inline void _22152c99e_unary(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211cc011_UnaryExprModel> _17824_m) {
	static__22152c196_optimize(&(_17824_m.get()._field_Expr.get()._field_Model));
	if ((_221535226_Ptr && _17824_m.get()._field_Op.get()._field_Kind.equal("*", 1))) {
		{
			auto &_match_expr{ _17824_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_207b57a0a:;
				{
					jule::Ptr<_2211cc011_UnaryExprModel> _18325_um = _17824_m.get()._field_Expr.get()._field_Model.cast_ptr<_2211cc011_UnaryExprModel>(&__jule_any_type74);;
					if (_18325_um.get()._field_Op.get()._field_Kind.equal("&", 1)) {
						(*((*(_self_))._field_model))=_18325_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_207b579a5:;
		};
	};
}



inline void _22152cc24_structureLit(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211cc7b4_StructLitExprModel> _19131_m) {
	{
		auto expr = &(_19131_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b59523:;
		if (it != expr_end) {
			jule::Ptr<_2211cc40c_StructArgExprModel> _19221_arg = *it;
			{
				static__22152c196_optimize(&(_19221_arg.get()._field_Expr));
			}
			_iter_next_207b59523:;
			++it;
			goto _iter_begin_207b59523;
		}
		_iter_end_207b59523:;
	};
}



inline void _22152ce99_allocStructure(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211ccac2_AllocStructLitExprModel> _19733_m) {
	_22152cc24_structureLit(_self_, _19733_m.get()._field_Lit);
}



inline void _22152d21e_casting(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211cd122_CastingExprModel> _20126_m) {
	static__22152c196_optimize(&(_20126_m.get()._field_Expr));
}



inline void _22152d494_args(_22152bb68_exprOptimizer* _self_, jule::Slice<jule::Any>* _20524_args) {
	{
		auto expr = _20524_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b5ace9:;
		if (it != expr_end) {
			jule::I32 _20614_i = it - expr->begin();
			jule::Any _20621_arg = *it;
			{
				static__22152c196_optimize(&(_20621_arg));
				(*(_20524_args))[_20614_i]=_20621_arg;
			}
			_iter_next_207b5ace9:;
			++it;
			_20614_i++;
			goto _iter_begin_207b5ace9;
		}
		_iter_end_207b5ace9:;
	};
}



inline void _22152d719_scope(_22152bb68_exprOptimizer* _self_, jule::Ptr<_221224135_Scope>* _21225_s) {
	jule::Ptr<_22152626c_scopeOptimizer> _21317_scopt = static__2215267cd_new((*(_21225_s)));;
	_221529a45_optimize(_21317_scopt.ptr());
}



inline void _22152d98e_funcCall(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211cd9c4_FnCallExprModel> _21727_m) {
	static__22152c196_optimize(&(_21727_m.get()._field_Expr));
	_22152d494_args(_self_, &(_21727_m.get()._field_Args));
	if ((_21727_m.get()._field_Except != nullptr)) {
		_22152d719_scope(_self_, &(_21727_m.get()._field_Except));
	};
}



inline void _22152dc14_slice(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211cdd7b_SliceExprModel> _22524_m) {
	_22152d494_args(_self_, &(_22524_m.get()._field_Elems));
}



inline void _22152de89_array(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d1aa4_ArrayExprModel> _22924_m) {
	if (((_22924_m.get()._field_Elems.len() == 2LL) && (_22924_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _23121_elem = _22924_m.get()._field_Elems[0LL];;
		static__22152c196_optimize(&(_23121_elem));
		_22924_m.get()._field_Elems[0LL]=_23121_elem;
	};
	_22152d494_args(_self_, &(_22924_m.get()._field_Elems));
}



inline void _22152e20e_indexing(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211ce2ee_IndexingExprModel> _23827_m) {
	static__22152c196_optimize(&(_23827_m.get()._field_Expr.get()._field_Model));
	static__22152c196_optimize(&(_23827_m.get()._field_Index.get()._field_Model));
	if ((!(_221534b93_Access))) {
		return;;
	};
	jule::Bool _24413_array = (_2214567a7_Arr(_23827_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_24413_array && _2214265e0_IsConst(_23827_m.get()._field_Index.ptr()))) {
		jule::Any _24721_model = jule::Any(jule::new_ptr<_2215242ae_UnsafeIndexingExprModel>(_2215242ae_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type129);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_24721_model))))));
		return;;
	};
	{
		auto &_match_expr{ _23827_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_207b63d68:;
			{
				jule::Ptr<_22126b17c_Var> _25317_i = _23827_m.get()._field_Index.get()._field_Model.cast_ptr<_22126b17c_Var>(&__jule_any_type8);;
				if ((_25317_i.get()._field_Mutable || (_25317_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_207b63c14;
				};
				{
					auto &_match_expr{ _23827_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_207b655c8:;
						{
							jule::Ptr<_22126b17c_Var> _25921_r = _23827_m.get()._field_Expr.get()._field_Model.cast_ptr<_22126b17c_Var>(&__jule_any_type8);;
							if ((_25317_i.get()._field_IterRelation.get()._field_Range == _25921_r)) {
								jule::Any _26229_model = jule::Any(jule::new_ptr<_2215242ae_UnsafeIndexingExprModel>(_2215242ae_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type129);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26229_model))))));
							};
						}
					}
					_match_end_207b65573:;
				};
			}
		}
		_match_end_207b63c14:;
	};
}



inline void _22152e484_anonFunc(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211ce6a6_AnonFnExprModel> _26927_m) {
	_22152d719_scope(_self_, &(_26927_m.get()._field_Func.get()._field_Scope));
}



inline void _22152e709_mapExpr(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211ceed1_MapExprModel> _27326_m) {
	{
		auto expr = &(_27326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b67ae7:;
		if (it != expr_end) {
			jule::Ptr<_2211cea5d_KeyValPairExprModel> _27421_pair = *it;
			{
				static__22152c196_optimize(&(_27421_pair.get()._field_Key));
				static__22152c196_optimize(&(_27421_pair.get()._field_Val));
			}
			_iter_next_207b67ae7:;
			++it;
			goto _iter_begin_207b67ae7;
		}
		_iter_end_207b67ae7:;
	};
}



inline void _22152e97e_slicing(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d0520_SlicingExprModel> _28026_m) {
	static__22152c196_optimize(&(_28026_m.get()._field_Expr));
	static__22152c196_optimize(&(_28026_m.get()._field_Left));
	if ((_28026_m.get()._field_Right != nullptr)) {
		static__22152c196_optimize(&(_28026_m.get()._field_Right));
	};
}



inline void _22152ec04_traitSub(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d0a5e_TraitSubIdentExprModel> _28827_m) {
	static__22152c196_optimize(&(_28827_m.get()._field_Expr));
}



inline void _22152ee79_structureSub(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d1345_StructSubIdentExprModel> _29231_m) {
	static__22152c196_optimize(&(_29231_m.get()._field_Expr.get()._field_Model));
}



inline void _2215301ee_commonSub(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d2401_CommonSubIdentExprModel> _29628_m) {
	static__22152c196_optimize(&(_29628_m.get()._field_Expr));
}



inline void _221530474_tuple(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d26ed_TupleExprModel> _30024_m) {
	{
		auto expr = &(_30024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b6a90d:;
		if (it != expr_end) {
			jule::Ptr<_221425c2c_Data> _30121_d = *it;
			{
				static__22152c196_optimize(&(_30121_d.get()._field_Model));
			}
			_iter_next_207b6a90d:;
			++it;
			goto _iter_begin_207b6a90d;
		}
		_iter_end_207b6a90d:;
	};
}



inline void _2215306e9_newCall(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d36bb_BuiltinNewCallExprModel> _30626_m) {
	if ((_30626_m.get()._field_Init != nullptr)) {
		static__22152c196_optimize(&(_30626_m.get()._field_Init));
	};
}



inline void _22153096e_outCall(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d2ac7_BuiltinOutCallExprModel> _31226_m) {
	static__22152c196_optimize(&(_31226_m.get()._field_Expr));
}



inline void _221530be4_outlnCall(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d2eb2_BuiltinOutlnCallExprModel> _31628_m) {
	static__22152c196_optimize(&(_31628_m.get()._field_Expr));
}



inline void _221530e69_panicCall(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d3aa6_BuiltinPanicCallExprModel> _32028_m) {
	static__22152c196_optimize(&(_32028_m.get()._field_Expr));
}



inline void _2215311de_assertCall(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d405c_BuiltinAssertCallExprModel> _32429_m) {
	static__22152c196_optimize(&(_32429_m.get()._field_Expr));
}



inline void _221531464_errorCall(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d5e3d_BuiltinErrorCallExprModel> _32828_m) {
	static__22152c196_optimize(&(_32828_m.get()._field_Err.get()._field_Model));
}



inline void _2215316d9_makeCall(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d4513_BuiltinMakeCallExprModel> _33227_m) {
	if ((_33227_m.get()._field_Len != nullptr)) {
		static__22152c196_optimize(&(_33227_m.get()._field_Len));
	};
	if ((_33227_m.get()._field_Cap != nullptr)) {
		static__22152c196_optimize(&(_33227_m.get()._field_Cap));
	};
}



inline void _22153195e_appendCall(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d48ed_BuiltinAppendCallExprModel> _34129_m) {
	static__22152c196_optimize(&(_34129_m.get()._field_Dest));
	static__22152c196_optimize(&(_34129_m.get()._field_Elements));
}



inline void _221531bd4_lenCall(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d4c1c_BuiltinLenCallExprModel> _34626_m) {
	static__22152c196_optimize(&(_34626_m.get()._field_Expr.get()._field_Model));
}



inline void _221531e59_capCall(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d503b_BuiltinCapCallExprModel> _35026_m) {
	static__22152c196_optimize(&(_35026_m.get()._field_Expr.get()._field_Model));
}



inline void _2215321ce_cloneCall(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d32d1_BuiltinCloneCallExprModel> _35428_m) {
	static__22152c196_optimize(&(_35428_m.get()._field_Expr));
}



inline void _221532454_deleteCall(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d56e0_BuiltinDeleteCallExprModel> _35829_m) {
	static__22152c196_optimize(&(_35829_m.get()._field_Dest.get()._field_Model));
	if ((_35829_m.get()._field_Key != nullptr)) {
		static__22152c196_optimize(&(_35829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _2215326c9_sizeof(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d623a_SizeofExprModel> _36525_m) {
	static__22152c196_optimize(&(_36525_m.get()._field_Expr));
}



inline void _22153294e_alignof(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d6526_AlignofExprModel> _36926_m) {
	static__22152c196_optimize(&(_36926_m.get()._field_Expr));
}



inline void _221532bc4_integratedToStr(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d6b20_IntegratedToStrExprModel> _37334_m) {
	static__22152c196_optimize(&(_37334_m.get()._field_Expr));
}



inline void _221532e49_free(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d72c4_FreeExprModel> _37723_m) {
	static__22152c196_optimize(&(_37723_m.get()._field_Expr));
}



inline void _2215331be_backendEmit(_22152bb68_exprOptimizer* _self_, jule::Ptr<_2211d6ed8_BackendEmitExprModel> _38130_m) {
	_22152d494_args(_self_, &(_38130_m.get()._field_Exprs));
}



inline void _22153339a_do(_22152bb68_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_207b73d89:;
			{
				_22152c729_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211cbb59_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_207b74186:;
			{
				_22152c99e_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211cc011_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_207b741ec:;
			{
				_22152cc24_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211cc7b4_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_207b74263:;
			{
				_22152ce99_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211ccac2_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_207b742c9:;
			{
				_22152d21e_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211cd122_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_207b74351:;
			{
				_22152d98e_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211cd9c4_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_207b743c8:;
			{
				_22152dc14_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211cdd7b_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_207b74450:;
			{
				_22152de89_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d1aa4_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_207b744c7:;
			{
				_22152e20e_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211ce2ee_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_207b7454e:;
			{
				_22152e484_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211ce6a6_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_207b745c6:;
			{
				_22152e709_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211ceed1_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_207b7464d:;
			{
				_22152e97e_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d0520_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_207b746c5:;
			{
				_22152ec04_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d0a5e_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_207b7474c:;
			{
				_22152ee79_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d1345_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_207b747c4:;
			{
				_2215301ee_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d2401_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_207b7484b:;
			{
				_221530474_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d26ed_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_207b748c3:;
			{
				_22153096e_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d2ac7_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_207b7494a:;
			{
				_221530be4_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d2eb2_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_207b749c2:;
			{
				_2215306e9_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d36bb_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_207b74a49:;
			{
				_221530e69_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d3aa6_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_207b74ac1:;
			{
				_2215311de_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d405c_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_207b74b48:;
			{
				_221531464_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d5e3d_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_207b74bc0:;
			{
				_2215316d9_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d4513_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_207b74c47:;
			{
				_22153195e_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d48ed_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_207b74cbe:;
			{
				_221531bd4_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d4c1c_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_207b74d46:;
			{
				_221531e59_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d503b_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_207b74dbd:;
			{
				_2215321ce_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d32d1_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_207b74e45:;
			{
				_221532454_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d56e0_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_207b74ebc:;
			{
				_2215326c9_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d623a_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_207b75044:;
			{
				_22153294e_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d6526_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_207b750bb:;
			{
				_221532bc4_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d6b20_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_207b75143:;
			{
				_221532e49_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d72c4_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_207b751ba:;
			{
				_2215331be_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_2211d6ed8_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_207b73d34:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22152bb68_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203351a66_Optimizer> static__20335201c_New(jule::Ptr<_203214e13_IR>* _2524_ir) {
	return jule::new_ptr<_203351a66_Optimizer>(_203351a66_Optimizer{._field_ir=(*(_2524_ir))});;
}



inline void _203352292_optimizeGlobal(_203351a66_Optimizer* _self_, jule::Ptr<_22126b17c_Var>* _3138_v) {
	if ((!((*(_3138_v)).get()._field_CppLinked))) {
		static__22152c196_optimize(&((*(_3138_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _203352517_optimizeFunction(_203351a66_Optimizer* _self_, jule::Ptr<_2211d9ccc_Fn>* _3740_func) {
	if ((*(_3740_func)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_3740_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b8ac80:;
		if (it != expr_end) {
			jule::Ptr<_2211dc97d_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_22152626c_scopeOptimizer> _4221_so = static__2215267cd_new(_4121_ins.get()._field_Scope);;
				_221529a45_optimize(_4221_so.ptr());
			}
			_iter_next_207b8ac80:;
			++it;
			goto _iter_begin_207b8ac80;
		}
		_iter_end_207b8ac80:;
	};
}



inline void _20335278c_optimizeStruct(_203351a66_Optimizer* _self_, jule::Ptr<_2211c48cc_Struct>* _4738_s) {
	if ((*(_4738_s)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_4738_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b8c19e:;
		if (it != expr_end) {
			jule::Ptr<_2211c76e3_StructIns> _5121_ins = *it;
			{
				{
					auto expr = &(_5121_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207b8c8a8:;
					if (it != expr_end) {
						jule::Ptr<_2211c6bed_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__22152c196_optimize(&(_5225_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_207b8c8a8:;
						++it;
						goto _iter_begin_207b8c8a8;
					}
					_iter_end_207b8c8a8:;
				};
				{
					auto expr = &(_5121_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207b8d3d1:;
					if (it != expr_end) {
						jule::Ptr<_2211d9ccc_Fn> _5725_m = *it;
						{
							_203352517_optimizeFunction(_self_, &(_5725_m));
						}
						_iter_next_207b8d3d1:;
						++it;
						goto _iter_begin_207b8d3d1;
					}
					_iter_end_207b8d3d1:;
				};
			}
			_iter_next_207b8c19e:;
			++it;
			goto _iter_begin_207b8c19e;
		}
		_iter_end_207b8c19e:;
	};
}



inline void _203352a12_optimizeGlobals(_203351a66_Optimizer* _self_, jule::Ptr<_2212456d9_Package>* _6339_p) {
	{
		auto expr = &((*(_6339_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b8db73:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _6421_f = *it;
			{
				{
					auto expr = &(_6421_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207b8e866:;
					if (it != expr_end) {
						jule::Ptr<_22126b17c_Var> _6525_v = *it;
						{
							_203352292_optimizeGlobal(_self_, &(_6525_v));
						}
						_iter_next_207b8e866:;
						++it;
						goto _iter_begin_207b8e866;
					}
					_iter_end_207b8e866:;
				};
			}
			_iter_next_207b8db73:;
			++it;
			goto _iter_begin_207b8db73;
		}
		_iter_end_207b8db73:;
	};
}



inline void _203352c87_optimizeFunctions(_203351a66_Optimizer* _self_, jule::Ptr<_2212456d9_Package>* _7141_p) {
	{
		auto expr = &((*(_7141_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b8ed72:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _7221_f = *it;
			{
				{
					auto expr = &(_7221_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207b90a87:;
					if (it != expr_end) {
						jule::Ptr<_2211d9ccc_Fn> _7325_func = *it;
						{
							_203352517_optimizeFunction(_self_, &(_7325_func));
						}
						_iter_next_207b90a87:;
						++it;
						goto _iter_begin_207b90a87;
					}
					_iter_end_207b90a87:;
				};
			}
			_iter_next_207b8ed72:;
			++it;
			goto _iter_begin_207b8ed72;
		}
		_iter_end_207b8ed72:;
	};
}



inline void _20335300c_optimizeStructs(_203351a66_Optimizer* _self_, jule::Ptr<_2212456d9_Package>* _7939_p) {
	{
		auto expr = &((*(_7939_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b91093:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207b91ca8:;
					if (it != expr_end) {
						jule::Ptr<_2211c48cc_Struct> _8125_s = *it;
						{
							_20335278c_optimizeStruct(_self_, &(_8125_s));
						}
						_iter_next_207b91ca8:;
						++it;
						goto _iter_begin_207b91ca8;
					}
					_iter_end_207b91ca8:;
				};
			}
			_iter_next_207b91093:;
			++it;
			goto _iter_begin_207b91093;
		}
		_iter_end_207b91093:;
	};
}



inline void _203353282_optimizePackage(_203351a66_Optimizer* _self_, jule::Ptr<_2212456d9_Package>* _8739_p) {
	_203352a12_optimizeGlobals(_self_, _8739_p);
	_203352c87_optimizeFunctions(_self_, _8739_p);
	_20335300c_optimizeStructs(_self_, _8739_p);
}



inline void _20335345d_Optimize(_203351a66_Optimizer* _self_) {
	_20335367d_detectEnabled();
	if (_221534302_Deadcode) {
		_203344927_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_2033518bd_scopeEnabled || _20335169d_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_207b93749:;
			if (it != expr_end) {
				jule::Ptr<_221242a9e_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_203353282_optimizePackage(_self_, &(_10325_u.get()._field_Package));
					};
				}
				_iter_next_207b93749:;
				++it;
				goto _iter_begin_207b93749;
			}
			_iter_end_207b93749:;
		};
		_203353282_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_221534302_Deadcode) {
		_2033496c9_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _203351a66_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__203353cbb_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__203372e50_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__203353cbb_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _203373ed9_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__203375804_LogFlat(_21d6755de_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__203375a13_LogError(_21d6755de_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__203353cbb_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_21e6b5a18_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_21e6b5a18_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _21d5db7ec_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I32 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I32 _3821_oldLen = _3621_line.len();;
		_3621_line=_21d5db7ec_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _21e6b5a18_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_21d5d3ecb_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_21d5d3ecb_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_21d5d3ecb_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__203372e50_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__203375c22_Log(_21d6755de_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_207ba20a4:;
			{
				static__203375804_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_207ba211a:;
			{
				static__203375a13_LogError(_6520_l);
			}
		}
		_match_end_207ba1ee9:;
	};
}



inline void static__203375e31_PrintLogs(jule::Slice<_21d6755de_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207ba2ea6:;
		if (it != expr_end) {
			_21d6755de_Log *_7616_l = it;
			{
				static__203375c22_Log(_7616_l);
			}
			_iter_next_207ba2ea6:;
			++it;
			goto _iter_begin_207ba2ea6;
		}
		_iter_end_207ba2ea6:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_21e6b5a18_Itoa(static_cast<jule::I32>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _20337556d_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _203bcad90_Unix(_203bca9d8_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*(_self_))._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*(_self_))._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _203bcd425_unixYearToSeconds(_5717_y, &(_5617_leap));;
	_6817_t+=_203bcd7aa_unixMonthToSeconds(_5817_m, _5617_leap);
	_6817_t+=(86400LLU * ((*(_self_))._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*(_self_))._field_Hour);
	_6817_t+=(60LLU * (*(_self_))._field_Minute);
	_6817_t+=(*(_self_))._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _203bca9d8_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _203bcb17b_Time static__203bcb522_Unix(jule::U64 _9120_sec) {
	return _203bcb17b_Time{._field_sec=_9120_sec};;
}



inline _203bcb17b_Time static__203bcb720_Now(void) {
	return static__203bcb522_Unix(static_cast<jule::U64>(_203bcd117_unix()));;
}



inline jule::U64 _203bcbb71_Unix(_203bcb17b_Time* _self_) {
	return (*(_self_))._field_sec;;
}



inline jule::U64 _203bcbdd5_Day(_203bcb17b_Time* _self_) {
	return _203bccd5e_Abs(_self_)._field_Day;;
}



inline jule::U64 _203bcc149_Month(_203bcb17b_Time* _self_) {
	return _203bccd5e_Abs(_self_)._field_Month;;
}



inline jule::U64 _203bcc3ad_Year(_203bcb17b_Time* _self_) {
	return _203bccd5e_Abs(_self_)._field_Year;;
}



inline jule::U64 _203bcc622_Second(_203bcb17b_Time* _self_) {
	return _203bccd5e_Abs(_self_)._field_Second;;
}



inline jule::U64 _203bcc886_Minute(_203bcb17b_Time* _self_) {
	return _203bccd5e_Abs(_self_)._field_Minute;;
}



inline jule::U64 _203bccaea_Hour(_203bcb17b_Time* _self_) {
	return _203bccd5e_Abs(_self_)._field_Hour;;
}



inline _203bca9d8_AbsTime _203bccd5e_Abs(_203bcb17b_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_203bca06a_mdays[static_cast<jule::I32>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_203bca06a_mdays[static_cast<jule::I32>(_16917_months)];
		}
	_iter_next_207bd24e1:;
	}
	_iter_end_207bd24e1:;;
	_203bca9d8_AbsTime _17417_t = _203bca9d8_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _203bcb17b_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203a59adc_scopeCoder> static__203a5a22a_new(jule::Ptr<_203bd520c_ObjectCoder>* _6424_oc) {
	return jule::new_ptr<_203a59adc_scopeCoder>(_203a59adc_scopeCoder{._field_oc=(*(_6424_oc))});;
}



inline void _207c7e58d_iterHead(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221225cd5_RangeIter>* _7132_it, jule::Bool* _7144_ref, jule::Str* _7156_begin) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_221533ee4_Copy && _203a607a2_isCopyOptimizable(&((*(_7132_it)).get()._field_Expr)))) {
		(*(_7144_ref))=true;
		{
			auto &_match_expr{ (*(_7132_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_207c80e30:;
				{
					jule::Ptr<_22126b17c_Var> _8021_v = (*(_7132_it)).get()._field_Expr.get()._field_Model.cast_ptr<_22126b17c_Var>(&__jule_any_type8);;
					if (_8021_v.get()._field_Reference) {
						_203b3a44d_model(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_207c826e5;
					};
					goto _case_begin_207c8274a;
				}
			}
			else {
				_case_begin_207c8274a:;
				{
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_203b3a44d_model(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
					_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_207c826e5:;
		};
	} else {
		_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7144_ref))) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7144_ref))) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, (*(_7156_begin)));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
}



inline void _203a5a868_rangeIndexIter(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221225cd5_RangeIter>* _12039_it) {
	jule::Str _12113_begin = static__203b442e2_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it)))));;
	jule::Str _12213_next = static__203b44831_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it)))));;
	jule::Bool _12417_ref = false;;
	_207c7e58d_iterHead(_self_, _12039_it, &(_12417_ref), &(_12113_begin));
	if (((*(_12039_it)).get()._field_KeyA != nullptr)) {
		_203bdc973_varInitExpr(_self_.get()._field_oc, &((*(_12039_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12417_ref) {
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_203bd5e33_indent(_self_.get()._field_oc);
	};
	if (((*(_12039_it)).get()._field_KeyB != nullptr)) {
		(*(_12039_it)).get()._field_KeyB.get()._field_Reference=(_221533ee4_Copy && _203a60b37_isIterCopyOptimizable(&((*(_12039_it)).get()._field_Expr), &((*(_12039_it)).get()._field_KeyB)));
		_203bdc973_varInitExpr(_self_.get()._field_oc, &((*(_12039_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_12039_it)).get()._field_KeyB.get()._field_Reference) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_203bd5e33_indent(_self_.get()._field_oc);
	};
	_203a601ca_scope(_self_, (*(_12039_it)).get()._field_Scope);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, _12213_next);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_203bd5e33_indent(_self_.get()._field_oc);
	if (((*(_12039_it)).get()._field_KeyA != nullptr)) {
		_203bd58a0_write(_self_.get()._field_oc, static__203b4404a_var((*(_12039_it)).get()._field_KeyA));
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_203bd5e33_indent(_self_.get()._field_oc);
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_203bd58a0_write(_self_.get()._field_oc, _12113_begin);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, static__203b44589_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it))))));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _203a5aadd_rangeHashmapIter(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221225cd5_RangeIter>* _18341_it) {
	jule::Str _18413_begin = static__203b442e2_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it)))));;
	jule::Str _18513_next = static__203b44831_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it)))));;
	jule::Bool _18717_ref = false;;
	_207c7e58d_iterHead(_self_, _18341_it, &(_18717_ref), &(_18413_begin));
	if (((*(_18341_it)).get()._field_KeyA != nullptr)) {
		_203bdc973_varInitExpr(_self_.get()._field_oc, &((*(_18341_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_203bd5e33_indent(_self_.get()._field_oc);
	};
	if (((*(_18341_it)).get()._field_KeyB != nullptr)) {
		_203bdc973_varInitExpr(_self_.get()._field_oc, &((*(_18341_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_203bd5e33_indent(_self_.get()._field_oc);
	};
	_203a601ca_scope(_self_, (*(_18341_it)).get()._field_Scope);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, _18513_next);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_203bd58a0_write(_self_.get()._field_oc, _18413_begin);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, static__203b44589_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it))))));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _203a5ad63_ifCase(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221224531_If> _22630_i) {
	if ((_22630_i.get()._field_Expr != nullptr)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22630_i.get()._field_Expr);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_203a601ca_scope(_self_, _22630_i.get()._field_Scope);
}



inline void _203a5b0d8_conditional(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221224b91_Conditional> _23535_c) {
	jule::Bool _23617_writed = false;;
	{
		auto expr = &(_23535_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207ca1857:;
		if (it != expr_end) {
			jule::Ptr<_221224531_If> _23721_elif = *it;
			{
				if ((_23721_elif == nullptr)) {
					goto _iter_next_207ca1857;
				};
				if (_23617_writed) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23617_writed=true;
				_203a5ad63_ifCase(_self_, _23721_elif);
			}
			_iter_next_207ca1857:;
			++it;
			goto _iter_begin_207ca1857;
		}
		_iter_end_207ca1857:;
	};
	if ((_23535_c.get()._field_Default != nullptr)) {
		if (_23617_writed) {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_203a601ca_scope(_self_, _23535_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _203a5b35d_infIter(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221224e7c_InfIter> _25531_it) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203a601ca_scope(_self_, _25531_it.get()._field_Scope);
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, static__203b44831_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25531_it))));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, static__203b44589_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25531_it))));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _203a5b5d3_whileIter(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221225400_WhileIter> _27233_it) {
	if (((_27233_it.get()._field_Expr != nullptr) && (_27233_it.get()._field_Next == nullptr))) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27233_it.get()._field_Expr);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_27233_it.get()._field_Expr != nullptr)) {
			_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27233_it.get()._field_Expr);
		};
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_27233_it.get()._field_Next != nullptr)) {
			_203a5ebd0_st(_self_, _27233_it.get()._field_Next);
		};
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203a601ca_scope(_self_, _27233_it.get()._field_Scope);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, static__203b44831_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27233_it))));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, static__203b44589_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27233_it))));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _203a5b858_rangeIter(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221225cd5_RangeIter> _30533_it) {
	{
		
		if ((_221456a1b_Slc(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_207caece9:;
			{
				_203a5a868_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		else if ((_2214567a7_Arr(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_207cb01c3:;
			{
				_203a5a868_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		else if ((_2214574bc_Map(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_207cae9b9:;
			{
				_203a5aadd_rangeHashmapIter(_self_, &(_30533_it));
			}
		}
		else {
			_case_begin_207cae953:;
			{
				_203a5a868_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		_match_end_207cae887:;
	};
}



inline void _203a5bacd_cont(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_2212261d1_ContSt> _31824_c) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_203bd58a0_write(_self_.get()._field_oc, static__203b44831_iterNext(_31824_c.get()._field_It));
}



inline void _203a5bd53_label(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221226874_Label> _32325_l) {
	_203bd58a0_write(_self_.get()._field_oc, static__203b44ac8_label(&(_32325_l.get()._field_Ident)));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _203a5c0c8_gotoSt(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221226b60_GotoSt> _32826_gt) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_203bd58a0_write(_self_.get()._field_oc, static__203b44ac8_label(&(_32826_gt.get()._field_Ident)));
}



inline void _203a5c34d_postfix(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221227017_Postfix> _33331_p) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33331_p.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	_203bd58a0_write(_self_.get()._field_oc, _33331_p.get()._field_Op);
}



inline void _203a5c5c3_assign(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_22122748a_Assign> _34030_a) {
	_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34030_a.get()._field_L.get()._field_Model);
	_203bd58a0_write(_self_.get()._field_oc, _34030_a.get()._field_Op.get()._field_Kind);
	_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34030_a.get()._field_R.get()._field_Model);
}



inline void _203a5c848_mapLookupAssign(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221227842_MultiAssign>* _34640_a) {
	jule::Ptr<_2211ce2ee_IndexingExprModel> _34717_iem = (*(_34640_a)).get()._field_R.cast_ptr<_2211ce2ee_IndexingExprModel>(&__jule_any_type46);;
	_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34717_iem.get()._field_Expr.get()._field_Model);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34717_iem.get()._field_Index.get()._field_Model);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34640_a)).get()._field_L[0LL] != nullptr)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34640_a)).get()._field_L[0LL].get()._field_Model);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34640_a)).get()._field_L[1LL] != nullptr)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34640_a)).get()._field_L[1LL].get()._field_Model);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a5cabd_multiAssignTup(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221227842_MultiAssign>* _36939_a) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	jule::Ptr<_2211d26ed_TupleExprModel> _37317_tup = (*(_36939_a)).get()._field_R.cast_ptr<_2211d26ed_TupleExprModel>(&__jule_any_type87);;
	{
		auto expr = &(_37317_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207cbdc92:;
		if (it != expr_end) {
			jule::I32 _37514_i = it - expr->begin();
			jule::Ptr<_221425c2c_Data> _37521_r = *it;
			{
				_203bd5e33_indent(_self_.get()._field_oc);
				jule::Ptr<_221425c2c_Data> _37721_l = (*(_36939_a)).get()._field_L[_37514_i];;
				if ((_37721_l != nullptr)) {
					{
						auto &_match_expr{ _37721_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_207cc14c0:;
							{
								jule::Ptr<_22126b17c_Var> _38129_v = _37721_l.get()._field_Model.cast_ptr<_22126b17c_Var>(&__jule_any_type8);;
								if ((_38129_v.get()._field_Reference && (!(_22126b545_IsInitialized(_38129_v.ptr()))))) {
									_203bd58a0_write(_self_.get()._field_oc, static__203b4404a_var(_38129_v));
									_203bd58a0_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37521_r.get()._field_Model);
									_203bd58a0_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_36939_a)).get()._field_L[_37514_i]=nullptr;
									goto _iter_next_207cbdc92;
								};
							}
						}
						_match_end_207cc12b1:;
					};
					_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37721_l.get()._field_Kind));
					_203bd58a0_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_203bd58a0_write(_self_.get()._field_oc, static__203b42554_toOut(&(_203a594c1_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37514_i))));
					_203bd58a0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37521_r.get()._field_Model);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_207cbdc92:;
			++it;
			_37514_i++;
			goto _iter_begin_207cbdc92;
		}
		_iter_end_207cbdc92:;
	};
	{
		auto expr = &((*(_36939_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207cc5859:;
		if (it != expr_end) {
			jule::I32 _40214_i = it - expr->begin();
			jule::Ptr<_221425c2c_Data> _40221_l = *it;
			{
				if ((_40221_l == nullptr)) {
					goto _iter_next_207cc5859;
				};
				_203bd5e33_indent(_self_.get()._field_oc);
				_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _40221_l.get()._field_Model);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_203bd58a0_write(_self_.get()._field_oc, static__203b42554_toOut(&(_203a594c1_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40214_i))));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_207cc5859:;
			++it;
			_40214_i++;
			goto _iter_begin_207cc5859;
		}
		_iter_end_207cc5859:;
	};
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _203a5cd43_multiAssignFn(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221227842_MultiAssign>* _41838_a) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	jule::Ptr<_2211cd9c4_FnCallExprModel> _42317_f = (*(_41838_a)).get()._field_R.cast_ptr<_2211cd9c4_FnCallExprModel>(&__jule_any_type35);;
	_203bed8a7_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42317_f.get()._field_Func.get()._field_Result));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_41838_a)).get()._field_R);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_41838_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207ccb222:;
		if (it != expr_end) {
			jule::I32 _42914_i = it - expr->begin();
			jule::Ptr<_221425c2c_Data> _42921_l = *it;
			{
				if ((_42921_l != nullptr)) {
					_203bd5e33_indent(_self_.get()._field_oc);
					_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _42921_l.get()._field_Model);
					_203bd58a0_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(_42914_i));
					_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_207ccb222:;
			++it;
			_42914_i++;
			goto _iter_begin_207ccb222;
		}
		_iter_end_207ccb222:;
	};
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _203a5d0b8_multiAssign(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221227842_MultiAssign> _44435_a) {
	{
		auto &_match_expr{ _44435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type46) {
			_case_begin_207cce478:;
			{
				_203a5c848_mapLookupAssign(_self_, &(_44435_a));
				return;;
			}
		}
		_match_end_207cce269:;
	};
	{
		auto &_match_expr{ _44435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_207cce19d:;
			{
				_203a5cabd_multiAssignTup(_self_, &(_44435_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_207cd0248:;
			{
				_203a5cd43_multiAssignFn(_self_, &(_44435_a));
			}
		}
		else {
			_case_begin_207ccedc4:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:458:13"));;
			}
		}
		_match_end_207cced6e:;
	};
}



inline jule::Fn<void(void)> _203a5d3c6_matchExpr(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221227e4c_Match> _46233_m) {
	if ((!(_2214265e0_IsConst(_46233_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_21e6c9554_IsBool(_46233_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_21e6c71ab_ReadBool(_46233_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46233_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _203a5d6e5_case(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221227e4c_Match> _47228_m, jule::Ptr<_221228997_Case> _47243_c) {
	if (((_47243_c.get()._field_Exprs.len() != 0LL) && (!(_47228_m.get()._field_Comptime)))) {
		if (((_47228_m.get()._field_Cases.len() > 0LL) && (_47228_m.get()._field_Cases[0LL] == _47243_c))) {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_47243_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_207cd52d6:;
			if (it != expr_end) {
				jule::I32 _47918_i = it - expr->begin();
				jule::Ptr<_221425c2c_Data> _47925_expr = *it;
				{
					{
						
						if ((!(_47228_m.get()._field_TypeMatch))) {
							_case_begin_207cda165:;
							{
								jule::Fn<void(void)> _48225_caseExpr = _203a5d3c6_matchExpr(_self_, _47228_m);;
								if (_2214268ed_GoodOperand(_47228_m.get()._field_Expr.ptr(), &(_47925_expr))) {
									if ((_48225_caseExpr != nullptr)) {
										_48225_caseExpr();
										_203bd58a0_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47925_expr.get()._field_Model);
								} else {
									_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47925_expr.get()._field_Model);
									if ((_48225_caseExpr != nullptr)) {
										_203bd58a0_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_48225_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_207cd646e:;
							{
								_203bd58a0_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_221453397_TypeKind> _49829_tk = _47925_expr.get()._field_Model.cast_ptr<_221453397_TypeKind>(&__jule_any_type89);;
								if ((_221457258_Trait(_47228_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_203bd58a0_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_203b2e0bd_boolean(_self_.get()._field_oc.get()._field_ec, (_221455d06_Sptr(_47925_expr.get()._field_Kind.ptr()) != nullptr));
									_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(static_cast<jule::I32>(_203bd72a8_findTypeOffset(_self_.get()._field_oc.ptr(), _221457258_Trait(_47228_m.get()._field_Expr.get()._field_Kind.ptr()), _47925_expr.get()._field_Kind))));
									_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I32 _50629_j = _203bd654e_pushAnyType(_self_.get()._field_oc, _49829_tk);;
									_203bd58a0_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(_50629_j));
								};
							}
						}
						_match_end_207cd63a3:;
					};
					if (((_47243_c.get()._field_Exprs.len() - _47918_i) > 1LL)) {
						_203bd58a0_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_207cd52d6:;
				++it;
				_47918_i++;
				goto _iter_begin_207cd52d6;
			}
			_iter_end_207cd52d6:;
		};
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_47228_m.get()._field_Default == _47243_c) && (_47228_m.get()._field_Cases.len() != 0LL))) {
		_203bd5e33_indent(_self_.get()._field_oc);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, static__203b45117_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47243_c))));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_47243_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_203bd5e33_indent(_self_.get()._field_oc);
		_203a601ca_scope(_self_, _47243_c.get()._field_Scope);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _203a5d96a_matchSt(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221227e4c_Match> _54031_m) {
	if (((_54031_m.get()._field_Cases.len() == 0LL) && (_54031_m.get()._field_Default == nullptr))) {
		return;;
	};
	if ((_54031_m.get()._field_Comptime && ((_54031_m.get()._field_Default == nullptr) || (_54031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	if (((!(_54031_m.get()._field_Comptime)) && (!(_2214265e0_IsConst(_54031_m.get()._field_Expr.ptr()))))) {
		if ((_221533ee4_Copy && _203a607a2_isCopyOptimizable(&(_54031_m.get()._field_Expr)))) {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _54031_m.get()._field_Expr.get()._field_Model);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_203bd5e33_indent(_self_.get()._field_oc);
	};
	if ((_54031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_54031_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_207ce8409:;
			if (it != expr_end) {
				jule::Ptr<_221228997_Case> _56825_c = *it;
				{
					if ((_56825_c == nullptr)) {
						goto _iter_next_207ce8409;
					};
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_203bd5e33_indent(_self_.get()._field_oc);
					_203a5d6e5_case(_self_, _54031_m, _56825_c);
				}
				_iter_next_207ce8409:;
				++it;
				goto _iter_begin_207ce8409;
			}
			_iter_end_207ce8409:;
		};
	};
	if ((_54031_m.get()._field_Default != nullptr)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_203a5d6e5_case(_self_, _54031_m, _54031_m.get()._field_Default);
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, static__203b44d70_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54031_m))));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _203a5dbe0_fallSt(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_22122904c_FallSt> _59526_f) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_203bd58a0_write(_self_.get()._field_oc, static__203b45117_caseBegin(_59526_f.get()._field_DestCase));
}



inline void _203a5de65_breakSt(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221226588_BreakSt> _60027_b) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_60027_b.get()._field_It != 0LLU)) {
		_203bd58a0_write(_self_.get()._field_oc, static__203b44589_iterEnd(_60027_b.get()._field_It));
	} else {
		_203bd58a0_write(_self_.get()._field_oc, static__203b44d70_matchEnd(_60027_b.get()._field_Mtch));
	};
}



inline void _203a5e1da_setResult(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_2212293c1_RetSt> _60933_r) {
	if ((_60933_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _60933_r.get()._field_Expr);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_203bd5e33_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_221425c2c_Data>> _61717_datas = _60933_r.get()._field_Expr.cast_ptr<_2211d26ed_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
	{
		auto expr = &(_61717_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207d02479:;
		if (it != expr_end) {
			jule::I32 _61813_i = it - expr->begin();
			jule::Ptr<_221425c2c_Data> _61816_data = *it;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(_61813_i));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61816_data.get()._field_Model);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_203bd5e33_indent(_self_.get()._field_oc);
			}
			_iter_next_207d02479:;
			++it;
			_61813_i++;
			goto _iter_begin_207d02479;
		}
		_iter_end_207d02479:;
	};
}



inline void _203a5e460_retSt(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_2212293c1_RetSt> _62829_r) {
	if (_2211da23e_IsVoid(_62829_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_62829_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_62829_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_62829_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _62829_r.get()._field_Func.get()._field_Result));
			_203bd58a0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62829_r.get()._field_Expr);
			_203bd58a0_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62829_r.get()._field_Expr);
			_203bd58a0_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_62829_r.get()._field_Expr != nullptr)) {
		_203a5e1da_setResult(_self_, _62829_r);
	};
	if (_62829_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_203bed8a7_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_62829_r.get()._field_Func.get()._field_Result));
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _203a5e6d5_var(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_22126b17c_Var> _66427_v) {
	if ((!(_66427_v.get()._field_Constant))) {
		_203bdcbe8_var(_self_.get()._field_oc, _66427_v);
	};
}



inline void _203a5e95a_strAppend(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221523b3d_StrAppendExprModel> _67033_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67033_m.get()._field_Str);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	{
		auto &_match_expr{ _67033_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_207d0c4ea:;
			{
				jule::Ptr<_21e6c53da_Const> _67617_c = _67033_m.get()._field_Expr.cast_ptr<_21e6c53da_Const>(&__jule_any_type19);;
				jule::Slice<jule::U8> _67717_bytes = static_cast<jule::Slice<jule::U8>>(_21e6c7420_ReadStr(_67617_c.ptr()));;
				_203bd58a0_write(_self_.get()._field_oc, _203b3b3c7_cstrLit(_67717_bytes));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_203bd58a0_write(_self_.get()._field_oc, _21e6b5771_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_67717_bytes.len())), 10LL));
			}
		}
		else {
			_case_begin_207d0d4eb:;
			{
				_203b316ca_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67033_m.get()._field_Expr);
			}
		}
		_match_end_207d0d496:;
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a5ebd0_st(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Any _68826_st) {
	if ((_68826_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _68826_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_207d11cc4:;
			{
				_203a601ca_scope(_self_, _68826_st.cast_ptr<_221224135_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_207d11961:;
			{
				_203a5e6d5_var(_self_, _68826_st.cast_ptr<_22126b17c_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_207d122e1:;
			{
				_203b3a44d_model(_self_.get()._field_oc.get()._field_ec, _68826_st.cast_ptr<_221425c2c_Data>(&__jule_any_type24).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_207d12357:;
			{
				_203a5b0d8_conditional(_self_, _68826_st.cast_ptr<_221224b91_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_207d123bd:;
			{
				_203a5b35d_infIter(_self_, _68826_st.cast_ptr<_221224e7c_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_207d12434:;
			{
				_203a5b5d3_whileIter(_self_, _68826_st.cast_ptr<_221225400_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_207d1249a:;
			{
				_203a5b858_rangeIter(_self_, _68826_st.cast_ptr<_221225cd5_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_207d12511:;
			{
				_203a5bacd_cont(_self_, _68826_st.cast_ptr<_2212261d1_ContSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_207d12577:;
			{
				_203a5bd53_label(_self_, _68826_st.cast_ptr<_221226874_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_207d125ee:;
			{
				_203a5c0c8_gotoSt(_self_, _68826_st.cast_ptr<_221226b60_GotoSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_207d12676:;
			{
				_203a5c34d_postfix(_self_, _68826_st.cast_ptr<_221227017_Postfix>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_207d126ed:;
			{
				_203a5c5c3_assign(_self_, _68826_st.cast_ptr<_22122748a_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_207d12775:;
			{
				_203a5d0b8_multiAssign(_self_, _68826_st.cast_ptr<_221227842_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_207d127ec:;
			{
				_203a5d96a_matchSt(_self_, _68826_st.cast_ptr<_221227e4c_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_207d12874:;
			{
				_203a5dbe0_fallSt(_self_, _68826_st.cast_ptr<_22122904c_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_207d128eb:;
			{
				_203a5de65_breakSt(_self_, _68826_st.cast_ptr<_221226588_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_207d12973:;
			{
				_203a5e460_retSt(_self_, _68826_st.cast_ptr<_2212293c1_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_207d129ea:;
			{
				_203b38160_pushToSlice(_self_.get()._field_oc.get()._field_ec, _68826_st.cast_ptr<_221524644_PushToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_207d12a72:;
			{
				_203b39bcd_mutSlicing(_self_.get()._field_oc.get()._field_ec, _68826_st.cast_ptr<_221524b83_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_207d12ae9:;
			{
				_203b39e53_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _68826_st.cast_ptr<_22152505c_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_207d12b71:;
			{
				_203a5e95a_strAppend(_self_, _68826_st.cast_ptr<_221523b3d_StrAppendExprModel>(&__jule_any_type125));
			}
		}
		else {
			_case_begin_207d11741:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_207d116db:;
	};
}



inline void _203a5ee55_scopeStmts(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221224135_Scope>* _74035_s) {
	{
		auto expr = &((*(_74035_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207d1c065:;
		if (it != expr_end) {
			jule::Any _74121_st = *it;
			{
				_203bd5e33_indent(_self_.get()._field_oc);
				_203a5ebd0_st(_self_, _74121_st);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_207d1c065:;
			++it;
			goto _iter_begin_207d1c065;
		}
		_iter_end_207d1c065:;
	};
}



inline void _203a601ca_scope(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_221224135_Scope> _74929_s) {
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	if (_74929_s.get()._field_Deferred) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_203a5ee55_scopeStmts(_self_, &(_74929_s));
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_74929_s.get()._field_Deferred) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _203a60450_funcScope(jule::Ptr<_203a59adc_scopeCoder> _self_, jule::Ptr<_2211dc97d_FnIns> _76533_f) {
	if ((_76533_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	if ((!(_2211da23e_IsVoid(_76533_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_22146033d_Tuple> _77221_tup = _221457731_Tup(_76533_f.get()._field_Result.ptr());;
		if ((_77221_tup != nullptr)) {
			_203bd5e33_indent(_self_.get()._field_oc);
			_203bed269_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _77221_tup);
			_203bd58a0_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_77221_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_207d22de5:;
				if (it != expr_end) {
					jule::I32 _77722_i = it - expr->begin();
					jule::Ptr<_221453397_TypeKind> _77729_t = *it;
					{
						if (_203c00b95_shouldInitialized(&(_77729_t))) {
							_203bd5e33_indent(_self_.get()._field_oc);
							_203bd58a0_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(_77722_i));
							_203bd58a0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_203b3a6c3_initExpr(_self_.get()._field_oc.get()._field_ec, _77729_t);
							_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_207d22de5:;
					++it;
					_77722_i++;
					goto _iter_begin_207d22de5;
				}
				_iter_end_207d22de5:;
			};
		} else if ((_76533_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_203bd5e33_indent(_self_.get()._field_oc);
			_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _76533_f.get()._field_Result));
			_203bd58a0_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_203c00b95_shouldInitialized(&(_76533_f.get()._field_Result))) {
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_203b3a6c3_initExpr(_self_.get()._field_oc.get()._field_ec, _76533_f.get()._field_Result);
			};
			_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_203a5ee55_scopeStmts(_self_, &(_76533_f.get()._field_Scope));
	if ((_76533_f.get()._field_Decl.get()._field_Exceptional && _2211da23e_IsVoid(_76533_f.get()._field_Decl.ptr()))) {
		_203bd5e33_indent(_self_.get()._field_oc);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _203a59adc_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203b2d6c7_exprCoder> static__203b2dac3_new(jule::Ptr<_203bd520c_ObjectCoder>* _10924_oc) {
	return jule::new_ptr<_203b2d6c7_exprCoder>(_203b2d6c7_exprCoder{._field_oc=(*(_10924_oc))});;
}



inline void _203b2dd48_string(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_21e6c53da_Const>* _11527_c) {
	jule::Str _11613_content = _21e6c7420_ReadStr((*(_11527_c)).ptr());;
	if ((_11613_content.len() == 0LL)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _12113_bytes = static_cast<jule::Slice<jule::U8>>(_11613_content);;
	jule::Str _12213_len = _21e6b5771_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_12113_bytes.len())), 10LL);;
	jule::Str _12313_lit = _203b3b3c7_cstrLit(_12113_bytes);;
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203bd58a0_write(_self_.get()._field_oc, _12313_lit);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_203bd58a0_write(_self_.get()._field_oc, _12213_len);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b2e0bd_boolean(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Bool _13227_b) {
	if (_13227_b) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _203b2e299_nilLit(jule::Ptr<_203b2d6c7_exprCoder> _self_) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _203b2e5a7_ftoaSpecialCases(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::F64* _14437_x) {
	{
		
		if (_21e66b903_IsNaN((*(_14437_x)))) {
			_case_begin_207d44c4c:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_21e66bea8_IsInf((*(_14437_x)), 1LL)) {
			_case_begin_207d44576:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_21e66bea8_IsInf((*(_14437_x)), -1LL)) {
			_case_begin_207d445dc:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_207d44510:;
			{
				return false;;
			}
		}
		_match_end_207d44444:;
	};
	return true;;
}



inline void _203b2e82c_float32(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_21e6c53da_Const>* _15828_c) {
	jule::F64 _15913_x = _21e6c7dc1_AsF64((*(_15828_c)).ptr());;
	if (_203b2e5a7_ftoaSpecialCases(_self_, &(_15913_x))) {
		return;;
	};
	{
		
		if ((_15913_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_207d47359:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15913_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_207d4706d:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_207d47007:;
			{
				_203bd58a0_write(_self_.get()._field_oc, _203b3b6d5_ftoa(_15913_x, 32LL));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_207d46dd6:;
	};
}



inline void _203b2eaa2_float64(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_21e6c53da_Const>* _17728_c) {
	jule::F64 _17813_x = _21e6c7dc1_AsF64((*(_17728_c)).ptr());;
	if (_203b2e5a7_ftoaSpecialCases(_self_, &(_17813_x))) {
		return;;
	};
	{
		
		if ((_17813_x == jule::MAX_F64)) {
			_case_begin_207d50164:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17813_x == jule::MIN_F64)) {
			_case_begin_207d4ed34:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_207d4e9d2:;
			{
				_203bd58a0_write(_self_.get()._field_oc, _203b3b6d5_ftoa(_17813_x, 64LL));
			}
		}
		_match_end_207d4e8b1:;
	};
}



inline void _203b2ed27_constant(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_21e6c53da_Const> _19532_c) {
	{
		
		if (_21e6c97b8_IsStr(_19532_c.ptr())) {
			_case_begin_207d51880:;
			{
				_203b2dd48_string(_self_, &(_19532_c));
			}
		}
		else if (_21e6c9554_IsBool(_19532_c.ptr())) {
			_case_begin_207d518e6:;
			{
				_203b2e0bd_boolean(_self_, _21e6c71ab_ReadBool(_19532_c.ptr()));
			}
		}
		else if (_21e6c9a2c_IsF64(_19532_c.ptr())) {
			_case_begin_207d5195c:;
			{
				{
					
					if (_19532_c.get()._field_Kind.equal("f32", 3)) {
						_case_begin_207d53a4c:;
						{
							_203b2e82c_float32(_self_, &(_19532_c));
						}
					}
					else {
						_case_begin_207d536a6:;
						{
							_203b2eaa2_float64(_self_, &(_19532_c));
						}
					}
					_match_end_207d535da:;
				};
			}
		}
		else if (_21e6c907b_IsI64(_19532_c.ptr())) {
			_case_begin_207d519c3:;
			{
				_203bd58a0_write(_self_.get()._field_oc, _203b3b97c_itoa(static_cast<jule::I64>(_21e6c6bd3_ReadI64(_19532_c.ptr()))));
			}
		}
		else if (_21e6c92e0_IsU64(_19532_c.ptr())) {
			_case_begin_207d52265:;
			{
				_203bd58a0_write(_self_.get()._field_oc, _203b3bc24_utoa(static_cast<jule::U64>(_21e6c6e47_ReadU64(_19532_c.ptr()))));
			}
		}
		else if (_21e6c9c91_IsNil(_19532_c.ptr())) {
			_case_begin_207d522cb:;
			{
				_203b2e299_nilLit(_self_);
			}
		}
		else {
			_case_begin_207d51819:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_207d5174d:;
	};
}



inline void _203b301e0_divByZeroBinary(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_21da1aa0b_Token>* _21936_op, jule::Ptr<_2211cb692_OperandExprModel>* _21953_l, jule::Ptr<_2211cb692_OperandExprModel>* _21980_r) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_21936_op)).get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_207d56863:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_207d568eb:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_207d567ec:;
	};
	if ((!(_21b538b25_Production))) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_203bd784c_locInfo(_self_.get()._field_oc, _21936_op);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_203b316ca_possibleRefExpr(_self_, (*(_21953_l)).get()._field_Model);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_203b316ca_possibleRefExpr(_self_, (*(_21980_r)).get()._field_Model);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b30465_unsafeBinary(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211cbb59_BinopExprModel> _24136_m) {
	if ((_24136_m.get()._field_Op.get()._field_Kind.equal("==", 2) || _24136_m.get()._field_Op.get()._field_Kind.equal("!=", 2))) {
		if (_203b3c86d_isAny(&(_24136_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_2214543cb_IsNil(_24136_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_203b3c86d_isAny(&(_24136_m.get()._field_Right.get()._field_Kind)))))) {
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
				if (_24136_m.get()._field_Op.get()._field_Kind.equal("!=", 2)) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I32 _25125_i = _203bd654e_pushAnyType(_self_.get()._field_oc, _24136_m.get()._field_Right.get()._field_Kind);;
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(_25125_i));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_203b316ca_possibleRefExpr(_self_, _24136_m.get()._field_Left.get()._field_Model);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_203b316ca_possibleRefExpr(_self_, _24136_m.get()._field_Right.get()._field_Model);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203b316ca_possibleRefExpr(_self_, _24136_m.get()._field_Left.get()._field_Model);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_203bd58a0_write(_self_.get()._field_oc, _24136_m.get()._field_Op.get()._field_Kind);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_203b316ca_possibleRefExpr(_self_, _24136_m.get()._field_Right.get()._field_Model);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b306da_binary(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211cbb59_BinopExprModel> _27230_m) {
	{
		auto &_match_expr{ _27230_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_207d61e67:;
			{
				if ((_221456ee4_Struct(_27230_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_203b301e0_divByZeroBinary(_self_, &(_27230_m.get()._field_Op), &(_27230_m.get()._field_Left), &(_27230_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_207d61de0:;
	};
	_203b30465_unsafeBinary(_self_, _27230_m);
}



inline void _203b30960_var(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_22126b17c_Var> _28427_m) {
	if (_28427_m.get()._field_CppLinked) {
		jule::Ptr<_221171307_Directive> _28617_d = _203c00568_findDirective(&(_28427_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28617_d != nullptr)) {
			_203bd58a0_write(_self_.get()._field_oc, _203be1933_concatAllParts(_28617_d.get()._field_Args));
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_203bd58a0_write(_self_.get()._field_oc, static__203b4404a_var(_28427_m));
}



inline void _203b30bd5_structureIns(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211c76e3_StructIns> _29536_m) {
	_203bd58a0_write(_self_.get()._field_oc, _203be73d9_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29536_m));
}



inline void _203b30e5a_unary(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211cc011_UnaryExprModel> _29929_m) {
	{
		auto &_match_expr{ _29929_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_207d66697:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_203b316ca_possibleRefExpr(_self_, _29929_m.get()._field_Expr.get()._field_Model);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_207d6671e:;
			{
				if ((_21b538b25_Production || (_221455d06_Sptr(_29929_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_207d6660e;
				};
				_203b316ca_possibleRefExpr(_self_, _29929_m.get()._field_Expr.get()._field_Model);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_203bd784c_locInfo(_self_.get()._field_oc, &(_29929_m.get()._field_Op));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_207d6660e:;
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203bd58a0_write(_self_.get()._field_oc, _29929_m.get()._field_Op.get()._field_Kind);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203b316ca_possibleRefExpr(_self_, _29929_m.get()._field_Expr.get()._field_Model);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _203b311d0_structureLit(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211cc7b4_StructLitExprModel> _32336_m) {
	if (_32336_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_203bd58a0_write(_self_.get()._field_oc, static__203b43a0b_structureIns(&(_32336_m.get()._field_Strct)));
	if (_32336_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_32336_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto expr = &(_32336_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_207d6ced9:;
			if (it != expr_end) {
				jule::I32 _33617_i = it - expr->begin();
				jule::Ptr<_2211c6bed_FieldIns> _33620_f = *it;
				{
					{
						auto expr = &(_32336_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_207d6da23:;
						if (it != expr_end) {
							jule::Ptr<_2211cc40c_StructArgExprModel> _33729_arg = *it;
							{
								if ((_33729_arg.get()._field_Field == _33620_f)) {
									_203bd58a0_write(_self_.get()._field_oc, jule::Str(".", 1));
									_203bd58a0_write(_self_.get()._field_oc, static__203b43ca3_field(&(_33729_arg.get()._field_Field.get()._field_Decl)));
									_203bd58a0_write(_self_.get()._field_oc, jule::Str("=", 1));
									_203b316ca_possibleRefExpr(_self_, _33729_arg.get()._field_Expr);
									if (((_32336_m.get()._field_Strct.get()._field_Fields.len() - _33617_i) > 1LL)) {
										_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_207d6ced9;
								};
							}
							_iter_next_207d6da23:;
							++it;
							goto _iter_begin_207d6da23;
						}
						_iter_end_207d6da23:;
					};
				}
				_iter_next_207d6ced9:;
				++it;
				_33617_i++;
				goto _iter_begin_207d6ced9;
			}
			_iter_end_207d6ced9:;
		};
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _203b31455_allocStructure(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211ccac2_AllocStructLitExprModel> _35438_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_203bd58a0_write(_self_.get()._field_oc, static__203b43a0b_structureIns(&(_35438_m.get()._field_Lit.get()._field_Strct)));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_203b311d0_structureLit(_self_, _35438_m.get()._field_Lit);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b316ca_possibleRefExpr(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Any _36235_expr) {
	{
		auto &_match_expr{ _36235_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_207d73ac2:;
			{
				jule::Ptr<_22126b17c_Var> _36517_v = _36235_expr.cast_ptr<_22126b17c_Var>(&__jule_any_type8);;
				if (_36517_v.get()._field_Reference) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_203b3a44d_model(_self_, _36235_expr);
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_207d739c3:;
	};
	_203b3a44d_model(_self_, _36235_expr);
}



inline void _203b31a93_castTraitFromTrait(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211cd122_CastingExprModel>* _37643_m, jule::Ptr<_2211ebeed_Trait> _37669_t1, jule::Ptr<_2211ebeed_Trait> _37685_t2) {
	_203b316ca_possibleRefExpr(_self_, (*(_37643_m)).get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(".mask<", 6));
	_203bd58a0_write(_self_.get()._field_oc, static__203b43225_traitDecl(_37669_t1));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_203bd75c7_pushAndWriteMaskMapper(_self_.get()._field_oc, _37669_t1, _37685_t2);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b31d18_casting(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211cd122_CastingExprModel> _39131_m) {
	{
		
		if (_203b3c86d_isAny(&(_39131_m.get()._field_Kind))) {
			_case_begin_207d77bd6:;
			{
				if (_2214543cb_IsNil(_39131_m.get()._field_ExprKind.ptr())) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_221456543_TypeEnum(_39131_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_203b316ca_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
					return;;
				};
				jule::I32 _40217_i = _203bd654e_pushAnyType(_self_.get()._field_oc, _39131_m.get()._field_ExprKind);;
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _39131_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_207d79aea:;
						{
							jule::Ptr<_22145a5be_Prim> _40621_prim = _221455a92_Prim(_39131_m.get()._field_ExprKind.ptr());;
							if (((_40621_prim != nullptr) && _21e6c48d4_IsInt(_40621_prim.get()._field_Kind))) {
								_203bd58a0_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_203bd58a0_write(_self_.get()._field_oc, _203be4617_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _40621_prim));
								_203bd58a0_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_203b316ca_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
								_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_207d7a5ce;
							};
							goto _case_begin_207d7a634;
						}
					}
					else {
						_case_begin_207d7a634:;
						{
							_203b316ca_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
						}
					}
					_match_end_207d7a5ce:;
				};
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(_40217_i));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if (_203b3c86d_isAny(&(_39131_m.get()._field_ExprKind))) {
			_case_begin_207d77c5d:;
			{
				_203b316ca_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_221455d06_Sptr(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _221455d06_Sptr(_39131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				};
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_21b538b25_Production))) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_203bd784c_locInfo(_self_.get()._field_oc, &(_39131_m.get()._field_Token));
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(static_cast<jule::I32>(_203bd654e_pushAnyType(_self_.get()._field_oc, _39131_m.get()._field_Kind))));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_22145606a_Ptr(_39131_m.get()._field_ExprKind.ptr()) != nullptr) || (_22145606a_Ptr(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_207d77cd5:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("((", 2));
				_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_203b316ca_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if ((_221457258_Trait(_39131_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_207d77d5c:;
			{
				if ((_221457258_Trait(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
					_203b31a93_castTraitFromTrait(_self_, &(_39131_m), _221457258_Trait(_39131_m.get()._field_Kind.ptr()), _221457258_Trait(_39131_m.get()._field_ExprKind.ptr()));
					return;;
				};
				_203b316ca_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_221455d06_Sptr(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _221455d06_Sptr(_39131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				};
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_21b538b25_Production))) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_203bd784c_locInfo(_self_.get()._field_oc, &(_39131_m.get()._field_Token));
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(static_cast<jule::I32>(_203bd72a8_findTypeOffset(_self_.get()._field_oc.ptr(), _221457258_Trait(_39131_m.get()._field_ExprKind.ptr()), _39131_m.get()._field_Kind))));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_221457258_Trait(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_207d77dd4:;
			{
				_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
				_203b316ca_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(static_cast<jule::I32>(_203bd72a8_findTypeOffset(_self_.get()._field_oc.ptr(), _221457258_Trait(_39131_m.get()._field_Kind.ptr()), _39131_m.get()._field_ExprKind))));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		_match_end_207d77a93:;
	};
	jule::Ptr<_22145a5be_Prim> _48313_prim = _221455a92_Prim(_39131_m.get()._field_Kind.ptr());;
	jule::Ptr<_22145a5be_Prim> _48413_eprim = _221455a92_Prim(_39131_m.get()._field_ExprKind.ptr());;
	if ((((_48413_eprim != nullptr) && (_48313_prim != nullptr)) && _22145d803_IsStr(_48313_prim.ptr()))) {
		if (_22145bdc8_IsU8(_48413_eprim.ptr())) {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::Str::from_byte(", 21));
		} else {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::Str::from_rune(", 21));
		};
		_203b316ca_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
	_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_203b316ca_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b3208d_models(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Slice<jule::Any> _50230_args) {
	if ((_50230_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_50230_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207d942eb:;
		if (it != expr_end) {
			jule::I32 _50614_i = it - expr->begin();
			jule::Any _50621_a = *it;
			{
				_203b316ca_possibleRefExpr(_self_, _50621_a);
				if (((_50230_args.len() - _50614_i) > 1LL)) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_207d942eb:;
			++it;
			_50614_i++;
			goto _iter_begin_207d942eb;
		}
		_iter_end_207d942eb:;
	};
}



inline void _203b32313_args(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211cd9c4_FnCallExprModel>* _51429_m) {
	jule::I32 _51517_j = 0LL;;
	if (((((*(_51429_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_51429_m)).get()._field_Func.get()._field_Decl.get()._field_Statically))) || (((*(_51429_m)).get()._field_Func.get()._field_Params.len() > 0LL) && _2211d8abc_IsSelf((*(_51429_m)).get()._field_Func.get()._field_Params[0LL].get()._field_Decl.ptr())))) {
		(_51517_j)++;
	};
	{
		auto expr = &((*(_51429_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207d97cd3:;
		if (it != expr_end) {
			jule::I32 _52013_i = it - expr->begin();
			jule::Any _52016_arg = *it;
			{
				jule::Ptr<_2211dbaae_ParamIns> _52117_p = (*(_51429_m)).get()._field_Func.get()._field_Params[_51517_j];;
				if (((_52117_p.get()._field_Decl != nullptr) && _52117_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _52016_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_207d99587:;
							{
								jule::Ptr<_22126b17c_Var> _52525_v = _52016_arg.cast_ptr<_22126b17c_Var>(&__jule_any_type8);;
								if (_52525_v.get()._field_Reference) {
									_203b3a44d_model(_self_, _52016_arg);
									goto _julec_label_end;
								};
							}
						}
						_match_end_207d99499:;
					};
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_203b3a44d_model(_self_, _52016_arg);
					_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_end;
				};
				_203b316ca_possibleRefExpr(_self_, _52016_arg);
				_julec_label_end:;
				if ((((*(_51429_m)).get()._field_Args.len() - _52013_i) > 1LL)) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_51517_j)++;
			}
			_iter_next_207d97cd3:;
			++it;
			_52013_i++;
			goto _iter_begin_207d97cd3;
		}
		_iter_end_207d97cd3:;
	};
}



inline void _203b32588_modelForCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Any _54536_expr) {
	{
		auto &_match_expr{ _54536_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_207d9d3e3:;
			{
				_203b35910_funcIns(_self_, _54536_expr.cast_ptr<_2211dc97d_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_207d9d46a:;
			{
				jule::Ptr<_2211d1345_StructSubIdentExprModel> _55121_ssie = _54536_expr.cast_ptr<_2211d1345_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_55121_ssie.get()._field_Method != nullptr)) {
					_203b35910_funcIns(_self_, _55121_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_207d9d2d3:;
	};
	_203b316ca_possibleRefExpr(_self_, _54536_expr);
}



inline void _203b3280d_pushCallInf(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211cd9c4_FnCallExprModel>* _56032_m) {
	if ((_21b538b25_Production || ((!((*(_56032_m)).get()._field_Func.get()._field_Anon)) && (!(_203b3c395_isBuiltinCallHasDebuginf(_56032_m)))))) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_56032_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_56032_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_207da136e:;
				{
					if ((*(_56032_m)).get()._field_Expr.cast_ptr<_2211d1345_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_207da154a;
				}
			}
			else {
				_case_begin_207da154a:;
				{
					_203bd58a0_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_207da1429:;
		};
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_203bd784c_locInfo(_self_.get()._field_oc, &((*(_56032_m)).get()._field_Token));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_56032_m)).get()._field_Args.len() != 0LL)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _203b32b1b_isWrapped(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211cd9c4_FnCallExprModel>* _58534_m) {
	if ((((!(_2211ddd14_IsBuiltin((*(_58534_m)).get()._field_Func.ptr()))) && ((*(_58534_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _2211d8abc_IsSelf((*(_58534_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_58534_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_207da4ad1:;
				{
					jule::Ptr<_2211d1345_StructSubIdentExprModel> _58925_ssie = (*(_58534_m)).get()._field_Expr.cast_ptr<_2211d1345_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_2211d8d31_IsRef((*(_58534_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_221455d06_Sptr(_58925_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_207da53a6:;
							{
								goto _match_end_207da594a;
							}
						}
						else {
							_case_begin_207da59b1:;
							{
								if ((_221456ee4_Struct(_58925_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_58925_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_203bd58a0_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_203b3a44d_model(_self_, _58925_ssie.get()._field_Expr.get()._field_Model);
										_203bd58a0_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_207da594a:;
					};
				}
			}
			_match_end_207da48c2:;
		};
	};
	return false;;
}



inline void _203b32d91_pureFuncCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211cd9c4_FnCallExprModel>* _60937_m) {
	jule::Bool _61013_wrapped = _203b32b1b_isWrapped(_self_, _60937_m);;
	_203b32588_modelForCall(_self_, (*(_60937_m)).get()._field_Expr);
	if ((!(_2211ddd14_IsBuiltin((*(_60937_m)).get()._field_Func.ptr())))) {
		if (((*(_60937_m)).get()._field_Func.get()._field_Decl.get()._field_CppLinked && ((*(_60937_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_203c008ed_hasDirective(&((*(_60937_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_60937_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207dab07c:;
					if (it != expr_end) {
						jule::I32 _61626_i = it - expr->begin();
						jule::Ptr<_221451b15_InsGeneric> _61633_g = *it;
						{
							_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _61633_g.get()._field_Kind));
							if ((((*(_60937_m)).get()._field_Func.get()._field_Generics.len() - _61626_i) > 1LL)) {
								_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_207dab07c:;
						++it;
						_61626_i++;
						goto _iter_begin_207dab07c;
					}
					_iter_end_207dab07c:;
				};
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_203b3280d_pushCallInf(_self_, _60937_m);
	jule::Bool _62717_locinfo = false;;
	if ((((!(_2211ddd14_IsBuiltin((*(_60937_m)).get()._field_Func.ptr()))) && ((*(_60937_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _2211d8abc_IsSelf((*(_60937_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_60937_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_207dae745:;
				{
					jule::Ptr<_2211d1345_StructSubIdentExprModel> _63125_ssie = (*(_60937_m)).get()._field_Expr.cast_ptr<_2211d1345_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_2211d8d31_IsRef((*(_60937_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_207db31b6:;
							{
								_203b316ca_possibleRefExpr(_self_, _63125_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_221455d06_Sptr(_63125_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_207db322c:;
							{
								_203b316ca_possibleRefExpr(_self_, _63125_ssie.get()._field_Expr.get()._field_Model);
								_203bd58a0_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_21b538b25_Production))) {
									_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_203bd784c_locInfo(_self_.get()._field_oc, &((*(_60937_m)).get()._field_Token));
									_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_207db06ad:;
							{
								if ((_221456ee4_Struct(_63125_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _63125_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_207db00a3:;
											{
												jule::Ptr<_22126b17c_Var> _64833_v = _63125_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_22126b17c_Var>(&__jule_any_type8);;
												if (_64833_v.get()._field_Reference) {
													goto _match_end_207db122a;
												};
												goto _case_begin_207db1280;
											}
										}
										else {
											_case_begin_207db1280:;
											{
												_203bd58a0_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_207db122a:;
									};
								};
								if (_61013_wrapped) {
									_203bd58a0_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_203b3a44d_model(_self_, _63125_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_207db0647:;
					};
					if (((*(_60937_m)).get()._field_Args.len() > 0LL)) {
						_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_207dae7ab:;
				{
					_203b316ca_possibleRefExpr(_self_, (*(_60937_m)).get()._field_Expr.cast_ptr<_2211d0a5e_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_21b538b25_Production))) {
						_62717_locinfo=true;
					};
					if (((*(_60937_m)).get()._field_Args.len() > 0LL)) {
						_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_207dae536:;
		};
	};
	_203b32313_args(_self_, _60937_m);
	if (_62717_locinfo) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_203bd784c_locInfo(_self_.get()._field_oc, &((*(_60937_m)).get()._field_Token));
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_61013_wrapped) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _203b33116_coFuncCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211cd9c4_FnCallExprModel>* _69035_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	jule::Str _69317_head = jule::Str("std::thread([", 13);;
	if (((*(_69035_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		(_69317_head).append("_self_", 6);
		if (((*(_69035_m)).get()._field_Args.len() > 0LL)) {
			(_69317_head).append(", ", 2);
		};
	};
	{
		auto expr = &((*(_69035_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207dbbc80:;
		if (it != expr_end) {
			jule::I32 _70013_i = it - expr->begin();
			jule::Any _70016_arg = *it;
			{
				if ((_70013_i > 0LL)) {
					(_69317_head).append(", ", 2);
				};
				{
					auto &_match_expr{ _70016_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_207dbdb83:;
						{
							jule::Ptr<_22126b17c_Var> _70625_v = _70016_arg.cast_ptr<_22126b17c_Var>(&__jule_any_type8);;
							_69317_head+=static__203b4404a_var(_70625_v);
							goto _iter_next_207dbbc80;
						}
					}
					_match_end_207dbd435:;
				};
				jule::Str _71017_name = (jule::Str("_co_arg_", 8) + _21e6b5a18_Itoa(_70013_i));;
				_69317_head+=_71017_name;
				_203bd5e33_indent(_self_.get()._field_oc);
				_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_69035_m)).get()._field_Func.get()._field_Params[_70013_i].get()._field_Kind));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_69035_m)).get()._field_Func.get()._field_Params[_70013_i].get()._field_Decl.get()._field_Reference) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_203bd58a0_write(_self_.get()._field_oc, _71017_name);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_203b316ca_possibleRefExpr(_self_, _70016_arg);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _72217_argS = jule::Any(_71017_name, &__jule_any_type5);;
				(*(_69035_m)).get()._field_Args[_70013_i]=(*(((jule::Any*)((&(_72217_argS))))));
			}
			_iter_next_207dbbc80:;
			++it;
			_70013_i++;
			goto _iter_begin_207dbbc80;
		}
		_iter_end_207dbbc80:;
	};
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, _69317_head);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203b32d91_pureFuncCall(_self_, _69035_m);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _203b33435_writeUseExpr(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211dc97d_FnIns>* _74037_f, jule::Ptr<_221425c2c_Data> _74052_d) {
	if ((_221457731_Tup(_74052_d.get()._field_Kind.ptr()) == nullptr)) {
		_203b316ca_possibleRefExpr(_self_, _74052_d.get()._field_Model);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_2211d26ed_TupleExprModel> _74617_tup = _74052_d.get()._field_Model.cast_ptr<_2211d26ed_TupleExprModel>(&__jule_any_type87);;
	_203bed269_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _221457731_Tup((*(_74037_f)).get()._field_Result.ptr()));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_74617_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207dc897e:;
		if (it != expr_end) {
			jule::I32 _74913_i = it - expr->begin();
			jule::Ptr<_221425c2c_Data> _74916_data = *it;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(_74913_i));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("=", 1));
				_203b316ca_possibleRefExpr(_self_, _74916_data.get()._field_Model);
				if (((_74617_tup.get()._field_Datas.len() - _74913_i) > 1LL)) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_207dc897e:;
			++it;
			_74913_i++;
			goto _iter_begin_207dc897e;
		}
		_iter_end_207dc897e:;
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _203b336aa_funcCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211cd9c4_FnCallExprModel> _76132_m) {
	if (_76132_m.get()._field_IsCo) {
		_203b33116_coFuncCall(_self_, &(_76132_m));
		return;;
	};
	if (((_2211ddd14_IsBuiltin(_76132_m.get()._field_Func.ptr()) || (!(_76132_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_76132_m.get()._field_Except != nullptr) && (_76132_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_203b32d91_pureFuncCall(_self_, &(_76132_m));
		return;;
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_203b32d91_pureFuncCall(_self_, &(_76132_m));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_203bd5e33_indent(_self_.get()._field_oc);
	if ((_76132_m.get()._field_Except != nullptr)) {
		if (((_76132_m.get()._field_Func.get()._field_Result == nullptr) || (!(_76132_m.get()._field_Assigned)))) {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_203a601ca_scope(_self_.get()._field_oc.get()._field_sc, _76132_m.get()._field_Except);
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _78721_forwarded = _203b3c0cb_isForwarded(&(_76132_m.get()._field_Except));;
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_78721_forwarded) {
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _79225_stmt = _76132_m.get()._field_Except.get()._field_Stmts[(_76132_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79225_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_207dd28cd:;
					{
						_76132_m.get()._field_Except.get()._field_Stmts=_76132_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_76132_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_203bd58a0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_203bd5a7b_addIndent(_self_.get()._field_oc);
						_203a5ee55_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_76132_m.get()._field_Except));
						_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_203bd5e33_indent(_self_.get()._field_oc);
						_203b33435_writeUseExpr(_self_, &(_76132_m.get()._field_Func), _79225_stmt.cast_ptr<_221425c2c_Data>(&__jule_any_type24));
						_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_203bd5c57_doneIndent(_self_.get()._field_oc);
						_203bd5e33_indent(_self_.get()._field_oc);
						_203bd58a0_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_207dd325d:;
					{
						_203a601ca_scope(_self_.get()._field_oc.get()._field_sc, _76132_m.get()._field_Except);
					}
				}
				_match_end_207dd3208:;
			};
			if (_78721_forwarded) {
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_203b3a6c3_initExpr(_self_, _76132_m.get()._field_Func.get()._field_Result);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_203bd58a0_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_203bd5c57_doneIndent(_self_.get()._field_oc);
	} else {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_203bd784c_locInfo(_self_.get()._field_oc, &(_76132_m.get()._field_Token));
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_2211da23e_IsVoid(_76132_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_203bd5e33_indent(_self_.get()._field_oc);
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_203bd5c57_doneIndent(_self_.get()._field_oc);
	};
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _203b33930_slice(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211cdd7b_SliceExprModel> _83229_m) {
	if ((_83229_m.get()._field_Elems.len() == 0LL)) {
		_203bd58a0_write(_self_.get()._field_oc, _203be6086_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83229_m.get()._field_ElemKind));
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_203bd58a0_write(_self_.get()._field_oc, _203be6086_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83229_m.get()._field_ElemKind));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_203b3208d_models(_self_, _83229_m.get()._field_Elems);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _203b33ba5_indexing(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211ce2ee_IndexingExprModel> _84432_m) {
	_203b316ca_possibleRefExpr(_self_, _84432_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_21b538b25_Production || (_22145606a_Ptr(_84432_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_2214574bc_Map(_84432_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _203b3c5c6_isExprComesFromBind(&(_84432_m.get()._field_Expr))) {
			_case_begin_207ddd576:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("[", 1));
				_203b316ca_possibleRefExpr(_self_, _84432_m.get()._field_Index.get()._field_Model);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_207dddc4c:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_203bd784c_locInfo(_self_.get()._field_oc, &(_84432_m.get()._field_Token));
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_203b316ca_possibleRefExpr(_self_, _84432_m.get()._field_Index.get()._field_Model);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_207dddbd6:;
	};
}



inline void _203b33e2a_unsafeIndexing(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2215242ae_UnsafeIndexingExprModel> _86438_m) {
	_203b316ca_possibleRefExpr(_self_, _86438_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_21b538b25_Production || (_22145606a_Ptr(_86438_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_2214574bc_Map(_86438_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_207de2558:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("[", 1));
				_203b316ca_possibleRefExpr(_self_, _86438_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_207de2c95:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_203b316ca_possibleRefExpr(_self_, _86438_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_207de2c2e:;
	};
}



inline void _203b341a0_anonFunc(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211ce6a6_AnonFnExprModel> _88132_m) {
	_203bd58a0_write(_self_.get()._field_oc, _203be8a5b_func(_self_.get()._field_oc.get()._field_tc.ptr(), _88132_m.get()._field_Func));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_203bdc654_paramsIns(_self_.get()._field_oc, &(_88132_m.get()._field_Func.get()._field_Params));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_203be8440_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_88132_m.get()._field_Func));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_203a60450_funcScope(_self_.get()._field_oc.get()._field_sc, _88132_m.get()._field_Func);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b34425_mapExpr(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211ceed1_MapExprModel> _89231_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89231_m.get()._field_KeyKind));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89231_m.get()._field_ValKind));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_89231_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_89231_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_207deaeac:;
			if (it != expr_end) {
				jule::I32 _89918_i = it - expr->begin();
				jule::Ptr<_2211cea5d_KeyValPairExprModel> _89925_pair = *it;
				{
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("{", 1));
					_203b316ca_possibleRefExpr(_self_, _89925_pair.get()._field_Key);
					_203bd58a0_write(_self_.get()._field_oc, jule::Str(",", 1));
					_203b316ca_possibleRefExpr(_self_, _89925_pair.get()._field_Val);
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_89231_m.get()._field_Entries.len() - _89918_i) > 1LL)) {
						_203bd58a0_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_207deaeac:;
				++it;
				_89918_i++;
				goto _iter_begin_207deaeac;
			}
			_iter_end_207deaeac:;
		};
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _203b3469a_slicing(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d0520_SlicingExprModel> _91331_m) {
	_203b316ca_possibleRefExpr(_self_, _91331_m.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_21b538b25_Production))) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_203bd784c_locInfo(_self_.get()._field_oc, &(_91331_m.get()._field_Token));
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_203b316ca_possibleRefExpr(_self_, _91331_m.get()._field_Left);
	if ((_91331_m.get()._field_Right != nullptr)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_203b316ca_possibleRefExpr(_self_, _91331_m.get()._field_Right);
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b34920_traitSub(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d0a5e_TraitSubIdentExprModel> _92932_m) {
	_203bd58a0_write(_self_.get()._field_oc, static__203b43225_traitDecl(_92932_m.get()._field_Trt));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_203b316ca_possibleRefExpr(_self_, _92932_m.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_203bd58a0_write(_self_.get()._field_oc, static__203b42bd6_func(&(_92932_m.get()._field_Method)));
}



inline void _203b34b95_structureSub(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d1345_StructSubIdentExprModel> _93836_m) {
	_203b316ca_possibleRefExpr(_self_, _93836_m.get()._field_Expr.get()._field_Model);
	if ((_93836_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_22145606a_Ptr(_93836_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_221455d06_Sptr(_93836_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_21b538b25_Production))) {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_203bd784c_locInfo(_self_.get()._field_oc, &(_93836_m.get()._field_Token));
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_203bd58a0_write(_self_.get()._field_oc, static__203b43ca3_field(&(_93836_m.get()._field_Field.get()._field_Decl)));
}



inline void _203b34e1a_commonIdent(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d1d90_CommonIdentExprModel> _95931_m) {
	_203bd58a0_write(_self_.get()._field_oc, _95931_m.get()._field_Ident);
}



inline void _203b35190_commonSub(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d2401_CommonSubIdentExprModel> _96333_m) {
	_203b316ca_possibleRefExpr(_self_, _96333_m.get()._field_Expr);
	{
		
		if ((_22145606a_Ptr(_96333_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_207e08a25:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_221455d06_Sptr(_96333_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_207e09185:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_21b538b25_Production))) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_203bd784c_locInfo(_self_.get()._field_oc, &(_96333_m.get()._field_Token));
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_207e0911e:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_207e090a8:;
	};
	_203bd58a0_write(_self_.get()._field_oc, _96333_m.get()._field_Ident);
}



inline void _203b35415_array(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d1aa4_ArrayExprModel> _98229_m) {
	_203bd58a0_write(_self_.get()._field_oc, _203be76e7_array(_self_.get()._field_oc.get()._field_tc.ptr(), _98229_m.get()._field_Kind));
	if ((_98229_m.get()._field_Elems.len() == 0LL)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_98229_m.get()._field_Elems.len() == 2LL) && (_98229_m.get()._field_Elems[1LL] == nullptr))) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
		_203b316ca_possibleRefExpr(_self_, _98229_m.get()._field_Elems[0LL]);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("({", 2));
	_203b3208d_models(_self_, _98229_m.get()._field_Elems);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _203b3568a_funcInsCommon(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211dc97d_FnIns> _100537_m) {
	_203bd58a0_write(_self_.get()._field_oc, _203be8a5b_func(_self_.get()._field_oc.get()._field_tc.ptr(), _100537_m));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203b35910_funcIns(_self_, _100537_m);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b35910_funcIns(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211dc97d_FnIns> _101231_m) {
	if (((_101231_m.get()._field_Decl != nullptr) && _101231_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_221171307_Directive> _101417_d = _203c00568_findDirective(&(_101231_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_101417_d != nullptr)) {
			_203bd58a0_write(_self_.get()._field_oc, _203be1933_concatAllParts(_101417_d.get()._field_Args));
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_203bd58a0_write(_self_.get()._field_oc, static__203b42e7d_funcIns(&(_101231_m)));
}



inline void _203b35b85_tuple(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d26ed_TupleExprModel> _102329_m) {
	{
		auto expr = &(_102329_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207e154c1:;
		if (it != expr_end) {
			jule::I32 _102414_i = it - expr->begin();
			jule::Ptr<_221425c2c_Data> _102421_d = *it;
			{
				_203b316ca_possibleRefExpr(_self_, _102421_d.get()._field_Model);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_102329_m.get()._field_Datas.len() - _102414_i) > 1LL)) {
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_203bd5e33_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_207e154c1:;
			++it;
			_102414_i++;
			goto _iter_begin_207e154c1;
		}
		_iter_end_207e154c1:;
	};
}



inline void _203b35e0a_newCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d36bb_BuiltinNewCallExprModel> _103431_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _103431_m.get()._field_Kind));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_103431_m.get()._field_Init != nullptr)) {
		_203b316ca_possibleRefExpr(_self_, _103431_m.get()._field_Init);
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b36180_outCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d2ac7_BuiltinOutCallExprModel> _104431_m) {
	if ((_104431_m.get()._field_Debug && _21b538b25_Production)) {
		return;;
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_203b316ca_possibleRefExpr(_self_, _104431_m.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b36405_outlnCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d2eb2_BuiltinOutlnCallExprModel> _105333_m) {
	if ((_105333_m.get()._field_Debug && _21b538b25_Production)) {
		return;;
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_203b316ca_possibleRefExpr(_self_, _105333_m.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b3667a_panicCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d3aa6_BuiltinPanicCallExprModel> _106233_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_203b316ca_possibleRefExpr(_self_, _106233_m.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_203bd784c_locInfo(_self_.get()._field_oc, &(_106233_m.get()._field_Token));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _203b36900_assertCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d405c_BuiltinAssertCallExprModel> _107034_m) {
	if (_21b538b25_Production) {
		return;;
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_203b316ca_possibleRefExpr(_self_, _107034_m.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_203bd58a0_write(_self_.get()._field_oc, _203b3b3c7_cstrLit(static_cast<jule::Slice<jule::U8>>(_107034_m.get()._field_Log)));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_203bd784c_locInfo(_self_.get()._field_oc, &(_107034_m.get()._field_Token));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _203b36b75_errorCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d5e3d_BuiltinErrorCallExprModel> _108333_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_2211da23e_IsVoid(_108333_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _108333_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_207e21e06:;
				{
					jule::Ptr<_22126b17c_Var> _108821_v = _108333_m.get()._field_Err.get()._field_Model.cast_ptr<_22126b17c_Var>(&__jule_any_type8);;
					if (_108821_v.get()._field_Ident.equal("error", 5)) {
						_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_207e21da1:;
		};
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_203bed8a7_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_108333_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _108333_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_207e24953:;
				{
					jule::Ptr<_22126b17c_Var> _110021_v = _108333_m.get()._field_Err.get()._field_Model.cast_ptr<_22126b17c_Var>(&__jule_any_type8);;
					if (_110021_v.get()._field_Ident.equal("error", 5)) {
						_203bd58a0_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_207e24865:;
		};
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_203b316ca_possibleRefExpr(_self_, _108333_m.get()._field_Err.get()._field_Model);
	jule::I32 _110913_i = _203bd654e_pushAnyType(_self_.get()._field_oc, _108333_m.get()._field_Err.get()._field_Kind);;
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(_110913_i));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _203b36dea_copyCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d5a53_BuiltinCopyCallExprModel> _111532_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_203b316ca_possibleRefExpr(_self_, _111532_m.get()._field_Dest.get()._field_Model);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_221455a92_Prim(_111532_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_203b316ca_possibleRefExpr(_self_, _111532_m.get()._field_Src.get()._field_Model);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_221455a92_Prim(_111532_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b37170_lenCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d4c1c_BuiltinLenCallExprModel> _113131_m) {
	_203b316ca_possibleRefExpr(_self_, _113131_m.get()._field_Expr.get()._field_Model);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _203b373e5_capCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d503b_BuiltinCapCallExprModel> _113631_m) {
	_203b316ca_possibleRefExpr(_self_, _113631_m.get()._field_Expr.get()._field_Model);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _203b3766a_deleteCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d56e0_BuiltinDeleteCallExprModel> _114134_m) {
	_203b316ca_possibleRefExpr(_self_, _114134_m.get()._field_Dest.get()._field_Model);
	if ((_114134_m.get()._field_Key != nullptr)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_203b316ca_possibleRefExpr(_self_, _114134_m.get()._field_Key.get()._field_Model);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _203b378e0_makeCallSlice(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d4513_BuiltinMakeCallExprModel>* _115238_m) {
	jule::Ptr<_22145e7b0_Slc> _115317_slice = _221456a1b_Slc((*(_115238_m)).get()._field_Kind.ptr());;
	_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_115238_m)).get()._field_Kind));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_203b316ca_possibleRefExpr(_self_, (*(_115238_m)).get()._field_Len);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_115238_m)).get()._field_Cap != nullptr)) {
		_203b316ca_possibleRefExpr(_self_, (*(_115238_m)).get()._field_Cap);
	} else {
		_203b316ca_possibleRefExpr(_self_, (*(_115238_m)).get()._field_Len);
	};
	if (_203c00b95_shouldInitialized(&(_115317_slice.get()._field_Elem))) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_203b3a6c3_initExpr(_self_, _115317_slice.get()._field_Elem);
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b37b65_makeCallStr(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d4513_BuiltinMakeCallExprModel>* _117036_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_203b316ca_possibleRefExpr(_self_, (*(_117036_m)).get()._field_Len);
	if (((*(_117036_m)).get()._field_Cap != nullptr)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_203b316ca_possibleRefExpr(_self_, (*(_117036_m)).get()._field_Cap);
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b37dda_makeCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d4513_BuiltinMakeCallExprModel> _118132_m) {
	if ((_221456a1b_Slc(_118132_m.get()._field_Kind.ptr()) != nullptr)) {
		_203b378e0_makeCallSlice(_self_, &(_118132_m));
		return;;
	};
	_203b37b65_makeCallStr(_self_, &(_118132_m));
}



inline void _203b38160_pushToSlice(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_221524644_PushToSliceExprModel> _118935_m) {
	jule::I32 _119013_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_203b316ca_possibleRefExpr(_self_, _118935_m.get()._field_Dest);
	jule::Str _119213_dest = _self_.get()._field_oc.get()._field_Obj.slice(_119013_n);;
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_203bd58a0_write(_self_.get()._field_oc, _119213_dest);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(static_cast<jule::I32>(_118935_m.get()._field_Elems.get()._field_Elems.len())));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto expr = &(_118935_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207e39616:;
		if (it != expr_end) {
			jule::Any _119921_e = *it;
			{
				_203bd58a0_write(_self_.get()._field_oc, _119213_dest);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_203b316ca_possibleRefExpr(_self_, _119921_e);
				_203bd58a0_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_207e39616:;
			++it;
			goto _iter_begin_207e39616;
		}
		_iter_end_207e39616:;
	};
}



inline void _203b383d5_appendCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d48ed_BuiltinAppendCallExprModel> _120834_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_203b316ca_possibleRefExpr(_self_, _120834_m.get()._field_Dest);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_203b316ca_possibleRefExpr(_self_, _120834_m.get()._field_Elements);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b3865a_cloneCall(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d32d1_BuiltinCloneCallExprModel> _121633_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_203b316ca_possibleRefExpr(_self_, _121633_m.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b388d0_sizeof(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d623a_SizeofExprModel> _122230_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_203b316ca_possibleRefExpr(_self_, _122230_m.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b38b55_alignof(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d6526_AlignofExprModel> _122831_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_203b316ca_possibleRefExpr(_self_, _122831_m.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _203b38e63_runeLit(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d6812_RuneExprModel> _123427_m) {
	if ((_123427_m.get()._field_Code <= 127LL)) {
		jule::Str _123621_b = _203b3ad11_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_123427_m.get()._field_Code)));;
		if (_123621_b.equal("'", 1)) {
			_123621_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _123621_b) + jule::Str("'", 1));;
	};
	return _203b3b97c_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_123427_m.get()._field_Code)));;
}



inline void _203b391d8_structureStatic(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d16db_StructStaticIdentExprModel> _124539_m) {
	_203bd58a0_write(_self_.get()._field_oc, static__203b42e7d_funcIns(&(_124539_m.get()._field_Method)));
}



inline void _203b3945d_integratedToStr(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d6b20_IntegratedToStrExprModel> _124939_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_203b316ca_possibleRefExpr(_self_, _124939_m.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203b396d3_backendEmit(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d6ed8_BackendEmitExprModel> _125535_m) {
	if ((_125535_m.get()._field_Exprs.len() == 0LL)) {
		_203bd58a0_write(_self_.get()._field_oc, _125535_m.get()._field_Code);
		return;;
	};
	jule::I32 _126013_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _126117_args = jule::Slice<jule::Any>::alloc(_125535_m.get()._field_Exprs.len(), _125535_m.get()._field_Exprs.len());;
	{
		auto expr = &(_125535_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207e4416a:;
		if (it != expr_end) {
			jule::I32 _126214_i = it - expr->begin();
			jule::Any _126221_expr = *it;
			{
				_203b316ca_possibleRefExpr(_self_, _126221_expr);
				_126117_args[_126214_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_126013_n), &__jule_any_type5);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL, _126013_n);
			}
			_iter_next_207e4416a:;
			++it;
			_126214_i++;
			goto _iter_begin_207e4416a;
		}
		_iter_end_207e4416a:;
	};
	_203bd58a0_write(_self_.get()._field_oc, _2215170c6_Format(_125535_m.get()._field_Code, _126117_args));
}



inline void _203b39958_free(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_2211d72c4_FreeExprModel> _127028_m) {
	_203b316ca_possibleRefExpr(_self_, _127028_m.get()._field_Expr);
	if (_21b538482_RC) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _203b39bcd_mutSlicing(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_221524b83_MutSlicingExprModel> _127934_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203b316ca_possibleRefExpr(_self_, _127934_m.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_21b538b25_Production))) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_203bd784c_locInfo(_self_.get()._field_oc, &(_127934_m.get()._field_Token));
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_203b316ca_possibleRefExpr(_self_, _127934_m.get()._field_Left);
	if ((_127934_m.get()._field_Right != nullptr)) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_203b316ca_possibleRefExpr(_self_, _127934_m.get()._field_Right);
	};
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _203b39e53_strInsertBegin(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_22152505c_StrInsertBeginExprModel> _129638_m) {
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203b316ca_possibleRefExpr(_self_, _129638_m.get()._field_Dest);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_203b316ca_possibleRefExpr(_self_, _129638_m.get()._field_Expr);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _203b3a1c8_strComp(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_221523775_StrCompExprModel> _130431_m) {
	if (_130431_m.get()._field_NotEq) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("(!", 2));
	};
	jule::Slice<jule::U8> _130813_bytes = static_cast<jule::Slice<jule::U8>>(_21e6c7420_ReadStr(_130431_m.get()._field_Right.ptr()));;
	_203b316ca_possibleRefExpr(_self_, _130431_m.get()._field_Left);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(".equal(", 7));
	_203bd58a0_write(_self_.get()._field_oc, _203b3b3c7_cstrLit(_130813_bytes));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(static_cast<jule::I32>(_130813_bytes.len())));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_130431_m.get()._field_NotEq) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _203b3a44d_model(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Any _132029_m) {
	{
		auto &_match_expr{ _132029_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_207e51d8c:;
			{
				_203bd58a0_write(_self_.get()._field_oc, _132029_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_207e52167:;
			{
				_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _132029_m.cast_ptr<_221453397_TypeKind>(&__jule_any_type89)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_207e521cd:;
			{
				_203b2ed27_constant(_self_, _132029_m.cast_ptr<_21e6c53da_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_207e52244:;
			{
				_203b30960_var(_self_, _132029_m.cast_ptr<_22126b17c_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_207e522aa:;
			{
				_203b30bd5_structureIns(_self_, _132029_m.cast_ptr<_2211c76e3_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_207e52c39:;
			{
				_203b3568a_funcInsCommon(_self_, _132029_m.cast_ptr<_2211dc97d_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_207e52ca0:;
			{
				_203b30465_unsafeBinary(_self_, _132029_m.cast_ptr<_221523e29_UnsafeBinopExprModel>(&__jule_any_type128).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_207e52d16:;
			{
				_203b306da_binary(_self_, _132029_m.cast_ptr<_2211cbb59_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_207e52d7c:;
			{
				_203b30e5a_unary(_self_, _132029_m.cast_ptr<_2211cc011_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_207e52de3:;
			{
				_203b311d0_structureLit(_self_, _132029_m.cast_ptr<_2211cc7b4_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_207e52e59:;
			{
				_203b31455_allocStructure(_self_, _132029_m.cast_ptr<_2211ccac2_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_207e52ec0:;
			{
				_203b31d18_casting(_self_, _132029_m.cast_ptr<_2211cd122_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_207e53036:;
			{
				_203b336aa_funcCall(_self_, _132029_m.cast_ptr<_2211cd9c4_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_207e5309c:;
			{
				_203b33930_slice(_self_, _132029_m.cast_ptr<_2211cdd7b_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_207e53113:;
			{
				_203b35415_array(_self_, _132029_m.cast_ptr<_2211d1aa4_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_207e53179:;
			{
				_203b33e2a_unsafeIndexing(_self_, _132029_m.cast_ptr<_2215242ae_UnsafeIndexingExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_207e531e0:;
			{
				_203b33ba5_indexing(_self_, _132029_m.cast_ptr<_2211ce2ee_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_207e53256:;
			{
				_203b341a0_anonFunc(_self_, _132029_m.cast_ptr<_2211ce6a6_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_207e532cd:;
			{
				_203b34425_mapExpr(_self_, _132029_m.cast_ptr<_2211ceed1_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_207e53355:;
			{
				_203b3469a_slicing(_self_, _132029_m.cast_ptr<_2211d0520_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_207e533cc:;
			{
				_203b34920_traitSub(_self_, _132029_m.cast_ptr<_2211d0a5e_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_207e53454:;
			{
				_203b34b95_structureSub(_self_, _132029_m.cast_ptr<_2211d1345_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_207e534cb:;
			{
				_203b34e1a_commonIdent(_self_, _132029_m.cast_ptr<_2211d1d90_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_207e53553:;
			{
				_203b35190_commonSub(_self_, _132029_m.cast_ptr<_2211d2401_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_207e535ca:;
			{
				_203b35b85_tuple(_self_, _132029_m.cast_ptr<_2211d26ed_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_207e53652:;
			{
				_203b36180_outCall(_self_, _132029_m.cast_ptr<_2211d2ac7_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_207e536c9:;
			{
				_203b36405_outlnCall(_self_, _132029_m.cast_ptr<_2211d2eb2_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_207e53751:;
			{
				_203b35e0a_newCall(_self_, _132029_m.cast_ptr<_2211d36bb_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_207e537c8:;
			{
				_203b3667a_panicCall(_self_, _132029_m.cast_ptr<_2211d3aa6_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_207e53850:;
			{
				_203b36900_assertCall(_self_, _132029_m.cast_ptr<_2211d405c_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_207e538c7:;
			{
				_203b36b75_errorCall(_self_, _132029_m.cast_ptr<_2211d5e3d_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_207e5394e:;
			{
				_203b37dda_makeCall(_self_, _132029_m.cast_ptr<_2211d4513_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_207e539c6:;
			{
				_203b383d5_appendCall(_self_, _132029_m.cast_ptr<_2211d48ed_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_207e53a4d:;
			{
				_203b3865a_cloneCall(_self_, _132029_m.cast_ptr<_2211d32d1_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_207e53ac5:;
			{
				_203b36dea_copyCall(_self_, _132029_m.cast_ptr<_2211d5a53_BuiltinCopyCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_207e53b4c:;
			{
				_203b37170_lenCall(_self_, _132029_m.cast_ptr<_2211d4c1c_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_207e53bc4:;
			{
				_203b373e5_capCall(_self_, _132029_m.cast_ptr<_2211d503b_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_207e53c4b:;
			{
				_203b3766a_deleteCall(_self_, _132029_m.cast_ptr<_2211d56e0_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_207e53cc3:;
			{
				_203b388d0_sizeof(_self_, _132029_m.cast_ptr<_2211d623a_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_207e53d4a:;
			{
				_203b38b55_alignof(_self_, _132029_m.cast_ptr<_2211d6526_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_207e53dc2:;
			{
				_203bd58a0_write(_self_.get()._field_oc, _203b38e63_runeLit(_self_, _132029_m.cast_ptr<_2211d6812_RuneExprModel>(&__jule_any_type88)));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_207e53e49:;
			{
				_203b391d8_structureStatic(_self_, _132029_m.cast_ptr<_2211d16db_StructStaticIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_207e53ec1:;
			{
				_203b3945d_integratedToStr(_self_, _132029_m.cast_ptr<_2211d6b20_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_207e54048:;
			{
				_203b396d3_backendEmit(_self_, _132029_m.cast_ptr<_2211d6ed8_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_207e540c0:;
			{
				_203b39958_free(_self_, _132029_m.cast_ptr<_2211d72c4_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_207e54147:;
			{
				_203b39bcd_mutSlicing(_self_, _132029_m.cast_ptr<_221524b83_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_207e541be:;
			{
				_203b39e53_strInsertBegin(_self_, _132029_m.cast_ptr<_22152505c_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_207e54246:;
			{
				_203b3a1c8_strComp(_self_, _132029_m.cast_ptr<_221523775_StrCompExprModel>(&__jule_any_type127));
			}
		}
		else {
			_case_begin_207e52013:;
			{
				_203bd58a0_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_207e51e36:;
	};
}



inline void _203b3a6c3_initExpr(jule::Ptr<_203b2d6c7_exprCoder> _self_, jule::Ptr<_221453397_TypeKind> _142332_t) {
	if (_2214550e1_NilCompatible(_142332_t.ptr())) {
		if ((_22145606a_Ptr(_142332_t.ptr()) != nullptr)) {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _142332_t));
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_22146033d_Tuple> _143317_tup = _221457731_Tup(_142332_t.ptr());;
	if ((_143317_tup != nullptr)) {
		_203bed269_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _143317_tup);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_143317_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_207e6c429:;
			if (it != expr_end) {
				jule::I32 _143718_i = it - expr->begin();
				jule::Ptr<_221453397_TypeKind> _143725_tt = *it;
				{
					if ((!(_203c00b95_shouldInitialized(&(_143725_tt))))) {
						goto _iter_next_207e6c429;
					};
					_203bd58a0_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_203bd58a0_write(_self_.get()._field_oc, _21e6b5a18_Itoa(_143718_i));
					_203bd58a0_write(_self_.get()._field_oc, jule::Str("=", 1));
					_203b3a6c3_initExpr(_self_, _143725_tt);
					if (((_143317_tup.get()._field_Types.len() - _143718_i) > 1LL)) {
						_203bd58a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_207e6c429:;
				++it;
				_143718_i++;
				goto _iter_begin_207e6c429;
			}
			_iter_end_207e6c429:;
		};
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_2211ee781_Enum> _145217_enm = _2214562ce_Enum(_142332_t.ptr());;
	if ((_145217_enm != nullptr)) {
		_203b3a44d_model(_self_, _145217_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_22145a5be_Prim> _145713_prim = _221455a92_Prim(_142332_t.ptr());;
	if ((_145713_prim != nullptr)) {
		if (_21e6c4e9a_IsNum(_145713_prim.get()._field_Kind)) {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_22145d58e_IsBool(_145713_prim.ptr())) {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_22145d803_IsStr(_145713_prim.ptr())) {
			_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_2214567a7_Arr(_142332_t.ptr()) != nullptr)) {
		jule::Ptr<_22146195a_Arr> _146921_arr = _2214567a7_Arr(_142332_t.ptr());;
		_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _142332_t));
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
		_203b3a6c3_initExpr(_self_, _146921_arr.get()._field_Elem);
		_203bd58a0_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_2211c76e3_StructIns> _147617_s = _221456ee4_Struct(_142332_t.ptr());;
	if ((((_147617_s != nullptr) && _147617_s.get()._field_Decl.get()._field_CppLinked) && (_203c00568_findDirective(&(_147617_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("(", 1));
		_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _142332_t));
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_203bd58a0_write(_self_.get()._field_oc, _203be8d69_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _142332_t));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _203b2d6c7_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203b3d011_deriveCoder> static__203b3d3eb_new(jule::Ptr<_203bd520c_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_203b3d011_deriveCoder>(_203b3d011_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _203b3d709_cloneFuncDecl(_203b3d011_deriveCoder* _self_, jule::Ptr<_2211c48cc_Struct>* _1633_s) {
	jule::Str _1717_obj = _203be70cb_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1633_s)));;
	(_1717_obj).append(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _203b3da17_cloneFuncDef(_203b3d011_deriveCoder* _self_, jule::Ptr<_2211c48cc_Struct>* _2232_s) {
	jule::Str _2317_obj = _203be70cb_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2232_s)));;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	(_2317_obj).append("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _203b3d011_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203b3e93b_TestCoder> static__203b3edae_New(jule::Ptr<_203bd520c_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_203b3e93b_TestCoder>(_203b3e93b_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_221242a9e_ImportInfo> _203b40123_findTestingPackage(jule::Ptr<_203b3e93b_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207e7a3c1:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _3521_imp = *it;
			{
				if (_3521_imp.get()._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_207e7a3c1:;
			++it;
			goto _iter_begin_207e7a3c1;
		}
		_iter_end_207e7a3c1:;
	};
	return nullptr;;
}



inline void _203b40398_appendTest(jule::Ptr<_203b3e93b_TestCoder> _self_, jule::Ptr<_2211dc97d_FnIns> _4334_f) {
	_203bd5e33_indent(_self_.get()._field_oc);
	_203b40a5d_callTmReset(_self_);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \" ", 34));
	_203bd58a0_write(_self_.get()._field_oc, _203b3b3c7_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(" << std::endl;\n", 15));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, static__203b42e7d_funcIns(&(_4334_f)));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _203b4061d_appendPackageTests(jule::Ptr<_203b3e93b_TestCoder> _self_, jule::Ptr<_2212456d9_Package>* _5843_p) {
	{
		auto expr = &((*(_5843_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207e7ea46:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &(_5921_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207e80382:;
					if (it != expr_end) {
						jule::Ptr<_2211d9ccc_Fn> _6025_f = *it;
						{
							if (_203c008ed_hasDirective(&(_6025_f.get()._field_Directives), jule::Str("test", 4))) {
								_203b40398_appendTest(_self_, _6025_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_207e80382:;
						++it;
						goto _iter_begin_207e80382;
					}
					_iter_end_207e80382:;
				};
			}
			_iter_next_207e7ea46:;
			++it;
			goto _iter_begin_207e7ea46;
		}
		_iter_end_207e7ea46:;
	};
}



inline jule::Bool _203b40882_readyTestingPackage(jule::Ptr<_203b3e93b_TestCoder> _self_) {
	jule::Ptr<_221242a9e_ImportInfo> _6917_p = _203b40123_findTestingPackage(_self_);;
	if ((_6917_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_221243bc1_FindStruct(_6917_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_2211c868e_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_2211c868e_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_2211c868e_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _203b40a5d_callTmReset(jule::Ptr<_203b3e93b_TestCoder> _self_) {
	_203bd58a0_write(_self_.get()._field_oc, static__203b42bd6_func(&(_self_.get()._field_tmReset)));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _203b40c39_callTmFailed(jule::Ptr<_203b3e93b_TestCoder> _self_) {
	_203bd58a0_write(_self_.get()._field_oc, static__203b42bd6_func(&(_self_.get()._field_tmFailed)));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _203b40e15_callTmSkipped(jule::Ptr<_203b3e93b_TestCoder> _self_) {
	_203bd58a0_write(_self_.get()._field_oc, static__203b42bd6_func(&(_self_.get()._field_tmSkipped)));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _203b410e1_Serialize(jule::Ptr<_203b3e93b_TestCoder> _self_) {
	_203be1108_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_203be0e2c_end(_self_.get()._field_oc);
	});;
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	if ((!(_203b40882_readyTestingPackage(_self_)))) {
		_203bd58a0_write(_self_.get()._field_oc, jule::Str("}", 1));
		_203bd5c57_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_203bd58a0_write(_self_.get()._field_oc, _203be4c33_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _203be73d9_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_203bd58a0_write(_self_.get()._field_oc, _203be73d9_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_203bd5a7b_addIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_203b40c39_callTmFailed(_self_);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_203b40e15_callTmSkipped(_self_);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_203b4061d_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_203bd5c57_doneIndent(_self_.get()._field_oc);
	_203bd5e33_indent(_self_.get()._field_oc);
	_203bd58a0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _203b3e93b_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__203b42554_toOut(jule::Str* _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		(_3521_obj).append("_", 1);
		_3521_obj+=_21e6b53db_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)), 15LL);
		(_3521_obj).append("_", 1);
		_3521_obj+=(*(_3322_ident));
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, ((*(_3322_ident)).len() + 1LL));;
	(_4217_obj).append("_", 1);
	_4217_obj+=(*(_3322_ident));
	return _4217_obj;;
}



inline jule::Str static__203b4293e_toLocal(jule::I32 _5423_row, jule::I32 _5433_col, jule::Str* _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	(_5517_obj).append("_", 1);
	_5517_obj+=_21e6b5a18_Itoa(_5423_row);
	_5517_obj+=_21e6b5a18_Itoa(_5433_col);
	(_5517_obj).append("_", 1);
	_5517_obj+=(*(_5444_ident));
	return _5517_obj;;
}



inline jule::Str static__203b42bd6_func(jule::Ptr<_2211d9ccc_Fn>* _6521_f) {
	{
		
		if ((*(_6521_f)).get()._field_CppLinked) {
			_case_begin_207e959a2:;
			{
				return (*(_6521_f)).get()._field_Ident;;
			}
		}
		else if ((*(_6521_f)).get()._field_Ident.equal("main", 4)) {
			_case_begin_207e95a18:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_2211da4a3_IsMethod((*(_6521_f)).ptr())) {
			_case_begin_207e94dad:;
			{
				jule::Str _7221_obj = static__203b42554_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
				if ((*(_6521_f)).get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_207e94d47:;
			{
				return static__203b42554_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
			}
		}
		_match_end_207e94c9d:;
	};
}



inline jule::Str static__203b42e7d_funcIns(jule::Ptr<_2211dc97d_FnIns>* _8424_f) {
	if (_2211ddd14_IsBuiltin((*(_8424_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_8424_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_8424_f)).get()._field_Decl.get()._field_CppLinked || ((*(_8424_f)).get()._field_Generics.len() == 0LL))) {
		return static__203b42bd6_func(&((*(_8424_f)).get()._field_Decl));;
	};
	return static__203b42554_toOut(&((*(_8424_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8424_f)))));;
}



inline jule::Str static__203b43225_traitDecl(jule::Ptr<_2211ebeed_Trait> _9525_t) {
	if (_2211eca8c_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__203b42554_toOut(&(_9525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__203b434bc_param(jule::Ptr<_2211d8490_Param>* _10322_p) {
	if ((_21da1d547_IsAnonIdent((*(_10322_p)).get()._field_Ident) || _21da1d2a0_IsIgnoreIdent((*(_10322_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_2211d8abc_IsSelf((*(_10322_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_10322_p)).get()._field_Token == nullptr)) {
		return static__203b4293e_toLocal(0LL, 0LL, &((*(_10322_p)).get()._field_Ident));;
	};
	return static__203b4293e_toLocal((*(_10322_p)).get()._field_Token.get()._field_Row, (*(_10322_p)).get()._field_Token.get()._field_Column, &((*(_10322_p)).get()._field_Ident));;
}



inline jule::Str static__203b43764_structure(jule::Ptr<_2211c48cc_Struct>* _11726_s) {
	if ((*(_11726_s)).get()._field_CppLinked) {
		if (_203c008ed_hasDirective(&((*(_11726_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_11726_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_11726_s)).get()._field_Ident);;
	};
	return static__203b42554_toOut(&((*(_11726_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11726_s)))));;
}



inline jule::Str static__203b43a0b_structureIns(jule::Ptr<_2211c76e3_StructIns>* _12829_s) {
	if (((*(_12829_s)).get()._field_Decl.get()._field_CppLinked || ((*(_12829_s)).get()._field_Generics.len() == 0LL))) {
		return static__203b43764_structure(&((*(_12829_s)).get()._field_Decl));;
	};
	return static__203b42554_toOut(&((*(_12829_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12829_s)))));;
}



inline jule::Str static__203b43ca3_field(jule::Ptr<_2211c1d08_Field>* _13622_f) {
	if ((*(_13622_f)).get()._field_Owner.get()._field_CppLinked) {
		return (*(_13622_f)).get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + (*(_13622_f)).get()._field_Ident);;
}



inline jule::Str static__203b4404a_var(jule::Ptr<_22126b17c_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_207ea05a0:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("error", 5)) {
			_case_begin_207e9e934:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("self", 4)) {
			_case_begin_207e9e99a:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_207e9ea11:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_207e9ea77:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _21e6b5a18_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_207e9ed0d:;
			{
				return static__203b4293e_toLocal(_14423_v.get()._field_Token.get()._field_Row, _14423_v.get()._field_Token.get()._field_Column, &(_14423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_207e9e8bd:;
			{
				return static__203b42554_toOut(&(_14423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_207e9e2c4:;
	};
}



inline jule::Str static__203b442e2_iterBegin(jule::Uintptr _16425_it) {
	jule::Str _16517_obj = jule::Str::alloc(0LL, 30LL);;
	(_16517_obj).append("_iter_begin_", 12);
	_16517_obj+=_21e6b53db_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16425_it)), 15LL);
	return _16517_obj;;
}



inline jule::Str static__203b44589_iterEnd(jule::Uintptr _17223_it) {
	jule::Str _17317_obj = jule::Str::alloc(0LL, 30LL);;
	(_17317_obj).append("_iter_end_", 10);
	_17317_obj+=_21e6b53db_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17223_it)), 15LL);
	return _17317_obj;;
}



inline jule::Str static__203b44831_iterNext(jule::Uintptr _18024_it) {
	jule::Str _18117_obj = jule::Str::alloc(0LL, 30LL);;
	(_18117_obj).append("_iter_next_", 11);
	_18117_obj+=_21e6b53db_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18024_it)), 15LL);
	return _18117_obj;;
}



inline jule::Str static__203b44ac8_label(jule::Str* _18822_ident) {
	jule::Str _18917_obj = jule::Str::alloc(0LL, 30LL);;
	(_18917_obj).append("_julec_label_", 13);
	_18917_obj+=(*(_18822_ident));
	return _18917_obj;;
}



inline jule::Str static__203b44d70_matchEnd(jule::Uintptr _19624_m) {
	jule::Str _19717_obj = jule::Str::alloc(0LL, 30LL);;
	(_19717_obj).append("_match_end_", 11);
	_19717_obj+=_21e6b53db_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19624_m)), 15LL);
	return _19717_obj;;
}



inline jule::Str static__203b45117_caseBegin(jule::Uintptr _20425_c) {
	jule::Str _20517_obj = jule::Str::alloc(0LL, 30LL);;
	(_20517_obj).append("_case_begin_", 12);
	_20517_obj+=_21e6b53db_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20425_c)), 15LL);
	return _20517_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _203b41e7c_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _203bd386a_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _203bd3d32_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _203bd41d9_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _203be32e7_Str(_203be303e_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _203be3605_Equal(jule::Ptr<_203be303e_customType> _self_, jule::Ptr<_221453397_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _203be303e_customType _Src) {
	_Stream << _203be32e7_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_203be39ac_typeCoder> static__203be3eeb_new(jule::Ptr<_203bd520c_ObjectCoder>* _6324_oc) {
	jule::Ptr<_203be39ac_typeCoder> _6417_tc = jule::new_ptr<_203be39ac_typeCoder>(_203be39ac_typeCoder{._field_oc=(*(_6324_oc)), });;
	_6417_tc.get()._field_rc=static__203beba81_new(&(_6417_tc));
	return _6417_tc;;
}



inline jule::Str _203be4309_toType(_203be39ac_typeCoder* _self_, jule::Str _7029_id) {
	if ((!_7029_id.equal("uintptr", 7))) {
		_7029_id=_21e6b78d8_RealKindOf(_7029_id);
	};
	if (((97LL <= _7029_id[0LL]) && (_7029_id[0LL] <= 122LLU))) {
		_7029_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _7029_id);;
}



inline jule::Str _203be4617_prim(_203be39ac_typeCoder* _self_, jule::Ptr<_22145a5be_Prim> _8123_p) {
	return _203be4309_toType(_self_, _22145a932_Str(_8123_p.ptr()));;
}



inline jule::Str _203be4925_tuple(_203be39ac_typeCoder* _self_, jule::Ptr<_22146033d_Tuple> _8628_t) {
	jule::Str _8717_obj = jule::Str("std::tuple<", 11);;
	{
		auto expr = &(_8628_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2080ab447:;
		if (it != expr_end) {
			jule::Ptr<_221453397_TypeKind> _8821_tk = *it;
			{
				_8717_obj+=_203be8d69_kind(_self_, _8821_tk);
				(_8717_obj).append(",", 1);
			}
			_iter_next_2080ab447:;
			++it;
			goto _iter_begin_2080ab447;
		}
		_iter_end_2080ab447:;
	};
	(_8717_obj).mut_slice(0LL, (_8717_obj.len() - 1LL));;
	(_8717_obj).append(">", 1);
	return _8717_obj;;
}



inline jule::Str _203be4c33_asSptr(_203be39ac_typeCoder* _self_, jule::Str _9825_elem) {
	jule::Str _9917_obj = jule::Str("jule::Ptr<", 10);;
	_9917_obj+=_9825_elem;
	(_9917_obj).append(">", 1);
	return _9917_obj;;
}



inline jule::Str _203be5041_asPtr(_203be39ac_typeCoder* _self_, jule::Str _10624_elem) {
	return (_10624_elem + jule::Str("*", 1));;
}



inline jule::Str _203be534e_sptr(_203be39ac_typeCoder* _self_, jule::Ptr<_22145dd53_Sptr> _11127_sptr) {
	return _203be4c33_asSptr(_self_, _203be8d69_kind(_self_, _11127_sptr.get()._field_Elem));;
}



inline jule::Str _203be565c_ptr(_203be39ac_typeCoder* _self_, jule::Ptr<_2214623b7_Ptr> _11626_p) {
	;
	if (_221462d8a_IsUnsafe(_11626_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12117_elem = _203be8d69_kind(_self_, _11626_p.get()._field_Elem);;
	(_12117_elem).append("*", 1);
	return _12117_elem;;
}



inline jule::Str _203be596a_enumDecl(_203be39ac_typeCoder* _self_, jule::Ptr<_2211ee781_Enum> _12731_e) {
	return _203be8d69_kind(_self_, _12731_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _203be5c78_typeEnumDecl(_203be39ac_typeCoder* _self_, jule::Ptr<_221200d7b_TypeEnum> _13235_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _203be6086_asSlice(_203be39ac_typeCoder* _self_, jule::Ptr<_221453397_TypeKind> _13630_elem) {
	jule::Str _13717_obj = jule::Str("jule::Slice<", 12);;
	_13717_obj+=_203be8d69_kind(_self_, _13630_elem);
	(_13717_obj).append(">", 1);
	return _13717_obj;;
}



inline jule::Str _203be6394_slice(_203be39ac_typeCoder* _self_, jule::Ptr<_22145e7b0_Slc> _14428_s) {
	return _203be6086_asSlice(_self_, _14428_s.get()._field_Elem);;
}



inline jule::Str _203be66a2_mapType(_203be39ac_typeCoder* _self_, jule::Ptr<_221460d66_Map> _14930_m) {
	jule::Str _15017_obj = jule::Str("jule::Map<", 10);;
	_15017_obj+=_203be8d69_kind(_self_, _14930_m.get()._field_Key);
	(_15017_obj).append(",", 1);
	_15017_obj+=_203be8d69_kind(_self_, _14930_m.get()._field_Val);
	(_15017_obj).append(">", 1);
	return _15017_obj;;
}



inline jule::Str _203be69b0_traitIdent(_203be39ac_typeCoder* _self_, jule::Str _15829_ident) {
	jule::Str _15917_obj = jule::Str("jule::Trait<", 12);;
	_15917_obj+=_15829_ident;
	(_15917_obj).append(">", 1);
	return _15917_obj;;
}



inline jule::Str _203be6cbd_traitDecl(_203be39ac_typeCoder* _self_, jule::Ptr<_2211ebeed_Trait> _16628_t) {
	return _203be69b0_traitIdent(_self_, static__203b43225_traitDecl(_16628_t));;
}



inline jule::Str _203be70cb_structure(_203be39ac_typeCoder* _self_, jule::Ptr<_2211c48cc_Struct> _17128_s) {
	jule::Str _17217_rep = jule::Str();;
	if ((_17128_s.get()._field_CppLinked && (!(_203c008ed_hasDirective(&(_17128_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		(_17217_rep).append("struct ", 7);
	};
	_17217_rep+=static__203b43764_structure(&(_17128_s));
	return _17217_rep;;
}



inline jule::Str _203be73d9_structureIns(_203be39ac_typeCoder* _self_, jule::Ptr<_2211c76e3_StructIns> _18135_s) {
	if (_18135_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _18321_ident = static__203b43a0b_structureIns(&(_18135_s));;
		if ((_18135_s.get()._field_Generics.len() > 0LL)) {
			(_18321_ident).append("<", 1);
			{
				auto expr = &(_18135_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_2080b78b5:;
				if (it != expr_end) {
					jule::Ptr<_221451b15_InsGeneric> _18629_g = *it;
					{
						_18321_ident+=_203be8d69_kind(_self_, _18629_g.get()._field_Kind);
						(_18321_ident).append(",", 1);
					}
					_iter_next_2080b78b5:;
					++it;
					goto _iter_begin_2080b78b5;
				}
				_iter_end_2080b78b5:;
			};
			(_18321_ident).mut_slice(0LL, (_18321_ident.len() - 1LL));;
			(_18321_ident).append(">", 1);
		};
		jule::Ptr<_221171307_Directive> _19317_d = _203c00568_findDirective(&(_18135_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_19317_d != nullptr)) {
			(_18321_ident).buffer.insert(0, ((_203be1933_concatAllParts(_19317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18321_ident;;
	};
	return static__203b43a0b_structureIns(&(_18135_s));;
}



inline jule::Str _203be76e7_array(_203be39ac_typeCoder* _self_, jule::Ptr<_22146195a_Arr> _20328_a) {
	jule::Str _20417_obj = jule::Str("jule::Array<", 12);;
	_20417_obj+=_203be8d69_kind(_self_, _20328_a.get()._field_Elem);
	(_20417_obj).append(",", 1);
	_20417_obj+=_21e6b5a18_Itoa(_20328_a.get()._field_N);
	(_20417_obj).append(">", 1);
	return _20417_obj;;
}



inline jule::Str _203be7d13_paramIns(_203be39ac_typeCoder* _self_, jule::Ptr<_2211dbaae_ParamIns>* _22932_p) {
	jule::Str _23017_obj = jule::Str();;
	if ((*(_22932_p)).get()._field_Decl.get()._field_Variadic) {
		(_23017_obj).append("jule::Slice<", 12);
		_23017_obj+=_203be8d69_kind(_self_, (*(_22932_p)).get()._field_Kind);
		(_23017_obj).append(">", 1);
	} else {
		_23017_obj+=_203be8d69_kind(_self_, (*(_22932_p)).get()._field_Kind);
	};
	if ((*(_22932_p)).get()._field_Decl.get()._field_Reference) {
		(_23017_obj).append("*", 1);
	};
	return _23017_obj;;
}



inline void _203be8440_funcInsResult(_203be39ac_typeCoder* _self_, jule::Str* _25937_s, jule::Ptr<_2211dc97d_FnIns>* _25950_f) {
	if (_2211da23e_IsVoid((*(_25950_f)).get()._field_Decl.ptr())) {
		if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
			((*(_25937_s))).append("jule::VoidExceptional", 21);
		} else {
			((*(_25937_s))).append("void", 4);
		};
		return;;
	};
	if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
		((*(_25937_s))).append("jule::Exceptional<", 18);
		_203bed8a7_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
		((*(_25937_s))).append(">", 1);
		return;;
	};
	_203bed8a7_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
}



inline jule::Str _203be874d_anonFunc(_203be39ac_typeCoder* _self_, jule::Ptr<_2211dc97d_FnIns> _27731_f) {
	if (((_27731_f.get()._field_Result != nullptr) && (_221457731_Tup(_27731_f.get()._field_Result.ptr()) != nullptr))) {
		_203bd67c4_pushResultIns((*(_self_))._field_oc, &(_27731_f));
	};
	jule::Str _28117_decl = jule::Str();;
	_203be8440_funcInsResult(_self_, &(_28117_decl), &(_27731_f));
	(_28117_decl).append("(", 1);
	if ((_27731_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_27731_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2080c675e:;
			if (it != expr_end) {
				jule::Ptr<_2211dbaae_ParamIns> _28525_param = *it;
				{
					if (_2211d8abc_IsSelf(_28525_param.get()._field_Decl.ptr())) {
						goto _iter_next_2080c675e;
					};
					_28117_decl+=_203be7d13_paramIns(_self_, &(_28525_param));
					(_28117_decl).append(",", 1);
				}
				_iter_next_2080c675e:;
				++it;
				goto _iter_begin_2080c675e;
			}
			_iter_end_2080c675e:;
		};
		(_28117_decl).mut_slice(0LL, (_28117_decl.len() - 1LL));;
	} else {
		(_28117_decl).append("void", 4);
	};
	(_28117_decl).append(")", 1);
	return _28117_decl;;
}



inline jule::Str _203be8a5b_func(_203be39ac_typeCoder* _self_, jule::Ptr<_2211dc97d_FnIns> _30127_f) {
	jule::Str _30217_obj = jule::Str("jule::Fn<", 9);;
	_30217_obj+=_203be874d_anonFunc(_self_, _30127_f);
	(_30217_obj).append(">", 1);
	return _30217_obj;;
}



inline jule::Str _203be8d69_kind(_203be39ac_typeCoder* _self_, jule::Ptr<_221453397_TypeKind> _30927_k) {
	{
		
		if ((_221456ee4_Struct(_30927_k.ptr()) != nullptr)) {
			_case_begin_2080c98e9:;
			{
				return _203be73d9_structureIns(_self_, _221456ee4_Struct(_30927_k.ptr()));;
			}
		}
		else if (_221454167_CppLinked(_30927_k.ptr())) {
			_case_begin_2080c9971:;
			{
				return _30927_k.get()._field_CppIdent;;
			}
		}
		else if ((_221455a92_Prim(_30927_k.ptr()) != nullptr)) {
			_case_begin_2080c99e8:;
			{
				return _203be4617_prim(_self_, _221455a92_Prim(_30927_k.ptr()));;
			}
		}
		else if ((_221457731_Tup(_30927_k.ptr()) != nullptr)) {
			_case_begin_2080c9a70:;
			{
				return _203be4925_tuple(_self_, _221457731_Tup(_30927_k.ptr()));;
			}
		}
		else if ((_221455d06_Sptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_2080c9ae7:;
			{
				return _203be534e_sptr(_self_, _221455d06_Sptr(_30927_k.ptr()));;
			}
		}
		else if ((_22145606a_Ptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_2080c9b6e:;
			{
				return _203be565c_ptr(_self_, _22145606a_Ptr(_30927_k.ptr()));;
			}
		}
		else if ((_2214562ce_Enum(_30927_k.ptr()) != nullptr)) {
			_case_begin_2080c9be6:;
			{
				return _203be596a_enumDecl(_self_, _2214562ce_Enum(_30927_k.ptr()));;
			}
		}
		else if ((_221456543_TypeEnum(_30927_k.ptr()) != nullptr)) {
			_case_begin_2080c9c6d:;
			{
				return _203be5c78_typeEnumDecl(_self_, _221456543_TypeEnum(_30927_k.ptr()));;
			}
		}
		else if ((_221456a1b_Slc(_30927_k.ptr()) != nullptr)) {
			_case_begin_2080c9ce5:;
			{
				return _203be6394_slice(_self_, _221456a1b_Slc(_30927_k.ptr()));;
			}
		}
		else if ((_2214574bc_Map(_30927_k.ptr()) != nullptr)) {
			_case_begin_2080c9d6c:;
			{
				return _203be66a2_mapType(_self_, _2214574bc_Map(_30927_k.ptr()));;
			}
		}
		else if ((_221457258_Trait(_30927_k.ptr()) != nullptr)) {
			_case_begin_2080c9de4:;
			{
				return _203be6cbd_traitDecl(_self_, _221457258_Trait(_30927_k.ptr()));;
			}
		}
		else if ((_2214567a7_Arr(_30927_k.ptr()) != nullptr)) {
			_case_begin_2080c9e6b:;
			{
				return _203be76e7_array(_self_, _2214567a7_Arr(_30927_k.ptr()));;
			}
		}
		else if ((_221456c80_Fn(_30927_k.ptr()) != nullptr)) {
			_case_begin_2080c9ee3:;
			{
				return _203be8a5b_func(_self_, _221456c80_Fn(_30927_k.ptr()));;
			}
		}
		_match_end_2080c971d:;
	};
	{
		auto &_match_expr{ _30927_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_2080ca09d:;
			{
				return _30927_k.get()._field_Kind.cast_ptr<_203be303e_customType>(25).get()._field_kind;;
			}
		}
		else {
			_case_begin_2080d2083:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_2080d1a99:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _203be39ac_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203beb575_resultCoder> static__203beba81_new(jule::Ptr<_203be39ac_typeCoder>* _36324_tc) {
	return jule::new_ptr<_203beb575_resultCoder>(_203beb575_resultCoder{._field_tc=(*(_36324_tc))});;
}



inline void _203bebda0_ptr(_203beb575_resultCoder* _self_, jule::Str* _36727_s, jule::Ptr<_2214623b7_Ptr> _36739_p) {
	((*(_36727_s))).append("p", 1);
	_203bed588_codeMut(_self_, _36727_s, &(_36739_p.get()._field_Elem));
}



inline void _203bec1be_sptr(_203beb575_resultCoder* _self_, jule::Str* _37228_s, jule::Ptr<_22145dd53_Sptr> _37240_p) {
	((*(_37228_s))).append("x", 1);
	_203bed588_codeMut(_self_, _37228_s, &(_37240_p.get()._field_Elem));
}



inline void _203bec4dd_mapType(_203beb575_resultCoder* _self_, jule::Str* _37731_s, jule::Ptr<_221460d66_Map> _37743_p) {
	((*(_37731_s))).append("m", 1);
	_203bed588_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Key));
	_203bed588_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Val));
}



inline void _203bec80c_slice(_203beb575_resultCoder* _self_, jule::Str* _38329_s, jule::Ptr<_22145e7b0_Slc> _38341_slc) {
	((*(_38329_s))).append("s", 1);
	_203bed588_codeMut(_self_, _38329_s, &(_38341_slc.get()._field_Elem));
}



inline void _203becb2b_arr(_203beb575_resultCoder* _self_, jule::Str* _38827_s, jule::Ptr<_22146195a_Arr> _38839_arr) {
	((*(_38827_s))).append("a", 1);
	(*(_38827_s))+=_21e6b5771_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38839_arr.get()._field_N)), 16LL);
	_203bed588_codeMut(_self_, _38827_s, &(_38839_arr.get()._field_Elem));
}



inline void _203bece4a_func(_203beb575_resultCoder* _self_, jule::Str* _39428_s, jule::Ptr<_2211dc97d_FnIns> _39440_f) {
	((*(_39428_s))).append("f", 1);
	{
		auto expr = &(_39440_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2080d7e24:;
		if (it != expr_end) {
			jule::Ptr<_2211dbaae_ParamIns> _39621_p = *it;
			{
				if (_39621_p.get()._field_Decl.get()._field_Reference) {
					((*(_39428_s))).append("r", 1);
				};
				_203bed588_codeMut(_self_, _39428_s, &(_39621_p.get()._field_Kind));
			}
			_iter_next_2080d7e24:;
			++it;
			goto _iter_begin_2080d7e24;
		}
		_iter_end_2080d7e24:;
	};
	if ((_39440_f.get()._field_Result != nullptr)) {
		_203bed588_codeMut(_self_, _39428_s, &(_39440_f.get()._field_Result));
	};
}



inline void _203bed269_tup(_203beb575_resultCoder* _self_, jule::Str* _40727_s, jule::Ptr<_22146033d_Tuple> _40739_tup) {
	{
		auto expr = &(_40739_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2080d992b:;
		if (it != expr_end) {
			jule::Ptr<_221453397_TypeKind> _40821_t = *it;
			{
				((*(_40727_s))).append("__jule_tuple_", 13);
				_203bed588_codeMut(_self_, _40727_s, &(_40821_t));
			}
			_iter_next_2080d992b:;
			++it;
			goto _iter_begin_2080d992b;
		}
		_iter_end_2080d992b:;
	};
}



inline void _203bed588_codeMut(_203beb575_resultCoder* _self_, jule::Str* _41431_s, jule::Ptr<_221453397_TypeKind>* _41444_t) {
	{
		auto &_match_expr{ (*(_41444_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_2080da9d7:;
			{
				_203bebda0_ptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_2214623b7_Ptr>(24));
			}
		}
		else if (_match_expr.type_is(true, 19)) {
			_case_begin_2080dac6d:;
			{
				_203bec1be_sptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_22145dd53_Sptr>(19));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_2080dacd4:;
			{
				_203bec4dd_mapType(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_221460d66_Map>(22));
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_2080dad4a:;
			{
				_203bec80c_slice(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_22145e7b0_Slc>(20));
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_2080dadb1:;
			{
				_203becb2b_arr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_22146195a_Arr>(23));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_2080db3ab:;
			{
				_203bece4a_func(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_2211dc97d_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_2080db422:;
			{
				jule::Ptr<_2211ee781_Enum> _42917_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_2211ee781_Enum>(3);;
				(*(_41431_s))+=static__203b42554_toOut(&(_42917_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42917_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_2080db488:;
			{
				jule::Ptr<_221200d7b_TypeEnum> _43217_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_221200d7b_TypeEnum>(4);;
				(*(_41431_s))+=static__203b42554_toOut(&(_43217_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43217_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_2080db4ee:;
			{
				jule::Ptr<_2211c76e3_StructIns> _43521_si = (*(_41444_t)).get()._field_Kind.cast_ptr<_2211c76e3_StructIns>(0);;
				(*(_41431_s))+=static__203b43a0b_structureIns(&(_43521_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_2080db565:;
			{
				jule::Ptr<_2211ebeed_Trait> _43821_trt = (*(_41444_t)).get()._field_Kind.cast_ptr<_2211ebeed_Trait>(2);;
				(*(_41431_s))+=static__203b43225_traitDecl(_43821_trt);
			}
		}
		else if (_match_expr.type_is(true, 18)) {
			_case_begin_2080db5cb:;
			{
				(*(_41431_s))+=(*(_41444_t)).get()._field_Kind.cast_ptr<_22145a5be_Prim>(18).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_2080db642:;
			{
				_203bed269_tup(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_22146033d_Tuple>(21));
			}
		}
		else {
			_case_begin_2080dabc4:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:445:13"));;
			}
		}
		_match_end_2080dab6e:;
	};
}



inline void _203bed8a7_codeMut1(_203beb575_resultCoder* _self_, jule::Str* _44932_s, jule::Ptr<_221453397_TypeKind>* _44945_t) {
	jule::Ptr<_22146033d_Tuple> _45017_tup = _221457731_Tup((*(_44945_t)).ptr());;
	if ((_45017_tup != nullptr)) {
		_203bed269_tup(_self_, _44932_s, _45017_tup);
	} else {
		(*(_44932_s))+=_203be8d69_kind((*(_self_))._field_tc.ptr(), (*(_44945_t)));
	};
}



inline jule::Str _203bedb82_code(_203beb575_resultCoder* _self_, jule::Ptr<_221453397_TypeKind>* _45828_t) {
	jule::Str _45917_s = jule::Str::alloc(0LL, 20LL);;
	_203bed588_codeMut(_self_, &(_45917_s), _45828_t);
	return _45917_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _203beb575_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2080e5bbd_Name(_2080e576c_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _2080e5d00_What(_2080e576c_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _2080e5e32_Reset(_2080e576c_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _2080e6075_Short(_2080e576c_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _2080e576c_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _2080e90cd_Name(_2080e9540_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _2080e982b_What(_2080e9540_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _2080e995d_Reset(_2080e9540_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _2080e9a90_Short(_2080e9540_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _2080e9540_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _2080ec895_Name(_2080ecd07_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _2080ed0e3_What(_2080ecd07_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _2080ed225_Reset(_2080ecd07_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _2080ed357_Short(_2080ecd07_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _2080ecd07_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _2081011a1_Name(_208101613_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _2081018ee_What(_208101613_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _208101a31_Reset(_208101613_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _208101b63_Short(_208101613_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _208101613_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _208104968_Name(_208104dca_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _2081051b6_What(_208104dca_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _2081052e8_Reset(_208104dca_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _20810542a_Short(_208104dca_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _208104dca_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203c57c74_FlagSet> static__203c58060_New(void) {
	return jule::new_ptr<_203c57c74_FlagSet>(_203c57c74_FlagSet{._field_flags=jule::Slice<jule::Trait<_203c56316_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_203c56316_CommonFlag> _203c584e4_FindFlag(_203c57c74_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20811501c:;
		if (it != expr_end) {
			jule::Trait<_203c56316_CommonFlag> _7221_flag = *it;
			{
				if ((_203c56316_CommonFlag_mptr_data[(_7221_flag).type_offset]._203c26649_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_20811501c:;
			++it;
			goto _iter_begin_20811501c;
		}
		_iter_end_20811501c:;
	};
	return nullptr;;
}



inline jule::Trait<_203c56316_CommonFlag> _203c58802_FindFlagShort(_203c57c74_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208115649:;
		if (it != expr_end) {
			jule::Trait<_203c56316_CommonFlag> _8221_flag = *it;
			{
				if ((_203c56316_CommonFlag_mptr_data[(_8221_flag).type_offset]._203c2677b_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_208115649:;
			++it;
			goto _iter_begin_208115649;
		}
		_iter_end_208115649:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_203c56316_CommonFlag>> _203c58a66_Flags(_203c57c74_FlagSet* _self_) {
	return (*(_self_))._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _203c58d74_Parse(_203c57c74_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_203c5a44c_argParser _11617_ap = _203c5a44c_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _203c5b838_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _203c59050_Reset(_203c57c74_FlagSet* _self_) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20811854d:;
		if (it != expr_end) {
			jule::Trait<_203c56316_CommonFlag> _12616_f = *it;
			{
				_203c56316_CommonFlag_mptr_data[(_12616_f).type_offset]._203c561d4_Reset(_12616_f);
			}
			_iter_next_20811854d:;
			++it;
			goto _iter_begin_20811854d;
		}
		_iter_end_20811854d:;
	};
}



inline jule::Ptr<_208104dca_Flag> _208178b52_addFlagCommon(_203c57c74_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_20817a291:;
			{
				goto _match_end_20817a23b;
			}
		}
		_match_end_20817a23b:;
	};
	if ((_203c584e4_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_203c58802_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_208104dca_Flag> _14817_flag = jule::new_ptr<_208104dca_Flag>(_208104dca_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_203c56316_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;;
}

inline jule::Ptr<_208101613_Flag> _208182166_addFlagCommon(_203c57c74_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_208183750:;
			{
				goto _match_end_2081836a6;
			}
		}
		_match_end_2081836a6:;
	};
	if ((_203c584e4_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_203c58802_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_208101613_Flag> _14817_flag = jule::new_ptr<_208101613_Flag>(_208101613_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_203c56316_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;;
}



inline void _208176ad9_AddVar(_203c57c74_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_208104dca_Flag> _17617_flag = _208178b52_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _20818010e_AddVar(_203c57c74_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_208101613_Flag> _17617_flag = _208182166_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _203c57c74_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _20811ccc2_parseInteger(_203c5a44c_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_208120951:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_21d5d474b_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_208120db3:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21d5d474b_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_20812105b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21d5d474b_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_208120ca3:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_208120621:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_2081205aa:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_2081204de:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _208125cec_parseInteger(_203c5a44c_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_208128937:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_21d5d474b_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_208128d99:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21d5d474b_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_208129042:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21d5d474b_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_208128c89:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_208128607:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_208128591:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_2081284c5:;
	};
	return __jule_func_result;;
}



inline jule::Str _203c5ac44_getData(_203c5a44c_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _203c5ae86_processFlag(_203c5a44c_argParser* _self_, jule::Trait<_203c56316_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_20811a0ee:;
			{
				jule::Ptr<_208101613_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_208101613_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_20811a088:;
	};
	jule::Str _22513_data = _203c5ac44_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _203c56316_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._203c26649_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_20811b650:;
			{
				jule::Ptr<_2080e576c_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_2080e576c_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _20811ccc2_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _23370_s, jule::I32 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _21e6a4e03_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _203c56316_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._203c26649_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_20811c068:;
			{
				jule::Ptr<_2080e9540_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_2080e9540_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _208125cec_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _24171_s, jule::I32 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _21e6a4991_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _203c56316_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._203c26649_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_20811c0ce:;
			{
				jule::Ptr<_2080ecd07_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_2080ecd07_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _21e6ab3e3_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _203c56316_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._203c26649_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_20811c145:;
			{
				(*((*(_21735_flag)).cast_ptr<_208104dca_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_20811c002:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _203c5b20b_singleDash(_203c5a44c_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208130de5:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_203c56316_CommonFlag> _26321_flag = _203c58802_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _203c5ae86_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_208130de5:;
			++it;
			goto _iter_begin_208130de5;
		}
		_iter_end_208130de5:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _203c5b481_doubleDash(_203c5a44c_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_203c56316_CommonFlag> _27617_flag = _203c584e4_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _203c5ae86_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _203c5b65c_tryArg(_203c5a44c_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _203c5b481_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _203c5b20b_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*(_self_))._field_content = jule::alloc_for_append((*(_self_))._field_content,1);(*(_self_))._field_content.__push(_28413_arg);;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _203c5b838_parse(_203c5a44c_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _203c5b65c_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_208137eda:;
	}
	_iter_end_208137eda:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _203c5a44c_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203bd520c_ObjectCoder> static__203bd562a_New(jule::Ptr<_203214e13_IR>* _9224_ir, _203bd386a_SerializationInfo _9233_info) {
	jule::Ptr<_203bd520c_ObjectCoder> _9317_oc = jule::new_ptr<_203bd520c_ObjectCoder>(_203bd520c_ObjectCoder{._field_ir=(*(_9224_ir)), ._field_info=_9233_info, });;
	_9317_oc.get()._field_ec=static__203b2dac3_new(&(_9317_oc));
	_9317_oc.get()._field_sc=static__203a5a22a_new(&(_9317_oc));
	_9317_oc.get()._field_tc=static__203be3eeb_new(&(_9317_oc));
	_9317_oc.get()._field_dc=static__203b3d3eb_new(_9317_oc);
	return _9317_oc;;
}



inline void _203bd58a0_write(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Str _10425_s) {
	_self_.get()._field_Obj+=_10425_s;
}



inline void _203bd5a7b_addIndent(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	(_self_.get()._field_indentBuffer).append("\t", 1);
}



inline void _203bd5c57_doneIndent(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _203bd5e33_indent(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I32 _203bd6241_findAnyType(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_221453397_TypeKind>* _12336_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207eb7c49:;
		if (it != expr_end) {
			jule::I32 _12414_i = it - expr->begin();
			jule::Ptr<_221453397_TypeKind> _12421_at = *it;
			{
				if (_221453aa1_Equal(_12421_at, (*(_12336_t)))) {
					return _12414_i;;
				};
			}
			_iter_next_207eb7c49:;
			++it;
			_12414_i++;
			goto _iter_begin_207eb7c49;
		}
		_iter_end_207eb7c49:;
	};
	return -1LL;;
}



inline jule::I32 _203bd654e_pushAnyType(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_221453397_TypeKind> _13235_t) {
	if ((_2214562ce_Enum(_13235_t.ptr()) != nullptr)) {
		_13235_t=_2214562ce_Enum(_13235_t.ptr()).get()._field_Kind.get()._field_Kind;
	};
	jule::I32 _13617_i = _203bd6241_findAnyType(_self_, &(_13235_t));;
	if ((_13617_i != -1LL)) {
		return _13617_i;;
	};
	_13617_i=static_cast<jule::I32>(_self_.get()._field_anyTypeMap.len());
	_self_.get()._field_anyTypeMap = jule::alloc_for_append(_self_.get()._field_anyTypeMap,1);_self_.get()._field_anyTypeMap.__push(_13235_t);;
	jule::Str _14213_si = _21e6b5a18_Itoa(_13617_i);;
	if ((_221455d06_Sptr(_13235_t.ptr()) != nullptr)) {
		jule::Str _14417_elem_kind = _203be8d69_kind(_self_.get()._field_tc.ptr(), _221455d06_Sptr(_13235_t.ptr()).get()._field_Elem);;
		jule::Str _14517_kind = _203be4c33_asSptr(_self_.get()._field_tc.ptr(), _14417_elem_kind);;
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_14417_elem_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_14517_kind;
		(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _17117_comparable = _2214548a4_Comparable(_13235_t.ptr());;
		jule::Str _17217_kind = _203be8d69_kind(_self_.get()._field_tc.ptr(), _13235_t);;
		if (_17217_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_221453793_Str(_13235_t.ptr()));
		};
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_17217_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		if (_17117_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66);
			_self_.get()._field_anyObj+=_17217_kind;
			(_self_.get()._field_anyObj).append("*>(alloc) == *reinterpret_cast<", 31);
			_self_.get()._field_anyObj+=_17217_kind;
			(_self_.get()._field_anyObj).append("*>(other); }\n", 13);
		};
		(_self_.get()._field_anyObj).append("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76);
		if ((_22145606a_Ptr(_13235_t.ptr()) == nullptr)) {
			(_self_.get()._field_anyObj).append("const ", 6);
			_self_.get()._field_anyObj+=_17217_kind;
		} else {
			_self_.get()._field_anyObj+=_17217_kind;
			(_self_.get()._field_anyObj).append("* const", 7);
		};
		(_self_.get()._field_anyObj).append("*>(alloc)); }\n", 14);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_dealloc, ", 10);
		if (_17117_comparable) {
			(_self_.get()._field_anyObj).append(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append("_eq, ", 5);
		};
		(_self_.get()._field_anyObj).append(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_to_str};\n", 10);
		if (_17117_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_17217_kind;
			(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _13617_i;;
}



inline void _203bd67c4_pushResultIns(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211dc97d_FnIns>* _24038_f) {
	jule::Str _24113_s = _203bedb82_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_24038_f)).get()._field_Result));;
	jule::Bool _24217_ok = false;;
	_self_.get()._field_resultMap.lookup(_24113_s, nullptr, &(_24217_ok));
	if (_24217_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_24113_s]=false;
	jule::Str _24717_obj = jule::Str::alloc(0LL, 128LL);;
	(_24717_obj).append("struct ", 7);
	_24717_obj+=_24113_s;
	(_24717_obj).append(" {\n", 3);
	{
		auto expr = &(_221457731_Tup((*(_24038_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207ecbed3:;
		if (it != expr_end) {
			jule::I32 _25114_i = it - expr->begin();
			jule::Ptr<_221453397_TypeKind> _25121_t = *it;
			{
				(_24717_obj).append("\t", 1);
				_24717_obj+=_203be8d69_kind(_self_.get()._field_tc.ptr(), _25121_t);
				(_24717_obj).append(" ", 1);
				(_24717_obj).append("__jule_result_arg", 17);
				_24717_obj+=_21e6b5a18_Itoa(_25114_i);
				(_24717_obj).append(";\n", 2);
			}
			_iter_next_207ecbed3:;
			++it;
			_25114_i++;
			goto _iter_begin_207ecbed3;
		}
		_iter_end_207ecbed3:;
	};
	(_24717_obj).append("};\n", 3);
	_self_.get()._field_resultDecls = jule::alloc_for_append(_self_.get()._field_resultDecls,1);_self_.get()._field_resultDecls.__push(_24717_obj);;
}



inline void _203bd6a49_pushResult(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211d9ccc_Fn>* _26335_f) {
	if ((_2211da23e_IsVoid((*(_26335_f)).ptr()) || ((*(_26335_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _26717_n = (*(_26335_f)).get()._field_Instances.len();;
	if (((*(_26335_f)).get()._field_Generics.len() == 0LL)) {
		_26717_n=1LL;
	};
	{
		auto expr = (*(_26335_f)).get()._field_Instances.slice(0LL, _26717_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_207ed0932:;
		if (it != expr_end) {
			jule::Ptr<_2211dc97d_FnIns> _27121_ins = *it;
			{
				_203bd67c4_pushResultIns(_self_, &(_27121_ins));
			}
			_iter_next_207ed0932:;
			++it;
			goto _iter_begin_207ed0932;
		}
		_iter_end_207ed0932:;
	};
}



inline jule::I32 _203bd6e01_findTypeOffsetS(_203bd520c_ObjectCoder* _self_, jule::Ptr<_2211ebeed_Trait> _27630_t, jule::Ptr<_2211c76e3_StructIns> _27645_s) {
	if ((_27630_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207ed1955:;
		if (it != expr_end) {
			jule::Ptr<_203bd3d32_traitHash> *_28016_hash = it;
			{
				if ((((*(_28016_hash)).get()._field_t == _27630_t) && ((*(_28016_hash)).get()._field_s == _27645_s))) {
					return (*(_28016_hash)).get()._field_i;;
				};
			}
			_iter_next_207ed1955:;
			++it;
			goto _iter_begin_207ed1955;
		}
		_iter_end_207ed1955:;
	};
	return -1LL;;
}



inline jule::I32 _203bd72a8_findTypeOffset(_203bd520c_ObjectCoder* _self_, jule::Ptr<_2211ebeed_Trait> _28829_t, jule::Ptr<_221453397_TypeKind> _28844_k) {
	if ((_28829_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_2211c76e3_StructIns> _29217_s = nullptr;;
	if ((_221455d06_Sptr(_28844_k.ptr()) != nullptr)) {
		_28844_k=_221455d06_Sptr(_28844_k.ptr()).get()._field_Elem;
	};
	_29217_s=_221456ee4_Struct(_28844_k.ptr());
	if ((_29217_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I32>(_203bd6e01_findTypeOffsetS(_self_, _28829_t, _29217_s));;
}



inline void _203bd75c7_pushAndWriteMaskMapper(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211ebeed_Trait> _30346_t1, jule::Ptr<_2211ebeed_Trait> _30362_t2) {
	jule::Str _30417_ident = jule::Str("__jule_trait_offset_mapper_", 27);;
	_30417_ident+=_21e6b53db_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30362_t2))), 15LL);
	(_30417_ident).append("_to_", 4);
	_30417_ident+=_21e6b53db_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30346_t1))), 15LL);
	_203bd58a0_write(_self_, _30417_ident);
	{
		auto expr = &(_self_.get()._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207ed6e55:;
		if (it != expr_end) {
			_203bd41d9_traitCast _31116_m = *it;
			{
				if (((_31116_m._field_t1 == _30346_t1) && (_31116_m._field_t2 == _30362_t2))) {
					return;;
				};
			}
			_iter_next_207ed6e55:;
			++it;
			goto _iter_begin_207ed6e55;
		}
		_iter_end_207ed6e55:;
	};
	_self_.get()._field_traitCastMap = jule::alloc_for_append(_self_.get()._field_traitCastMap,1);_self_.get()._field_traitCastMap.__push(_203bd41d9_traitCast{._field_t1=_30346_t1, ._field_t2=_30362_t2});;
	;
	(_self_.get()._field_anyObj).append("jule::Int", 9);
	(_self_.get()._field_anyObj).append(" ", 1);
	_self_.get()._field_anyObj+=_30417_ident;
	(_self_.get()._field_anyObj).append("(const jule::Int offset) noexcept { ", 36);
	{
		auto expr = &(_30346_t1.get()._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207ed9287:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> _33021_s1 = *it;
			{
				{
					auto expr = &(_30362_t2.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207ed992a:;
					if (it != expr_end) {
						jule::Ptr<_2211c48cc_Struct> _33120_s2 = *it;
						{
							if ((_33021_s1 == _33120_s2)) {
								{
									auto expr = &(_33021_s1.get()._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_207eda684:;
									if (it != expr_end) {
										jule::Ptr<_2211c76e3_StructIns> _33333_s1i = *it;
										{
											jule::I32 _33429_i1 = _203bd6e01_findTypeOffsetS(_self_.ptr(), _30346_t1, _33333_s1i);;
											jule::I32 _33529_i2 = _203bd6e01_findTypeOffsetS(_self_.ptr(), _30362_t2, _33333_s1i);;
											(_self_.get()._field_anyObj).append("if (offset == ", 14);
											_self_.get()._field_anyObj+=_21e6b5a18_Itoa(_33529_i2);
											(_self_.get()._field_anyObj).append(") return ", 9);
											_self_.get()._field_anyObj+=_21e6b5a18_Itoa(_33429_i1);
											(_self_.get()._field_anyObj).append("; ", 2);
										}
										_iter_next_207eda684:;
										++it;
										goto _iter_begin_207eda684;
									}
									_iter_end_207eda684:;
								};
							};
						}
						_iter_next_207ed992a:;
						++it;
						goto _iter_begin_207ed992a;
					}
					_iter_end_207ed992a:;
				};
			}
			_iter_next_207ed9287:;
			++it;
			goto _iter_begin_207ed9287;
		}
		_iter_end_207ed9287:;
	};
	(_self_.get()._field_anyObj).append(" return ", 8);
	_self_.get()._field_anyObj+=_21e6b5a18_Itoa(0LL);
	(_self_.get()._field_anyObj).append("; }\n", 4);
}



inline void _203bd784c_locInfo(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_21da1aa0b_Token>* _35128_t) {
	jule::Str *_35214_loc = &((*(_35128_t)).get()._field_File.get()._field_Path);;
	if (_21b538b25_Production) {
		{
			
			if (_21d5d474b_HasPrefix((*(_35214_loc)), _21d71a19a_PathStdlib)) {
				_case_begin_207edde4b:;
				{
					_203bd58a0_write(_self_, _203b3b0a8_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35214_loc)).slice((_21d5e012a_Dir(_21d71a19a_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_21d5d474b_HasPrefix((*(_35214_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_207ede512:;
				{
					_203bd58a0_write(_self_, _203b3b0a8_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35214_loc)).slice((_21d5e012a_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_207eddaa5:;
				{
					_203bd58a0_write(_self_, _203b3b0a8_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35214_loc)))));
				}
			}
			_match_end_207edd9d9:;
		};
	} else {
		_203bd58a0_write(_self_, _203b3b0a8_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35214_loc)))));
	};
	_203bd58a0_write(_self_, jule::Str(":", 1));
	_203bd58a0_write(_self_, _21e6b5a18_Itoa((*(_35128_t)).get()._field_Row));
	_203bd58a0_write(_self_, jule::Str(":", 1));
	_203bd58a0_write(_self_, _21e6b5a18_Itoa((*(_35128_t)).get()._field_Column));
}



inline void _203bd7a28_head(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	_203bcb17b_Time _37813_time = static__203bcb720_Now();;
	_203bca9d8_AbsTime _37913_abs = _203bccd5e_Abs(&_37813_time);;
	_203bd58a0_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_203bd58a0_write(_self_, jule::Str("// JuleC version: ", 18));
	_203bd58a0_write(_self_, jule::Str("jule0.0.14", 10));
	_203bd58a0_write(_self_, jule::Str("\n", 1));
	_203bd58a0_write(_self_, jule::Str("// Date: ", 9));
	_203bd58a0_write(_self_, _21e6b53db_FmtUint(_37913_abs._field_Day, 10LL));
	_203bd58a0_write(_self_, jule::Str("/", 1));
	_203bd58a0_write(_self_, _21e6b53db_FmtUint(_37913_abs._field_Month, 10LL));
	_203bd58a0_write(_self_, jule::Str("/", 1));
	_203bd58a0_write(_self_, _21e6b53db_FmtUint(_37913_abs._field_Year, 10LL));
	_203bd58a0_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_203bd58a0_write(_self_, _self_.get()._field_info._field_Compiler);
	_203bd58a0_write(_self_, jule::Str(" ", 1));
	_203bd58a0_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_203bd58a0_write(_self_, jule::Str("\n\n", 2));
	if (_21b538b25_Production) {
		_203bd58a0_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_21b538482_RC))) {
		_203bd58a0_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_21b53885b_Safety))) {
		_203bd58a0_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_203bd7c04_links(_self_);
	_203bd58a0_write(_self_, jule::Str("\n\n#include \"", 12));
	_203bd58a0_write(_self_, _21d71a981_PathApi);
	_203bd58a0_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _203bd7c04_links(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207ee8560:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _41616_used = *it;
			{
				{
					
					if ((!(_41616_used.get()._field_CppLinked))) {
						_case_begin_207ee9099:;
						{
							goto _iter_next_207ee8560;
						}
					}
					else if (_21d667a87_IsStdHeaderPath(_41616_used.get()._field_Path)) {
						_case_begin_207ee9121:;
						{
							_203bd58a0_write(_self_, jule::Str("#include ", 9));
							_203bd58a0_write(_self_, _41616_used.get()._field_Path);
							_203bd58a0_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_21d667d40_IsValidHeaderExt(_21d5de767_Ext(_41616_used.get()._field_Path))) {
						_case_begin_207ee9198:;
						{
							_203bd58a0_write(_self_, jule::Str("#include \"", 10));
							_203bd58a0_write(_self_, _41616_used.get()._field_Path);
							_203bd58a0_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_207ee8e78:;
				};
			}
			_iter_next_207ee8560:;
			++it;
			goto _iter_begin_207ee8560;
		}
		_iter_end_207ee8560:;
	};
}



inline void _203bd7e79_prepareStructure(_203bd520c_ObjectCoder* _self_, jule::Ptr<_2211c48cc_Struct>* _43240_s) {
	{
		auto expr = &((*(_43240_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207eea8b4:;
		if (it != expr_end) {
			jule::Ptr<_2211c76e3_StructIns> _43321_ins = *it;
			{
				{
					auto expr = &(_43321_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207eebb18:;
					if (it != expr_end) {
						jule::Ptr<_2211d9ccc_Fn> _43425_m = *it;
						{
							if (_43425_m.get()._field_Statically) {
								goto _iter_next_207eebb18;
							};
							{
								auto expr = &(_43425_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_207eec872:;
								if (it != expr_end) {
									jule::Ptr<_2211dc97d_FnIns> _43829_mins = *it;
									{
										jule::Ptr<_2211dbaae_ParamIns> _43929_p = _43829_mins.get()._field_Params[0LL];;
										if ((!(_2211d8d31_IsRef(_43929_p.get()._field_Decl.ptr())))) {
											_43929_p.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_203be303e_customType>(_203be303e_customType{._field_kind=_203be5041_asPtr((*(_self_))._field_tc.ptr(), _203be8d69_kind((*(_self_))._field_tc.ptr(), _43929_p.get()._field_Kind))}), 25)});
										} else {
											_43929_p.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_203be303e_customType>(_203be303e_customType{._field_kind=_203be8d69_kind((*(_self_))._field_tc.ptr(), _43929_p.get()._field_Kind)}), 25)});
										};
									}
									_iter_next_207eec872:;
									++it;
									goto _iter_begin_207eec872;
								}
								_iter_end_207eec872:;
							};
						}
						_iter_next_207eebb18:;
						++it;
						goto _iter_begin_207eebb18;
					}
					_iter_end_207eebb18:;
				};
			}
			_iter_next_207eea8b4:;
			++it;
			goto _iter_begin_207eea8b4;
		}
		_iter_end_207eea8b4:;
	};
}



inline void _203bd8155_prepareStructures(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207eeba5d:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> _45921_s = *it;
			{
				if ((_45921_s.get()._field_Token != nullptr)) {
					_203bd7e79_prepareStructure(_self_.ptr(), &(_45921_s));
				};
			}
			_iter_next_207eeba5d:;
			++it;
			goto _iter_begin_207eeba5d;
		}
		_iter_end_207eeba5d:;
	};
}



inline void _203bd83ca_iterPackages(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_2212456d9_Package>*)> _46632_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207eeec09:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _46721_used = *it;
			{
				if ((!(_46721_used.get()._field_CppLinked))) {
					_46632_f(&(_46721_used.get()._field_Package));
				};
			}
			_iter_next_207eeec09:;
			++it;
			goto _iter_begin_207eeec09;
		}
		_iter_end_207eeec09:;
	};
	_46632_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _203bd85a6_buildTraitMap(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	_203bd83ca_iterPackages(_self_, jule::Fn<void(jule::Ptr<_2212456d9_Package>*)>([=](jule::Ptr<_2212456d9_Package>* _47635_pkg) mutable -> void {
		_203be1647_iterFiles(_47635_pkg, jule::Fn<void(jule::Ptr<_221421222_SymbolTable>*)>([=](jule::Ptr<_221421222_SymbolTable>* _47736_file) mutable -> void {
			{
				auto expr = &((*(_47736_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_2080042d5:;
				if (it != expr_end) {
					jule::Ptr<_2211ebeed_Trait> _47829_t = *it;
					{
						if ((_47829_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_47829_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_203bd3d32_traitHash>(_203bd3d32_traitHash{._field_t=_47829_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_2080042d5;
						};
						jule::I32 _49029_i = 0LL;;
						{
							auto expr = &(_47829_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_208004a77:;
							if (it != expr_end) {
								jule::Ptr<_2211c48cc_Struct> _49133_s = *it;
								{
									{
										auto expr = &(_49133_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_208006a35:;
										if (it != expr_end) {
											jule::Ptr<_2211c76e3_StructIns> _49237_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_203bd3d32_traitHash>(_203bd3d32_traitHash{._field_t=_47829_t, ._field_s=_49237_ins, ._field_i=_49029_i}));;
												(_49029_i)++;
											}
											_iter_next_208006a35:;
											++it;
											goto _iter_begin_208006a35;
										}
										_iter_end_208006a35:;
									};
								}
								_iter_next_208004a77:;
								++it;
								goto _iter_begin_208004a77;
							}
							_iter_end_208004a77:;
						};
						_203be234b_pushMethodsFromInherits(&(_47829_t), &(_47829_t));
					}
					_iter_next_2080042d5:;
					++it;
					goto _iter_begin_2080042d5;
				}
				_iter_end_2080042d5:;
			};
		}));
	}));
}



inline void _203bd8782_traitDecls(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	_203bd83ca_iterPackages(_self_, jule::Fn<void(jule::Ptr<_2212456d9_Package>*)>([=](jule::Ptr<_2212456d9_Package>* _51035_pkg) mutable -> void {
		_203be1647_iterFiles(_51035_pkg, jule::Fn<void(jule::Ptr<_221421222_SymbolTable>*)>([=](jule::Ptr<_221421222_SymbolTable>* _51136_file) mutable -> void {
			{
				auto expr = &((*(_51136_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_208008b03:;
				if (it != expr_end) {
					jule::Ptr<_2211ebeed_Trait> _51229_t = *it;
					{
						if ((_51229_t.get()._field_Token == nullptr)) {
							return;;
						};
						_203bd5e33_indent(_self_);
						_203bd58a0_write(_self_, jule::Str("struct ", 7));
						_203bd58a0_write(_self_, static__203b43225_traitDecl(_51229_t));
						_203bd58a0_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_208008b03:;
					++it;
					goto _iter_begin_208008b03;
				}
				_iter_end_208008b03:;
			};
		}));
	}));
}



inline void _203bd8a07_structurePlainDecl(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211c48cc_Struct>* _52543_s) {
	{
		auto expr = &((*(_52543_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208006727:;
		if (it != expr_end) {
			jule::Ptr<_2211c76e3_StructIns> _52621_ins = *it;
			{
				_203bd58a0_write(_self_, jule::Str("struct ", 7));
				_203bd58a0_write(_self_, static__203b43a0b_structureIns(&(_52621_ins)));
				_203bd58a0_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_208006727:;
			++it;
			goto _iter_begin_208006727;
		}
		_iter_end_208006727:;
	};
}



inline void _203bd8bd3_structurePlainDecls(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20800b474:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> _53421_s = *it;
			{
				if ((_53421_s.get()._field_Token != nullptr)) {
					_203bd8a07_structurePlainDecl(_self_, &(_53421_s));
				};
			}
			_iter_next_20800b474:;
			++it;
			goto _iter_begin_20800b474;
		}
		_iter_end_20800b474:;
	};
}



inline void _203bd8e58_fieldDecl(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211c6bed_FieldIns>* _54134_f) {
	_203bd58a0_write(_self_, _203be8d69_kind(_self_.get()._field_tc.ptr(), (*(_54134_f)).get()._field_Kind));
	_203bd58a0_write(_self_, jule::Str(" ", 1));
	_203bd58a0_write(_self_, static__203b43ca3_field(&((*(_54134_f)).get()._field_Decl)));
	if (((*(_54134_f)).get()._field_Default == nullptr)) {
		if (_203c00b95_shouldInitialized(&((*(_54134_f)).get()._field_Kind))) {
			_203bd58a0_write(_self_, jule::Str(" = ", 3));
			_203b3a6c3_initExpr(_self_.get()._field_ec, (*(_54134_f)).get()._field_Kind);
		};
	} else {
		_203bd58a0_write(_self_, jule::Str(" = ", 3));
		_203b316ca_possibleRefExpr(_self_.get()._field_ec, (*(_54134_f)).get()._field_Default.get()._field_Model);
	};
	_203bd58a0_write(_self_, jule::Str(";", 1));
}



inline void _203bd91cd_structureDestructor(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211c76e3_StructIns>* _55944_s) {
	;
	jule::Ptr<_2211d9ccc_Fn> _56213_disposeMethod = _2211c868e_FindMethod((*(_55944_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _56317_disposed = static__22126c59b_Dispose(_56213_disposeMethod);;
	if ((!(_56317_disposed))) {
		return;;
	};
	_203bd58a0_write(_self_, jule::Str("~", 1));
	_203bd58a0_write(_self_, static__203b43a0b_structureIns(_55944_s));
	_203bd58a0_write(_self_, jule::Str("(void) { ", 9));
	_203bd58a0_write(_self_, static__203b42bd6_func(&(_56213_disposeMethod)));
	_203bd58a0_write(_self_, jule::Str("(this); }", 9));
}



inline void _203bd9475_structureDeriveDefsDecls(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211c76e3_StructIns>* _57545_s) {
	if (_2211c6208_IsDerives((*(_57545_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_203bd5e33_indent(_self_);
		_203bd58a0_write(_self_, _203b3d709_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_57545_s)).get()._field_Decl)));
		_203bd58a0_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _203bd97a5_structureOperatorEq(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Str* _58340_ident, jule::Ptr<_2211c76e3_StructIns>* _58357_s) {
	if ((!((*(_58357_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_58357_s)).get()._field_Operators._field_Eq != nullptr)) {
		_203bd9e8c_structureOperator(_self_, _58340_ident, &((*(_58357_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_203bd5e33_indent(_self_);
	if (_221534e5c_Inline) {
		_203bd58a0_write(_self_, jule::Str("inline ", 7));
	};
	_203bd58a0_write(_self_, jule::Str("bool operator==(", 16));
	_203bd58a0_write(_self_, (*(_58340_ident)));
	_203bd58a0_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_58357_s)).get()._field_Fields.len() > 0LL)) {
		_203bd5a7b_addIndent(_self_);
		_203bd58a0_write(_self_, jule::Str("\n", 1));
		_203bd5e33_indent(_self_);
		_203bd58a0_write(_self_, jule::Str("return ", 7));
		_203bd5a7b_addIndent(_self_);
		jule::Bool _60621_writed = false;;
		{
			auto expr = &((*(_58357_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_208017d21:;
			if (it != expr_end) {
				jule::Ptr<_2211c6bed_FieldIns> _60725_f = *it;
				{
					jule::Ptr<_2211c76e3_StructIns> _60921_strct = _221456ee4_Struct(_60725_f.get()._field_Kind.ptr());;
					if ((((_60921_strct != nullptr) && (_60921_strct.get()._field_Decl != nullptr)) && _60921_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_208017d21;
					};
					if (_60621_writed) {
						_203bd58a0_write(_self_, jule::Str(" &&", 3));
					};
					_60621_writed=true;
					_203bd58a0_write(_self_, jule::Str("\n", 1));
					_203bd5e33_indent(_self_);
					_203bd58a0_write(_self_, jule::Str("this->", 6));
					jule::Str _62021_fIdent = static__203b43ca3_field(&(_60725_f.get()._field_Decl));;
					_203bd58a0_write(_self_, _62021_fIdent);
					_203bd58a0_write(_self_, jule::Str(" == _other.", 11));
					_203bd58a0_write(_self_, _62021_fIdent);
				}
				_iter_next_208017d21:;
				++it;
				goto _iter_begin_208017d21;
			}
			_iter_end_208017d21:;
		};
		_203bd5c57_doneIndent(_self_);
		if ((!(_60621_writed))) {
			_203bd58a0_write(_self_, jule::Str("true", 4));
		};
		_203bd58a0_write(_self_, jule::Str(";\n", 2));
		_203bd5c57_doneIndent(_self_);
		_203bd5e33_indent(_self_);
		_203bd58a0_write(_self_, jule::Str("}", 1));
	} else {
		_203bd58a0_write(_self_, jule::Str(" return true; }", 15));
	};
	_203bd58a0_write(_self_, jule::Str("\n\n", 2));
}



inline void _203bd9ac4_structureOperatorNotEq(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Str* _63943_ident, jule::Ptr<_2211c76e3_StructIns>* _63960_s) {
	if ((!((*(_63960_s)).get()._field_Comparable))) {
		return;;
	};
	_203bd5e33_indent(_self_);
	if (_221534e5c_Inline) {
		_203bd58a0_write(_self_, jule::Str("inline ", 7));
	};
	_203bd58a0_write(_self_, jule::Str("bool operator!=(", 16));
	_203bd58a0_write(_self_, (*(_63943_ident)));
	_203bd58a0_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _203bd9e8c_structureOperator(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Str* _65338_ident, jule::Ptr<_2211dc97d_FnIns>* _65355_f, jule::Str _65366_op) {
	if (((*(_65355_f)) == nullptr)) {
		return;;
	};
	jule::Bool _65813_unary = ((*(_65355_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _65913_assignment = _2211da23e_IsVoid((*(_65355_f)).get()._field_Decl.ptr());;
	_203bd5e33_indent(_self_);
	if (_221534e5c_Inline) {
		_203bd58a0_write(_self_, jule::Str("inline ", 7));
	};
	if (_65913_assignment) {
		_203bd58a0_write(_self_, (*(_65338_ident)));
		_203bd58a0_write(_self_, jule::Str("&", 1));
	} else {
		if ((_221455a92_Prim((*(_65355_f)).get()._field_Result.ptr()) == nullptr)) {
			_203bd58a0_write(_self_, (*(_65338_ident)));
		} else {
			_203bd58a0_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_203bd58a0_write(_self_, jule::Str(" operator", 9));
	_203bd58a0_write(_self_, _65366_op);
	_203bd58a0_write(_self_, jule::Str("(", 1));
	if ((!(_65813_unary))) {
		jule::Ptr<_2211dbaae_ParamIns> _68121_p = (*(_65355_f)).get()._field_Params[1LL];;
		_203bd58a0_write(_self_, _203be7d13_paramIns(_self_.get()._field_tc.ptr(), &(_68121_p)));
		_203bd58a0_write(_self_, jule::Str(" _other", 7));
	};
	_203bd58a0_write(_self_, jule::Str(") { ", 4));
	if ((!(_65913_assignment))) {
		_203bd58a0_write(_self_, jule::Str("return ", 7));
	};
	_203bd58a0_write(_self_, static__203b42e7d_funcIns(_65355_f));
	if ((!(_65813_unary))) {
		_203bd58a0_write(_self_, jule::Str("(this, _other); ", 16));
		if (_65913_assignment) {
			_203bd58a0_write(_self_, jule::Str("return *this; ", 14));
		};
		_203bd58a0_write(_self_, jule::Str("}", 1));
	} else {
		_203bd58a0_write(_self_, jule::Str("(this); }", 9));
	};
	_203bd58a0_write(_self_, jule::Str("\n\n", 2));
}



inline void _203bda212_structureOperators(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211c76e3_StructIns>* _70243_s) {
	jule::Str _70313_ident = static__203b43a0b_structureIns(_70243_s);;
	_203bd97a5_structureOperatorEq(_self_, &(_70313_ident), _70243_s);
	_203bd9ac4_structureOperatorNotEq(_self_, &(_70313_ident), _70243_s);
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_203bd9e8c_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _203bda487_structureInsDecl(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211c76e3_StructIns>* _74141_s) {
	if (((*(_74141_s)).get()._field_Methods.len() > 0LL)) {
		{
			auto expr = &((*(_74141_s)).get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_208032489:;
			if (it != expr_end) {
				jule::Ptr<_2211d9ccc_Fn> _74325_m = *it;
				{
					_203bd6a49_pushResult(_self_, &(_74325_m));
					_203bdb5ba_funcDecl(_self_, &(_74325_m), false);
				}
				_iter_next_208032489:;
				++it;
				goto _iter_begin_208032489;
			}
			_iter_end_208032489:;
		};
	};
	_203bd58a0_write(_self_, jule::Str("struct ", 7));
	jule::Str _75013_outIdent = static__203b43a0b_structureIns(_74141_s);;
	_203bd58a0_write(_self_, _75013_outIdent);
	_203bd58a0_write(_self_, jule::Str(" {\n", 3));
	_203bd5a7b_addIndent(_self_);
	{
		auto expr = &((*(_74141_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20803418e:;
		if (it != expr_end) {
			jule::Ptr<_2211c6bed_FieldIns> _75621_f = *it;
			{
				_203bd5e33_indent(_self_);
				_203bd8e58_fieldDecl(_self_, &(_75621_f));
				_203bd58a0_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_20803418e:;
			++it;
			goto _iter_begin_20803418e;
		}
		_iter_end_20803418e:;
	};
	_203bd5e33_indent(_self_);
	_203bd91cd_structureDestructor(_self_, _74141_s);
	_203bd58a0_write(_self_, jule::Str("\n\n", 2));
	_203bd5e33_indent(_self_);
	_203bd58a0_write(_self_, _75013_outIdent);
	_203bd58a0_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_203bd9475_structureDeriveDefsDecls(_self_, _74141_s);
	_203bda212_structureOperators(_self_, _74141_s);
	_203bd58a0_write(_self_, jule::Str("\n", 1));
	_203bd5c57_doneIndent(_self_);
	_203bd5e33_indent(_self_);
	_203bd58a0_write(_self_, jule::Str("};", 2));
}



inline void _203bda70c_structureDecl(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211c48cc_Struct>* _78138_s) {
	{
		auto expr = &((*(_78138_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208037538:;
		if (it != expr_end) {
			jule::Ptr<_2211c76e3_StructIns> _78221_ins = *it;
			{
				_203bda487_structureInsDecl(_self_, &(_78221_ins));
			}
			_iter_next_208037538:;
			++it;
			goto _iter_begin_208037538;
		}
		_iter_end_208037538:;
	};
}



inline void _203bda8d8_structureDecls(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208037c75:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> _78821_s = *it;
			{
				if ((_78821_s.get()._field_Token != nullptr)) {
					_203bda70c_structureDecl(_self_, &(_78821_s));
					_203bd58a0_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_208037c75:;
			++it;
			goto _iter_begin_208037c75;
		}
		_iter_end_208037c75:;
	};
}



inline void _203bdab5d_paramsDecls(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Slice<jule::Ptr<_2211dbaae_ParamIns>>* _79636_params) {
	if (((*(_79636_params)).len() == 0LL)) {
		_203bd58a0_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_203bd58a0_write(_self_, jule::Str("(", 1));
	{
		auto expr = _79636_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20803a1d9:;
		if (it != expr_end) {
			jule::I32 _80314_i = it - expr->begin();
			jule::Ptr<_2211dbaae_ParamIns> _80321_p = *it;
			{
				_203bd58a0_write(_self_, _203be7d13_paramIns(_self_.get()._field_tc.ptr(), &(_80321_p)));
				if ((((*(_79636_params)).len() - _80314_i) > 1LL)) {
					_203bd58a0_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_20803a1d9:;
			++it;
			_80314_i++;
			goto _iter_begin_20803a1d9;
		}
		_iter_end_20803a1d9:;
	};
	_203bd58a0_write(_self_, jule::Str(")", 1));
}



inline void _203bdae7c_funcHead(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211dc97d_FnIns>* _81333_f, jule::Bool _81344_ptr) {
	if ((((!(_81344_ptr)) && _221534e5c_Inline) && (!(_2211da717_IsEntryPoint((*(_81333_f)).get()._field_Decl.ptr()))))) {
		_203bd58a0_write(_self_, jule::Str("inline ", 7));
	};
	_203be8440_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _81333_f);
	if (_81344_ptr) {
		_203bd58a0_write(_self_, jule::Str("(*", 2));
		_203bd58a0_write(_self_, static__203b42e7d_funcIns(_81333_f));
		_203bd58a0_write(_self_, jule::Str(")", 1));
	} else {
		_203bd58a0_write(_self_, jule::Str(" ", 1));
		_203bd58a0_write(_self_, static__203b42e7d_funcIns(_81333_f));
	};
}



inline void _203bdb29b_funcDeclIns(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211dc97d_FnIns>* _82836_f, jule::Bool _82847_ptr) {
	_203bd5e33_indent(_self_);
	_203bdae7c_funcHead(_self_, _82836_f, _82847_ptr);
	_203bdab5d_paramsDecls(_self_, &((*(_82836_f)).get()._field_Params));
	_203bd58a0_write(_self_, jule::Str(";\n", 2));
}



inline void _203bdb5ba_funcDecl(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211d9ccc_Fn>* _83533_f, jule::Bool _83541_ptr) {
	{
		auto expr = &((*(_83533_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20804107a:;
		if (it != expr_end) {
			jule::Ptr<_2211dc97d_FnIns> _83621_c = *it;
			{
				_203bdb29b_funcDeclIns(_self_, &(_83621_c), _83541_ptr);
			}
			_iter_next_20804107a:;
			++it;
			goto _iter_begin_20804107a;
		}
		_iter_end_20804107a:;
	};
}



inline void _203bdb983_funcDeclTrait(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211ebeed_Trait>* _84138_t, jule::Ptr<_2211d9ccc_Fn>* _84154_f, jule::Bool _84162_ptr) {
	{
		auto expr = &((*(_84154_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2080421e1:;
		if (it != expr_end) {
			jule::Ptr<_2211dc97d_FnIns> _84221_c = *it;
			{
				jule::Ptr<_221453397_TypeKind> _84321_k = _84221_c.get()._field_Params[0LL].get()._field_Kind;;
				_84221_c.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>((*(_84138_t)), 2)});
				_203bdb29b_funcDeclIns(_self_, &(_84221_c), _84162_ptr);
				_84221_c.get()._field_Params[0LL].get()._field_Kind=_84321_k;
			}
			_iter_next_2080421e1:;
			++it;
			goto _iter_begin_2080421e1;
		}
		_iter_end_2080421e1:;
	};
}



inline void _203bdbb5e_funcDecls(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	_203bd83ca_iterPackages(_self_, jule::Fn<void(jule::Ptr<_2212456d9_Package>*)>([=](jule::Ptr<_2212456d9_Package>* _85135_pkg) mutable -> void {
		_203be1647_iterFiles(_85135_pkg, jule::Fn<void(jule::Ptr<_221421222_SymbolTable>*)>([=](jule::Ptr<_221421222_SymbolTable>* _85236_file) mutable -> void {
			{
				auto expr = &((*(_85236_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_20804602a:;
				if (it != expr_end) {
					jule::Ptr<_2211d9ccc_Fn> _85329_f = *it;
					{
						if (((!(_85329_f.get()._field_CppLinked)) && (_85329_f.get()._field_Token != nullptr))) {
							_203bd6a49_pushResult(_self_, &(_85329_f));
							_203bdb5ba_funcDecl(_self_, &(_85329_f), false);
						};
					}
					_iter_next_20804602a:;
					++it;
					goto _iter_begin_20804602a;
				}
				_iter_end_20804602a:;
			};
		}));
	}));
}



inline void _203bdbe7d_traitDataTypeMethods(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211ebeed_Trait>* _86345_owner, jule::Ptr<_2211ebeed_Trait>* _86365_t) {
	{
		auto expr = &((*(_86365_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208045b95:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _86421_m = *it;
			{
				jule::Ptr<_2211dc97d_FnIns> _86521_ins = _86421_m.get()._field_Instances[0LL];;
				jule::Ptr<_2211dbaae_ParamIns> _86621_p = _86521_ins.get()._field_Params[0LL];;
				_86621_p.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>((*(_86365_t)), 2)});
				{
					auto expr = _86521_ins.get()._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_20804914e:;
					if (it != expr_end) {
						jule::I32 _87018_i = it - expr.begin();
						jule::Ptr<_2211dbaae_ParamIns> _87025_ip = *it;
						{
							if (_21da1d547_IsAnonIdent(_87025_ip.get()._field_Decl.get()._field_Ident)) {
								_87025_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _21e6b5a18_Itoa(_87018_i));
							};
						}
						_iter_next_20804914e:;
						++it;
						_87018_i++;
						goto _iter_begin_20804914e;
					}
					_iter_end_20804914e:;
				};
				if ((!(_21b538b25_Production))) {
					jule::Ptr<_2211dbaae_ParamIns> _87625_lp = _86521_ins.get()._field_Params[(_86521_ins.get()._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ _87625_lp.get()._field_Kind.get()._field_Kind };
						
						if (_match_expr.type_is(true, 25)) {
							_case_begin_20804c8e4:;
							{
								goto _match_end_20804b30a;
							}
						}
						else {
							_case_begin_20804b44d:;
							{
								_86521_ins.get()._field_Params = jule::alloc_for_append(_86521_ins.get()._field_Params,1);_86521_ins.get()._field_Params.__push(jule::new_ptr<_2211dbaae_ParamIns>(_2211dbaae_ParamIns{._field_Decl=jule::new_ptr<_2211d8490_Param>(_2211d8490_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_203be303e_customType>(_203be303e_customType{._field_kind=jule::Str("const char*", 11)}), 25)})}));;
							}
						}
						_match_end_20804b30a:;
					};
				};
				_203bd6a49_pushResult(_self_, &(_86421_m));
				_203bdb983_funcDeclTrait(_self_, _86345_owner, &(_86421_m), true);
			}
			_iter_next_208045b95:;
			++it;
			goto _iter_begin_208045b95;
		}
		_iter_end_208045b95:;
	};
}



inline void _203bdc159_traitDataTypes(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	_203bd83ca_iterPackages(_self_, jule::Fn<void(jule::Ptr<_2212456d9_Package>*)>([=](jule::Ptr<_2212456d9_Package>* _89935_pkg) mutable -> void {
		_203be1647_iterFiles(_89935_pkg, jule::Fn<void(jule::Ptr<_221421222_SymbolTable>*)>([=](jule::Ptr<_221421222_SymbolTable>* _90036_file) mutable -> void {
			{
				auto expr = &((*(_90036_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_20804e62c:;
				if (it != expr_end) {
					jule::Ptr<_2211ebeed_Trait> _90129_t = *it;
					{
						if ((_90129_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_90129_t.get()._field_Methods.len() == 0LL)) {
							goto _iter_next_20804e62c;
						};
						_203bd58a0_write(_self_, jule::Str("struct ", 7));
						_203bd58a0_write(_self_, static__203b43225_traitDecl(_90129_t));
						_203bd58a0_write(_self_, jule::Str("MptrData", 8));
						_203bd58a0_write(_self_, jule::Str(" {\n", 3));
						_203bd5a7b_addIndent(_self_);
						_203bdbe7d_traitDataTypeMethods(_self_, &(_90129_t), &(_90129_t));
						_203bd5c57_doneIndent(_self_);
						_203bd5e33_indent(_self_);
						_203bd58a0_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_20804e62c:;
					++it;
					goto _iter_begin_20804e62c;
				}
				_iter_end_20804e62c:;
			};
		}));
	}));
}



inline void _203bdc3ce_paramIns(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211dbaae_ParamIns>* _92233_p) {
	_203bd58a0_write(_self_, _203be7d13_paramIns(_self_.get()._field_tc.ptr(), _92233_p));
	_203bd58a0_write(_self_, jule::Str(" ", 1));
	_203bd58a0_write(_self_, static__203b434bc_param(&((*(_92233_p)).get()._field_Decl)));
}



inline void _203bdc654_paramsIns(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Slice<jule::Ptr<_2211dbaae_ParamIns>>* _92834_params) {
	if (((*(_92834_params)).len() == 0LL)) {
		_203bd58a0_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_203bd58a0_write(_self_, jule::Str("(", 1));
	{
		auto expr = _92834_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208053b4d:;
		if (it != expr_end) {
			jule::I32 _93414_i = it - expr->begin();
			jule::Ptr<_2211dbaae_ParamIns> _93421_p = *it;
			{
				_203bdc3ce_paramIns(_self_, &(_93421_p));
				if ((((*(_92834_params)).len() - _93414_i) > 1LL)) {
					_203bd58a0_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_208053b4d:;
			++it;
			_93414_i++;
			goto _iter_begin_208053b4d;
		}
		_iter_end_208053b4d:;
	};
	_203bd58a0_write(_self_, jule::Str(")", 1));
}



inline void _203bdc973_varInitExpr(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_22126b17c_Var>* _94336_v, jule::Fn<void(void)> _94345_init) {
	if ((*(_94336_v)).get()._field_Statically) {
		_203bd58a0_write(_self_, jule::Str("static ", 7));
	};
	_203bd58a0_write(_self_, _203be8d69_kind(_self_.get()._field_tc.ptr(), (*(_94336_v)).get()._field_Kind.get()._field_Kind));
	_203bd58a0_write(_self_, jule::Str(" ", 1));
	if ((*(_94336_v)).get()._field_Reference) {
		_203bd58a0_write(_self_, jule::Str("*", 1));
	};
	_203bd58a0_write(_self_, static__203b4404a_var((*(_94336_v))));
	if ((_94345_init != nullptr)) {
		_203bd58a0_write(_self_, jule::Str(" = ", 3));
		_94345_init();
	};
	_203bd58a0_write(_self_, jule::Str(";", 1));
}



inline void _203bdcbe8_var(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_22126b17c_Var> _96127_v) {
	if (_21da1d2a0_IsIgnoreIdent(_96127_v.get()._field_Ident)) {
		return;;
	};
	if (((_96127_v.get()._field_Value != nullptr) && (_96127_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_96127_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_96127_v.get()._field_Reference) {
				_203bdc973_varInitExpr(_self_, &(_96127_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_203bd58a0_write(_self_, jule::Str("&(", 2));
					_203b3a44d_model(_self_.get()._field_ec, _96127_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_203bd58a0_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_203bdc973_varInitExpr(_self_, &(_96127_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_203b316ca_possibleRefExpr(_self_.get()._field_ec, _96127_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_203bdc973_varInitExpr(_self_, &(_96127_v), nullptr);
		return;;
	};
	if (_96127_v.get()._field_Reference) {
		_203bdc973_varInitExpr(_self_, &(_96127_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_203bd58a0_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_203c00b95_shouldInitialized(&(_96127_v.get()._field_Kind.get()._field_Kind))) {
		_203bdc973_varInitExpr(_self_, &(_96127_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_203b3a6c3_initExpr(_self_.get()._field_ec, _96127_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_203bdc973_varInitExpr(_self_, &(_96127_v), nullptr);
}



inline void _203bdce6d_funcIns(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211dc97d_FnIns>* _99232_f) {
	_203bdae7c_funcHead(_self_, _99232_f, false);
	_203bdc654_paramsIns(_self_, &((*(_99232_f)).get()._field_Params));
	_203bd58a0_write(_self_, jule::Str(" ", 1));
	_203a60450_funcScope(_self_.get()._field_sc, (*(_99232_f)));
	if (((*(_99232_f)).get()._field_Scope != nullptr)) {
		_203bd58a0_write(_self_, jule::Str("\n\n", 2));
	};
}



inline void _203bdd1e3_func(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211d9ccc_Fn>* _100229_f) {
	{
		auto expr = &((*(_100229_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2080613db:;
		if (it != expr_end) {
			jule::Ptr<_2211dc97d_FnIns> _100321_ins = *it;
			{
				_203bdce6d_funcIns(_self_, &(_100321_ins));
			}
			_iter_next_2080613db:;
			++it;
			goto _iter_begin_2080613db;
		}
		_iter_end_2080613db:;
	};
}



inline void _203bdd512_funcTrait(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_203bd3d32_traitHash>* _100834_hash, jule::Ptr<_2211d9ccc_Fn>* _100857_f) {
	jule::Str _100913_ident = (*(_100857_f)).get()._field_Ident;;
	{
		auto expr = &((*(_100857_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20806273e:;
		if (it != expr_end) {
			jule::Ptr<_2211dc97d_FnIns> _101021_ins = *it;
			{
				_101021_ins.get()._field_Scope=nullptr;
				(*(_100857_f)).get()._field_Ident=_100913_ident;
				((*(_100857_f)).get()._field_Ident).append("_", 1);
				(*(_100857_f)).get()._field_Ident+=(*(_100834_hash)).get()._field_t.get()._field_Ident;
				((*(_100857_f)).get()._field_Ident).append("_", 1);
				(*(_100857_f)).get()._field_Ident+=_21e6b5a18_Itoa((*(_100834_hash)).get()._field_i);
				jule::Ptr<_221453397_TypeKind> _101921_k = _101021_ins.get()._field_Params[0LL].get()._field_Kind;;
				_101021_ins.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>((*(_100834_hash)).get()._field_t, 2)});
				_203bdce6d_funcIns(_self_, &(_101021_ins));
				_101021_ins.get()._field_Params[0LL].get()._field_Kind=_101921_k;
			}
			_iter_next_20806273e:;
			++it;
			goto _iter_begin_20806273e;
		}
		_iter_end_20806273e:;
	};
	(*(_100857_f)).get()._field_Ident=_100913_ident;
}



inline void _203bdd831_traitWrapper(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211d9ccc_Fn>* _102737_m, jule::Ptr<_203bd3d32_traitHash>* _102750_hash) {
	_203bdd512_funcTrait(_self_, _102750_hash, _102737_m);
	if (((*(_102750_hash)).get()._field_s == nullptr)) {
		if (_21b538b25_Production) {
			_203bd58a0_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_203bd58a0_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _103913_ptr = (!(_2211d8d31_IsRef((*(_102737_m)).get()._field_Params[0LL].ptr())));;
	jule::Ptr<_2211d9ccc_Fn> _104117_sm = _2211c868e_FindMethod((*(_102750_hash)).get()._field_s.ptr(), (*(_102737_m)).get()._field_Ident, false);;
	if (((_104117_sm == nullptr) || (_104117_sm.get()._field_Instances.len() == 0LL))) {
		return;;
	};
	_203bd5a7b_addIndent(_self_);
	_203bd58a0_write(_self_, jule::Str("{\n", 2));
	_203bd5e33_indent(_self_);
	if ((_104117_sm.get()._field_Exceptional || (!(_2211da23e_IsVoid(_104117_sm.ptr()))))) {
		_203bd58a0_write(_self_, jule::Str("return ", 7));
	};
	_203bd58a0_write(_self_, static__203b42bd6_func(&(_104117_sm)));
	_203bd58a0_write(_self_, jule::Str("(", 1));
	if (_103913_ptr) {
		_203bd58a0_write(_self_, jule::Str("_self_.safe_ptr<", 16));
		_203bd58a0_write(_self_, _203be73d9_structureIns(_self_.get()._field_tc.ptr(), (*(_102750_hash)).get()._field_s));
		_203bd58a0_write(_self_, jule::Str(">(", 2));
		if ((!(_21b538b25_Production))) {
			_203bd58a0_write(_self_, jule::Str("_00___file", 10));
		};
		_203bd58a0_write(_self_, jule::Str(")", 1));
	} else {
		_203bd58a0_write(_self_, jule::Str("_self_.data.as<", 15));
		_203bd58a0_write(_self_, _203be70cb_structure(_self_.get()._field_tc.ptr(), _104117_sm.get()._field_Owner));
		_203bd58a0_write(_self_, jule::Str(">()", 3));
	};
	{
		auto expr = (*(_102737_m)).get()._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_20806c309:;
		if (it != expr_end) {
			jule::Ptr<_2211d8490_Param> _106716_mp = *it;
			{
				_203bd58a0_write(_self_, jule::Str(", ", 2));
				_203bd58a0_write(_self_, static__203b434bc_param(&(_106716_mp)));
			}
			_iter_next_20806c309:;
			++it;
			goto _iter_begin_20806c309;
		}
		_iter_end_20806c309:;
	};
	_203bd58a0_write(_self_, jule::Str(");\n}\n", 5));
	_203bd5c57_doneIndent(_self_);
}



inline void _203bdda0c_traitWrappers(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20806e2ea:;
		if (it != expr_end) {
			jule::Ptr<_203bd3d32_traitHash> _107621_hash = *it;
			{
				{
					auto expr = &(_107621_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20806eb8b:;
					if (it != expr_end) {
						jule::Ptr<_2211d9ccc_Fn> _107725_m = *it;
						{
							_203bdd831_traitWrapper(_self_, &(_107725_m), &(_107621_hash));
						}
						_iter_next_20806eb8b:;
						++it;
						goto _iter_begin_20806eb8b;
					}
					_iter_end_20806eb8b:;
				};
			}
			_iter_next_20806e2ea:;
			++it;
			goto _iter_begin_20806e2ea;
		}
		_iter_end_20806e2ea:;
	};
}



inline void _203bddd2b_traitDataMethods(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211ebeed_Trait>* _108341_t, jule::Ptr<_203bd3d32_traitHash>* _108353_hash) {
	{
		auto expr = &((*(_108341_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20807043e:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _108421_m = *it;
			{
				jule::Str _108517_mIdent = static__203b42bd6_func(&(_108421_m));;
				_203bd5e33_indent(_self_);
				_203bd58a0_write(_self_, jule::Str(".", 1));
				_203bd58a0_write(_self_, _108517_mIdent);
				_203bd58a0_write(_self_, jule::Str("=", 1));
				_203bd58a0_write(_self_, _108517_mIdent);
				_203bd58a0_write(_self_, jule::Str("_", 1));
				_203bd58a0_write(_self_, (*(_108353_hash)).get()._field_t.get()._field_Ident);
				_203bd58a0_write(_self_, jule::Str("_", 1));
				_203bd58a0_write(_self_, _21e6b5a18_Itoa((*(_108353_hash)).get()._field_i));
				_203bd58a0_write(_self_, jule::Str(",\n", 2));
			}
			_iter_next_20807043e:;
			++it;
			goto _iter_begin_20807043e;
		}
		_iter_end_20807043e:;
	};
}



inline void _203bde14a_traitData(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_203bd3d32_traitHash>* _109934_hash, jule::Ptr<_2211ebeed_Trait>* _109957_old) {
	if (((*(_109934_hash)).get()._field_t.get()._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _110313_ident = static__203b43225_traitDecl((*(_109934_hash)).get()._field_t);;
	if (((*(_109934_hash)).get()._field_t != (*(_109957_old)))) {
		if (((*(_109957_old)) != nullptr)) {
			_203bd5c57_doneIndent(_self_);
			_203bd5e33_indent(_self_);
			_203bd58a0_write(_self_, jule::Str("};\n", 3));
		};
		_203bd58a0_write(_self_, jule::Str("static ", 7));
		_203bd58a0_write(_self_, _110313_ident);
		_203bd58a0_write(_self_, jule::Str("MptrData ", 9));
		_203bd58a0_write(_self_, _110313_ident);
		_203bd58a0_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
		(*(_109957_old))=(*(_109934_hash)).get()._field_t;
		_203bd5a7b_addIndent(_self_);
	};
	_203bd5e33_indent(_self_);
	_203bd58a0_write(_self_, jule::Str("{\n", 2));
	_203bd5a7b_addIndent(_self_);
	_203bddd2b_traitDataMethods(_self_, &((*(_109934_hash)).get()._field_t), _109934_hash);
	_203bd5c57_doneIndent(_self_);
	_203bd5e33_indent(_self_);
	_203bd58a0_write(_self_, jule::Str("},\n", 3));
}



inline void _203bde326_traitDatas(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	jule::Ptr<_2211ebeed_Trait> _112817_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20807814a:;
		if (it != expr_end) {
			jule::Ptr<_203bd3d32_traitHash> _112921_hash = *it;
			{
				_203bde14a_traitData(_self_, &(_112921_hash), &(_112817_old));
			}
			_iter_next_20807814a:;
			++it;
			goto _iter_begin_20807814a;
		}
		_iter_end_20807814a:;
	};
	if ((_112817_old != nullptr)) {
		_203bd5c57_doneIndent(_self_);
		_203bd5e33_indent(_self_);
		_203bd58a0_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _203bde502_globals(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208079b1e:;
		if (it != expr_end) {
			jule::Ptr<_22126b17c_Var> _114021_v = *it;
			{
				_203bd58a0_write(_self_, _203be8d69_kind(_self_.get()._field_tc.ptr(), _114021_v.get()._field_Kind.get()._field_Kind));
				_203bd58a0_write(_self_, jule::Str(" ", 1));
				_203bd58a0_write(_self_, static__203b4404a_var(_114021_v));
				_203bd58a0_write(_self_, jule::Str(" = ", 3));
				_203b3a44d_model(_self_.get()._field_ec, _114021_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_203bd58a0_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_208079b1e:;
			++it;
			goto _iter_begin_208079b1e;
		}
		_iter_end_208079b1e:;
	};
}



inline void _203bde6cd_decls(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	_203bd8782_traitDecls(_self_);
	_203bd8bd3_structurePlainDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I32>(_self_.get()._field_Obj.len());
	_203bda8d8_structureDecls(_self_);
	_203bdbb5e_funcDecls(_self_);
	_203bd58a0_write(_self_, jule::Str("\n\n", 2));
	_203bdc159_traitDataTypes(_self_);
	_203bd58a0_write(_self_, jule::Str("\n\n", 2));
	_203bdda0c_traitWrappers(_self_);
	_203bd58a0_write(_self_, jule::Str("\n\n", 2));
	_203bde326_traitDatas(_self_);
	_203bd58a0_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I32>(_self_.get()._field_Obj.len());
	_203bde502_globals(_self_);
}



inline void _203bde953_structureMethods(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211c76e3_StructIns>* _116741_s) {
	{
		auto expr = &((*(_116741_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20807ebbd:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _116821_f = *it;
			{
				_203bdd1e3_func(_self_, &(_116821_f));
				_203bd58a0_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_20807ebbd:;
			++it;
			goto _iter_begin_20807ebbd;
		}
		_iter_end_20807ebbd:;
	};
}



inline void _203bdebc8_structureDeriveDefs(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211c76e3_StructIns>* _117444_s) {
	if (_2211c6208_IsDerives((*(_117444_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_203bd58a0_write(_self_, _203b3da17_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_117444_s)).get()._field_Decl)));
		_203bd58a0_write(_self_, jule::Str("{\n", 2));
		_203bd5a7b_addIndent(_self_);
		_203bd5e33_indent(_self_);
		_203bd58a0_write(_self_, _203be73d9_structureIns(_self_.get()._field_tc.ptr(), (*(_117444_s))));
		_203bd58a0_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_117444_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_208082819:;
			if (it != expr_end) {
				jule::Ptr<_2211c6bed_FieldIns> _118220_f = *it;
				{
					jule::Str _118321_ident = static__203b43ca3_field(&(_118220_f.get()._field_Decl));;
					_203bd5e33_indent(_self_);
					_203bd58a0_write(_self_, jule::Str("clone.", 6));
					_203bd58a0_write(_self_, _118321_ident);
					_203bd58a0_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_203bd58a0_write(_self_, _118321_ident);
					_203bd58a0_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_208082819:;
				++it;
				goto _iter_begin_208082819;
			}
			_iter_end_208082819:;
		};
		_203bd5e33_indent(_self_);
		_203bd58a0_write(_self_, jule::Str("return clone;\n", 14));
		_203bd5c57_doneIndent(_self_);
		_203bd58a0_write(_self_, jule::Str("}", 1));
	};
}



inline void _203bdee4d_structureOstream(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211c76e3_StructIns>* _119841_s) {
	_203bd5e33_indent(_self_);
	_203bd58a0_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_203bd58a0_write(_self_, static__203b43a0b_structureIns(_119841_s));
	_203bd58a0_write(_self_, jule::Str(" _Src) {\n", 9));
	_203bd5a7b_addIndent(_self_);
	_203bd5e33_indent(_self_);
	jule::Ptr<_2211d9ccc_Fn> _120617_fts = _2211c868e_FindMethod((*(_119841_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__22126c843_Str(_120617_fts)) {
		_203bd58a0_write(_self_, jule::Str("_Stream << ", 11));
		_203bd58a0_write(_self_, static__203b42bd6_func(&(_120617_fts)));
		_203bd58a0_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_203bd58a0_write(_self_, jule::Str("_Stream << \"", 12));
		_203bd58a0_write(_self_, (*(_119841_s)).get()._field_Decl.get()._field_Ident);
		_203bd58a0_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_119841_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_208087eb2:;
			if (it != expr_end) {
				jule::I32 _121618_i = it - expr->begin();
				jule::Ptr<_2211c6bed_FieldIns> _121625_f = *it;
				{
					_203bd5e33_indent(_self_);
					_203bd58a0_write(_self_, jule::Str("_Stream << \"", 12));
					_203bd58a0_write(_self_, _121625_f.get()._field_Decl.get()._field_Ident);
					_203bd58a0_write(_self_, jule::Str(":", 1));
					jule::Ptr<_2211c76e3_StructIns> _122321_strct = _221456ee4_Struct(_121625_f.get()._field_Kind.ptr());;
					if ((((_122321_strct != nullptr) && (_122321_strct.get()._field_Decl != nullptr)) && _122321_strct.get()._field_Decl.get()._field_CppLinked)) {
						_203bd58a0_write(_self_, jule::Str(" cpp.", 5));
						_203bd58a0_write(_self_, static__203b43ca3_field(&(_121625_f.get()._field_Decl)));
						_203bd58a0_write(_self_, jule::Str("\"", 1));
					} else {
						_203bd58a0_write(_self_, jule::Str("\" << _Src.", 10));
						_203bd58a0_write(_self_, static__203b43ca3_field(&(_121625_f.get()._field_Decl)));
					};
					if (((_121618_i + 1LL) < (*(_119841_s)).get()._field_Fields.len())) {
						_203bd58a0_write(_self_, jule::Str(" << \", \"", 8));
					};
					_203bd58a0_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_208087eb2:;
				++it;
				_121618_i++;
				goto _iter_begin_208087eb2;
			}
			_iter_end_208087eb2:;
		};
		_203bd5e33_indent(_self_);
		_203bd58a0_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_203bd5e33_indent(_self_);
	_203bd58a0_write(_self_, jule::Str("return _Stream;\n", 16));
	_203bd5c57_doneIndent(_self_);
	_203bd58a0_write(_self_, jule::Str("}", 1));
}



inline void _203be01c3_structureIns(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211c76e3_StructIns>* _124937_s) {
	_203bde953_structureMethods(_self_, _124937_s);
	_203bd58a0_write(_self_, jule::Str("\n\n", 2));
	_203bdebc8_structureDeriveDefs(_self_, _124937_s);
	_203bd58a0_write(_self_, jule::Str("\n\n", 2));
	_203bdee4d_structureOstream(_self_, _124937_s);
}



inline void _203be0448_structure(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2211c48cc_Struct>* _125734_s) {
	{
		auto expr = &((*(_125734_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2080906a1:;
		if (it != expr_end) {
			jule::Ptr<_2211c76e3_StructIns> _125821_ins = *it;
			{
				_203be01c3_structureIns(_self_, &(_125821_ins));
				_203bd58a0_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_2080906a1:;
			++it;
			goto _iter_begin_2080906a1;
		}
		_iter_end_2080906a1:;
	};
}



inline void _203be0624_structures(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20809177e:;
		if (it != expr_end) {
			jule::Ptr<_2211c48cc_Struct> _126521_s = *it;
			{
				if ((_126521_s.get()._field_Token != nullptr)) {
					_203be0448_structure(_self_, &(_126521_s));
					_203bd58a0_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_20809177e:;
			++it;
			goto _iter_begin_20809177e;
		}
		_iter_end_20809177e:;
	};
}



inline void _203be0800_funcs(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	_203bd83ca_iterPackages(_self_, jule::Fn<void(jule::Ptr<_2212456d9_Package>*)>([=](jule::Ptr<_2212456d9_Package>* _127435_pkg) mutable -> void {
		_203be1647_iterFiles(_127435_pkg, jule::Fn<void(jule::Ptr<_221421222_SymbolTable>*)>([=](jule::Ptr<_221421222_SymbolTable>* _127536_file) mutable -> void {
			{
				auto expr = &((*(_127536_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_208094771:;
				if (it != expr_end) {
					jule::Ptr<_2211d9ccc_Fn> _127629_f = *it;
					{
						if (((!(_21b5381b8_Test)) && _203c008ed_hasDirective(&(_127629_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_208094771;
						};
						if (((!(_127629_f.get()._field_CppLinked)) && (_127629_f.get()._field_Token != nullptr))) {
							_203bdd1e3_func(_self_, &(_127629_f));
							_203bd58a0_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_208094771:;
					++it;
					goto _iter_begin_208094771;
				}
				_iter_end_208094771:;
			};
		}));
	}));
}



inline void _203be0a75_pushInit(jule::Ptr<_203bd520c_ObjectCoder> _self_, jule::Ptr<_2212456d9_Package>* _128933_pkg) {
	_203be1647_iterFiles(_128933_pkg, jule::Fn<void(jule::Ptr<_221421222_SymbolTable>*)>([=](jule::Ptr<_221421222_SymbolTable>* _129032_file) mutable -> void {
		{
			auto expr = &((*(_129032_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_208096c3a:;
			if (it != expr_end) {
				jule::Ptr<_2211d9ccc_Fn> _129120_f = *it;
				{
					if (_129120_f.get()._field_Ident.equal("init", 4)) {
						_203bd5e33_indent(_self_);
						_203bd58a0_write(_self_, static__203b42bd6_func(&(_129120_f)));
						_203bd58a0_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_208096c3a:;
				++it;
				goto _iter_begin_208096c3a;
			}
			_iter_end_208096c3a:;
		};
	}));
}



inline void _203be0c51_initCaller(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	_203bd58a0_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_203bd5a7b_addIndent(_self_);
	_203bd83ca_iterPackages(_self_, jule::Fn<void(jule::Ptr<_2212456d9_Package>*)>([=](jule::Ptr<_2212456d9_Package>* _130435_pkg) mutable -> void {
		_203be0a75_pushInit(_self_, _130435_pkg);
	}));
	_203bd5c57_doneIndent(_self_);
	_203bd58a0_write(_self_, jule::Str("\n}", 2));
}



inline void _203be0e2c_end(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	_203bd58a0_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_21b5381b8_Test) {
		_203bd58a0_write(_self_, jule::Str("test_point();", 13));
	} else {
		_203bd58a0_write(_self_, jule::Str("entry_point();", 14));
	};
	_203bd58a0_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _203be1108_serializeHead(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	_203bd8155_prepareStructures(_self_);
	_203bd85a6_buildTraitMap(_self_);
	_203bd7a28_head(_self_);
	_203bd58a0_write(_self_, jule::Str("\n", 1));
	_203bde6cd_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _133921_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_headPos);;
		{
			auto expr = &(_self_.get()._field_resultDecls);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20809c6be:;
			if (it != expr_end) {
				jule::Str _134020_decl = *it;
				{
					_133921_head+=_134020_decl;
					_self_.get()._field_declPos+=_134020_decl.len();
				}
				_iter_next_20809c6be:;
				++it;
				goto _iter_begin_20809c6be;
			}
			_iter_end_20809c6be:;
		};
		_133921_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_133921_head;
	};
	_203bd58a0_write(_self_, jule::Str("\n", 1));
	_203be0624_structures(_self_);
	_203be0800_funcs(_self_);
	_203be0c51_initCaller(_self_);
	_203bd58a0_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _135521_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_declPos);;
		_135521_head+=_self_.get()._field_anyObj;
		_135521_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_135521_head;
	};
}



inline void _203be12d4_Serialize(jule::Ptr<_203bd520c_ObjectCoder> _self_) {
	_203be1108_serializeHead(_self_);
	_203be0e2c_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _203bd520c_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20331045e_ObjectDeadCode> static__203310937_new(jule::Ptr<_203214e13_IR>* _3424_ir) {
	return jule::new_ptr<_20331045e_ObjectDeadCode>(_20331045e_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _207a1835a_isLive(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Ptr<_2211ebeed_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_2211ebeed_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_207a1a0d7:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_207a19ceb:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a1a7be:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_207a1a7be:;
			++it;
			_5213_i++;
			goto _iter_begin_207a1a7be;
		}
		_iter_end_207a1a7be:;
	};
	return false;;
}

inline jule::Bool _207a1d1b7_isLive(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Ptr<_2211dc97d_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_2211dc97d_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_207a20296:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_207a201db:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a20a6b:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_207a20a6b:;
			++it;
			_5213_i++;
			goto _iter_begin_207a20a6b;
		}
		_iter_end_207a20a6b:;
	};
	return false;;
}

inline jule::Bool _207a251be_isLive(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Ptr<_2211c76e3_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_2211c76e3_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_207a288ba:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_207a28645:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a28997:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_207a28997:;
			++it;
			_5213_i++;
			goto _iter_begin_207a28997;
		}
		_iter_end_207a28997:;
	};
	return false;;
}

inline jule::Bool _207a2b1b4_isLive(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Ptr<_22126b17c_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_22126b17c_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_207a2cc32:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_207a2cb11:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a2d491:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_207a2d491:;
			++it;
			_5213_i++;
			goto _iter_begin_207a2d491;
		}
		_iter_end_207a2d491:;
	};
	return false;;
}



inline void _207a186ac_pushLive(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Ptr<_2211ebeed_Trait> _6035_t) {
	{
		
{
			_case_begin_207a1c1b6:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_207a1bd64:;
	};
}

inline void _207a1dae1_pushLive(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Ptr<_2211dc97d_FnIns> _6035_t) {
	{
		
{
			_case_begin_207a22ae5:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_207a22870:;
	};
}

inline void _207a24c4b_pushLive(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Ptr<_2211c76e3_StructIns> _6035_t) {
	{
		
{
			_case_begin_207a26445:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_207a26159:;
	};
}

inline void _207a2b516_pushLive(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Ptr<_22126b17c_Var> _6035_t) {
	{
		
{
			_case_begin_207a30152:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_207a30075:;
	};
}



inline void _203342ae0_setReferencesAsLive(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Ptr<_2211e08d7_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _7717_i = 0LL;;
	for (; (_7717_i < _2211e0ec0_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _2211e12cd_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_207a16e5d:;
					{
						jule::Ptr<_2211ebeed_Trait> _8225_t = _7921_ref.cast_ptr<_2211ebeed_Trait>(&__jule_any_type10);;
						if (_207a1835a_isLive(_self_, &(_8225_t))) {
							goto _iter_next_207a1648a;
						};
						_207a186ac_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_207a1a37e:;
							if (it != expr_end) {
								jule::Ptr<_2211d9ccc_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_207a18c1d:;
										if (it != expr_end) {
											jule::Ptr<_2211dc97d_FnIns> _8833_mins = *it;
											{
												if (_207a1d1b7_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_207a18c1d;
												};
												_207a1dae1_pushLive(_self_, _8833_mins);
												_203342ae0_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_207a18c1d:;
											++it;
											goto _iter_begin_207a18c1d;
										}
										_iter_end_207a18c1d:;
									};
								}
								_iter_next_207a1a37e:;
								++it;
								goto _iter_begin_207a1a37e;
							}
							_iter_end_207a1a37e:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_207a16ec4:;
					{
						jule::Ptr<_2211dc97d_FnIns> _9725_f = _7921_ref.cast_ptr<_2211dc97d_FnIns>(&__jule_any_type7);;
						if (_207a1d1b7_isLive(_self_, &(_9725_f))) {
							goto _match_end_207a170e5;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_207a251be_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_207a24c4b_pushLive(_self_, _9725_f.get()._field_Owner);
								_203342ae0_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_207a1dae1_pushLive(_self_, _9725_f);
						_203342ae0_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_207a17205:;
					{
						jule::Ptr<_22126b17c_Var> _11025_v = _7921_ref.cast_ptr<_22126b17c_Var>(&__jule_any_type8);;
						if (_207a2b1b4_isLive(_self_, &(_11025_v))) {
							goto _match_end_207a170e5;
						};
						_207a2b516_pushLive(_self_, _11025_v);
						_203342ae0_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_207a1726b:;
					{
						jule::Ptr<_2211c76e3_StructIns> _11725_s = _7921_ref.cast_ptr<_2211c76e3_StructIns>(&__jule_any_type9);;
						if (_207a251be_isLive(_self_, &(_11725_s))) {
							goto _match_end_207a170e5;
						};
						_207a24c4b_pushLive(_self_, _11725_s);
						_203342ae0_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_207a3271a:;
							if (it != expr_end) {
								jule::Ptr<_2211d9ccc_Fn> _12329_ins = *it;
								{
									{
										auto expr = &(_12329_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_207a336e9:;
										if (it != expr_end) {
											jule::Ptr<_2211dc97d_FnIns> _12433_mins = *it;
											{
												if (_207a1d1b7_isLive(_self_, &(_12433_mins))) {
													goto _iter_next_207a336e9;
												};
												_207a1dae1_pushLive(_self_, _12433_mins);
												_203342ae0_setReferencesAsLive(_self_, &(_12433_mins.get()._field_Refers));
											}
											_iter_next_207a336e9:;
											++it;
											goto _iter_begin_207a336e9;
										}
										_iter_end_207a336e9:;
									};
								}
								_iter_next_207a3271a:;
								++it;
								goto _iter_begin_207a3271a;
							}
							_iter_end_207a3271a:;
						};
					}
				}
				_match_end_207a170e5:;
			};
		}
	_iter_next_207a1648a:;
	}
	_iter_end_207a1648a:;;
}



inline void _203342d65_inits(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Ptr<_2212456d9_Package>* _13630_pkg) {
	{
		auto expr = &((*(_13630_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a16820:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _13721_file = *it;
			{
				{
					auto expr = &(_13721_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_207a35b2a:;
					if (it != expr_end) {
						jule::Ptr<_2211d9ccc_Fn> _13825_f = *it;
						{
							if (_13825_f.get()._field_Ident.equal("init", 4)) {
								jule::Ptr<_2211dc97d_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_203342ae0_setReferencesAsLive(_self_, &(_14029_ins.get()._field_Refers));
							};
						}
						_iter_next_207a35b2a:;
						++it;
						goto _iter_begin_207a35b2a;
					}
					_iter_end_207a35b2a:;
				};
			}
			_iter_next_207a16820:;
			++it;
			goto _iter_begin_207a16820;
		}
		_iter_end_207a16820:;
	};
}



inline void _2033430da_collectLivePackage(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Ptr<_2212456d9_Package>* _14843_pkg) {
	_203342d65_inits(_self_, _14843_pkg);
	if (_21b5381b8_Test) {
		{
			auto expr = &((*(_14843_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_207a37da2:;
			if (it != expr_end) {
				jule::Ptr<_221421222_SymbolTable> _15425_file = *it;
				{
					{
						auto expr = &(_15425_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_207a386bb:;
						if (it != expr_end) {
							jule::Ptr<_2211d9ccc_Fn> _15529_f = *it;
							{
								if (_2033450ed_hasDirective(&(_15529_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_2211dc97d_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_203342ae0_setReferencesAsLive(_self_, &(_15733_ins.get()._field_Refers));
								};
							}
							_iter_next_207a386bb:;
							++it;
							goto _iter_begin_207a386bb;
						}
						_iter_end_207a386bb:;
					};
				}
				_iter_next_207a37da2:;
				++it;
				goto _iter_begin_207a37da2;
			}
			_iter_end_207a37da2:;
		};
	};
}



inline void _2033432b6_collectLive(jule::Ptr<_20331045e_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a36224:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_2033430da_collectLivePackage(_self_, &(_16721_used.get()._field_Package));
				};
			}
			_iter_next_207a36224:;
			++it;
			goto _iter_begin_207a36224;
		}
		_iter_end_207a36224:;
	};
	_2033430da_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_2211d9ccc_Fn> _17517_main = _221246b6e_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_2211dc97d_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_203342ae0_setReferencesAsLive(_self_, &(_17617_ins.get()._field_Refers));
}



inline void _20334353b_removeDeadGlobals(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_22126b17c_Var>>* _18142_vars) {
	jule::I32 _18217_i = 0LL;;
	while ((_18217_i < (*(_18142_vars)).len())) {
		{
			jule::Ptr<_22126b17c_Var> _18417_v = (*(_18142_vars))[_18217_i];;
			if (_207a2b1b4_isLive(_self_, &(_18417_v))) {
				(_18217_i)++;
				goto _iter_next_207a3ce84;
			};
			(*(_18142_vars))=jule::append((*(_18142_vars)).slice(0LL, _18217_i),(*(_18142_vars)).slice((_18217_i + 1LL)));
		}
	_iter_next_207a3ce84:;
	}
	_iter_end_207a3ce84:;;
}



inline void _2033437b1_removeDeadFns(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_2211d9ccc_Fn>>* _19338_funcs) {
	jule::I32 _19417_i = 0LL;;
	while ((_19417_i < (*(_19338_funcs)).len())) {
		{
			jule::Ptr<_2211d9ccc_Fn> _19621_f = (*(_19338_funcs))[_19417_i];;
			jule::I32 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_2211dc97d_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_207a1d1b7_isLive(_self_, &(_19921_ins))) {
						(_19721_j)++;
						goto _iter_next_2079085e1;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL, _19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_2079085e1:;
			}
			_iter_end_2079085e1:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				(*(_19338_funcs))=jule::append((*(_19338_funcs)).slice(0LL, _19417_i),(*(_19338_funcs)).slice((_19417_i + 1LL)));
				goto _iter_next_207907766;
			};
			(_19417_i)++;
		}
	_iter_next_207907766:;
	}
	_iter_end_207907766:;;
}



inline void _203343a36_removeDeadStructs(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_2211c48cc_Struct>>* _21442_structs) {
	jule::I32 _21517_i = 0LL;;
	while ((_21517_i < (*(_21442_structs)).len())) {
		{
			jule::Ptr<_2211c48cc_Struct> _21721_s = (*(_21442_structs))[_21517_i];;
			jule::I32 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_2211c76e3_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_2033437b1_removeDeadFns(_self_, &(_22025_ins.get()._field_Methods));
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _207a251be_isLive(_self_, &(_22025_ins)))) {
						(_21821_j)++;
						goto _iter_next_20790c617;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL, _21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_20790c617:;
			}
			_iter_end_20790c617:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				(*(_21442_structs))=jule::append((*(_21442_structs)).slice(0LL, _21517_i),(*(_21442_structs)).slice((_21517_i + 1LL)));
				goto _iter_next_20790b4e5;
			};
			(_21517_i)++;
		}
	_iter_next_20790b4e5:;
	}
	_iter_end_20790b4e5:;;
}



inline void _203343cab_removeDeadTraits(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_2211ebeed_Trait>>* _23641_traits) {
	jule::I32 _23717_i = 0LL;;
	while ((_23717_i < (*(_23641_traits)).len())) {
		{
			jule::Ptr<_2211ebeed_Trait> _23921_t = (*(_23641_traits))[_23717_i];;
			if ((!(_207a1835a_isLive(_self_, &(_23921_t))))) {
				(*(_23641_traits))=jule::append((*(_23641_traits)).slice(0LL, _23717_i),(*(_23641_traits)).slice((_23717_i + 1LL)));
				goto _iter_next_20790ec68;
			};
			jule::I32 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_2211c48cc_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_2079119c3;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL, _24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_2079119c3:;
			}
			_iter_end_2079119c3:;;
			(_23717_i)++;
		}
	_iter_next_20790ec68:;
	}
	_iter_end_20790ec68:;;
}



inline void _203344031_removeDeadsFile(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Ptr<_221421222_SymbolTable>* _25740_file) {
	_2033437b1_removeDeadFns(_self_, &((*(_25740_file)).get()._field_Funcs));
	_203343a36_removeDeadStructs(_self_, &((*(_25740_file)).get()._field_Structs));
	_203343cab_removeDeadTraits(_self_, &((*(_25740_file)).get()._field_Traits));
	_20334353b_removeDeadGlobals(_self_, &((*(_25740_file)).get()._field_Vars));
}



inline void _2033442a6_removeDeadsPackage(jule::Ptr<_20331045e_ObjectDeadCode> _self_, jule::Ptr<_2212456d9_Package>* _26443_pkg) {
	{
		auto expr = &((*(_26443_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20791609e:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _26521_file = *it;
			{
				_203344031_removeDeadsFile(_self_, &(_26521_file));
			}
			_iter_next_20791609e:;
			++it;
			goto _iter_begin_20791609e;
		}
		_iter_end_20791609e:;
	};
}



inline void _203344482_removeDeads(jule::Ptr<_20331045e_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20791670e:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_2033442a6_removeDeadsPackage(_self_, &(_27121_used.get()._field_Package));
				};
			}
			_iter_next_20791670e:;
			++it;
			goto _iter_begin_20791670e;
		}
		_iter_end_20791670e:;
	};
	_2033442a6_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _20334465d_elimanate(jule::Ptr<_20331045e_ObjectDeadCode> _self_) {
	_2033432b6_collectLive(_self_);
	_203344482_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _20331045e_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_203214e13_IR__jule_tuple_s_21d6755de_Log static__203215397_Build(jule::Str _2721_path, jule::I32 _2732_flags) {
	__jule_tuple_x_203214e13_IR__jule_tuple_s_21d6755de_Log __jule_func_result;
	jule::Ptr<_2032126a2_JuleImporter> _2817_importer = static__203212ad1_New(_203216bb2_buildCompileInfo());;
	jule::Slice<jule::Ptr<_22117005e_Ast>> _2918_files;;
	jule::Slice<_21d6755de_Log> _2929_logs;;
	({
		__jule_tuple_sx_22117005e_Ast__jule_tuple_s_21d6755de_Log __jule_assign_result = _203213e45_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_2212456d9_Package> _3918_pkg;;
	({
		__jule_tuple_x_2212456d9_Package__jule_tuple_s_21d6755de_Log __jule_assign_result = _221472ebb_AnalyzePackage(_2918_files, jule::Trait<_22123eded_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_203214e13_IR> _4417_ir = jule::new_ptr<_203214e13_IR>(_203214e13_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_203212d45_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_2032169b4_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _2032157e8_appendStructs(_203214e13_IR* _self_, jule::Ptr<_2212456d9_Package>* _5633_p, jule::Slice<jule::Ptr<_2211c48cc_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079d0c6d:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2079d15a9:;
					if (it != expr_end) {
						jule::Ptr<_2211c48cc_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								(*(_5657_buffer)) = jule::alloc_for_append((*(_5657_buffer)),1);(*(_5657_buffer)).__push(_5825_s);;
							};
						}
						_iter_next_2079d15a9:;
						++it;
						goto _iter_begin_2079d15a9;
					}
					_iter_end_2079d15a9:;
				};
			}
			_iter_next_2079d0c6d:;
			++it;
			goto _iter_begin_2079d0c6d;
		}
		_iter_end_2079d0c6d:;
	};
}



inline jule::Slice<jule::Ptr<_2211c48cc_Struct>> _203215a5c_GetAllStructures(_203214e13_IR* _self_) {
	jule::Slice<jule::Ptr<_2211c48cc_Struct>> _6917_buffer = nullptr;;
	_2032157e8_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079d1455:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_2032157e8_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_2079d1455:;
			++it;
			goto _iter_begin_2079d1455;
		}
		_iter_end_2079d1455:;
	};
	return _6917_buffer;;
}



inline void _203215d7b_appendGlobals(_203214e13_IR* _self_, jule::Ptr<_2212456d9_Package>* _7933_p, jule::Slice<jule::Ptr<_22126b17c_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079d3a84:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2079d438c:;
					if (it != expr_end) {
						jule::Ptr<_22126b17c_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								(*(_7957_buffer)) = jule::alloc_for_append((*(_7957_buffer)),1);(*(_7957_buffer)).__push(_8125_v);;
							};
						}
						_iter_next_2079d438c:;
						++it;
						goto _iter_begin_2079d438c;
					}
					_iter_end_2079d438c:;
				};
			}
			_iter_next_2079d3a84:;
			++it;
			goto _iter_begin_2079d3a84;
		}
		_iter_end_2079d3a84:;
	};
}



inline jule::Slice<jule::Ptr<_22126b17c_Var>> _2032160e0_GetAllGlobals(_203214e13_IR* _self_) {
	jule::Slice<jule::Ptr<_22126b17c_Var>> _9217_buffer = nullptr;;
	_203215d7b_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079d4a74:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_203215d7b_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_2079d4a74:;
			++it;
			goto _iter_begin_2079d4a74;
		}
		_iter_end_2079d4a74:;
	};
	return _9217_buffer;;
}



inline void _2032162bb_Order(_203214e13_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_203215a5c_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_2032160e0_GetAllGlobals(_self_);
	static__20321808c_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__20321829b_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _203214e13_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2211c7a9a_Str(_2211c76e3_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*(_self_))._field_Decl.get()._field_Ident;
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		(_25017_kind).append("[", 1);
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_205bbbd7e:;
			if (it != expr_end) {
				jule::Ptr<_221451b15_InsGeneric> *_25420_g = it;
				{
					_25017_kind+=_221453793_Str((*(_25420_g)).get()._field_Kind.ptr());
					(_25017_kind).append(",", 1);
				}
				_iter_next_205bbbd7e:;
				++it;
				goto _iter_begin_205bbbd7e;
			}
			_iter_end_205bbbd7e:;
		};
		(_25017_kind).mut_slice(0LL, (_25017_kind.len() - 1LL));;
		(_25017_kind).append("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _2211c7da8_Equal(jule::Ptr<_2211c76e3_StructIns> _self_, jule::Ptr<_221453397_TypeKind> _26521_other) {
	jule::Ptr<_2211c76e3_StructIns> _26613_s = _221456ee4_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I32 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_221453aa1_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_205bc0448:;
	}
	_iter_end_205bc0448:;;
	return true;;
}



inline jule::Bool _2211c82d7_Same(_2211c76e3_StructIns* _self_, jule::Ptr<_2211c76e3_StructIns> _29319_s) {
	if ((((*(_self_))._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bc27d0:;
		if (it != expr_end) {
			jule::I32 _29713_i = it - expr->begin();
			jule::Ptr<_221451b15_InsGeneric> *_29716_g = it;
			{
				jule::Ptr<_221451b15_InsGeneric> _29817_g2 = _29319_s.get()._field_Generics[_29713_i];;
				if ((((*(_29716_g)).get()._field_Kind.get()._field_CppIdent != _29817_g2.get()._field_Kind.get()._field_CppIdent) || (!(_221453aa1_Equal((*(_29716_g)).get()._field_Kind, _29817_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_205bc27d0:;
			++it;
			_29713_i++;
			goto _iter_begin_205bc27d0;
		}
		_iter_end_205bc27d0:;
	};
	return true;;
}



inline jule::Ptr<_2211d9ccc_Fn> _2211c868e_FindMethod(_2211c76e3_StructIns* _self_, jule::Str _30829_ident, jule::Bool _30841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bc4ace:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _30921_f = *it;
			{
				if (((_30921_f.get()._field_Statically == _30841_statically) && (_30921_f.get()._field_Ident == _30829_ident))) {
					return _30921_f;;
				};
			}
			_iter_next_205bc4ace:;
			++it;
			goto _iter_begin_205bc4ace;
		}
		_iter_end_205bc4ace:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211c6bed_FieldIns> _2211c899c_FindField(_2211c76e3_StructIns* _self_, jule::Str _31928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bc5c9a:;
		if (it != expr_end) {
			jule::Ptr<_2211c6bed_FieldIns> _32021_f = *it;
			{
				if ((_32021_f.get()._field_Decl.get()._field_Ident == _31928_ident)) {
					return _32021_f;;
				};
			}
			_iter_next_205bc5c9a:;
			++it;
			goto _iter_begin_205bc5c9a;
		}
		_iter_end_205bc5c9a:;
	};
	return nullptr;;
}



inline jule::Ptr<_22126b17c_Var> _2211c8caa_FindStatic(_2211c76e3_StructIns* _self_, jule::Str _33029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205bc631c:;
		if (it != expr_end) {
			jule::Ptr<_22126b17c_Var> _33121_v = *it;
			{
				if ((_33121_v.get()._field_Ident == _33029_ident)) {
					return _33121_v;;
				};
			}
			_iter_next_205bc631c:;
			++it;
			goto _iter_begin_205bc631c;
		}
		_iter_end_205bc631c:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _2211c76e3_StructIns _Src) {
	_Stream << _2211c7a9a_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_21d7131b5_Cmd> static__21d713616_New(jule::Str _2619_path) {
	return jule::new_ptr<_21d7131b5_Cmd>(_21d7131b5_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _21d7137e2_Spawn(_21d7131b5_Cmd* _self_) {
	({
		auto except = _21d71731d_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _21d7139bd_Kill(_21d7131b5_Cmd* _self_) {
	({
		auto except = _21d7174e9_kill(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _21d713c32_Wait(_21d7131b5_Cmd* _self_) {
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(({
		auto except = _21d71775d_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I32>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _21d71731d_spawn(_21d7131b5_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:42:13"));;
	};
	STARTUPINFOW _4417_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4517_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4417_startupInfo)), static_cast<jule::U32>(sizeof(_4417_startupInfo)));
		ZeroMemory((&(_4517_processInfo)), static_cast<jule::U32>(sizeof(_4517_processInfo)));
	};
	_4417_startupInfo.cb=static_cast<jule::U32>(sizeof(_4417_startupInfo));
	jule::Slice<jule::Str> _5117_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5117_args[0LL]=(*(_self_))._field_path;
	_5117_args=jule::append(_5117_args,(*(_self_))._field_Args);
	jule::Slice<jule::U16> _5413_argv = _21c4990b2_Utf16FromStr(_21d717d68_makeCmdLine(_5117_args));;
	jule::Slice<jule::U16> _5513_env = ({
		auto except = _21d718220_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5617_envp = (&(_5513_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5617_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_5413_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5617_envp, nullptr, (&(_4417_startupInfo)), (&(_4517_processInfo))) == 0LL)) {
			return jule::VoidExceptional(jule::Any(_21d71940d_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4517_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4517_processInfo.hThread;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _21d7174e9_kill(_21d7131b5_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:73:13"));;
	};
	if (TerminateProcess((*(_self_))._field_attrs._field_hProcess, 0LL)) {
		(*(_self_))._field_attrs._field_hProcess=nullptr;
		(*(_self_))._field_attrs._field_hThread=nullptr;
		return jule::VoidExceptional();;
	};
	return jule::VoidExceptional(jule::Any(-1LL, &__jule_any_type0));
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _21d71775d_wait(_21d7131b5_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:85:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8817_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8817_exitCode)));
		_21c4c6e7a_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess))));
		_21c4c6e7a_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread))));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(static_cast<jule::I32>(_8817_exitCode)));;
}







std::ostream &operator<<(std::ostream &_Stream, _21d7131b5_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _21c498215_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL));;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _21c4984ac_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((55296LL + ((_7819_r >> 10LL) & 1023LL)));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((56320LL + (_7819_r & 1023LL)));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _21c4987cb_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I32 _8813_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c6a0c7:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_8813_n)++;
				};
			}
			_iter_next_203c6a0c7:;
			++it;
			goto _iter_begin_203c6a0c7;
		}
		_iter_end_203c6a0c7:;
	};
	jule::Slice<jule::U16> _9513_a = jule::Slice<jule::U16>::alloc(_8813_n, _8813_n, 0);;
	_8813_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c6a6b0:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_203c6c074:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>((*(_9712_v))));
							(_8813_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_203c6be42:;
						{
							jule::I32 _10518_r1 = 0;;
							jule::I32 _10522_r2 = 0;;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _21c4984ac_EncodeRune((*(_9712_v)));
								_10518_r1 = __jule_assign_result.__jule_result_arg0;
								_10522_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>(_10518_r1));
							_9513_a[(_8813_n + 1LL)]=static_cast<jule::U16>(static_cast<jule::U16>(_10522_r2));
							_8813_n+=2LL;
						}
					}
					else {
						_case_begin_203c6ba9b:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(65533LLU);
							(_8813_n)++;
						}
					}
					_match_end_203c6b9d0:;
				};
			}
			_iter_next_203c6a6b0:;
			++it;
			goto _iter_begin_203c6a6b0;
		}
		_iter_end_203c6a6b0:;
	};
	return _9513_a.slice(0LL, _8813_n);;
}



inline jule::Slice<jule::I32> _21c498a73_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I32 _12113_n = 0LL;;
	jule::I32 _12213_i = 0LL;;
	for (; (_12213_i < _11911_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11911_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_203c71b06:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_12213_i + 1LL)])) && (_11911_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_203c711cc:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_21c498215_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)), static_cast<jule::I32>(static_cast<jule::I32>(_11911_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_203c716b6:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_203c71650:;
			};
			(_12113_n)++;
		}
	_iter_next_203c70231:;
	}
	_iter_end_203c70231:;;
	return _12013_a.slice(0LL, _12113_n);;
}



inline jule::Slice<jule::U16> _21c498d81_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_203c74ce6:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14929_r))}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_203c74d5c:;
			{
				jule::I32 _15614_r1 = 0;;
				jule::I32 _15618_r2 = 0;;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _21c4984ac_EncodeRune(_14929_r);
					_15614_r1 = __jule_assign_result.__jule_result_arg0;
					_15618_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));;
			}
		}
		_match_end_203c70de1:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _21c4990b2_Utf16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL, _209_runes.len(), 0);;
	{
		auto expr = &(_209_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c80241:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_203c80241;
				};
				_2113_buff=_21c498d81_AppendRune(_2113_buff, (*(_2212_r)));
			}
			_iter_next_203c80241:;
			++it;
			goto _iter_begin_203c80241;
		}
		_iter_end_203c80241:;
	};
	return _21c498d81_AppendRune(_2113_buff, 0LL);;
}



inline jule::Str _21c49936a_Utf16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _3813_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c82573:;
		if (it != expr_end) {
			jule::I32 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					_3813_codePage=_3813_codePage.slice(0LL, _399_i);
					goto _iter_end_203c82573;
				};
			}
			_iter_next_203c82573:;
			++it;
			_399_i++;
			goto _iter_begin_203c82573;
		}
		_iter_end_203c82573:;
	};
	return static_cast<jule::Str>(_21c498a73_Decode(_3813_codePage));;
}



inline jule::Str _21c499612_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage = nullptr;;
	jule::I32 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5023_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_21c498a73_Decode(_5513_codePage));;
			};
			_5513_codePage = jule::alloc_for_append(_5513_codePage,1);_5513_codePage.__push(_5813_r);;
		}
	_iter_next_203c88469:;
	}
	_iter_end_203c88469:;;
	return jule::Str();;
}



inline jule::I32 _21b5d27e5_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _21c4c6bd3_GetStdHandle(jule::Uintptr _6517_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_6517_stdh))));;
}



inline jule::Bool _21c4c6e7a_CloseHandle(jule::Uintptr _6623_stdh) {
	return CloseHandle(((void*)(_6623_stdh)));;
}



inline jule::I32 _21c4c72bb_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat) {
	return static_cast<jule::I32>(_wstat(((wchar_t*)(_6917_path)), _6933_stat));;
}



inline jule::I32 _21c4c76a6_Wopen(jule::U16* _7417_path, jule::I32 _7429_flag, jule::I32 _7440_mode) {
	return static_cast<jule::I32>(_wopen(((wchar_t*)((&(_7417_path[0LL])))), _7429_flag, _7440_mode));;
}



inline jule::U32 _21c4c78a4_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());;
}



inline jule::U32 _21c4c7be5_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_8331_bufflen, ((wchar_t*)(_8349_buff))));;
}



inline jule::Bool _21c4c8234_DeleteFile(jule::U16* _9422_path) {
	return DeleteFileW(((wchar_t*)(_9422_path)));;
}



inline jule::Bool _21c4c84cb_CreateDirectory(jule::U16* _9927_path) {
	return CreateDirectoryW(((wchar_t*)(_9927_path)), nullptr);;
}



inline jule::Bool _21c4c8773_RemoveDirectory(jule::U16* _10427_path) {
	return RemoveDirectoryW(((wchar_t*)(_10427_path)));;
}



inline jule::U32 _21c4c8c07_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1105_buff, jule::U16** _11017_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10927_path)), _10939_bufflen, ((wchar_t*)(_1105_buff)), ((wchar_t**)(_11017_fname))));;
}



inline jule::Bool _21c4c9048_GetConsoleMode(jule::Uintptr _11519_handle, jule::I32* _11540_mode) {
	return GetConsoleMode(((HANDLE)(_11519_handle)), ((DWORD*)((&((*(_11540_mode)))))));;
}



inline jule::Bool _21c4c960e_SetConsoleMode(jule::Uintptr _12019_handle, jule::I32 _12035_mode) {
	return SetConsoleMode(((HANDLE)(_12019_handle)), static_cast<DWORD>(_12035_mode));;
}



inline jule::Bool _21c4c9b09_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::I32 _12554_toWrite, jule::I32* _12610_written, void* _12624_reserved) {
	return WriteConsoleW(((HANDLE)(_12524_handle)), ((void*)(_12540_buffer)), static_cast<DWORD>(_12554_toWrite), ((DWORD*)((*(_12610_written)))), _12624_reserved);;
}



inline jule::Bool _21c4ca08d_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::I32 _13357_toRead, jule::I32* _13410_readed) {
	return ReadConsoleW(((HANDLE)(_13323_handle)), ((void*)(_13343_buffer)), static_cast<DWORD>(_13357_toRead), ((DWORD*)((&((*(_13410_readed)))))), nullptr);;
}



inline jule::Uintptr _21c4ca5cc_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14525_path)), _14541_data))));;
}



inline jule::I32 _21c4ca91d_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data) {
	return static_cast<jule::I32>(FindNextFileW(((HANDLE)(_15024_h)), _15039_data));;
}



inline jule::I32 _21c4cabb5_FindClose(jule::Uintptr _15514_h) {
	return static_cast<jule::I32>(FindClose(((HANDLE)(_15514_h))));;
}



inline jule::I32 _21c4cc6de_Seek(jule::I32 _159_handle, jule::I32 _1522_offset, jule::I32 _1535_origin) {
	return static_cast<jule::I32>(lseek(_159_handle, _1522_offset, _1535_origin));;
}



inline jule::I32 _21c4ccac9_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return static_cast<jule::I32>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I32 _21c4cce4d_Close(jule::I32 _2510_handle) {
	return static_cast<jule::I32>(close(_2510_handle));;
}



inline jule::I32 _21c4cd338_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return static_cast<jule::I32>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _21c4cd547_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _21c4e9332_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline void _21c4e99d6_PushToStrBuffer(jule::Str* _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		((*(_2825_s))).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline __jule_tuple_i32__jule_tuple_int _21c5cbed6_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _21c5cadb4_first[static_cast<jule::I32>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1959_sz = static_cast<jule::I32>((_1879_x & 7LLU));;
	_21c5cb447_acceptRange _1969_accept = _21c5cb755_acceptRanges[static_cast<jule::I32>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _21c5cc305_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _21c5cadb4_first[static_cast<jule::I32>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2429_sz = static_cast<jule::I32>((_2349_x & 7LLU));;
	_21c5cb447_acceptRange _2439_accept = _21c5cb755_acceptRanges[static_cast<jule::I32>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _21c5cc59c_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _2809_end = _27619_p.len();;
	jule::I32 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_21c5cde72_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_203d376b1;
			};
		}
	_iter_next_203d376b1:;
	}
	_iter_end_203d376b1:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cbed6_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I32 _21c5ccadb_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_203d3e674:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_203d3de15:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_203d3de8c:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_203d3e014:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_203d3e08b:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_203d3e2de:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_203d3dd8d:;
			{
				return -1LL;;
			}
		}
		_match_end_203d3dcc2:;
	};
}



inline jule::I32 _21c5cd009_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_203d4229d:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37434_r));
				return 1LL;;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_203d44987:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37434_r >> 6LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 2LL;;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_203d449ed:;
			{
				_37434_r=65533LL;
				goto _case_begin_203d447bc;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_203d447bc:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37434_r >> 12LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 3LL;;
			}
		}
		else {
			_case_begin_203d41e3a:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37434_r >> 18LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 4LL;;
			}
		}
		_match_end_203d41dd5:;
	};
}



inline jule::Slice<jule::U8> _21c5cd34a_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _21c5cd68b_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _21c5cd68b_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_203d4ae00:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_203d4cb05:;
			{
				_41242_r=128LL;
				goto _case_begin_203d4b241;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_203d4b241:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_203d4a7a1:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_203d4a74b:;
	};
}



inline jule::I32 _21c5cdbca_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_203d5614c;
			};
			jule::U8 _48213_x = _21c5cadb4_first[static_cast<jule::I32>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_203d5614c;
			};
			jule::I32 _48717_size = static_cast<jule::I32>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_203d5614c;
			};
			_21c5cb447_acceptRange _49213_accept = _21c5cb755_acceptRanges[static_cast<jule::I32>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_203d5614c:;
	}
	_iter_end_203d5614c:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _21c5cde72_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _21c685633_getLastOsErrorWindows(void) {
	jule::U32 _169_err = _21c4c78a4_GetLastError();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_203d79deb:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_203d7bcbb:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_203d7bd32:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_203d7bd98:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else {
			_case_begin_203d7a270:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		_match_end_203d7a21a:;
	};
}



inline jule::Slice<jule::Str> _21c686b51_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _21c6870c4_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _21c687987_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _21c687987_getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _21c4c7be5_GetCurrentDirectory(261LLU, (&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(jule::Any(_21c685633_getLastOsErrorWindows(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _21c499612_U16PtrToStr((&(_1513_buff[0LL]))));;
}



inline jule::Bool _21d5361b4_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_21d596433__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _21d59e76b_isExcludingLatin(_21d540399_Letter, _7613_r);;
}



inline jule::Bool _21d59db88_is16(jule::Slice<_21d59c0c6_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_204441b77:;
			if (it != expr_end) {
				jule::I32 _19313_i = it - expr->begin();
				{
					_21d59c0c6_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_204441b77:;
				++it;
				_19313_i++;
				goto _iter_begin_204441b77;
			}
			_iter_end_204441b77:;
		};
		return false;;
	};
	jule::I32 _20813_lo = 0LL;;
	jule::I32 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I32 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_21d59c0c6_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I32>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_204441649:;
	}
	_iter_end_204441649:;;
	return false;;
}



inline jule::Bool _21d59dec9_is32(jule::Slice<_21d59c549_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_204448013:;
			if (it != expr_end) {
				jule::I32 _23013_i = it - expr->begin();
				{
					_21d59c549_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_204448013:;
				++it;
				_23013_i++;
				goto _iter_begin_204448013;
			}
			_iter_end_204448013:;
		};
		return false;;
	};
	jule::I32 _24513_lo = 0LL;;
	jule::I32 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I32 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_21d59c549_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I32>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_204444d56:;
	}
	_iter_end_204444d56:;;
	return false;;
}



inline jule::Bool _21d59e76b_isExcludingLatin(jule::Ptr<_21d59c9bc_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_21d59c0c6_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I32 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _21d59db88_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_21d59c549_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _21d59dec9_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _21d59ea13_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_21d596433__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _21d59e76b_isExcludingLatin(_21d546900_Upper, _29512_r);;
}



inline jule::I32 _21d5c11d8_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20445c3ac:;
		if (it != expr_end) {
			jule::I32 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_20445c3ac:;
			++it;
			_399_i++;
			goto _iter_begin_20445c3ac;
		}
		_iter_end_20445c3ac:;
	};
	return -1LL;;
}



inline jule::I32 _21d5d3508_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _549_first = (&(_5017_s[0LL]));;
	jule::U8* _5513_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5513_it >= _549_first); (_5513_it)--) {
		{
			{
				if (((*(_5513_it)) == _5028_b)) {
					return static_cast<jule::I32>(((jule::I32)((_5513_it - _549_first))));;
				};
			};
		}
	_iter_next_20445d05b:;
	}
	_iter_end_20445d05b:;;
	return -1LL;;
}



inline jule::I32 _21d5d37c2_FindByteStr(jule::Str* _6717_s, jule::U8 _6725_b) {
	return static_cast<jule::I32>(_21d5c11d8_FindByte(_21c4e9332_Stobs(_6717_s), _6725_b));;
}



inline jule::I32 _21d5d3b13_FindLastByteStr(jule::Str* _7221_s, jule::U8 _7229_b) {
	return static_cast<jule::I32>(_21d5d3508_FindLastByte(_21c4e9332_Stobs(_7221_s), _7229_b));;
}



inline jule::Str _21d5d3ecb_Repeat(jule::Str _1211_s, jule::I32 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(2147483647LL,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_204479297:;
	}
	_iter_end_204479297:;;
	return _2013_ss;;
}



inline jule::Bool _21d5d440a_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I32 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I32 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_3213_i + 1LL));
		jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_20447c256:;
	}
	_iter_end_20447c256:;;
	return true;;
}



inline jule::Bool _21d5d474b_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _21d5d440a_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _21d5d4bad_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I32 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I32>(((*(_4615_s)).len() - _4638_start));
	jule::I32 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_20447e27a:;
	}
	_iter_end_20447e27a:;;
	return true;;
}



inline jule::Bool _21d5d4ebb_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _21d5d4bad_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I32 _21d5d53a6_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I32 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_21d5d440a_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_20448335b:;
	}
	_iter_end_20448335b:;;
	return -1LL;;
}



inline jule::I32 _21d5d5be2_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I32 _9333_i) {
	jule::I32 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I32 _10017_k = _9413_j;;
			jule::I32 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_10017_k + 1LL));
				jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_2044858ad;
					};
				}
			_iter_next_20448711d:;
			}
			_iter_end_20448711d:;;
			return _9413_j;;
		}
	_iter_next_2044858ad:;
	}
	_iter_end_2044858ad:;;
	return -1LL;;
}



inline jule::I32 _21d5d6033_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I32>(_21d5d5be2_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I32>((_11513_s.len() - 1LL))));;
}



inline jule::I32 _21d5d72cb_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I32 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I32 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cbed6_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_20448ea1b:;
	}
	_iter_end_20448ea1b:;;
	return -1LL;;
}



inline jule::I32 _21d5d7b17_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I32>(_21d5d3b13_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I32 _21d5d892b_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _21c4e9332_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _21c4e9332_Stobs(&(_22820_runes));;
	jule::I32 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I32 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cbed6_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21d5d72cb_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_2044952a2:;
	}
	_iter_end_2044952a2:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _21d5d9157_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I32 _26232_n) {
	jule::I32 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I32>(_26210_s.len());
	};
	jule::I32 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I32 _27613_j = _21d5d53a6_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_20449b6a4;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i, _27613_j));;
			_27413_i=static_cast<jule::I32>((_27613_j + _26218_sub.len()));
		}
	_iter_next_20449b6a4:;
	}
	_iter_end_20449b6a4:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;;
}



inline jule::Bool _21d5d9498_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_21d5d53a6_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _21d5d9e6b_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_21d5d892b_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I32 _21d5da2ac_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _31613_n = 0LL;;
	jule::I32 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I32 _31913_j = _21d5d53a6_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_2044a1c5e;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I32>((_31913_j + _31218_sub.len()));
		}
	_iter_next_2044a1c5e:;
	}
	_iter_end_2044a1c5e:;;
	return _31613_n;;
}



inline jule::Str _21d5da741_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I32 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I32 _3379_m = _21d5da2ac_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I32 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I32 _34813_j = _21d5d53a6_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_2044a5a87;
			};
			_34513_ss+=_33212_s.slice(_34613_i, _34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I32>((_34813_j + _33220_sub.len()));
		}
	_iter_next_2044a5a87:;
	}
	_iter_end_2044a5a87:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _21d5d77a4_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I32 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I32 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cbed6_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21d5d72cb_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_2044a86a0:;
	}
	_iter_end_2044a86a0:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _21d5db7ec_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _21c4e9332_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _21c4e9332_Stobs(&(_40321_cutset));;
	_21d5d77a4_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _21d5dbaa5_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I32 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I32 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cc59c_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21d5d72cb_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_2044ac495:;
	}
	_iter_end_2044ac495:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _21d5dc237_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _21c4e9332_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _21c4e9332_Stobs(&(_43417_cutset));;
	_21d5d77a4_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_21d5dbaa5_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Bool _21c661796_IsPathSep(jule::U8 _4814_c) {
	return ((_4814_c == 92LLU) || (_4814_c == '/'));;
}



inline jule::Bool _21c661a60_isSlash(jule::U8 _5212_c) {
	return ((_5212_c == '\\') || (_5212_c == '/'));;
}



inline jule::U8 _21c661d07_toUpper(jule::U8 _5412_c) {
	if ((('a' <= _5412_c) && (_5412_c <= 'z'))) {
		return static_cast<jule::U8>((_5412_c - 32LL));;
	};
	return _5412_c;;
}



inline jule::I32 _21c6623bd_volumeNameLen(jule::Str _8218_path) {
	if ((_8218_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _879_c = _8218_path[0LL];;
	if (((_8218_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_21c661a60_isSlash(_8218_path[0LL]))) || (!(_21c661a60_isSlash(_8218_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21c662665_cutPath(_8218_path.slice(2LL));
		_9510_p1 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21c662665_cutPath(_9518_rest);
		_9613_p2 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
		_9713_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_9713_ok))) {
		return static_cast<jule::I32>(_8218_path.len());;
	};
	if (((!_9510_p1.equal(".", 1)) && (!_9510_p1.equal("?", 1)))) {
		return static_cast<jule::I32>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
	};
	if (((((_9613_p2.len() == 3LL) && (_21c661d07_toUpper(_9613_p2[0LL]) == 'U')) && (_21c661d07_toUpper(_9613_p2[1LL]) == 'N')) && (_21c661d07_toUpper(_9613_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21c662665_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21c662665_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
			_9713_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_9713_ok))) {
			return static_cast<jule::I32>(_8218_path.len());;
		};
	};
	return static_cast<jule::I32>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _21c662665_cutPath(jule::Str _11912_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_11912_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2044cb12e:;
		if (it != expr_end) {
			jule::I32 _1209_i = it - expr->begin();
			{
				if (_21c661a60_isSlash(_11912_path[_1209_i])) {
					__jule_func_result.__jule_result_arg0 = _11912_path.slice(0LL, _1209_i);
					__jule_func_result.__jule_result_arg1 = _11912_path.slice((_1209_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_2044cb12e:;
			++it;
			_1209_i++;
			goto _iter_begin_2044cb12e;
		}
		_iter_end_2044cb12e:;
	};
	__jule_func_result.__jule_result_arg0 = _11912_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _21c66290c_fullPath(jule::Str _12813_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1299_utf16Name = _21c4990b2_Utf16FromStr(_12813_name);;
	jule::U16* _1309_p = (&(_1299_utf16Name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I32>(_13113_n), static_cast<jule::I32>(_13113_n), 0);;
			_13113_n=static_cast<jule::U32>(_21c4c8c07_GetFullPathName(_1309_p, static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())), (&(_13317_buff[0LL])), nullptr));
			if ((_13113_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				__jule_func_result.__jule_result_arg0 = _21c49936a_Utf16ToStr(_13317_buff.slice(0LL, static_cast<jule::I32>(_13113_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_2044cac77:;
	}
	_iter_end_2044cac77:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _21c662c81_abs(jule::Str _14512_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_14512_path.empty()) {
		_14512_path=jule::Str(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21c66290c_fullPath(_14512_path);
		_14512_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _21d5ddb1d_Clean(_14512_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _21c663028_join(jule::Slice<jule::Str> _15913_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_lastChar = 0LLU;;
	{
		auto expr = &(_15913_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2044d3246:;
		if (it != expr_end) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_2044d3e5b:;
					}
					else if (_21c661a60_isSlash(_16113_lastChar)) {
						_case_begin_2044d417b:;
						{
							while (((_16217_e.len() > 0LL) && _21c661a60_isSlash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_2044d4a2d:;
							}
							_iter_end_2044d4a2d:;;
						}
					}
					else if ((_16113_lastChar == ':')) {
						_case_begin_2044d3b2b:;
					}
					else {
						_case_begin_2044d3ab5:;
						{
							(_16013_s).append("\\", 1);
							_16113_lastChar='\\';
						}
					}
					_match_end_2044d39e9:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_lastChar=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_2044d3246:;
			++it;
			goto _iter_begin_2044d3246;
		}
		_iter_end_2044d3246:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();;
	};
	return _21d5ddb1d_Clean(_16013_s);;
}



inline jule::Str _21d5ddb1d_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I32 _1109_volLen = _21c6623bd_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _21c661796_IsPathSep(_1099_originalPath[0LL])) && _21c661796_IsPathSep(_1099_originalPath[1LL]))) {
			return _21d5de1a1_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _21c661796_IsPathSep(_10814_path[0LL]);;
	jule::I32 _1269_n = _10814_path.len();;
	_21d5dcd5e_lazyBuff _12713_out = _21d5dcd5e_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I32 _13214_r = 0;;
	jule::I32 _13221_dotdot = 0;;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_21d5dd557_append(&_12713_out, 92LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_21c661796_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_2044dce43:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _21c661796_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_2044e08d5:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _21c661796_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_2044e094b:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_2044e381c:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_21c661796_IsPathSep(static_cast<jule::U8>(_21d5dd2d2_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_2044e4136:;
									}
									_iter_end_2044e4136:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_2044e3883:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_21d5dd557_append(&_12713_out, 92LLU);
									};
									_21d5dd557_append(&_12713_out, '.');
									_21d5dd557_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_2044e3487:;
						};
					}
				}
				else {
					_case_begin_2044db4a2:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_21d5dd557_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_volLen == 0LL)) && (_13214_r != 0LL))) {
							jule::I32 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_21c661796_IsPathSep(_10814_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10814_path[_17525_i] == ':')) {
										_21d5dd557_append(&_12713_out, '.');
										_21d5dd557_append(&_12713_out, 92LLU);
										goto _iter_end_2044dd097;
									};
								}
							_iter_next_2044dd097:;
							}
							_iter_end_2044dd097:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_21c661796_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_21d5dd557_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_2044dd63b:;
						}
						_iter_end_2044dd63b:;;
					}
				}
				_match_end_2044db271:;
			};
		}
	_iter_next_2044db172:;
	}
	_iter_end_2044db172:;;
	if ((_12713_out._field_w == 0LL)) {
		_21d5dd557_append(&_12713_out, '.');
	};
	return _21d5de1a1_FromSlash(_21d5dd7bb_string(&_12713_out));;
}



inline jule::Str _21d5de1a1_FromSlash(jule::Str _21114_path) {
	;
	return _21d5da741_Replace(_21114_path, jule::Str("/", 1), jule::Str::from_byte(92LL), -1LL);;
}



inline jule::Str _21d5de4c0_Join(jule::Slice<jule::Str> _2259_elem) {
	return _21c663028_join(_2259_elem);;
}



inline jule::Str _21d5de767_Ext(jule::Str _2308_path) {
	jule::I32 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_21c661796_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_2044e7b0c:;
	}
	_iter_end_2044e7b0c:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _21d5dea0e_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21c662c81_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _21d5deca6_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _21c661796_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL, (_25413_path.len() - 1LL));;
		}
	_iter_next_2044ea12b:;
	}
	_iter_end_2044ea12b:;;
	(_25413_path).mut_slice(_21d5e03c2_VolumeName(_25413_path).len());;
	jule::I32 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_21c661796_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_2044eb946:;
	}
	_iter_end_2044eb946:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return jule::Str::from_byte(92LL);;
	};
	return _25413_path;;
}



inline jule::Str _21d5e012a_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _21d5e03c2_VolumeName(_2858_path);;
	jule::I32 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_21c661796_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_2044edc67:;
	}
	_iter_end_2044edc67:;;
	jule::Str _2919_dir = _21d5ddb1d_Clean(_2858_path.slice(_2869_vol.len(), (_28713_i + 1LL)));;
	if ((_2919_dir.equal(".", 1) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _21d5e03c2_VolumeName(jule::Str _30315_path) {
	return _21d5de1a1_FromSlash(_30315_path.slice(0LL, _21c6623bd_volumeNameLen(_30315_path)));;
}



inline jule::I32 _21c4dd667_getLastFsError(void) {
	jule::I32 _729_err = _21b5d27e5_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_204513dd1:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_204513364:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_2045137c6:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_20451383c:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_2045138a3:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_204513919:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_204514002:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_204514068:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_2045140ce:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_204514145:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_2045141bc:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_204514244:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_2045142bb:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_204514343:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_2045143ba:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_204514442:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_2045144b9:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_204514541:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_2045145b8:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_204514640:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_2045146b7:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_20451473e:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_2045147b6:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_20451483d:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_2045148b5:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_20451493c:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_2045149b4:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_204514a3b:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_20451362d:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_2045135c8:;
	};
}



inline jule::Bool _21c5d0baa_isConsoleHandle(jule::Uintptr _11320_handle) {
	return (((_11320_handle == _21c4c641e_STDIN) || (_11320_handle == _21c4c66d8_STDOUT)) || (_11320_handle == _21c4c696e_STDERR));;
}



inline void _21d717ac1_appendEscapeArg(jule::Str* _10125_s, jule::Str _10133_arg) {
	if ((_10133_arg.len() == 0LL)) {
		((*(_10125_s))).append("\"\"", 2);
		return;;
	};
	jule::Bool _10713_needsBackslash = false;;
	jule::Bool _10813_hasSpace = false;;
	jule::I32 _10913_i = 0LL;;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			{
				auto &_match_expr{ _10133_arg[_10913_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_20455992c:;
					{
						_10713_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_2045599a4:;
					{
						_10813_hasSpace=true;
					}
				}
				_match_end_20455983e:;
			};
		}
	_iter_next_2045557e6:;
	}
	_iter_end_2045557e6:;;
	if (((!(_10713_needsBackslash)) && (!(_10813_hasSpace)))) {
		(*(_10125_s))+=_10133_arg;
		return;;
	};
	if ((!(_10713_needsBackslash))) {
		((*(_10125_s))).append("\"", 1);
		(*(_10125_s))+=_10133_arg;
		((*(_10125_s))).append("\"", 1);
		return;;
	};
	if (_10813_hasSpace) {
		((*(_10125_s))).append("\"", 1);
	};
	jule::I32 _13513_slashes = 0LL;;
	_10913_i=0LL;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			jule::U8 _13813_c = _10133_arg[_10913_i];;
			{
				auto &_match_expr{ _13813_c };
				
				if (_match_expr == '\\') {
					_case_begin_20455d07e:;
					{
						(_13513_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_20455c655:;
					{
						for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
							{
								((*(_10125_s))).append("\\", 1);
							}
						_iter_next_20455d799:;
						}
						_iter_end_20455d799:;;
						((*(_10125_s))).append("\\", 1);
					}
				}
				else {
					_case_begin_20455c9eb:;
					{
						_13513_slashes=0LL;
					}
				}
				_match_end_20455c996:;
			};
			((*(_10125_s))).append(_13813_c);
		}
	_iter_next_20455bd80:;
	}
	_iter_end_20455bd80:;;
	if (_10813_hasSpace) {
		for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
			{
				((*(_10125_s))).append("\\", 1);
			}
		_iter_next_20455c952:;
		}
		_iter_end_20455c952:;;
		((*(_10125_s))).append("\"", 1);
	};
}



inline jule::Str _21d717d68_makeCmdLine(jule::Slice<jule::Str> _16216_args) {
	jule::Str _16313_s = jule::Str();;
	{
		auto expr = &(_16216_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204560092:;
		if (it != expr_end) {
			jule::Str *_16412_arg = it;
			{
				if ((_16313_s.len() > 0LL)) {
					(_16313_s).append(" ", 1);
				};
				_21d717ac1_appendEscapeArg(&(_16313_s), (*(_16412_arg)));
			}
			_iter_next_204560092:;
			++it;
			goto _iter_begin_204560092;
		}
		_iter_end_204560092:;
	};
	return _16313_s;;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _21d718220_createEnvBlock(jule::Slice<jule::Str> _17819_env) {
	if ((_17819_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _21c4987cb_Encode(static_cast<jule::Slice<jule::I32>>(jule::Str("\x00\x00", 2))));;
	};
	jule::I32 _18213_n = 0LL;;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204561bba:;
		if (it != expr_end) {
			jule::Str *_18312_s = it;
			{
				if ((_21d5d37c2_FindByteStr(_18312_s, 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
				};
				_18213_n+=((*(_18312_s)).len() + 1LL);
			}
			_iter_next_204561bba:;
			++it;
			goto _iter_begin_204561bba;
		}
		_iter_end_204561bba:;
	};
	(_18213_n)++;
	jule::Slice<jule::U16> _19013_b = jule::Slice<jule::U16>::alloc(0LL, _18213_n, 0);;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2045632b5:;
		if (it != expr_end) {
			jule::Str *_19112_s = it;
			{
				{
					auto expr = static_cast<jule::Slice<jule::I32>>((*(_19112_s)));
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_204563b56:;
					if (it != expr_end) {
						jule::I32 _19216_c = *it;
						{
							_19013_b=_21c498d81_AppendRune(_19013_b, _19216_c);
						}
						_iter_next_204563b56:;
						++it;
						goto _iter_begin_204563b56;
					}
					_iter_end_204563b56:;
				};
				_19013_b=_21c498d81_AppendRune(_19013_b, 0LL);
			}
			_iter_next_2045632b5:;
			++it;
			goto _iter_begin_2045632b5;
		}
		_iter_end_2045632b5:;
	};
	_19013_b=_21c498d81_AppendRune(_19013_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _19013_b);;
}



inline jule::I32 _21d7191ee_processErrorFromCode(jule::I32 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_20456379e:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_20456497b:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_20456488d:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_2045620a5:;
	};
}



inline jule::I32 _21d71940d_getLastProcessError(void) {
	return _21d7191ee_processErrorFromCode(static_cast<jule::I32>(static_cast<jule::I32>(_21c4c78a4_GetLastError())));;
}



inline void _21d719bb1_Exit(jule::I32 _129_code) {
	_21c4cd547_Exit(_129_code);
}



inline jule::Str _21d719dae_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _21d667a87_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _21d667d40_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_21d5e2c76_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204598cac:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_204598cac:;
			++it;
			goto _iter_begin_204598cac;
		}
		_iter_end_204598cac:;
	};
	return false;;
}



inline jule::Bool _21d6680d7_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_21d665c2d_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20459961a:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_20459961a:;
			++it;
			goto _iter_begin_20459961a;
		}
		_iter_end_20459961a:;
	};
	{
		auto expr = &(_21d665e4d_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20459a929:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_20459a929:;
			++it;
			goto _iter_begin_20459a929;
		}
		_iter_end_20459a929:;
	};
	return false;;
}



inline jule::Str _21d675a2e_Logf(jule::Str _3159_fmt, jule::Slice<jule::Any> _31522_args) {
	return _21d676447_applyFmt(_3159_fmt, _31522_args);;
}



inline jule::Str _21d675d1a_argToStr(jule::Any _31913_arg) {
	{
		auto &_match_expr{ _31913_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_20459bd7b:;
			{
				return _31913_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_20459bde2:;
			{
				return jule::Str::from_byte(_31913_arg.cast<jule::U8>(&__jule_any_type130));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_20459bb6c:;
			{
				return jule::Str::from_rune(_31913_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_20459b73d:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_20459b551:;
	};
}



inline jule::I32 _21d6760b2_findNextFmt(jule::Str _33216_fmt) {
	{
		auto expr = &(_33216_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20459c5a7:;
		if (it != expr_end) {
			jule::I32 _3339_i = it - expr->begin();
			jule::U8 *_33312_b = it;
			{
				if (((*(_33312_b)) == '@')) {
					return _3339_i;;
				};
			}
			_iter_next_20459c5a7:;
			++it;
			_3339_i++;
			goto _iter_begin_20459c5a7;
		}
		_iter_end_20459c5a7:;
	};
	return -1LL;;
}



inline jule::Str _21d676447_applyFmt(jule::Str _34117_fmt, jule::Slice<jule::Any> _34127_args) {
	jule::Str _34213_s = jule::Str();;
	{
		auto expr = &(_34127_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20459e2ac:;
		if (it != expr_end) {
			jule::Any *_34312_arg = it;
			{
				jule::I32 _34413_i = _21d6760b2_findNextFmt(_34117_fmt);;
				if ((_34413_i == -1LL)) {
					goto _iter_end_20459e2ac;
				};
				_34213_s+=_34117_fmt.slice(0LL, _34413_i);
				_34213_s+=_21d675d1a_argToStr((*(_34312_arg)));
				(_34117_fmt).mut_slice((_34413_i + 1LL));;
			}
			_iter_next_20459e2ac:;
			++it;
			goto _iter_begin_20459e2ac;
		}
		_iter_end_20459e2ac:;
	};
	_34213_s+=_34117_fmt;
	return _34213_s;;
}



inline jule::Bool _21d6774c0_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _21d678900_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _21d678ba8_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _21d678e50_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _21d67926e_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _21d679516_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _21d6797ad_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _21d679a55_IsUnix(jule::Str _5511_os) {
	return (_21d678ba8_IsDarwin(_5511_os) || _21d678e50_IsLinux(_5511_os));;
}



inline jule::Bool _21d679dc9_Is32Bit(jule::Str _5812_arch) {
	return _21d67926e_IsI386(_5812_arch);;
}



inline jule::Bool _21d67a171_Is64Bit(jule::Str _6112_arch) {
	return (_21d679516_IsAmd64(_6112_arch) || _21d6797ad_IsArm64(_6112_arch));;
}



inline void _21d71b146_init(void) {
	jule::Str _2513_path = _21d719dae_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_21d71a673_PathWd=({
			auto except = _21c6870c4_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_21d71a3ba_PathExec=_21d5e012a_Dir(_2513_path);
		_21d71a19a_PathStdlib=_21d5de4c0_Join(jule::Slice<jule::Str>::make({_21d71a3ba_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_21d71a981_PathApi=_21d5de4c0_Join(jule::Slice<jule::Str>::make({_21d71a3ba_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _21da1b215_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto expr = &(_21d97007b_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20520871d:;
		if (it != expr_end) {
			jule::Str *_31312_op = it;
			{
				if ((_31214_kind == (*(_31312_op)))) {
					return true;;
				};
			}
			_iter_next_20520871d:;
			++it;
			goto _iter_begin_20520871d;
		}
		_iter_end_20520871d:;
	};
	return false;;
}



inline jule::Bool _21da1b501_IsBinOp(jule::Str _32212_kind) {
	{
		auto expr = &(_21d97029b_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205208bb3:;
		if (it != expr_end) {
			jule::Str *_32312_op = it;
			{
				if ((_32212_kind == (*(_32312_op)))) {
					return true;;
				};
			}
			_iter_next_205208bb3:;
			++it;
			goto _iter_begin_205208bb3;
		}
		_iter_end_205208bb3:;
	};
	return false;;
}



inline jule::Bool _21da1bab7_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _21da1bd5e_IsRawStr(_34210_k)));;
}



inline jule::Bool _21da1bd5e_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));;
}



inline jule::Bool _21da1c106_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));;
}



inline jule::Bool _21da1c722_IsBool(jule::Str _35511_k) {
	return (_35511_k.equal("true", 4) || _35511_k.equal("false", 5));;
}



inline jule::Bool _21da1c9b9_IsFloat(jule::Str _35812_k) {
	if (_21d5d474b_HasPrefix(_35812_k, jule::Str("0x", 2))) {
		return _21d5d9e6b_ContainsAny(_35812_k, jule::Str(".pP", 3));;
	};
	return _21d5d9e6b_ContainsAny(_35812_k, jule::Str(".eE", 3));;
}



inline jule::Bool _21da1cc61_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));;
}



inline jule::Bool _21da1d2a0_IsIgnoreIdent(jule::Str _38118_ident) {
	return _38118_ident.equal("_", 1);;
}



inline jule::Bool _21da1d547_IsAnonIdent(jule::Str _38416_ident) {
	return _38416_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _21da1da86_IsSpace(jule::I32 _39712_r) {
	{
		auto expr = &(_21d96ed5b_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205212617:;
		if (it != expr_end) {
			jule::I32 *_39812_cr = it;
			{
				if ((_39712_r == (*(_39812_cr)))) {
					return true;;
				};
			}
			_iter_next_205212617:;
			++it;
			goto _iter_begin_205212617;
		}
		_iter_end_205212617:;
	};
	return false;;
}



inline jule::Bool _21da1ded7_IsLetter(jule::I32 _40713_r) {
	return _21d5361b4_IsLetter(_40713_r);;
}



inline jule::Bool _21da1e526_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));;
}



inline jule::Bool _21da1e7bd_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));;
}



inline jule::Bool _21da1ea65_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));;
}



inline jule::Bool _21da1ed0c_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_2052173ca:;
			{
				return true;;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_205216c04:;
			{
				return true;;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_205216c6a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_205216b8d:;
			{
				return false;;
			}
		}
		_match_end_205216ac2:;
	};
}



inline jule::Bool _21da200a4_IsAssign(jule::U32 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U32>(2LLU)) || (_45113_id == static_cast<jule::U32>(30LLU))) || (_45113_id == static_cast<jule::U32>(33LLU))) || (_45113_id == static_cast<jule::U32>(20LLU))) || (_45113_id == static_cast<jule::U32>(27LLU))) || (_45113_id == static_cast<jule::U32>(3LLU))) || (_45113_id == static_cast<jule::U32>(7LLU)));;
}



inline jule::Bool _21da2034b_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto expr = &(_21da15011_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20521a730:;
		if (it != expr_end) {
			jule::Str *_46312_op = it;
			{
				if ((_46216_kind == (*(_46312_op)))) {
					return true;;
				};
			}
			_iter_next_20521a730:;
			++it;
			goto _iter_begin_20521a730;
		}
		_iter_end_20521a730:;
	};
	return false;;
}



inline jule::Bool _21da205e3_IsAssignOp(jule::Str _47215_kind) {
	if (_21da2034b_IsPostfixOp(_47215_kind)) {
		return true;;
	};
	{
		auto expr = &(_21da1530d_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20521b92e:;
		if (it != expr_end) {
			jule::Str *_47612_op = it;
			{
				if ((_47215_kind == (*(_47612_op)))) {
					return true;;
				};
			}
			_iter_next_20521b92e:;
			++it;
			goto _iter_begin_20521b92e;
		}
		_iter_end_20521b92e:;
	};
	return false;;
}



inline jule::Ptr<_21da20d96_File> _21da223c5_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_21da20d96_File>(_21da20d96_File{._field_Path=_6315_path, });;
}



inline _21d6755de_Log _21da23b68_makeErr(jule::I32 _11112_row, jule::I32 _11122_col, jule::Ptr<_21da20d96_File>* _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _21d6755de_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=(*(_11133_f)).get()._field_Path, ._field_Text=_21d675a2e_Logf(_11143_fmt, _11156_args), };;
}



inline jule::Bool _21da23eed_bytesHasPrefix(jule::Slice<jule::U8>* _12120_bytes, jule::Str _12135_prefix) {
	if (((*(_12120_bytes)).len() < _12135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_12135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052262a7:;
		if (it != expr_end) {
			jule::I32 _1259_i = it - expr->begin();
			{
				if (((*(_12120_bytes))[_1259_i] != _12135_prefix[_1259_i])) {
					return false;;
				};
			}
			_iter_next_2052262a7:;
			++it;
			_1259_i++;
			goto _iter_begin_2052262a7;
		}
		_iter_end_2052262a7:;
	};
	return true;;
}



inline jule::Str _21da2433e_floatFmtE(jule::Slice<jule::U8>* _13315_txt, jule::I32 _13332_i) {
	jule::Str __jule_func_result;
	(_13332_i)++;
	if ((_13332_i >= (*(_13315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _13913_b = (*(_13315_txt))[_13332_i];;
	if ((_13913_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= (*(_13315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_13315_txt))[_13332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1539_first = _13332_i;;
	for (; (_13332_i < (*(_13315_txt)).len()); (_13332_i)++) {
		{
			_13913_b=(*(_13315_txt))[_13332_i];
			if (((_13913_b != '_') && (!(_21da1e526_IsDecimal(_13913_b))))) {
				goto _iter_end_205229bd4;
			};
		}
	_iter_next_205229bd4:;
	}
	_iter_end_205229bd4:;;
	if ((_13332_i == _1539_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_13315_txt)).slice(0LL, _13332_i));
	return __jule_func_result;;
}



inline jule::Str _21da246c4_floatFmtP(jule::Slice<jule::U8>* _16715_txt, jule::I32 _16728_i) {
	return _21da2433e_floatFmtE(_16715_txt, _16728_i);;
}



inline jule::Str _21da24a15_floatFmtDotnp(jule::Slice<jule::U8>* _17119_txt, jule::I32 _17136_i) {
	if (((*(_17119_txt))[_17136_i] != '.')) {
		return jule::Str();;
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < (*(_17119_txt)).len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = (*(_17119_txt))[_17136_i];;
			{
				
				if ((_17913_b == '_') || _21da1e526_IsDecimal(_17913_b)) {
					_case_begin_20522ca3e:;
					{
						goto _iter_next_20522bdd4;
					}
				}
				else if (_21da262b9_isFloatFmtP(_17913_b, _17136_i)) {
					_case_begin_20522caa5:;
					{
						return _21da246c4_floatFmtP(_17119_txt, _17136_i);;
					}
				}
				else {
					_case_begin_20522c9c8:;
					{
						goto _iter_end_20522bdd4;
					}
				}
				_match_end_20522c962:;
			};
		}
	_iter_next_20522bdd4:;
	}
	_iter_end_20522bdd4:;;
	return jule::Str();;
}



inline jule::Str _21da24d56_floatFmtDotfp(jule::Slice<jule::U8>* _19219_txt, jule::I32 _19236_i) {
	_19236_i+=2LL;
	return _21da2433e_floatFmtE(_19219_txt, _19236_i);;
}



inline jule::Str _21da25197_floatFmtDotp(jule::Slice<jule::U8>* _19718_txt, jule::I32 _19735_i) {
	(_19735_i)++;
	return _21da2433e_floatFmtE(_19718_txt, _19735_i);;
}



inline jule::Str _21da255e8_floatNum(jule::Slice<jule::U8>* _20214_txt, jule::I32 _20231_i) {
	jule::Str __jule_func_result;
	(_20231_i)++;
	if ((_20231_i >= (*(_20214_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)));
		return __jule_func_result;;
	};
	if (((*(_20214_txt))[_20231_i] == '_')) {
		(_20231_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
		return __jule_func_result;;
	};
	for (; (_20231_i < (*(_20214_txt)).len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = (*(_20214_txt))[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				__jule_func_result = _21da2433e_floatFmtE(_20214_txt, _20231_i);
				return __jule_func_result;;
			};
			if (((_21213_b != '_') && (!(_21da1e526_IsDecimal(_21213_b))))) {
				goto _iter_end_2052303c1;
			};
		}
	_iter_next_2052303c1:;
	}
	_iter_end_2052303c1:;;
	if ((_20231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
	return __jule_func_result;;
}



inline jule::Str _21da25890_commonNum(jule::Slice<jule::U8>* _22715_txt) {
	jule::Str __jule_func_result;
	jule::I32 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < (*(_22715_txt)).len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = (*(_22715_txt))[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_20523433c:;
					{
						__jule_func_result = _21da255e8_floatNum(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_2052343b4:;
					{
						goto _iter_next_205233649;
					}
				}
				else if (_21da25e78_isFloatFmtE(_23113_b, _22813_i)) {
					_case_begin_20523443b:;
					{
						__jule_func_result = _21da2433e_floatFmtE(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_21da1e526_IsDecimal(_23113_b)))) {
					_case_begin_2052344b3:;
					{
						goto _iter_end_205233649;
					}
				}
				_match_end_205234260:;
			};
		}
	_iter_next_205233649:;
	}
	_iter_end_205233649:;;
	if ((_22813_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_22715_txt)).slice(0LL, _22813_i));
	return __jule_func_result;;
}



inline jule::Str _21da25b37_binaryNum(jule::Slice<jule::U8>* _25015_txt) {
	jule::Str __jule_func_result;
	if ((!(_21da23eed_bytesHasPrefix(_25015_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_25015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _25913_i = 2LL;;
	for (; (_25913_i < (*(_25015_txt)).len()); (_25913_i)++) {
		{
			if ((((*(_25015_txt))[_25913_i] != '_') && (!(_21da1e7bd_IsBinary((*(_25015_txt))[_25913_i]))))) {
				goto _iter_end_205235c45;
			};
		}
	_iter_next_205235c45:;
	}
	_iter_end_205235c45:;;
	if ((_25913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_25015_txt)).slice(0LL, _25913_i));
	return __jule_func_result;;
}



inline jule::Bool _21da25e78_isFloatFmtE(jule::U8 _27216_b, jule::I32 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));;
}



inline jule::Bool _21da262b9_isFloatFmtP(jule::U8 _27616_b, jule::I32 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));;
}



inline jule::Bool _21da2660a_isFloatFmtDotnp(jule::Slice<jule::U8>* _28021_txt, jule::I32 _28038_i) {
	if (((*(_28021_txt))[_28038_i] != '.')) {
		return false;;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < (*(_28021_txt)).len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = (*(_28021_txt))[_28038_i];;
			{
				
				if ((_28713_b == '_') || _21da1e526_IsDecimal(_28713_b)) {
					_case_begin_20523bb6e:;
					{
						goto _iter_next_20523a981;
					}
				}
				else if (_21da262b9_isFloatFmtP(_28713_b, _28038_i)) {
					_case_begin_20523bbd5:;
					{
						return true;;
					}
				}
				else {
					_case_begin_20523bb08:;
					{
						goto _iter_end_20523a981;
					}
				}
				_match_end_20523ba92:;
			};
		}
	_iter_next_20523a981:;
	}
	_iter_end_20523a981:;;
	return false;;
}



inline jule::Bool _21da2694b_isFloatFmtDotp(jule::Slice<jule::U8>* _30120_txt, jule::I32 _30133_i) {
	{
		
		if (((*(_30120_txt)).len() < 3LL)) {
			_case_begin_20523d863:;
			{
				goto _case_begin_20523d18c;
			}
		}
		else if (((*(_30120_txt))[_30133_i] != '.')) {
			_case_begin_20523d18c:;
			{
				goto _case_begin_20523d203;
			}
		}
		else if ((((*(_30120_txt))[(_30133_i + 1LL)] != 'p') && ((*(_30120_txt))[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_20523d203:;
			{
				return false;;
			}
		}
		else {
			_case_begin_20523d126:;
			{
				return true;;
			}
		}
		_match_end_20523d05a:;
	};
}



inline jule::Bool _21da26c8c_isFloatFmtDotfp(jule::Slice<jule::U8>* _31421_txt, jule::I32 _31434_i) {
	{
		
		if (((*(_31421_txt)).len() < 4LL)) {
			_case_begin_205240b62:;
			{
				goto _case_begin_20524049c;
			}
		}
		else if (((*(_31421_txt))[_31434_i] != '.')) {
			_case_begin_20524049c:;
			{
				goto _case_begin_205240513;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 1LL)] != 'f') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_205240513:;
			{
				goto _case_begin_205240579;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 2LL)] != 'p') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_205240579:;
			{
				return false;;
			}
		}
		else {
			_case_begin_20524003a:;
			{
				return true;;
			}
		}
		_match_end_20523ee6e:;
	};
}



inline jule::Str _21da271dd_octalNum(jule::Slice<jule::U8>* _32914_txt) {
	jule::Str __jule_func_result;
	if (((*(_32914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_32914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if (((*(_32914_txt))[1LL] == 'o')) {
		if (((*(_32914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I32 _34813_i = _33713_octalStart;;
	for (; (_34813_i < (*(_32914_txt)).len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = (*(_32914_txt))[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _21da255e8_floatNum(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (_21da25e78_isFloatFmtE(_35013_b, _34813_i)) {
				__jule_func_result = _21da2433e_floatFmtE(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (((_35013_b != '_') && (!(_21da1ea65_IsOctal(_35013_b))))) {
				goto _iter_end_205244baa;
			};
		}
	_iter_next_205244baa:;
	}
	_iter_end_205244baa:;;
	if ((_34813_i == _33713_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_32914_txt)).slice(0LL, _34813_i));
	return __jule_func_result;;
}



inline jule::Str _21da27485_hexNum(jule::Slice<jule::U8>* _37112_txt) {
	jule::Str __jule_func_result;
	if (((*(_37112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_37112_txt))[0LL] != '0') || (((*(_37112_txt))[1LL] != 'x') && ((*(_37112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < (*(_37112_txt)).len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = (*(_37112_txt))[_38013_i];;
			{
				
				if (_21da2694b_isFloatFmtDotp(_37112_txt, _38013_i)) {
					_case_begin_20524abc2:;
					{
						__jule_func_result = _21da25197_floatFmtDotp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_21da26c8c_isFloatFmtDotfp(_37112_txt, _38013_i)) {
					_case_begin_20524ac49:;
					{
						__jule_func_result = _21da24d56_floatFmtDotfp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_21da262b9_isFloatFmtP(_38313_b, _38013_i)) {
					_case_begin_20524acc1:;
					{
						__jule_func_result = _21da246c4_floatFmtP(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_21da2660a_isFloatFmtDotnp(_37112_txt, _38013_i)) {
					_case_begin_20524ad48:;
					{
						__jule_func_result = _21da24a15_floatFmtDotnp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (((_38313_b != '_') && (!(_21da1ed0c_IsHex(_38313_b))))) {
					_case_begin_20524adc0:;
					{
						goto _iter_end_205249e13;
					}
				}
				_match_end_20524aad4:;
			};
		}
	_iter_next_205249e13:;
	}
	_iter_end_205249e13:;;
	if ((_38013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_37112_txt)).slice(0LL, _38013_i));
	return __jule_func_result;;
}



inline jule::Str _21da277c6_hexEscape(jule::Slice<jule::U8>* _40415_txt, jule::I32 _40428_n) {
	jule::Str __jule_func_result;
	if (((*(_40415_txt)).len() < _40428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_21da1ed0c_IsHex((*(_40415_txt))[_41013_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_20524d598:;
	}
	_iter_end_20524d598:;;
	__jule_func_result=static_cast<jule::Str>((*(_40415_txt)).slice(0LL, _40428_n));
	return __jule_func_result;;
}



inline jule::Str _21da27a6d_bigUnicodePointEscape(jule::Slice<jule::U8>* _42227_txt) {
	return _21da277c6_hexEscape(_42227_txt, 10LL);;
}



inline jule::Str _21da27d37_littleUnicodePointEscape(jule::Slice<jule::U8>* _42730_txt) {
	return _21da277c6_hexEscape(_42730_txt, 6LL);;
}



inline jule::Str _21da27ee1_hexByteEscape(jule::Slice<jule::U8>* _43219_txt) {
	return _21da277c6_hexEscape(_43219_txt, 4LL);;
}



inline jule::Str _21da28277_byteEscape(jule::Slice<jule::U8>* _43716_txt) {
	jule::Str __jule_func_result;
	if (((*(_43716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_21da1ea65_IsOctal((*(_43716_txt))[1LL]))) || (!(_21da1ea65_IsOctal((*(_43716_txt))[2LL])))) || (!(_21da1ea65_IsOctal((*(_43716_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_43716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_21d6755de_Log> _21da2cc71_Lex(jule::Ptr<_21da20d96_File> _82612_f, jule::I32 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;;
	};
	_21da2895e_lex _83113_lex = _21da2895e_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_21da2b500_newLine(&_83113_lex);
	_21da294ed_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;;
}



inline jule::I32 _21e655007_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I32>((64LL - _21e65c482_Len64(_6119_x)));;
}



inline jule::I32 _21e655e3c_TrailingZeros(jule::U32 _8318_x) {
	;
	return static_cast<jule::I32>(_21e656aca_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I32 _21e656833_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_21e655612__DE_BRUIJN32_TAB[static_cast<jule::I32>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I32 _21e656aca_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_21e655bc8__DE_BRUIJN64_TAB[static_cast<jule::I32>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I32 _21e65c1da_Len32(jule::U32 _35214_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I32 _21e65c482_Len64(jule::U64 _36614_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _21e65d142_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _21e65e7c5_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _21e581b7b_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _21e581e67_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _21e58220e_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _21e58252d_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _21e584a19_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_205383216:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_21e66bea8_IsInf(_4714_f, 0LL) || _21e66b903_IsNaN(_4714_f)) {
			_case_begin_20538328d:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_205383106:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _21e66c250_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _21e58220e_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_21e58252d_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _21e66b617_NaN(void) {
	return static_cast<jule::F64>(_21e58252d_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _21e66b903_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _21e66bb9a_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_21e58252d_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_21e58252d_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _21e66bea8_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _21e66c250_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_21e66e4c7_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _21e66db36_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_21e66b903_IsNaN(_1118_x) || _21e66bea8_IsInf(_1118_x, 1LL)) {
			_case_begin_2053c4367:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_2053c43de:;
			{
				return static_cast<jule::F64>(_21e66b617_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_2053c4466:;
			{
				return static_cast<jule::F64>(_21e66bb9a_Inf(-1LL));;
			}
		}
		_match_end_2053c429b:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I32 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _21e584a19_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _21e66e4c7_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_21e58252d_F64FromBits(static_cast<jule::U64>((_21e58220e_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _21e675e18_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _21e66e4c7_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_20543e8cc:;
		}
		_iter_end_20543e8cc:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _21e6766cc_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I32 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _21e584a19_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_21e66db36_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _21e6a0041_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I32 _7832_prec, jule::I32 _7843_bit_size) {
	return static_cast<jule::Str>(_21e6a05b3_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _21e6a364e_max(static_cast<jule::I32>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _21e6a05b3_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I32 _8258_prec, jule::I32 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_21e69e062_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_205650956:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_21e581b7b_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_21e69e062_floatInfo>)((&(_21e69e293_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_2056509bc:;
			{
				_8313_bits=static_cast<jule::U64>(_21e58220e_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_21e69e062_floatInfo>)((&(_21e69e5a1_f64info))));
			}
		}
		else {
			_case_begin_20565033a:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_20564dd0b:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I32 _9713_exp = (static_cast<jule::I32>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I32>(static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_205654174:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_205656594:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_20565673c:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_20565563c:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_205655571:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_205654bd0:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_205650b76:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_20565411e:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _21e6a284b_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _21e6a2ebc_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_21e69ea02_decimalSlice _13213_digs = _21e69ea02_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_21e6acd0c_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_20565a17a:;
				{
					_8258_prec=static_cast<jule::I32>(_21e6a364e_max(static_cast<jule::I32>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_20565a202:;
				{
					_8258_prec=static_cast<jule::I32>(_21e6a364e_max(static_cast<jule::I32>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_20565a28a:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_2056595ca:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I32 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_20565c7ba:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_20565bd6e:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_20565c18d:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_20565c2c0:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_21e6abb63_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_21e6ac0a3_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _21e6a0c34_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _21e6a1383_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _21e6a0c34_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I32 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I32 _18316_exp, _21e69e062_floatInfo* _18327_flt) {
	_21e6b1805_decimal _18413_d = _21e6b1805_decimal{};;
	_21e6b1bce_assign(&_18413_d, _1835_mant);
	_21e6b1e54_shift(&_18413_d, static_cast<jule::I32>((_18316_exp - static_cast<jule::I32>((*(_18327_flt))._field_mantbits))));
	_21e69ea02_decimalSlice _18713_digs = _21e69ea02_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_21e6a177e_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_21e69ea02_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_20566222b:;
				{
					_18233_prec=static_cast<jule::I32>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_20566466d:;
				{
					_18233_prec=static_cast<jule::I32>(_21e6a364e_max(static_cast<jule::I32>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_205664728:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_20566445e:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_205666065:;
				{
					_21e6b26c4_round(&_18413_d, static_cast<jule::I32>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_2056660dc:;
				{
					_21e6b26c4_round(&_18413_d, static_cast<jule::I32>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_205666164:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_21e6b26c4_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_205665e55:;
		};
		_18713_digs=_21e69ea02_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _21e6a1383_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _21e6a1383_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _21e69ea02_decimalSlice _2205_digs, jule::I32 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_205669541:;
			{
				return _21e6a1cac_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_2056695a7:;
			{
				return _21e6a2241_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_20566961d:;
			{
				jule::I32 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I32 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _21e6a1cac_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _21e6a2241_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>(_21e6a364e_max(static_cast<jule::I32>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_2056693ed:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _21e6a177e_roundShortest(_21e6b1805_decimal* _25723_d, jule::U64 _25735_mant, jule::I32 _25746_exp, _21e69e062_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_21e6b1805_decimal _28713_upper = _21e6b1805_decimal{};;
	_21e6b1bce_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_21e6b1e54_shift(&_28713_upper, static_cast<jule::I32>(((_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I32 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I32>((_25746_exp - 1LL));
	};
	_21e6b1805_decimal _30613_lower = _21e6b1805_decimal{};;
	_21e6b1bce_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_21e6b1e54_shift(&_30613_lower, static_cast<jule::I32>(((_29813_explo - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I32 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I32 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_205676ce0;
			};
			jule::I32 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_20567bd8e:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_20567be16:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_20567be8d:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_20567bcc3:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_20568016c:;
					{
						_21e6b26c4_round(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_2056801e4:;
					{
						_21e6b21c9_roundDown(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_20568026b:;
					{
						_21e6b244e_roundUp(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_2056800a1:;
			};
		}
	_iter_next_205676ce0:;
	}
	_iter_end_205676ce0:;;
}



inline jule::Slice<jule::U8> _21e6a1cac_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _21e69ea02_decimalSlice _39637_d, jule::I32 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I32 _41217_i = 1LL;;
		jule::I32 _41313_m = _21e6a330d_min(_39637_d._field_nd, static_cast<jule::I32>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i, _41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_20568520a:;
		}
		_iter_end_20568520a:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I32 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I32>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_205687174:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_205687064:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_205686cbc:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_205686c67:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _21e6a2241_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _21e69ea02_decimalSlice _45137_d, jule::I32 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I32 _45917_m = _21e6a330d_min(_45137_d._field_nd, _45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL, _45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_20568b95e:;
		}
		_iter_end_20568b95e:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I32 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_20568c71d:;
		}
		_iter_end_20568c71d:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _21e6a284b_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I32 _48452_exp, _21e69e062_floatInfo* _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _21e6b660c_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I32>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _21e6b660c_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _21e6a2ebc_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I32 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I32 _50724_exp, _21e69e062_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_205690ac8:;
	}
	_iter_end_205690ac8:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U32 _52113_shift = static_cast<jule::U32>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_205698b36:;
		}
		_iter_end_205698b36:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I32 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_205699dac:;
		}
		_iter_end_205699dac:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _21e6a4177_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I32>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_20569cec0:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_20569d036:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_20569c84e:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_20569c7e9:;
	};
	return _50613_dst;;
}



inline jule::I32 _21e6a330d_min(jule::I32 _5918_a, jule::I32 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I32 _21e6a364e_max(jule::I32 _5988_a, jule::I32 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _21e6a4177_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__21e0a533c_ConvError _21e6a45a6_parseUint(jule::Str _5118_s, jule::I32 _5130_base, jule::I32 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__21e0a533c_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_2056a4625:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_2056a4515:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_21e6a4177_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_2056a643a:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_21e6a4177_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_2056a624d:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_21e6a4177_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_2056a62b4:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_2056a5da7:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_2056a5cdb:;
					};
				};
			}
		}
		else {
			_case_begin_2056a3822:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_2056a37ab:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_2056ab121:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_2056aa73b:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_2056aaa16:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_2056aa890:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_2056aab04:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_2056ac265:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_2056aad46:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = &(_5118_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2056ad376:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_2056ac4c9:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _21e6a4177_lower(_10912_c)) && (_21e6a4177_lower(_10912_c) <= 'z'))) {
						_case_begin_2056ae6b8:;
						{
							_11017_d=static_cast<jule::U8>(((_21e6a4177_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_2056ae2de:;
						{
							goto _iter_next_2056ad376;
						}
					}
					else {
						_case_begin_2056ae278:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_2056ae212:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_2056ad376:;
			++it;
			goto _iter_begin_2056ad376;
		}
		_iter_end_2056ad376:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _21e6a4991_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I32 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__21e0a533c_ConvError __jule_assign_result = _21e6a45a6_parseUint(_14618_s, _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _21e6a4e03_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I32 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__21e0a533c_ConvError __jule_assign_result = _21e6a45a6_parseUint(_17217_s, _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I32>(0LL)) && (_18718_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U32>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _21e6a5a19_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_21e58252d_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _579_clz = _21e655007_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U32>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e65e7c5_Mul64(_4122_man, _21e6a6883_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e65e7c5_Mul64(_4122_man, _21e6a6883_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_21e58252d_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _21e6a5e15_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_21e581e67_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1329_clz = _21e655007_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U32>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e65e7c5_Mul64(_11022_man, _21e6a6883_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e65e7c5_Mul64(_11022_man, _21e6a6883_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_21e581e67_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _21e6a7b2b_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I32 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I32>(_4530_s.len());
	};
	jule::I32 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_2056d5ada:;
	}
	_iter_end_2056d5ada:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _21e6a7e28_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _7213_sign = 1LL;;
	jule::I32 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_2056d9e96:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_2056da01d;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_2056da01d:;
			{
				jule::I32 _8317_caseN = _21e6a7b2b_commonPrefixLenIgnoreCase(_6816_s, jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_21e66bb9a_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_2056da095:;
			{
				if ((_21e6a7b2b_commonPrefixLenIgnoreCase(_6816_s, jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_21e66b617_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_2056d9dca:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _21e6a81c0_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_2056e0b17:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_2056e0b8e:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_2056e09c4:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I32 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_21e6a4177_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I32 _12913_nd = 0LL;;
	jule::I32 _13013_ndMant = 0LL;;
	jule::I32 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_2056e6d0a:;
					{
						goto _iter_next_2056e625a;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_2056e6d82:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_2056e625a;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_2056e6e09:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_2056e625a;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_2056e625a;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _21e6a4177_lower(_13313_c))) && (_21e6a4177_lower(_13313_c) <= 'f'))) {
					_case_begin_2056e6e81:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_21e6a4177_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_2056e625a;
					}
				}
				_match_end_2056e6c2d:;
			};
			goto _iter_end_2056e625a;
		}
	_iter_next_2056e625a:;
	}
	_iter_end_2056e625a:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_21e6a4177_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_205701364;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I32>((((_20617_e * 10LL) + static_cast<jule::I32>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_205701364:;
		}
		_iter_end_205701364:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I32>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _21e6a9b50_atof64exact(jule::U64 _48116_mantissa, jule::I32 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _21e69e5a1_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_20570b2b4:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_20570b33b:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_21e6a906c_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _21e6a906c_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_20570b3b3:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_21e6a906c_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_20570b1e8:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _21e6aa03a_atof32exact(jule::U64 _51516_mantissa, jule::I32 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _21e69e293_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_205710e89:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_205711011:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_21e6a93ad_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _21e6a93ad_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_205711088:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_21e6a93ad_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_205710dbd:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__21e0a533c_ConvError _21e6aa612_atofHex(jule::Str _55112_s, _21e69e062_floatInfo* _55121_flt, jule::U64 _55141_mantissa, jule::I32 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__21e0a533c_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5529_maxExp = ((static_cast<jule::I32>((1LL << (*(_55121_flt))._field_expbits)) + (*(_55121_flt))._field_bias) - 2LL);;
	jule::I32 _5539_minExp = ((*(_55121_flt))._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I32>((*(_55121_flt))._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> ((*(_55121_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_205715d5c:;
	}
	_iter_end_205715d5c:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + (*(_55121_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_205717bc7:;
	}
	_iter_end_205717bc7:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_205718689:;
	}
	_iter_end_205718689:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + (*(_55121_flt))._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> (*(_55121_flt))._field_mantbits) == 0LLU)) {
		_55160_exp=(*(_55121_flt))._field_bias;
	};
	jule::I32 _59813_err = static_cast<jule::I32>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55121_flt))._field_mantbits)));
		_55160_exp=static_cast<jule::I32>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << (*(_55121_flt))._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - (*(_55121_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_55121_flt))._field_expbits) - 1LL)))) << (*(_55121_flt))._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << (*(_55121_flt))._field_mantbits) << (*(_55121_flt))._field_expbits);
	};
	if (((*(_55121_flt)) == _21e69e293_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_21e581e67_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_21e58252d_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__21e0a533c_ConvError _21e6aa9b9_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__21e0a533c_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I32 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21e6a7e28_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I32 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I32 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21e6a81c0_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__21e0a533c_ConvError __jule_assign_result = _21e6aa612_atofHex(_61611_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_21e69e293_f32info), _62410_mantissa, _62420_exp, _62425_neg, _62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _21e6aa03a_atof32exact(_62410_mantissa, _62420_exp, _62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _21e6a5e15_eiselLemire32(_62410_mantissa, _62420_exp, _62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _21e6a5e15_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)), _62420_exp, _62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_21e6b1805_decimal _66213_d = _21e6b1805_decimal{};;
	if ((!(_21e6a8874_set(&_66213_d, _61611_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _21e6a8b82_floatBits(&_66213_d, &(_21e69e293_f32info));
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_21e581e67_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__21e0a533c_ConvError _21e6aac61_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__21e0a533c_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I32 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21e6a7e28_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I32 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I32 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21e6a81c0_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__21e0a533c_ConvError __jule_assign_result = _21e6aa612_atofHex(_67411_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_21e69e5a1_f64info), _68210_mantissa, _68220_exp, _68225_neg, _68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _21e6a9b50_atof64exact(_68210_mantissa, _68220_exp, _68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _21e6a5a19_eiselLemire64(_68210_mantissa, _68220_exp, _68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _21e6a5a19_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)), _68220_exp, _68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_21e6b1805_decimal _71913_d = _21e6b1805_decimal{};;
	if ((!(_21e6a8874_set(&_71913_d, _67411_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _21e6a8b82_floatBits(&_71913_d, &(_21e69e5a1_f64info));
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_21e58252d_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__21e0a533c_ConvError _21e6ab0a2_parseFloatPrefix(jule::Str _73121_s, jule::I32 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__21e0a533c_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I32 _73317_n = 0;;
		jule::I32 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__21e0a533c_ConvError __jule_assign_result = _21e6aa9b9_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I32 _73713_n = 0;;
	jule::I32 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__21e0a533c_ConvError __jule_assign_result = _21e6aac61_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _21e6ab3e3_ParseFloat(jule::Str _76515_s, jule::I32 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I32 _76613_n = 0;;
	jule::I32 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__21e0a533c_ConvError __jule_assign_result = _21e6ab0a2_parseFloatPrefix(_76515_s, _76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I32>(0LL)) || (_76616_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
	};
	if ((_76616_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _21e6abb63_ryuFtoaFixed32(_21e69ea02_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _6213_e2 = _4956_exp;;
	jule::I32 _639_b = _21e65c1da_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U32>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I32>(_639_b) - 25LL);
	};
	jule::I32 _749_q = (((-(_21e6ad0a4_mulByLog2Log10(static_cast<jule::I32>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I32 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21e6ae79d_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _21e6aeec9_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I32>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U32 _949_extra = static_cast<jule::U32>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_21e6ac889_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _21e6ac0a3_ryuFtoaFixed64(_21e69ea02_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _13113_e2 = _12156_exp;;
	jule::I32 _1329_b = _21e65c482_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U32>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I32>(_1329_b) - 55LL);
	};
	jule::I32 _1469_q = (((-(_21e6ad0a4_mulByLog2Log10(static_cast<jule::I32>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I32 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21e6aeb88_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _21e6aeec9_divisibleByPow5(_12145_mant, static_cast<jule::I32>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U32 _1669_extra = static_cast<jule::U32>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_21e6ac889_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _21e6ac889_formatDecimal(_21e69ea02_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2019_max = _21e6ac3d3_u64pow10[_20088_prec];;
	jule::I32 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_20574de72:;
	}
	_iter_end_20574de72:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U32 _22913_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I32>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_205752926:;
	}
	_iter_end_205752926:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_20575870c:;
	}
	_iter_end_20575870c:;;
	(*(_20023_d))._field_dp=static_cast<jule::I32>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _21e6acd0c_ryuFtoaShortest(_21e69ea02_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _21e69e062_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_21e656aca_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U32>((-(_26157_exp)));
		_21e6adcca_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I32 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _21e6ad736_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_21e6adcca_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I32 _2799_q = (_21e6ad0a4_mulByLog2Log10(static_cast<jule::I32>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _21e69e293_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21e6ae79d_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21e6ae79d_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21e6ae79d_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21e6aeb88_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21e6aeb88_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21e6aeb88_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_21e6aeec9_divisibleByPow5(_27310_ml, static_cast<jule::I32>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_21e6aeec9_divisibleByPow5(_27314_mc, static_cast<jule::I32>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_21e6aeec9_divisibleByPow5(_27318_mu, static_cast<jule::I32>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U32 _3259_extra = static_cast<jule::U32>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_21e6adcca_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I32 _21e6ad0a4_mulByLog2Log10(jule::I32 _37719_x) {
	return static_cast<jule::I32>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I32 _21e6ad34b_mulByLog10Log2(jule::I32 _38719_x) {
	return static_cast<jule::I32>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _21e6ad736_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _21e69e062_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _21e6adcca_ryuDigits(_21e69ea02_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _21e6b0271_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _21e6b0271_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _21e6b0271_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_21e6ae3b3_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_21e6ae3b3_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _42817_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_20577d017:;
		}
		_iter_end_20577d017:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I32>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>((9LL - _42817_n)));
		_21e6ae3b3_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I32>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_20577d589:;
	}
	_iter_end_20577d589:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_205780613:;
	}
	_iter_end_205780613:;;
}



inline void _21e6ae3b3_ryuDigits32(_21e69ea02_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I32 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I32>((_45554_endindex + 1LL));
		return;;
	};
	jule::I32 _46013_trimmed = 0LL;;
	jule::I32 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_205783a12;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I32>(static_cast<jule::I32>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_205783a12:;
	}
	_iter_end_205783a12:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I32 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_20578a4ca:;
	}
	_iter_end_20578a4ca:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I32>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I32>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _21e6ae79d_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _21e6a6883_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e65e7c5_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_21e6ad34b_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _21e6aeb88_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _21e6a6883_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_21e6ad34b_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e65e7c5_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e65e7c5_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21e65d142_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _21e6aeec9_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_205799440:;
	}
	_iter_end_205799440:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _21e6b0271_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _21e6b2edd_trim(_21e6b1805_decimal* _45314_a) {
	while ((((*(_45314_a))._field_nd > 0LL) && ((*(_45314_a))._field_d[((*(_45314_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_45314_a))._field_nd)--;
		}
	_iter_next_20579ca09:;
	}
	_iter_end_20579ca09:;;
	if (((*(_45314_a))._field_nd == 0LL)) {
		(*(_45314_a))._field_dp=0LL;
	};
}



inline void _21e6b3296_rightShift(_21e6b1805_decimal* _46320_a, jule::U32 _46332_k) {
	jule::I32 _46413_r = 0LL;;
	jule::I32 _46513_w = 0LL;;
	jule::U32 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= (*(_46320_a))._field_nd)) {
				if ((_46813_n == 0LLU)) {
					(*(_46320_a))._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U32>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_2057a12c1:;
				}
				_iter_end_2057a12c1:;;
				goto _iter_end_20579ee18;
			};
			jule::U32 _48213_c = static_cast<jule::U32>((*(_46320_a))._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U32>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_20579ee18:;
	}
	_iter_end_20579ee18:;;
	(*(_46320_a))._field_dp-=(_46413_r - 1LL);
	jule::U32 _4879_mask = static_cast<jule::U32>((static_cast<jule::U32>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < (*(_46320_a))._field_nd); (_46413_r)++) {
		{
			jule::U32 _49113_c = static_cast<jule::U32>((*(_46320_a))._field_d[_46413_r]);;
			jule::U32 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U32>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_2057a3a76:;
	}
	_iter_end_2057a3a76:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U32 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				(*(_46320_a))._field_trunc=true;
			};
			_46813_n=static_cast<jule::U32>((_46813_n * 10LLU));
		}
	_iter_next_2057a3ea5:;
	}
	_iter_end_2057a3ea5:;;
	(*(_46320_a))._field_nd=_46513_w;
	_21e6b2edd_trim(_46320_a);
}



inline jule::Bool _21e6b3708_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I32 _51735_end, jule::Str _51745_s) {
	jule::I32 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_2057a82c8:;
	}
	_iter_end_2057a82c8:;;
	return false;;
}



inline void _21e6b397d_leftShift(_21e6b1805_decimal* _53119_a, jule::U32 _53131_k) {
	jule::I32 _53213_delta = _21e6b1261_leftCheats[static_cast<jule::I32>(_53131_k)]._field_delta;;
	if (_21e6b3708_prefixIsLessThan((*(_53119_a))._field_d, (*(_53119_a))._field_nd, _21e6b1261_leftCheats[static_cast<jule::I32>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I32 _53713_r = (*(_53119_a))._field_nd;;
	jule::I32 _53813_w = ((*(_53119_a))._field_nd + _53213_delta);;
	jule::U32 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U32>((*(_53119_a))._field_d[_53713_r]) - '0') << _53131_k);
			jule::U32 _54513_quo = (_54113_n / 10LLU);;
			jule::U32 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_2057ab81a:;
	}
	_iter_end_2057ab81a:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U32 _55813_quo = (_54113_n / 10LLU);;
			jule::U32 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_2057ae378:;
	}
	_iter_end_2057ae378:;;
	(*(_53119_a))._field_nd+=_53213_delta;
	if (((*(_53119_a))._field_nd >= 800LL)) {
		(*(_53119_a))._field_nd=800LL;
	};
	(*(_53119_a))._field_dp+=_53213_delta;
	_21e6b2edd_trim(_53119_a);
}



inline jule::Bool _21e6b3cbe_shouldRoundUp(_21e6b1805_decimal* _57819_a, jule::I32 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= (*(_57819_a))._field_nd))) {
		return false;;
	};
	if ((((*(_57819_a))._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == (*(_57819_a))._field_nd))) {
		if ((*(_57819_a))._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && ((((*(_57819_a))._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_57819_a))._field_d[_57831_nd] >= '5');;
}



inline jule::Str _21e6b53db_FmtUint(jule::U64 _6012_i, jule::I32 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _21e6b5d37_small(static_cast<jule::I32>(static_cast<jule::I32>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _21e6b660c_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _21e6b5771_FmtInt(jule::I64 _7111_i, jule::I32 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _21e6b5d37_small(static_cast<jule::I32>(static_cast<jule::I32>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _21e6b660c_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _21e6b5a18_Itoa(jule::I32 _809_i) {
	return _21e6b5771_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _21e6b5d37_small(jule::I32 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _21e6b60ce_isPowerOfTwo(jule::I32 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _21e6b660c_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I32 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I32 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U32 _14917_us = static_cast<jule::U32>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U32 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 0LLU))]);
			}
		_iter_next_2057eb67e:;
		}
		_iter_end_2057eb67e:;;
		jule::U32 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(_15913_is)]);
		};
	} else if (_21e6b60ce_isPowerOfTwo(_10141_base)) {
		jule::U32 _17413_shift = (static_cast<jule::U32>(_21e655e3c_TrailingZeros(static_cast<jule::U32>(static_cast<jule::U32>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U32 _17613_m = (static_cast<jule::U32>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>((static_cast<jule::U32>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_205804e5c:;
		}
		_iter_end_205804e5c:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_205807a75:;
		}
		_iter_end_205807a75:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _21e6b78d8_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_205822d9d:;
			{
				return _21e6b6e37_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_205822e14:;
			{
				return _21e6b7201_SysUint;;
			}
		}
		else {
			_case_begin_205823299:;
			{
				return _4515_kind;;
			}
		}
		_match_end_205823750:;
	};
}



inline jule::I32 _21e6b7b80_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_205824762:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_2058247c8:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_205824300:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_205824366:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_2058243cc:;
			{
				return _21e6b6bc3_BitSize;;
			}
		}
		else {
			_case_begin_205823d27:;
			{
				return -1LL;;
			}
		}
		_match_end_205824256:;
	};
}



inline jule::Str _21e6b7e9e_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_205826830:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_205826896:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_205826643:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_2058266a9:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_2058249a4:;
			{
				return jule::Str();;
			}
		}
		_match_end_20582638a:;
	};
}



inline jule::Str _21e6b8246_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_205827ca4:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_205827d1a:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_205827aa6:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_205827b1c:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_205827622:;
			{
				return jule::Str();;
			}
		}
		_match_end_2058274e0:;
	};
}



inline jule::Str _21e6b84dd_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_205829228:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_20582928e:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_205828a96:;
			{
				return jule::Str();;
			}
		}
		_match_end_205828964:;
	};
}



inline jule::Bool _21e6b908d_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _21e6ab3e3_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _21e6b9335_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_20582e272:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_20582d3c5:;
			{
				return 64LLU;;
			}
		}
		_match_end_20582d32b:;
	};
}



inline jule::I32 _21e6b95cc_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_205830152:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_2058301b8:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_20583022e:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_20582e87c:;
			{
				return 64LLU;;
			}
		}
		_match_end_20582e7b1:;
	};
}



inline jule::I32 _21e6b9874_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_205832066:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_2058320cc:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_205832143:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_2058314a5:;
			{
				return 64LLU;;
			}
		}
		_match_end_2058310ba:;
	};
}



inline void _21e6b99d9_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _21d71b014_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_2058331cc:;
				{
					_21e6b6bc3_BitSize=64LLU;
					_21e6b6e37_SysInt=jule::Str("i64", 3);
					_21e6b7201_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_205833254:;
				{
					_21e6b6bc3_BitSize=32LLU;
					_21e6b6e37_SysInt=jule::Str("i32", 3);
					_21e6b7201_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_205833122:;
		};
	};
}



inline void _21e6b9b4e_init(void) {
	_21e6b99d9_UpdateTarget();
}



inline jule::I64 _21e6bd8de_MinI(jule::Str _6113_k) {
	_6113_k=_21e6b78d8_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_2058359c6:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_205835a3c:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_20583550e:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_205835575:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_2058333ec:;
			{
				return 0LL;;
			}
		}
		_match_end_205833650:;
	};
}



inline jule::I64 _21e6bdbca_MaxI(jule::Str _7913_k) {
	_7913_k=_21e6b78d8_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_205837038:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_20583709e:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_205836a60:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_205836ac6:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_205836796:;
			{
				return 0LL;;
			}
		}
		_match_end_2058364aa:;
	};
}



inline jule::U64 _21e6bde72_MaxU(jule::Str _9713_k) {
	_9713_k=_21e6b78d8_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_20583859a:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_205838611:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_2058380c2:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_205838138:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_205837d08:;
			{
				return 0LLU;;
			}
		}
		_match_end_205837a1c:;
	};
}



inline jule::F64 _21e6be181_Min(jule::Str _11512_k) {
	_11512_k=_21e6b78d8_RealKindOf(_11512_k);
	jule::I64 _1179_i = _21e6bd8de_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_20583a5e1:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_20583a657:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_205839b62:;
			{
				return 0LL;;
			}
		}
		_match_end_205839997:;
	};
}



inline jule::F64 _21e6be428_Max(jule::Str _13312_k) {
	_13312_k=_21e6b78d8_RealKindOf(_13312_k);
	jule::I64 _1359_i = _21e6bdbca_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _21e6bde72_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_20583c945:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_20583c9ab:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_20583c505:;
			{
				return 0LL;;
			}
		}
		_match_end_20583bceb:;
	};
}



inline jule::Bool _21e6be879_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _21e6beb65_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _21e6bee0c_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _21e6c022b_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _21e6c04c3_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _21e6c076a_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _21e6c0a12_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _21e6c0d86_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _21e6c112d_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _21e6c13c5_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _21e6c1716_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_205843929:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_205844210:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_205844276:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_205843c04:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_205843c6a:;
			{
				return _21e6be879_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_205843cd1:;
			{
				return _21e6beb65_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_205843d47:;
			{
				return _21e6bee0c_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_205844320:;
			{
				return _21e6c022b_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_205844386:;
			{
				return _21e6c04c3_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_2058443ec:;
			{
				return _21e6c076a_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_205844463:;
			{
				return _21e6c0a12_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_2058444c9:;
			{
				return _21e6c0d86_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_205844540:;
			{
				return _21e6c112d_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_2058445b7:;
			{
				return _21e6c13c5_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_20584463e:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_2058446b6:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_205843ae4:;
			{
				return false;;
			}
		}
		_match_end_2058439b2:;
	};
}



inline jule::Bool _21e6c19ad_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _21e6c1c55_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _21e6c1eec_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _21e6c2294_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _21e6c26e5_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _21e6c298c_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _21e6c2c34_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _21e6c2ecb_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _21e6c331c_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_205844c7c:;
			{
				return _21e6c4351_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_20584c2d4:;
			{
				return _21e6c463c_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_20584c34a:;
			{
				return _21e6c463c_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_20584c3b1:;
			{
				return _21e6c19ad_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_20584c009:;
			{
				return _21e6c1c55_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_20584c070:;
			{
				return _21e6c1eec_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_20584c0d6:;
			{
				return _21e6c2294_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_20584c14c:;
			{
				return _21e6c26e5_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_20584c5e2:;
			{
				return _21e6c298c_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_20584c658:;
			{
				return _21e6c2c34_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_20584c6be:;
			{
				return _21e6c2ecb_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_20584c746:;
			{
				return true;;
			}
		}
		else {
			_case_begin_20584bd94:;
			{
				return false;;
			}
		}
		_match_end_20584bcea:;
	};
}



inline jule::Bool _21e6c4351_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _21e6c463c_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _21e6c48d4_IsInt(jule::Str _4610_k) {
	return (_21e6c4351_IsSigInt(_4610_k) || _21e6c463c_IsUnsigInt(_4610_k));;
}



inline jule::Bool _21e6c4c03_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _21e6c4e9a_IsNum(jule::Str _5610_k) {
	return (_21e6c48d4_IsInt(_5610_k) || _21e6c4c03_IsFloat(_5610_k));;
}



inline jule::Bool _21e6c5242_IsSigNum(jule::Str _6113_k) {
	return (_21e6c4351_IsSigInt(_6113_k) || _21e6c4c03_IsFloat(_6113_k));;
}



inline void _21e6cdb0d_lshiftUnsig(_21e6c53da_Const* _59021_c, _21e6c53da_Const* _59032_x) {
	jule::U64 _5919_l = _21e6c7b5c_AsU64(_59021_c);;
	jule::U64 _5929_r = _21e6c7b5c_AsU64(_59032_x);;
	_21e6c83bb_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _21e6cde0a_rshiftUnsig(_21e6c53da_Const* _59621_c, _21e6c53da_Const* _59632_x) {
	jule::U64 _5979_l = _21e6c7b5c_AsU64(_59621_c);;
	jule::U64 _5989_r = _21e6c7b5c_AsU64(_59632_x);;
	_21e6c83bb_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _221284904_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _221284a36_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I32 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_22129c411_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cbed6_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _22129ba3c_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _22129bd5b_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I32 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_22140d110_strEsqSeq(_4210_bytes, &(_4813_i)));
			} else {
				jule::I32 _5418_r = 0;;
				jule::I32 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cbed6_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_21c5cd34a_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_20590ea06:;
	}
	_iter_end_20590ea06:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _22129c103_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_205913ec2:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_205914038:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_20591409e:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_205914115:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_20591418c:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_205914214:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_20591428b:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_205914313:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_20591438a:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_205914412:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_205913da1:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _22129c411_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I32* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _22129c103_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_20591a083:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _21e6a4991_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_205919923:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _21e6a4991_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_205919989:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _21e6a4991_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_205918647:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _21e6a4991_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_2059185d1:;
	};
}



inline jule::Slice<jule::U8> _22140d110_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I32* _12434_i) {
	jule::I32 _1259_r = _22129c411_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(jule::Str::from_rune(_1259_r));;
}



inline jule::I32 _22150d92a_findFormatPrefix(jule::Slice<jule::U8>* _1022_bytes, jule::I32* _1038_start) {
	jule::I32 _1113_i = (*(_1038_start));;
	while ((_1113_i < (*(_1022_bytes)).len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I32 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cbed6_DecodeRune((*(_1022_bytes)).slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_20594c6d1:;
	}
	_iter_end_20594c6d1:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _221514557_getFormatRange(jule::I32* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I32 _289_start = (*(_2724_i));;
	jule::I32 _2913_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I32 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cbed6_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_205950283:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_2059502e9:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_289_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_20594ee75:;
			};
		}
	_iter_next_20594e54b:;
	}
	_iter_end_20594e54b:;;
	return nullptr;;
}



inline void _221514810_FmtByDefault(jule::Str* _4722_buf, jule::Any* _4733_arg) {
	if (((*(_4733_arg)) == nullptr)) {
		((*(_4722_buf))).append("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ (*(_4733_arg)) };
		
		if (_match_expr.type == &__jule_any_type131) {
			_case_begin_205951273:;
			{
				(*(_4722_buf))+=_21e6a0041_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F32>(&__jule_any_type131))), 'g', -1LL, 32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_205952010:;
			{
				(*(_4722_buf))+=_21e6a0041_FmtFloat(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_2059521b9:;
			{
				(*(_4722_buf))+=_21e6b5771_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I8>(&__jule_any_type132)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_20595130b:;
			{
				(*(_4722_buf))+=_21e6b5771_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I16>(&__jule_any_type133)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_205951b36:;
			{
				(*(_4722_buf))+=_21e6b5771_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_205951b9c:;
			{
				(*(_4722_buf))+=_21e6b5771_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_205952241:;
			{
				(*(_4722_buf))+=_21e6b53db_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U8>(&__jule_any_type130)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_2059522a7:;
			{
				(*(_4722_buf))+=_21e6b53db_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U16>(&__jule_any_type134)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_20595231d:;
			{
				(*(_4722_buf))+=_21e6b53db_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U32>(&__jule_any_type135)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_205952384:;
			{
				(*(_4722_buf))+=_21e6b53db_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_2059523ea:;
			{
				(*(_4722_buf))+=(*(_4733_arg)).cast<jule::Str>(&__jule_any_type5);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_205952461:;
			{
				if ((*(_4733_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					((*(_4722_buf))).append("true", 4);
				} else {
					((*(_4722_buf))).append("false", 5);
				};
			}
		}
		else {
			_case_begin_2059519d2:;
			{
				(*(_4722_buf))+=jule::to_str((*(_4733_arg)));
			}
		}
		_match_end_20595076c:;
	};
}



inline void _221514bd9_applyFmtByDefault(jule::Str* _8627_buf, jule::I32* _8642_j, jule::Slice<jule::Any> _8650_args) {
	jule::Any _879_arg = _8650_args[(*(_8642_j))];;
	((*(_8642_j)))++;
	_221514810_FmtByDefault(_8627_buf, &(_879_arg));
}



inline void _2215150d5_applyFmt(jule::Slice<jule::U8>* _9418_fmt, jule::Str* _9436_buf, jule::I32* _9451_j, jule::Slice<jule::Any> _9459_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_221514bd9_applyFmtByDefault(_9436_buf, _9451_j, _9459_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		((*(_9436_buf))).append("{}", 2);
		return;;
	};
	_21c4e99d6_PushToStrBuffer(_9436_buf, (*(_9418_fmt)));
}



inline jule::Str _2215153e3_Format(jule::Str* _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return (*(_11312_fmt));;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _21c4e9332_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, (*(_11312_fmt)).len());;
	jule::I32 _11913_j = 0LL;;
	jule::I32 _12013_last = 0LL;;
	jule::I32 _12113_i = _22150d92a_findFormatPrefix(&(_11713_fmtBytes), &(_12013_last));;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I32>(_22150d92a_findFormatPrefix(&(_11713_fmtBytes), &(_12113_i)))) {
		{
			_21c4e99d6_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last, _12113_i));
			jule::Slice<jule::U8> _12417_format = _221514557_getFormatRange(&(_12113_i), &(_11713_fmtBytes));;
			if ((_12417_format == nullptr)) {
				goto _iter_next_20595d8bd;
			};
			_2215150d5_applyFmt(&(_12417_format), &(_11813_buf), &(_11913_j), _11322_args);
			if ((_11913_j >= _11322_args.len())) {
				_21c4e99d6_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I32>(_11713_fmtBytes.len());
				goto _iter_end_20595d8bd;
			};
			_12013_last=_12113_i;
		}
	_iter_next_20595d8bd:;
	}
	_iter_end_20595d8bd:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_21c4e99d6_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _2215170c6_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _2215153e3_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _2211dea90_parameterUsesGenerics(jule::Ptr<_2211dbaae_ParamIns>* _38131_p, jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>>* _38146_generics) {
	if (_2211d8abc_IsSelf((*(_38131_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _22146c57b_kindUsesGenerics(&((*(_38131_p)).get()._field_Kind), _38146_generics);;
}



inline jule::Ptr<_221459c50_TypeSymbol> _2211e206a_buildType(jule::Ptr<_2211a478b_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_221426ca5_Value> _2211e2356_buildExpr(jule::Ptr<_2211a8cac_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_22145264e_TypeAlias> _2211e25ed_buildTypeAlias(jule::Ptr<_2211baa5a_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_22145264e_TypeAlias>(_22145264e_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_2211e206a_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_2211c1d08_Field> _2211e291c_buildField(jule::Ptr<_2211be201_FieldDecl> _12319_decl) {
	return jule::new_ptr<_2211c1d08_Field>(_2211c1d08_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_2211e206a_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_2211c1d08_Field>> _2211e2bb4_buildFields(jule::Slice<jule::Ptr<_2211be201_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_2211c1d08_Field>> _13513_fields = jule::Slice<jule::Ptr<_2211c1d08_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c03206:;
		if (it != expr_end) {
			jule::Ptr<_2211be201_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_2211e291c_buildField(_13617_decl));;
			}
			_iter_next_205c03206:;
			++it;
			goto _iter_begin_205c03206;
		}
		_iter_end_205c03206:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_2211c48cc_Struct> _2211e2e5b_buildStruct(jule::Ptr<_2211be9a4_StructDecl> _14220_decl) {
	return jule::new_ptr<_2211c48cc_Struct>(_2211c48cc_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_2211e2bb4_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_2211d8490_Param> _2211e3203_buildParam(jule::Ptr<_2211b4dea_ParamDecl> _15419_decl) {
	return jule::new_ptr<_2211d8490_Param>(_2211d8490_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_2211e206a_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_2211d8490_Param>> _2211e3577_buildParams(jule::Slice<jule::Ptr<_2211b4dea_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_2211d8490_Param>> _16613_params = jule::Slice<jule::Ptr<_2211d8490_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c05d0d:;
		if (it != expr_end) {
			jule::Ptr<_2211b4dea_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_2211e3203_buildParam(_16717_decl));;
			}
			_iter_next_205c05d0d:;
			++it;
			goto _iter_begin_205c05d0d;
		}
		_iter_end_205c05d0d:;
	};
	return _16613_params;;
}



inline jule::Ptr<_2211d7c86_RetType> _2211e381e_buildRetType(jule::Ptr<_2211a789e_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_2211d7c86_RetType>(_2211d7c86_RetType{._field_Kind=_2211e206a_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_2211d9ccc_Fn> _2211e3ab6_buildFn(jule::Ptr<_2211b621a_FnDecl> _18316_decl) {
	return jule::new_ptr<_2211d9ccc_Fn>(_2211d9ccc_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_2211e381e_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_2211e3577_buildParams(&(_18316_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_2211d9ccc_Fn>> _2211e3d5d_buildMethods(jule::Slice<jule::Ptr<_2211b621a_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_2211d9ccc_Fn>> _20213_methods = jule::Slice<jule::Ptr<_2211d9ccc_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c0962a:;
		if (it != expr_end) {
			jule::Ptr<_2211b621a_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_2211e3ab6_buildFn(_20317_decl));;
			}
			_iter_next_205c0962a:;
			++it;
			goto _iter_begin_205c0962a;
		}
		_iter_end_205c0962a:;
	};
	return _20213_methods;;
}



inline jule::Slice<jule::Ptr<_221459c50_TypeSymbol>> _2211e4105_buildTraitInherits(jule::Slice<jule::Ptr<_2211a478b_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_221459c50_TypeSymbol>> _21013_symbols = jule::Slice<jule::Ptr<_221459c50_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c0a7e6:;
		if (it != expr_end) {
			jule::Ptr<_2211a478b_TypeDecl> _21117_it = *it;
			{
				_21013_symbols = jule::alloc_for_append(_21013_symbols,1);_21013_symbols.__push(_2211e206a_buildType(_21117_it));;
			}
			_iter_next_205c0a7e6:;
			++it;
			goto _iter_begin_205c0a7e6;
		}
		_iter_end_205c0a7e6:;
	};
	return _21013_symbols;;
}



inline jule::Ptr<_2211ebeed_Trait> _2211e439c_buildTrait(jule::Ptr<_2211c017a_TraitDecl> _21719_decl) {
	return jule::new_ptr<_2211ebeed_Trait>(_2211ebeed_Trait{._field_Token=_21719_decl.get()._field_Token, ._field_Ident=_21719_decl.get()._field_Ident, ._field_Public=_21719_decl.get()._field_Public, ._field_Inherits=_2211e4105_buildTraitInherits(&(_21719_decl.get()._field_Inherits)), ._field_Methods=_2211e3d5d_buildMethods(&(_21719_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_2211edc8b_EnumItem> _2211e4644_buildEnumItem(jule::Ptr<_2211bc3b9_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_2211edc8b_EnumItem>(_2211edc8b_EnumItem{._field_Token=_22722_decl.get()._field_Token, ._field_Ident=_22722_decl.get()._field_Ident, ._field_Value=_2211e2356_buildExpr(_22722_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_2211edc8b_EnumItem>> _2211e48db_buildEnumItems(jule::Slice<jule::Ptr<_2211bc3b9_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_2211edc8b_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_2211edc8b_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c0cd59:;
		if (it != expr_end) {
			jule::Ptr<_2211bc3b9_EnumItemDecl> _23717_decl = *it;
			{
				_23613_items = jule::alloc_for_append(_23613_items,1);_23613_items.__push(_2211e4644_buildEnumItem(_23717_decl));;
			}
			_iter_next_205c0cd59:;
			++it;
			goto _iter_begin_205c0cd59;
		}
		_iter_end_205c0cd59:;
	};
	return _23613_items;;
}



inline jule::Ptr<_2211ee781_Enum> _2211e4d3c_buildEnum(jule::Ptr<_2211bcde2_EnumDecl> _24318_decl) {
	return jule::new_ptr<_2211ee781_Enum>(_2211ee781_Enum{._field_Token=_24318_decl.get()._field_Token, ._field_Public=_24318_decl.get()._field_Public, ._field_Ident=_24318_decl.get()._field_Ident, ._field_Kind=_2211e206a_buildType(_24318_decl.get()._field_Kind), ._field_Items=_2211e48db_buildEnumItems(&(_24318_decl.get()._field_Items))});;
}



inline jule::Ptr<_2212007b5_TypeEnumItem> _2211e50d4_buildTypeEnumItem(jule::Ptr<_2211bd8e8_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_2212007b5_TypeEnumItem>(_2212007b5_TypeEnumItem{._field_Token=_25326_decl.get()._field_Token, ._field_Ident=_25326_decl.get()._field_Ident, ._field_Kind=_2211e206a_buildType(_25326_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_2212007b5_TypeEnumItem>> _2211e537b_buildTypeEnumItems(jule::Slice<jule::Ptr<_2211bd8e8_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_2212007b5_TypeEnumItem>> _26213_items = jule::Slice<jule::Ptr<_2212007b5_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c10422:;
		if (it != expr_end) {
			jule::Ptr<_2211bd8e8_TypeEnumItemDecl> _26317_decl = *it;
			{
				_26213_items = jule::alloc_for_append(_26213_items,1);_26213_items.__push(_2211e50d4_buildTypeEnumItem(_26317_decl));;
			}
			_iter_next_205c10422:;
			++it;
			goto _iter_begin_205c10422;
		}
		_iter_end_205c10422:;
	};
	return _26213_items;;
}



inline jule::Ptr<_221200d7b_TypeEnum> _2211e5623_buildTypeEnum(jule::Ptr<_2211be003_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_221200d7b_TypeEnum>(_221200d7b_TypeEnum{._field_Token=_26922_decl.get()._field_Token, ._field_Public=_26922_decl.get()._field_Public, ._field_Ident=_26922_decl.get()._field_Ident, ._field_Items=_2211e537b_buildTypeEnumItems(&(_26922_decl.get()._field_Items))});;
}



inline jule::Ptr<_22126b17c_Var> _2211e58ba_buildVar(jule::Ptr<_2211b71e9_VarDecl> _27817_decl) {
	return jule::new_ptr<_22126b17c_Var>(_22126b17c_Var{._field_Token=_27817_decl.get()._field_Token, ._field_Ident=_27817_decl.get()._field_Ident, ._field_CppLinked=_27817_decl.get()._field_CppLinked, ._field_Constant=_27817_decl.get()._field_Constant, ._field_Mutable=_27817_decl.get()._field_Mutable, ._field_Public=_27817_decl.get()._field_Public, ._field_Statically=_27817_decl.get()._field_Statically, ._field_Reference=_27817_decl.get()._field_Reference, ._field_Kind=_2211e206a_buildType(_27817_decl.get()._field_Kind), ._field_Value=_2211e2356_buildExpr(_27817_decl.get()._field_Expr), ._field_Refers=static__2211e0b3a_new(), ._field_Directives=_27817_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_22126b17c_Var>> _2211e5b62_buildVars(jule::Slice<jule::Ptr<_2211b71e9_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_22126b17c_Var>> _29613_vars = jule::Slice<jule::Ptr<_22126b17c_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c134ad:;
		if (it != expr_end) {
			jule::Ptr<_2211b71e9_VarDecl> _29717_decl = *it;
			{
				_29613_vars = jule::alloc_for_append(_29613_vars,1);_29613_vars.__push(_2211e58ba_buildVar(_29717_decl));;
			}
			_iter_next_205c134ad:;
			++it;
			goto _iter_begin_205c134ad;
		}
		_iter_end_205c134ad:;
	};
	return _29613_vars;;
}



inline jule::Ptr<_22121e0ca_Impl> _2211e5e09_buildImpl(jule::Ptr<_2211c0785_Impl> _30318_decl) {
	return jule::new_ptr<_22121e0ca_Impl>(_22121e0ca_Impl{._field_Base=_30318_decl.get()._field_Base, ._field_Dest=_30318_decl.get()._field_Dest, ._field_Methods=_2211e3d5d_buildMethods(&(_30318_decl.get()._field_Methods)), ._field_Statics=_2211e5b62_buildVars(_30318_decl.get()._field_Statics)});;
}



inline jule::Ptr<_221425c2c_Data> _221219e0b_buildAsComptimeMethodData(jule::Ptr<_2211dc97d_FnIns>* _133035_f) {
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>((*(_133035_f)), 1)}), });;
}



inline jule::Ptr<_221242a9e_ImportInfo> _22121a0e8_findComptimePackage(jule::Ptr<_22124ad71_Sema>* _133829_s) {
	return _22124b2e4_SelectPackage((*(_133829_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_221242a9e_ImportInfo>)>([=](jule::Ptr<_221242a9e_ImportInfo> _133928_pkg) mutable -> jule::Bool {
		return _133928_pkg.get()._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_221425c2c_Data> _22121a45b_buildComptimeTypeInfoData(jule::Ptr<_22124ad71_Sema>* _134435_s, jule::Ptr<_221453397_TypeKind>* _134450_t) {
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22124a7dd_pushComptimeTypeInfo((*(_134435_s)).get()._field_meta.ptr(), _134450_t), 15)}), });;
}



inline jule::Ptr<_221425c2c_Data> _22121a78b_buildComptimeValue(jule::Ptr<_221425c2c_Data>* _135228_d) {
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_221217777_comptimeValue>(_221217777_comptimeValue{._field_data=(*(_135228_d))}), 16)}), });;
}



inline jule::Bool _22121d508_matchConstraint(jule::Str* _14221_c, jule::Ptr<_221453397_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_205d73024:;
			{
				jule::Ptr<_22145a5be_Prim> _14513_prim = _221455a92_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _21e6c5242_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_205d74e8d:;
			{
				jule::Ptr<_22145a5be_Prim> _15113_prim = _221455a92_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _21e6c463c_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_205d75004:;
			{
				jule::Ptr<_22145a5be_Prim> _15713_prim = _221455a92_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _21e6c4c03_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_205d7506a:;
			{
				jule::Ptr<_22145a5be_Prim> _16313_prim = _221455a92_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _21e6c4e9a_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_205d73ee2:;
			{
				return _221454b18_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_205d74058:;
			{
				return (!(_221454b18_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_205d740be:;
			{
				return _2214548a4_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_205d74135:;
			{
				return _221454d7c_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_205d74d39:;
			{
				return false;;
			}
		}
		_match_end_205d746c9:;
	};
}



inline jule::Bool _22121d7e4_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_22121b968_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d79aec:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_205d79aec:;
			++it;
			goto _iter_begin_205d79aec;
		}
		_iter_end_205d79aec:;
	};
	return false;;
}



inline jule::Ptr<_22122ac63_scopeChecker> _221221165_newScopeCheckerBase(jule::Ptr<_22124ad71_Sema>* _5829_s, jule::Ptr<_2211dc97d_FnIns> _5843_owner) {
	return jule::new_ptr<_22122ac63_scopeChecker>(_22122ac63_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_221421222_SymbolTable>(), });;
}



inline jule::Ptr<_22122ac63_scopeChecker> _2212214ea_newScopeChecker(jule::Ptr<_22124ad71_Sema>* _6625_s, jule::Ptr<_2211dc97d_FnIns> _6639_owner) {
	jule::Ptr<_22122ac63_scopeChecker> _6713_base = _221221165_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2212299cb_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_221229e4e_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_2212299cb_scopeLabel> _22122183b_findLabelParent(jule::Str _7620_ident, jule::Ptr<_22122ac63_scopeChecker> _7636_scope) {
	jule::Ptr<_2212299cb_scopeLabel> _7713_label = _22122e41a_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_22122e41a_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_205d8e590:;
	}
	_iter_end_205d8e590:;;
	return _7713_label;;
}



inline jule::Bool _221221bc1_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_221224135_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_205d910ec:;
			{
				jule::Ptr<_2211cd9c4_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_2211cd9c4_FnCallExprModel>(&__jule_any_type35);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_205d91174:;
			{
				jule::Ptr<_221425c2c_Data> _9813_d = _9021_Model.cast_ptr<_221425c2c_Data>(&__jule_any_type24);;
				return _221221bc1_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_205d91064:;
	};
	return false;;
}



inline jule::Bool _221222012_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_221224135_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_205d934ea:;
			{
				return ((*(_10421_stmt)).cast_ptr<_221224135_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_205d93572:;
			{
				return ((*(_10421_stmt)).cast_ptr<_221224e7c_InfIter>(&__jule_any_type37).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_205d932db:;
			{
				jule::Ptr<_221225cd5_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_221225cd5_RangeIter>(&__jule_any_type41);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _221221bc1_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_205d93363:;
			{
				jule::Ptr<_221225400_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_221225400_WhileIter>(&__jule_any_type39);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _221221bc1_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _221221bc1_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_205d933da:;
			{
				jule::Ptr<_221227e4c_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_221227e4c_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205d9691b:;
					if (it != expr_end) {
						jule::Ptr<_221228997_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_205d97851:;
								if (it != expr_end) {
									jule::Ptr<_221425c2c_Data> *_12420_expr = it;
									{
										if (_221221bc1_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_205d97851:;
									++it;
									goto _iter_begin_205d97851;
								}
								_iter_end_205d97851:;
							};
						}
						_iter_next_205d9691b:;
						++it;
						goto _iter_begin_205d9691b;
					}
					_iter_end_205d9691b:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_205d91570:;
			{
				jule::Ptr<_221224b91_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_221224b91_Conditional>(&__jule_any_type36);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205d98d08:;
					if (it != expr_end) {
						jule::Ptr<_221224531_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _221221bc1_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_205d98d08:;
						++it;
						goto _iter_begin_205d98d08;
					}
					_iter_end_205d98d08:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_205d915d6:;
			{
				jule::Ptr<_221425c2c_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_221425c2c_Data>(&__jule_any_type24);;
				return _221221bc1_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_205d91509:;
			{
				return false;;
			}
		}
		_match_end_205d914a4:;
	};
}



inline jule::I32 _221222353_countMatchType(jule::Ptr<_221227e4c_Match>* _14720_m, jule::Ptr<_221453397_TypeKind>* _14732_t) {
	jule::I32 _14813_n = 0LL;;
	jule::Str _1499_kind = _221453793_Str((*(_14732_t)).ptr());;
	_julec_label_loop:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d9bc62:;
		if (it != expr_end) {
			jule::Ptr<_221228997_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_205d9bc62;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205d9caa9:;
					if (it != expr_end) {
						jule::Ptr<_221425c2c_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_205d9bc62;
							};
							if ((_1499_kind == _221453793_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_221453397_TypeKind>(&__jule_any_type89).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_205d9caa9:;
						++it;
						goto _iter_begin_205d9caa9;
					}
					_iter_end_205d9caa9:;
				};
			}
			_iter_next_205d9bc62:;
			++it;
			goto _iter_begin_205d9bc62;
		}
		_iter_end_205d9bc62:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_221425c2c_Data>> _2212225ea_getDatasFromTupleData(jule::Ptr<_221425c2c_Data>* _17131_d) {
	if ((_221457731_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type87) {
				_case_begin_205da165c:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_2211d26ed_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
				}
			}
			else {
				_case_begin_205d9e2a3:;
				{
					jule::Ptr<_22146033d_Tuple> _17721_t = _221457731_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_221425c2c_Data>> _17821_r = jule::Slice<jule::Ptr<_221425c2c_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_205da01e9:;
						if (it != expr_end) {
							jule::Ptr<_221453397_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_205da01e9:;
							++it;
							goto _iter_begin_205da01e9;
						}
						_iter_end_205da01e9:;
					};
					return _17821_r;;
				}
			}
			_match_end_205d9e209:;
		};
	} else {
		return jule::Slice<jule::Ptr<_221425c2c_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _221222e36_checkMut(jule::Ptr<_22124ad71_Sema>* _20618_s, jule::Ptr<_221425c2c_Data>* _20629_left, jule::Ptr<_221425c2c_Data> _20646_right, jule::Ptr<_21da1aa0b_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_205da47b4:;
			{
				_22124d747_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _221454b18_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_205da40ee:;
			{
				if (((!_20660_op.get()._field_Kind.equal("=", 1)) && (_221456ee4_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_22124d747_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_205da4088:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_205da3ecd:;
	};
}



inline jule::Bool _2212233ba_checkAssign(jule::Ptr<_22124ad71_Sema>* _22521_s, jule::Ptr<_221425c2c_Data>* _22536_left, jule::Ptr<_221425c2c_Data> _22553_right, jule::Ptr<_21da1aa0b_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2211dc97d_FnIns> _2269_f = _221456c80_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_22124d747_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_2214265e0_IsConst((*(_22536_left)).ptr())) {
			_case_begin_205da90c1:;
			{
				_22124d747_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_22124da66_pushSuggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_205da893e:;
			{
				_22124d747_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_221222e36_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_205da89a5:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_205da88c8:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_205da87a7:;
	};
}



inline jule::Bool _221223662_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_205da6079:;
			{
				return (!((*(_24731_n)).cast_ptr<_2211b3228_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_205daaaea:;
			{
				return true;;
			}
		}
		else {
			_case_begin_205daa974:;
			{
				return false;;
			}
		}
		_match_end_205da8a4e:;
	};
}



inline jule::Bool _221223909_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type47) {
			_case_begin_205dabada:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_205dabb51:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_221425c2c_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type35) {
						_case_begin_205dac437:;
						{
							return true;;
						}
					}
					else {
						_case_begin_205dac7de:;
						{
							return false;;
						}
					}
					_match_end_205dac536:;
				};
			}
		}
		else {
			_case_begin_205daada3:;
			{
				return false;;
			}
		}
		_match_end_205daad4d:;
	};
}



inline jule::Bool _221223ba1_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_205dace1b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_205dac9ed:;
			{
				return false;;
			}
		}
		_match_end_205dac910:;
	};
}



inline jule::Ptr<_22126b17c_Var> _2212402b6_findVarInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>* _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20600e446:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_22126b17c_Var> _4817_v = _221421ad5_FindVar(_4717_f.ptr(), _4649_ident, _4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_20600e446:;
			++it;
			goto _iter_begin_20600e446;
		}
		_iter_end_20600e446:;
	};
	return nullptr;;
}



inline jule::Ptr<_22145264e_TypeAlias> _2212406e5_findTypeAliasInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>* _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060108a9:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_22145264e_TypeAlias> _6017_ta = _221421e8c_FindTypeAlias(_5917_f.ptr(), _5855_ident, _5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_2060108a9:;
			++it;
			goto _iter_begin_2060108a9;
		}
		_iter_end_2060108a9:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211c48cc_Struct> _221240ad0_findStructInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>* _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206011d50:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_2211c48cc_Struct> _7217_s = _221422344_FindStruct(_7117_f.ptr(), _7052_ident, _7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_206011d50:;
			++it;
			goto _iter_begin_206011d50;
		}
		_iter_end_206011d50:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211d9ccc_Fn> _221241042_findFnInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>* _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060132e6:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_2211d9ccc_Fn> _8417_f = _2214226eb_FindFn(_8317_file.ptr(), _8248_ident, _8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_2060132e6:;
			++it;
			goto _iter_begin_2060132e6;
		}
		_iter_end_2060132e6:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211ebeed_Trait> _221241350_findTraitInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>* _9428_files, jule::Str _9451_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206013879:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_2211ebeed_Trait> _9617_t = _221422a09_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_206013879:;
			++it;
			goto _iter_begin_206013879;
		}
		_iter_end_206013879:;
	};
	return nullptr;;
}



inline jule::Ptr<_2211ee781_Enum> _221241691_findEnumInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>* _10627_files, jule::Str _10650_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20601586a:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_2211ee781_Enum> _10817_e = _221422d17_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_20601586a:;
			++it;
			goto _iter_begin_20601586a;
		}
		_iter_end_20601586a:;
	};
	return nullptr;;
}



inline jule::Ptr<_221200d7b_TypeEnum> _2212419d2_findTypeEnumInPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>* _11831_files, jule::Str _11854_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206016b24:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_221200d7b_TypeEnum> _12017_e = _221423125_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_206016b24:;
			++it;
			goto _iter_begin_206016b24;
		}
		_iter_end_206016b24:;
	};
	return nullptr;;
}



inline jule::Any _221241ecc_defByIdentPackage(jule::Slice<jule::Ptr<_221421222_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060180dc:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _221423ea0_defByIdent(_13017_file.ptr(), (*(_12951_ident)), _12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_2060180dc:;
			++it;
			goto _iter_begin_2060180dc;
		}
		_iter_end_2060180dc:;
	};
	return nullptr;;
}



inline jule::Bool _221247994_isStdPackage(jule::Str _35517_f, jule::Str _35525_p) {
	return _21d5d474b_HasPrefix(_35517_f, _21d5de4c0_Join(jule::Slice<jule::Str>::make({_21d71a19a_PathStdlib,_35525_p})));;
}



inline jule::Bool _2212486ed_isValidModelForRef(jule::Any* _1228_m) {
	{
		auto &_match_expr{ (*(_1228_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_206028b03:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_206028b69:;
			{
				jule::Ptr<_2211d1345_StructSubIdentExprModel> _1717_model = (*(_1228_m)).cast_ptr<_2211d1345_StructSubIdentExprModel>(&__jule_any_type71);;
				return _2212486ed_isValidModelForRef(&(_1717_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_206028916:;
			{
				jule::Ptr<_2211d0a5e_TraitSubIdentExprModel> _2017_model = (*(_1228_m)).cast_ptr<_2211d0a5e_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _2212486ed_isValidModelForRef(&(_2017_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_20602897c:;
			{
				jule::Ptr<_2211cc011_UnaryExprModel> _2317_unary = (*(_1228_m)).cast_ptr<_2211cc011_UnaryExprModel>(&__jule_any_type74);;
				if ((!_2317_unary.get()._field_Op.get()._field_Kind.equal("*", 1))) {
					return false;;
				};
				if ((_22145606a_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_221455d06_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _2212486ed_isValidModelForRef(&(_2317_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_206027edc:;
			{
				return false;;
			}
		}
		_match_end_206027e87:;
	};
}



inline _21d6755de_Log _221248b93_compilerErr(jule::Ptr<_21da1aa0b_Token>* _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_21d6755de_Log _4213_log = _21d6755de_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_4117_token)).get()._field_Row, ._field_Column=(*(_4117_token)).get()._field_Column, ._field_Path=(*(_4117_token)).get()._field_File.get()._field_Path, ._field_Text=_21d675a2e_Logf(_4144_fmt, _4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_21da22073_GetRow((*(_4117_token)).get()._field_File.ptr(), (*(_4117_token)).get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _221248ed4_impIsLookupable(jule::Ptr<_221242a9e_ImportInfo>* _5521_i, jule::Str _5537_ident) {
	if ((*(_5521_i)).get()._field_CppLinked) {
		return false;;
	};
	if ((!((*(_5521_i)).get()._field_ImportAll))) {
		if (((*(_5521_i)).get()._field_Selected.len() > 0LL)) {
			return _221245156_existIdent((*(_5521_i)).ptr(), _5537_ident);;
		};
	};
	return (*(_5521_i)).get()._field_ImportAll;;
}



inline void _2212492d1_appendRetVars(jule::Slice<jule::Ptr<_22126b17c_Var>>* _6723_dest, jule::Ptr<_2211dc97d_FnIns>* _6742_f) {
	if ((_2211da23e_IsVoid((*(_6742_f)).get()._field_Decl.ptr()) || ((*(_6742_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_221453397_TypeKind>> _7213_types = _2211ddaa0_Types((*(_6742_f)).ptr());;
	{
		auto expr = &((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206031996:;
		if (it != expr_end) {
			jule::I32 _7310_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> _7317_ident = *it;
			{
				if ((_21da1d2a0_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _21da1d547_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_206031996;
				};
				(*(_6723_dest)) = jule::alloc_for_append((*(_6723_dest)),1);(*(_6723_dest)).__push(jule::new_ptr<_22126b17c_Var>(_22126b17c_Var{._field_Scope=(*(_6742_f)).get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()}), ._field_RetOrder=_7310_i, }));;
			}
			_iter_next_206031996:;
			++it;
			_7310_i++;
			goto _iter_begin_206031996;
		}
		_iter_end_206031996:;
	};
	if ((((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6723_dest)).len() == 1LL))) {
		(*(_6723_dest))[((*(_6723_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _221249589_appendParamVars(jule::Slice<jule::Ptr<_22126b17c_Var>>* _9725_dest, jule::Ptr<_2211dc97d_FnIns>* _9744_f) {
	if (((*(_9744_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9744_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20603567b:;
		if (it != expr_end) {
			jule::Ptr<_2211dbaae_ParamIns> _10217_p = *it;
			{
				if ((_21da1d2a0_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _21da1d547_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_20603567b;
				};
				jule::Ptr<_22126b17c_Var> _10717_v = jule::new_ptr<_22126b17c_Var>(_22126b17c_Var{._field_Scope=(*(_9744_f)).get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(), ._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()}), });;
				{
					
					if (_2211d8abc_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_206038063:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_221452e35_Kind>((*(_9744_f)).get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_2211d8d31_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_2211d8d31_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_22145dd53_Sptr>(_22145dd53_Sptr{._field_Elem=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_CppIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 19);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_206037c99:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_22145e7b0_Slc>(_22145e7b0_Slc{._field_Elem=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_CppIdent=_10217_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 20)});
						}
					}
					else {
						_case_begin_206035d1e:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_206037b78:;
				};
				(*(_9725_dest)) = jule::alloc_for_append((*(_9725_dest)),1);(*(_9725_dest)).__push(_10717_v);;
			}
			_iter_next_20603567b:;
			++it;
			goto _iter_begin_20603567b;
		}
		_iter_end_20603567b:;
	};
}



inline void _221249864_appendGenericTypeAliases(jule::Slice<jule::Ptr<_22145264e_TypeAlias>>* _15734_dest, jule::Ptr<_2211dc97d_FnIns>* _15759_f) {
	jule::I32 _15813_size = (*(_15759_f)).get()._field_Generics.len();;
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=(*(_15759_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15759_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20603d233:;
		if (it != expr_end) {
			jule::I32 _16710_i = it - expr->begin();
			jule::Ptr<_221451b15_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_2211b1a84_GenericDecl> _16817_decl = (*(_15759_f)).get()._field_Decl.get()._field_Generics[_16710_i];;
				(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_22145264e_TypeAlias>(_22145264e_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), }));;
			}
			_iter_next_20603d233:;
			++it;
			_16710_i++;
			goto _iter_begin_20603d233;
		}
		_iter_end_20603d233:;
	};
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_2211c76e3_StructIns> _18017_owner = (*(_15759_f)).get()._field_Owner;;
		{
			auto expr = &(_18017_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20603e850:;
			if (it != expr_end) {
				jule::I32 _18114_i = it - expr->begin();
				jule::Ptr<_221451b15_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_2211b1a84_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_22145264e_TypeAlias>(_22145264e_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), }));;
				}
				_iter_next_20603e850:;
				++it;
				_18114_i++;
				goto _iter_begin_20603e850;
			}
			_iter_end_20603e850:;
		};
	};
}



inline jule::Ptr<_221421222_SymbolTable> _221249bb6_findFile(jule::Slice<jule::Ptr<_221421222_SymbolTable>>* _19518_files, jule::Ptr<_21da20d96_File>* _19542_handler) {
	{
		auto expr = _19518_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206041852:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == (*(_19542_handler)))) {
					return _19617_fl;;
				};
			}
			_iter_next_206041852:;
			++it;
			goto _iter_begin_206041852;
		}
		_iter_end_206041852:;
	};
	return nullptr;;
}



inline void _22124a128_pushSuggestion(_21d6755de_Log* _20430_log, jule::Str _20441_fmt, jule::Slice<jule::Any> _20454_args) {
	_20430_log->_field_Suggestion=_21d675a2e_Logf(_20441_fmt, _20454_args);
}



inline void _221269664_pushImplemented(jule::Ptr<_2211ebeed_Trait> _283824_t, jule::Ptr<_2211c48cc_Struct>* _283840_d) {
	_julec_label_push:;
	{
		
		if ((_283824_t.get()._field_Implemented.len() > 0LL)) {
			_case_begin_20604439e:;
			{
				{
					auto expr = &(_283824_t.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_206045081:;
					if (it != expr_end) {
						jule::Ptr<_2211c48cc_Struct> _284216_s = *it;
						{
							if ((_284216_s == (*(_283840_d)))) {
								goto _match_end_206043e92;
							};
						}
						_iter_next_206045081:;
						++it;
						goto _iter_begin_206045081;
					}
					_iter_end_206045081:;
				};
				goto _case_begin_206044008;
			}
		}
		else {
			_case_begin_206044008:;
			{
				_283824_t.get()._field_Implemented = jule::alloc_for_append(_283824_t.get()._field_Implemented,1);_283824_t.get()._field_Implemented.__push((*(_283840_d)));;
			}
		}
		_match_end_206043e92:;
	};
	{
		auto expr = &(_283824_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206045c63:;
		if (it != expr_end) {
			jule::Ptr<_221459c50_TypeSymbol> _285117_i = *it;
			{
				_221269664_pushImplemented(_221457258_Trait(_285117_i.get()._field_Kind.ptr()), _283840_d);
			}
			_iter_next_206045c63:;
			++it;
			goto _iter_begin_206045c63;
		}
		_iter_end_206045c63:;
	};
}



inline void _22126991c_pushImplements(jule::Ptr<_2211c48cc_Struct>* _285624_s, jule::Ptr<_2211ebeed_Trait> _285640_t) {
	_julec_label_push:;
	{
		
		if (((*(_285624_s)).get()._field_Implements.len() > 0LL)) {
			_case_begin_206046ca8:;
			{
				{
					auto expr = &((*(_285624_s)).get()._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20604798a:;
					if (it != expr_end) {
						jule::Ptr<_2211ebeed_Trait> _286016_b = *it;
						{
							if ((_286016_b == _285640_t)) {
								goto _match_end_20604689b;
							};
						}
						_iter_next_20604798a:;
						++it;
						goto _iter_begin_20604798a;
					}
					_iter_end_20604798a:;
				};
				goto _case_begin_206046912;
			}
		}
		else {
			_case_begin_206046912:;
			{
				(*(_285624_s)).get()._field_Implements = jule::alloc_for_append((*(_285624_s)).get()._field_Implements,1);(*(_285624_s)).get()._field_Implements.__push(_285640_t);;
			}
		}
		_match_end_20604689b:;
	};
	{
		auto expr = &(_285640_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20604866c:;
		if (it != expr_end) {
			jule::Ptr<_221459c50_TypeSymbol> _286917_i = *it;
			{
				_22126991c_pushImplements(_285624_s, _221457258_Trait(_286917_i.get()._field_Kind.ptr()));
			}
			_iter_next_20604866c:;
			++it;
			goto _iter_begin_20604866c;
		}
		_iter_end_20604866c:;
	};
}



inline jule::Bool _22140d75e_traitHasReferenceReceiver(jule::Ptr<_2211ebeed_Trait>* _2631_t) {
	{
		auto expr = &((*(_2631_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2062723e0:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> *_2712_f = it;
			{
				if ((*(_2712_f)).get()._field_Statically) {
					goto _iter_next_2062723e0;
				};
				jule::Ptr<_2211d8490_Param> _3313_p = (*(_2712_f)).get()._field_Params[0LL];;
				if ((_2211d8d31_IsRef(_3313_p.ptr()) && _2211d8abc_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_2062723e0:;
			++it;
			goto _iter_begin_2062723e0;
		}
		_iter_end_2062723e0:;
	};
	return false;;
}



inline jule::Bool _22140da06_floatAssignable(jule::Str _4120_kind, jule::Ptr<_221425c2c_Data>* _4132_d) {
	jule::Str _429_value = _21e6a0041_FmtFloat(static_cast<jule::F64>(_21e6c7dc1_AsF64((*(_4132_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _21e6b908d_CheckBitFloat(_429_value, static_cast<jule::I32>(_21e6b7b80_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _22140dd47_sigAssignable(jule::Str _4618_kind, jule::Ptr<_221425c2c_Data>* _4630_d) {
	jule::F64 _479_min = _21e6be181_Min(_4618_kind);;
	jule::F64 _489_max = _21e6be428_Max(_4618_kind);;
	{
		
		if (_21e6c9a2c_IsF64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_2062783e6:;
			{
				jule::F64 _5113_x = _21e6c7684_ReadF64((*(_4630_d)).get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _21e675e18_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_21e6c92e0_IsU64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_206278a78:;
			{
				jule::F64 _5813_x = _21e6c7dc1_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_21e6c907b_IsI64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_206278b00:;
			{
				jule::F64 _6313_x = _21e6c7dc1_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_206278957:;
	};
	return false;;
}



inline jule::Bool _22140e1cc_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_221425c2c_Data>* _6932_d) {
	jule::F64 _709_max = _21e6be428_Max(_6920_kind);;
	if (((*(_6932_d)).get()._field_IsRune && _6920_kind.equal("u8", 2))) {
		return _221284904_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_21e6c6bd3_ReadI64((*(_6932_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_21e6c9a2c_IsF64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_20627d82a:;
			{
				jule::F64 _7713_x = _21e6c7684_ReadF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _21e675e18_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_21e6c92e0_IsU64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_20627d891:;
			{
				jule::F64 _8713_x = _21e6c7dc1_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_21e6c907b_IsI64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_20627d918:;
			{
				jule::F64 _9213_x = _21e6c7dc1_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_20627d1a9:;
	};
	return false;;
}



inline jule::Bool _22140e51d_intAssignable(jule::Str _9818_kind, jule::Ptr<_221425c2c_Data>* _9830_d) {
	{
		
		if (_21e6c4351_IsSigInt(_9818_kind)) {
			_case_begin_206283049:;
			{
				return _22140dd47_sigAssignable(_9818_kind, _9830_d);;
			}
		}
		else if (_21e6c463c_IsUnsigInt(_9818_kind)) {
			_case_begin_2062828ea:;
			{
				return _22140e1cc_unsigAssignable(_9818_kind, _9830_d);;
			}
		}
		else {
			_case_begin_20627e0de:;
			{
				return false;;
			}
		}
		_match_end_20627e023:;
	};
}



inline jule::Ptr<_221453397_TypeKind> _2214203b9_lenKind(void) {
	return jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)});;
}



inline jule::Ptr<_221171307_Directive> _22144c407_findDirective(jule::Slice<jule::Ptr<_221171307_Directive>>* _421923_directives, jule::Str _421954_d) {
	{
		auto expr = _421923_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2063941d2:;
		if (it != expr_end) {
			jule::Ptr<_221171307_Directive> _422017_dr = *it;
			{
				if ((_422017_dr.get()._field_Tag.get()._field_Kind == _421954_d)) {
					return _422017_dr;;
				};
			}
			_iter_next_2063941d2:;
			++it;
			goto _iter_begin_2063941d2;
		}
		_iter_end_2063941d2:;
	};
	return nullptr;;
}



inline jule::Any _22144c78c_findBuiltinsImport(jule::Str _422823_ident, jule::Ptr<_221242a9e_ImportInfo> _422835_imp) {
	return _221518dec_findPackageBuiltinDef(_422835_imp.get()._field_LinkPath, _422823_ident);;
}



inline void _22144c99b_fitBitsize(jule::Ptr<_221425c2c_Data>* _423520_d) {
	jule::Ptr<_22145a5be_Prim> _423613_prim = _221455a92_Prim((*(_423520_d)).get()._field_Kind.ptr());;
	jule::I32 _42379_z = _21e6b7b80_BitsizeOf(_22145a932_Str(_423613_prim.ptr()));;
	if ((_42379_z == 64LLU)) {
		return;;
	};
	jule::I32 _424213_k = 0LL;;
	{
		
		if (_21e6c907b_IsI64((*(_423520_d)).get()._field_Constant.ptr())) {
			_case_begin_206396ca6:;
			{
				_424213_k=static_cast<jule::I32>(_21e6b95cc_BitsizeOfInt(static_cast<jule::I64>(_21e6c6bd3_ReadI64((*(_423520_d)).get()._field_Constant.ptr()))));
				if ((_424213_k > _42379_z)) {
					_423613_prim.get()._field_Kind=_21e6b7e9e_IntFromBits(_424213_k);
				};
			}
		}
		else if (_21e6c92e0_IsU64((*(_423520_d)).get()._field_Constant.ptr())) {
			_case_begin_206396d2d:;
			{
				_424213_k=static_cast<jule::I32>(_21e6b9874_BitsizeOfUint(static_cast<jule::U64>(_21e6c6e47_ReadU64((*(_423520_d)).get()._field_Constant.ptr()))));
				if ((_424213_k > _42379_z)) {
					_423613_prim.get()._field_Kind=_21e6b8246_UintFromBits(_424213_k);
				};
			}
		}
		else if (_21e6c9a2c_IsF64((*(_423520_d)).get()._field_Constant.ptr())) {
			_case_begin_206396da5:;
			{
				_424213_k=static_cast<jule::I32>(_21e6b9335_BitsizeOfFloat(static_cast<jule::F64>(_21e6c7684_ReadF64((*(_423520_d)).get()._field_Constant.ptr()))));
				if ((_424213_k > _42379_z)) {
					_423613_prim.get()._field_Kind=_21e6b84dd_FloatFromBits(_424213_k);
				};
			}
		}
		_match_end_206396bda:;
	};
}



inline void _22144cc98_makeStructLitAlloc(jule::Ptr<_221425c2c_Data>* _426228_d, jule::Ptr<_2211cc7b4_StructLitExprModel>* _426243_lit) {
	(*(_426228_d)).get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_22145dd53_Sptr>(_22145dd53_Sptr{._field_Elem=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>((*(_426243_lit)).get()._field_Strct, 0)})}), 19)});
	(*(_426228_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211ccac2_AllocStructLitExprModel>(_2211ccac2_AllocStructLitExprModel{._field_Lit=(*(_426243_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_22126b17c_Var> _22144d0d9_buildErrorVar(jule::Ptr<_221224135_Scope>* _427323_s, jule::Ptr<_2211acc8e_FnCallExpr>* _427339_fc) {
	return jule::new_ptr<_22126b17c_Var>(_22126b17c_Var{._field_Scope=(*(_427323_s)), ._field_Token=(*(_427339_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("any", 3)), 18)})}), ._field_Value=jule::new_ptr<_221426ca5_Value>(_221426ca5_Value{._field_Data=jule::new_ptr<_221425c2c_Data>()}), });;
}



inline jule::Any _22144d42a_findBuiltinsSema(jule::Str _429221_ident, jule::Ptr<_22124ad71_Sema> _429237_s) {
	{
		auto expr = &(_429237_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20639b4a3:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _429317_imp = *it;
			{
				if ((_429317_imp.get()._field_ImportAll || _221245156_existIdent(_429317_imp.ptr(), _429221_ident))) {
					jule::Any _429521_def = _22144c78c_findBuiltinsImport(_429221_ident, _429317_imp);;
					if ((_429521_def != nullptr)) {
						return _429521_def;;
					};
				};
			}
			_iter_next_20639b4a3:;
			++it;
			goto _iter_begin_20639b4a3;
		}
		_iter_end_20639b4a3:;
	};
	jule::Str _430313_ppath = _21da2178c_Dir(_429237_s.get()._field_file.get()._field_File.ptr());;
	if (_21d5d474b_HasPrefix(_430313_ppath, _21d71a19a_PathStdlib)) {
		(_430313_ppath).mut_slice(_21d71a19a_PathStdlib.len());;
		_430313_ppath=(jule::Str("std", 3) + _21d5da741_Replace(_430313_ppath, jule::Str::from_byte(92LL), jule::Str("::", 2), -1LL));
		return _221518dec_findPackageBuiltinDef(_430313_ppath, _429221_ident);;
	};
	return nullptr;;
}



inline jule::Bool _22144d6c2_isOkForShifting(jule::Ptr<_221425c2c_Data>* _431725_d) {
	if (_2214265e0_IsConst((*(_431725_d)).ptr())) {
		{
			
			if (_21e6c907b_IsI64((*(_431725_d)).get()._field_Constant.ptr())) {
				_case_begin_2063a0dd1:;
				{
					return (_21e6c6bd3_ReadI64((*(_431725_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_21e6c92e0_IsU64((*(_431725_d)).get()._field_Constant.ptr())) {
				_case_begin_2063a070a:;
				{
					return true;;
				}
			}
			else if (_21e6c9a2c_IsF64((*(_431725_d)).get()._field_Constant.ptr())) {
				_case_begin_2063a0771:;
				{
					return (_21e6c7684_ReadF64((*(_431725_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_2063a0694:;
				{
					return false;;
				}
			}
			_match_end_2063a05c8:;
		};
	};
	jule::Ptr<_22145a5be_Prim> _43309_prim = _221455a92_Prim((*(_431725_d)).get()._field_Kind.ptr());;
	return ((_43309_prim != nullptr) && _21e6c48d4_IsInt(_22145a932_Str(_43309_prim.ptr())));;
}



inline jule::Bool _22144da79_isInstancedStruct(jule::Ptr<_2211c76e3_StructIns> _433422_s) {
	return (_433422_s.get()._field_Decl.get()._field_Generics.len() == _433422_s.get()._field_Generics.len());;
}



inline jule::Bool _22144dddc_isPtrArithmeticCompatible(jule::Ptr<_221425c2c_Data>* _433835_l, jule::Ptr<_221425c2c_Data>* _433850_r) {
	jule::Ptr<_2214623b7_Ptr> _43399_ptr = _22145606a_Ptr((*(_433850_r)).get()._field_Kind.ptr());;
	if ((_43399_ptr != nullptr)) {
		return _221453aa1_Equal(_22145606a_Ptr((*(_433835_l)).get()._field_Kind.ptr()).get()._field_Elem, _43399_ptr.get()._field_Elem);;
	};
	if (_2214265e0_IsConst((*(_433850_r)).ptr())) {
		return _22140e51d_intAssignable(jule::Str("int", 3), _433850_r);;
	};
	_22140e9c4_typeCompatibilityChecker _434613_tcc = _22140e9c4_typeCompatibilityChecker{._field_dest=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)}), ._field_src=(*(_433850_r)).get()._field_Kind, };;
	return _2214110ad_check(&_434613_tcc);;
}



inline void _22144e12e_applyCastKindModel(jule::Ptr<_221425c2c_Data>* _435528_d, jule::Ptr<_221453397_TypeKind>* _435543_t) {
	(*(_435528_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211cd122_CastingExprModel>(_2211cd122_CastingExprModel{._field_Expr=(*(_435528_d)).get()._field_Model, ._field_Kind=(*(_435543_t)), ._field_ExprKind=(*(_435528_d)).get()._field_Kind}), &__jule_any_type98);
}



inline void _22144e3d7_applyCastKind(jule::Ptr<_221425c2c_Data>* _436323_d, jule::Ptr<_221453397_TypeKind>* _436338_t) {
	_22144e12e_applyCastKindModel(_436323_d, _436338_t);
	(*(_436323_d)).get()._field_Kind=(*(_436338_t));
}



inline jule::Ptr<_221425c2c_Data> _22144e5d5_buildVoidData(void) {
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=_22146e902_buildVoidType(), });;
}



inline jule::Str _22144e89e_checkDataForIntegerIndexing(jule::Ptr<_221425c2c_Data>* _437437_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_437437_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_221455a92_Prim((*(_437437_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_2063a7b0d:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_21e6c48d4_IsInt(_22145a932_Str(_221455a92_Prim((*(_437437_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_2063a7b74:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_2214265e0_IsConst((*(_437437_d)).ptr())) {
			_case_begin_2063a7bda:;
			{
				if ((_21e6c7dc1_AsF64((*(_437437_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_221455a92_Prim((*(_437437_d)).get()._field_Kind.ptr()) == nullptr) || _2214265e0_IsConst((*(_437437_d)).ptr()) || (_21e6b78d8_RealKindOf(_22145a932_Str(_221455a92_Prim((*(_437437_d)).get()._field_Kind.ptr()).ptr())) != _21e6b78d8_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_2063a7c51:;
			{
				jule::Ptr<_221453397_TypeKind> _439117_t = jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)});;
				_22144e3d7_applyCastKind(_437437_d, &(_439117_t));
			}
		}
		_match_end_2063a7734:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _22144eb68_applyCastModelByEnum(jule::Ptr<_221425c2c_Data>* _440030_d, jule::Ptr<_2211ee781_Enum> _440044_e) {
	if ((_440044_e == nullptr)) {
		return;;
	};
	jule::Ptr<_22145a5be_Prim> _44049_p = _221455a92_Prim(_440044_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_22145d803_IsStr(_44049_p.ptr())) {
		return;;
	};
	_22144e12e_applyCastKindModel(_440030_d, &(_440044_e.get()._field_Kind.get()._field_Kind));
}



inline void _22144ee21_castConstByType(jule::Str* _441121_t, jule::Ptr<_221425c2c_Data>* _441134_d) {
	{
		
		if (_21e6c4351_IsSigInt((*(_441121_t)))) {
			_case_begin_2063acc01:;
			{
				{
					auto _match_expr{ _21e6b7b80_BitsizeOf(_21e6b78d8_RealKindOf((*(_441121_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_2063ad84a:;
						{
							_21e6c8146_SetI64((*(_441134_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_21e6c78e8_AsI64((*(_441134_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_2063ad8c2:;
						{
							_21e6c8146_SetI64((*(_441134_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_21e6c78e8_AsI64((*(_441134_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_2063ad938:;
						{
							_21e6c8146_SetI64((*(_441134_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_21e6c78e8_AsI64((*(_441134_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_2063ad99e:;
						{
							_21e6c8146_SetI64((*(_441134_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_21e6c78e8_AsI64((*(_441134_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_2063ace87:;
				};
			}
		}
		else if (_21e6c463c_IsUnsigInt((*(_441121_t)))) {
			_case_begin_2063acc78:;
			{
				{
					auto _match_expr{ _21e6b7b80_BitsizeOf(_21e6b78d8_RealKindOf((*(_441121_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_2063b1a6d:;
						{
							_21e6c83bb_SetU64((*(_441134_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_21e6c7b5c_AsU64((*(_441134_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_2063b1b39:;
						{
							_21e6c83bb_SetU64((*(_441134_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_21e6c7b5c_AsU64((*(_441134_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_2063b1ba0:;
						{
							_21e6c83bb_SetU64((*(_441134_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_21e6c7b5c_AsU64((*(_441134_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_2063b1c16:;
						{
							_21e6c83bb_SetU64((*(_441134_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_21e6c7b5c_AsU64((*(_441134_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_2063b0363:;
				};
			}
		}
		else if (_21e6c4c03_IsFloat((*(_441121_t)))) {
			_case_begin_2063acd00:;
			{
				{
					auto _match_expr{ _21e6b7b80_BitsizeOf(_21e6b78d8_RealKindOf((*(_441121_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_2063b4c91:;
						{
							_21e6c8b3b_SetF64((*(_441134_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_21e6c7dc1_AsF64((*(_441134_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_2063b4d18:;
						{
							_21e6c8b3b_SetF64((*(_441134_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_21e6c7dc1_AsF64((*(_441134_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_2063b41e1:;
				};
			}
		}
		_match_end_2063acad0:;
	};
}



inline void _22145042c_updateModelToGenericIns(jule::Any* _444533_m, jule::Ptr<_2211dc97d_FnIns>* _444552_f) {
	{
		auto &_match_expr{ (*(_444533_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2063ae939:;
			{
				(*(_444533_m))=jule::Any((*(_444552_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_2063b5c3c:;
			{
				(*(_444533_m)).cast_ptr<_2211d1345_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_444552_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_2063b5ca3:;
			{
				(*(_444533_m)).cast_ptr<_2211d16db_StructStaticIdentExprModel>(&__jule_any_type101).get()._field_Method=(*(_444552_f));
			}
		}
		_match_end_2063ad383:;
	};
}



inline jule::Bool _22145066e_pushSubIdentFromExpr(jule::Any _445629_expr, jule::Ptr<_2211a54a1_SubIdentTypeDecl>* _445650_t) {
	{
		auto &_match_expr{ _445629_expr };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_2063b828e:;
			{
				jule::Ptr<_2211aa96d_IdentExpr> _445917_e = _445629_expr.cast_ptr<_2211aa96d_IdentExpr>(&__jule_any_type85);;
				(*(_445650_t)).get()._field_Idents = jule::alloc_for_append((*(_445650_t)).get()._field_Idents,1);(*(_445650_t)).get()._field_Idents.__push(jule::new_ptr<_2211a4d52_IdentTypeDecl>(_2211a4d52_IdentTypeDecl{._field_Token=_445917_e.get()._field_Token, ._field_Ident=_445917_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_2063b8305:;
			{
				jule::Ptr<_2211ac211_SubIdentExpr> _446517_e = _445629_expr.cast_ptr<_2211ac211_SubIdentExpr>(&__jule_any_type91);;
				if ((!(_22145066e_pushSubIdentFromExpr(_446517_e.get()._field_Expr.get()._field_Kind, _445650_t)))) {
					return false;;
				};
				(*(_445650_t)).get()._field_Idents = jule::alloc_for_append((*(_445650_t)).get()._field_Idents,1);(*(_445650_t)).get()._field_Idents.__push(jule::new_ptr<_2211a4d52_IdentTypeDecl>(_2211a4d52_IdentTypeDecl{._field_Token=_446517_e.get()._field_Ident, ._field_Ident=_446517_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_2063b6b50:;
			{
				return false;;
			}
		}
		_match_end_2063b7c3e:;
	};
	return true;;
}



inline jule::Str _221450916_constoa(jule::Ptr<_21e6c53da_Const>* _447913_c) {
	{
		
		if (_21e6c907b_IsI64((*(_447913_c)).ptr())) {
			_case_begin_2063bae84:;
			{
				return _21e6b5771_FmtInt(static_cast<jule::I64>(_21e6c6bd3_ReadI64((*(_447913_c)).ptr())), 10LL);;
			}
		}
		else if (_21e6c92e0_IsU64((*(_447913_c)).ptr())) {
			_case_begin_2063bb094:;
			{
				return _21e6b53db_FmtUint(static_cast<jule::U64>(_21e6c6e47_ReadU64((*(_447913_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_2063b84e2:;
			{
				return jule::Str();;
			}
		}
		_match_end_2063b80c4:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221450c57_evalEnumStatic(jule::Ptr<_2211ee781_Enum>* _449024_enm, jule::Ptr<_2211edc8b_EnumItem>* _449041_item) {
	jule::Ptr<_221425c2c_Data> _449113_d = jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>((*(_449024_enm)), 3)}), });;
	if (((*(_449041_item)) != nullptr)) {
		_449113_d.get()._field_Constant=jule::new_ptr<_21e6c53da_Const>((*((*(_449041_item)).get()._field_Value.get()._field_Data.get()._field_Constant)));
		_449113_d.get()._field_Model=jule::Any(_449113_d.get()._field_Constant, &__jule_any_type19);
		_22144eb68_applyCastModelByEnum(&(_449113_d), (*(_449024_enm)));
	};
	return _449113_d;;
}



inline jule::Bool _22146c57b_kindUsesGenerics(jule::Ptr<_221453397_TypeKind>* _173526_k, jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>>* _173541_generics) {
	{
		auto expr = _173541_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20682351d:;
		if (it != expr_end) {
			jule::Ptr<_2211b1a84_GenericDecl> *_173612_g = it;
			{
				if (static__22146c180_exist(&((*(_173612_g)).get()._field_Ident), _173526_k)) {
					return true;;
				};
			}
			_iter_next_20682351d:;
			++it;
			goto _iter_begin_20682351d;
		}
		_iter_end_20682351d:;
	};
	return false;;
}



inline jule::Bool _22146c911_hasDirective(jule::Slice<jule::Ptr<_221171307_Directive>>* _174522_directives, jule::Str _174553_tag) {
	{
		auto expr = _174522_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206823b4a:;
		if (it != expr_end) {
			jule::Ptr<_221171307_Directive> _174617_dr = *it;
			{
				if ((_174617_dr.get()._field_Tag.get()._field_Kind == _174553_tag)) {
					return true;;
				};
			}
			_iter_next_206823b4a:;
			++it;
			goto _iter_begin_206823b4a;
		}
		_iter_end_206823b4a:;
	};
	return false;;
}



inline jule::Bool _22146cba8_canGetPtr(jule::Ptr<_221425c2c_Data>* _175419_d) {
	if (((!((*(_175419_d)).get()._field_Lvalue)) || _2214265e0_IsConst((*(_175419_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_221456c80_Fn((*(_175419_d)).get()._field_Kind.ptr()) != nullptr) || (_2214562ce_Enum((*(_175419_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_20682608c:;
			{
				return false;;
			}
		}
		else {
			_case_begin_2068258d8:;
			{
				return true;;
			}
		}
		_match_end_206825883:;
	};
}



inline jule::Bool _22146cec7_isValidForSptrType(jule::Ptr<_221453397_TypeKind>* _176728_t) {
	jule::Ptr<_2211c76e3_StructIns> _176813_s = _221456ee4_Struct((*(_176728_t)).ptr());;
	if ((((_176813_s != nullptr) && (_176813_s.get()._field_Decl != nullptr)) && _176813_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _22146d26e_isValidForRef(jule::Ptr<_221453397_TypeKind>* _177623_t) {
	return (_221456c80_Fn((*(_177623_t)).ptr()) == nullptr);;
}



inline jule::Bool _22146d538_isBuiltinStrConvertable(jule::Ptr<_221453397_TypeKind>* _177933_t) {
	return ((((!(_221454640_Void((*(_177933_t)).ptr()))) && (_221456c80_Fn((*(_177933_t)).ptr()) == nullptr)) && (_221457731_Tup((*(_177933_t)).ptr()) == nullptr)) && (!(_221457995_comptime((*(_177933_t)).ptr()))));;
}



inline jule::Str _22146d7ad_buildLinkPathByTokens(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _178327_tokens) {
	jule::Str _178413_s = (*(_178327_tokens))[0LL].get()._field_Kind;;
	{
		auto expr = (*(_178327_tokens)).slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_206829e81:;
		if (it != expr_end) {
			jule::Ptr<_21da1aa0b_Token> *_178512_token = it;
			{
				(_178413_s).append("::", 2);
				_178413_s+=(*(_178512_token)).get()._field_Kind;
			}
			_iter_next_206829e81:;
			++it;
			goto _iter_begin_206829e81;
		}
		_iter_end_206829e81:;
	};
	return _178413_s;;
}



inline jule::Ptr<_22145a5be_Prim> _22146db65_buildPrimType(jule::Str _179218_kind) {
	return jule::new_ptr<_22145a5be_Prim>(_22145a5be_Prim{._field_Kind=_179218_kind});;
}



inline jule::Ptr<_2211c48cc_Struct> _22146de0c_getStructFromKind(jule::Ptr<_221453397_TypeKind> _179826_k) {
	{
		
		if ((_179826_k == nullptr)) {
			_case_begin_20682b1a2:;
			{
				return nullptr;;
			}
		}
		else if ((_221456ee4_Struct(_179826_k.ptr()) != nullptr)) {
			_case_begin_20682b218:;
			{
				return _221456ee4_Struct(_179826_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_221455d06_Sptr(_179826_k.ptr()) != nullptr)) {
			_case_begin_20682b27e:;
			{
				return _22146de0c_getStructFromKind(_221455d06_Sptr(_179826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_221456a1b_Slc(_179826_k.ptr()) != nullptr)) {
			_case_begin_20682b2e5:;
			{
				return _22146de0c_getStructFromKind(_221456a1b_Slc(_179826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_2214567a7_Arr(_179826_k.ptr()) != nullptr)) {
			_case_begin_20682b57b:;
			{
				return _22146de0c_getStructFromKind(_2214567a7_Arr(_179826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_22145606a_Ptr(_179826_k.ptr()) != nullptr)) {
			_case_begin_20682b5e2:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_20682b13b:;
			{
				return nullptr;;
			}
		}
		_match_end_20682a68a:;
	};
}



inline jule::Bool _22146e1a4_isPrim(jule::Str _182111_kind) {
	return (((((((((((((((_182111_kind.equal("i8", 2) || _182111_kind.equal("i16", 3)) || _182111_kind.equal("i32", 3)) || _182111_kind.equal("i64", 3)) || _182111_kind.equal("u8", 2)) || _182111_kind.equal("u16", 3)) || _182111_kind.equal("u32", 3)) || _182111_kind.equal("u64", 3)) || _182111_kind.equal("f32", 3)) || _182111_kind.equal("f64", 3)) || _182111_kind.equal("int", 3)) || _182111_kind.equal("uint", 4)) || _182111_kind.equal("uintptr", 7)) || _182111_kind.equal("bool", 4)) || _182111_kind.equal("str", 3)) || _182111_kind.equal("any", 3));;
}



inline void _22146e45c_applyImplicitCast(jule::Ptr<_221453397_TypeKind>* _184027_dest, jule::Ptr<_221425c2c_Data>* _184049_d) {
	if (_2214543cb_IsNil((*(_184049_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_22145a5be_Prim> _18449_destPrim = _221455a92_Prim((*(_184027_dest)).ptr());;
	jule::Ptr<_22145a5be_Prim> _18459_prim = _221455a92_Prim((*(_184049_d)).get()._field_Kind.ptr());;
	if ((_18449_destPrim != nullptr)) {
		if (_22145da67_IsAny(_18449_destPrim.ptr())) {
			if (((_18459_prim == nullptr) || (!(_22145da67_IsAny(_18459_prim.ptr()))))) {
				_22144e3d7_applyCastKind(_184049_d, _184027_dest);
			};
			return;;
		};
		if (((((((!(_221454167_CppLinked((*(_184049_d)).get()._field_Kind.ptr()))) && (!((*(_184049_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_184049_d)).get()._field_Lvalue))) && (!(_2214265e0_IsConst((*(_184049_d)).ptr())))) && (_18459_prim != nullptr)) && _21e6c4e9a_IsNum(_18459_prim.get()._field_Kind))) {
			_22144e3d7_applyCastKind(_184049_d, _184027_dest);
		};
		return;;
	};
	jule::Ptr<_2211ebeed_Trait> _18649_dt = _221457258_Trait((*(_184027_dest)).ptr());;
	if ((_18649_dt != nullptr)) {
		jule::Ptr<_2211ebeed_Trait> _186613_bt = _221457258_Trait((*(_184049_d)).get()._field_Kind.ptr());;
		if (((_186613_bt == nullptr) || (_186613_bt != _18649_dt))) {
			_22144e12e_applyCastKindModel(_184049_d, _184027_dest);
			return;;
		};
	};
	if (((_221456543_TypeEnum((*(_184027_dest)).ptr()) != nullptr) && (_221456543_TypeEnum((*(_184049_d)).get()._field_Kind.ptr()) == nullptr))) {
		_22144e12e_applyCastKindModel(_184049_d, _184027_dest);
		return;;
	};
}



inline jule::Bool _22146e704_validTypeForXof(jule::Ptr<_221453397_TypeKind>* _187925_t) {
	return ((!(_221454640_Void((*(_187925_t)).ptr()))) && (_221456c80_Fn((*(_187925_t)).ptr()) == nullptr));;
}



inline jule::Ptr<_221453397_TypeKind> _22146e902_buildVoidType(void) {
	static jule::Ptr<_221453397_TypeKind> _188416_void = jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("void", 4)), 18)});;
	return _188416_void;;
}



inline __jule_tuple_x_221421222_SymbolTable__jule_tuple_s_21d6755de_Log _2214726a2_buildSymbols(jule::Ptr<_22117005e_Ast>* _1622_ast, jule::Trait<_22123eded_Importer>* _1638_importer, jule::Ptr<_2211e6459_symbolBuilder> _1662_owner) {
	__jule_tuple_x_221421222_SymbolTable__jule_tuple_s_21d6755de_Log __jule_func_result;
	jule::Ptr<_2211e6459_symbolBuilder> _1713_sb = jule::new_ptr<_2211e6459_symbolBuilder>(_2211e6459_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_2211eb409_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_2212456d9_Package__jule_tuple_s_21d6755de_Log _221472ad1_analyzePackage(jule::Slice<jule::Ptr<_22117005e_Ast>>* _3024_files, jule::Trait<_22123eded_Importer>* _3044_importer, jule::I32* _3065_flags) {
	__jule_tuple_x_2212456d9_Package__jule_tuple_s_21d6755de_Log __jule_func_result;
	jule::Slice<jule::Ptr<_221421222_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_221421222_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20754ae15:;
		if (it != expr_end) {
			jule::Ptr<_22117005e_Ast> _3317_f = *it;
			{
				jule::Ptr<_221421222_SymbolTable> _3418_table;;
				jule::Slice<_21d6755de_Log> _3429_errors;;
				({
					__jule_tuple_x_221421222_SymbolTable__jule_tuple_s_21d6755de_Log __jule_assign_result = _2214726a2_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_20754ae15:;
			++it;
			goto _iter_begin_20754ae15;
		}
		_iter_end_20754ae15:;
	};
	jule::Ptr<_22124ad71_Sema> _4113_sema = jule::new_ptr<_22124ad71_Sema>(_22124ad71_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_22124a359_commonSemaMeta>()});;
	_221267a6e_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_2212456d9_Package> _5013_pkg = jule::new_ptr<_2212456d9_Package>(_2212456d9_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _5013_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_2212456d9_Package__jule_tuple_s_21d6755de_Log _221472ebb_AnalyzePackage(jule::Slice<jule::Ptr<_22117005e_Ast>> _7423_files, jule::Trait<_22123eded_Importer> _7442_importer, jule::I32 _7462_flags) {
	__jule_tuple_x_2212456d9_Package__jule_tuple_s_21d6755de_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_2212456d9_Package> _7814_package;;
	jule::Slice<_21d6755de_Log> _7827_logs;;
	({
		__jule_tuple_x_2212456d9_Package__jule_tuple_s_21d6755de_Log __jule_assign_result = _221472ad1_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_7814_package = __jule_assign_result.__jule_result_arg0;
		_7827_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7814_package;
	__jule_func_result.__jule_result_arg1 = _7827_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_2211dc97d_FnIns> _22151788a_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_207555161:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _2620_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_22151a294_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_207551888:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _2920_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_22151a67e_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_20755522c:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _3220_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_22151aa69_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_207555293:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _3520_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_22151b185_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_207554c65:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _3820_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_22151b570_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_207554cdc:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _4120_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_22151b95a_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_207554d64:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _4420_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_22151c75d_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_207554ddb:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _4720_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_22151d95c_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_20755531a:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _5020_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_22151e4c9_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_207555392:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _5320_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_22151ed48_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_207555419:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _5620_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_22152040e_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_207555491:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _5920_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_221520750_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_207554b66:;
			{
				return nullptr;;
			}
		}
		_match_end_207554a34:;
	};
}



inline jule::Ptr<_22145264e_TypeAlias> _221517abb_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_20755ca81:;
			{
				static jule::Ptr<_22145264e_TypeAlias> _6920_t = jule::new_ptr<_22145264e_TypeAlias>(_22145264e_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("u8", 2)), 18)})}), });;
				return _6920_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_20755cae7:;
			{
				static jule::Ptr<_22145264e_TypeAlias> _7920_t = jule::new_ptr<_22145264e_TypeAlias>(_22145264e_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_221459c50_TypeSymbol>(_221459c50_TypeSymbol{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("i32", 3)), 18)})}), });;
				return _7920_t;;
			}
		}
		else {
			_case_begin_20755c4ba:;
			{
				return nullptr;;
			}
		}
		_match_end_20755bee2:;
	};
}



inline jule::Any _221517d63_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_2211dc97d_FnIns> _9413_f = _22151788a_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f, &__jule_any_type7);;
	};
	jule::Ptr<_22145264e_TypeAlias> _9813_ta = _221517abb_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _221518182_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_207561238:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _10820_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_221522e8e_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_20756129e:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _11120_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_221523379_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_2075608ec:;
			{
				return nullptr;;
			}
		}
		_match_end_207560897:;
	};
}



inline jule::Any _221518429_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_207562ab9:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _12120_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_2215218b6_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_207562b30:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _12420_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_221521cd4_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_2075628dd:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _12720_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_221522202_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_2075626bd:;
			{
				return nullptr;;
			}
		}
		_match_end_207561e4d:;
	};
}



inline jule::Any _2215186e3_findBuiltinDefStdComptime(jule::Str _13430_ident) {
	{
		auto &_match_expr{ _13430_ident };
		
		if (_match_expr == jule::Str("TypeOf", 6)) {
			_case_begin_207564d85:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _13720_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_221520b5c_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_13720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("ValueOf", 7)) {
			_case_begin_207564deb:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _14020_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_22152107a_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_14020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Range", 5)) {
			_case_begin_207564ba9:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _14320_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_221521498_builtinCallerStdComptimeRange), });;
				return jule::Any(_14320_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_207564989:;
			{
				return nullptr;;
			}
		}
		_match_end_207564219:;
	};
}



inline jule::Any _22151898a_findBuiltinDefStdJuleIntegrated(jule::Str _15036_ident) {
	{
		auto &_match_expr{ _15036_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_207567151:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _15320_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_221522631_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_15320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_2075671b7:;
			{
				static jule::Ptr<_2211dc97d_FnIns> _15620_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_Decl=jule::new_ptr<_2211d9ccc_Fn>(_2211d9ccc_Fn{._field_Generics=jule::Slice<jule::Ptr<_2211b1a84_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_221522a4e_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_15620_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_207566c55:;
			{
				return nullptr;;
			}
		}
		_match_end_2075664d5:;
	};
}



inline jule::Any _221518dec_findPackageBuiltinDef(jule::Str _16826_link_path, jule::Str _16842_ident) {
	{
		auto &_match_expr{ _16826_link_path };
		
		if (_match_expr == jule::Str("std::comptime", 13)) {
			_case_begin_2075690ba:;
			{
				return _2215186e3_findBuiltinDefStdComptime(_16842_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_207569131:;
			{
				return _221518182_findBuiltinDefStdDebug(_16842_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_207568dde:;
			{
				return _221518429_findBuiltinDefStdMem(_16842_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_207568e55:;
			{
				return _22151898a_findBuiltinDefStdJuleIntegrated(_16842_ident);;
			}
		}
		else {
			_case_begin_207564e62:;
			{
				return nullptr;;
			}
		}
		_match_end_207567d11:;
	};
}



inline jule::Ptr<_221425c2c_Data> _221519309_builtinCallerCommonPlain(jule::Ptr<_22142779a_Eval>* _18334_e, jule::Ptr<_2211acc8e_FnCallExpr>* _18349_fc, jule::Ptr<_221425c2c_Data>* _18371_d) {
	jule::Ptr<_2211dc97d_FnIns> _18413_f = _221456c80_Fn((*(_18371_d)).get()._field_Kind.ptr());;
	_221417999_fnCallArgChecker _18613_fcac = _221417999_fnCallArgChecker{._field_e=(*(_18334_e)), ._field_args=(*(_18349_fc)).get()._field_Args, ._field_errorToken=(*(_18349_fc)).get()._field_Token, ._field_f=_18413_f, ._field_dynamicAnnotation=false, };;
	if ((!(_221419d64_check(&_18613_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_2211cd9c4_FnCallExprModel> _19713_model = jule::new_ptr<_2211cd9c4_FnCallExprModel>(_2211cd9c4_FnCallExprModel{._field_Token=(*(_18349_fc)).get()._field_Token, ._field_Func=_18413_f, ._field_Expr=(*(_18371_d)).get()._field_Model, ._field_Args=_18613_fcac._field_argModels, });;
	if ((_18413_f.get()._field_Result == nullptr)) {
		(*(_18371_d))=_22144e5d5_buildVoidData();
	} else {
		(*(_18371_d))=jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=_18413_f.get()._field_Result, });
	};
	(*(_18371_d)).get()._field_Model=jule::Any(_19713_model, &__jule_any_type35);
	return (*(_18371_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151967d_builtinCallerCommon(jule::Ptr<_22142779a_Eval>* _21629_e, jule::Ptr<_2211acc8e_FnCallExpr>* _21644_fc, jule::Ptr<_221425c2c_Data>* _21666_d) {
	return _221519309_builtinCallerCommonPlain(_21629_e, _21644_fc, _21666_d);;
}



inline jule::Ptr<_221425c2c_Data> _221519a68_builtinCallerCommonMut(jule::Ptr<_22142779a_Eval>* _22032_e, jule::Ptr<_2211acc8e_FnCallExpr>* _22047_fc, jule::Ptr<_221425c2c_Data>* _22069_d) {
	if ((!((*(_22069_d)).get()._field_Mutable))) {
		_221427ca6_pushErr((*(_22032_e)).ptr(), (*(_22047_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _22151967d_builtinCallerCommon(_22032_e, _22047_fc, _22069_d);;
}



inline jule::Ptr<_221425c2c_Data> _221519da9_builtinCallerError(jule::Ptr<_22142779a_Eval>* _22728_e, jule::Ptr<_2211acc8e_FnCallExpr>* _22743_fc) {
	if (((*(_22743_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_22728_e)).ptr(), (*(_22743_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_22743_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_22728_e)).ptr(), (*(_22743_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _23513_expr = _221444267_evalExpr((*(_22728_e)), (*(_22743_fc)).get()._field_Args[0LL]);;
	if ((_23513_expr == nullptr)) {
		return nullptr;;
	};
	if (_221426117_IsNil(_23513_expr.ptr())) {
		_221427ca6_pushErr((*(_22728_e)).ptr(), (*(_22743_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_221425c2c_Data> _24413_d = _22144e5d5_buildVoidData();;
	_24413_d.get()._field_Model=jule::Any(jule::new_ptr<_2211d5e3d_BuiltinErrorCallExprModel>(_2211d5e3d_BuiltinErrorCallExprModel{._field_Err=_23513_expr}), &__jule_any_type23);
	return _24413_d;;
}



inline jule::Ptr<_221425c2c_Data> _22151a294_builtinCallerOut(jule::Ptr<_22142779a_Eval>* _24926_e, jule::Ptr<_2211acc8e_FnCallExpr>* _24941_fc, jule::Ptr<_221425c2c_Data>* ) {
	if (((*(_24941_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_24926_e)).ptr(), (*(_24941_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_24941_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_24926_e)).ptr(), (*(_24941_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _25813_expr = _221444267_evalExpr((*(_24926_e)), (*(_24941_fc)).get()._field_Args[0LL]);;
	if ((_25813_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_22146d538_isBuiltinStrConvertable(&(_25813_expr.get()._field_Kind))))) {
		_221427ca6_pushErr((*(_24926_e)).ptr(), (*(_24941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_221425c2c_Data> _26813_d = _22144e5d5_buildVoidData();;
	_26813_d.get()._field_Model=jule::Any(jule::new_ptr<_2211d2ac7_BuiltinOutCallExprModel>(_2211d2ac7_BuiltinOutCallExprModel{._field_Expr=_25813_expr.get()._field_Model, }), &__jule_any_type28);
	return _26813_d;;
}



inline jule::Ptr<_221425c2c_Data> _22151a67e_builtinCallerOutln(jule::Ptr<_22142779a_Eval>* _27328_e, jule::Ptr<_2211acc8e_FnCallExpr>* _27343_fc, jule::Ptr<_221425c2c_Data>* _27365_d) {
	(*(_27365_d))=_22151a294_builtinCallerOut(_27328_e, _27343_fc, _27365_d);
	if (((*(_27365_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_27365_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211d2eb2_BuiltinOutlnCallExprModel>(_2211d2eb2_BuiltinOutlnCallExprModel{._field_Expr=(*(_27365_d)).get()._field_Model.cast_ptr<_2211d2ac7_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Expr, }), &__jule_any_type29);
	return (*(_27365_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151aa69_builtinCallerNew(jule::Ptr<_22142779a_Eval>* _28526_e, jule::Ptr<_2211acc8e_FnCallExpr>* _28541_fc, jule::Ptr<_221425c2c_Data>* _28563_d) {
	if (((*(_28541_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_28526_e)).ptr(), (*(_28541_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_28541_fc)).get()._field_Args.len() > 2LL)) {
		_221427ca6_pushErr((*(_28526_e)).ptr(), (*(_28541_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _29413_t = _221443530_evalExprKind((*(_28526_e)), (*(_28541_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_29413_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_29413_t.get()._field_Decl))) {
		_221427ca6_pushErr((*(_28526_e)).ptr(), (*(_28541_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_22146cec7_isValidForSptrType(&(_29413_t.get()._field_Kind))))) {
		jule::Ptr<_2211c76e3_StructIns> _30517_s = _221456ee4_Struct(_29413_t.get()._field_Kind.ptr());;
		if ((((_30517_s != nullptr) && (_30517_s.get()._field_Decl != nullptr)) && _30517_s.get()._field_Decl.get()._field_CppLinked)) {
			_221427ca6_pushErr((*(_28526_e)).ptr(), (*(_28541_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_28563_d)).get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_22145dd53_Sptr>(_22145dd53_Sptr{._field_Elem=_29413_t.get()._field_Kind}), 19)});
	if (((*(_28541_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_221453397_TypeKind> _31917_old = (*(_28526_e)).get()._field_prefix;;
		(*(_28526_e)).get()._field_prefix=_29413_t.get()._field_Kind;
		jule::Ptr<_221425c2c_Data> _32217_init = _221444267_evalExpr((*(_28526_e)), (*(_28541_fc)).get()._field_Args[1LL]);;
		(*(_28526_e)).get()._field_prefix=_31917_old;
		if ((_32217_init != nullptr)) {
			jule::Ptr<_21da1aa0b_Token> _32721_token = (*(_28541_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_2212588ea_checkValidityForInitExpr((*(_28526_e)).get()._field_s, (!((*(_28526_e)).get()._field_immutable)), false, &(_29413_t.get()._field_Kind), &(_32217_init), &(_32721_token));
			_2212559d5_checkAssignType((*(_28526_e)).get()._field_s, false, &(_29413_t.get()._field_Kind), &(_32217_init), _32721_token);
			(*(_28563_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211d36bb_BuiltinNewCallExprModel>(_2211d36bb_BuiltinNewCallExprModel{._field_Kind=_29413_t.get()._field_Kind, ._field_Init=_32217_init.get()._field_Model}), &__jule_any_type116);
		};
	} else {
		(*(_28563_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211d36bb_BuiltinNewCallExprModel>(_2211d36bb_BuiltinNewCallExprModel{._field_Kind=_29413_t.get()._field_Kind, }), &__jule_any_type116);
	};
	return (*(_28563_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151b185_builtinCallerPanic(jule::Ptr<_22142779a_Eval>* _34728_e, jule::Ptr<_2211acc8e_FnCallExpr>* _34743_fc, jule::Ptr<_221425c2c_Data>* ) {
	if (((*(_34743_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_34728_e)).ptr(), (*(_34743_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_34743_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_34728_e)).ptr(), (*(_34743_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _35613_expr = _221444267_evalExpr((*(_34728_e)), (*(_34743_fc)).get()._field_Args[0LL]);;
	if ((_35613_expr == nullptr)) {
		return nullptr;;
	};
	if (((_221455a92_Prim(_35613_expr.get()._field_Kind.ptr()) == nullptr) || (!(_22145d803_IsStr(_221455a92_Prim(_35613_expr.get()._field_Kind.ptr()).ptr()))))) {
		_221427ca6_pushErr((*(_34728_e)).ptr(), (*(_34743_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_221425c2c_Data> _36513_d = _22144e5d5_buildVoidData();;
	_36513_d.get()._field_Model=jule::Any(jule::new_ptr<_2211d3aa6_BuiltinPanicCallExprModel>(_2211d3aa6_BuiltinPanicCallExprModel{._field_Token=(*(_34743_fc)).get()._field_Token, ._field_Expr=_35613_expr.get()._field_Model}), &__jule_any_type30);
	return _36513_d;;
}



inline jule::Ptr<_221425c2c_Data> _22151b570_builtinCallerMake(jule::Ptr<_22142779a_Eval>* _37327_e, jule::Ptr<_2211acc8e_FnCallExpr>* _37342_fc, jule::Ptr<_221425c2c_Data>* _37364_d) {
	if (((*(_37342_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_37342_fc)).get()._field_Args.len() == 1LL)) {
			_221427ca6_pushErr((*(_37327_e)).ptr(), (*(_37342_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_221427ca6_pushErr((*(_37327_e)).ptr(), (*(_37342_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_221425c2c_Data> _38313_t = _221443530_evalExprKind((*(_37327_e)), (*(_37342_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_38313_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_38313_t.get()._field_Decl))) {
		_221427ca6_pushErr((*(_37327_e)).ptr(), (*(_37342_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_37342_fc)).get()._field_Args.len() > 3LL)) {
		_221427ca6_pushErr((*(_37327_e)).ptr(), (*(_37342_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_37364_d)).get()._field_Kind=_38313_t.get()._field_Kind;
	jule::Ptr<_221425c2c_Data> _39913_lenExpr = _221444267_evalExpr(_2212551cc_evalp((*(_37327_e)).get()._field_s, (*(_37327_e)).get()._field_lookup, _38313_t.get()._field_Kind), (*(_37342_fc)).get()._field_Args[1LL]);;
	if ((_39913_lenExpr == nullptr)) {
		return nullptr;;
	};
	_221431397_checkIntegerIndexingByData((*(_37327_e)).ptr(), &(_39913_lenExpr), (*(_37342_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_2211d4513_BuiltinMakeCallExprModel> _40613_model = jule::new_ptr<_2211d4513_BuiltinMakeCallExprModel>(_2211d4513_BuiltinMakeCallExprModel{._field_Kind=_38313_t.get()._field_Kind, ._field_Len=_39913_lenExpr.get()._field_Model, });;
	(*(_37364_d)).get()._field_Model=jule::Any(_40613_model, &__jule_any_type117);
	if (((*(_37342_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_221425c2c_Data> _41217_capExpr = _221444267_evalExpr(_2212551cc_evalp((*(_37327_e)).get()._field_s, (*(_37327_e)).get()._field_lookup, _38313_t.get()._field_Kind), (*(_37342_fc)).get()._field_Args[2LL]);;
		if ((_41217_capExpr == nullptr)) {
			return (*(_37364_d));;
		};
		_221431397_checkIntegerIndexingByData((*(_37327_e)).ptr(), &(_41217_capExpr), (*(_37342_fc)).get()._field_Args[2LL].get()._field_Token);
		_40613_model.get()._field_Cap=_41217_capExpr.get()._field_Model;
	};
	return (*(_37364_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151b95a_builtinCallerAppend(jule::Ptr<_22142779a_Eval>* _42229_e, jule::Ptr<_2211acc8e_FnCallExpr>* _42244_fc, jule::Ptr<_221425c2c_Data>* _42266_d) {
	if (((*(_42244_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_42244_fc)).get()._field_Args.len() == 1LL)) {
			_221427ca6_pushErr((*(_42229_e)).ptr(), (*(_42244_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_221427ca6_pushErr((*(_42229_e)).ptr(), (*(_42244_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_221425c2c_Data> _43213_t = _221444267_evalExpr((*(_42229_e)), (*(_42244_fc)).get()._field_Args[0LL]);;
	if ((_43213_t == nullptr)) {
		return nullptr;;
	};
	if ((_221456a1b_Slc(_43213_t.get()._field_Kind.ptr()) == nullptr)) {
		_221427ca6_pushErr((*(_42229_e)).ptr(), (*(_42244_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2211dc97d_FnIns> _44213_f = jule::new_ptr<_2211dc97d_FnIns>(_2211dc97d_FnIns{._field_Params=jule::Slice<jule::Ptr<_2211dbaae_ParamIns>>::make({jule::new_ptr<_2211dbaae_ParamIns>(_2211dbaae_ParamIns{._field_Decl=jule::new_ptr<_2211d8490_Param>(_2211d8490_Param{._field_Mutable=true, }), ._field_Kind=_43213_t.get()._field_Kind}),jule::new_ptr<_2211dbaae_ParamIns>(_2211dbaae_ParamIns{._field_Decl=jule::new_ptr<_2211d8490_Param>(_2211d8490_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_221456a1b_Slc(_43213_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_43213_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_221425c2c_Data>(jule::Ptr<_22142779a_Eval>*,jule::Ptr<_2211acc8e_FnCallExpr>*,jule::Ptr<_221425c2c_Data>*)>(_221519309_builtinCallerCommonPlain), });;
	(*(_42266_d)).get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_44213_f, 1)});
	(*(_42266_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211d1d90_CommonIdentExprModel>(_2211d1d90_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_42266_d))=_221519309_builtinCallerCommonPlain(_42229_e, _42244_fc, _42266_d);
	if (((*(_42266_d)) != nullptr)) {
		jule::Ptr<_2211cd9c4_FnCallExprModel> _47017_model = (*(_42266_d)).get()._field_Model.cast_ptr<_2211cd9c4_FnCallExprModel>(&__jule_any_type35);;
		(*(_42266_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211d48ed_BuiltinAppendCallExprModel>(_2211d48ed_BuiltinAppendCallExprModel{._field_Dest=_47017_model.get()._field_Args[0LL], ._field_Elements=_47017_model.get()._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_42266_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151bdde_callerCopySlice(jule::Ptr<_221425c2c_Data>* _47925_dest, jule::Ptr<_22142779a_Eval>* _47943_e, jule::Ptr<_2211acc8e_FnCallExpr>* _47958_fc, jule::Ptr<_221425c2c_Data>* _47980_d) {
	if ((!((*(_47925_dest)).get()._field_Mutable))) {
		_221427ca6_pushErr((*(_47943_e)).ptr(), (*(_47958_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_221425c2c_Data> _48413_src = _221444267_evalExpr((*(_47943_e)), (*(_47958_fc)).get()._field_Args[1LL]);;
	if ((_48413_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_22145e7b0_Slc> _48813_slc = _221456a1b_Slc(_48413_src.get()._field_Kind.ptr());;
	if ((_48813_slc != nullptr)) {
		if (((!(_48413_src.get()._field_Mutable)) && _221454b18_Mutable(_48813_slc.get()._field_Elem.ptr()))) {
			_221427ca6_pushErr((*(_47943_e)).ptr(), (*(_47958_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_221453aa1_Equal((*(_47925_dest)).get()._field_Kind, _48413_src.get()._field_Kind)))) {
			_221427ca6_pushErr((*(_47943_e)).ptr(), (*(_47958_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_47925_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_48413_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_22145a5be_Prim> _49813_destPrim = _221455a92_Prim(_221456a1b_Slc((*(_47925_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_22145a5be_Prim> _49913_prim = _221455a92_Prim(_48413_src.get()._field_Kind.ptr());;
		if (((((_49813_destPrim == nullptr) || (_49913_prim == nullptr)) || (!(_22145d803_IsStr(_49913_prim.ptr())))) || (!(_22145bdc8_IsU8(_49813_destPrim.ptr()))))) {
			_221427ca6_pushErr((*(_47943_e)).ptr(), (*(_47958_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_47925_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_48413_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_47980_d)).get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)});
	(*(_47980_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211d5a53_BuiltinCopyCallExprModel>(_2211d5a53_BuiltinCopyCallExprModel{._field_Dest=(*(_47925_dest)), ._field_Src=_48413_src}), &__jule_any_type32);
	return (*(_47980_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151c373_callerCopyStr(jule::Ptr<_221425c2c_Data>* _51323_dest, jule::Ptr<_22142779a_Eval>* _51341_e, jule::Ptr<_2211acc8e_FnCallExpr>* _51356_fc, jule::Ptr<_221425c2c_Data>* _51378_d) {
	if ((!((*(_51323_dest)).get()._field_Mutable))) {
		_221427ca6_pushErr((*(_51341_e)).ptr(), (*(_51356_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_221425c2c_Data> _51813_src = _221444267_evalExpr((*(_51341_e)), (*(_51356_fc)).get()._field_Args[1LL]);;
	if ((_51813_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_221455a92_Prim(_51813_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_221396d13:;
			{
				if (_22145d803_IsStr(_221455a92_Prim(_51813_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_221456a1b_Slc(_51813_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_221396d79:;
			{
				jule::Ptr<_22145e7b0_Slc> _52817_slc = _221456a1b_Slc(_51813_src.get()._field_Kind.ptr());;
				if (((_221455a92_Prim(_52817_slc.get()._field_Elem.ptr()) != nullptr) && _22145bdc8_IsU8(_221455a92_Prim(_52817_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_221396ae3:;
	};
	_221427ca6_pushErr((*(_51341_e)).ptr(), (*(_51356_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str((*(_51323_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_221453793_Str(_51813_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
	_julec_label_end:;
	(*(_51378_d)).get()._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("int", 3)), 18)});
	(*(_51378_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211d5a53_BuiltinCopyCallExprModel>(_2211d5a53_BuiltinCopyCallExprModel{._field_Dest=(*(_51323_dest)), ._field_Src=_51813_src}), &__jule_any_type32);
	return (*(_51378_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151c75d_builtinCallerCopy(jule::Ptr<_22142779a_Eval>* _54327_e, jule::Ptr<_2211acc8e_FnCallExpr>* _54342_fc, jule::Ptr<_221425c2c_Data>* _54364_d) {
	if (((*(_54342_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_54342_fc)).get()._field_Args.len() == 1LL)) {
			_221427ca6_pushErr((*(_54327_e)).ptr(), (*(_54342_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_221427ca6_pushErr((*(_54327_e)).ptr(), (*(_54342_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_54342_fc)).get()._field_Args.len() > 2LL)) {
		_221427ca6_pushErr((*(_54327_e)).ptr(), (*(_54342_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _55613_dest = _221444267_evalExpr((*(_54327_e)), (*(_54342_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_55613_dest == nullptr)) {
			_case_begin_2213a12a1:;
			{
				return nullptr;;
			}
		}
		else if ((_221456a1b_Slc(_55613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213a1cda:;
			{
				return _22151bdde_callerCopySlice(&(_55613_dest), _54327_e, _54342_fc, _54364_d);;
			}
		}
		else if (((_221455a92_Prim(_55613_dest.get()._field_Kind.ptr()) != nullptr) && _22145d803_IsStr(_221455a92_Prim(_55613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2213a1d51:;
			{
				return _22151c373_callerCopyStr(&(_55613_dest), _54327_e, _54342_fc, _54364_d);;
			}
		}
		else {
			_case_begin_2213a0e3d:;
			{
				_221427ca6_pushErr((*(_54327_e)).ptr(), (*(_54342_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2213a0dc7:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22151ca9e_callerLenSlice(jule::Ptr<_221425c2c_Data>* _57024_expr, jule::Ptr<_221425c2c_Data>* _57042_d) {
	(*(_57042_d)).get()._field_Kind=_2214203b9_lenKind();
	(*(_57042_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211d4c1c_BuiltinLenCallExprModel>(_2211d4c1c_BuiltinLenCallExprModel{._field_Expr=(*(_57024_expr))}), &__jule_any_type118);
	return (*(_57042_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151cde0_callerLenMap(jule::Ptr<_221425c2c_Data>* _57822_expr, jule::Ptr<_221425c2c_Data>* _57840_d) {
	(*(_57840_d)).get()._field_Kind=_2214203b9_lenKind();
	(*(_57840_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211d4c1c_BuiltinLenCallExprModel>(_2211d4c1c_BuiltinLenCallExprModel{._field_Expr=(*(_57822_expr))}), &__jule_any_type118);
	return (*(_57840_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151d231_callerLenArr(jule::Ptr<_221425c2c_Data>* _58622_expr, jule::Ptr<_221425c2c_Data>* _58640_d) {
	(*(_58640_d)).get()._field_Kind=_2214203b9_lenKind();
	(*(_58640_d)).get()._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2214567a7_Arr((*(_58622_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_58640_d)).get()._field_Model=jule::Any((*(_58640_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_58640_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151d572_callerLenStr(jule::Ptr<_221425c2c_Data>* _59322_expr, jule::Ptr<_221425c2c_Data>* _59340_d) {
	(*(_59340_d)).get()._field_Kind=_2214203b9_lenKind();
	if (_2214265e0_IsConst((*(_59322_expr)).ptr())) {
		(*(_59340_d)).get()._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_21e6c7420_ReadStr((*(_59322_expr)).get()._field_Constant.ptr()).len())));
		(*(_59340_d)).get()._field_Model=jule::Any((*(_59340_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_59340_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211d4c1c_BuiltinLenCallExprModel>(_2211d4c1c_BuiltinLenCallExprModel{._field_Expr=(*(_59322_expr))}), &__jule_any_type118);
	};
	return (*(_59340_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151d95c_builtinCallerLen(jule::Ptr<_22142779a_Eval>* _60626_e, jule::Ptr<_2211acc8e_FnCallExpr>* _60641_fc, jule::Ptr<_221425c2c_Data>* _60663_d) {
	if (((*(_60641_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_60626_e)).ptr(), (*(_60641_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_60641_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_60626_e)).ptr(), (*(_60641_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _61413_dest = _221443e59_evalExpr1((*(_60626_e)), (*(_60641_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_61413_dest == nullptr)) {
			_case_begin_2213aad5a:;
			{
				return nullptr;;
			}
		}
		else if ((_221456a1b_Slc(_61413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213ab72e:;
			{
				return _22151ca9e_callerLenSlice(&(_61413_dest), _60663_d);;
			}
		}
		else if ((_2214567a7_Arr(_61413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213ab795:;
			{
				return _22151d231_callerLenArr(&(_61413_dest), _60663_d);;
			}
		}
		else if ((_2214574bc_Map(_61413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213aaa5d:;
			{
				return _22151cde0_callerLenMap(&(_61413_dest), _60663_d);;
			}
		}
		else if (((_221455a92_Prim(_61413_dest.get()._field_Kind.ptr()) != nullptr) && _22145d803_IsStr(_221455a92_Prim(_61413_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2213aaac4:;
			{
				return _22151d572_callerLenStr(&(_61413_dest), _60663_d);;
			}
		}
		else if ((_221457c09_comptimeStructFields(_61413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213aab3a:;
			{
				(*(_60663_d)).get()._field_Kind=_2214203b9_lenKind();
				(*(_60663_d)).get()._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_221457c09_comptimeStructFields(_61413_dest.get()._field_Kind.ptr()).get()._field_fields.len())));
				(*(_60663_d)).get()._field_Model=jule::Any((*(_60663_d)).get()._field_Constant, &__jule_any_type19);
				return (*(_60663_d));;
			}
		}
		else if ((_2214581d2_comptimeEnumFields(_61413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213aaba1:;
			{
				(*(_60663_d)).get()._field_Kind=_2214203b9_lenKind();
				(*(_60663_d)).get()._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2214581d2_comptimeEnumFields(_61413_dest.get()._field_Kind.ptr()).get()._field_fields.len())));
				(*(_60663_d)).get()._field_Model=jule::Any((*(_60663_d)).get()._field_Constant, &__jule_any_type19);
				return (*(_60663_d));;
			}
		}
		else if ((_221458de7_comptimeTypeInfos(_61413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213ab971:;
			{
				(*(_60663_d)).get()._field_Kind=_2214203b9_lenKind();
				(*(_60663_d)).get()._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_221458de7_comptimeTypeInfos(_61413_dest.get()._field_Kind.ptr()).get()._field_types.len())));
				(*(_60663_d)).get()._field_Model=jule::Any((*(_60663_d)).get()._field_Constant, &__jule_any_type19);
				return (*(_60663_d));;
			}
		}
		else if ((_2214586aa_comptimeParams(_61413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213ab9d7:;
			{
				(*(_60663_d)).get()._field_Kind=_2214203b9_lenKind();
				(*(_60663_d)).get()._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2214586aa_comptimeParams(_61413_dest.get()._field_Kind.ptr()).get()._field_params.len())));
				(*(_60663_d)).get()._field_Model=jule::Any((*(_60663_d)).get()._field_Constant, &__jule_any_type19);
				return (*(_60663_d));;
			}
		}
		else if ((_2214593c0_comptimeStatics(_61413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213aba4d:;
			{
				(*(_60663_d)).get()._field_Kind=_2214203b9_lenKind();
				(*(_60663_d)).get()._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2214593c0_comptimeStatics(_61413_dest.get()._field_Kind.ptr()).get()._field_fields.len())));
				(*(_60663_d)).get()._field_Model=jule::Any((*(_60663_d)).get()._field_Constant, &__jule_any_type19);
				return (*(_60663_d));;
			}
		}
		else {
			_case_begin_2213aa9e7:;
			{
				_221427ca6_pushErr((*(_60626_e)).ptr(), (*(_60641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2213aa981:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22151dc9d_callerCapSlice(jule::Ptr<_221425c2c_Data>* _65724_expr, jule::Ptr<_221425c2c_Data>* _65742_d) {
	(*(_65742_d)).get()._field_Kind=_2214203b9_lenKind();
	(*(_65742_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211d503b_BuiltinCapCallExprModel>(_2211d503b_BuiltinCapCallExprModel{._field_Expr=(*(_65724_expr))}), &__jule_any_type119);
	return (*(_65742_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151e0de_callerCapStr(jule::Ptr<_221425c2c_Data>* _66522_expr, jule::Ptr<_221425c2c_Data>* _66540_d) {
	(*(_66540_d)).get()._field_Kind=_2214203b9_lenKind();
	if (_2214265e0_IsConst((*(_66522_expr)).ptr())) {
		(*(_66540_d)).get()._field_Constant=static__21e6c585d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_21e6c7420_ReadStr((*(_66522_expr)).get()._field_Constant.ptr()).cap())));
		(*(_66540_d)).get()._field_Model=jule::Any((*(_66540_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_66540_d)).get()._field_Model=jule::Any(jule::new_ptr<_2211d503b_BuiltinCapCallExprModel>(_2211d503b_BuiltinCapCallExprModel{._field_Expr=(*(_66522_expr))}), &__jule_any_type119);
	};
	return (*(_66540_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151e4c9_builtinCallerCap(jule::Ptr<_22142779a_Eval>* _67826_e, jule::Ptr<_2211acc8e_FnCallExpr>* _67841_fc, jule::Ptr<_221425c2c_Data>* _67863_d) {
	if (((*(_67841_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_67826_e)).ptr(), (*(_67841_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_67841_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_67826_e)).ptr(), (*(_67841_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _68613_dest = _221444267_evalExpr((*(_67826_e)), (*(_67841_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_68613_dest == nullptr)) {
			_case_begin_2213bc047:;
			{
				return nullptr;;
			}
		}
		else if (_68613_dest.get()._field_Decl) {
			_case_begin_2213bca70:;
			{
				_221427ca6_pushErr((*(_67826_e)).ptr(), (*(_67841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_221456a1b_Slc(_68613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213bc90a:;
			{
				return _22151dc9d_callerCapSlice(&(_68613_dest), _67863_d);;
			}
		}
		else if (((_221455a92_Prim(_68613_dest.get()._field_Kind.ptr()) != nullptr) && _22145d803_IsStr(_221455a92_Prim(_68613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2213bc971:;
			{
				return _22151e0de_callerCapStr(&(_68613_dest), _67863_d);;
			}
		}
		else {
			_case_begin_2213bbbc3:;
			{
				_221427ca6_pushErr((*(_67826_e)).ptr(), (*(_67841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2213bbb5c:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22151e95d_callerDeleteMap(jule::Ptr<_22142779a_Eval>* _70325_e, jule::Ptr<_2211acc8e_FnCallExpr>* _70340_fc, jule::Ptr<_221425c2c_Data>* _70362_expr, jule::Ptr<_221425c2c_Data>* _70380_d) {
	if ((!((*(_70362_expr)).get()._field_Mutable))) {
		_221427ca6_pushErr((*(_70325_e)).ptr(), (*(_70340_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_70380_d))=_22144e5d5_buildVoidData();
	jule::Ptr<_2211d56e0_BuiltinDeleteCallExprModel> _70813_model = jule::new_ptr<_2211d56e0_BuiltinDeleteCallExprModel>(_2211d56e0_BuiltinDeleteCallExprModel{._field_Dest=(*(_70362_expr)), });;
	if (((*(_70340_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_221425c2c_Data> _71217_key = _221444267_evalExpr((*(_70325_e)), (*(_70340_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_71217_key == nullptr)) {
				_case_begin_2213c3e50:;
				{
					return nullptr;;
				}
			}
			else if (_71217_key.get()._field_Decl) {
				_case_begin_2213c27ab:;
				{
					_221427ca6_pushErr((*(_70325_e)).ptr(), (*(_70340_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_2213c2745:;
				{
					;
					jule::Ptr<_221453397_TypeKind> _72121_keyType = _2214574bc_Map((*(_70362_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_2212559d5_checkAssignType((*(_70325_e)).get()._field_s, false, &(_72121_keyType), &(_71217_key), (*(_70340_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_2213c26ce:;
		};
		_70813_model.get()._field_Key=_71217_key;
	};
	(*(_70380_d)).get()._field_Model=jule::Any(_70813_model, &__jule_any_type33);
	return (*(_70380_d));;
}



inline jule::Ptr<_221425c2c_Data> _22151ed48_builtinCallerDelete(jule::Ptr<_22142779a_Eval>* _73229_e, jule::Ptr<_2211acc8e_FnCallExpr>* _73244_fc, jule::Ptr<_221425c2c_Data>* _73266_d) {
	if (((*(_73244_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_73229_e)).ptr(), (*(_73244_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_73244_fc)).get()._field_Args.len() > 2LL)) {
		_221427ca6_pushErr((*(_73229_e)).ptr(), (*(_73244_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _74013_dest = _221444267_evalExpr((*(_73229_e)), (*(_73244_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_74013_dest == nullptr)) {
			_case_begin_2213c876d:;
			{
				return nullptr;;
			}
		}
		else if (_74013_dest.get()._field_Decl) {
			_case_begin_2213c92a7:;
			{
				_221427ca6_pushErr((*(_73229_e)).ptr(), (*(_73244_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_2214574bc_Map(_74013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213c931d:;
			{
				return _22151e95d_callerDeleteMap(_73229_e, _73244_fc, &(_74013_dest), _73266_d);;
			}
		}
		else {
			_case_begin_2213c840a:;
			{
				_221427ca6_pushErr((*(_73229_e)).ptr(), (*(_73244_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2213c8394:;
	};
}



inline jule::Ptr<_221425c2c_Data> _22152040e_builtinCallerClone(jule::Ptr<_22142779a_Eval>* _75528_e, jule::Ptr<_2211acc8e_FnCallExpr>* _75543_fc, jule::Ptr<_221425c2c_Data>* ) {
	if (((*(_75543_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_75528_e)).ptr(), (*(_75543_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_75543_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_75528_e)).ptr(), (*(_75543_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _76413_d = _221444267_evalExpr((*(_75528_e)), (*(_75543_fc)).get()._field_Args[0LL]);;
	if ((_76413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_2214555b9_SupportsCloning(_76413_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_221456a1b_Slc(_76413_d.get()._field_Kind.ptr()) != nullptr) || (_2214574bc_Map(_76413_d.get()._field_Kind.ptr()) != nullptr) || (_2214567a7_Arr(_76413_d.get()._field_Kind.ptr()) != nullptr) || (_221455d06_Sptr(_76413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_2213ce29b:;
				{
					{
						_221427ca6_pushErr((*(_75528_e)).ptr(), (*(_75543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_76413_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_221456ee4_Struct(_76413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_2213cdb08:;
				{
					{
						_221427ca6_pushErr((*(_75528_e)).ptr(), (*(_75543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_76413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			else {
				_case_begin_2213cda92:;
				{
					{
						_221427ca6_pushErr((*(_75528_e)).ptr(), (*(_75543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_76413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			_match_end_2213cd6c9:;
		};
	};
	_76413_d.get()._field_Mutable=true;
	_76413_d.get()._field_Model=jule::Any(jule::new_ptr<_2211d32d1_BuiltinCloneCallExprModel>(_2211d32d1_BuiltinCloneCallExprModel{._field_Expr=_76413_d.get()._field_Model}), &__jule_any_type27);
	return _76413_d;;
}



inline jule::Ptr<_221425c2c_Data> _221520750_builtinCallerAssert(jule::Ptr<_22142779a_Eval>* _79729_e, jule::Ptr<_2211acc8e_FnCallExpr>* _79744_fc, jule::Ptr<_221425c2c_Data>* ) {
	if (((*(_79744_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_79729_e)).ptr(), (*(_79744_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_79744_fc)).get()._field_Args.len() > 2LL)) {
		_221427ca6_pushErr((*(_79729_e)).ptr(), (*(_79744_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _80613_expr = _221444267_evalExpr((*(_79729_e)), (*(_79744_fc)).get()._field_Args[0LL]);;
	if ((_80613_expr == nullptr)) {
		return nullptr;;
	};
	if (((_221455a92_Prim(_80613_expr.get()._field_Kind.ptr()) == nullptr) || (!(_22145d58e_IsBool(_221455a92_Prim(_80613_expr.get()._field_Kind.ptr()).ptr()))))) {
		_221427ca6_pushErr((*(_79729_e)).ptr(), (*(_79744_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2211d405c_BuiltinAssertCallExprModel> _81513_model = jule::new_ptr<_2211d405c_BuiltinAssertCallExprModel>(_2211d405c_BuiltinAssertCallExprModel{._field_Token=(*(_79744_fc)).get()._field_Token, ._field_Expr=_80613_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_79744_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_221425c2c_Data> _82317_log = _221444267_evalExpr((*(_79729_e)), (*(_79744_fc)).get()._field_Args[1LL]);;
		if ((_82317_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_2214265e0_IsConst(_82317_log.ptr()))) || (_221455a92_Prim(_82317_log.get()._field_Kind.ptr()) == nullptr)) || (!(_22145d803_IsStr(_221455a92_Prim(_82317_log.get()._field_Kind.ptr()).ptr()))))) {
			_221427ca6_pushErr((*(_79729_e)).ptr(), (*(_79744_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_221453793_Str(_82317_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_81513_model.get()._field_Log=_21e6c7420_ReadStr(_82317_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_221425c2c_Data> _83613_d = _22144e5d5_buildVoidData();;
	_83613_d.get()._field_Model=jule::Any(_81513_model, &__jule_any_type31);
	return _83613_d;;
}



inline jule::Ptr<_221425c2c_Data> _221520b5c_builtinCallerStdComptimeTypeOf(jule::Ptr<_22142779a_Eval>* _84140_e, jule::Ptr<_2211acc8e_FnCallExpr>* _84155_fc, jule::Ptr<_221425c2c_Data>* ) {
	if (((*(_84155_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_84140_e)).ptr(), (*(_84155_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_84155_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_84140_e)).ptr(), (*(_84155_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _85013_d = _221443530_evalExprKind((*(_84140_e)), (*(_84155_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_85013_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2211dc97d_FnIns> _8549_f = _221456c80_Fn(_85013_d.get()._field_Kind.ptr());;
	if ((_8549_f != nullptr)) {
		if (_2211ddd14_IsBuiltin(_8549_f.ptr())) {
			_221427ca6_pushErr((*(_84140_e)).ptr(), (*(_84155_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<built-in fn>", 13), &__jule_any_type5)}));
			return nullptr;;
		};
		if ((_8549_f.get()._field_Generics.len() != _8549_f.get()._field_Decl.get()._field_Generics.len())) {
			_221427ca6_pushErr((*(_84140_e)).ptr(), (*(_84155_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_2211c76e3_StructIns> _8659_s = _221456ee4_Struct(_85013_d.get()._field_Kind.ptr());;
	if (((_8659_s != nullptr) && (_8659_s.get()._field_Generics.len() != _8659_s.get()._field_Decl.get()._field_Generics.len()))) {
		_221427ca6_pushErr((*(_84140_e)).ptr(), (*(_84155_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_221457995_comptime(_85013_d.get()._field_Kind.ptr())) {
		_221427ca6_pushErr((*(_84140_e)).ptr(), (*(_84155_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_85013_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	return _22121a45b_buildComptimeTypeInfoData(&((*(_84140_e)).get()._field_s), &(_85013_d.get()._field_Kind));;
}



inline jule::Ptr<_221425c2c_Data> _22152107a_builtinCallerStdComptimeValueOf(jule::Ptr<_22142779a_Eval>* _87741_e, jule::Ptr<_2211acc8e_FnCallExpr>* _87756_fc, jule::Ptr<_221425c2c_Data>* ) {
	if (((*(_87756_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_87741_e)).ptr(), (*(_87756_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_87756_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_87741_e)).ptr(), (*(_87756_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _88513_d = _221444267_evalExpr((*(_87741_e)), (*(_87756_fc)).get()._field_Args[0LL]);;
	if ((_88513_d == nullptr)) {
		return nullptr;;
	};
	return _22121a78b_buildComptimeValue(&(_88513_d));;
}



inline jule::Ptr<_221425c2c_Data> _221521498_builtinCallerStdComptimeRange(jule::Ptr<_22142779a_Eval>* _89239_e, jule::Ptr<_2211acc8e_FnCallExpr>* _89254_fc, jule::Ptr<_221425c2c_Data>* ) {
	if (((*(_89254_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_89239_e)).ptr(), (*(_89254_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_89254_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_89239_e)).ptr(), (*(_89254_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _90113_d = _221443530_evalExprKind((*(_89239_e)), (*(_89254_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_90113_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_221457c09_comptimeStructFields(_90113_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213eca4a:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_221202ed2_comptimeRange>(_221202ed2_comptimeRange{._field_kind=jule::Trait<_221202d06_comptimeRangeKind>(_221457c09_comptimeStructFields(_90113_d.get()._field_Kind.ptr()), 0)}), 5)}), });;
			}
		}
		else if ((_2214581d2_comptimeEnumFields(_90113_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213ec84c:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_221202ed2_comptimeRange>(_221202ed2_comptimeRange{._field_kind=jule::Trait<_221202d06_comptimeRangeKind>(_2214581d2_comptimeEnumFields(_90113_d.get()._field_Kind.ptr()), 2)}), 5)}), });;
			}
		}
		else if ((_221458de7_comptimeTypeInfos(_90113_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213ec8b3:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_221202ed2_comptimeRange>(_221202ed2_comptimeRange{._field_kind=jule::Trait<_221202d06_comptimeRangeKind>(_221458de7_comptimeTypeInfos(_90113_d.get()._field_Kind.ptr()), 4)}), 5)}), });;
			}
		}
		else if ((_2214586aa_comptimeParams(_90113_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213ec929:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_221202ed2_comptimeRange>(_221202ed2_comptimeRange{._field_kind=jule::Trait<_221202d06_comptimeRangeKind>(_2214586aa_comptimeParams(_90113_d.get()._field_Kind.ptr()), 3)}), 5)}), });;
			}
		}
		else if ((_2214593c0_comptimeStatics(_90113_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2213ebcd0:;
			{
				return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(jule::new_ptr<_221202ed2_comptimeRange>(_221202ed2_comptimeRange{._field_kind=jule::Trait<_221202d06_comptimeRangeKind>(_2214593c0_comptimeStatics(_90113_d.get()._field_Kind.ptr()), 1)}), 5)}), });;
			}
		}
		else {
			_case_begin_2213eb8a1:;
			{
				_221427ca6_pushErr((*(_89239_e)).ptr(), (*(_89254_fc)).get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_90113_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2213eb84b:;
	};
}



inline jule::Ptr<_221425c2c_Data> _2215218b6_builtinCallerStdMemSizeOf(jule::Ptr<_22142779a_Eval>* _95235_e, jule::Ptr<_2211acc8e_FnCallExpr>* _95250_fc, jule::Ptr<_221425c2c_Data>* ) {
	jule::Ptr<_221425c2c_Data> _95313_result = jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("uint", 4)), 18)}), });;
	if (((*(_95250_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_95235_e)).ptr(), (*(_95250_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _95313_result;;
	};
	if (((*(_95250_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_95235_e)).ptr(), (*(_95250_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _96513_d = _221443530_evalExprKind((*(_95235_e)), (*(_95250_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_96513_d == nullptr)) {
		return _95313_result;;
	};
	if ((!(_22146e704_validTypeForXof(&(_96513_d.get()._field_Kind))))) {
		_221427ca6_pushErr((*(_95235_e)).ptr(), (*(_95250_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_96513_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	_95313_result.get()._field_Model=jule::Any(jule::new_ptr<_2211d623a_SizeofExprModel>(_2211d623a_SizeofExprModel{._field_Expr=_96513_d.get()._field_Model}), &__jule_any_type120);
	return _95313_result;;
}



inline jule::Ptr<_221425c2c_Data> _221521cd4_builtinCallerStdMemAlignOf(jule::Ptr<_22142779a_Eval>* _97736_e, jule::Ptr<_2211acc8e_FnCallExpr>* _97751_fc, jule::Ptr<_221425c2c_Data>* ) {
	jule::Ptr<_221425c2c_Data> _97813_result = jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("uint", 4)), 18)}), });;
	if (((*(_97751_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_97736_e)).ptr(), (*(_97751_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _97813_result;;
	};
	if (((*(_97751_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_97736_e)).ptr(), (*(_97751_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _99013_d = _221443530_evalExprKind((*(_97736_e)), (*(_97751_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_99013_d == nullptr)) {
		return _97813_result;;
	};
	if ((!(_22146e704_validTypeForXof(&(_99013_d.get()._field_Kind))))) {
		_221427ca6_pushErr((*(_97736_e)).ptr(), (*(_97751_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_221453793_Str(_99013_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	_97813_result.get()._field_Model=jule::Any(jule::new_ptr<_2211d6526_AlignofExprModel>(_2211d6526_AlignofExprModel{._field_Expr=_99013_d.get()._field_Model}), &__jule_any_type121);
	return _97813_result;;
}



inline jule::Ptr<_221425c2c_Data> _221522202_builtinCallerStdMemFree(jule::Ptr<_22142779a_Eval>* _100233_e, jule::Ptr<_2211acc8e_FnCallExpr>* _100248_fc, jule::Ptr<_221425c2c_Data>* ) {
	if (((*(_100248_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_100233_e)).ptr(), (*(_100248_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_100248_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_100233_e)).ptr(), (*(_100248_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _101113_d = _221444267_evalExpr((*(_100233_e)), (*(_100248_fc)).get()._field_Args[0LL]);;
	if ((_101113_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_221455355_PerformsRC(_101113_d.get()._field_Kind.ptr())))) {
		_221427ca6_pushErr((*(_100233_e)).ptr(), (*(_100248_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_221425c2c_Data> _102013_result = _22144e5d5_buildVoidData();;
	_102013_result.get()._field_Model=jule::Any(jule::new_ptr<_2211d72c4_FreeExprModel>(_2211d72c4_FreeExprModel{._field_Expr=_101113_d.get()._field_Model}), &__jule_any_type34);
	return _102013_result;;
}



inline jule::Ptr<_221425c2c_Data> _221522631_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_22142779a_Eval>* _102545_e, jule::Ptr<_2211acc8e_FnCallExpr>* _102560_fc, jule::Ptr<_221425c2c_Data>* ) {
	if (((*(_102560_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_102545_e)).ptr(), (*(_102560_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_102560_fc)).get()._field_Args.len() > 1LL)) {
		_221427ca6_pushErr((*(_102545_e)).ptr(), (*(_102560_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_221425c2c_Data> _103413_d = _221444267_evalExpr((*(_102545_e)), (*(_102560_fc)).get()._field_Args[0LL]);;
	if ((_103413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_22146d538_isBuiltinStrConvertable(&(_103413_d.get()._field_Kind))))) {
		_221427ca6_pushErr((*(_102545_e)).ptr(), (*(_102560_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_221425c2c_Data>(_221425c2c_Data{._field_Kind=jule::new_ptr<_221453397_TypeKind>(_221453397_TypeKind{._field_Kind=jule::Trait<_221452e35_Kind>(_22146db65_buildPrimType(jule::Str("str", 3)), 18)}), ._field_Model=jule::Any(jule::new_ptr<_2211d6b20_IntegratedToStrExprModel>(_2211d6b20_IntegratedToStrExprModel{._field_Expr=_103413_d.get()._field_Model}), &__jule_any_type122), });;
}



inline jule::Ptr<_221425c2c_Data> _221522a4e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_22142779a_Eval>* _105244_e, jule::Ptr<_2211acc8e_FnCallExpr>* _105259_fc, jule::Ptr<_221425c2c_Data>* _105281_d) {
	if ((!(_2214286e1_isUnsafe((*(_105244_e)).ptr())))) {
		_221427ca6_pushErr((*(_105244_e)).ptr(), (*(_105259_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_105259_fc)).get()._field_Args.len() < 1LL)) {
		_221427ca6_pushErr((*(_105244_e)).ptr(), (*(_105259_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_221425c2c_Data> _106213_argd = _221444267_evalExpr((*(_105244_e)), (*(_105259_fc)).get()._field_Args[0LL]);;
	if ((_106213_argd == nullptr)) {
		return nullptr;;
	};
	if (((_221455a92_Prim(_106213_argd.get()._field_Kind.ptr()) == nullptr) || (!(_22145d803_IsStr(_221455a92_Prim(_106213_argd.get()._field_Kind.ptr()).ptr()))))) {
		_221427ca6_pushErr((*(_105244_e)).ptr(), (*(_105259_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_221453793_Str(_106213_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_2214265e0_IsConst(_106213_argd.ptr()))) || (!(_21e6c97b8_IsStr(_106213_argd.get()._field_Constant.ptr()))))) {
		_221427ca6_pushErr((*(_105244_e)).ptr(), (*(_105259_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_221425c2c_Data> _107713_r = _22144e5d5_buildVoidData();;
	jule::Ptr<_2211dc97d_FnIns> _107913_f = _221456c80_Fn((*(_105281_d)).get()._field_Kind.ptr());;
	if ((_107913_f.get()._field_Generics.len() > 0LL)) {
		_107713_r.get()._field_Kind=_107913_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_2211d6ed8_BackendEmitExprModel> _108413_model = jule::new_ptr<_2211d6ed8_BackendEmitExprModel>(_2211d6ed8_BackendEmitExprModel{._field_Code=_21e6c7420_ReadStr(_106213_argd.get()._field_Constant.ptr()), });;
	if (((*(_105259_fc)).get()._field_Args.len() > 1LL)) {
		_108413_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_105259_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_105259_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_20767a572:;
			if (it != expr_end) {
				jule::Ptr<_2211a8cac_Expr> _109021_arg = *it;
				{
					_106213_argd=_22144383d_eval1((*(_105244_e)), _109021_arg);
					if ((_106213_argd == nullptr)) {
						return nullptr;;
					};
					_108413_model.get()._field_Exprs = jule::alloc_for_append(_108413_model.get()._field_Exprs,1);_108413_model.get()._field_Exprs.__push(_106213_argd.get()._field_Model);;
				}
				_iter_next_20767a572:;
				++it;
				goto _iter_begin_20767a572;
			}
			_iter_end_20767a572:;
		};
	};
	_107713_r.get()._field_Model=jule::Any(_108413_model, &__jule_any_type25);
	return _107713_r;;
}



inline jule::Ptr<_221425c2c_Data> _221522e8e_builtinCallerStdDebugOut(jule::Ptr<_22142779a_Eval>* _110334_e, jule::Ptr<_2211acc8e_FnCallExpr>* _110349_fc, jule::Ptr<_221425c2c_Data>* _110371_d) {
	(*(_110371_d))=_22151a294_builtinCallerOut(_110334_e, _110349_fc, _110371_d);
	if (((*(_110371_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_110371_d)).get()._field_Model.cast_ptr<_2211d2ac7_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_110371_d));;
}



inline jule::Ptr<_221425c2c_Data> _221523379_builtinCallerStdDebugOutln(jule::Ptr<_22142779a_Eval>* _111236_e, jule::Ptr<_2211acc8e_FnCallExpr>* _111251_fc, jule::Ptr<_221425c2c_Data>* _111273_d) {
	(*(_111273_d))=_22151a67e_builtinCallerOutln(_111236_e, _111251_fc, _111273_d);
	if (((*(_111273_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_111273_d)).get()._field_Model.cast_ptr<_2211d2eb2_BuiltinOutlnCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return (*(_111273_d));;
}



inline jule::Bool _22161c8d5_FindModuleFile(jule::Slice<jule::Ptr<_21c4ddbd9_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207680610:;
		if (it != expr_end) {
			jule::Ptr<_21c4ddbd9_DirEntry> *_1312_d = it;
			{
				if (((!(_21c4ed468_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && (*(_1312_d)).get()._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_207680610:;
			++it;
			goto _iter_begin_207680610;
		}
		_iter_end_207680610:;
	};
	return false;;
}



inline jule::Str _22161ca17_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_21c4ddbd9_DirEntry>> _2617_dirents = ({
				auto except = static__21d5e0823_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_207680841;
				} jule::Slice<jule::Ptr<_21c4ddbd9_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _22161c8d5_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I32 _3513_n = _2427_path.len();;
			_2427_path=_21d5e012a_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_207680841;
			};
		}
	_iter_next_207680841:;
	}
	_iter_end_207680841:;;
	return jule::Str();;
}



inline jule::Slice<_21d6755de_Log> _22161cc15_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__21c4eb3bc_Read(_21d5de4c0_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_21d6755de_Log>::make({_21d6755de_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _21d5dc237_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_21d6755de_Log>::make({_21d6755de_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_203186a99_FileInfo> _2031cd618_ParseFile(jule::Ptr<_21da20d96_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_203186a99_FileInfo> _2713_finf = jule::new_ptr<_203186a99_FileInfo>();;
	({
		__jule_tuple_x_22117005e_Ast__jule_tuple_s_21d6755de_Log __jule_assign_result = _2031cdb9b_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_22117005e_Ast__jule_tuple_s_21d6755de_Log _2031cdb9b_parseFileset(jule::Ptr<_21da20d96_File> _5521_f) {
	__jule_tuple_x_22117005e_Ast__jule_tuple_s_21d6755de_Log __jule_func_result;
	jule::Ptr<_2031ec714_parser> _5613_p = jule::new_ptr<_2031ec714_parser>();;
	_20320c0e7_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_2211b4724_ScopeTree> _2031ce5c5_newScope(void) {
	return jule::new_ptr<_2211b4724_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _2031ce8b1_isSt(jule::Ptr<_21da1aa0b_Token> _499_current, jule::Ptr<_21da1aa0b_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U32>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U32>(5LLU));
	return __jule_func_result;;
}



inline jule::Bool _2031cec02_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _5526_tokens, jule::I32* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U32>(22LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_21da1aa0b_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U32>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U32>(7LLU)) && _21da1b501_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _2031d0087_nextStPos(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _7015_tokens, jule::I32 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _7113_braceN = 0LL;;
	jule::I32 _7213_i = _7033_start;;
	for (; (_7213_i < (*(_7015_tokens)).len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_21da1aa0b_Token> _7613_tok = (*(_7015_tokens))[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(3LLU)) {
					_case_begin_207710dbb:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_2077132ca:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_2031cec02_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2031ce8b1_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_2077116a2:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < (*(_7015_tokens)).len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2031ce8b1_isSt((*(_7015_tokens))[(_7213_i + 1LL)], _7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_2077114d7:;
						};
						goto _iter_next_20770e5c3;
					}
				}
				_match_end_207710d55:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_20770e5c3;
			};
			if ((_7213_i > _7033_start)) {
				if (_2031cec02_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))) {
					goto _iter_next_20770e5c3;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2031ce8b1_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2031ce8b1_isSt(_7613_tok, _7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_20770e5c3;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_20770e5c3:;
	}
	_iter_end_20770e5c3:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_21da1aa0b_Token__jule_tuple_bool _2031d03c8_skipSt(jule::I32* _13216_i, jule::Slice<jule::Ptr<_21da1aa0b_Token>> _13228_tokens) {
	__jule_tuple_sx_21da1aa0b_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _1339_start = (*(_13216_i));;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2031d0087_nextStPos(&(_13228_tokens), _1339_start);
		(*(_13216_i)) = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_21da1aa0b_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start, (*(_13216_i)));;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_21da1aa0b_Token__jule_tuple_bool __jule_assign_result = _2031d03c8_skipSt(_13216_i, _13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL, (_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_2031d06c5_stmt>> _2031d0a6b_splitStmts(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _15420_tokens) {
	jule::Slice<jule::Ptr<_2031d06c5_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_2031d06c5_stmt>>::alloc(0LL, 20LL);;
	jule::I32 _15613_pos = 0LL;;
	while ((_15613_pos < (*(_15420_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_21da1aa0b_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_21da1aa0b_Token__jule_tuple_bool __jule_assign_result = _2031d03c8_skipSt(&(_15613_pos), (*(_15420_tokens)));
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_2031d06c5_stmt>(_2031d06c5_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_20771ae2b:;
	}
	_iter_end_20771ae2b:;;
	return _15513_stmts;;
}



inline jule::Bool _2031e7258_isTypeOp(jule::Str* _89514_kind) {
	return (((*(_89514_kind)).equal("&", 1) || (*(_89514_kind)).equal("&&", 2)) || (*(_89514_kind)).equal("*", 1));;
}



inline jule::Bool _2031e7544_isTypeRange(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _90221_tokens) {
	jule::Bool _90313_op = false;;
	{
		auto expr = _90221_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2077c64d1:;
		if (it != expr_end) {
			jule::I32 _9049_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> _90412_token = *it;
			{
				if ((_90412_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					if (_90412_token.get()._field_Kind.equal("[", 1)) {
						if (_90313_op) {
							return true;;
						};
						jule::I32 _91025_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_21da1aa0b_Token>> _91125_lTokens = (*(_90221_tokens)).slice(_9049_i);;
						{
							auto expr = &(_91125_lTokens);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_2077c7856:;
							if (it != expr_end) {
								jule::Ptr<_21da1aa0b_Token> _91224_lToken = *it;
								{
									{
										auto &_match_expr{ _91224_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U32>(3LLU)) {
											_case_begin_2077c8ed9:;
											{
												{
													auto &_match_expr{ _91224_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_2077c9825:;
														{
															(_91025_rangeN)++;
															goto _iter_next_2077c7856;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_2077c989c:;
														{
															(_91025_rangeN)--;
															goto _iter_next_2077c7856;
														}
													}
													_match_end_2077c965a:;
												};
											}
										}
										_match_end_2077c8c97:;
									};
									if ((_91025_rangeN == 0LL)) {
										return _2031e7258_isTypeOp(&(_91224_lToken.get()._field_Kind));;
									};
								}
								_iter_next_2077c7856:;
								++it;
								goto _iter_begin_2077c7856;
							}
							_iter_end_2077c7856:;
						};
						return true;;
					};
				};
				if ((!(_2031e7258_isTypeOp(&(_90412_token.get()._field_Kind))))) {
					return false;;
				};
				_90313_op=true;
			}
			_iter_next_2077c64d1:;
			++it;
			_9049_i++;
			goto _iter_begin_2077c64d1;
		}
		_iter_end_2077c64d1:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_21da1aa0b_Token>> _2031e77db_getBlockExpr(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _94022_tokens) {
	jule::I32 _94113_braceN = 0LL;;
	jule::I32 _94213_skipToNextBraceClose = 0LL;;
	{
		auto expr = _94022_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2077cb0a7:;
		if (it != expr_end) {
			jule::I32 _9439_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> _94312_tok = *it;
			{
				{
					auto &_match_expr{ _94312_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(16LLU) || _match_expr == static_cast<jule::U32>(17LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
						_case_begin_2077cbd77:;
						{
							(_94213_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(3LLU)) {
						_case_begin_2077cbdee:;
						{
							{
								auto &_match_expr{ _94312_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_2077ccb8b:;
									{
										if (((_94113_braceN > 0LL) || (_94213_skipToNextBraceClose > 0LL))) {
											if ((_94213_skipToNextBraceClose > 0LL)) {
												(_94213_skipToNextBraceClose)--;
											};
											(_94113_braceN)++;
											goto _match_end_2077cccbd;
										};
										return (*(_94022_tokens)).slice(0LL, _9439_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_2077cd30c:;
									{
										(_94113_braceN)++;
									}
								}
								else {
									_case_begin_2077ccd34:;
									{
										(_94113_braceN)--;
									}
								}
								_match_end_2077cccbd:;
							};
						}
					}
					_match_end_2077cbccd:;
				};
			}
			_iter_next_2077cb0a7:;
			++it;
			_9439_i++;
			goto _iter_begin_2077cb0a7;
		}
		_iter_end_2077cb0a7:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_21da1aa0b_Token__jule_tuple_sx_21da1aa0b_Token _2031e7b71_splitDelim(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _97120_tokens, jule::U32 _97138_delim) {
	__jule_tuple_sx_21da1aa0b_Token__jule_tuple_sx_21da1aa0b_Token __jule_func_result;
	jule::I32 _97213_rangeN = 0LL;;
	{
		auto expr = _97120_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2077cb8c1:;
		if (it != expr_end) {
			jule::I32 _9739_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> _97312_token = *it;
			{
				{
					auto &_match_expr{ _97312_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(3LLU)) {
						_case_begin_2077d04da:;
						{
							{
								auto &_match_expr{ _97312_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_2077d12bb:;
									{
										(_97213_rangeN)++;
										goto _iter_next_2077cb8c1;
									}
								}
								else {
									_case_begin_2077d0dd1:;
									{
										(_97213_rangeN)--;
									}
								}
								_match_end_2077d0c16:;
							};
						}
					}
					else if (_match_expr == _97138_delim) {
						_case_begin_2077d0562:;
						{
							if ((_97213_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_21da1aa0b_Token>> _98725_l = (*(_97120_tokens)).slice(0LL, _9739_i);;
								jule::Slice<jule::Ptr<_21da1aa0b_Token>> _98825_r = (*(_97120_tokens)).slice((_9739_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98725_l;
								__jule_func_result.__jule_result_arg1 = _98825_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_2077d02ba:;
				};
			}
			_iter_next_2077cb8c1:;
			++it;
			_9739_i++;
			goto _iter_begin_2077cb8c1;
		}
		_iter_end_2077cb8c1:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _2031e7e18_findLowestPrecOp(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _99822_tokens) {
	jule::U8 _100313_prec = 255LLU;;
	jule::I32 _100413_precPos = -1LL;;
	jule::I32 _100613_braceN = 0LL;;
	jule::Bool _100713_skipToNextBraceOpen = false;;
	{
		auto expr = _99822_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2077d3ac6:;
		if (it != expr_end) {
			jule::I32 _10089_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> *_100812_token = it;
			{
				{
					
					if (((*(_100812_token)).get()._field_Id == static_cast<jule::U32>(3LLU))) {
						_case_begin_2077d480d:;
						{
							{
								auto &_match_expr{ (*(_100812_token)).get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_2077d5457:;
									{
										_100713_skipToNextBraceOpen=false;
										goto _case_begin_2077d5b72;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_2077d5b72:;
									{
										(_100613_braceN)++;
									}
								}
								else {
									_case_begin_2077d56dd:;
									{
										(_100613_braceN)--;
									}
								}
								_match_end_2077d5523:;
							};
							goto _iter_next_2077d3ac6;
						}
					}
					else if (_100713_skipToNextBraceOpen) {
						_case_begin_2077d4885:;
						{
							goto _iter_next_2077d3ac6;
						}
					}
					else if (((*(_100812_token)).get()._field_Id == static_cast<jule::U32>(16LLU))) {
						_case_begin_2077d490c:;
						{
							_100713_skipToNextBraceOpen=true;
							goto _iter_next_2077d3ac6;
						}
					}
					else if ((_10089_i == 0LL)) {
						_case_begin_2077d4984:;
						{
							goto _iter_next_2077d3ac6;
						}
					}
					else if (((*(_100812_token)).get()._field_Id != static_cast<jule::U32>(7LLU))) {
						_case_begin_2077d4a0b:;
						{
							goto _iter_next_2077d3ac6;
						}
					}
					else if ((_100613_braceN > 0LL)) {
						_case_begin_2077d4a83:;
						{
							goto _iter_next_2077d3ac6;
						}
					}
					_match_end_2077d46a9:;
				};
				jule::Ptr<_21da1aa0b_Token> _103513_left = (*(_99822_tokens))[(_10089_i - 1LL)];;
				if (((_103513_left.get()._field_Id == static_cast<jule::U32>(7LLU)) || (_103513_left.get()._field_Id == static_cast<jule::U32>(11LLU)))) {
					goto _iter_next_2077d3ac6;
				};
				if ((((_10089_i > 1LL) && (_103513_left.get()._field_Id == static_cast<jule::U32>(3LLU))) && _103513_left.get()._field_Kind.equal("]", 1))) {
					jule::Ptr<_21da1aa0b_Token> _104317_lleft = (*(_99822_tokens))[(_10089_i - 2LL)];;
					if (((_104317_lleft.get()._field_Id == static_cast<jule::U32>(3LLU)) && _104317_lleft.get()._field_Kind.equal("[", 1))) {
						if (((*(_100812_token)).get()._field_Kind.equal("&", 1) || (*(_100812_token)).get()._field_Kind.equal("*", 1))) {
							goto _iter_next_2077d3ac6;
						};
					};
				};
				jule::U8 _105213_p = _21da1adb3_Prec((*(_100812_token)).ptr());;
				if (((_105213_p != 0LLU) && (_105213_p <= _100313_prec))) {
					_100313_prec=_105213_p;
					_100413_precPos=_10089_i;
				};
			}
			_iter_next_2077d3ac6:;
			++it;
			_10089_i++;
			goto _iter_begin_2077d3ac6;
		}
		_iter_end_2077d3ac6:;
	};
	return _100413_precPos;;
}



inline jule::Ptr<_2211aa96d_IdentExpr> _2031e81b0_buildIdentExpr(jule::Ptr<_21da1aa0b_Token>* _106124_token) {
	return jule::new_ptr<_2211aa96d_IdentExpr>(_2211aa96d_IdentExpr{._field_Token=(*(_106124_token)), ._field_Ident=(*(_106124_token)).get()._field_Kind, ._field_CppLinked=false});;
}



inline __jule_tuple_sx_21da1aa0b_Token__jule_tuple_int _2031e8457_getRangeExprTokens(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _106928_tokens) {
	__jule_tuple_sx_21da1aa0b_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _107013_rangeN = 0LL;;
	jule::I32 _107113_i = ((*(_106928_tokens)).len() - 1LL);;
	for (; (_107113_i >= 0LL); (_107113_i)--) {
		{
			jule::Ptr<_21da1aa0b_Token> _107313_tok = (*(_106928_tokens))[_107113_i];;
			if ((_107313_tok.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _107313_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_2077de021:;
						{
							(_107013_rangeN)++;
						}
					}
					else {
						_case_begin_2077ddb25:;
						{
							(_107013_rangeN)--;
						}
					}
					_match_end_2077dd916:;
				};
			};
			if ((_107013_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_106928_tokens)).slice(0LL, _107113_i);
				__jule_func_result.__jule_result_arg1 = _107013_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_2077dcb02:;
	}
	_iter_end_2077dcb02:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _107013_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _2031e91b1_checkAssignTokens(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_21da200a4_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I32 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20787b245:;
		if (it != expr_end) {
			jule::Ptr<_21da1aa0b_Token> *_2112_t = it;
			{
				if (((*(_2112_t)).get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ (*(_2112_t)).get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_20787c4bb:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_20787c0c0:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_20787bdb1:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_20787b245;
				} else if ((((*(_2112_t)).get()._field_Id == static_cast<jule::U32>(7LLU)) && _21da205e3_IsAssignOp((*(_2112_t)).get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_20787b245:;
			++it;
			goto _iter_begin_20787b245;
		}
		_iter_end_20787b245:;
	};
	return false;;
}



inline _21d6755de_Log _2031ea3d2_makeErr(jule::I32 _5212_row, jule::I32 _5222_col, jule::Ptr<_21da20d96_File>* _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _21d6755de_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=(*(_5233_f)).get()._field_Path, ._field_Text=_21d675a2e_Logf(_5243_fmt, _5256_args), };;
}



inline jule::Slice<jule::Ptr<_21da1aa0b_Token>> _2031ea8aa_range(jule::I32* _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _7163_tokens) {
	if (((*(_7115_i)) >= (*(_7163_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_21da1aa0b_Token> _759_tok = (*(_7163_tokens))[(*(_7115_i))];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U32>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	((*(_7115_i)))++;
	jule::I32 _8013_rangeN = 1LL;;
	jule::I32 _819_start = (*(_7115_i));;
	for (; ((_8013_rangeN != 0LL) && ((*(_7115_i)) < (*(_7163_tokens)).len())); ((*(_7115_i)))++) {
		{
			jule::Ptr<_21da1aa0b_Token> _8313_token = (*(_7163_tokens))[(*(_7115_i))];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_207882c96:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_207882d1d:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_207882a76:;
				};
			};
		}
	_iter_next_207881ca6:;
	}
	_iter_end_207881ca6:;;
	return (*(_7163_tokens)).slice(_819_start, ((*(_7115_i)) - 1LL));;
}



inline __jule_tuple_sx_21da1aa0b_Token__jule_tuple_sx_21da1aa0b_Token _2031eab52_rangeLast(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _10319_tokens) {
	__jule_tuple_sx_21da1aa0b_Token__jule_tuple_sx_21da1aa0b_Token __jule_func_result;
	if (((*(_10319_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if (((*(_10319_tokens))[((*(_10319_tokens)).len() - 1LL)].get()._field_Id != static_cast<jule::U32>(3LLU))) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _10913_braceN = 0LL;;
	jule::I32 _11013_i = ((*(_10319_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_21da1aa0b_Token> _11213_token = (*(_10319_tokens))[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_207887086:;
						{
							(_10913_braceN)++;
							goto _iter_next_207883cdb;
						}
					}
					else {
						_case_begin_207886b8a:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_20788697b:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_10319_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_10319_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_207883cdb:;
	}
	_iter_end_207883cdb:;;
	__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log _2031eb03c_partsKind(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_func_result;
	if (((*(_13219_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _13713_parts = nullptr;;
	jule::Slice<_21d6755de_Log> _13813_errors = nullptr;;
	jule::I32 _14013_rangeN = 0LL;;
	jule::I32 _14113_last = 0LL;;
	{
		auto expr = _13219_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207889c8c:;
		if (it != expr_end) {
			jule::I32 _1429_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_20788b40e:;
							{
								(_14013_rangeN)++;
								goto _iter_next_207889c8c;
							}
						}
						else {
							_case_begin_20788b013:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_20788ad04:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_207889c8c;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_21d6755de_Log _16121_err = _2031ea3d2_makeErr(_14212_token.get()._field_Row, _14212_token.get()._field_Column, &(_14212_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last, _1429_i));;
					_14113_last=static_cast<jule::I32>((_1429_i + 1LL));
				};
			}
			_iter_next_207889c8c:;
			++it;
			_1429_i++;
			goto _iter_begin_207889c8c;
		}
		_iter_end_207889c8c:;
	};
	if ((_14113_last < (*(_13219_tokens)).len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_21da1aa0b_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log _2031eb427_parts(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _18415_tokens, jule::U32 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_21da1aa0b_Token__jule_tuple_s_21d6755de_Log __jule_func_result;
	if (((*(_18415_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_21da1aa0b_Token>>> _18913_parts = nullptr;;
	jule::Slice<_21d6755de_Log> _19013_errors = nullptr;;
	jule::I32 _19213_rangeN = 0LL;;
	jule::I32 _19313_last = 0LL;;
	{
		auto expr = _18415_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207891414:;
		if (it != expr_end) {
			jule::I32 _1949_i = it - expr->begin();
			jule::Ptr<_21da1aa0b_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_207892a86:;
							{
								(_19213_rangeN)++;
								goto _iter_next_207891414;
							}
						}
						else {
							_case_begin_20789268a:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_20789247b:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_207891414;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_21d6755de_Log _21321_err = _2031ea3d2_makeErr(_19412_token.get()._field_Row, _19412_token.get()._field_Column, &(_19412_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last, _1949_i));;
					_19313_last=static_cast<jule::I32>((_1949_i + 1LL));
				};
			}
			_iter_next_207891414:;
			++it;
			_1949_i++;
			goto _iter_begin_207891414;
		}
		_iter_end_207891414:;
	};
	if ((_19313_last < (*(_18415_tokens)).len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_21da1aa0b_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _2031eb6be_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_20789602e:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_207896095:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_207895d20:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_207891bea:;
			{
				return jule::Str();;
			}
		}
		_match_end_20789576a:;
	};
}



inline _21d6755de_Log _2031ebaa9_compilerErr(jule::Ptr<_21da1aa0b_Token>* _24317_token, jule::Str* _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _21d6755de_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_24317_token)).get()._field_Row, ._field_Column=(*(_24317_token)).get()._field_Column, ._field_Path=(*(_24317_token)).get()._field_File.get()._field_Path, ._field_Text=_21d675a2e_Logf((*(_24333_fmt)), _24346_args), ._field_Line=_21da22073_GetRow((*(_24317_token)).get()._field_File.ptr(), (*(_24317_token)).get()._field_Row), };;
}



inline void _2031ebed8_pushSuggestion(_21d6755de_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_21d675a2e_Logf(_25441_fmt, _25454_args);
}



inline jule::Str _2031ec280_tokstoa(jule::Slice<jule::Ptr<_21da1aa0b_Token>>* _25813_tokens) {
	jule::I32 _25913_n = 0LL;;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207898b58:;
		if (it != expr_end) {
			jule::Ptr<_21da1aa0b_Token> *_26012_token = it;
			{
				_25913_n+=(*(_26012_token)).get()._field_Kind.len();
			}
			_iter_next_207898b58:;
			++it;
			goto _iter_begin_207898b58;
		}
		_iter_end_207898b58:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20789930c:;
		if (it != expr_end) {
			jule::Ptr<_21da1aa0b_Token> *_26412_token = it;
			{
				_26313_s+=(*(_26412_token)).get()._field_Kind;
			}
			_iter_next_20789930c:;
			++it;
			goto _iter_begin_20789930c;
		}
		_iter_end_20789930c:;
	};
	return _26313_s;;
}



inline jule::Bool _20320c3c2_isPub(jule::Str* _203711_ident) {
	jule::I32 _203810_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c5cc305_DecodeRuneStr((*(_203711_ident)));
		_203810_r = __jule_assign_result.__jule_result_arg0;
	});
	return _21d59ea13_IsUpper(_203810_r);;
}



inline jule::Ptr<_2211a478b_TypeDecl> _20320cc63_buildVoidType(void) {
	return jule::new_ptr<_2211a478b_TypeDecl>();;
}



inline jule::Ptr<_2211a478b_TypeDecl> _20320cea5_buildPrimType(jule::Ptr<_21da1aa0b_Token> _2322_t) {
	return jule::new_ptr<_2211a478b_TypeDecl>(_2211a478b_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_2211a4d52_IdentTypeDecl>(_2211a4d52_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type20)});;
}



inline __jule_tuple_bool__jule_tuple_bool _2215e1942_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_20798632d:;
			{
				__jule_func_result.__jule_result_arg0=_21d678900_IsWindows(_21d71ac4a_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_207985c34:;
			{
				__jule_func_result.__jule_result_arg0=_21d678ba8_IsDarwin(_21d71ac4a_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_207985c9a:;
			{
				__jule_func_result.__jule_result_arg0=_21d678e50_IsLinux(_21d71ac4a_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_207985d11:;
			{
				__jule_func_result.__jule_result_arg0=_21d679a55_IsUnix(_21d71ac4a_Os);
			}
		}
		else {
			_case_begin_2079854d6:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_207985904:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _2215e1a74_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_2079881cb:;
			{
				__jule_func_result.__jule_result_arg0=_21d67926e_IsI386(_21d71b014_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_207988242:;
			{
				__jule_func_result.__jule_result_arg0=_21d679516_IsAmd64(_21d71b014_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_2079882a8:;
			{
				__jule_func_result.__jule_result_arg0=_21d6797ad_IsArm64(_21d71b014_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_20798831e:;
			{
				__jule_func_result.__jule_result_arg0=_21d67a171_Is64Bit(_21d71b014_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_207988385:;
			{
				__jule_func_result.__jule_result_arg0=_21d679dc9_Is32Bit(_21d71b014_Arch);
			}
		}
		else {
			_case_begin_20798797d:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_207987d9b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _2215e1ba6_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_21d5deca6_Base(_5029_p);
	jule::I32 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _21d5de767_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I32 _6413_i = _21d5d7b17_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2215e1942_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2215e1a74_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I32>(_21d5d7b17_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2215e1942_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2215e1a74_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2215e1a74_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2215e1942_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2215e1942_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _22160b73c_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(_21d71ac4a_Os);;
	if (_21d679a55_IsUnix(_21d71ac4a_Os)) {
		(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(jule::Str("unix", 4));;
	};
}



inline void _22160b990_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(_21d71b014_Arch);;
	if (_21d67a171_Is64Bit(_21d71b014_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x64", 3));;
	};
	if (_21d679dc9_Is32Bit(_21d71b014_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x32", 3));;
	};
}



inline void _22160bc48_initVars(jule::Slice<jule::Str>* _5518_vars, _22160b42e_CompileInfo* _5532_info) {
	_22160b73c_setOsVars(_5518_vars);
	_22160b990_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("production", 10));;
	};
	if ((*(_5532_info))._field_Test) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2079941b5:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_20799422b:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_207993c0e:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_207994a45:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_207994aab:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_207994b22:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_2079949e0:;
	};
}



inline jule::Slice<jule::U8> _203211e65_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__21c4eb3bc_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_21d719bb1_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _21d6755de_Log _20321221d_flatCompilerErr(jule::Str _4120_text) {
	return _21d6755de_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Text=_4120_text, };;
}



inline void _20321662e_pushPasses(jule::Ptr<_2212456d9_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079c5669:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2079c60d7:;
					if (it != expr_end) {
						_2211e1c18_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_2079c60d7;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_2079c7072:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_2079c60d7;
										};
									}
									_iter_next_2079c7072:;
									++it;
									goto _iter_begin_2079c7072;
								}
								_iter_end_2079c7072:;
							};
							(*(_11144_passes)) = jule::alloc_for_append((*(_11144_passes)),1);(*(_11144_passes)).__push(_11416_pass._field_Text);;
						}
						_iter_next_2079c60d7:;
						++it;
						goto _iter_begin_2079c60d7;
					}
					_iter_end_2079c60d7:;
				};
			}
			_iter_next_2079c5669:;
			++it;
			goto _iter_begin_2079c5669;
		}
		_iter_end_2079c5669:;
	};
}



inline jule::Slice<jule::Str> _2032169b4_getAllUniquePasses(jule::Ptr<_2212456d9_Package>* _12828_pkg, jule::Slice<jule::Ptr<_221242a9e_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_20321662e_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2079c85c3:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_20321662e_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_2079c85c3:;
			++it;
			goto _iter_begin_2079c85c3;
		}
		_iter_end_2079c85c3:;
	};
	return _12913_passes;;
}



inline _22160b42e_CompileInfo _203216bb2_buildCompileInfo(void) {
	_22160b42e_CompileInfo _14213_info = _22160b42e_CompileInfo{._field_Prod=_21b538b25_Production, ._field_Test=_21b5381b8_Test, };;
	{
		auto &_match_expr{ _21b53643b_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2079c97a0:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2079c9827:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_2079c9739:;
	};
	{
		auto &_match_expr{ _21b5378d2_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2079c844c:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2079c9bbd:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2079c9c34:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_2079ca0ca:;
	};
	return _14213_info;;
}



inline void _203344927_EliminateDefines(jule::Ptr<_203214e13_IR>* _28526_ir) {
	jule::Ptr<_20331045e_ObjectDeadCode> _28613_ocd = static__203310937_new(_28526_ir);;
	_20334465d_elimanate(_28613_ocd);
}



inline jule::Ptr<_221171307_Directive> _203344cac_findDirective(jule::Slice<jule::Ptr<_221171307_Directive>>* _29123_directives, jule::Str _29154_tag) {
	{
		auto expr = _29123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207a14158:;
		if (it != expr_end) {
			jule::Ptr<_221171307_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_207a14158:;
			++it;
			goto _iter_begin_207a14158;
		}
		_iter_end_207a14158:;
	};
	return nullptr;;
}



inline jule::Bool _2033450ed_hasDirective(jule::Slice<jule::Ptr<_221171307_Directive>>* _30118_directives, jule::Str _30149_tag) {
	return (_203344cac_findDirective(_30118_directives, _30149_tag) != nullptr);;
}



inline void _203348c4a_eliminateDeadCodeOfScope(jule::Ptr<_221224135_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_221226874_Label>> _2429_labels = jule::Slice<jule::Ptr<_221226874_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_221226b60_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_221226b60_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_203345d46_scopeDeadCode> _24413_sdc = jule::new_ptr<_203345d46_scopeDeadCode>(_203345d46_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_221226874_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_221226b60_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_20334895e_optimizeStmts(_24413_sdc);
	};
}



inline void _203348ed1_eliminateScopeFunctions(jule::Slice<jule::Ptr<_2211d9ccc_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20791acda:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20791b390:;
					if (it != expr_end) {
						jule::Ptr<_2211dc97d_FnIns> _25621_ins = *it;
						{
							_203348c4a_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_20791b390:;
						++it;
						goto _iter_begin_20791b390;
					}
					_iter_end_20791b390:;
				};
			}
			_iter_next_20791acda:;
			++it;
			goto _iter_begin_20791acda;
		}
		_iter_end_20791acda:;
	};
}



inline void _203349223_eliminateFunctionsScopePackage(jule::Ptr<_2212456d9_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20791b824:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _26317_f = *it;
			{
				_203348ed1_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_20791b824:;
			++it;
			goto _iter_begin_20791b824;
		}
		_iter_end_20791b824:;
	};
}



inline void _2033494ba_eliminateScopePackage(jule::Ptr<_2212456d9_Package>* _26831_pkg) {
	_203349223_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _2033496c9_EliminateScopes(jule::Ptr<_203214e13_IR>* _27325_ir) {
	jule::I32 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_221242a9e_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_2033494ba_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_20791cc87:;
	}
	_iter_end_20791cc87:;;
	_2033494ba_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _221529e41_isStdPackage(jule::Str _43817_f, jule::Str _43825_p) {
	return _21d5d474b_HasPrefix(_43817_f, _21d5de4c0_Join(jule::Slice<jule::Str>::make({_21d71a19a_PathStdlib,_43825_p})));;
}



inline jule::Bool _22152a24e_isConstantValidConditionalCase(jule::Ptr<_221224531_If>* _44236_i) {
	{
		auto &_match_expr{ (*(_44236_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_207aeda5b:;
			{
				jule::Ptr<_21e6c53da_Const> _44513_c = (*(_44236_i)).get()._field_Expr.cast_ptr<_21e6c53da_Const>(&__jule_any_type19);;
				return (_21e6c9554_IsBool(_44513_c.ptr()) && _21e6c71ab_ReadBool(_44513_c.ptr()));;
			}
		}
		_match_end_207aed8e6:;
	};
	return false;;
}



inline jule::Bool _22152a507_isUnreachableExpr(jule::Any* _45123_expr) {
	{
		auto &_match_expr{ (*(_45123_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_207aee474:;
			{
				jule::Ptr<_21e6c53da_Const> _45413_c = (*(_45123_expr)).cast_ptr<_21e6c53da_Const>(&__jule_any_type19);;
				return (_21e6c9554_IsBool(_45413_c.ptr()) && (!(_21e6c71ab_ReadBool(_45413_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_207aee4eb:;
			{
				jule::Ptr<_2211cbb59_BinopExprModel> _45713_m = (*(_45123_expr)).cast_ptr<_2211cbb59_BinopExprModel>(&__jule_any_type114);;
				if (_45713_m.get()._field_Op.get()._field_Kind.equal("&&", 2)) {
					return (_22152a507_isUnreachableExpr(&(_45713_m.get()._field_Left.get()._field_Model)) || _22152a507_isUnreachableExpr(&(_45713_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_207aedb27:;
	};
	return false;;
}



inline jule::Bool _22152a848_isConstantValidMatchCase(jule::Ptr<_221228997_Case>* _46630_case) {
	{
		auto expr = &((*(_46630_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b007e9:;
		if (it != expr_end) {
			jule::Ptr<_221425c2c_Data> *_46712_expr = it;
			{
				if (((_2214265e0_IsConst((*(_46712_expr)).ptr()) && _21e6c9554_IsBool((*(_46712_expr)).get()._field_Constant.ptr())) && _21e6c71ab_ReadBool((*(_46712_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_207b007e9:;
			++it;
			goto _iter_begin_207b007e9;
		}
		_iter_end_207b007e9:;
	};
	return false;;
}



inline jule::Bool _22152aae0_isUnreachableConditionalCase(jule::Ptr<_221224531_If>* _47534_i) {
	return _22152a507_isUnreachableExpr(&((*(_47534_i)).get()._field_Expr));;
}



inline jule::Bool _22152ad98_isUnreachableMatchCase(jule::Ptr<_221228997_Case>* _47928_case) {
	{
		auto expr = &((*(_47928_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207b04204:;
		if (it != expr_end) {
			jule::Ptr<_221425c2c_Data> *_48012_expr = it;
			{
				if ((!(_22152a507_isUnreachableExpr(&((*(_48012_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_207b04204:;
			++it;
			goto _iter_begin_207b04204;
		}
		_iter_end_207b04204:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _221533796_checkForBitShiftOpt(jule::Ptr<_2211cb692_OperandExprModel>* _46625_l, jule::Ptr<_2211cb692_OperandExprModel>* _46648_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_21e6c48d4_IsInt(_221453793_Str((*(_46625_l)).get()._field_Kind.ptr())))) || (!(_21e6c48d4_IsInt(_221453793_Str((*(_46648_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_46648_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_207b3e8c1:;
			{
				goto _match_end_207b40383;
			}
		}
		else {
			_case_begin_207b404c6:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_207b40383:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_21e6c7b5c_AsU64((*(_46648_r)).get()._field_Model.cast_ptr<_21e6c53da_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4809_j = _21e6766cc_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4819_z = static_cast<jule::U64>(_4809_j);;
	if ((static_cast<jule::F64>(_4819_z) != _4809_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4819_z;
	return __jule_func_result;;
}



inline void _221535a95_PushOptLevel(jule::I32 _3417_level) {
	_221533ee4_Copy=(_3417_level >= static_cast<jule::I32>(1LL));
	_221534302_Deadcode=(_3417_level >= static_cast<jule::I32>(1LL));
	_2215345bb_Append=(_3417_level >= static_cast<jule::I32>(1LL));
	_2215348c9_Math=(_3417_level >= static_cast<jule::I32>(1LL));
	_221534b93_Access=(_3417_level >= static_cast<jule::I32>(1LL));
	_221534e5c_Inline=(_3417_level >= static_cast<jule::I32>(1LL));
	_221535226_Ptr=(_3417_level >= static_cast<jule::I32>(1LL));
	_221535600_Cond=(_3417_level >= static_cast<jule::I32>(1LL));
	_2215358b9_Str=(_3417_level >= static_cast<jule::I32>(1LL));
}



inline void _20335367d_detectEnabled(void) {
	_20335169d_exprEnabled=(((_221535226_Ptr || _2215348c9_Math) || _221534b93_Access) || _221535600_Cond);
	_2033518bd_scopeEnabled=(((_221535600_Cond || _2215345bb_Append) || _221533ee4_Copy) || _2215358b9_Str);
}



inline void _20337685a_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_21d719bb1_Exit(1LL);
}



inline jule::U64 _203bcd117_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _203bcd425_unixYearToSeconds(jule::U64 _20122_y, jule::Bool* _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		(*(_20140_leap))=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if ((*(_20140_leap))) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		(*(_20140_leap))=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			(*(_20140_leap))=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			(*(_20140_leap))=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if ((*(_20140_leap))) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _203bcd7aa_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_207bbe18c:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_207bbe324:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_207bbe38a:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_207bbe401:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_207bbe467:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_207bbe4cd:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_207bbe544:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_207bbe5aa:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_207bbe621:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_207bbe687:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_207bbe70e:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_207bbe137:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _203a607a2_isCopyOptimizable(jule::Ptr<_221425c2c_Data>* _81223_expr) {
	if ((!((*(_81223_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_81223_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_207c7ab1c:;
			{
				return false;;
			}
		}
		_match_end_207c7aab7:;
	};
	return true;;
}



inline jule::Bool _203a60b37_isIterCopyOptimizable(jule::Ptr<_221425c2c_Data>* _82327_expr, jule::Ptr<_22126b17c_Var>* _82341_v) {
	if (((!((*(_82327_expr)).get()._field_Lvalue)) && (!(_221454b18_Mutable((*(_82327_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_82341_v)).get()._field_Mutable)) && (!((*(_82327_expr)).get()._field_Mutable)));;
}



inline jule::Str _203b3aa25_decomposeCommonEsq(jule::U8 _148823_b) {
	{
		auto &_match_expr{ _148823_b };
		
		if (_match_expr == '\\') {
			_case_begin_207d29d53:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_207d2a3d6:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_207d2a44c:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_207d2a4b3:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_207d2a0d9:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_207d2a150:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_207d2a1b6:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_207d2a22c:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_207d2a705:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_207d2a76b:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_207d29e96:;
			{
				return jule::Str();;
			}
		}
		_match_end_207d29ddb:;
	};
}



inline jule::Str _203b3ad11_sbtoa(jule::U8 _151510_b) {
	if ((_151510_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_151510_b < 128LLU)) {
		jule::Str _152013_seq = _203b3aa25_decomposeCommonEsq(_151510_b);;
		if ((!(_152013_seq.empty()))) {
			return _152013_seq;;
		};
		if (((32LL <= _151510_b) && (_151510_b <= 126LLU))) {
			return jule::Str::from_byte(_151510_b);;
		};
	};
	jule::Str _15289_seq = _21e6b53db_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_151510_b)), 8LL);;
	if ((_15289_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _15289_seq);;
	};
	return (jule::Str("\\", 1) + _15289_seq);;
}



inline jule::Str _203b3b0a8_cstrBytes(jule::Slice<jule::U8> _153514_bytes) {
	jule::Str _153613_lit = jule::Str::alloc(0LL, _153514_bytes.len());;
	{
		auto expr = &(_153514_bytes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207d312cc:;
		if (it != expr_end) {
			jule::U8 *_153712_b = it;
			{
				_153613_lit+=_203b3ad11_sbtoa((*(_153712_b)));
			}
			_iter_next_207d312cc:;
			++it;
			goto _iter_begin_207d312cc;
		}
		_iter_end_207d312cc:;
	};
	return _153613_lit;;
}



inline jule::Str _203b3b3c7_cstrLit(jule::Slice<jule::U8> _154312_bytes) {
	return ((jule::Str("\"", 1) + _203b3b0a8_cstrBytes(_154312_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _203b3b6d5_ftoa(jule::F64 _15479_f, jule::I32 _154717_bitsize) {
	if ((_154717_bitsize != 32LL)) {
		if ((_15479_f == static_cast<jule::F64>(static_cast<jule::I64>(_15479_f)))) {
			return _203b3b97c_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_15479_f)));;
		};
		if ((_15479_f == static_cast<jule::F64>(static_cast<jule::U64>(_15479_f)))) {
			return _203b3bc24_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_15479_f)));;
		};
	};
	jule::Str _155613_m = _21e6a0041_FmtFloat(_15479_f, 'f', -1LL, _154717_bitsize);;
	if ((!(_21d5d9498_Contains(_155613_m, jule::Str(".", 1))))) {
		(_155613_m).append(".0", 2);
	};
	return _155613_m;;
}



inline jule::Str _203b3b97c_itoa(jule::I64 _15639_x) {
	{
		
		if ((_15639_x == jule::MAX_I64)) {
			_case_begin_207d348a7:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_15639_x == jule::MIN_I64)) {
			_case_begin_207d3491d:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_207d34764:;
	};
	jule::Str _15719_fmt = _21e6b5771_FmtInt(_15639_x, 10LL);;
	if (_21d67a171_Is64Bit(jule::Str("i386", 4))) {
		return (_15719_fmt + jule::Str("LL", 2));;
	};
	return (_15719_fmt + jule::Str("L", 1));;
}



inline jule::Str _203b3bc24_utoa(jule::U64 _15789_x) {
	{
		
		if ((_15789_x == jule::MAX_U64)) {
			_case_begin_207d36579:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_207d3647a:;
	};
	jule::Str _15849_fmt = _21e6b53db_FmtUint(_15789_x, 10LL);;
	if (_21d67a171_Is64Bit(jule::Str("i386", 4))) {
		return (_15849_fmt + jule::Str("LLU", 3));;
	};
	return (_15849_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _203b3c0cb_isForwarded(jule::Ptr<_221224135_Scope>* _159117_s) {
	jule::Any _15929_last = (*(_159117_s)).get()._field_Stmts[((*(_159117_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15929_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_207d37d50:;
			{
				{
					auto &_match_expr{ _15929_last.cast_ptr<_221425c2c_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_207d38dc8:;
						{
							return true;;
						}
					}
					else {
						_case_begin_207d39291:;
						{
							return false;;
						}
					}
					_match_end_207d38ec7:;
				};
			}
		}
		else {
			_case_begin_207d38614:;
			{
				return true;;
			}
		}
		_match_end_207d38537:;
	};
}



inline jule::Bool _203b3c395_isBuiltinCallHasDebuginf(jule::Ptr<_2211cd9c4_FnCallExprModel>* _160630_m) {
	if ((!(_2211ddd14_IsBuiltin((*(_160630_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_160630_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_207d39538:;
			{
				jule::Ptr<_2211d2401_CommonSubIdentExprModel> _161213_csie = (*(_160630_m)).get()._field_Expr.cast_ptr<_2211d2401_CommonSubIdentExprModel>(&__jule_any_type73);;
				return _161213_csie.get()._field_Ident.equal("swap", 4);;
			}
		}
		else {
			_case_begin_207d38856:;
			{
				return false;;
			}
		}
		_match_end_207d38801:;
	};
}



inline jule::Bool _203b3c5c6_isExprComesFromBind(jule::Ptr<_221425c2c_Data>* _161925_d) {
	{
		auto &_match_expr{ (*(_161925_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_207d3b7b0:;
			{
				return (*(_161925_d)).get()._field_Model.cast_ptr<_22126b17c_Var>(&__jule_any_type8).get()._field_CppLinked;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_207d3b826:;
			{
				return (*(_161925_d)).get()._field_Model.cast_ptr<_2211d1345_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_CppLinked;;
			}
		}
		else {
			_case_begin_207d3ae30:;
			{
				return false;;
			}
		}
		_match_end_207d3adca:;
	};
}



inline jule::Bool _203b3c86d_isAny(jule::Ptr<_221453397_TypeKind>* _163115_t) {
	if ((_221456543_TypeEnum((*(_163115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_22145a5be_Prim> _16359_prim = _221455a92_Prim((*(_163115_t)).ptr());;
	return ((_16359_prim != nullptr) && _22145da67_IsAny(_16359_prim.ptr()));;
}



inline void _203be1647_iterFiles(jule::Ptr<_2212456d9_Package>* _136819_pkg, jule::Fn<void(jule::Ptr<_221421222_SymbolTable>*)> _136834_f) {
	{
		auto expr = &((*(_136819_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207ead3e3:;
		if (it != expr_end) {
			jule::Ptr<_221421222_SymbolTable> _136917_file = *it;
			{
				_136834_f(&(_136917_file));
			}
			_iter_next_207ead3e3:;
			++it;
			goto _iter_begin_207ead3e3;
		}
		_iter_end_207ead3e3:;
	};
}



inline jule::Str _203be1933_concatAllParts(jule::Slice<jule::Ptr<_21da1aa0b_Token>> _137519_parts) {
	jule::I32 _137613_n = 0LL;;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207eae614:;
		if (it != expr_end) {
			jule::Ptr<_21da1aa0b_Token> *_137712_part = it;
			{
				_137613_n+=(*(_137712_part)).get()._field_Kind.len();
			}
			_iter_next_207eae614:;
			++it;
			goto _iter_begin_207eae614;
		}
		_iter_end_207eae614:;
	};
	if ((_137613_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _138313_s = jule::Str::alloc(0LL, _137613_n);;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207eb066a:;
		if (it != expr_end) {
			jule::Ptr<_21da1aa0b_Token> *_138412_p = it;
			{
				_138313_s+=(*(_138412_p)).get()._field_Kind;
			}
			_iter_next_207eb066a:;
			++it;
			goto _iter_begin_207eb066a;
		}
		_iter_end_207eb066a:;
	};
	return _138313_s;;
}



inline jule::Bool _203be1c74_containsTraitMethod(jule::Ptr<_2211ebeed_Trait>* _139129_t, jule::Str* _139141_ident) {
	{
		auto expr = &((*(_139129_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207eb1209:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _139212_m = *it;
			{
				if ((_139212_m.get()._field_Ident == (*(_139141_ident)))) {
					return true;;
				};
			}
			_iter_next_207eb1209:;
			++it;
			goto _iter_begin_207eb1209;
		}
		_iter_end_207eb1209:;
	};
	return false;;
}



inline void _203be2071_pushMethodsFromInherit(jule::Ptr<_2211ebeed_Trait>* _140332_dest, jule::Ptr<_2211ebeed_Trait>* _140351_src) {
	_203be234b_pushMethodsFromInherits(_140332_dest, _140351_src);
	{
		auto expr = &((*(_140351_src)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207eb222c:;
		if (it != expr_end) {
			jule::Ptr<_2211d9ccc_Fn> _140517_m = *it;
			{
				if ((!(_203be1c74_containsTraitMethod(_140332_dest, &(_140517_m.get()._field_Ident))))) {
					(*(_140332_dest)).get()._field_Methods = jule::alloc_for_append((*(_140332_dest)).get()._field_Methods,1);(*(_140332_dest)).get()._field_Methods.__push(_140517_m);;
				};
			}
			_iter_next_207eb222c:;
			++it;
			goto _iter_begin_207eb222c;
		}
		_iter_end_207eb222c:;
	};
}



inline void _203be234b_pushMethodsFromInherits(jule::Ptr<_2211ebeed_Trait>* _141433_dest, jule::Ptr<_2211ebeed_Trait>* _141452_src) {
	{
		auto expr = &((*(_141452_src)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_207eb2617:;
		if (it != expr_end) {
			jule::Ptr<_221459c50_TypeSymbol> _141517_inh = *it;
			{
				jule::Ptr<_2211ebeed_Trait> _141617_t2 = _221457258_Trait(_141517_inh.get()._field_Kind.ptr());;
				_203be2071_pushMethodsFromInherit(_141433_dest, &(_141617_t2));
			}
			_iter_next_207eb2617:;
			++it;
			goto _iter_begin_207eb2617;
		}
		_iter_end_207eb2617:;
	};
}



inline jule::Ptr<_221171307_Directive> _203c00568_findDirective(jule::Slice<jule::Ptr<_221171307_Directive>>* _46623_directives, jule::Str _46654_tag) {
	{
		auto expr = _46623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2080a11ea:;
		if (it != expr_end) {
			jule::Ptr<_221171307_Directive> _46717_dr = *it;
			{
				if ((_46717_dr.get()._field_Tag.get()._field_Kind == _46654_tag)) {
					return _46717_dr;;
				};
			}
			_iter_next_2080a11ea:;
			++it;
			goto _iter_begin_2080a11ea;
		}
		_iter_end_2080a11ea:;
	};
	return nullptr;;
}



inline jule::Bool _203c008ed_hasDirective(jule::Slice<jule::Ptr<_221171307_Directive>>* _47618_directives, jule::Str _47649_tag) {
	return (_203c00568_findDirective(_47618_directives, _47649_tag) != nullptr);;
}



inline jule::Bool _203c00b95_shouldInitialized(jule::Ptr<_221453397_TypeKind>* _48327_t) {
	jule::Ptr<_22145a5be_Prim> _4849_prim = _221455a92_Prim((*(_48327_t)).ptr());;
	if ((_4849_prim != nullptr)) {
		return ((!(_22145da67_IsAny(_4849_prim.ptr()))) && (!(_22145d803_IsStr(_4849_prim.ptr()))));;
	};
	{
		
		if ((_221455d06_Sptr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2080a4044:;
			{
				return false;;
			}
		}
		else if ((_2214574bc_Map((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2080a396c:;
			{
				return false;;
			}
		}
		else if ((_221456a1b_Slc((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2080a39e4:;
			{
				return false;;
			}
		}
		else if ((_221457258_Trait((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2080a3a6b:;
			{
				return false;;
			}
		}
		else if ((_221456c80_Fn((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2080a3c25:;
			{
				return false;;
			}
		}
		else if ((_2214567a7_Arr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2080a3c8b:;
			{
				jule::Ptr<_22146195a_Arr> _50017_arr = _2214567a7_Arr((*(_48327_t)).ptr());;
				return _203c00b95_shouldInitialized(&(_50017_arr.get()._field_Elem));;
			}
		}
		else if ((_221456ee4_Struct((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2080a3d02:;
			{
				return false;;
			}
		}
		else {
			_case_begin_2080a32eb:;
			{
				return true;;
			}
		}
		_match_end_2080a3296:;
	};
}



inline void _21d71e039_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _21d71e28c_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_21d71e039_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _4113_max = _21d71dd5d_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_21d71dd5d_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208147648:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I32 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_208147648:;
			++it;
			goto _iter_begin_208147648;
		}
		_iter_end_208147648:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto expr = &(_21d71dd5d_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20814900c:;
		if (it != expr_end) {
			jule::I32 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_4913_s+=(*(_5112_part))[0LL];
				_4913_s+=_21d5d3ecb_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_4913_s+=(*(_5112_part))[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					(_4913_s).append("\n", 1);
				};
			}
			_iter_next_20814900c:;
			++it;
			_519_i++;
			goto _iter_begin_20814900c;
		}
		_iter_end_20814900c:;
	};
	jule::outln(_4913_s);
}



inline void _21d71e49b_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_21d71e039_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.14", 10));
}



inline void _21d71e688_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _21d71e7ed_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _21d71ea0c_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_21d71e039_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_208150530:;
			{
				_21d71e688_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_208150244:;
			{
				_21d71e7ed_toolDistarch();
			}
		}
		else {
			_case_begin_20814d8e6:;
			{
				_21d71e039_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_20814ec9e:;
	};
}



inline void _21d71ec1b_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_21d71e039_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.14", 25));
	jule::outln(jule::Str("architecture: i386", 18));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _21b53643b_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _21b5378d2_CppStd));
}



inline void _21d720007_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_21d71e039_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_208153e5c:;
			{
				({
					auto except = static__21c4eb71e_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_21d71e039_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_208152983:;
			{
				_21d71e039_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_208153a72:;
	};
}



inline jule::Bool _21d72029e_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_208155436:;
			{
				_21d71e28c_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_2081557dd:;
			{
				_21d71e49b_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_208155854:;
			{
				_21d71ea0c_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_208155931:;
			{
				_21d71ec1b_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_208155997:;
			{
				_21d720007_mod(_15320_args);
			}
		}
		else {
			_case_begin_208154ee6:;
			{
				return false;;
			}
		}
		_match_end_208154831:;
	};
	return true;;
}



inline void _21d720414_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _21c686b51_Args();;
	if ((_18913_args.len() < 2LL)) {
		_21d720414_showInfo();
		return;;
	};
	if (_21d72029e_processCommand(&(_18913_args))) {
		return;;
	};
	_203c60dae_compileCommand(&(_18913_args));
}



inline void _21d720d2c_enableVtp(void) {
	jule::Uintptr _199_hOut = _21c4c6bd3_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));;
	if ((_199_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I32 _2413_dwMode = 0LL;;
	if ((!(_21c4c9048_GetConsoleMode(_199_hOut, &(_2413_dwMode))))) {
		return;;
	};
	_2413_dwMode|=4LL;
	_21c4c960e_SetConsoleMode(_199_hOut, _2413_dwMode);
}



inline void _21d720ed6_init(void) {
	_21d720d2c_enableVtp();
}



inline void _203c5ce11_init(void) {
	_21b53643b_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_21c4ea91b_File> _203c5d1b9_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _21d5e012a_Dir((*(_4316_path)));;
	({
		auto except = static__21d5e159e_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__21d5e0a32_Create(_449_dir);
				if (!except.ok()) {
					_20337685a_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__21c4eb125_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_20337685a_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _203c5d32e_clearObjects(void) {
	({
		auto except = static__21c5d013d_Remove(_203c5e440_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__21d5e0c41_Remove(_203c5c707_OutDir);
}



inline void _203c5d62b_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_21d7131b5_Cmd> _7313_cmd = static__21d713616_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_21d5d9157_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _21d7137e2_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_20815d40b:;
					{
						static__203372e50_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_20815ca15:;
					{
						static__203372e50_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_20815cb47:;
					{
						static__203372e50_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_20815ca9d:;
			};
			_20337685a_Throw(jule::Str());
		}
	});
	jule::I32 _869_status = ({
		auto except = _21d713c32_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _21b53643b_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__203372e50_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_20337685a_Throw(jule::Str());
	};
	_203c5d32e_clearObjects();
}



inline jule::Bool _203c5d8c3_isCppSourceFile(jule::Str _9920_path) {
	jule::I32 _1009_offset = _21d5d7b17_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _21d6680d7_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _203c5dad2_pushCompCmdClang(jule::Str* _10726_cmd) {
	((*(_10726_cmd))).append("-Wno-everything ", 16);
	((*(_10726_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _21b5378d2_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_20815e550:;
			{
				((*(_10726_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_208161a08:;
			{
				((*(_10726_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_208161a6e:;
			{
				((*(_10726_cmd))).append("c++20", 5);
			}
		}
		_match_end_2081617d8:;
	};
	((*(_10726_cmd))).append(" ", 1);
	if (_21b538b25_Production) {
		((*(_10726_cmd))).append("-O3 ", 4);
		((*(_10726_cmd))).append("-flto ", 6);
		((*(_10726_cmd))).append("-DNDEBUG ", 9);
		((*(_10726_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_10726_cmd))).append("-O0 ", 4);
	};
}



inline void _203c5dce1_pushCompCmdGcc(jule::Str* _13324_cmd) {
	((*(_13324_cmd))).append("-w ", 3);
	((*(_13324_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _21b5378d2_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_208161e9d:;
			{
				((*(_13324_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_20816429c:;
			{
				((*(_13324_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_208164313:;
			{
				((*(_13324_cmd))).append("c++20", 5);
			}
		}
		_match_end_20816407c:;
	};
	((*(_13324_cmd))).append(" ", 1);
	if (_21b538b25_Production) {
		((*(_13324_cmd))).append("-O3 ", 4);
		((*(_13324_cmd))).append("-DNDEBUG ", 9);
		((*(_13324_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_13324_cmd))).append("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _203c5e242_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_203214e13_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_21b5376b2_CompilerPath);;
	jule::Str _16113_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _21b53643b_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_20816615b:;
			{
				_203c5dce1_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_208167206:;
			{
				_203c5dad2_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_2081670c4:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208167bda:;
		if (it != expr_end) {
			jule::Ptr<_221242a9e_ImportInfo> *_17112_u = it;
			{
				if (((*(_17112_u)).get()._field_CppLinked && _203c5d8c3_isCppSourceFile((*(_17112_u)).get()._field_Path))) {
					_16113_cmd+=(*(_17112_u)).get()._field_Path;
					(_16113_cmd).append(" ", 1);
				};
			}
			_iter_next_208167bda:;
			++it;
			goto _iter_begin_208167bda;
		}
		_iter_end_208167bda:;
	};
	if ((!(_203c5cc57_Out.empty()))) {
		(_16113_cmd).append("-o ", 3);
		_16113_cmd+=_203c5cc57_Out;
		(_16113_cmd).append(" ", 1);
	};
	_16113_cmd+=_15918_sourcePath;
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_208168191:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				(_16113_cmd).append(" ", 1);
				_16113_cmd+=(*(_18612_pass));
			}
			_iter_next_208168191:;
			++it;
			goto _iter_begin_208168191;
		}
		_iter_end_208168191:;
	};
	if (_21d71ac4a_Os.equal("windows", 7)) {
		(_16113_cmd).append(" -lshell32", 10);
	};
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _16113_cmd;
	return __jule_func_result;;
}



inline jule::Str _203c5e440_getCompilePath(void) {
	return _21d5de4c0_Join(jule::Slice<jule::Str>::make({_203c5c707_OutDir,_203c5c98d_OutName}));;
}



inline void _203c5e682_applyTargetIndependentOptimizations(jule::Ptr<_203214e13_IR>* _20545_ir) {
	jule::Ptr<_203351a66_Optimizer> _20613_opt = static__20335201c_New(_20545_ir);;
	_20335345d_Optimize(_20613_opt.ptr());
}



inline void _203c5e7e7_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _21b53643b_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_20816b3c5:;
			{
				_20337685a_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_20816b0c8:;
			{
				if (_21b5376b2_CompilerPath.empty()) {
					_21b5376b2_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_20816b13e:;
			{
				if (_21b5376b2_CompilerPath.empty()) {
					_21b5376b2_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_20816b062:;
			{
				_20337685a_Throw((jule::Str("invalid option value for --compiler: ", 37) + _21b53643b_Compiler));
			}
		}
		_match_end_20816abdd:;
	};
}



inline void _203c5e9b2_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_20337685a_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _203c5ebc1_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_20337685a_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _203c5edd0_checkTargetFlag(jule::Str* _24321_target) {
	if ((*(_24321_target)).empty()) {
		_20337685a_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2489_parts = _21d5d9157_Split((*(_24321_target)), jule::Str("-", 1), -1LL);;
	if ((_2489_parts.len() != 2LL)) {
		_20337685a_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _25310_os;;
	jule::Str _25314_arch;;
	({
		jule::Str ___jule_assign_arg = _2489_parts[0LL];
		jule::Str _1___jule_assign_arg = _2489_parts[1LL];
		_25310_os = ___jule_assign_arg;
		_25314_arch = _1___jule_assign_arg;
	});
	if ((!_25310_os.equal("native", 6))) {
		_203c5ebc1_checkTargetOs(_25310_os);
		_21d71ac4a_Os=_25310_os;
	};
	if ((!_25314_arch.equal("native", 6))) {
		_203c5e9b2_checkTargetArch(_25314_arch);
		_21d71b014_Arch=_25314_arch;
	};
	_21e6b99d9_UpdateTarget();
}



inline void _203c600de_checkOptFlag(jule::Str* _26618_opt) {
	if ((*(_26618_opt)).empty()) {
		_20337685a_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_208173432:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_208173597:;
			{
				_221535a95_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else {
			_case_begin_2081733bb:;
			{
				_20337685a_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_2081739c6:;
	};
}



inline void _203c60463_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _21b5378d2_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_208173a70:;
			{
				goto _match_end_20817492d;
			}
		}
		else {
			_case_begin_208174433:;
			{
				_20337685a_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _21b5378d2_CppStd));
			}
		}
		_match_end_20817492d:;
	};
}



inline jule::Slice<jule::Str> _203c606e9_checkFlags(jule::Slice<jule::Str>* _29116_args) {
	jule::Str _29213_opt = jule::Str("L0", 2);;
	jule::Str _29313_target = jule::Str("native-native", 13);;
	jule::Ptr<_203c57c74_FlagSet> _29513_fs = static__203c58060_New();;
	_208176ad9_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29213_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_208176ad9_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_208176ad9_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_203c5cc57_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21b537b79_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21b537dee_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_208176ad9_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_21b53643b_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_208176ad9_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_21b5376b2_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21b538b25_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21b538482_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21b53885b_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_208176ad9_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_21b5378d2_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_221533ee4_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_221534302_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2215345bb_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2215348c9_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_221534b93_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_221534e5c_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_221535226_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_221535600_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_20818010e_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2215358b9_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _203c58d74_Parse(_29513_fs.ptr(), (*(_29116_args)));
		(except.ok()) ? (except.result) : ({
			_20337685a_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_203c5e7e7_checkCompilerFlag();
	_203c60463_checkCppStdFlag();
	_203c5edd0_checkTargetFlag(&(_29313_target));
	_203c600de_checkOptFlag(&(_29213_opt));
	return _31813_content;;
}



inline void _203c60908_setupSemaFlags(jule::I32* _33124_flags) {
	if (_21b537b79_Shadowing) {
		(*(_33124_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_203214e13_IR> _203c60ba0_buildIr(jule::Slice<jule::Str>* _33713_args) {
	jule::Slice<jule::Str> _3389_content = _203c606e9_checkFlags(_33713_args);;
	jule::I32 _34013_semaFlags = static_cast<jule::I32>(0LL);;
	_203c60908_setupSemaFlags(&(_34013_semaFlags));
	if ((_3389_content.len() == 0LL)) {
		_20337685a_Throw(_21d675a2e_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_20337685a_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21d5dea0e_Abs(_3389_content[0LL]);
		_34814_path = __jule_assign_result.__jule_result_arg0;
		_34820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34820_ok))) {
		_20337685a_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_21c4ed05b_Status> _3549_inf = ({
		auto except = static__21d5e159e_Of(_21d71a19a_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_20337685a_Throw(_21d675a2e_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_21c4ed05b_Status>(nullptr);});
	});;
	if ((!(_21c4ed468_IsDir(_3549_inf.ptr())))) {
		_20337685a_Throw(_21d675a2e_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_203214e13_IR> _36214_ir;;
	jule::Slice<_21d6755de_Log> _36218_logs;;
	({
		__jule_tuple_x_203214e13_IR__jule_tuple_s_21d6755de_Log __jule_assign_result = static__203215397_Build(_34814_path, _34013_semaFlags);
		_36214_ir = __jule_assign_result.__jule_result_arg0;
		_36218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_20337685a_Throw(_21d675a2e_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_34814_path, &__jule_any_type5)})));
	};
	if ((_36218_logs != nullptr)) {
		static__203375e31_PrintLogs(&(_36218_logs));
		_20337685a_Throw(jule::Str());
	};
	return _36214_ir;;
}



inline void _203c60dae_compileCommand(jule::Slice<jule::Str>* _37724_args) {
	(*(_37724_args))=(*(_37724_args)).slice(1LL);
	if ((*(_37724_args))[0LL].equal("test", 4)) {
		_21b5381b8_Test=true;
		(*(_37724_args))=(*(_37724_args)).slice(1LL);
	};
	jule::Ptr<_203214e13_IR> _38313_ir = _203c60ba0_buildIr(_37724_args);;
	;
	if ((!(_21b5381b8_Test))) {
		jule::Ptr<_2211d9ccc_Fn> _38817_main = _221246b6e_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_38817_main == nullptr)) {
			_20337685a_Throw(_21d675a2e_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_203c5e682_applyTargetIndependentOptimizations(&(_38313_ir));
	_2032162bb_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _203c5e242_genCompileCmd(_203c5e440_getCompilePath(), &(_38313_ir));
		_39910_compiler = __jule_assign_result.__jule_result_arg0;
		_39920_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_203bd520c_ObjectCoder> _40113_oc = static__203bd562a_New(&(_38313_ir), _203bd386a_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_21b5381b8_Test) {
		jule::Ptr<_203b3e93b_TestCoder> _40617_tc = static__203b3edae_New(&(_40113_oc));;
		_203b410e1_Serialize(_40617_tc);
	} else {
		_203be12d4_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _203c5e440_getCompilePath();;
	jule::Ptr<_21c4ea91b_File> _41313_file = _203c5d1b9_openOutput(&(_4129_path));;
	({
		auto except = _21c4ec346_WriteStr(_41313_file.ptr(), &(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_20337685a_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _21c4ec522_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_21b537dee_Transpilation))) {
		_203c5d62b_compileIr(_39910_compiler, _39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_21d71b146_init();
	_21e6b9b4e_init();
	_21d720ed6_init();
	_203c5ce11_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}